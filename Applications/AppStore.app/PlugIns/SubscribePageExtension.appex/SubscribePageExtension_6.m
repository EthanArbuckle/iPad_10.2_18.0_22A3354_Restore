uint64_t sub_10035DB24(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  id v35;
  _QWORD v36[5];
  uint64_t v37[5];

  v35 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v34 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for LinkableText(0);
  v37[3] = v17;
  v37[4] = sub_10000E99C((unint64_t *)&qword_100809170, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v37[0] = a1;
  sub_1000194E4(a3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, (uint64_t *)&unk_1007F7740);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F7740);
    v19 = a3;
    v20 = v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v35;
      objc_msgSend(v35, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v35;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_100011020((uint64_t)v37, (uint64_t)v36);
  v22 = sub_10000E99C(&qword_100809178, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    v23 = v34;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v34, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23);
    }
    objc_msgSend(v20, "frame");
    v25 = sub_100011064(v36, v36[3]);
    sub_10036205C(*v25, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v36);
  ObjectType = swift_getObjectType();
  v27 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v27)
    v28 = v27;
  else
    v28 = 0;
  if (v27)
    v29 = v20;
  else
    v29 = 0;
  if (v29)
  {
    v30 = v20;
    objc_msgSend(v30, "frame");
    v31 = sub_10035DEB4(v37[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, &qword_100809178, (uint64_t)&protocol conformance descriptor for LinkableText);
    v32 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v31, v32, v28);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
}

uint64_t sub_10035DEB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v10 = type metadata accessor for ImpressionMetrics.ID(0);
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  v21 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v18);
  v22 = sub_10000E99C(a4, a3, a5);
  dispatch thunk of ViewModel.impressionMetrics.getter(v21, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007F7740);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  if (!*(_QWORD *)(a2
                  + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    return 0;
  }
  ImpressionsCalculator.addElement(_:at:)(v20);
  ImpressionMetrics.id.getter(v23);
  v24 = ImpressionsCalculator.makeChildCalculator(for:)(v12);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  return v24;
}

uint64_t sub_10035E0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MixedMediaLockup(0);
  v18[3] = v11;
  v18[4] = sub_10000E99C(&qword_1007F4C40, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v18[0] = a1;
  sub_100011020((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E99C((unint64_t *)&unk_1008090F0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100011064(v17, v17[3]);
    sub_100360654(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v17);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
}

uint64_t sub_10035E28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialSearchResult(0, v9);
  v19[3] = v12;
  v19[4] = sub_10000E99C(&qword_100809120, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v19[0] = a1;
  sub_100011020((uint64_t)v19, (uint64_t)v18);
  v13 = sub_10000E99C(&qword_100809128, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100011064(v18, v18[3]);
    sub_100360B80(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_10035E44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InAppPurchaseLockup(0, v9);
  v19[3] = v12;
  v19[4] = sub_10000E99C(&qword_100809130, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v19[0] = a1;
  sub_100011020((uint64_t)v19, (uint64_t)v18);
  v13 = sub_10000E99C((unint64_t *)&unk_100809138, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100011064(v18, v18[3]);
    sub_1003610AC(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_10035E60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LockupCollectionSearchResult(0, v9);
  v19[3] = v12;
  v19[4] = sub_10000E99C(&qword_100800800, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v19[0] = a1;
  sub_100011020((uint64_t)v19, (uint64_t)v18);
  v13 = sub_10000E99C((unint64_t *)&unk_100809148, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100011064(v18, v18[3]);
    sub_1003615D8(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_10035E7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AppEventSearchResult(0);
  v18[3] = v11;
  v18[4] = sub_10000E99C((unint64_t *)&qword_1007F4890, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v18[0] = a1;
  sub_100011020((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E99C(&qword_100809158, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100011064(v17, v17[3]);
    sub_100361B04(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v17);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
}

uint64_t sub_10035E98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LinkableText(0);
  v18[3] = v11;
  v18[4] = sub_10000E99C((unint64_t *)&qword_100809170, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v18[0] = a1;
  sub_100011020((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E99C(&qword_100809178, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100011064(v17, v17[3]);
    sub_100362764(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v17);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
}

uint64_t sub_10035EB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60[2];
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[6];

  v57 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v50 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v58 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v55 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  v19 = type metadata accessor for MixedMediaLockup(0);
  v68[3] = v19;
  v68[4] = sub_10000E99C(&qword_1007F4C40, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v68[0] = a1;
  sub_100011020((uint64_t)v68, (uint64_t)v62);
  swift_retain(a1);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v21 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v60, v62, v20, v21, 6))
  {
    v56 = v5;
    sub_100010F3C(v60, (uint64_t)v65);
    v22 = v66;
    v23 = v67;
    sub_100011064(v65, v66);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v50 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v50 + 32;
        v54 = v19;
        v51 = v13;
        v52 = v14;
        v53 = v18;
        do
        {
          sub_100011020(v26, (uint64_t)v62);
          v28 = v63;
          v27 = v64;
          sub_100011064(v62, v63);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E99C((unint64_t *)&unk_1008090F0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v31 = v58;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100011088(v58, (uint64_t *)&unk_1007F7740);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v59, 1, 1, v33);
            }
            else
            {
              v34 = v59;
              v35 = v58;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v56;
            if (v57)
            {
              sub_1000194E4(v59, (uint64_t)v56, &qword_100813520);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100011088(v37, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v51;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v52;
              v45 = v55;
              v46 = v53;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.addElement(_:at:)(v45);
              v47 = *(void (**)(char *, uint64_t))(v14 + 8);
              v48 = v45;
              v18 = v46;
              v47(v48, v13);
              sub_100011088(v59, &qword_100813520);
              v47(v46, v13);
              v19 = v54;
            }
            else
            {
              sub_100011088(v59, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v50);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v65);
  }
  else
  {
    v61 = 0;
    memset(v60, 0, sizeof(v60));
    sub_100011088((uint64_t)v60, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v68);
}

uint64_t sub_10035F0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v51 - v18;
  v20 = type metadata accessor for EditorialSearchResult(0, v17);
  v69[3] = v20;
  v69[4] = sub_10000E99C(&qword_100809120, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v69[0] = a1;
  sub_100011020((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v22 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v61, v63, v21, v22, 6))
  {
    v57 = v5;
    sub_100010F3C(v61, (uint64_t)v66);
    v23 = v67;
    v24 = v68;
    sub_100011064(v66, v67);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v51 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v51 + 32;
        v55 = v20;
        v52 = v13;
        v53 = v14;
        v54 = v19;
        do
        {
          sub_100011020(v27, (uint64_t)v63);
          v29 = v64;
          v28 = v65;
          sub_100011064(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E99C(&qword_100809128, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100011088(v59, (uint64_t *)&unk_1007F7740);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v60, 1, 1, v34);
            }
            else
            {
              v35 = v60;
              v36 = v59;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v57;
            if (v58)
            {
              sub_1000194E4(v60, (uint64_t)v57, &qword_100813520);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v53;
              v46 = v56;
              v47 = v54;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.addElement(_:at:)(v46);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v46;
              v19 = v47;
              v48(v49, v13);
              sub_100011088(v60, &qword_100813520);
              v48(v47, v13);
              v20 = v55;
            }
            else
            {
              sub_100011088(v60, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100011088((uint64_t)v61, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
}

uint64_t sub_10035F61C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v51 - v18;
  v20 = type metadata accessor for InAppPurchaseLockup(0, v17);
  v69[3] = v20;
  v69[4] = sub_10000E99C(&qword_100809130, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v69[0] = a1;
  sub_100011020((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v22 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v61, v63, v21, v22, 6))
  {
    v57 = v5;
    sub_100010F3C(v61, (uint64_t)v66);
    v23 = v67;
    v24 = v68;
    sub_100011064(v66, v67);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v51 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v51 + 32;
        v55 = v20;
        v52 = v13;
        v53 = v14;
        v54 = v19;
        do
        {
          sub_100011020(v27, (uint64_t)v63);
          v29 = v64;
          v28 = v65;
          sub_100011064(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E99C((unint64_t *)&unk_100809138, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v32 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100011088(v59, (uint64_t *)&unk_1007F7740);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v60, 1, 1, v34);
            }
            else
            {
              v35 = v60;
              v36 = v59;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v57;
            if (v58)
            {
              sub_1000194E4(v60, (uint64_t)v57, &qword_100813520);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v53;
              v46 = v56;
              v47 = v54;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.addElement(_:at:)(v46);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v46;
              v19 = v47;
              v48(v49, v13);
              sub_100011088(v60, &qword_100813520);
              v48(v47, v13);
              v20 = v55;
            }
            else
            {
              sub_100011088(v60, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100011088((uint64_t)v61, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
}

uint64_t sub_10035FB84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v51 - v18;
  v20 = type metadata accessor for LockupCollectionSearchResult(0, v17);
  v69[3] = v20;
  v69[4] = sub_10000E99C(&qword_100800800, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v69[0] = a1;
  sub_100011020((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v22 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v61, v63, v21, v22, 6))
  {
    v57 = v5;
    sub_100010F3C(v61, (uint64_t)v66);
    v23 = v67;
    v24 = v68;
    sub_100011064(v66, v67);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v51 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v51 + 32;
        v55 = v20;
        v52 = v13;
        v53 = v14;
        v54 = v19;
        do
        {
          sub_100011020(v27, (uint64_t)v63);
          v29 = v64;
          v28 = v65;
          sub_100011064(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E99C((unint64_t *)&unk_100809148, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100011088(v59, (uint64_t *)&unk_1007F7740);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v60, 1, 1, v34);
            }
            else
            {
              v35 = v60;
              v36 = v59;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v57;
            if (v58)
            {
              sub_1000194E4(v60, (uint64_t)v57, &qword_100813520);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v53;
              v46 = v56;
              v47 = v54;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.addElement(_:at:)(v46);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v46;
              v19 = v47;
              v48(v49, v13);
              sub_100011088(v60, &qword_100813520);
              v48(v47, v13);
              v20 = v55;
            }
            else
            {
              sub_100011088(v60, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100011088((uint64_t)v61, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
}

uint64_t sub_1003600EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60[2];
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[6];

  v57 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v50 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v58 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v55 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  v19 = type metadata accessor for AppEventSearchResult(0);
  v68[3] = v19;
  v68[4] = sub_10000E99C((unint64_t *)&qword_1007F4890, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v68[0] = a1;
  sub_100011020((uint64_t)v68, (uint64_t)v62);
  swift_retain(a1);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v21 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v60, v62, v20, v21, 6))
  {
    v56 = v5;
    sub_100010F3C(v60, (uint64_t)v65);
    v22 = v66;
    v23 = v67;
    sub_100011064(v65, v66);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v50 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v50 + 32;
        v54 = v19;
        v51 = v13;
        v52 = v14;
        v53 = v18;
        do
        {
          sub_100011020(v26, (uint64_t)v62);
          v28 = v63;
          v27 = v64;
          sub_100011064(v62, v63);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E99C(&qword_100809158, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v31 = v58;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100011088(v58, (uint64_t *)&unk_1007F7740);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v59, 1, 1, v33);
            }
            else
            {
              v34 = v59;
              v35 = v58;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v56;
            if (v57)
            {
              sub_1000194E4(v59, (uint64_t)v56, &qword_100813520);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100011088(v37, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v51;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v52;
              v45 = v55;
              v46 = v53;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.addElement(_:at:)(v45);
              v47 = *(void (**)(char *, uint64_t))(v14 + 8);
              v48 = v45;
              v18 = v46;
              v47(v48, v13);
              sub_100011088(v59, &qword_100813520);
              v47(v46, v13);
              v19 = v54;
            }
            else
            {
              sub_100011088(v59, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v50);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v65);
  }
  else
  {
    v61 = 0;
    memset(v60, 0, sizeof(v60));
    sub_100011088((uint64_t)v60, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v68);
}

uint64_t sub_100360654(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for MixedMediaLockup(0);
  v69[3] = v19;
  v69[4] = sub_10000E99C(&qword_1007F4C40, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v69[0] = a1;
  sub_100011020((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v21 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010F3C(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100011064(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_100011020(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100011064(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E99C((unint64_t *)&unk_1008090F0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100011088(v59, (uint64_t *)&unk_1007F7740);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_1000194E4(v60, (uint64_t)v57, &qword_100813520);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100011088(v37, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100011088(v60, &qword_100813520);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100011088(v60, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100011088((uint64_t)v61, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
}

uint64_t sub_100360B80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for EditorialSearchResult(0, v17);
  v70[3] = v20;
  v70[4] = sub_10000E99C(&qword_100809120, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v70[0] = a1;
  sub_100011020((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v22 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v62, v64, v21, v22, 6))
  {
    v58 = v5;
    sub_100010F3C(v62, (uint64_t)v67);
    v23 = v68;
    v24 = v69;
    sub_100011064(v67, v68);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v52 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v52 + 32;
        v56 = v20;
        v53 = v13;
        v54 = v14;
        v55 = v19;
        do
        {
          sub_100011020(v27, (uint64_t)v64);
          v29 = v65;
          v28 = v66;
          sub_100011064(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E99C(&qword_100809128, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100011088(v60, (uint64_t *)&unk_1007F7740);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v58;
            if (v59)
            {
              sub_1000194E4(v61, (uint64_t)v58, &qword_100813520);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v54;
              v46 = v57;
              v47 = v55;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              v48 = swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.removeElement(_:)(v46, v48);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v46;
              v19 = v47;
              v49(v50, v13);
              sub_100011088(v61, &qword_100813520);
              v49(v47, v13);
              v20 = v56;
            }
            else
            {
              sub_100011088(v61, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v64);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_100011088((uint64_t)v62, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v70);
}

uint64_t sub_1003610AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for InAppPurchaseLockup(0, v17);
  v70[3] = v20;
  v70[4] = sub_10000E99C(&qword_100809130, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v70[0] = a1;
  sub_100011020((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v22 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v62, v64, v21, v22, 6))
  {
    v58 = v5;
    sub_100010F3C(v62, (uint64_t)v67);
    v23 = v68;
    v24 = v69;
    sub_100011064(v67, v68);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v52 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v52 + 32;
        v56 = v20;
        v53 = v13;
        v54 = v14;
        v55 = v19;
        do
        {
          sub_100011020(v27, (uint64_t)v64);
          v29 = v65;
          v28 = v66;
          sub_100011064(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E99C((unint64_t *)&unk_100809138, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v32 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100011088(v60, (uint64_t *)&unk_1007F7740);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v58;
            if (v59)
            {
              sub_1000194E4(v61, (uint64_t)v58, &qword_100813520);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v54;
              v46 = v57;
              v47 = v55;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              v48 = swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.removeElement(_:)(v46, v48);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v46;
              v19 = v47;
              v49(v50, v13);
              sub_100011088(v61, &qword_100813520);
              v49(v47, v13);
              v20 = v56;
            }
            else
            {
              sub_100011088(v61, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v64);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_100011088((uint64_t)v62, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v70);
}

uint64_t sub_1003615D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for LockupCollectionSearchResult(0, v17);
  v70[3] = v20;
  v70[4] = sub_10000E99C(&qword_100800800, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v70[0] = a1;
  sub_100011020((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v22 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v62, v64, v21, v22, 6))
  {
    v58 = v5;
    sub_100010F3C(v62, (uint64_t)v67);
    v23 = v68;
    v24 = v69;
    sub_100011064(v67, v68);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v52 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v52 + 32;
        v56 = v20;
        v53 = v13;
        v54 = v14;
        v55 = v19;
        do
        {
          sub_100011020(v27, (uint64_t)v64);
          v29 = v65;
          v28 = v66;
          sub_100011064(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E99C((unint64_t *)&unk_100809148, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100011088(v60, (uint64_t *)&unk_1007F7740);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v58;
            if (v59)
            {
              sub_1000194E4(v61, (uint64_t)v58, &qword_100813520);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v54;
              v46 = v57;
              v47 = v55;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              v48 = swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.removeElement(_:)(v46, v48);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v46;
              v19 = v47;
              v49(v50, v13);
              sub_100011088(v61, &qword_100813520);
              v49(v47, v13);
              v20 = v56;
            }
            else
            {
              sub_100011088(v61, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v64);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_100011088((uint64_t)v62, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v70);
}

uint64_t sub_100361B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for AppEventSearchResult(0);
  v69[3] = v19;
  v69[4] = sub_10000E99C((unint64_t *)&qword_1007F4890, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v69[0] = a1;
  sub_100011020((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v21 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010F3C(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100011064(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_100011020(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100011064(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E99C(&qword_100809158, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100011088(v59, (uint64_t *)&unk_1007F7740);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_1000194E4(v60, (uint64_t)v57, &qword_100813520);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100011088(v37, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100011088(v60, &qword_100813520);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100011088(v60, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100011088((uint64_t)v61, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
}

uint64_t sub_100362030()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100362054()
{
  uint64_t v0;

  sub_10035B4E0(v0);
}

uint64_t sub_10036205C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60[2];
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[6];

  v57 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v50 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v58 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v55 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  v19 = type metadata accessor for LinkableText(0);
  v68[3] = v19;
  v68[4] = sub_10000E99C((unint64_t *)&qword_100809170, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v68[0] = a1;
  sub_100011020((uint64_t)v68, (uint64_t)v62);
  swift_retain(a1);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v21 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v60, v62, v20, v21, 6))
  {
    v56 = v5;
    sub_100010F3C(v60, (uint64_t)v65);
    v22 = v66;
    v23 = v67;
    sub_100011064(v65, v66);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v50 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v50 + 32;
        v54 = v19;
        v51 = v13;
        v52 = v14;
        v53 = v18;
        do
        {
          sub_100011020(v26, (uint64_t)v62);
          v28 = v63;
          v27 = v64;
          sub_100011064(v62, v63);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E99C(&qword_100809178, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
            v31 = v58;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100011088(v58, (uint64_t *)&unk_1007F7740);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v59, 1, 1, v33);
            }
            else
            {
              v34 = v59;
              v35 = v58;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v56;
            if (v57)
            {
              sub_1000194E4(v59, (uint64_t)v56, &qword_100813520);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100011088(v37, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v51;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v52;
              v45 = v55;
              v46 = v53;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.addElement(_:at:)(v45);
              v47 = *(void (**)(char *, uint64_t))(v14 + 8);
              v48 = v45;
              v18 = v46;
              v47(v48, v13);
              sub_100011088(v59, &qword_100813520);
              v47(v46, v13);
              v19 = v54;
            }
            else
            {
              sub_100011088(v59, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v50);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v65);
  }
  else
  {
    v61 = 0;
    memset(v60, 0, sizeof(v60));
    sub_100011088((uint64_t)v60, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v68);
}

void sub_1003625C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v4 = v3;
  v8 = type metadata accessor for SearchTransparencyView();
  v9 = static UICollectionReusableView.elementKind.getter();
  if (v9 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v9, v10, 0);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
      return;
  }
  v14 = swift_dynamicCastClass(a1, v8);
  if (v14)
  {
    v15 = (void *)v14;
    v24 = a1;
    v16 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter();
    if (v16)
    {
      v17 = v16;
      v18 = LinkableText.linkedSubstrings.getter();
      sub_100197870(v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1000CAE14);
      v20 = v19;
      v21 = swift_bridgeObjectRelease(v18);
      v22 = LinkableText.styledText.getter(v21);
      sub_10005A32C(v22, 0, v20);
      swift_bridgeObjectRelease(v20);
      objc_msgSend(v15, "setNeedsLayout", swift_release(v22).n128_f64[0]);
      swift_retain(v17);
      sub_10035DB24(v23, v24, v4);
      swift_release_n(v17, 2);

    }
    else
    {

    }
  }
}

uint64_t sub_100362764(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for LinkableText(0);
  v69[3] = v19;
  v69[4] = sub_10000E99C((unint64_t *)&qword_100809170, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v69[0] = a1;
  sub_100011020((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v21 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010F3C(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100011064(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_100011020(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100011064(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E99C(&qword_100809178, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100011088(v59, (uint64_t *)&unk_1007F7740);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_1000194E4(v60, (uint64_t)v57, &qword_100813520);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100011088(v37, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100011088(v60, &qword_100813520);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100011088(v60, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100011088((uint64_t)v61, &qword_100809100);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
}

uint64_t type metadata accessor for CappedSizeDynamicTypeButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100809188;
  if (!qword_100809188)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CappedSizeDynamicTypeButton);
  return result;
}

uint64_t sub_100362CCC(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_100854028);
}

double sub_100362D14(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v21;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v1[qword_100809180];
  if (v11)
  {
    if (a1)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v12 == v15 && v14 == v16)
      {
        v8.n128_u64[0] = swift_bridgeObjectRelease_n(v14, 2).n128_u64[0];
        return v8.n128_f64[0];
      }
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
      swift_bridgeObjectRelease(v14);
      v8 = swift_bridgeObjectRelease(v18);
      if ((v19 & 1) != 0)
        return v8.n128_f64[0];
    }
  }
  else if (!a1)
  {
    return v8.n128_f64[0];
  }
  dispatch thunk of DynamicTypeButton.fontUseCase.getter(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100072A68((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    dispatch thunk of DynamicTypeButton.updateFont(to:)(v10);
    objc_msgSend(v1, "setNeedsLayout");
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v8.n128_f64[0];
}

uint64_t sub_100362EA8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  Class isa;
  id v13;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = *(void **)(v0 + qword_100809180);
  if (v1)
  {
    v2 = type metadata accessor for DynamicTypeButton(0);
    v3 = (uint64_t (*)(void))method lookup function for DynamicTypeButton(v2, &method descriptor for DynamicTypeButton.traitCollectionForFontUseCases.getter);
    v4 = v1;
    v5 = v3();
    v6 = objc_msgSend((id)v5, "preferredContentSizeCategory");

    LOBYTE(v5) = static UIContentSizeCategory.> infix(_:_:)(v6, v4);
    if ((v5 & 1) != 0)
    {
      v7 = sub_10000DF3C(&qword_1007F5840);
      v8 = swift_allocObject(v7, 48, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100671250;
      *(_QWORD *)(v8 + 32) = v3();
      v9 = (void *)objc_opt_self(UITraitCollection);
      v10 = objc_msgSend(v9, "traitCollectionWithPreferredContentSizeCategory:", v4);
      *(_QWORD *)(v8 + 40) = v10;
      specialized Array._endMutation()(v10);
      v11 = v8;
      sub_10003B02C();
      isa = Array._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v9, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

      return (uint64_t)v13;
    }

  }
  v15 = type metadata accessor for DynamicTypeButton(0);
  v16 = (uint64_t (*)(void))method lookup function for DynamicTypeButton(v15, &method descriptor for DynamicTypeButton.traitCollectionForFontUseCases.getter);
  return v16();
}

id sub_10036302C(char *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  *(_QWORD *)&a1[qword_100809180] = 0;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for CappedSizeDynamicTypeButton(0);
  return objc_msgSendSuper2(&v10, "initWithFrame:", a2, a3, a4, a5);
}

void sub_1003630A8()
{
  uint64_t v0;

}

id sub_1003630B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CappedSizeDynamicTypeButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1003630EC(uint64_t a1)
{

}

uint64_t sub_1003630FC()
{
  return type metadata accessor for CappedSizeDynamicTypeButton(0);
}

uint64_t sub_100363104(void *a1, __n128 a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v11;
  __n128 v12;
  _QWORD *v13;
  __n128 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[5];
  _QWORD v31[3];
  uint64_t v32;
  void *v33;

  v6 = v5;
  v11 = a2.n128_u64[0];
  VerticalStack.init(with:)(sub_100072238, 0, a2);
  if (*(_BYTE *)(v6 + 1) == 1)
  {
    v32 = type metadata accessor for Resize(0, v12);
    v33 = &protocol witness table for Resize;
    v13 = sub_1000117C0(v31);
    v14.n128_u64[0] = v11;
    sub_1003632E8(a1, (uint64_t)v13, v14, a3, a4, a5);
  }
  else
  {
    v15 = *(double *)(v6 + 8);
    v16 = *(double *)(v6 + 16);
    v17 = *(double *)(v6 + 32);
    sub_100011020(v6 + 104, (uint64_t)v30);
    v32 = type metadata accessor for Margins(0);
    v33 = &protocol witness table for Margins;
    sub_1000117C0(v31);
    Margins.init(insets:child:)(v30, v15, v16, 0.0, v17);
  }
  VerticalStack.add(_:with:)(v31, 0, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v18 = static UIEdgeInsets.horizontal(left:right:)(*(double *)(v6 + 16), *(double *)(v6 + 32));
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = *(_QWORD *)(v6 + 168);
  v26 = *(_QWORD *)(v6 + 176);
  sub_100011064((_QWORD *)(v6 + 144), v25);
  Measurable.placeable.getter(v31, v25, *(_QWORD *)(v26 + 8));
  v30[3] = type metadata accessor for Margins(0);
  v30[4] = &protocol witness table for Margins;
  sub_1000117C0(v30);
  Margins.init(insets:child:)(v31, v18, v20, v22, v24);
  v28 = static Center.Axis.vertical.getter(v27);
  v32 = type metadata accessor for Center(0);
  v33 = &protocol witness table for Center;
  sub_1000117C0(v31);
  Center.init(_:filling:)(v30, v28);
  VerticalStack.add(_:with:)(v31, 0, 0);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_1003632E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double (**v17)(double, double);
  uint64_t v18;
  uint64_t v19;
  double (**v20)(double, double);
  uint64_t v21;
  uint64_t v22;
  double (**v23)(double, double);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  double v29;
  double v30;
  double Width;
  id v32;
  char v33;
  double v34;
  double v35;
  _QWORD *v36;
  double (*v37)(double (**)(double, double), uint64_t, uint64_t);
  uint64_t v38;
  double (**v39)(double, double);
  __n128 v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  double (*v44)(double, double);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  double (**v51)(double, double);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[5];
  _QWORD v56[3];
  uint64_t v57;
  void *v58;
  CGRect v59;

  v7 = v6;
  v12 = a3.n128_f64[0];
  v52 = a2;
  v13 = type metadata accessor for Resize.Rule(0, a3);
  v48 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v51 = (double (**)(double, double))((char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v17 = (double (**)(double, double))((char *)&v46 - v16);
  __chkstk_darwin(v18);
  v20 = (double (**)(double, double))((char *)&v46 - v19);
  __chkstk_darwin(v21);
  v23 = (double (**)(double, double))((char *)&v46 - v22);
  v24 = type metadata accessor for Margins(0);
  v54 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for DisjointStack(0);
  v53 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  DisjointStack.init(with:)(0, 0);
  v49 = v28;
  DisjointStack.insert(_:at:with:)(v7 + 64, 0, 0, sub_10036373C, 0);
  v29 = *(double *)(v7 + 16);
  v30 = *(double *)(v7 + 32);
  v59.origin.x = CGRect.subtracting(insets:)(*(double *)(v7 + 8), v29, *(double *)(v7 + 24), v30, v12, a4, a5, a6);
  Width = CGRectGetWidth(v59);
  v32 = objc_msgSend(a1, "preferredContentSizeCategory");
  v33 = static UIContentSizeCategory.>= infix(_:_:)(v32, UIContentSizeCategoryExtraLarge);

  if ((v33 & 1) != 0)
  {
    if (Width * 0.1 > v30)
      v34 = Width * 0.1;
    else
      v34 = v30;
  }
  else
  {
    v34 = *(double *)(v7 + 56);
  }
  v35 = *(double *)(v7 + 40);
  sub_100011020(v7 + 104, (uint64_t)v56);
  v47 = v26;
  Margins.init(insets:child:)(v56, 0.0, v29, v35, v34);
  v55[3] = v24;
  v55[4] = &protocol witness table for Margins;
  v46 = v24;
  v36 = sub_1000117C0(v55);
  (*(void (**)(_QWORD *, char *, uint64_t))(v54 + 16))(v36, v26, v24);
  *v23 = sub_1000A2170;
  v23[1] = 0;
  v37 = *(double (**)(double (**)(double, double), uint64_t, uint64_t))(v48 + 104);
  v37(v23, enum case for Resize.Rule.recalculated(_:), v13);
  v38 = enum case for Resize.Rule.unchanged(_:);
  v37(v20, enum case for Resize.Rule.unchanged(_:), v13);
  v37(v17, v38, v13);
  v39 = v51;
  v40.n128_f64[0] = v37(v51, v38, v13);
  v57 = type metadata accessor for Resize(0, v40);
  v58 = &protocol witness table for Resize;
  sub_1000117C0(v56);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v55, v23, v20, v17, v39);
  v41 = v49;
  DisjointStack.insert(_:at:with:)(v56, 1, 0, sub_100363880, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v56);
  v42 = v50;
  v57 = v50;
  v58 = &protocol witness table for DisjointStack;
  v43 = sub_1000117C0(v56);
  (*(void (**)(_QWORD *, char *, uint64_t))(v53 + 16))(v43, v41, v42);
  v37(v23, v38, v13);
  v44 = *(double (**)(double, double))(v7 + 48);
  v20[3] = (double (*)(double, double))&type metadata for CGFloat;
  v20[4] = (double (*)(double, double))&protocol witness table for CGFloat;
  *v20 = v44;
  v37(v20, enum case for Resize.Rule.replaced(_:), v13);
  v37(v17, v38, v13);
  v37(v39, v38, v13);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v56, v23, v20, v17, v39);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v41, v42);
}

uint64_t sub_10036373C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, uint64_t, uint64_t);
  uint64_t v8;

  v0 = type metadata accessor for DisjointStack.EdgePosition(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ZeroDimension(0);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v3);
  static ZeroDimension.zero.getter();
  v5 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v6 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v1 + 104);
  v6(v3, enum case for DisjointStack.EdgePosition.anchored(_:), v0);
  DisjointStack.Properties.topEdge.setter(v3);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v3);
  static ZeroDimension.zero.getter();
  v6(v3, v5, v0);
  DisjointStack.Properties.leadingEdge.setter(v3);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v3);
  static ZeroDimension.zero.getter();
  v6(v3, v5, v0);
  DisjointStack.Properties.bottomEdge.setter(v3);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v3);
  static ZeroDimension.zero.getter();
  v6(v3, v5, v0);
  return DisjointStack.Properties.trailingEdge.setter(v3);
}

uint64_t sub_100363880()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *, uint64_t, uint64_t);
  uint64_t v7;

  v0 = type metadata accessor for DisjointStack.EdgePosition(0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2[3] = &type metadata for Double;
  v2[4] = &protocol witness table for Double;
  *v2 = 0;
  v3 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v5 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v5(v2, enum case for DisjointStack.EdgePosition.anchored(_:), v0);
  DisjointStack.Properties.bottomEdge.setter(v2);
  v2[3] = &type metadata for Double;
  v2[4] = &protocol witness table for Double;
  *v2 = 0;
  v5(v2, v3, v0);
  return DisjointStack.Properties.leadingEdge.setter(v2);
}

uint64_t destroy for ListTodayCardLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 8);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 13);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 18);
}

_OWORD *initializeWithCopy for ListTodayCardLayout(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(_OWORD *)((char *)a2 + 88);
  *(_OWORD *)((char *)a1 + 88) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4));
  v7 = a2[8];
  a1[8] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 104, (uint64_t)a2 + 104);
  v8 = *(_OWORD *)((char *)a2 + 168);
  *(_OWORD *)((char *)a1 + 168) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
  return a1;
}

uint64_t assignWithCopy for ListTodayCardLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_10001216C((_QWORD *)(a1 + 64), (_QWORD *)(a2 + 64));
  sub_10001216C((_QWORD *)(a1 + 104), (_QWORD *)(a2 + 104));
  sub_10001216C((_QWORD *)(a1 + 144), (_QWORD *)(a2 + 144));
  return a1;
}

uint64_t assignWithTake for ListTodayCardLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 64));
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 104));
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 144));
  v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListTodayCardLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListTodayCardLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 88) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListTodayCardLayout()
{
  return &type metadata for ListTodayCardLayout;
}

double sub_100363C0C(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v13;

  v6 = type metadata accessor for VerticalStack(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8.n128_u64[0] = 0;
  sub_100363104(a1, v8, 0.0, a2, a3);
  v11 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, &protocol witness table for VerticalStack, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v11;
}

uint64_t sub_100363CF8(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v17;

  v10 = type metadata accessor for VerticalStack(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = a2;
  sub_100363104(a1, v12, a3, a4, a5);
  v15 = dispatch thunk of Placeable.place(at:with:)(a1, v10, &protocol witness table for VerticalStack, a2);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v15);
}

double sub_100363DD4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  double result;

  v2 = *(_BYTE *)(v1 + 1);
  result = *(double *)(v1 + 56);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_BYTE *)(a1 + 1) = v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(double *)(a1 + 56) = result;
  return result;
}

__n128 initializeWithTake for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ListTodayCardLayout.Metrics(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[64])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ListTodayCardLayout.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListTodayCardLayout.Metrics()
{
  return &type metadata for ListTodayCardLayout.Metrics;
}

void sub_100363ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  void *v27;
  double v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  _OWORD v40[2];
  uint64_t v41;

  v4 = v3;
  v7 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v7);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_lockupView;
  v15 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_lockupView];
  if (v15
    || (v16 = objc_msgSend(v4, "traitCollection", v11),
        v17 = sub_10055AFA8(v16),
        v16,
        sub_10055A914(v17),
        sub_10055A920(0),
        (v15 = *(void **)&v4[v14]) != 0))
  {
    v18 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
    v19 = v15;
    sub_1001B6660(a1, (uint64_t)v13, a3, 0, 0, 0);
    sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F7710);
    v21 = Lockup.icon.getter(v20);
    if (v21)
    {
      v23 = v21;
      if (qword_1007F3060 != -1)
        swift_once(&qword_1007F3060, sub_100559F68);
      v24 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v25 = sub_1000117A8(v24, (uint64_t)qword_100856F10);
      v26 = SmallLockupLayout.Metrics.artworkSize.getter(v25);
      v27 = *(void **)&v19[OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView];
      v29 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v27, "contentMode"), 0, v26, v28);
      v30 = v27;
      Artwork.style.getter(v30);
      v31 = ArtworkView.style.setter(v9);
      *(_QWORD *)&v32 = Artwork.contentMode.getter(v31).n128_u64[0];
      v34 = ArtworkLoaderConfig.size.getter(objc_msgSend(v30, "setContentMode:", v33, v32));
      v36 = ArtworkView.imageSize.setter(v34, v35);
      v37 = Artwork.backgroundColor.getter(v36);
      if (!v37)
      {
        sub_1000117FC();
        v37 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v37);

      v41 = 0;
      memset(v40, 0, sizeof(v40));
      v38 = swift_allocObject(&unk_10073A0F0, 24, 7);
      swift_unknownObjectWeakInit(v38 + 16, v19);
      v39 = swift_retain(v38);
      ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v29, 2, 1, v40, sub_100364298, v38, v39);
      swift_release(v23);
      swift_release(v29);
      swift_release(v38);
      sub_100011088((uint64_t)v40, (uint64_t *)&unk_1007F9850);
      *(_QWORD *)&v22 = swift_release(v38).n128_u64[0];
    }
    objc_msgSend(v4, "setNeedsLayout", v22);

  }
}

void sub_1003641F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(id *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView);

    v10 = a1;
    ArtworkView.image.setter(a1);

  }
}

uint64_t sub_100364274()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100364298(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1003641F0(a1, a2, a3, a4, v4);
}

uint64_t type metadata accessor for CappedSizeRoundedTitledButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1008091E8;
  if (!qword_1008091E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CappedSizeRoundedTitledButton);
  return result;
}

uint64_t sub_1003642DC(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "(";
  v2[1] = &unk_100686738;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100854038);
}

double sub_10036432C(void *a1, double a2, double a3)
{
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = a1;
  v17.super_class = ObjectType;
  v11 = a1;
  objc_msgSendSuper2(&v17, "sizeThatFits:", a2, a3);
  v13 = v12;
  v14 = *(_QWORD *)&v11[qword_1008091D8 + 24];
  v15 = *(_QWORD *)&v11[qword_1008091D8 + 32];
  sub_100011064(&v11[qword_1008091D8], v14);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v14);
  AnyDimension.value(in:rounded:)(v11, v10, v14, v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  return v13;
}

void sub_100364448(char *a1, uint64_t a2, void *a3)
{
  void (*v3)(uint64_t);
  uint64_t v5;
  id v6;
  uint64_t v7;
  char *v8;

  v3 = *(void (**)(uint64_t))&a1[qword_1008091E0];
  if (v3)
  {
    v5 = *(_QWORD *)&a1[qword_1008091E0 + 8];
    v6 = a3;
    v8 = a1;
    v7 = sub_100019320((uint64_t)v3, v5);
    v3(v7);
    sub_100019310((uint64_t)v3, v5);

  }
}

id sub_1003644D8(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v9, "measurementsWithFitting:in:", a5, a2, a3);
}

void sub_10036453C()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.CappedSizeRoundedTitledButton", 52, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_100364568()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + qword_1008091D8));
  return sub_100019310(*(_QWORD *)(v0 + qword_1008091E0), *(_QWORD *)(v0 + qword_1008091E0 + 8));
}

uint64_t sub_100364598(uint64_t a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + qword_1008091D8));
  return sub_100019310(*(_QWORD *)(a1 + qword_1008091E0), *(_QWORD *)(a1 + qword_1008091E0 + 8));
}

uint64_t sub_1003645D4()
{
  return type metadata accessor for CappedSizeRoundedTitledButton(0);
}

uint64_t ObjectGraph.__allocating_init(name:dependencies:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  return ObjectGraph.init(name:dependencies:)(a1, a2, a3);
}

uint64_t ObjectGraph.init(name:dependencies:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v51;
  _QWORD *v52;
  _OWORD v53[2];

  v51 = a2;
  v6 = sub_10000DF3C(&qword_1008141F0);
  __chkstk_darwin(v6);
  v52 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  v9 = __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for DependencyDictionary(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v3 + qword_100854048;
  v17 = sub_10000DF3C(&qword_1007F78F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)(v3 + qword_100854050) = 0;
  *(_QWORD *)(v3 + qword_100854058) = 0;
  v18 = (_QWORD *)(v3 + qword_100854060);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(v3 + qword_100854068) = 0;
  *(_QWORD *)(v3 + qword_100854070) = 0;
  v19 = v3 + qword_100854078;
  v20 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(_QWORD *)(v3 + qword_100854080) = 0;
  *(_QWORD *)(v3 + qword_100854088) = 0;
  *(_QWORD *)(v3 + qword_100854090) = 0;
  *(_QWORD *)(v3 + qword_100854098) = 0;
  *(_QWORD *)(v3 + qword_1008540A0) = 0;
  *(_QWORD *)(v3 + qword_1008540A8) = 0;
  *(_QWORD *)(v3 + qword_1008540B0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  v21 = BaseObjectGraph.init(name:dependencies:)(a1, v51, v15);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v11, v17, v17);
  v22 = v21 + qword_100854048;
  swift_beginAccess(v21 + qword_100854048, v53, 33, 0);
  sub_10006C214((uint64_t)v11, v22, (uint64_t *)&unk_1007F5140);
  swift_endAccess(v53);
  v23 = type metadata accessor for ArtworkLoader(0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v23, v23);
  swift_release(v21);
  v24 = *(_QWORD *)(v21 + qword_100854050);
  *(_QWORD *)(v21 + qword_100854050) = *(_QWORD *)&v53[0];
  swift_release(v24);
  v25 = sub_10000DF3C((uint64_t *)&unk_1007F8DF0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v25, v25);
  swift_release(v21);
  v26 = *(_QWORD *)(v21 + qword_100854058);
  *(_QWORD *)(v21 + qword_100854058) = *(_QWORD *)&v53[0];
  swift_release(v26);
  v27 = sub_10000DF3C(&qword_1007FDEA0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v27, v27);
  swift_release(v21);
  v28 = *(_QWORD *)(v21 + qword_100854060);
  *(_OWORD *)(v21 + qword_100854060) = v53[0];
  swift_unknownObjectRelease(v28);
  v29 = type metadata accessor for ArcadeSubscriptionManager(0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v29, v29);
  swift_release(v21);
  v30 = *(void **)(v21 + qword_100854068);
  *(_QWORD *)(v21 + qword_100854068) = *(_QWORD *)&v53[0];

  v31 = type metadata accessor for ASKBagContract(0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v31, v31);
  swift_release(v21);
  v32 = *(_QWORD *)(v21 + qword_100854070);
  *(_QWORD *)(v21 + qword_100854070) = *(_QWORD *)&v53[0];
  swift_release(v32);
  swift_retain(v21);
  v33 = v52;
  BaseObjectGraph.optional<A>(_:)(v52, v20, v20);
  swift_release(v21);
  v34 = v21 + qword_100854078;
  swift_beginAccess(v21 + qword_100854078, v53, 33, 0);
  sub_10006C214((uint64_t)v33, v34, &qword_1008141F0);
  swift_endAccess(v53);
  v35 = sub_10013F10C();
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v35, v35);
  swift_release(v21);
  v36 = *(void **)(v21 + qword_100854080);
  *(_QWORD *)(v21 + qword_100854080) = *(_QWORD *)&v53[0];

  v37 = type metadata accessor for VideoPlaybackCoordinator(0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v37, v37);
  swift_release(v21);
  v38 = *(void **)(v21 + qword_100854088);
  *(_QWORD *)(v21 + qword_100854088) = *(_QWORD *)&v53[0];

  v39 = type metadata accessor for VideoViewManager(0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v39, v39);
  swift_release(v21);
  v40 = *(_QWORD *)(v21 + qword_100854090);
  *(_QWORD *)(v21 + qword_100854090) = *(_QWORD *)&v53[0];
  swift_release(v40);
  v41 = type metadata accessor for InAppMessagesManager();
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v41, v41);
  swift_release(v21);
  v42 = *(_QWORD *)(v21 + qword_100854098);
  *(_QWORD *)(v21 + qword_100854098) = *(_QWORD *)&v53[0];
  v43 = swift_release(v42);
  v44 = type metadata accessor for AppStoreEngagementManager(0, v43);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v44, v44);
  swift_release(v21);
  v45 = *(_QWORD *)(v21 + qword_1008540A0);
  *(_QWORD *)(v21 + qword_1008540A0) = *(_QWORD *)&v53[0];
  swift_release(v45);
  v46 = type metadata accessor for UserNotificationsManager(0);
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v46, v46);
  swift_release(v21);
  v47 = *(_QWORD *)(v21 + qword_1008540A8);
  *(_QWORD *)(v21 + qword_1008540A8) = *(_QWORD *)&v53[0];
  swift_release(v47);
  v48 = type metadata accessor for EventStoreManager();
  swift_retain(v21);
  BaseObjectGraph.optional<A>(_:)(v53, v48, v48);
  swift_release_n(v21, 2);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  v49 = *(void **)(v21 + qword_1008540B0);
  *(_QWORD *)(v21 + qword_1008540B0) = *(_QWORD *)&v53[0];

  return v21;
}

void sub_100364C48()
{
  uint64_t v0;

  sub_100011088(v0 + qword_100854048, (uint64_t *)&unk_1007F5140);
  swift_release(*(_QWORD *)(v0 + qword_100854050));
  swift_release(*(_QWORD *)(v0 + qword_100854058));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100854060));

  swift_release(*(_QWORD *)(v0 + qword_100854070));
  sub_100011088(v0 + qword_100854078, &qword_1008141F0);

  swift_release(*(_QWORD *)(v0 + qword_100854090));
  swift_release(*(_QWORD *)(v0 + qword_100854098));
  swift_release(*(_QWORD *)(v0 + qword_1008540A0));
  swift_release(*(_QWORD *)(v0 + qword_1008540A8));

}

uint64_t ObjectGraph.deinit()
{
  uint64_t v0;

  v0 = BaseObjectGraph.deinit();
  sub_100011088(v0 + qword_100854048, (uint64_t *)&unk_1007F5140);
  swift_release(*(_QWORD *)(v0 + qword_100854050));
  swift_release(*(_QWORD *)(v0 + qword_100854058));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100854060));

  swift_release(*(_QWORD *)(v0 + qword_100854070));
  sub_100011088(v0 + qword_100854078, &qword_1008141F0);

  swift_release(*(_QWORD *)(v0 + qword_100854090));
  swift_release(*(_QWORD *)(v0 + qword_100854098));
  swift_release(*(_QWORD *)(v0 + qword_1008540A0));
  swift_release(*(_QWORD *)(v0 + qword_1008540A8));

  return v0;
}

uint64_t ObjectGraph.__deallocating_deinit()
{
  uint64_t v0;

  v0 = ObjectGraph.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for ObjectGraph(uint64_t a1)
{
  uint64_t result;

  result = qword_100809238;
  if (!qword_100809238)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ObjectGraph);
  return result;
}

void sub_100364EB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[14];

  v2 = class metadata base offset for ObjectGraph;
  sub_100364F6C(319);
  if (v4 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(v3 - 8) + 64;
    v7[1] = "\b";
    v7[2] = "\b";
    v7[3] = &unk_100686790;
    v7[4] = "\b";
    v7[5] = "\b";
    sub_100364FC4(319);
    if (v6 <= 0x3F)
    {
      v7[6] = *(_QWORD *)(v5 - 8) + 64;
      v7[7] = "\b";
      v7[8] = "\b";
      v7[9] = "\b";
      v7[10] = "\b";
      v7[11] = "\b";
      v7[12] = "\b";
      v7[13] = "\b";
      swift_initClassMetadata2(a1, 0, 14, v7, a1 + v2);
    }
  }
}

void sub_100364F6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100809270)
  {
    v2 = sub_100010EF8(&qword_1007F78F0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100809270);
  }
}

void sub_100364FC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100809278)
  {
    v2 = type metadata accessor for MetricsPipeline(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100809278);
  }
}

uint64_t sub_100365018()
{
  return type metadata accessor for ObjectGraph(0);
}

ValueMetadata *type metadata accessor for CrossfireReferralActionImplementation()
{
  return &type metadata for CrossfireReferralActionImplementation;
}

unint64_t sub_100365034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809298;
  if (!qword_100809298)
  {
    v1 = type metadata accessor for CrossfireReferralAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100809298);
  }
  return result;
}

uint64_t sub_10036507C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ReferrerData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetricsActivity(0);
  v9 = static MetricsActivity.current.getter(v8);
  CrossfireReferralAction.referrerData.getter();
  dispatch thunk of MetricsActivity.setReferrerData(_:)(v7);
  v10 = swift_release(v9);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v10);
  sub_10000DF3C(&qword_100803510);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  return Promise.__allocating_init(value:)(v3);
}

id sub_1003651A8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  void *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  void *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  void *v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  NSString v64;
  double v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  NSString v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Swift::String *v80;
  uint64_t v81;
  uint64_t v82;
  Swift::String v83;
  Swift::String v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t, uint64_t);
  char *v115;
  unint64_t v116;
  uint64_t v117;
  __n128 v118;
  double v119;
  id result;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unsigned int v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _OWORD v139[3];

  v3 = v2;
  v5 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v5);
  v7 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v129 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v131 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v134 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v13);
  v130 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1008016A0);
  __chkstk_darwin(v15);
  v125 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v17);
  v124 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v19);
  v123 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v21);
  v122 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (void *)objc_opt_self(UIView);
  v127 = objc_msgSend(v23, "areAnimationsEnabled");
  v128 = v23;
  objc_msgSend(v23, "setAnimationsEnabled:", 0);
  v25 = InAppPurchaseInstallPage.lockup.getter(v24);
  v26 = InAppPurchaseInstallPage.parentLockup.getter();
  v136 = v10;
  v137 = a2;
  v135 = v7;
  v132 = v12;
  v133 = v8;
  if (v25)
  {
    v28 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_inAppPurchaseView];
    v29 = qword_1007F1BE8;
    swift_retain(v25);
    if (v29 != -1)
      swift_once(&qword_1007F1BE8, sub_1002F2A74);
    v30 = type metadata accessor for ArtworkLoader(0);
    v31 = *(_QWORD *)(a2 + qword_100854050);
    if (!v31)
    {
      result = (id)dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v30);
      __break(1u);
      return result;
    }
    v32 = *(double *)&qword_100853AB0;
    swift_retain(v31);
    sub_10059FBF8(v32, v32, v25, v28, v31, 2);
    swift_release(v25);
    swift_release(v31);
    v33 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel];
    v34 = swift_retain(v25);
    Lockup.title.getter(v34);
    v36 = v35;
    v27 = swift_release(v25).n128_u64[0];
    if (v36)
    {
      v37 = String._bridgeToObjectiveC()();
      v27 = swift_bridgeObjectRelease(v36).n128_u64[0];
    }
    else
    {
      v37 = 0;
    }
  }
  else
  {
    v37 = 0;
    v33 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel];
  }
  objc_msgSend(v33, "setText:", v37, *(double *)&v27);

  v126 = v25;
  if (v26 && (v38 = swift_retain(v26), Lockup.title.getter(v38), v40 = v39, v42 = v41, swift_release(v26), v42))
  {
    v43 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel];
    v44._object = (void *)0x8000000100645C40;
    v44._countAndFlagsBits = 0xD00000000000001FLL;
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    v46 = localizedString(_:comment:)(v44, v45);
    v47 = sub_10000DF3C(&qword_1007FA388);
    v48 = v3;
    v49 = swift_allocObject(v47, 72, 7);
    *(_OWORD *)(v49 + 16) = xmmword_10066FBA0;
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = sub_1000D0764();
    *(_QWORD *)(v49 + 32) = v40;
    *(_QWORD *)(v49 + 40) = v42;
    v50 = v49;
    v3 = v48;
    String.init(format:_:)(v46._countAndFlagsBits, v46._object, v50);
    v52 = v51;
    swift_bridgeObjectRelease(v46._object);
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v43, "setText:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

    v54 = *(void **)&v48[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel];
  }
  else
  {
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel], "setText:", 0);
    v54 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel];
    if (!v26)
    {
LABEL_15:
      v59 = 0;
      goto LABEL_16;
    }
  }
  swift_retain(v26);
  Lockup.developerTagline.getter(v56);
  v58 = v57;
  v55 = swift_release(v26).n128_u64[0];
  if (!v58)
    goto LABEL_15;
  v59 = String._bridgeToObjectiveC()();
  v55 = swift_bridgeObjectRelease(v58).n128_u64[0];
LABEL_16:
  objc_msgSend(v54, "setText:", v59, *(double *)&v55);

  v60 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel];
  InAppPurchaseInstallPage.preInstallOfferDescription.getter();
  if (v61)
  {
    v63 = v61;
    v64 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v62 = swift_bridgeObjectRelease(v63).n128_u64[0];
  }
  else
  {
    v64 = 0;
  }
  objc_msgSend(v60, "setText:", v64, v62);

  if (v26
    && (v66 = swift_retain(v26),
        Lockup.ageRating.getter(v66),
        v68 = v67,
        *(_QWORD *)&v65 = swift_release(v26).n128_u64[0],
        v68))
  {
    v69 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge];
    v70 = *(void **)&v69[OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_ageLabel];
    v71 = String._bridgeToObjectiveC()();
    objc_msgSend(v70, "setText:", v71);

    objc_msgSend(v69, "setNeedsLayout");
    objc_msgSend(v69, "setNeedsDisplay");
    objc_msgSend(v69, "setHidden:", 0, swift_bridgeObjectRelease(v68).n128_f64[0]);
  }
  else
  {
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge], "setHidden:", 1, v65);
  }
  v72 = sub_10000DF3C(&qword_1008092A0);
  v73 = sub_10000DF3C(&qword_1008092A8);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(_QWORD *)(v74 + 72);
  v76 = *(unsigned __int8 *)(v74 + 80);
  v77 = (v76 + 32) & ~v76;
  v78 = swift_allocObject(v72, v77 + v75, v76 | 7);
  *(_OWORD *)(v78 + 16) = xmmword_10066FBA0;
  v79 = v78 + v77;
  v80 = (Swift::String *)(v78 + v77 + *(int *)(v73 + 48));
  v81 = enum case for OfferTitleType.standard(_:);
  v82 = type metadata accessor for OfferTitleType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v79, v81, v82);
  v83._countAndFlagsBits = 0xD000000000000020;
  v83._object = (void *)0x8000000100645C10;
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  *v80 = localizedString(_:comment:)(v83, v84);
  v85 = sub_10036AC00(v78);
  v86 = v85;
  v138 = v3;
  if (v26)
  {
    swift_retain(v26);
    v88 = Lockup.offerDisplayProperties.getter(v87);
    v121 = v26;
    swift_release(v26);
    if (v88)
    {
      v89 = enum case for OfferStyle.colored(_:);
      v90 = type metadata accessor for OfferStyle(0);
      v91 = *(_QWORD *)(v90 - 8);
      v92 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v122, v89, v90);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v92, 0, 1, v90);
      v93 = type metadata accessor for OfferEnvironment(0);
      v94 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v123, 1, 1, v93);
      v95 = enum case for OfferTint.blue(_:);
      v96 = type metadata accessor for OfferTint(0);
      v97 = *(_QWORD *)(v96 - 8);
      v98 = (uint64_t)v124;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 104))(v124, v95, v96);
      v99.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56))(v98, 0, 1, v96);
      v100 = type metadata accessor for OfferLabelStyle(0, v99);
      v101 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v125, 1, 1, v100);
      memset(v139, 0, 32);
      v102 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)(v86, 0, 0, v92, v94, v98, 2, 2, 2, v101, 0, 0, 1, v139, 0, 0, 0, 0, 0,
               0,
               0,
               2,
               0);
      swift_release(v88);
      swift_bridgeObjectRelease(v86);
      sub_100011088((uint64_t)v139, &qword_1007F6E90);
      sub_100011088(v101, (uint64_t *)&unk_1008016A0);
      sub_100011088(v98, (uint64_t *)&unk_1007F76F0);
      sub_100011088(v94, (uint64_t *)&unk_1007F7C20);
      v103 = (uint64_t)v92;
      v3 = v138;
      sub_100011088(v103, (uint64_t *)&unk_1007F7700);
    }
    else
    {
      swift_bridgeObjectRelease(v86);
      v102 = 0;
    }
    v106 = v136;
    v107 = v134;
    v125 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton];
    v104 = v121;
    v108 = swift_retain(v121);
    v105 = Lockup.buttonAction.getter(v108);
    swift_release(v104);
  }
  else
  {
    swift_bridgeObjectRelease(v85);
    v104 = 0;
    v105 = 0;
    v102 = 0;
    v125 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton];
    v106 = v136;
    v107 = v134;
  }
  v109 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  v110 = (uint64_t)v130;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v130, 1, 1, v109);
  v111 = v129;
  v112 = v131;
  v113 = v133;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v131, enum case for OfferButtonSubtitlePosition.below(_:), v133);
  v114 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v111 + 56);
  v115 = v135;
  v114(v135, 1, 1, v113);
  v116 = sub_1001B8DF8();
  v117 = (uint64_t)v132;
  AccessibilityConditional.init(value:axValue:)(v112, v115, v113, v116);
  sub_10013AB60(v102, v105, 0, v110, v117, v137, 0, 0);
  v118 = swift_release(v105);
  (*(void (**)(uint64_t, uint64_t, __n128))(v107 + 8))(v117, v106, v118);
  sub_100011088(v110, (uint64_t *)&unk_1007F7710);
  objc_msgSend(v138, "setNeedsLayout");
  swift_release(v104);
  swift_release(v102);
  *(_QWORD *)&v119 = swift_release(v126).n128_u64[0];
  return objc_msgSend(v128, "setAnimationsEnabled:", v127, v119);
}

uint64_t sub_100365C7C()
{
  return sub_10000E99C(&qword_1008092B0, type metadata accessor for PlaceholderCollectionViewCell, (uint64_t)&unk_100686848);
}

uint64_t sub_100365CA8()
{
  return Shelf.placeholderContentType.getter();
}

double sub_100365CCC(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  uint64_t v35;
  __n128 v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  int v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  unint64_t *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  __n128 v63;
  objc_class *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  __n128 v70;
  __n128 v71;
  uint64_t v72;
  _QWORD *v73;
  double v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  id v79;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  double v84;
  double v85;
  double v86;
  id v87;
  uint64_t ObjectType;
  uint64_t v89;
  double v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t *v98;
  uint64_t v99;
  _QWORD *v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  char *v105;
  id v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  _QWORD *v117;
  double v118;
  double v119;
  double v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  double v124;
  __n128 v125;
  __n128 v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;
  double v130;
  double v131;
  double v132;
  uint64_t v133;
  __n128 v134;
  objc_class *v135;
  uint64_t v136;
  double v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  double v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  objc_class *v173[2];

  v152 = type metadata accessor for SmallStoryCardLayout.Metrics(0, a2);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v150 = (uint64_t)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for AspectRatio(0);
  v148 = *(_QWORD *)(v149 - 8);
  v4 = __chkstk_darwin(v149);
  v147 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics(0, v4);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Shelf.PresentationHints(0);
  v158 = *(_QWORD *)(v7 - 8);
  v159 = v7;
  __chkstk_darwin(v7);
  v157 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v156 = (char *)&v147 - v11;
  v12 = type metadata accessor for BrickLayout.Metrics(0, v10);
  v161 = *(_QWORD *)(v12 - 8);
  v162 = v12;
  __chkstk_darwin(v12);
  v160 = (char *)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfLayoutContext(0);
  v164 = *(_QWORD *)(v14 - 8);
  v165 = v14;
  v15 = __chkstk_darwin(v14);
  v163 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MediumLockupLayout.Metrics(0, v15);
  v167 = *(_QWORD *)(v17 - 8);
  v168 = v17;
  __chkstk_darwin(v17);
  v166 = (uint64_t)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for PageGrid(0);
  v169 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v170 = (char **)((char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v20);
  v22 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char **)((char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for Shelf.ContentType(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v147 - v32;
  KeyPath = swift_getKeyPath(&unk_100686898);
  v172 = a1;
  ItemLayoutContext.subscript.getter(v26);
  swift_release(KeyPath);
  v35 = swift_getKeyPath(&unk_1006868C8);
  ReadOnlyLens.subscript.getter(v35, v23);
  v36 = swift_release(v35);
  v37 = v26;
  v38 = v27;
  v39 = v23;
  v40 = v28;
  (*(void (**)(_QWORD *, uint64_t, __n128))(v24 + 8))(v37, v39, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v33, v22, v27);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, v33, v27);
    v42 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v30, v27);
    v44 = v33;
    if (v42 == enum case for Shelf.ContentType.smallLockup(_:))
    {
      v45 = swift_getKeyPath(&unk_1006868F8);
      v46 = v170;
      ItemLayoutContext.subscript.getter(v170);
      swift_release(v45);
      v47 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v49 = v48;
      (*(void (**)(_QWORD *, uint64_t))(v169 + 8))(v46, v171);
      if (qword_1007F14D8 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v50 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v51 = sub_1000117A8(v50, (uint64_t)qword_100852280);
      v52 = sub_1000826AC();
      v53 = type metadata accessor for SmallLockupLayout(0);
      v54 = (uint64_t (*)(uint64_t))&type metadata accessor for SmallLockupLayout;
      v55 = (unint64_t *)&unk_1008092C0;
      v56 = &protocol conformance descriptor for SmallLockupLayout;
LABEL_14:
      v77 = sub_10000E99C(v55, v54, (uint64_t)v56);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v51, v52, v53, v77, v47, v49);
      v41 = v78;
      v79 = v52;
LABEL_15:
      v71 = swift_unknownObjectRelease(v79);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.mediumLockup(_:))
    {
      v57 = swift_getKeyPath(&unk_1006868F8);
      v58 = v170;
      ItemLayoutContext.subscript.getter(v170);
      swift_release(v57);
      v59 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v61 = v60;
      (*(void (**)(_QWORD *, uint64_t))(v169 + 8))(v58, v171);
      type metadata accessor for MediumLockupCollectionViewCell(0);
      v62 = swift_getKeyPath(&unk_100686928);
      ItemLayoutContext.subscript.getter(v173);
      v63 = swift_release(v62);
      v64 = v173[0];
      v65 = v166;
      sub_1001FB110(v166, v63);

      v66 = sub_1000826AC();
      v67 = type metadata accessor for MediumLockupLayout(0);
      v68 = sub_10000E99C(&qword_100801820, (uint64_t (*)(uint64_t))&type metadata accessor for MediumLockupLayout, (uint64_t)&protocol conformance descriptor for MediumLockupLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v65, v66, v67, v68, v59, v61);
      v41 = v69;
      v70 = swift_unknownObjectRelease(v66);
      (*(void (**)(uint64_t, uint64_t, __n128))(v167 + 8))(v65, v168, v70);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.largeLockup(_:))
    {
      v72 = swift_getKeyPath(&unk_1006868F8);
      v73 = v170;
      ItemLayoutContext.subscript.getter(v170);
      swift_release(v72);
      v47 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v49 = v74;
      (*(void (**)(_QWORD *, uint64_t))(v169 + 8))(v73, v171);
      if (qword_1007F16C8 != -1)
        swift_once(&qword_1007F16C8, sub_1001FE24C);
      v76 = type metadata accessor for LargeLockupLayout.Metrics(0, v75);
      v51 = sub_1000117A8(v76, (uint64_t)qword_1008528A0);
      v52 = sub_1000826AC();
      v53 = type metadata accessor for LargeLockupLayout(0);
      v54 = (uint64_t (*)(uint64_t))&type metadata accessor for LargeLockupLayout;
      v55 = &qword_100801870;
      v56 = &protocol conformance descriptor for LargeLockupLayout;
      goto LABEL_14;
    }
    if (v42 == enum case for Shelf.ContentType.ribbonBar(_:))
    {
      v81 = v163;
      ItemLayoutContext.parentShelfLayoutContext.getter(v43);
      v41 = sub_10047FFE8();
      (*(void (**)(char *, uint64_t))(v164 + 8))(v81, v165);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.videoCard(_:))
    {
      v82 = swift_getKeyPath(&unk_1006868F8);
      v83 = v170;
      ItemLayoutContext.subscript.getter(v170);
      swift_release(v82);
      v84 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v86 = v85;
      (*(void (**)(_QWORD *, uint64_t))(v169 + 8))(v83, v171);
      if (qword_1007F2E28 != -1)
        swift_once(&qword_1007F2E28, sub_1004FCDF0);
      v87 = sub_1000826AC();
      ObjectType = swift_getObjectType();
      v89 = type metadata accessor for VideoCardView(0);
      sub_1004FD190(v84, v86, (uint64_t)&qword_100856B20, (uint64_t)v87, v89, ObjectType);
      v41 = v90;
      v79 = v87;
      goto LABEL_15;
    }
    if (v42 == enum case for Shelf.ContentType.brick(_:))
    {
      v91 = swift_getKeyPath(&unk_100686958);
      v92 = v156;
      ItemLayoutContext.subscript.getter(v156);
      swift_release(v91);
      v93 = v157;
      static Shelf.PresentationHints.showSupplementaryText.getter(v94);
      v95 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
      v96 = v159;
      LOBYTE(v91) = dispatch thunk of SetAlgebra.isSuperset(of:)(v93, v159, v95);
      v97 = *(void (**)(char *, uint64_t))(v158 + 8);
      v97(v93, v96);
      v97(v92, v96);
      if ((v91 & 1) != 0)
      {
        if (qword_1007F1A88 != -1)
          swift_once(&qword_1007F1A88, sub_1002B6488);
        v98 = qword_100853890;
      }
      else
      {
        if (qword_1007F1A90 != -1)
          swift_once(&qword_1007F1A90, sub_1002B671C);
        v98 = qword_1008538A8;
      }
      v112 = v162;
      v113 = sub_1000117A8(v162, (uint64_t)v98);
      v115 = v160;
      v114 = v161;
      (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v160, v113, v112);
      v116 = swift_getKeyPath(&unk_1006868F8);
      v117 = v170;
      ItemLayoutContext.subscript.getter(v170);
      swift_release(v116);
      v118 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v120 = v119;
      (*(void (**)(_QWORD *, uint64_t))(v169 + 8))(v117, v171);
      v121 = sub_1000826AC();
      v122 = type metadata accessor for BrickLayout(0);
      v123 = sub_10000E99C(&qword_1007F8570, (uint64_t (*)(uint64_t))&type metadata accessor for BrickLayout, (uint64_t)&protocol conformance descriptor for BrickLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v115, v121, v122, v123, v118, v120);
      v41 = v124;
      v125 = swift_unknownObjectRelease(v121);
      (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v115, v112, v125);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.categoryBrick(_:))
    {
      v99 = swift_getKeyPath(&unk_1006868F8);
      v100 = v170;
      ItemLayoutContext.subscript.getter(v170);
      swift_release(v99);
      v101 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v103 = v102;
      v104 = (*(uint64_t (**)(_QWORD *, uint64_t))(v169 + 8))(v100, v171);
      v105 = v153;
      static ChartOrCategoryBrickStyle.tileMetrics.getter(v104);
      v106 = sub_1000826AC();
      v108 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0, v107);
      v109 = sub_10000E99C(&qword_1008092B8, (uint64_t (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout, (uint64_t)&protocol conformance descriptor for ChartOrCategoryBrickCollectionViewCellLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v105, v106, v108, v109, v101, v103);
      v41 = v110;
      v111 = swift_unknownObjectRelease(v106);
      (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v105, v155, v111);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.appTrailerLockup(_:))
    {
      type metadata accessor for AppTrailerLockupCollectionViewCell(0);
    }
    else
    {
      if (v42 != enum case for Shelf.ContentType.screenshotsLockup(_:))
      {
        if (v42 == enum case for Shelf.ContentType.smallStoryCard(_:))
        {
          v128 = swift_getKeyPath(&unk_1006868F8);
          v129 = v170;
          ItemLayoutContext.subscript.getter(v170);
          swift_release(v128);
          v130 = PageGrid.componentMeasuringSize(spanning:)(1.0);
          v132 = v131;
          (*(void (**)(_QWORD *, uint64_t))(v169 + 8))(v129, v171);
          v133 = swift_getKeyPath(&unk_100686928);
          ItemLayoutContext.subscript.getter(v173);
          v134 = swift_release(v133);
          v135 = v173[0];
          v136 = v150;
          sub_100234384(v173[0], v150, v134);
          static SmallStoryCardLayout.estimatedMeasurements(fitting:using:with:)(v136, v135, v130, v132);
          v41 = v137;
          (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v136, v152);

        }
        else if (v42 == enum case for Shelf.ContentType.posterLockup(_:))
        {
          v138 = v163;
          v139 = ItemLayoutContext.parentShelfLayoutContext.getter(v43);
          v140 = v147;
          v141 = static PosterLockupLayout.aspectRatio.getter(v139);
          v142 = v170;
          v143 = ShelfLayoutContext.contentPageGrid.getter(v141);
          v144 = PageGrid.smallestPossibleColumnWidth.getter(v143);
          v145 = (*(uint64_t (**)(_QWORD *, uint64_t))(v169 + 8))(v142, v171);
          v41 = AspectRatio.height(fromWidth:)(v145, v144);
          (*(void (**)(char *, uint64_t))(v148 + 8))(v140, v149);
          (*(void (**)(char *, uint64_t))(v164 + 8))(v138, v165);
        }
        else
        {
          if (v42 != enum case for Shelf.ContentType.appPromotion(_:))
          {
            v146 = *(void (**)(char *, uint64_t))(v28 + 8);
            v146(v33, v38);
            v146(v30, v38);
            return 0.0;
          }
          v71.n128_f64[0] = sub_100047D30(v172, 1);
          v41 = v71.n128_f64[0];
        }
LABEL_16:
        (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v44, v38, v71);
        return v41;
      }
      type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
    }
    v127 = v163;
    ItemLayoutContext.parentShelfLayoutContext.getter(v126);
    v41 = sub_10043BAF4();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v127, v165);
    goto LABEL_16;
  }
  sub_100366A50((uint64_t)v22);
  return 0.0;
}

uint64_t sub_100366A30()
{
  return Shelf.placeholderContentType.getter();
}

uint64_t sub_100366A50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100366A9C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_presenter] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_objectGraph] = a2;
  v13.receiver = v3;
  v13.super_class = ObjectType;
  swift_retain(a1);
  *(_QWORD *)&v7 = swift_retain(a2).n128_u64[0];
  v8 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", 0, 0, v7);
  v10 = sub_10001F65C(&qword_100809318, v9, (uint64_t (*)(uint64_t))type metadata accessor for PersonalizationTransparencyPageViewController, (uint64_t)&unk_100686A18);
  v11 = v8;
  dispatch thunk of PersonalizationTransparencyPagePresenter.view.setter(v8, v10);

  swift_release(a1);
  swift_release(a2);
  return v11;
}

void sub_100366C58(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  id v35;

  v2 = sub_100366F60(a1);
  v3 = objc_msgSend(v1, "childViewControllers");
  v4 = sub_1000531A4();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v5);
    if (v14)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v5);
    v10 = 0;
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  v8 = type metadata accessor for GenericAccountPageViewController();
  v9 = (void *)swift_dynamicCastClass(v7, v8);
  v10 = v9;
  if (v9)
  {
    objc_msgSend(v9, "willMoveToParentViewController:", 0);
    v11 = objc_msgSend(v10, "view");
    if (!v11)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v12 = v11;
    objc_msgSend(v11, "removeFromSuperview");

    objc_msgSend(v10, "removeFromParentViewController");
  }
  else
  {

  }
LABEL_15:
  objc_msgSend(v1, "addChildViewController:", v2);
  v15 = objc_msgSend(v2, "view");
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = v15;
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v18 = v17;
  objc_msgSend(v17, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  objc_msgSend(v16, "setFrame:", v20, v22, v24, v26);
  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v28 = v27;
  v29 = objc_msgSend(v2, "view");
  if (!v29)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v30 = v29;
  objc_msgSend(v28, "addSubview:", v29);

  objc_msgSend(v2, "didMoveToParentViewController:", v1);
  v31 = objc_msgSend(v1, "navigationItem");
  GenericAccountPage.title.getter();
  if (v32)
  {
    v34 = v32;
    v35 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  else
  {
    v35 = 0;
  }
  objc_msgSend(v31, "setTitle:", v35, v33);

}

id sub_100366F60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  objc_super v16;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_objectGraph);
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = type metadata accessor for GenericAccountPagePresenter(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_retain(v6);
  v9 = swift_retain(a1);
  v10 = GenericAccountPagePresenter.init(objectGraph:url:page:)(v6, v5, a1, v9);
  v11 = sub_10001F65C(&qword_10080BD80, 255, (uint64_t (*)(uint64_t))&type metadata accessor for GenericAccountPagePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_retain(v10);
  v12 = sub_1005989D0(v6, v10, v11, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000012, 0x8000000100645CB0);
  swift_release(v10);
  v13 = (objc_class *)type metadata accessor for GenericAccountPageViewController();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension32GenericAccountPageViewController_overlayViewController] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension32GenericAccountPageViewController_presenter] = v10;
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension32GenericAccountPageViewController_objectGraph] = v12;
  v16.receiver = v14;
  v16.super_class = v13;
  return objc_msgSendSuper2(&v16, "initWithStyle:", 2);
}

void sub_1003670F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, "childViewControllers", v3);
  v7 = sub_1000531A4();
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  LOBYTE(v6) = Array.isNotEmpty.getter(v8, v7);
  swift_bridgeObjectRelease(v8);
  if ((v6 & 1) != 0)
  {
    v10 = OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
    v11 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
    v12 = v11;
    static ViewControllerContainment.remove(_:)(v11);

    v13 = *(void **)&v1[v10];
    *(_QWORD *)&v1[v10] = 0;

    v14 = *(void **)&v1[v10];
    v44 = v14;
    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "bounds");
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      v45 = v18;
      v46 = v20;
      v47 = v22;
      v48 = v24;
      v49 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v14, v1, &v45);

      return;
    }
    __break(1u);
  }
  else
  {
    static JULoadingViewController.PresentationContext.placeholder.getter(v9);
    v25 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v26 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, 0);
    v27 = OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
    v28 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
    v29 = v28;
    static ViewControllerContainment.remove(_:)(v28);

    v30 = *(void **)&v1[v27];
    *(_QWORD *)&v1[v27] = v26;
    v31 = v26;

    v32 = *(void **)&v1[v27];
    v33 = v32;
    v34 = objc_msgSend(v1, "view");
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v34, "bounds");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;

      v45 = v37;
      v46 = v39;
      v47 = v41;
      v48 = v43;
      v49 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v32, v1, &v45);

      return;
    }
  }
  __break(1u);
}

void sub_10036735C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[4];
  char v18;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
  v3 = v2;
  static ViewControllerContainment.remove(_:)(v2);

  v4 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  v5 = *(void **)&v0[v1];
  v16 = v5;
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v17[0] = v9;
    v17[1] = v11;
    v17[2] = v13;
    v17[3] = v15;
    v18 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v5, v0, v17);

  }
  else
  {
    __break(1u);
  }
}

void sub_100367430(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v24[4];
  char v25;

  v2 = v1;
  type metadata accessor for JUContentUnavailableViewController(0);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_presenter];
  v5 = sub_10001F65C(&qword_100809310, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PersonalizationTransparencyPagePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_errorRetain(a1);
  swift_retain(v4);
  v6 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(a1, v4, v5, 1, 0, 0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
  v8 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
  v9 = v8;
  static ViewControllerContainment.remove(_:)(v8);

  v10 = *(void **)&v2[v7];
  *(_QWORD *)&v2[v7] = v6;
  v11 = v6;

  v12 = *(void **)&v2[v7];
  v23 = v12;
  v13 = objc_msgSend(v2, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v24[0] = v16;
    v24[1] = v18;
    v24[2] = v20;
    v24[3] = v22;
    v25 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v12, v2, v24);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for PersonalizationTransparencyPageViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension45PersonalizationTransparencyPageViewController);
}

uint64_t sub_100367638(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100809308, a2, (uint64_t (*)(uint64_t))type metadata accessor for PersonalizationTransparencyPageViewController, (uint64_t)&unk_1006869E0);
}

unint64_t sub_100367668()
{
  unint64_t result;

  result = qword_100809320;
  if (!qword_100809320)
  {
    result = swift_getWitnessTable(&unk_100686AA8, &type metadata for ArticleEntity.ArticleQuery);
    atomic_store(result, (unint64_t *)&qword_100809320);
  }
  return result;
}

unint64_t sub_1003676B0()
{
  unint64_t result;

  result = qword_100809328[0];
  if (!qword_100809328[0])
  {
    result = swift_getWitnessTable(&unk_100686B08, &type metadata for ArticleEntity.ArticleQuery);
    atomic_store(result, qword_100809328);
  }
  return result;
}

uint64_t sub_1003676F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10000DF3C(&qword_1008093E0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TypeDisplayRepresentation(0, v5);
  sub_100045464(v8, qword_1008540C8);
  sub_1000117A8(v8, (uint64_t)qword_1008540C8);
  LocalizedStringResource.init(stringLiteral:)(0x656C6369747241, 0xE700000000000000);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v7, v2);
}

uint64_t sub_100367804()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_100367824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  Swift::String v19;
  void *object;
  Swift::String v21;
  __n128 v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  _QWORD v28[2];
  Swift::String v29;

  v28[1] = a1;
  v1 = sub_10000DF3C(&qword_1008093D8);
  __chkstk_darwin(v1);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1008093E0);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue.StringInterpolation(0, v9);
  __chkstk_darwin(v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)v28 - v17;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, v16);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  EntityProperty.wrappedValue.getter(&v29);
  object = v29._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v29);
  swift_bridgeObjectRelease(object);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  LocalizedStringResource.init(stringInterpolation:)(v18);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, v22);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  EntityProperty.wrappedValue.getter(&v29);
  v24 = v29._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v29);
  swift_bridgeObjectRelease(v24);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
  LocalizedStringResource.init(stringInterpolation:)(v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
  return DisplayRepresentation.init(title:subtitle:image:)(v11, v6, v3);
}

uint64_t sub_100367A6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100809400 + dword_100809400);
  v3 = (_QWORD *)swift_task_alloc(unk_100809404);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100367ACC;
  return v5(a1);
}

uint64_t sub_100367ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_100367B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100030018;
  return EntityQuery.suggestedEntities()(a1, a2, a3);
}

unint64_t sub_100367B90()
{
  unint64_t result;

  result = qword_100809340;
  if (!qword_100809340)
  {
    result = swift_getWitnessTable(&unk_100686B30, &type metadata for ArticleEntity.ArticleQuery);
    atomic_store(result, (unint64_t *)&qword_100809340);
  }
  return result;
}

unint64_t sub_100367BD8()
{
  unint64_t result;

  result = qword_100809348;
  if (!qword_100809348)
  {
    result = swift_getWitnessTable(&unk_100686CF4, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_100809348);
  }
  return result;
}

unint64_t sub_100367C20()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_100809350;
  if (!qword_100809350)
  {
    v1 = sub_100010EF8(qword_100809358);
    v2 = sub_100367BD8();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_100809350);
  }
  return result;
}

uint64_t sub_100367C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100367E40();
  *v5 = v2;
  v5[1] = sub_1000303C4;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100367CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100030018;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

unint64_t sub_100367D68()
{
  unint64_t result;

  result = qword_100809370;
  if (!qword_100809370)
  {
    result = swift_getWitnessTable(&unk_100686BDC, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_100809370);
  }
  return result;
}

unint64_t sub_100367DB0()
{
  unint64_t result;

  result = qword_100809378;
  if (!qword_100809378)
  {
    result = swift_getWitnessTable(&unk_100686C14, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_100809378);
  }
  return result;
}

unint64_t sub_100367DF8()
{
  unint64_t result;

  result = qword_100809380;
  if (!qword_100809380)
  {
    result = swift_getWitnessTable(&unk_100686C44, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_100809380);
  }
  return result;
}

unint64_t sub_100367E40()
{
  unint64_t result;

  result = qword_100809388;
  if (!qword_100809388)
  {
    result = swift_getWitnessTable(&unk_100686A50, &type metadata for ArticleEntity.ArticleQuery);
    atomic_store(result, (unint64_t *)&qword_100809388);
  }
  return result;
}

void *sub_100367E84()
{
  return &protocol witness table for String;
}

unint64_t sub_100367E94()
{
  unint64_t result;

  result = qword_100809390;
  if (!qword_100809390)
  {
    result = swift_getWitnessTable(&unk_100686C7C, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_100809390);
  }
  return result;
}

uint64_t sub_100367ED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  Swift::String v6;
  uint64_t KeyPath;
  uint64_t v8;
  Swift::String v9;
  uint64_t v11;

  v2 = sub_10000DF3C(&qword_1008093F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000ADB38();
  _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, a1, v5);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  KeyPath = swift_getKeyPath(&unk_100686DE8);
  v8 = sub_10000DF3C(&qword_1008093F8);
  _EntityURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v2, v8);
  swift_release(KeyPath);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  return _EntityURLRepresentation.init(stringInterpolation:)(v4, a1, v5);
}

unint64_t sub_100367FD4()
{
  unint64_t result;

  result = qword_100809398;
  if (!qword_100809398)
  {
    result = swift_getWitnessTable(&unk_100686CA4, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_100809398);
  }
  return result;
}

unint64_t sub_10036801C()
{
  unint64_t result;

  result = qword_1008093A0;
  if (!qword_1008093A0)
  {
    result = swift_getWitnessTable(&unk_100686CCC, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_1008093A0);
  }
  return result;
}

unint64_t sub_100368064()
{
  unint64_t result;

  result = qword_1008093A8;
  if (!qword_1008093A8)
  {
    result = swift_getWitnessTable(&unk_100686D4C, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_1008093A8);
  }
  return result;
}

void *sub_1003680A8()
{
  return &protocol witness table for String;
}

uint64_t sub_1003680B4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1003680C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10036879C();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_1003687E0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_100368108@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1007F1D50 != -1)
    swift_once(&qword_1007F1D50, sub_1003676F8);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1000117A8(v3, (uint64_t)qword_1008540C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

unint64_t sub_10036817C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008093B8;
  if (!qword_1008093B8)
  {
    v1 = sub_100010EF8(&qword_1008093C0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008093B8);
  }
  return result;
}

uint64_t sub_1003681C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000ADB38();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100368204()
{
  unint64_t result;

  result = qword_1008093C8;
  if (!qword_1008093C8)
  {
    result = swift_getWitnessTable(&unk_100686D7C, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_1008093C8);
  }
  return result;
}

uint64_t sub_10036824C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368064();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t destroy for ArticleEntity(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return swift_release(a1[4]);
}

_QWORD *initializeWithCopy for ArticleEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

_QWORD *assignWithCopy for ArticleEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

_QWORD *assignWithTake for ArticleEntity(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  swift_release(a1[3]);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEntity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleEntity()
{
  return &type metadata for ArticleEntity;
}

ValueMetadata *type metadata accessor for ArticleEntity.ArticleQuery()
{
  return &type metadata for ArticleEntity.ArticleQuery;
}

void sub_1003684B8(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;

  v32 = a7;
  v33 = a5;
  v34 = a1;
  v15 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1008093D0);
  LocalizedStringResource.init(stringLiteral:)(0x20656C6369747241, 0xED0000656C746954);
  v18 = EntityProperty<>.init(title:)(v17);
  swift_retain(v18);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x8000000100645D70);
  v19 = EntityProperty<>.init(title:)(v17);
  swift_retain(v19);
  LocalizedStringResource.init(stringLiteral:)(0x694C206572616853, 0xEA00000000006B6ELL);
  v20 = EntityProperty<>.init(title:)(v17);
  if (a4)
    v21 = a3;
  else
    v21 = 0;
  if (a4)
    v22 = a4;
  else
    v22 = 0xE000000000000000;
  v35 = v21;
  v36 = v22;
  swift_retain(v18);
  swift_retain(v19);
  swift_retain(v20);
  v23 = swift_bridgeObjectRetain(a2);
  EntityProperty.wrappedValue.setter(&v35, v23);
  swift_release(v19);
  swift_release(v18);
  v24 = 0xD000000000000016;
  if (a6)
    v24 = v33;
  v25 = 0x8000000100645D90;
  if (a6)
    v25 = a6;
  v35 = v24;
  v36 = v25;
  swift_retain(v18);
  swift_retain(v19);
  swift_retain(v20);
  v26 = swift_bridgeObjectRetain(a2);
  EntityProperty.wrappedValue.setter(&v35, v26);
  swift_release(v20);
  swift_release(v19);
  swift_release(v18);
  swift_bridgeObjectRelease(a2);
  if (a8)
  {
    swift_retain(v18);
    swift_retain(v19);
    swift_retain(v20);
    v27 = swift_bridgeObjectRetain(a2);
    v28 = v34;
    v29 = v32;
  }
  else
  {
    v35 = 0;
    v36 = 0xE000000000000000;
    swift_retain(v18);
    swift_retain(v19);
    swift_retain(v20);
    swift_bridgeObjectRetain(a2);
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease(v36);
    v35 = 0xD00000000000001FLL;
    v36 = 0x8000000100645DB0;
    v28 = v34;
    v30._countAndFlagsBits = v34;
    v30._object = a2;
    String.append(_:)(v30);
    v29 = v35;
    a8 = v36;
  }
  v35 = v29;
  v36 = a8;
  EntityProperty.wrappedValue.setter(&v35, v27);
  swift_release_n(v20, 2);
  swift_release_n(v19, 2);
  swift_release_n(v18, 2);
  swift_bridgeObjectRelease_n(a2, 2);
  *a9 = v28;
  a9[1] = (uint64_t)a2;
  a9[2] = v18;
  a9[3] = v19;
  a9[4] = v20;
}

unint64_t sub_10036879C()
{
  unint64_t result;

  result = qword_1008093E8;
  if (!qword_1008093E8)
  {
    result = swift_getWitnessTable(&unk_100686BA4, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_1008093E8);
  }
  return result;
}

uint64_t sub_1003687E0(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_1003687F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10036881C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch(sub_100368834, 0, 0);
}

uint64_t sub_100368834()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  double *v8;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_100021E08(0, v2, 0);
    v3 = (_QWORD *)(v1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = (void *)*v3;
      swift_bridgeObjectRetain(*v3);
      sub_1003684B8(v4, v5, 0, 0, 0, 0, 0, 0, (uint64_t *)(v0 + 16));
      v7 = _swiftEmptyArrayStorage[2];
      v6 = _swiftEmptyArrayStorage[3];
      if (*(_QWORD *)&v7 >= *(_QWORD *)&v6 >> 1)
        sub_100021E08(*(_QWORD *)&v6 > 1uLL, *(_QWORD *)&v7 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v7 + 1;
      v8 = &_swiftEmptyArrayStorage[5 * *(_QWORD *)&v7];
      v9 = *(_OWORD *)(v0 + 16);
      v10 = *(_OWORD *)(v0 + 32);
      v8[8] = *(double *)(v0 + 48);
      *((_OWORD *)v8 + 2) = v9;
      *((_OWORD *)v8 + 3) = v10;
      v3 += 2;
      --v2;
    }
    while (v2);
  }
  return (*(uint64_t (**)(double *))(v0 + 8))(_swiftEmptyArrayStorage);
}

double SegmentedControlPlaceholder.measure(toFit:with:)(double a1, double a2, uint64_t a3, uint64_t a4)
{
  return sub_10036898C(a4, a1, a2);
}

id sub_100368950()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISegmentedControl), "init");
  qword_100809408 = (uint64_t)result;
  return result;
}

double sub_100368984(double a1, double a2)
{
  uint64_t *v2;

  return sub_10036898C(*v2, a1, a2);
}

double sub_10036898C(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSString v11;
  void *v12;
  double v13;
  double v14;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n(a1, 2);
    v7 = (_QWORD *)(a1 + 40);
    do
    {
      v8 = *v7;
      v9 = qword_1007F1D58;
      swift_bridgeObjectRetain(*v7);
      if (v9 != -1)
        swift_once(&qword_1007F1D58, sub_100368950);
      v7 += 2;
      v10 = (void *)qword_100809408;
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "addSegmentWithTitle:", v11);
      swift_bridgeObjectRelease(v8);

      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  if (qword_1007F1D58 != -1)
    swift_once(&qword_1007F1D58, sub_100368950);
  v12 = (void *)qword_100809408;
  objc_msgSend((id)qword_100809408, "sizeThatFits:", a2, a3);
  v14 = v13;
  objc_msgSend(v12, "removeAllSegments");
  return v14;
}

ValueMetadata *type metadata accessor for SegmentedControlPlaceholder()
{
  return &type metadata for SegmentedControlPlaceholder;
}

ValueMetadata *type metadata accessor for CancelPreorderActionImplementation()
{
  return &type metadata for CancelPreorderActionImplementation;
}

unint64_t sub_100368B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809410;
  if (!qword_100809410)
  {
    v1 = type metadata accessor for CancelPreorderAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100809410);
  }
  return result;
}

uint64_t sub_100368B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 v22;
  Swift::String v23;
  __n128 v24;
  _QWORD v26[2];
  _QWORD v27[4];

  v26[0] = a1;
  v26[1] = a2;
  v2 = type metadata accessor for ActionOutcome(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LogMessage.StringInterpolation(0, v4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v15 = sub_1000117A8(v11, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
  v19._object = (void *)0x8000000100644C00;
  v19._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v20 = type metadata accessor for PreorderStatus(0);
  v27[3] = v20;
  v21 = sub_1000117C0(v27);
  v22.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v21, v26[0], v20);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v27, v22);
  sub_1000131E0((uint64_t)v27);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  LogMessage.init(stringInterpolation:)(v10);
  Logger.info(_:)(v18, v11, &protocol witness table for OSLogger);
  v24 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for ActionOutcome.performed(_:), v2);
  Promise.resolve(_:)(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_100368DB8(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  Swift::String v24;
  __n128 v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[8];
  _QWORD v35[4];

  v30 = a4;
  v31 = a6;
  v29 = a5;
  v7 = type metadata accessor for LogMessage.StringInterpolation(0, a2);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v15 = sub_1000117A8(v11, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1);
  v19._object = (void *)0x8000000100644BE0;
  v19._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  swift_getErrorValue(a1, v34, &v32);
  v20 = v32;
  v21 = v33;
  v35[3] = v33;
  v22 = sub_1000117C0(v35);
  v23.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, v20, v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v35, v23);
  sub_1000131E0((uint64_t)v35);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v10);
  Logger.error(_:)(v18, v11, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
  ObjectType = swift_getObjectType();
  AppStateController.clearWaiting(for:)(v29, ObjectType, v30);
  return Promise.reject(_:)(a1);
}

uint64_t sub_100368FEC(uint64_t *a1, uint64_t a2)
{
  return sub_100368FF4(*a1, a2);
}

uint64_t sub_100368FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v31 = type metadata accessor for AdamId(0);
  v3 = *(_QWORD *)(v31 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v31);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = sub_10000DF3C(&qword_100803510);
  v10 = Promise.__allocating_init()(v9);
  v11 = CancelPreorderAction.preorderAdamId.getter();
  v12 = CancelPreorderAction.isArcade.getter(v11);
  v13 = type metadata accessor for Commerce(0);
  v14 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v32, v13, a2, v13, v14);
  v15 = *(_QWORD *)(a2 + qword_100854060);
  if (v15)
  {
    v30 = v32[0];
    v16 = *(_QWORD *)(a2 + qword_100854060 + 8);
    v17 = swift_unknownObjectRetain(v15);
    v29 = dispatch thunk of Commerce.cancelPreorder(for:isArcade:)(v8, v12 & 1, v17);
    v18 = v31;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v31);
    v19 = *(unsigned __int8 *)(v3 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = (v4 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_10073A508, v21 + 8, v19 | 7);
    *(_QWORD *)(v22 + 16) = v15;
    *(_QWORD *)(v22 + 24) = v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v22 + v20, v5, v18);
    *(_QWORD *)(v22 + v21) = v10;
    v23 = sub_1000C0EC4();
    swift_retain_n(v10, 2);
    v24 = swift_unknownObjectRetain(v15);
    v25 = static OS_dispatch_queue.main.getter(v24);
    v32[3] = v23;
    v32[4] = &protocol witness table for OS_dispatch_queue;
    v32[0] = v25;
    v26 = v29;
    Promise.then(perform:orCatchError:on:)(sub_100369240, v10, sub_1003692D8, v22, v32);
    swift_unknownObjectRelease(v15);
    swift_release(v30);
    swift_release(v26);
    swift_release(v10);
    swift_release(v22);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v32);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v18);
    return v10;
  }
  else
  {
    v28 = sub_10000DF3C(&qword_1007FDEA0);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v28);
    __break(1u);
  }
  return result;
}

uint64_t sub_100369240(uint64_t a1)
{
  uint64_t v1;

  return sub_100368B4C(a1, v1);
}

uint64_t sub_100369248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1003692D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  __n128 v5;

  v3 = *(_QWORD *)(type metadata accessor for AdamId(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100368DB8(a1, v5, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10036932C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Shelf.ContentType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - v15;
  KeyPath = swift_getKeyPath(&unk_100686F40);
  v26 = a1;
  ItemLayoutContext.subscript.getter(v9);
  swift_release(KeyPath);
  v18 = swift_getKeyPath(&unk_100686F70);
  ReadOnlyLens.subscript.getter(v18, v6);
  v19 = swift_release(v18);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v7 + 8))(v9, v6, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_100366A50((uint64_t)v5);
    v20 = type metadata accessor for ComponentSeparator(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v27, 1, 1, v20);
  }
  v22 = v27;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v5, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v23 == enum case for Shelf.ContentType.smallLockup(_:))
  {
    type metadata accessor for SmallLockupCollectionViewCell(0);
    sub_1001AC82C(v22);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  if (v23 == enum case for Shelf.ContentType.mediumLockup(_:))
  {
    type metadata accessor for MediumLockupCollectionViewCell(0);
    sub_1003505D0(v22);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v16, v10);
  v25 = type metadata accessor for ComponentSeparator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  return ((uint64_t (*)(char *, uint64_t))v24)(v13, v10);
}

uint64_t sub_1003695D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10036932C(a1, a2);
}

unint64_t sub_1003695EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_100809438);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_10036C298((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003696F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FBA18);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000194E4(v6, (uint64_t)v15, &qword_1008094D0);
    result = sub_10036C148((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = v4[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    *(_QWORD *)(v4[7] + 8 * result) = v17;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036981C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10000DF3C(&qword_1007F7D30);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_1008094D8);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_1007F7D30);
    result = sub_10036C178((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for AdvertActionMetrics.ReportingDestination(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    result = sub_100010F3C(v10, v8[7] + 40 * v17);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003699BC(uint64_t a1)
{
  return sub_10036A334(a1, &qword_1007FB978, &qword_100809440);
}

unint64_t sub_1003699D0(uint64_t a1)
{
  return sub_10036AF3C(a1, &qword_100809458);
}

unint64_t sub_1003699DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_100809478);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    result = sub_10036C324(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100369AF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FB9F0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    v10 = v9;
    result = sub_10036C324(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100369C0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_10000DF3C(&qword_1008094F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_1007FB9D0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_1008094F0);
    result = sub_10036C524((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for IndexPath(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = (char *)(v8[7] + 2 * v17);
    v21 = v10[1];
    *v20 = *v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100369DB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10000DF3C(&qword_100809548);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_1007FBA00);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_100809548);
    v15 = *v5;
    v16 = v5[1];
    result = sub_10036C324(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for AdamId(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100369F50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_100800138);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000194E4(v7, (uint64_t)v16, &qword_100809460);
    result = sub_10036C148((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10003B8E8(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036A090(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10000DF3C(&qword_100809550);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_1007FBA40);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_100809550);
    result = sub_10036C524((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for IndexPath(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_OWORD *)(v8[7] + 16 * v17) = *(_OWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10036A224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1008094A8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_10036C298((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v14;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036A320(uint64_t a1)
{
  return sub_10036A334(a1, &qword_100809498, &qword_1008094A0);
}

unint64_t sub_10036A334(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(a2);
  v6 = static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v7;
  }
  v9 = v6 + 64;
  v10 = a1 + 32;
  swift_retain(v6);
  while (1)
  {
    sub_1000194E4(v10, (uint64_t)&v17, a3);
    v11 = v17;
    result = sub_10036C298(v17);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v7[6] + 8 * result) = v11;
    result = (unint64_t)sub_10003B8E8(&v18, (_OWORD *)(v7[7] + 32 * result));
    v14 = v7[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v7[2] = v16;
    v10 += 40;
    if (!--v8)
    {
      swift_release(v7);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036A458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FBA50);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_10036C324(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036A578(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10000DF3C(&qword_100809428);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_100809558);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_100809428);
    result = sub_10036C148((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6] + 40 * result;
    v19 = *(_OWORD *)v5;
    v20 = *((_OWORD *)v5 + 1);
    *(_QWORD *)(v18 + 32) = *((_QWORD *)v5 + 4);
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    v21 = v8[7];
    v22 = type metadata accessor for URL(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v17, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10036A720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10000DF3C(&qword_100809468);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_1007FB988);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_100809468);
    result = sub_10036C61C((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for BadgeType(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10036A8B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FB9E0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 1);
    v8 = *v6;
    swift_retain(v7);
    v9 = v8;
    result = sub_10036C6B4(v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v7;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036A9BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FB9B8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000194E4(v7, (uint64_t)&v16, &qword_1008068F8);
    v8 = v16;
    v9 = v17;
    result = sub_10036C324(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10003B8E8(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036AAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FB980);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10036C324(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036AC00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_10000DF3C(&qword_1008092A8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_100809490);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_1008092A8);
    result = sub_10036C744((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for OfferTitleType(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = (_QWORD *)(v8[7] + 16 * v17);
    v21 = *((_QWORD *)v10 + 1);
    *v20 = *(_QWORD *)v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10036AD9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10000DF3C(&qword_100809538);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_100809540);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_100809538);
    result = sub_10036C7DC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for PageFacets.Facet(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10036AF30(uint64_t a1)
{
  return sub_10036AF3C(a1, &qword_1008094B8);
}

unint64_t sub_10036AF3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_unknownObjectRetain(v10);
    result = sub_10036C324(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10036B050(uint64_t a1)
{
  return sub_10036B098(a1, &qword_100809518, &qword_100809520, (uint64_t (*)(char *))sub_10036C964, (uint64_t (*)(_QWORD))&type metadata accessor for MetricsFieldInclusionRequest);
}

unint64_t sub_10036B074(uint64_t a1)
{
  return sub_10036B098(a1, &qword_1008094F8, &qword_100809500, (uint64_t (*)(char *))sub_10036C8CC, (uint64_t (*)(_QWORD))&type metadata accessor for MetricsFieldExclusionRequest);
}

unint64_t sub_10036B098(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t (*v33)(char *);

  v32 = a5;
  v33 = a4;
  v8 = sub_10000DF3C(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
    v14 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v14;
  }
  sub_10000DF3C(a3);
  v13 = static _DictionaryStorage.allocate(capacity:)(v12);
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    goto LABEL_9;
  v16 = (__int128 *)&v11[*(int *)(v8 + 48)];
  v17 = v13 + 64;
  v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31 = a1;
  v19 = a1 + v18;
  v20 = *(_QWORD *)(v9 + 72);
  swift_retain(v13);
  while (1)
  {
    sub_1000194E4(v19, (uint64_t)v11, a2);
    result = v33(v11);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v14[6];
    v25 = v32(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v11, v25);
    result = sub_100010F3C(v16, v14[7] + 40 * v23);
    v26 = v14[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v14[2] = v28;
    v19 += v20;
    if (!--v15)
    {
      swift_release(v14);
      v29 = v31;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t Badge.enrich(objectGraph:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  id v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  void *v89;
  id v90[2];

  v2 = v1;
  v4 = type metadata accessor for ShelvesIntent(0);
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  __chkstk_darwin(v4);
  v83 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v86 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BadgeType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_100809418);
  v16 = Promise.__allocating_init()();
  Badge.type.getter(v17);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if ((_DWORD)v18 != enum case for BadgeType.friendsPlaying(_:))
  {
    *(_QWORD *)&v87 = 0;
    Promise.resolve(_:)(&v87);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return v16;
  }
  v19 = Badge.content.getter(v18);
  v20 = BadgeContentKeyNumberOfAvatarsToDisplay.getter();
  v22 = v21;
  if (*(_QWORD *)(v19 + 16) && (v23 = sub_10036C324(v20, v21), (v24 & 1) != 0))
  {
    sub_100010E9C(*(_QWORD *)(v19 + 56) + 32 * v23, (uint64_t)&v87);
  }
  else
  {
    v87 = 0u;
    v88 = 0u;
  }
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v19);
  if (!*((_QWORD *)&v88 + 1))
    goto LABEL_24;
  v25 = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
  if ((swift_dynamicCast(v90, &v87, (char *)&type metadata for Any + 8, v25, 6) & 1) == 0)
    goto LABEL_26;
  v26 = v90[0];
  v82 = objc_msgSend(v90[0], "integerValue");

  v28 = Badge.content.getter(v27);
  v29 = BadgeContentKeyNumberOfFriendsBeforeTruncation.getter();
  v31 = v30;
  if (*(_QWORD *)(v28 + 16) && (v32 = sub_10036C324(v29, v30), (v33 & 1) != 0))
  {
    sub_100010E9C(*(_QWORD *)(v28 + 56) + 32 * v32, (uint64_t)&v87);
  }
  else
  {
    v87 = 0u;
    v88 = 0u;
  }
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v28);
  if (!*((_QWORD *)&v88 + 1))
    goto LABEL_24;
  if ((swift_dynamicCast(v90, &v87, (char *)&type metadata for Any + 8, v25, 6) & 1) == 0)
  {
LABEL_26:
    *(_QWORD *)&v87 = 0;
    Promise.resolve(_:)(&v87);
    return v16;
  }
  v34 = v90[0];
  v35 = objc_msgSend(v90[0], "integerValue");

  v37 = Badge.content.getter(v36);
  v38 = BadgeContentKeyAdamId.getter();
  v40 = v39;
  if (*(_QWORD *)(v37 + 16) && (v41 = sub_10036C324(v38, v39), (v42 & 1) != 0))
  {
    sub_100010E9C(*(_QWORD *)(v37 + 56) + 32 * v41, (uint64_t)&v87);
  }
  else
  {
    v87 = 0u;
    v88 = 0u;
  }
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v37);
  if (!*((_QWORD *)&v88 + 1))
  {
LABEL_24:
    v50 = &qword_1007F6E90;
    v51 = (char *)&v87;
    goto LABEL_25;
  }
  if ((swift_dynamicCast(v90, &v87, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_26;
  v81 = v35;
  v43 = v90[0];
  v44 = v90[1];
  *(_QWORD *)&v87 = 0;
  *((_QWORD *)&v87 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(91);
  v45._countAndFlagsBits = 0xD000000000000059;
  v45._object = (void *)0x8000000100645DD0;
  String.append(_:)(v45);
  v46._countAndFlagsBits = (uint64_t)v43;
  v46._object = v44;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(v44);
  v47 = *((_QWORD *)&v87 + 1);
  URL.init(string:)(v87, *((_QWORD *)&v87 + 1));
  v48 = swift_bridgeObjectRelease(v47);
  v49 = v86;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v86 + 48))(v8, 1, v9, v48) == 1)
  {
    v50 = (uint64_t *)&unk_1007F5150;
    v51 = v8;
LABEL_25:
    sub_100011088((uint64_t)v51, v50);
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v11, v8, v9);
  v53 = type metadata accessor for ArtworkLoader(0);
  v54 = *(_QWORD *)(a1 + qword_100854050);
  v80 = a1;
  if (v54)
  {
    v55 = v49;
    v56 = sub_10000DF3C(&qword_100809420);
    v57 = sub_10000DF3C(&qword_100809428);
    v58 = *(_QWORD *)(v57 - 8);
    v59 = *(_QWORD *)(v58 + 72);
    v60 = *(unsigned __int8 *)(v58 + 80);
    v61 = (v60 + 32) & ~v60;
    v62 = swift_allocObject(v56, v61 + v59, v60 | 7);
    *(_OWORD *)(v62 + 16) = xmmword_10066FBA0;
    v63 = v62 + v61 + *(int *)(v57 + 48);
    v79 = 0x8000000100645E30;
    *(_QWORD *)&v87 = 0xD000000000000015;
    *((_QWORD *)&v87 + 1) = 0x8000000100645E30;
    swift_retain(v54);
    AnyHashable.init<A>(_:)(&v87, &type metadata for String, &protocol witness table for String);
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v63, v11, v9);
    v64 = sub_10036A578(v62);
    v65 = v83;
    ShelvesIntent.init(requests:)(v64);
    v66 = type metadata accessor for JSIntentDispatcher(0);
    v67 = type metadata accessor for ObjectGraph(0);
    v68 = v80;
    inject<A, B>(_:from:)(&v87, v66, v80, v66, v67);
    v69 = v87;
    v70 = sub_10000E99C(&qword_100809430, (uint64_t (*)(uint64_t))&type metadata accessor for ShelvesIntent, (uint64_t)&protocol conformance descriptor for ShelvesIntent);
    v71 = v68;
    v72 = v85;
    v73 = dispatch thunk of JSIntentDispatcher.dispatch<A>(intent:with:fileID:)(v65, v71, "SubscribePageExtension/Badge+Native.swift", 41, 2, v85, v70);
    v74 = swift_allocObject(&unk_10073A578, 24, 7);
    swift_weakInit(v74 + 16, v2);
    v75 = (_QWORD *)swift_allocObject(&unk_10073A5A0, 72, 7);
    v75[2] = v74;
    v75[3] = 0xD000000000000015;
    v75[4] = v79;
    v75[5] = v16;
    v75[6] = v82;
    v75[7] = v54;
    v75[8] = v81;
    v76 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    swift_retain(v54);
    v77 = swift_retain(v16);
    v78 = static OS_dispatch_queue.main.getter(v77);
    *((_QWORD *)&v88 + 1) = v76;
    v89 = &protocol witness table for OS_dispatch_queue;
    *(_QWORD *)&v87 = v78;
    Promise.then(perform:orCatchError:on:)(sub_10036C3E8, v75, sub_10036C060, 0, &v87);
    swift_release(v54);
    swift_release(v69);
    swift_release(v73);
    swift_release(v75);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v87);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v65, v72);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v11, v9);
    return v16;
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v53);
  __break(1u);
  return result;
}

void sub_10036B91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t i;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  void *object;
  uint64_t v57;
  uint64_t v58;
  uint64_t countAndFlagsBits;
  void *v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t inited;
  uint64_t v75;
  id v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Class v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char v102[80];
  _QWORD v103[2];
  _QWORD v104[5];
  char v105[16];

  v99 = a8;
  v98 = a7;
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  v14 = __chkstk_darwin(v13);
  v101 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BadgeStyle(0, v14);
  v17 = __chkstk_darwin(v16);
  v100 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for BadgeLeadingValue(0, v17);
  __chkstk_darwin(v19);
  v21 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for BadgeType(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AvatarShowcaseLayoutConfiguration(0, v25);
  __chkstk_darwin(v26);
  v28 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, v105, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v30 = Strong;
    v31 = ShelfBatch.shelves.getter();
    v103[0] = a3;
    v103[1] = a4;
    swift_bridgeObjectRetain(a4);
    AnyHashable.init<A>(_:)(v103, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v31 + 16) && (v32 = sub_10036C148((uint64_t)v104), (v33 & 1) != 0))
    {
      v34 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v32);
      swift_retain(v34);
      swift_bridgeObjectRelease(v31);
      sub_100019370((uint64_t)v104);
      v36 = Shelf.items.getter(v35);
      swift_release(v34);
      v37 = (uint64_t)sub_1000FDF5C(v36);
      swift_bridgeObjectRelease(v36);
      if (v37)
      {
        if ((unint64_t)v37 >> 62)
        {
          if (v37 < 0)
            v88 = v37;
          else
            v88 = v37 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v37);
          v38 = _CocoaArrayWrapper.endIndex.getter(v88);
          swift_bridgeObjectRelease(v37);
          if (v38 >= 1)
          {
LABEL_7:
            v95 = v38;
            if (v38 < a6)
              a6 = v38;
            AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(24.0, 15.0);
            v96 = (Class)type metadata accessor for AvatarShowcaseView(0);
            v39 = objc_allocWithZone(v96);
            v97 = sub_1004CCD38(a6, (uint64_t)v28);
            v104[0] = _swiftEmptyArrayStorage;
            if ((unint64_t)v37 >> 62)
            {
              if (v37 < 0)
                v50 = v37;
              else
                v50 = v37 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v37);
              v40 = _CocoaArrayWrapper.endIndex.getter(v50);
              if (v40)
                goto LABEL_11;
            }
            else
            {
              v40 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v37);
              if (v40)
              {
LABEL_11:
                v94 = a5;
                if (v40 < 1)
                {
                  __break(1u);
                  return;
                }
                for (i = 0; i != v40; ++i)
                {
                  if ((v37 & 0xC000000000000001) != 0)
                  {
                    v43 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v37);
                  }
                  else
                  {
                    v43 = *(_QWORD *)(v37 + 8 * i + 32);
                    v44 = swift_retain(v43);
                  }
                  v45 = dispatch thunk of GameCenterPlayer.artwork.getter(v44);
                  swift_release(v43);
                  if (v45)
                  {
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
                    v48 = *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
                    v47 = *(_QWORD *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
                    if (v48 >= v47 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
                    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v45);
                    specialized Array._endMutation()(v42);
                  }
                }
                swift_bridgeObjectRelease(v37);
                v49 = (_QWORD *)v104[0];
                goto LABEL_31;
              }
            }
            swift_bridgeObjectRelease(v37);
            v49 = _swiftEmptyArrayStorage;
LABEL_31:
            sub_1004CCEE8((uint64_t)v49, v98);
            swift_bridgeObjectRelease(v49);
            v51 = v95;
            if (v95 <= v99)
            {
              v61._object = (void *)0x8000000100645E80;
              v61._countAndFlagsBits = 0xD00000000000001DLL;
              v62._countAndFlagsBits = 0;
              v62._object = (void *)0xE000000000000000;
              v63 = localizedString(_:comment:)(v61, v62);
              v64 = v51;
              object = v63._object;
              v65 = sub_10000DF3C(&qword_1007FA388);
              v66 = swift_allocObject(v65, 72, 7);
              *(_OWORD *)(v66 + 16) = xmmword_10066FBA0;
              swift_bridgeObjectRelease(v37);
              *(_QWORD *)(v66 + 56) = &type metadata for Int;
              *(_QWORD *)(v66 + 64) = &protocol witness table for Int;
              *(_QWORD *)(v66 + 32) = v64;
              countAndFlagsBits = v63._countAndFlagsBits;
              v60 = v63._object;
              v58 = v66;
            }
            else
            {
              v52 = v99;
              swift_bridgeObjectRelease(v37);
              v53._countAndFlagsBits = 0xD000000000000021;
              v53._object = (void *)0x8000000100645EA0;
              v54._countAndFlagsBits = 0;
              v54._object = (void *)0xE000000000000000;
              v55 = localizedString(_:comment:)(v53, v54);
              object = v55._object;
              v57 = sub_10000DF3C(&qword_1007FA388);
              v58 = swift_allocObject(v57, 72, 7);
              *(_OWORD *)(v58 + 16) = xmmword_10066FBA0;
              *(_QWORD *)(v58 + 56) = &type metadata for Int;
              *(_QWORD *)(v58 + 64) = &protocol witness table for Int;
              *(_QWORD *)(v58 + 32) = v52;
              countAndFlagsBits = v55._countAndFlagsBits;
              v60 = v55._object;
            }
            v99 = String.init(format:_:)(countAndFlagsBits, v60, v58);
            v98 = v67;
            v68 = swift_bridgeObjectRelease(object);
            Badge.id.getter(v104, v68);
            v70 = Badge.type.getter(v69);
            v95 = Badge.heading.getter(v70);
            v94 = v71;
            v93 = Badge.longCaption.getter(v95);
            v92 = v72;
            v73 = sub_10000DF3C(&qword_1007FE3B0);
            inited = swift_initStackObject(v73, v102);
            *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
            *(_QWORD *)(inited + 32) = BadgeContentKeyNativeContentView.getter();
            *(_QWORD *)(inited + 40) = v75;
            *(_QWORD *)(inited + 72) = v96;
            v76 = v97;
            *(_QWORD *)(inited + 48) = v97;
            v97 = v76;
            v96 = (Class)sub_10036A9BC(inited);
            v77 = Badge.leadingValue.getter();
            v78 = v100;
            v79 = Badge.style.getter(v77);
            v91 = Badge.accessibilityTitle.getter(v79);
            v90 = v80;
            v89 = Badge.accessibilityCaption.getter();
            v82 = v81;
            v83 = Badge.clickAction.getter();
            v84 = Badge.artwork.getter();
            v85 = v101;
            Badge.impressionMetrics.getter();
            v86 = type metadata accessor for Badge(0);
            swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
            v87 = Badge.init(id:type:heading:caption:longCaption:content:leadingValue:style:accessibilityTitle:accessibilityCaption:clickAction:artwork:trailingArtwork:isMonochrome:impressionMetrics:)(v104, v24, v95, v94, v99, v98, v93, v92, v96, v21, v78, v91, v90, v89, v82, v83, v84, 0, 1,
                    v85);
            v104[0] = v87;
            swift_retain(v87);
            Promise.resolve(_:)(v104);

            swift_release_n(v87, 2);
            goto LABEL_23;
          }
        }
        else
        {
          v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v38 >= 1)
            goto LABEL_7;
        }
        swift_bridgeObjectRelease(v37);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v31);
      sub_100019370((uint64_t)v104);
    }
    v104[0] = 0;
    Promise.resolve(_:)(v104);
LABEL_23:
    swift_release(v30);
  }
}

double sub_10036C060(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[8];

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10066FBA0;
  swift_getErrorValue(a1, v10, &v8);
  v4 = v8;
  v5 = v9;
  *(_QWORD *)(v3 + 56) = v9;
  v6 = sub_1000117C0((_QWORD *)(v3 + 32));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v6, v4, v5);
  print(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

unint64_t sub_10036C110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_10036CE88(a1, v3);
}

unint64_t sub_10036C148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10036C9FC(a1, v4);
}

unint64_t sub_10036C178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for AdvertActionMetrics.ReportingDestination(0);
  v6 = sub_10000E99C(&qword_1008094E0, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertActionMetrics.ReportingDestination, (uint64_t)&protocol conformance descriptor for AdvertActionMetrics.ReportingDestination);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertActionMetrics.ReportingDestination, &qword_1008094E8, (uint64_t)&protocol conformance descriptor for AdvertActionMetrics.ReportingDestination);
}

unint64_t sub_10036C210(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::UInt v3;
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, *(_QWORD *)(v1 + 40));
  if ((a1 - 4) >= 3u)
  {
    Hasher._combine(_:)(2uLL);
    v3 = a1;
  }
  else
  {
    v3 = qword_100686FA0[(char)(a1 - 4)];
  }
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  return sub_10036CAC0(a1, v4);
}

unint64_t sub_10036C298(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10036CF24(a1, v7);
}

unint64_t sub_10036C324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10036CB78(a1, a2, v5);
}

uint64_t sub_10036C388()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10036C3AC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_10036C3E8(uint64_t a1)
{
  uint64_t *v1;

  sub_10036B91C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

unint64_t sub_10036C3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for AdamId(0);
  v6 = sub_10000E99C(&qword_1007F9268, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, &qword_1008083C0, (uint64_t)&protocol conformance descriptor for AdamId);
}

unint64_t sub_10036C494(Swift::UInt a1, Swift::UInt a2, double a3)
{
  uint64_t v3;
  Swift::UInt64 v7;
  Swift::Int v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, *(_QWORD *)(v3 + 40));
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = *(_QWORD *)&a3;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  v8 = Hasher._finalize()();
  return sub_10036CD88(a1, a2, v8, a3);
}

unint64_t sub_10036C524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for IndexPath(0);
  v6 = sub_10000E99C((unint64_t *)&unk_10081C740, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (unint64_t *)&qword_1007FA380, (uint64_t)&protocol conformance descriptor for IndexPath);
}

unint64_t sub_10036C5BC(double a1, double a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  sub_1003EDA0C(a1, a2);
  v5 = Hasher._finalize()();
  return sub_10036CE14(v5, a1, a2);
}

unint64_t sub_10036C61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for BadgeType(0);
  v6 = sub_10000E99C(&qword_1007FB990, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, &qword_100809470, (uint64_t)&protocol conformance descriptor for BadgeType);
}

unint64_t sub_10036C6B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 40);
  v4 = type metadata accessor for Artwork(0);
  v5 = sub_10000E99C((unint64_t *)&qword_1007FB9E8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  v6 = dispatch thunk of Hashable._rawHashValue(seed:)(v3, v4, v5);
  return sub_10036D098(a1, v6);
}

unint64_t sub_10036C744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for OfferTitleType(0);
  v6 = sub_10000E99C(&qword_100809480, (uint64_t (*)(uint64_t))&type metadata accessor for OfferTitleType, (uint64_t)&protocol conformance descriptor for OfferTitleType);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for OfferTitleType, &qword_100809488, (uint64_t)&protocol conformance descriptor for OfferTitleType);
}

unint64_t sub_10036C7DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for PageFacets.Facet(0);
  v6 = sub_10000E99C(&qword_100808548, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet, (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet, &qword_100809530, (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
}

unint64_t sub_10036C874(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_100438E0C((uint64_t)v5);
  v3 = Hasher._finalize()();
  return sub_10036D178(a1, v3);
}

unint64_t sub_10036C8CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for MetricsFieldExclusionRequest(0);
  v6 = sub_10000E99C(&qword_100809508, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldExclusionRequest, (uint64_t)&protocol conformance descriptor for MetricsFieldExclusionRequest);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldExclusionRequest, &qword_100809510, (uint64_t)&protocol conformance descriptor for MetricsFieldExclusionRequest);
}

unint64_t sub_10036C964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v6 = sub_10000E99C(&qword_1007FD7E8, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest, (uint64_t)&protocol conformance descriptor for MetricsFieldInclusionRequest);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10036CC58(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest, &qword_1007FD7F0, (uint64_t)&protocol conformance descriptor for MetricsFieldInclusionRequest);
}

unint64_t sub_10036C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10006BFD4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100019370((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10036CAC0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result);
      switch(v7)
      {
        case 6:
          if (a1 == 6)
            return result;
          break;
        case 5:
          if (a1 == 5)
            return result;
          break;
        case 4:
          if (a1 == 4)
            return result;
          break;
        default:
          if (a1 - 7 <= 0xFFFFFFFC && v7 == a1)
            return result;
          break;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10036CB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10036CC58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  uint64_t v24;

  v23 = a4;
  v24 = a5;
  v6 = v5;
  v21 = a1;
  v22 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      v18 = sub_10000E99C(v23, v22, v24);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v8, v18);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_10036CD88(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  double v10;
  BOOL v12;

  v6 = -1 << *(_BYTE *)(v4 + 32);
  result = a3 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v8 = ~v6;
    do
    {
      v9 = *(_QWORD *)(v4 + 48) + 24 * result;
      v10 = *(double *)(v9 + 16);
      v12 = *(_QWORD *)v9 == a1 && *(_QWORD *)(v9 + 8) == a2;
      if (v10 != a4)
        v12 = 0;
      if (v12)
        break;
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10036CE14(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  double *v7;
  double v8;
  BOOL v9;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (double *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v8 = v7[1];
      v9 = *v7 == a2;
      if (v8 == a3 && v9)
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10036CE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10036CF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10036D098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v12 = a1;
  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v7 = ~v4;
    v8 = type metadata accessor for Artwork(0);
    v9 = sub_10000E99C(&qword_1007FAFA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v5);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v11, &v12, v8, v9) & 1) != 0)
        break;
      v5 = (v5 + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_10036D178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;

  v5 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_10010FF78(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      sub_10043A638((uint64_t)v8, a1);
      v14 = v13;
      sub_10007F9D4((uint64_t)v8);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10036D270(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  void *v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10000DF3C(&qword_100809528);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = sub_10036C210(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = (void *)*v8;
    v14 = v5;
    result = sub_10036C210(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10036D368(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000DF3C(&qword_1007FB9B0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_BYTE *)(a1 + 72); ; i += 48)
    {
      v5 = *((_QWORD *)i - 5);
      v6 = *((_QWORD *)i - 4);
      v7 = *((_QWORD *)i - 3);
      v8 = *((_QWORD *)i - 2);
      v9 = *((_QWORD *)i - 1);
      v10 = *i;
      result = sub_10036C110(v5);
      if ((v12 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v13 = v3[7] + 40 * result;
      *(_QWORD *)v13 = v6;
      *(_QWORD *)(v13 + 8) = v7;
      *(_QWORD *)(v13 + 16) = v8;
      *(_QWORD *)(v13 + 24) = v9;
      *(_BYTE *)(v13 + 32) = v10;
      v14 = v3[2];
      v15 = __OFADD__(v14, 1);
      v16 = v14 + 1;
      if (v15)
        goto LABEL_10;
      v3[2] = v16;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036D464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_10000DF3C(&qword_1008094C8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_10000DF3C(&qword_1007FB998);
    v7 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v6);
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1000194E4(v9, (uint64_t)v5, &qword_1008094C8);
      v11 = *v5;
      result = sub_10036C110(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for ImpressionMetrics(0);
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036D5CC(_QWORD *a1)
{
  return sub_10036DDD0(a1, &qword_1007FB9F8);
}

unint64_t sub_10036D5D8(double *a1)
{
  uint64_t v1;
  _QWORD *v3;
  Swift::UInt v4;
  Swift::UInt v5;
  double v6;
  double v7;
  unint64_t result;
  char v9;
  double *v10;
  double *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  double *v15;
  double v16;
  char v17;

  v1 = *((_QWORD *)a1 + 2);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10000DF3C(&qword_1007FB968);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *((_QWORD *)a1 + 4);
  v5 = *((_QWORD *)a1 + 5);
  v6 = a1[6];
  v7 = a1[7];
  result = sub_10036C494(v4, v5, v6);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(*(_QWORD *)&v7);
    return (unint64_t)v3;
  }
  v10 = a1 + 11;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (double *)(v3[6] + 24 * result);
    *(_QWORD *)v11 = v4;
    *((_QWORD *)v11 + 1) = v5;
    v11[2] = v6;
    *(double *)(v3[7] + 8 * result) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    if (!--v1)
      goto LABEL_8;
    v15 = v10 + 4;
    v4 = *((_QWORD *)v10 - 3);
    v5 = *((_QWORD *)v10 - 2);
    v6 = *(v10 - 1);
    v16 = *v10;
    swift_bridgeObjectRetain(*(_QWORD *)&v7);
    result = sub_10036C494(v4, v5, v6);
    v10 = v15;
    v7 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10036D70C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000DF3C(&qword_1007FBA48);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_10036C110(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036D7E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000DF3C(&qword_1008094B0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = a1 + 40; ; i += 48)
    {
      v5 = *(double *)(i - 8);
      v6 = *(double *)i;
      v7 = *(_QWORD *)(i + 8);
      v16 = *(_OWORD *)(i + 16);
      v8 = *(_QWORD *)(i + 32);
      result = sub_10036C5BC(v5, *(double *)i);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v11 = (double *)(v3[6] + 16 * result);
      *v11 = v5;
      v11[1] = v6;
      v12 = v3[7] + 32 * result;
      *(_QWORD *)v12 = v7;
      *(_OWORD *)(v12 + 8) = v16;
      *(_QWORD *)(v12 + 24) = v8;
      v13 = v3[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v3[2] = v15;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036D8EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  unint64_t result;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000DF3C(&qword_1008094C0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_OWORD *)(a1 + 56); ; i = (_OWORD *)((char *)i + 40))
    {
      v5 = *((_QWORD *)i - 3);
      v12 = *i;
      v13 = *(i - 1);
      result = sub_10036C110(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v8 = (_OWORD *)(v3[7] + 32 * result);
      *v8 = v13;
      v8[1] = v12;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036D9D4(_QWORD *a1)
{
  return sub_10036DCD4(a1, &qword_1007FBA20);
}

unint64_t sub_10036D9E0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10000DF3C(&qword_1007FBA38);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_10036C110(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_10036C110(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10036DAD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000DF3C(&qword_1007FB9A8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = a1 + 32; ; i += 40)
    {
      sub_1000194E4(i, (uint64_t)&v11, &qword_100809450);
      v5 = v11;
      result = sub_10036C110(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      result = (unint64_t)sub_10003B8E8(&v12, (_OWORD *)(v3[7] + 32 * result));
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036DBD4(_QWORD *a1)
{
  return sub_10036DCD4(a1, &qword_100809448);
}

unint64_t sub_10036DBE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000DF3C(&qword_1007FBA30);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_QWORD *)i - 1);
      v11 = *i;
      result = sub_10036C110(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10036DCBC(_QWORD *a1)
{
  return sub_10036DCD4(a1, &qword_1007FBA28);
}

unint64_t sub_10036DCC8(_QWORD *a1)
{
  return sub_10036DCD4(a1, &qword_1007FB9C8);
}

unint64_t sub_10036DCD4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  unint64_t result;
  char v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  char v17;
  id v18;

  v2 = a1[2];
  if (!v2)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10000DF3C(a2);
  v4 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v5 = a1[4];
  v6 = (void *)a1[5];
  result = sub_10036C110(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v18 = v6;
    return (unint64_t)v4;
  }
  v9 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v4[6] + v10) = v5;
    *(_QWORD *)(v4[7] + v10) = v6;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v4[2] = v13;
    if (!--v2)
      goto LABEL_8;
    v14 = v9 + 2;
    v5 = (uint64_t)*(v9 - 1);
    v15 = *v9;
    v16 = v6;
    result = sub_10036C110(v5);
    v9 = v14;
    v6 = v15;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10036DDC4(_QWORD *a1)
{
  return sub_10036DDD0(a1, &qword_1007FB9D8);
}

unint64_t sub_10036DDD0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v2 = a1[2];
  if (!v2)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10000DF3C(a2);
  v4 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v6 = a1[4];
  v5 = a1[5];
  result = sub_10036C110(v6);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v5);
    return (unint64_t)v4;
  }
  v9 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v4[6] + v10) = v6;
    *(_QWORD *)(v4[7] + v10) = v5;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v4[2] = v13;
    if (!--v2)
      goto LABEL_8;
    v14 = v9 + 2;
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_retain(v5);
    result = sub_10036C110(v6);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

double sub_10036DEC8()
{
  double result;

  off_100809568 = 0;
  *(_QWORD *)&result = swift_unknownObjectWeakInit(&unk_100809560, 0).n128_u64[0];
  return result;
}

double sub_10036DEDC(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11;
  uint64_t ObjectType;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;

  v11 = *a1;
  ObjectType = swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v14 = v13;
  v15 = type metadata accessor for AppEventView(0);
  v16.n128_u64[0] = v14;
  return sub_1001626C8(v11, a8, a6, v16, a3, v15, ObjectType);
}

id sub_10036DF4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  sub_1001629A4(*a1, a3);
  return objc_msgSend(v3, "setNeedsLayout");
}

uint64_t sub_10036DF90(_QWORD *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView];
  objc_msgSend(v2, "bounds");
  v7 = v6;
  v8 = a1[3];
  v9 = a1[4];
  v10 = sub_100011064(a1, v8);
  return sub_100162CE0((uint64_t)v10, a2, v5, v8, v9, v7);
}

void sub_10036E010(uint64_t a1, uint64_t a2, char a3)
{
  sub_10043E720(a1, a3, a3);
}

uint64_t sub_10036E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  return sub_10036E084(a1, a7, a2, a3, a4, a5);
}

uint64_t sub_10036E058()
{
  return sub_10000E99C(&qword_1007F54B8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEvent, (uint64_t)&protocol conformance descriptor for AppPromotion);
}

uint64_t sub_10036E084(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t ObjectType;
  double v11;
  double v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  double v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  _BYTE v45[40];
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48;

  ObjectType = swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v12 = v11;
  v13 = objc_msgSend(a6, "traitCollection");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");
  v15 = static UIContentSizeCategory.>= infix(_:_:)(v14, UIContentSizeCategoryExtraExtraExtraLarge);

  if ((v15 & 1) == 0)
  {
    if (qword_1007F10B0 != -1)
      swift_once(&qword_1007F10B0, sub_1000B40CC);
    sub_100460948((uint64_t)xmmword_100851230, (uint64_t)a6, v12, a2);
    v28 = v27;
    if (qword_1007F13F0 != -1)
      swift_once(&qword_1007F13F0, sub_100159E50);
    v29 = type metadata accessor for AppEventCardLayout.Metrics(0);
    v30 = (_QWORD *)sub_1000117A8(v29, (uint64_t)qword_100851FE0);
    sub_1000F4AD0(v30, a1, a5, a6, ObjectType, v12, a2);
    v32 = v28 + v31;
    goto LABEL_33;
  }
  v16 = (uint64_t)_swiftEmptyArrayStorage;
  v48 = (uint64_t)_swiftEmptyArrayStorage;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_100011020(v18, (uint64_t)v47);
      sub_100011020((uint64_t)v47, (uint64_t)v45);
      v20 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v22 = type metadata accessor for AppEvent(0, v21);
      if ((swift_dynamicCast(&v46, v45, v20, v22, 6) & 1) == 0)
        v46 = 0;
      v23 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
      v24 = v46;
      if (v46)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v26 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v25 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v26 >= v25 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
        specialized Array._endMutation()(v19);
      }
      v18 += 40;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(a1);
    v16 = v48;
  }
  if (!((unint64_t)v16 >> 62))
  {
    v33 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v33)
      goto LABEL_19;
LABEL_32:
    swift_bridgeObjectRelease(v16);
    v32 = 0.0;
LABEL_33:
    v42 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    PageTraitEnvironment.pageColumnWidth.getter();
    v43 = objc_msgSend(v42, "absoluteDimension:");
    v44 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(0.0, v32);

    return v44;
  }
  if (v16 < 0)
    v41 = v16;
  else
    v41 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v33 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease(v16);
  if (!v33)
    goto LABEL_32;
LABEL_19:
  result = type metadata accessor for AppEventView(0);
  if (v33 >= 1)
  {
    v35 = result;
    v36 = 0;
    v32 = 0.0;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
      {
        v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v16);
      }
      else
      {
        v37 = *(_QWORD *)(v16 + 8 * v36 + 32);
        v38 = swift_retain(v37);
      }
      ++v36;
      v38.n128_f64[0] = v12;
      sub_1001626C8(v37, a6, a5, v38, a2, v35, ObjectType);
      v40 = v39;
      swift_release(v37);
      if (v32 <= v40)
        v32 = v40;
    }
    while (v33 != v36);
    swift_bridgeObjectRelease(v16);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

char *sub_10036E438(char *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = qword_1008095B8;
  v12 = objc_allocWithZone((Class)type metadata accessor for ArtworkGrid());
  v13 = a1;
  *(_QWORD *)&a1[v11] = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v16.receiver = v13;
  v16.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v16, "initWithFrame:", a2, a3, a4, a5);
  objc_msgSend(*(id *)&v14[qword_100852CF8], "addSubview:", *(_QWORD *)&v14[qword_1008095B8]);
  return v14;
}

void sub_10036E530(void *a1)
{
  char *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  objc_super v11;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType();
  v1 = (char *)v12.receiver;
  objc_msgSendSuper2(&v12, "layoutSubviews");
  v2 = *(void **)&v1[qword_1008095B8];
  objc_msgSend(*(id *)&v1[qword_100852CF8], "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for ArtworkGrid();
  objc_msgSendSuper2(&v11, "setFrame:", v4, v6, v8, v10);
  sub_10050796C();
  objc_msgSend(v2, "setNeedsLayout");

}

double sub_10036E604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  v6 = v5;
  v9 = sub_100550E88(a1, a4);
  v10 = TodayCardMediaGrid.lockups.getter(v9);
  v11 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 >= 0)
      v10 &= 0xFFFFFFFFFFFFFF8uLL;
    v12 = _CocoaArrayWrapper.endIndex.getter(v10);
  }
  else
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = swift_bridgeObjectRelease(v11);
  if (v12)
    v13.n128_f64[0] = sub_1005A45DC(a3, a5, *(_BYTE **)(v6 + qword_1008095B8), v13);
  return v13.n128_f64[0];
}

void sub_10036E6A8()
{
  uint64_t v0;

}

void sub_10036E6B8(uint64_t a1)
{

}

uint64_t type metadata accessor for GridTodayBrickCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1008095E8;
  if (!qword_1008095E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GridTodayBrickCollectionViewCell);
  return result;
}

uint64_t sub_10036E704(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 216);
}

uint64_t sub_10036E748()
{
  return type metadata accessor for GridTodayBrickCollectionViewCell(0);
}

void CondensedInAppPurchaseContentView.applyData(from:asPartOf:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  id receiver;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  Swift::String v39;
  void *object;
  NSString v41;
  void *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  NSString v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  NSString v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  uint64_t v87;
  Swift::Bool v88;
  uint64_t v89;
  Swift::Bool v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  void *v95;
  uint64_t v96;
  char *v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  void (*v102)(char *, char *, uint64_t, __n128);
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  objc_class *v105;
  id v106;
  uint64_t v107;
  double v108;
  double v109;
  void *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  objc_super v125[2];
  objc_super v126;
  UIImage_optional v127;
  UIImage_optional v128;

  v3 = v2;
  v121 = a2;
  v4 = type metadata accessor for InAppPurchaseTheme(0);
  v123 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v122 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v111 - v7;
  v9 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v9);
  v117 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v114 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v115 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v119 = *(_QWORD *)(v13 - 8);
  v120 = (id)v13;
  __chkstk_darwin(v13);
  v118 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v15);
  v116 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1008016A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v20);
  v22 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v23);
  v25 = (char *)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v26);
  v28 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for InAppPurchaseSearchResult(0);
  v30 = sub_10000E99C(&qword_1007FA910, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(v125, v29, v29, v30);
  receiver = v125[0].receiver;
  if (v125[0].receiver)
  {
    v112 = v8;
    v113 = v4;
    v33 = InAppPurchaseSearchResult.lockup.getter(v31);
    swift_release(receiver);
    v35 = InAppPurchaseLockup.isSubscription.getter(v34);
    v36 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel];
    v124 = v3;
    if ((v35 & 1) != 0)
    {
      v37 = 0xD00000000000003ALL;
      v38 = 0x80000001006342F0;
    }
    else
    {
      v38 = 0x8000000100634280;
      v37 = 0xD00000000000002DLL;
    }
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(*(Swift::String *)&v37, v39)._object;
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v36, "setText:", v41, swift_bridgeObjectRelease(object).n128_f64[0]);

    v42 = *(void **)&v124[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel];
    v43 = swift_retain(v33);
    Lockup.title.getter(v43);
    v45 = v44;
    v46 = swift_release(v33).n128_u64[0];
    if (v45)
    {
      v47 = String._bridgeToObjectiveC()();
      v46 = swift_bridgeObjectRelease(v45).n128_u64[0];
    }
    else
    {
      v47 = 0;
    }
    objc_msgSend(v42, "setText:", v47, *(double *)&v46);

    v48 = *(void **)&v124[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel];
    InAppPurchaseLockup.descriptionText.getter(v49);
    if (v50)
    {
      v52 = v50;
      v53 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v51 = swift_bridgeObjectRelease(v52).n128_u64[0];
    }
    else
    {
      v53 = 0;
    }
    objc_msgSend(v48, "setText:", v53, v51);

    v54 = v124;
    sub_1000DBB84();
    swift_retain(v33);
    v56 = Lockup.offerDisplayProperties.getter(v55);
    swift_release(v33);
    if (v56)
    {
      v57 = enum case for OfferStyle.white(_:);
      v58 = type metadata accessor for OfferStyle(0);
      v59 = *(_QWORD *)(v58 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v28, v57, v58);
      v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56);
      v54 = v124;
      v60(v28, 0, 1, v58);
      v61 = type metadata accessor for OfferEnvironment(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v25, 1, 1, v61);
      v62 = type metadata accessor for OfferTint(0);
      v63.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v22, 1, 1, v62);
      v64 = type metadata accessor for OfferLabelStyle(0, v63);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v19, 1, 1, v64);
      memset(v125, 0, sizeof(v125));
      v65 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)(0, 0, 0, v28, v25, v22, 2, 2, 2, v19, 0, 0, 1, v125, 0, 0, 0, 0, 0,
              0,
              0,
              2,
              0);
      swift_release(v56);
      sub_100011088((uint64_t)v125, &qword_1007F6E90);
      v66 = (uint64_t)v19;
      v67 = v65;
      sub_100011088(v66, (uint64_t *)&unk_1008016A0);
      sub_100011088((uint64_t)v22, (uint64_t *)&unk_1007F76F0);
      sub_100011088((uint64_t)v25, (uint64_t *)&unk_1007F7C20);
      sub_100011088((uint64_t)v28, (uint64_t *)&unk_1007F7700);
    }
    else
    {
      v67 = 0;
    }
    v68 = *(void **)&v54[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton];
    v69 = swift_retain(v33);
    v70 = Lockup.buttonAction.getter(v69);
    swift_release(v33);
    v71 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    v72 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v116, 1, 1, v71);
    v73 = v114;
    v74 = v115;
    (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v115, enum case for OfferButtonSubtitlePosition.right(_:), v11);
    v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
    v76 = v117;
    v75(v117, 1, 1, v11);
    v77 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
    v78 = (uint64_t)v118;
    AccessibilityConditional.init(value:axValue:)(v74, v76, v11, v77);
    v79 = type metadata accessor for ObjectGraph(0);
    v80 = v121;
    v81 = swift_dynamicCastClassUnconditional(v121, v79, 0, 0, 0);
    sub_10013AB60(v67, v70, 0, v72, v78, v81, 0, 0);
    v82 = swift_release(v70);
    (*(void (**)(uint64_t, id, __n128))(v119 + 8))(v78, v120, v82);
    sub_100011088(v72, (uint64_t *)&unk_1007F7710);
    objc_msgSend(v68, "setHidden:", 0);
    v83 = type metadata accessor for ArtworkLoader(0);
    v84 = type metadata accessor for BaseObjectGraph(0);
    inject<A, B>(_:from:)(v125, v83, v80, v83, v84);
    v85 = *(char **)&v54[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView];
    v86 = v125[0].receiver;
    v87 = *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView];
    v127.value.super.isa = 0;
    v127.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v127, v88);
    v89 = *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_tileIconArtworkView];
    v128.value.super.isa = 0;
    v128.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v128, v90);
    v91 = type metadata accessor for ArtworkView(0);
    v92 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v87, 1, v91, v92);
    v120 = v86;
    v93 = ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v89, 1, v91, v92);
    if (qword_1007F1188 != -1)
      v93 = swift_once(&qword_1007F1188, sub_1000D944C);
    v121 = v67;
    v94 = xmmword_100851910;
    if (qword_1007F1190 != -1)
      v93 = swift_once(&qword_1007F1190, sub_1000D9464);
    v95 = (void *)qword_100851920;
    v96 = (uint64_t)v112;
    InAppPurchaseLockup.theme.getter(v93);
    v97 = &v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_theme];
    v98 = swift_beginAccess(&v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_theme], v125, 33, 0);
    v99 = v123;
    v100 = v113;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v123 + 24))(v97, v96, v113, v98);
    v101 = swift_endAccess(v125);
    v102 = *(void (**)(char *, char *, uint64_t, __n128))(v99 + 16);
    v103 = (uint64_t)v122;
    v102(v122, v97, v100, v101);
    sub_10021E640(v103);
    v104 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v104(v103, v100);
    v104(v96, v100);
    v105 = (objc_class *)type metadata accessor for InAppPurchaseView(0);
    v126.receiver = v85;
    v126.super_class = v105;
    v106 = v95;
    objc_msgSendSuper2(&v126, "setBackgroundColor:", v106);
    sub_10021EA50();

    v107 = (uint64_t)v120;
    sub_10059FBF8(*(double *)&v94, *((double *)&v94 + 1), v33, (uint64_t)v85, (uint64_t)v120, 2);
    ((void (*)(uint64_t, char *, uint64_t))v102)(v96, v97, v100);
    sub_10021E640(v96);
    v104(v96, v100);
    objc_msgSend(v85, "setNeedsLayout");
    v108 = InAppPurchaseIconLayout.Metrics.tileOffset.getter(objc_msgSend(v85, "setHidden:", 0));
    v109 = InAppPurchaseIconLayout.Metrics.tileBorderWidth.getter();
    v110 = v124;
    *(double *)&v124[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_tileOffset] = v108 + v109;
    objc_msgSend(v110, "setNeedsLayout");
    swift_release(v33);
    swift_release(v107);
    swift_release(v121);
  }
}

uint64_t CondensedInAppPurchaseContentView.cancelArtworkFetches(on:asPartOf:deprioritizingFetches:)(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  UIImage_optional v11;
  UIImage_optional v12;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView);
  v11.value.super.isa = 0;
  v11.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v11, a3);
  v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_tileIconArtworkView);
  v12.value.super.isa = 0;
  v12.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v12, v7);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, 1, v8, v9);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, 1, v8, v9);
}

double sub_10036F244(uint64_t a1, uint64_t a2, objc_class *a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  UIFont v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  Swift::String v38;
  Swift::String v39;
  objc_class *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  Class isa;
  Class v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  objc_class *v53;
  objc_class *v54;
  uint64_t v55;
  _QWORD *v56;
  objc_class *v57;
  uint64_t v58;
  uint64_t v59;
  Class v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *v65;
  Swift::Int v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  __n128 v87;
  int v89;
  int v90;
  UITraitCollection v91;
  objc_class *v92;
  char *v93;
  objc_class *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(_QWORD *);
  unsigned int v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t);
  void (*v106)(char *, _QWORD, uint64_t);
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[5];
  _QWORD v111[5];
  _QWORD v112[2];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v100 = type metadata accessor for OfferButtonMetrics(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v97 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v98 = (char *)&v91 - v13;
  v109 = type metadata accessor for LabelPlaceholderCompatibility(0, v12);
  v101 = *(_QWORD *)(v109 - 8);
  v14 = __chkstk_darwin(v109);
  v93 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FontSource(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1188 != -1)
    swift_once(&qword_1007F1188, sub_1000D944C);
  v24 = InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *((double *)&xmmword_100851910 + 1));
  v25 = InAppPurchaseIconLayout.Metrics.overallSize.getter(v24);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v28 = type metadata accessor for LayoutViewPlaceholder(0);
  v29 = *(unsigned int *)(v28 + 48);
  v30 = *(unsigned __int16 *)(v28 + 52);
  v95 = v28;
  swift_allocObject(v28, v29, v30);
  v96 = LayoutViewPlaceholder.init(representing:)(v25, v27);
  CondensedSearchInAppPurchaseCardLayout.Metrics.headerFont.getter(v96);
  v31 = *(void (**)(_QWORD))(v17 + 104);
  v107 = enum case for FontSource.useCase(_:);
  v106 = (void (*)(char *, _QWORD, uint64_t))v31;
  v31(v19);
  v32.super.isa = FontSource.font(compatibleWith:)((UITraitCollection)a3).super.isa;
  v105 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  v33 = v105(v19, v16);
  v108 = a1;
  v34 = InAppPurchaseLockup.isSubscription.getter(v33);
  v91.super.isa = a3;
  v35 = v16;
  if ((v34 & 1) != 0)
  {
    v36 = 0xD00000000000003ALL;
    v37 = 0x80000001006342F0;
  }
  else
  {
    v37 = 0x8000000100634280;
    v36 = 0xD00000000000002DLL;
  }
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v39 = localizedString(_:comment:)(*(Swift::String *)&v36, v38);
  v40 = v32.super.isa;
  v41 = CondensedSearchInAppPurchaseCardLayout.Metrics.headerNumberOfLines.getter();
  v42 = type metadata accessor for Feature(0);
  v113 = v42;
  v104 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v114 = v104;
  v43 = sub_1000117C0(v112);
  v103 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v102 = *(void (**)(_QWORD *))(*(_QWORD *)(v42 - 8) + 104);
  v102(v43);
  v44 = isFeatureEnabled(_:)(v112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  v45 = v93;
  v94 = v40;
  v46 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v39._countAndFlagsBits, v39._object, v40, 4, 0, 0, v41, 0, v44 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v118, v46);
  v101 = *(_QWORD *)(v101 + 8);
  v47 = ((uint64_t (*)(char *, uint64_t))v101)(v45, v109);
  CondensedSearchInAppPurchaseCardLayout.Metrics.titleFont.getter(v47);
  v106(v19, v107, v35);
  isa = v91.super.isa;
  v49 = FontSource.font(compatibleWith:)(v91).super.isa;
  v50.n128_f64[0] = ((double (*)(char *, uint64_t))v105)(v19, v35);
  Lockup.title.getter(v50);
  v52 = v51;
  v92 = v53;
  v54 = v49;
  v55 = CondensedSearchInAppPurchaseCardLayout.Metrics.titleNumberOfLines.getter();
  v113 = v42;
  v114 = v104;
  v56 = sub_1000117C0(v112);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v102)(v56, v103, v42);
  LOBYTE(v49) = isFeatureEnabled(_:)(v112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  LOBYTE(v89) = v49 & 1;
  v57 = v92;
  v92 = v54;
  v58 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v52, v57, v54, 4, 0, 0, v55, 0, v89);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v117, v58);
  v59 = ((uint64_t (*)(char *, uint64_t))v101)(v45, v109);
  CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleFont.getter(v59);
  v106(v19, v107, v35);
  v60 = FontSource.font(compatibleWith:)((UITraitCollection)isa).super.isa;
  v61 = v105(v19, v35);
  v62 = InAppPurchaseLockup.descriptionText.getter(v61);
  v64 = v63;
  v65 = v60;
  v108 = a2;
  v66 = CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleNumberOfLines(for:)((UITraitCollection)isa);
  v113 = v42;
  v114 = v104;
  v67 = sub_1000117C0(v112);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v102)(v67, v103, v42);
  LOBYTE(v60) = isFeatureEnabled(_:)(v112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  LOBYTE(v90) = v60 & 1;
  v68 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v62, v64, v65, 4, 0, 0, v66, 0, v90);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v116, v68);
  v69 = ((uint64_t (*)(char *, uint64_t))v101)(v45, v109);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v69) & 1) != 0)
  {
    if (qword_1007F2DA0 != -1)
      swift_once(&qword_1007F2DA0, sub_1004D0ED4);
    v70 = qword_100813E28;
  }
  else
  {
    if (qword_1007F2DA8 != -1)
      swift_once(&qword_1007F2DA8, sub_1004D1380);
    v70 = qword_100813E40;
  }
  v71 = v100;
  v72 = sub_1000117A8(v100, (uint64_t)v70);
  v73 = v99;
  v74 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v97, v72, v71);
  v75 = v98;
  v76 = (*(uint64_t (**)(char *, char *, uint64_t))(v73 + 32))(v98, v74, v71);
  v77 = OfferButtonMetrics.minimumSize.getter(v76);
  v79 = OfferButtonMetrics.estimatedHeight.getter(v78);
  v80 = v95;
  swift_allocObject(v95, *(unsigned int *)(v95 + 48), *(unsigned __int16 *)(v95 + 52));
  v81 = LayoutViewPlaceholder.init(representing:)(v77, v79);
  v111[4] = &protocol witness table for LayoutViewPlaceholder;
  v111[3] = v80;
  v82 = v96;
  v111[0] = v96;
  v110[4] = &protocol witness table for LayoutViewPlaceholder;
  v110[3] = v80;
  v110[0] = v81;
  swift_retain(v96);
  swift_retain(v81);
  sub_1000D9E48(v108, (void (*)(char *, uint64_t))v111, &v118, &v117, &v116, (uint64_t)v110, v112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v110);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v111);
  v83 = v113;
  v84 = v115;
  sub_100011064(v112, v113);
  Measurable.measurements(fitting:with:)(isa, v83, v84, a4, a5);
  v86 = v85;

  swift_release(v82);
  v87 = swift_release(v81);
  (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v75, v71, v87);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v116);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v117);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v118);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  return v86;
}

double sub_10036FAC0(uint64_t a1, uint64_t a2, objc_class *a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  UIFont v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  Swift::String v38;
  Swift::String v39;
  objc_class *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  Class isa;
  Class v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  objc_class *v53;
  objc_class *v54;
  uint64_t v55;
  _QWORD *v56;
  objc_class *v57;
  uint64_t v58;
  uint64_t v59;
  Class v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *v65;
  Swift::Int v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  __n128 v88;
  int v90;
  int v91;
  UITraitCollection v92;
  objc_class *v93;
  char *v94;
  objc_class *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(_QWORD *);
  unsigned int v104;
  uint64_t v105;
  uint64_t (*v106)(char *, uint64_t);
  void (*v107)(char *, _QWORD, uint64_t);
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[5];
  _QWORD v112[5];
  _QWORD v113[2];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v101 = type metadata accessor for OfferButtonMetrics(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v98 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v99 = (char *)&v92 - v13;
  v110 = type metadata accessor for LabelPlaceholderCompatibility(0, v12);
  v102 = *(_QWORD *)(v110 - 8);
  v14 = __chkstk_darwin(v110);
  v94 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FontSource(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1188 != -1)
    swift_once(&qword_1007F1188, sub_1000D944C);
  v24 = InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *((double *)&xmmword_100851910 + 1));
  v25 = InAppPurchaseIconLayout.Metrics.overallSize.getter(v24);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v28 = type metadata accessor for LayoutViewPlaceholder(0);
  v29 = *(unsigned int *)(v28 + 48);
  v30 = *(unsigned __int16 *)(v28 + 52);
  v96 = v28;
  swift_allocObject(v28, v29, v30);
  v97 = LayoutViewPlaceholder.init(representing:)(v25, v27);
  CondensedSearchInAppPurchaseCardLayout.Metrics.headerFont.getter(v97);
  v31 = *(void (**)(_QWORD))(v17 + 104);
  v108 = enum case for FontSource.useCase(_:);
  v107 = (void (*)(char *, _QWORD, uint64_t))v31;
  v31(v19);
  v32.super.isa = FontSource.font(compatibleWith:)((UITraitCollection)a3).super.isa;
  v106 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  v33 = v106(v19, v16);
  v109 = a1;
  v34 = InAppPurchaseLockup.isSubscription.getter(v33);
  v92.super.isa = a3;
  v35 = v16;
  if ((v34 & 1) != 0)
  {
    v36 = 0xD00000000000003ALL;
    v37 = 0x80000001006342F0;
  }
  else
  {
    v37 = 0x8000000100634280;
    v36 = 0xD00000000000002DLL;
  }
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v39 = localizedString(_:comment:)(*(Swift::String *)&v36, v38);
  v40 = v32.super.isa;
  v41 = CondensedSearchInAppPurchaseCardLayout.Metrics.headerNumberOfLines.getter();
  v42 = type metadata accessor for Feature(0);
  v114 = v42;
  v105 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v115 = v105;
  v43 = sub_1000117C0(v113);
  v104 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v103 = *(void (**)(_QWORD *))(*(_QWORD *)(v42 - 8) + 104);
  v103(v43);
  v44 = isFeatureEnabled(_:)(v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v113);
  v45 = v94;
  v95 = v40;
  v46 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v39._countAndFlagsBits, v39._object, v40, 4, 0, 0, v41, 0, v44 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v119, v46);
  v102 = *(_QWORD *)(v102 + 8);
  v47 = ((uint64_t (*)(char *, uint64_t))v102)(v45, v110);
  CondensedSearchInAppPurchaseCardLayout.Metrics.titleFont.getter(v47);
  v107(v19, v108, v35);
  isa = v92.super.isa;
  v49 = FontSource.font(compatibleWith:)(v92).super.isa;
  v50.n128_f64[0] = ((double (*)(char *, uint64_t))v106)(v19, v35);
  Lockup.title.getter(v50);
  v52 = v51;
  v93 = v53;
  v54 = v49;
  v55 = CondensedSearchInAppPurchaseCardLayout.Metrics.titleNumberOfLines.getter();
  v114 = v42;
  v115 = v105;
  v56 = sub_1000117C0(v113);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v103)(v56, v104, v42);
  LOBYTE(v49) = isFeatureEnabled(_:)(v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v113);
  LOBYTE(v90) = v49 & 1;
  v57 = v93;
  v93 = v54;
  v58 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v52, v57, v54, 4, 0, 0, v55, 0, v90);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v118, v58);
  v59 = ((uint64_t (*)(char *, uint64_t))v102)(v45, v110);
  CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleFont.getter(v59);
  v107(v19, v108, v35);
  v60 = FontSource.font(compatibleWith:)((UITraitCollection)isa).super.isa;
  v61 = v106(v19, v35);
  v62 = InAppPurchaseLockup.descriptionText.getter(v61);
  v64 = v63;
  v65 = v60;
  v109 = a2;
  v66 = CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleNumberOfLines(for:)((UITraitCollection)isa);
  v114 = v42;
  v115 = v105;
  v67 = sub_1000117C0(v113);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v103)(v67, v104, v42);
  LOBYTE(v60) = isFeatureEnabled(_:)(v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v113);
  LOBYTE(v91) = v60 & 1;
  v68 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v62, v64, v65, 4, 0, 0, v66, 0, v91);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v117, v68);
  v69 = ((uint64_t (*)(char *, uint64_t))v102)(v45, v110);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v69) & 1) != 0)
  {
    if (qword_1007F2DA0 != -1)
      swift_once(&qword_1007F2DA0, sub_1004D0ED4);
    v70 = qword_100813E28;
  }
  else
  {
    if (qword_1007F2DA8 != -1)
      swift_once(&qword_1007F2DA8, sub_1004D1380);
    v70 = qword_100813E40;
  }
  v71 = v101;
  v72 = sub_1000117A8(v101, (uint64_t)v70);
  v73 = v100;
  v74 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v98, v72, v71);
  v75 = v99;
  v76 = (*(uint64_t (**)(char *, char *, uint64_t))(v73 + 32))(v99, v74, v71);
  v77 = OfferButtonMetrics.minimumSize.getter(v76);
  v79 = OfferButtonMetrics.estimatedHeight.getter(v78);
  v80 = v96;
  swift_allocObject(v96, *(unsigned int *)(v96 + 48), *(unsigned __int16 *)(v96 + 52));
  v81 = LayoutViewPlaceholder.init(representing:)(v77, v79);
  v112[4] = &protocol witness table for LayoutViewPlaceholder;
  v112[3] = v80;
  v82 = v97;
  v112[0] = v97;
  v111[4] = &protocol witness table for LayoutViewPlaceholder;
  v111[3] = v80;
  v111[0] = v81;
  swift_retain(v97);
  v83 = swift_retain(v81);
  sub_1000DA970(v109, v112, &v119, &v118, &v117, (uint64_t)v111, isa, v113, v83);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v111);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  v84 = v114;
  v85 = v116;
  sub_100011064(v113, v114);
  Measurable.measurements(fitting:with:)(isa, v84, v85, a4, a5);
  v87 = v86;

  swift_release(v82);
  v88 = swift_release(v81);
  (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v75, v71, v88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v117);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v118);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v119);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v113);
  return v87;
}

double _s22SubscribePageExtension33CondensedInAppPurchaseContentViewC6height2in8asPartOf12CoreGraphics7CGFloatV0F16StoreKitInternal17ItemLayoutContextV_9JetEngine15BaseObjectGraphCtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  objc_class *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t KeyPath;
  objc_class *v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_class *v39;

  v0 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  v36 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CondensedSearchInAppPurchaseCardLayout.Metrics(0);
  v38 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for PageGrid(0);
  v12 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for InAppPurchaseSearchResult(0);
  v16 = sub_10000E99C(&qword_1007FA910, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v39, v15, v15, v16);
  v18 = v39;
  if (!v39)
    return 0.0;
  v35 = v0;
  v19 = InAppPurchaseSearchResult.lockup.getter(v17);
  v20 = swift_release(v18);
  ItemLayoutContext.parentShelfLayoutContext.getter(v20);
  if (qword_1007F1DE8 != -1)
    swift_once(&qword_1007F1DE8, sub_1003852A0);
  v21 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  PageGrid.init(from:breakpointOverrides:)(v11, v21);
  _s22SubscribePageExtension33CondensedInAppPurchaseContentViewC7metrics0F16StoreKitInternal0d6SearchefG10CardLayoutV7MetricsVvpfi_0();
  KeyPath = swift_getKeyPath(&unk_1006870B8);
  ItemLayoutContext.subscript.getter(&v39);
  swift_release(KeyPath);
  v23 = v39;
  v24 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v26 = v25;
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v27) & 1) != 0)
  {
    if (qword_1007F1188 != -1)
      swift_once(&qword_1007F1188, sub_1000D944C);
    v28 = InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *((double *)&xmmword_100851910 + 1));
    v29 = InAppPurchaseIconLayout.Metrics.tileOffset.getter(v28);
    v30 = InAppPurchaseIconLayout.Metrics.tileBorderWidth.getter();
    CondensedSearchInAppPurchaseCardLayout.Metrics.withCornerTileOffset(_:)(v30, v29 + v31);
    v32 = sub_10036F244(v19, (uint64_t)v5, v23, v24, v26);
    swift_release(v19);

    v33 = *(void (**)(char *, uint64_t))(v38 + 8);
    v33(v5, v3);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v2, v35);
    v33(v8, v3);
  }
  else
  {
    v32 = sub_10036FAC0(v19, (uint64_t)v8, v23, v24, v26);
    swift_release(v19);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v3);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  return v32;
}

double _s22SubscribePageExtension33CondensedInAppPurchaseContentViewC5fetch3for2in2on8asPartOfy0F16StoreKitInternal27ManagedArtworkModelProtocol_p_So6CGRectV0fqR00U6LoaderC9JetEngine15BaseObjectGraphCtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[40];

  v3 = v2;
  sub_100011020(a1, (uint64_t)v13);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v6 = type metadata accessor for InAppPurchaseSearchResult(0);
  if (swift_dynamicCast(&v12, v13, v5, v6, 6))
  {
    v8 = v12;
    v9 = InAppPurchaseSearchResult.lockup.getter(v7);
    swift_release(v8);
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView);
    if (qword_1007F1188 != -1)
      swift_once(&qword_1007F1188, sub_1000D944C);
    sub_10059FBF8(*(double *)&xmmword_100851910, *((double *)&xmmword_100851910 + 1), v9, v10, a2, 2);
    v7.n128_u64[0] = swift_release(v9).n128_u64[0];
  }
  return v7.n128_f64[0];
}

uint64_t sub_10037079C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t inited;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE v25[80];

  v8 = sub_10000DF3C((uint64_t *)&unk_1007FAFC0);
  inited = swift_initStackObject(v8, v25);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  *(_OWORD *)(inited + 32) = xmmword_1006870F0;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 64) = a3;
  *(_QWORD *)(inited + 72) = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v10 = sub_100200A80(0, 1, 1, _swiftEmptyArrayStorage);
  v12 = v10[2];
  v11 = v10[3];
  v13 = v12 + 1;
  if (v12 >= v11 >> 1)
    v10 = sub_100200A80((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v13;
  v14 = &v10[2 * v12];
  v14[4] = 4278613;
  v14[5] = 0xE300000000000000;
  v15 = v10[3];
  v16 = v12 + 2;
  swift_bridgeObjectRetain(a2);
  if (v13 >= v15 >> 1)
    v10 = sub_100200A80((_QWORD *)(v15 > 1), v16, 1, v10);
  v10[2] = v16;
  v17 = &v10[2 * v13];
  v17[4] = a1;
  v17[5] = a2;
  if (a4)
  {
    v18 = v10[2];
    v19 = v10[3];
    swift_bridgeObjectRetain(a4);
    if (v18 >= v19 >> 1)
      v10 = sub_100200A80((_QWORD *)(v19 > 1), v18 + 1, 1, v10);
    v10[2] = v18 + 1;
    v20 = &v10[2 * v18];
    v20[4] = a3;
    v20[5] = a4;
  }
  swift_release(inited);
  v21 = sub_10000DF3C(&qword_100802220);
  v22 = sub_1000F1168();
  v23 = BidirectionalCollection<>.joined(separator:)(46, 0xE100000000000000, v21, v22);
  swift_bridgeObjectRelease(v10);
  return v23;
}

double *sub_100370AA8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  objc_super v15;
  double *v16;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SearchBar();
  v1 = objc_msgSendSuper2(&v15, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100019574(0, (unint64_t *)&qword_1007F8E40, UIKeyCommand_ptr);
    v4 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v16 = v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:discoverabilityTitle:", v7, 0, "handleCancelKeyCommand", v8);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
  specialized Array._endMutation()(v13);
  return v16;
}

void sub_100370CE8()
{
  void *v0;
  id v1;
  id v2;
  __int128 *v3;
  NSString v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  id v8;
  unint64_t v9;
  Class isa;
  double v11;
  double v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  uint64_t v31;
  NSString v32;
  _BYTE v33[72];
  CGRect v34;

  v1 = objc_msgSend(v0, "searchTextField");
  v2 = objc_msgSend(v1, "font");

  if (v2)
  {
    if (qword_1007F1D68 != -1)
      swift_once(&qword_1007F1D68, sub_100370F88);
    v3 = &xmmword_100809708;
    v4 = String._bridgeToObjectiveC()();
    v5 = sub_10000DF3C(&qword_1007FC280);
    inited = swift_initStackObject(v5, v33);
    *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 64) = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v2;
    v7 = NSFontAttributeName;
    v8 = v2;
    v9 = sub_1003699BC(inited);
    type metadata accessor for Key(0);
    sub_100140B68();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);
    v12 = v11;

    v13 = objc_msgSend(v0, "searchTextField");
    v14 = objc_msgSend(v0, "searchTextField");
    objc_msgSend(v14, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    objc_msgSend(v13, "textRectForBounds:", v16, v18, v20, v22);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v30 = v29;

    v34.origin.x = v24;
    v34.origin.y = v26;
    v34.size.width = v28;
    v34.size.height = v30;
    if (ceil(v12) > CGRectGetWidth(v34))
    {
      if (qword_1007F1D70 != -1)
        swift_once(&qword_1007F1D70, sub_100370FC8);
      v3 = &xmmword_100809718;
    }
    v31 = *((_QWORD *)v3 + 1);
    swift_bridgeObjectRetain(v31);
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v0, "setPlaceholder:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  }
}

uint64_t sub_100370F88()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;

  v0._object = (void *)0x8000000100645F70;
  v0._countAndFlagsBits = 0xD000000000000012;
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  v3 = localizedString(_:comment:)(v0, v1);
  result = v3._countAndFlagsBits;
  xmmword_100809708 = (__int128)v3;
  return result;
}

uint64_t sub_100370FC8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;

  v0._object = (void *)0x8000000100645F50;
  v0._countAndFlagsBits = 0xD00000000000001ALL;
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  v3 = localizedString(_:comment:)(v0, v1);
  result = v3._countAndFlagsBits;
  xmmword_100809718 = (__int128)v3;
  return result;
}

id sub_100371008()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchBar()
{
  return objc_opt_self(_TtC22SubscribePageExtension9SearchBar);
}

uint64_t sub_10037105C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809DF8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_1007F4408, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = ((uint64_t (*)(void))TimedMetricsPagePresenter.impressionsCalculator.getter)();
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_1007F43F8);
  v18 = sub_100010F98(&qword_1007F4400, &qword_1007F43F8, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_100809E00, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809E08, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

uint64_t sub_10037149C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_100809DD8, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = TimedMetricsPagePresenter.impressionsCalculator.getter(v13);
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_100806088);
  v18 = sub_100010F98(&qword_1008060A0, &qword_100806088, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_100809DE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809DE8, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

uint64_t sub_1003718DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809DA8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_100809DB0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = TimedMetricsPagePresenter.impressionsCalculator.getter(v13);
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_1007F9EC8);
  v18 = sub_100010F98(&qword_1007F9ED0, &qword_1007F9EC8, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_100809DB8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809DC0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

uint64_t sub_100371D1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809D78, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_1007FDDE8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = TimedMetricsPagePresenter.impressionsCalculator.getter(v13);
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_100809D80);
  v18 = sub_100010F98(&qword_100809D88, &qword_100809D80, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_1007FDDE0, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809D90, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

uint64_t sub_10037215C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809D38, (uint64_t (*)(uint64_t))&type metadata accessor for TodayDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_100808238, (uint64_t (*)(uint64_t))&type metadata accessor for TodayDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = TimedMetricsPagePresenter.impressionsCalculator.getter(v13);
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_100808200);
  v18 = sub_100010F98(&qword_100808208, &qword_100808200, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_100809D40, (uint64_t (*)(uint64_t))&type metadata accessor for TodayDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809D48, (uint64_t (*)(uint64_t))&type metadata accessor for TodayDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

uint64_t sub_10037259C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809D58, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_100805F70, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = TimedMetricsPagePresenter.impressionsCalculator.getter(v13);
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_100805FF0);
  v18 = sub_100010F98(&qword_100806008, &qword_100805FF0, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_100805F68, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809D60, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

uint64_t sub_1003729DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F4420);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10067EF60;
  v4 = *(_QWORD *)&v0[qword_100852E58];
  v5 = sub_10000E99C(&qword_100809D10, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v6 = type metadata accessor for OnDemandShelfFetchingCollectionElementsObserver(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 32) = OnDemandShelfFetchingCollectionElementsObserver.init(presenter:)(v7, v5);
  *(_QWORD *)(v3 + 40) = &protocol witness table for OnDemandShelfFetchingCollectionElementsObserver;
  v8 = type metadata accessor for GenericPageCollectionElementsObserver();
  v9 = swift_allocObject(v8, 16, 7);
  v10 = sub_10000E99C(&qword_100803040, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageCollectionElementsObserver, (uint64_t)&unk_100679B58);
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  v11 = sub_10000E99C(&qword_100809D18, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = *(void **)&v1[qword_100852E90];
  swift_retain(v4);
  v13 = v12;
  v14 = TimedMetricsPagePresenter.impressionsCalculator.getter(v13);
  v15 = type metadata accessor for ComponentContainerCollectionElementsObserver(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v1;
  *(_QWORD *)(v3 + 64) = ComponentContainerCollectionElementsObserver.init(presenter:parent:scrollObserver:impressionsCalculator:)(v4, v11, v1, v13, &protocol witness table for CompoundScrollObserver, v14);
  *(_QWORD *)(v3 + 72) = &protocol witness table for ComponentContainerCollectionElementsObserver;
  v17 = sub_10000DF3C(&qword_100809CE8);
  v18 = sub_100010F98(&qword_100809CF0, &qword_100809CE8, byte_10067F0C0);
  v19 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v20 = TimedMetricsPagePresenter.impressionsCalculator.getter(v19);
  v21 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 80) = ImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:)(v37, v20);
  *(_QWORD *)(v3 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
  v22 = type metadata accessor for VideoRegistrationCollectionElementsObserver(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)(v3 + 96) = VideoRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 104) = &protocol witness table for VideoRegistrationCollectionElementsObserver;
  v23 = type metadata accessor for PlayableViewRegistrationCollectionElementsObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v3 + 112) = PlayableViewRegistrationCollectionElementsObserver.init()();
  *(_QWORD *)(v3 + 120) = &protocol witness table for PlayableViewRegistrationCollectionElementsObserver;
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v37, v17, v18);
  v24 = type metadata accessor for ArtworkLoadingCollectionElementsObserver(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 128) = ArtworkLoadingCollectionElementsObserver.init(componentTypeMappingProvider:)(v37);
  *(_QWORD *)(v3 + 136) = &protocol witness table for ArtworkLoadingCollectionElementsObserver;
  v25 = *(_QWORD *)&v16[qword_100802E40];
  v26 = sub_10000E99C(&qword_100803048, type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver, (uint64_t)"Q/\v");
  *(_QWORD *)(v3 + 144) = v25;
  *(_QWORD *)(v3 + 152) = v26;
  v27 = sub_10000E99C(&qword_100809D20, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v28 = *(_QWORD *)&v16[qword_100852EA8];
  v29 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v4);
  swift_retain(v25);
  swift_retain(v28);
  *(_QWORD *)(v3 + 160) = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v4, v27, v11, v28);
  *(_QWORD *)(v3 + 168) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v30 = *(_QWORD *)&v16[qword_100802E38];
  *(_QWORD *)(v3 + 176) = v30;
  *(_QWORD *)(v3 + 184) = &protocol witness table for VisibleShelfSupplementaryCollectionElementsObserver;
  v31 = type metadata accessor for AutomationCollectionElementsObserver(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  swift_retain(v30);
  *(_QWORD *)(v3 + 192) = AutomationCollectionElementsObserver.init()(v32);
  *(_QWORD *)(v3 + 200) = &protocol witness table for AutomationCollectionElementsObserver;
  v33 = sub_10000E99C(&qword_100809D28, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v34 = type metadata accessor for InlineUnifiedMessageCollectionElementsObserver(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v4);
  *(_QWORD *)(v3 + 208) = InlineUnifiedMessageCollectionElementsObserver.init(presenter:parentViewController:)(v4, v33, v16);
  *(_QWORD *)(v3 + 216) = &protocol witness table for InlineUnifiedMessageCollectionElementsObserver;
  v35 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v3);
}

void sub_100372E1C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  void *v89;
  void *v90;
  id v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[24];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v102[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_1007F43C0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v102[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v13 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v14 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v15 = v14;
    static ViewControllerContainment.remove(_:)(v14);

    v16 = *(void **)&v2[v13];
    *(_QWORD *)&v2[v13] = 0;

    v17 = *(void **)&v2[v13];
    v18 = v17;
    v19 = objc_msgSend(v2, "view");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "bounds");
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v28 = v27;

      v103 = v22;
      v104 = v24;
      v105 = v26;
      v106 = v28;
      v107 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v17, v2, &v103);

      v29 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter();
      if (v29)
      {
        v30 = v29;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v30);
      }
      v31 = (uint64_t *)&v2[qword_100802E48];
      v32 = swift_beginAccess(&v2[qword_100802E48], v102, 0, 0);
      v33 = *v31;
      if (*v31)
      {
        v34 = swift_allocObject(&unk_10073A7F0, 24, 7);
        swift_unknownObjectWeakInit(v34 + 16, v2);
        v35 = (uint64_t (**)(uint64_t))(v33
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v36 = *(_QWORD *)(v33
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v37 = *(_QWORD *)(v33
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v35 = sub_10037768C;
        v35[1] = (uint64_t (*)(uint64_t))v34;
        sub_100019310(v36, v37);
      }
      v38 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v32);
      swift_release(v38);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v39 = *v11;
    v40 = v11[1];
    v41 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v42 = *(_QWORD *)&v2[qword_100852E58];
    v43 = sub_10000E99C(&qword_100809DF0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v39);
    swift_retain(v42);
    sub_100019320(v40, v41);
    v44 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v39, v42, v43, 1, v40, v41);
    v45 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v46 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v47 = v46;
    static ViewControllerContainment.remove(_:)(v46);

    v48 = *(void **)&v2[v45];
    *(_QWORD *)&v2[v45] = v44;
    v49 = v44;

    v50 = *(void **)&v2[v45];
    v51 = v50;
    v52 = objc_msgSend(v2, "view");
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v52, "bounds");
      v55 = v54;
      v57 = v56;
      v59 = v58;
      v61 = v60;

      v103 = v55;
      v104 = v57;
      v105 = v59;
      v106 = v61;
      v107 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v50, v2, &v103);

      sub_100019310(v40, v41);
      swift_errorRelease(v39);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v86 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v87 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v88 = v87;
    static ViewControllerContainment.remove(_:)(v87);

    v89 = *(void **)&v2[v86];
    *(_QWORD *)&v2[v86] = 0;

    v90 = *(void **)&v2[v86];
    v91 = v90;
    v92 = objc_msgSend(v2, "view");
    if (v92)
    {
      v93 = v92;
      objc_msgSend(v92, "bounds");
      v95 = v94;
      v97 = v96;
      v99 = v98;
      v101 = v100;

      v103 = v95;
      v104 = v97;
      v105 = v99;
      v106 = v101;
      v107 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v90, v2, &v103);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v62 = ((uint64_t (*)(void))dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter)();
  static JULoadingViewController.PresentationContext.placeholder.getter(v62);
  v63 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v64 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v62);
  v65 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v66 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v67 = v66;
  static ViewControllerContainment.remove(_:)(v66);

  v68 = *(void **)&v2[v65];
  *(_QWORD *)&v2[v65] = v64;
  v69 = v64;

  v70 = *(void **)&v2[v65];
  v71 = v70;
  v72 = objc_msgSend(v2, "view");
  if (!v72)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v73 = v72;
  objc_msgSend(v72, "bounds");
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v81 = v80;

  v103 = v75;
  v104 = v77;
  v105 = v79;
  v106 = v81;
  v107 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v70, v2, &v103);

  v82 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter();
  if (v82)
  {
    v84 = v82;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v83 = swift_release(v84);
  }
  v85 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v83);
  ArtworkLoader.pageRenderMetrics.setter(v85);
}

void sub_100373408(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[24];

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DF3C(&qword_1007F83A8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v14 = swift_release(*v11);
    *((_BYTE *)v2 + qword_100852E60) = 1;
    v15.n128_f64[0] = (*(double (**)(_QWORD, __n128))((swift_isaMask & *v2) + 0x180))(0, v14);
    v16 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v15);
    if (v16)
    {
      v17 = v16;
      PendingPageRender.isLayoutPending.setter(1);
      swift_release(v17);
    }
    v18 = (_QWORD *)((char *)v2 + qword_100802E48);
    v19 = swift_beginAccess((char *)v2 + qword_100802E48, v41, 0, 0);
    v20 = *v18;
    if (*v18)
    {
      v21 = swift_allocObject(&unk_10073A7C8, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16, v2);
      v22 = (uint64_t (**)(uint64_t))(v20
                                             + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      v23 = *(_QWORD *)(v20
                      + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      v24 = *(_QWORD *)(v20
                      + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                      + 8);
      *v22 = sub_10037768C;
      v22[1] = (uint64_t (*)(uint64_t))v21;
      sub_100019310(v23, v24);
    }
    v25 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v19);
    swift_release(v25);
  }
  else if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v26 = *v11;
    v27 = v11[1];
    v28 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v29 = *(_QWORD *)((char *)v2 + qword_100852E58);
    v30 = sub_10000E99C(&qword_100809DC8, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v26);
    swift_retain(v29);
    sub_100019320(v27, v28);
    v31 = JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v26, v29, v30, 1, v27, v28);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x180))(v31);
    sub_100019310(v27, v28);
    swift_errorRelease(v26);
  }
  else if (v12 == enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v32 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
    static JULoadingViewController.PresentationContext.placeholder.getter(v32);
    v33 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v34 = JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v32);
    v35.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v2) + 0x180))(v34);
    v36 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v35);
    if (v36)
    {
      v38 = v36;
      PendingPageRender.observeAssets(_:)(*(_QWORD *)((char *)v2 + qword_100852E68), &protocol witness table for ArtworkLoader);
      v37 = swift_release(v38);
    }
    v39 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v37);
    ArtworkLoader.pageRenderMetrics.setter(v39);
  }
  else
  {
    (*(void (**)(_QWORD))((swift_isaMask & *v2) + 0x180))(0);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_1003737CC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[24];

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DF3C(&qword_1007F8D60);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v14 = swift_release(*v11);
    *((_BYTE *)v2 + qword_100852E60) = 1;
    v15.n128_f64[0] = (*(double (**)(_QWORD, __n128))((swift_isaMask & *v2) + 0x180))(0, v14);
    v16 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v15);
    if (v16)
    {
      v17 = v16;
      PendingPageRender.isLayoutPending.setter(1);
      swift_release(v17);
    }
    v18 = (_QWORD *)((char *)v2 + qword_100802E48);
    v19 = swift_beginAccess((char *)v2 + qword_100802E48, v41, 0, 0);
    v20 = *v18;
    if (*v18)
    {
      v21 = swift_allocObject(&unk_10073A7A0, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      v22 = (uint64_t (**)(uint64_t))(v20
                                             + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      v23 = *(_QWORD *)(v20
                      + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      v24 = *(_QWORD *)(v20
                      + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                      + 8);
      *v22 = sub_10037768C;
      v22[1] = (uint64_t (*)(uint64_t))v21;
      sub_100019310(v23, v24);
    }
    v25 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v19);
    swift_release(v25);
  }
  else if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v26 = *v11;
    v27 = v11[1];
    v28 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v29 = *(_QWORD *)((char *)v2 + qword_100852E58);
    v30 = sub_10000E99C(&qword_1007F8E38, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v26);
    swift_retain(v29);
    sub_100019320(v27, v28);
    v31 = JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v26, v29, v30, 1, v27, v28);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x180))(v31);
    sub_100019310(v27, v28);
    swift_errorRelease(v26);
  }
  else if (v12 == enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v32 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
    static JULoadingViewController.PresentationContext.placeholder.getter(v32);
    v33 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v34 = JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v32);
    v35.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v2) + 0x180))(v34);
    v36 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v35);
    if (v36)
    {
      v38 = v36;
      PendingPageRender.observeAssets(_:)(*(_QWORD *)((char *)v2 + qword_100852E68), &protocol witness table for ArtworkLoader);
      v37 = swift_release(v38);
    }
    v39 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v37);
    ArtworkLoader.pageRenderMetrics.setter(v39);
  }
  else
  {
    (*(void (**)(_QWORD))((swift_isaMask & *v2) + 0x180))(0);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_100373B90(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_1007F9EB8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v14 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v16 = v15;
    static ViewControllerContainment.remove(_:)(v15);

    v17 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = 0;

    v18 = *(void **)&v2[v14];
    v19 = v18;
    v20 = objc_msgSend(v2, "view");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      v106 = v23;
      v107 = v25;
      v108 = v27;
      v109 = v29;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v18, v2, &v106);

      v31 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v30);
      if (v31)
      {
        v32 = v31;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v32);
      }
      v33 = (uint64_t *)&v2[qword_100802E48];
      v34 = swift_beginAccess(&v2[qword_100802E48], v105, 0, 0);
      v35 = *v33;
      if (*v33)
      {
        v36 = swift_allocObject(&unk_10073A778, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v37 = (uint64_t (**)(uint64_t))(v35
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v38 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v39 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v37 = sub_10037768C;
        v37[1] = (uint64_t (*)(uint64_t))v36;
        sub_100019310(v38, v39);
      }
      v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v34);
      swift_release(v40);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v41 = *v11;
    v42 = v11[1];
    v43 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v44 = *(_QWORD *)&v2[qword_100852E58];
    v45 = sub_10000E99C(&qword_100809DA0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v41);
    swift_retain(v44);
    sub_100019320(v42, v43);
    v46 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v41, v44, v45, 1, v42, v43);
    v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v49 = v48;
    static ViewControllerContainment.remove(_:)(v48);

    v50 = *(void **)&v2[v47];
    *(_QWORD *)&v2[v47] = v46;
    v51 = v46;

    v52 = *(void **)&v2[v47];
    v53 = v52;
    v54 = objc_msgSend(v2, "view");
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v54, "bounds");
      v57 = v56;
      v59 = v58;
      v61 = v60;
      v63 = v62;

      v106 = v57;
      v107 = v59;
      v108 = v61;
      v109 = v63;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v52, v2, &v106);

      sub_100019310(v42, v43);
      swift_errorRelease(v41);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v89 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v91 = v90;
    static ViewControllerContainment.remove(_:)(v90);

    v92 = *(void **)&v2[v89];
    *(_QWORD *)&v2[v89] = 0;

    v93 = *(void **)&v2[v89];
    v94 = v93;
    v95 = objc_msgSend(v2, "view");
    if (v95)
    {
      v96 = v95;
      objc_msgSend(v95, "bounds");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v106 = v98;
      v107 = v100;
      v108 = v102;
      v109 = v104;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v93, v2, &v106);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v64 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
  static JULoadingViewController.PresentationContext.placeholder.getter(v64);
  v65 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v66 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v64);
  v67 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v68 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v69 = v68;
  static ViewControllerContainment.remove(_:)(v68);

  v70 = *(void **)&v2[v67];
  *(_QWORD *)&v2[v67] = v66;
  v71 = v66;

  v72 = *(void **)&v2[v67];
  v73 = v72;
  v74 = objc_msgSend(v2, "view");
  if (!v74)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v75 = v74;
  objc_msgSend(v74, "bounds");
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v106 = v77;
  v107 = v79;
  v108 = v81;
  v109 = v83;
  v110 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v72, v2, &v106);

  v85 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v84);
  if (v85)
  {
    v87 = v85;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v86 = swift_release(v87);
  }
  v88 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v86);
  ArtworkLoader.pageRenderMetrics.setter(v88);
}

void sub_10037417C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_1007FDE08);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v14 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v16 = v15;
    static ViewControllerContainment.remove(_:)(v15);

    v17 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = 0;

    v18 = *(void **)&v2[v14];
    v19 = v18;
    v20 = objc_msgSend(v2, "view");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      v106 = v23;
      v107 = v25;
      v108 = v27;
      v109 = v29;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v18, v2, &v106);

      v31 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v30);
      if (v31)
      {
        v32 = v31;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v32);
      }
      v33 = (uint64_t *)&v2[qword_100802E48];
      v34 = swift_beginAccess(&v2[qword_100802E48], v105, 0, 0);
      v35 = *v33;
      if (*v33)
      {
        v36 = swift_allocObject(&unk_10073A750, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v37 = (uint64_t (**)(uint64_t))(v35
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v38 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v39 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v37 = sub_10037768C;
        v37[1] = (uint64_t (*)(uint64_t))v36;
        sub_100019310(v38, v39);
      }
      v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v34);
      swift_release(v40);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v41 = *v11;
    v42 = v11[1];
    v43 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v44 = *(_QWORD *)&v2[qword_100852E58];
    v45 = sub_10000E99C(&qword_100809D98, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v41);
    swift_retain(v44);
    sub_100019320(v42, v43);
    v46 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v41, v44, v45, 1, v42, v43);
    v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v49 = v48;
    static ViewControllerContainment.remove(_:)(v48);

    v50 = *(void **)&v2[v47];
    *(_QWORD *)&v2[v47] = v46;
    v51 = v46;

    v52 = *(void **)&v2[v47];
    v53 = v52;
    v54 = objc_msgSend(v2, "view");
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v54, "bounds");
      v57 = v56;
      v59 = v58;
      v61 = v60;
      v63 = v62;

      v106 = v57;
      v107 = v59;
      v108 = v61;
      v109 = v63;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v52, v2, &v106);

      sub_100019310(v42, v43);
      swift_errorRelease(v41);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v89 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v91 = v90;
    static ViewControllerContainment.remove(_:)(v90);

    v92 = *(void **)&v2[v89];
    *(_QWORD *)&v2[v89] = 0;

    v93 = *(void **)&v2[v89];
    v94 = v93;
    v95 = objc_msgSend(v2, "view");
    if (v95)
    {
      v96 = v95;
      objc_msgSend(v95, "bounds");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v106 = v98;
      v107 = v100;
      v108 = v102;
      v109 = v104;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v93, v2, &v106);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v64 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
  static JULoadingViewController.PresentationContext.placeholder.getter(v64);
  v65 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v66 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v64);
  v67 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v68 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v69 = v68;
  static ViewControllerContainment.remove(_:)(v68);

  v70 = *(void **)&v2[v67];
  *(_QWORD *)&v2[v67] = v66;
  v71 = v66;

  v72 = *(void **)&v2[v67];
  v73 = v72;
  v74 = objc_msgSend(v2, "view");
  if (!v74)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v75 = v74;
  objc_msgSend(v74, "bounds");
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v106 = v77;
  v107 = v79;
  v108 = v81;
  v109 = v83;
  v110 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v72, v2, &v106);

  v85 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v84);
  if (v85)
  {
    v87 = v85;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v86 = swift_release(v87);
  }
  v88 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v86);
  ArtworkLoader.pageRenderMetrics.setter(v88);
}

void sub_100374768(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C((uint64_t *)&unk_1007FF950);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v14 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v16 = v15;
    static ViewControllerContainment.remove(_:)(v15);

    v17 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = 0;

    v18 = *(void **)&v2[v14];
    v19 = v18;
    v20 = objc_msgSend(v2, "view");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      v106 = v23;
      v107 = v25;
      v108 = v27;
      v109 = v29;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v18, v2, &v106);

      v31 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v30);
      if (v31)
      {
        v32 = v31;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v32);
      }
      v33 = (uint64_t *)&v2[qword_100802E48];
      v34 = swift_beginAccess(&v2[qword_100802E48], v105, 0, 0);
      v35 = *v33;
      if (*v33)
      {
        v36 = swift_allocObject(&unk_10073A728, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v37 = (uint64_t (**)(uint64_t))(v35
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v38 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v39 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v37 = sub_10037768C;
        v37[1] = (uint64_t (*)(uint64_t))v36;
        sub_100019310(v38, v39);
      }
      v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v34);
      swift_release(v40);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v41 = *v11;
    v42 = v11[1];
    v43 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v44 = *(_QWORD *)&v2[qword_100852E58];
    v45 = sub_10000E99C(&qword_100809D70, (uint64_t (*)(uint64_t))&type metadata accessor for SearchChartsAndCategoriesDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v41);
    swift_retain(v44);
    sub_100019320(v42, v43);
    v46 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v41, v44, v45, 1, v42, v43);
    v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v49 = v48;
    static ViewControllerContainment.remove(_:)(v48);

    v50 = *(void **)&v2[v47];
    *(_QWORD *)&v2[v47] = v46;
    v51 = v46;

    v52 = *(void **)&v2[v47];
    v53 = v52;
    v54 = objc_msgSend(v2, "view");
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v54, "bounds");
      v57 = v56;
      v59 = v58;
      v61 = v60;
      v63 = v62;

      v106 = v57;
      v107 = v59;
      v108 = v61;
      v109 = v63;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v52, v2, &v106);

      sub_100019310(v42, v43);
      swift_errorRelease(v41);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v89 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v91 = v90;
    static ViewControllerContainment.remove(_:)(v90);

    v92 = *(void **)&v2[v89];
    *(_QWORD *)&v2[v89] = 0;

    v93 = *(void **)&v2[v89];
    v94 = v93;
    v95 = objc_msgSend(v2, "view");
    if (v95)
    {
      v96 = v95;
      objc_msgSend(v95, "bounds");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v106 = v98;
      v107 = v100;
      v108 = v102;
      v109 = v104;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v93, v2, &v106);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v64 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
  static JULoadingViewController.PresentationContext.placeholder.getter(v64);
  v65 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v66 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v64);
  v67 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v68 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v69 = v68;
  static ViewControllerContainment.remove(_:)(v68);

  v70 = *(void **)&v2[v67];
  *(_QWORD *)&v2[v67] = v66;
  v71 = v66;

  v72 = *(void **)&v2[v67];
  v73 = v72;
  v74 = objc_msgSend(v2, "view");
  if (!v74)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v75 = v74;
  objc_msgSend(v74, "bounds");
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v106 = v77;
  v107 = v79;
  v108 = v81;
  v109 = v83;
  v110 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v72, v2, &v106);

  v85 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v84);
  if (v85)
  {
    v87 = v85;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v86 = swift_release(v87);
  }
  v88 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v86);
  ArtworkLoader.pageRenderMetrics.setter(v88);
}

void sub_100374D54(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_100808210);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v14 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v16 = v15;
    static ViewControllerContainment.remove(_:)(v15);

    v17 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = 0;

    v18 = *(void **)&v2[v14];
    v19 = v18;
    v20 = objc_msgSend(v2, "view");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      v106 = v23;
      v107 = v25;
      v108 = v27;
      v109 = v29;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v18, v2, &v106);

      v31 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v30);
      if (v31)
      {
        v32 = v31;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v32);
      }
      v33 = (uint64_t *)&v2[qword_100802E48];
      v34 = swift_beginAccess(&v2[qword_100802E48], v105, 0, 0);
      v35 = *v33;
      if (*v33)
      {
        v36 = swift_allocObject(&unk_10073A6B0, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v37 = (uint64_t (**)(uint64_t))(v35
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v38 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v39 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v37 = sub_10037768C;
        v37[1] = (uint64_t (*)(uint64_t))v36;
        sub_100019310(v38, v39);
      }
      v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v34);
      swift_release(v40);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v41 = *v11;
    v42 = v11[1];
    v43 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v44 = *(_QWORD *)&v2[qword_100852E58];
    v45 = sub_10000E99C(&qword_100809D30, (uint64_t (*)(uint64_t))&type metadata accessor for TodayDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v41);
    swift_retain(v44);
    sub_100019320(v42, v43);
    v46 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v41, v44, v45, 1, v42, v43);
    v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v49 = v48;
    static ViewControllerContainment.remove(_:)(v48);

    v50 = *(void **)&v2[v47];
    *(_QWORD *)&v2[v47] = v46;
    v51 = v46;

    v52 = *(void **)&v2[v47];
    v53 = v52;
    v54 = objc_msgSend(v2, "view");
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v54, "bounds");
      v57 = v56;
      v59 = v58;
      v61 = v60;
      v63 = v62;

      v106 = v57;
      v107 = v59;
      v108 = v61;
      v109 = v63;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v52, v2, &v106);

      sub_100019310(v42, v43);
      swift_errorRelease(v41);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v89 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v91 = v90;
    static ViewControllerContainment.remove(_:)(v90);

    v92 = *(void **)&v2[v89];
    *(_QWORD *)&v2[v89] = 0;

    v93 = *(void **)&v2[v89];
    v94 = v93;
    v95 = objc_msgSend(v2, "view");
    if (v95)
    {
      v96 = v95;
      objc_msgSend(v95, "bounds");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v106 = v98;
      v107 = v100;
      v108 = v102;
      v109 = v104;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v93, v2, &v106);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v64 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
  static JULoadingViewController.PresentationContext.placeholder.getter(v64);
  v65 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v66 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v64);
  v67 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v68 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v69 = v68;
  static ViewControllerContainment.remove(_:)(v68);

  v70 = *(void **)&v2[v67];
  *(_QWORD *)&v2[v67] = v66;
  v71 = v66;

  v72 = *(void **)&v2[v67];
  v73 = v72;
  v74 = objc_msgSend(v2, "view");
  if (!v74)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v75 = v74;
  objc_msgSend(v74, "bounds");
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v106 = v77;
  v107 = v79;
  v108 = v81;
  v109 = v83;
  v110 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v72, v2, &v106);

  v85 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v84);
  if (v85)
  {
    v87 = v85;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v86 = swift_release(v87);
  }
  v88 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v86);
  ArtworkLoader.pageRenderMetrics.setter(v88);
}

void sub_100375340(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_100805F38);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v14 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v16 = v15;
    static ViewControllerContainment.remove(_:)(v15);

    v17 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = 0;

    v18 = *(void **)&v2[v14];
    v19 = v18;
    v20 = objc_msgSend(v2, "view");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      v106 = v23;
      v107 = v25;
      v108 = v27;
      v109 = v29;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v18, v2, &v106);

      v31 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v30);
      if (v31)
      {
        v32 = v31;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v32);
      }
      v33 = (uint64_t *)&v2[qword_100802E48];
      v34 = swift_beginAccess(&v2[qword_100802E48], v105, 0, 0);
      v35 = *v33;
      if (*v33)
      {
        v36 = swift_allocObject(&unk_10073A6D8, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v37 = (uint64_t (**)(uint64_t))(v35
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v38 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v39 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v37 = sub_10037768C;
        v37[1] = (uint64_t (*)(uint64_t))v36;
        sub_100019310(v38, v39);
      }
      v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v34);
      swift_release(v40);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v41 = *v11;
    v42 = v11[1];
    v43 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v44 = *(_QWORD *)&v2[qword_100852E58];
    v45 = sub_10000E99C(&qword_100809D50, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v41);
    swift_retain(v44);
    sub_100019320(v42, v43);
    v46 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v41, v44, v45, 1, v42, v43);
    v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v49 = v48;
    static ViewControllerContainment.remove(_:)(v48);

    v50 = *(void **)&v2[v47];
    *(_QWORD *)&v2[v47] = v46;
    v51 = v46;

    v52 = *(void **)&v2[v47];
    v53 = v52;
    v54 = objc_msgSend(v2, "view");
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v54, "bounds");
      v57 = v56;
      v59 = v58;
      v61 = v60;
      v63 = v62;

      v106 = v57;
      v107 = v59;
      v108 = v61;
      v109 = v63;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v52, v2, &v106);

      sub_100019310(v42, v43);
      swift_errorRelease(v41);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v89 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v91 = v90;
    static ViewControllerContainment.remove(_:)(v90);

    v92 = *(void **)&v2[v89];
    *(_QWORD *)&v2[v89] = 0;

    v93 = *(void **)&v2[v89];
    v94 = v93;
    v95 = objc_msgSend(v2, "view");
    if (v95)
    {
      v96 = v95;
      objc_msgSend(v95, "bounds");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v106 = v98;
      v107 = v100;
      v108 = v102;
      v109 = v104;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v93, v2, &v106);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v64 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
  static JULoadingViewController.PresentationContext.placeholder.getter(v64);
  v65 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v66 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v64);
  v67 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v68 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v69 = v68;
  static ViewControllerContainment.remove(_:)(v68);

  v70 = *(void **)&v2[v67];
  *(_QWORD *)&v2[v67] = v66;
  v71 = v66;

  v72 = *(void **)&v2[v67];
  v73 = v72;
  v74 = objc_msgSend(v2, "view");
  if (!v74)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v75 = v74;
  objc_msgSend(v74, "bounds");
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v106 = v77;
  v107 = v79;
  v108 = v81;
  v109 = v83;
  v110 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v72, v2, &v106);

  v85 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v84);
  if (v85)
  {
    v87 = v85;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v86 = swift_release(v87);
  }
  v88 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v86);
  ArtworkLoader.pageRenderMetrics.setter(v88);
}

void sub_10037592C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[24];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_100809CC0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    swift_release(*v11);
    v2[qword_100852E60] = 1;
    v14 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v16 = v15;
    static ViewControllerContainment.remove(_:)(v15);

    v17 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = 0;

    v18 = *(void **)&v2[v14];
    v19 = v18;
    v20 = objc_msgSend(v2, "view");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      v106 = v23;
      v107 = v25;
      v108 = v27;
      v109 = v29;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v18, v2, &v106);

      v31 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v30);
      if (v31)
      {
        v32 = v31;
        PendingPageRender.isLayoutPending.setter(1);
        swift_release(v32);
      }
      v33 = (uint64_t *)&v2[qword_100802E48];
      v34 = swift_beginAccess(&v2[qword_100802E48], v105, 0, 0);
      v35 = *v33;
      if (*v33)
      {
        v36 = swift_allocObject(&unk_10073A688, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v37 = (uint64_t (**)(uint64_t))(v35
                                               + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v38 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
        v39 = *(_QWORD *)(v35
                        + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8);
        *v37 = sub_10037768C;
        v37[1] = (uint64_t (*)(uint64_t))v36;
        sub_100019310(v38, v39);
      }
      v40 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v34);
      swift_release(v40);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v41 = *v11;
    v42 = v11[1];
    v43 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v44 = *(_QWORD *)&v2[qword_100852E58];
    v45 = sub_10000E99C(&qword_100809CC8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v41);
    swift_retain(v44);
    sub_100019320(v42, v43);
    v46 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v41, v44, v45, 1, v42, v43);
    v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v49 = v48;
    static ViewControllerContainment.remove(_:)(v48);

    v50 = *(void **)&v2[v47];
    *(_QWORD *)&v2[v47] = v46;
    v51 = v46;

    v52 = *(void **)&v2[v47];
    v53 = v52;
    v54 = objc_msgSend(v2, "view");
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v54, "bounds");
      v57 = v56;
      v59 = v58;
      v61 = v60;
      v63 = v62;

      v106 = v57;
      v107 = v59;
      v108 = v61;
      v109 = v63;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v52, v2, &v106);

      sub_100019310(v42, v43);
      swift_errorRelease(v41);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v89 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
    v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
    v91 = v90;
    static ViewControllerContainment.remove(_:)(v90);

    v92 = *(void **)&v2[v89];
    *(_QWORD *)&v2[v89] = 0;

    v93 = *(void **)&v2[v89];
    v94 = v93;
    v95 = objc_msgSend(v2, "view");
    if (v95)
    {
      v96 = v95;
      objc_msgSend(v95, "bounds");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v106 = v98;
      v107 = v100;
      v108 = v102;
      v109 = v104;
      v110 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v93, v2, &v106);

      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
      return;
    }
    goto LABEL_21;
  }
  v64 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
  static JULoadingViewController.PresentationContext.placeholder.getter(v64);
  v65 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v66 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v64);
  v67 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v68 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v69 = v68;
  static ViewControllerContainment.remove(_:)(v68);

  v70 = *(void **)&v2[v67];
  *(_QWORD *)&v2[v67] = v66;
  v71 = v66;

  v72 = *(void **)&v2[v67];
  v73 = v72;
  v74 = objc_msgSend(v2, "view");
  if (!v74)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v75 = v74;
  objc_msgSend(v74, "bounds");
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v106 = v77;
  v107 = v79;
  v108 = v81;
  v109 = v83;
  v110 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v72, v2, &v106);

  v85 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v84);
  if (v85)
  {
    v87 = v85;
    PendingPageRender.observeAssets(_:)(*(_QWORD *)&v2[qword_100852E68], &protocol witness table for ArtworkLoader);
    v86 = swift_release(v87);
  }
  v88 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v86);
  ArtworkLoader.pageRenderMetrics.setter(v88);
}

void sub_100375F18(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[24];

  v2 = v1;
  v4 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DF3C(&qword_100804D40);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v14 = swift_release(*v11);
    *((_BYTE *)v2 + qword_100852E60) = 1;
    v15.n128_f64[0] = (*(double (**)(_QWORD, __n128))((swift_isaMask & *v2) + 0x180))(0, v14);
    v16 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v15);
    if (v16)
    {
      v17 = v16;
      PendingPageRender.isLayoutPending.setter(1);
      swift_release(v17);
    }
    v18 = (_QWORD *)((char *)v2 + qword_100802E48);
    v19 = swift_beginAccess((char *)v2 + qword_100802E48, v41, 0, 0);
    v20 = *v18;
    if (*v18)
    {
      v21 = swift_allocObject(&unk_10073A700, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      v22 = (uint64_t (**)(uint64_t))(v20
                                             + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      v23 = *(_QWORD *)(v20
                      + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver);
      v24 = *(_QWORD *)(v20
                      + OBJC_IVAR____TtC22SubscribePageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                      + 8);
      *v22 = sub_10037768C;
      v22[1] = (uint64_t (*)(uint64_t))v21;
      sub_100019310(v23, v24);
    }
    v25 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v19);
    swift_release(v25);
  }
  else if (v12 == enum case for DiffablePagePresenter.UpdatePhase.error<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v11, v7);
    v26 = *v11;
    v27 = v11[1];
    v28 = v11[2];
    type metadata accessor for JUContentUnavailableViewController(0);
    v29 = *(_QWORD *)((char *)v2 + qword_100852E58);
    v30 = sub_10000E99C(&qword_100809D68, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
    swift_errorRetain(v26);
    swift_retain(v29);
    sub_100019320(v27, v28);
    v31 = JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(v26, v29, v30, 1, v27, v28);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x180))(v31);
    sub_100019310(v27, v28);
    swift_errorRelease(v26);
  }
  else if (v12 == enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    v32 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v13);
    static JULoadingViewController.PresentationContext.placeholder.getter(v32);
    v33 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v34 = JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v6, v32);
    v35.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v2) + 0x180))(v34);
    v36 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v35);
    if (v36)
    {
      v38 = v36;
      PendingPageRender.observeAssets(_:)(*(_QWORD *)((char *)v2 + qword_100852E68), &protocol witness table for ArtworkLoader);
      v37 = swift_release(v38);
    }
    v39 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v37);
    ArtworkLoader.pageRenderMetrics.setter(v39);
  }
  else
  {
    (*(void (**)(_QWORD))((swift_isaMask & *v2) + 0x180))(0);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1003762DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + qword_100852E58);
    swift_retain(v5);

    v6 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter();
    result = swift_release(v5);
    if (v6)
    {
      PendingPageRender.isLayoutPending.setter(0);
      return swift_release(v6);
    }
  }
  return result;
}

char *sub_100376370(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  ObjectType = swift_getObjectType();
  v6 = &v2[qword_1008540E0];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  v7 = type metadata accessor for AdvertRotationControllerProvider(0);
  v8 = type metadata accessor for ObjectGraph(0);
  v9 = v2;
  inject<A, B>(_:from:)(&v21, v7, a2, v7, v8);
  *(_QWORD *)&v9[qword_100809750] = v21;

  swift_retain(a1);
  swift_retain(a2);
  v10 = (char *)sub_1005CC150(a1, a2);
  v11 = *(void **)&v10[qword_100852E90];
  v12 = *(_QWORD *)&v10[qword_100809750];
  v13 = v10;
  v14 = v11;
  swift_retain(v12);
  CompoundScrollObserver.addChild(_:)(v15, &protocol witness table for AdvertRotationControllerProvider);

  swift_release(v12);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v17 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10066F870;
  *(_QWORD *)(v17 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v17 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(_QWORD *)(v17 + 48) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v17 + 56) = &protocol witness table for UITraitLayoutDirection;
  v18 = v13;
  v19 = UIViewController.registerForTraitChanges<A>(_:handler:)(v17, sub_100322080, 0, ObjectType);
  swift_unknownObjectRelease(v19);
  swift_bridgeObjectRelease(v17);

  swift_release(a1);
  swift_release(a2);
  return v18;
}

void sub_100376514()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  id v26;
  void *v27;
  objc_super v28[2];
  objc_super v29;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AutomationSemantics(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.receiver = v0;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, "viewDidLoad", v9);
  v12 = objc_msgSend(v0, "collectionView");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "setKeyboardDismissMode:", 1);

  }
  v14 = objc_msgSend(v1, "collectionView");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setAllowsSelection:", 1);

  }
  v16 = objc_msgSend(v1, "collectionView");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  }
  v18 = objc_msgSend(v1, "collectionView");
  if (v18)
  {
    v19 = v18;
    memset(v28, 0, sizeof(v28));
    static AutomationSemantics.page(name:id:)(0x6F46686372616573, 0xEB00000000737563, v28);
    sub_100011088((uint64_t)v28, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v11);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v20 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
    v21 = swift_allocObject(v20, 64, 7);
    *(_OWORD *)(v21 + 16) = xmmword_10066F870;
    *(_QWORD *)(v21 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v21 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(_QWORD *)(v21 + 48) = type metadata accessor for UITraitLegibilityWeight(0);
    *(_QWORD *)(v21 + 56) = &protocol witness table for UITraitLegibilityWeight;
    v22 = UIViewController.registerForTraitChanges<A>(_:handler:)(v21, sub_10037772C, 0, ObjectType);
    swift_unknownObjectRelease(v22);
    swift_bridgeObjectRelease(v21);
    if (qword_1007F2A20 != -1)
      swift_once(&qword_1007F2A20, sub_10042D138);
    v23 = type metadata accessor for StaticDimension(0);
    v24 = sub_1000117A8(v23, (uint64_t)qword_1008561B0);
    static Dimensions.defaultRoundingRule.getter(v24);
    v25 = AnyDimension.value(in:rounded:)(v1, v6, v23, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    objc_msgSend(v1, "additionalSafeAreaInsets");
    objc_msgSend(v1, "setAdditionalSafeAreaInsets:", v25);
    v26 = objc_msgSend(v1, "view");
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "setNeedsLayout");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100376858(void *a1)
{
  id v1;

  v1 = a1;
  sub_100376514();

}

void sub_10037688C(void *a1, uint64_t a2)
{
  sub_1003768C8(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1003768A0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100376944(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1003768B4(void *a1, uint64_t a2)
{
  sub_1003768C8(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_1003768C8(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_100376930(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100376944(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_100376944(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType();
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

uint64_t sub_1003769B4()
{
  return sub_100376A20((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_1003769D0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1003769B4();

}

uint64_t sub_100376A04()
{
  return sub_100376A20((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_100376A20(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_100010FD8(v11, (uint64_t)v22);
  if (v23)
  {
    sub_100011020((uint64_t)v22, (uint64_t)v18);
    sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
    v12 = v19;
    v13 = v20;
    sub_100011064(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  else
  {
    v14 = sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_100376B84(void *a1)
{
  id v1;

  v1 = a1;
  sub_100376A04();

}

id sub_100376BB8()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F4420);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10066F860;
  v5 = *(_QWORD *)&v0[qword_100852E58];
  v6 = *(_QWORD *)&v0[qword_100809750];
  v7 = sub_10000DF3C(&qword_100809D00);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(v5);
  swift_retain(v6);
  v8 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v5, v6);
  v9 = sub_100010F98(&qword_100809D08, &qword_100809D00, (const char *)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *(_QWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 40) = v9;
  v10 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v11 = swift_allocObject(v10, 17, 7);
  *(_BYTE *)(v11 + 16) = 1;
  v12 = sub_10000E99C(&qword_1007F4438, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10069C8D0);
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v4 + 56) = v12;
  v13 = sub_10000E99C(&qword_100809CE0, type metadata accessor for SearchFocusDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v14 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v24, ObjectType, v13);
  v15 = TimedMetricsPagePresenter.impressionsCalculator.getter(v14);
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v6);
  result = objc_msgSend(v1, "collectionView", swift_retain(v16).n128_f64[0]);
  if (result)
  {
    v18 = result;
    v19 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    *(_QWORD *)(v4 + 64) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v24, v15, v6, v16, v18);
    *(_QWORD *)(v4 + 72) = &protocol witness table for ImpressionsCollectionElementsObserver;
    v20 = type metadata accessor for CompoundCollectionElementsObserver(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v21 = CompoundCollectionElementsObserver.init(children:)(v4);
    v22 = sub_1003729DC();
    if (swift_dynamicCastClass(v22, v20))
    {
      v23 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_100010340, 0);
      CompoundCollectionElementsObserver.addChild(_:)(v23, &protocol witness table for CompoundCollectionElementsObserver);
      swift_unknownObjectRelease(v22);
      swift_release(v23);
    }
    else
    {
      swift_unknownObjectRelease(v22);
    }
    return (id)v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100376E34@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SearchFocusPageShelfLayoutSpacingProvider;
  result = sub_1003776E8();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100376E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];

  v0 = sub_10000DF3C(&qword_1007F43E8);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10066F870;
  v2 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v3 = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(v3 + 16) = 1;
  v4 = sub_10000E99C(&qword_1007F43F0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_100687814);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_10000DF3C(&qword_100809CE8);
  v6 = sub_100010F98(&qword_100809CF0, &qword_100809CE8, byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v14, v5, v6);
  v7 = type metadata accessor for GenericPageItemSupplementaryProvider();
  v8 = swift_allocObject(v7, 64, 7);
  sub_100011020((uint64_t)v14, v8 + 16);
  v9 = type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  v10 = swift_allocObject(v9, 56, 7);
  sub_100010F3C(v14, v10 + 16);
  *(_QWORD *)(v8 + 56) = v10;
  v11 = sub_10000E99C(&qword_100803060, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider, (uint64_t)&unk_100687C98);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v11;
  v12 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v1);
}

uint64_t sub_100376FCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  double *v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  _QWORD v25[4];
  __int128 v26;
  _QWORD v27[4];
  _QWORD v28[4];
  _QWORD v29[5];

  ObjectType = swift_getObjectType();
  v4 = sub_10000E99C(&qword_100809CE0, type metadata accessor for SearchFocusDiffablePageViewController, (uint64_t)byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v29, ObjectType, v4);
  v26 = xmmword_10066F870;
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v27[3] = swift_getObjectType();
  v27[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v28[3] = swift_getObjectType();
  v28[0] = v6;
  sub_100010E9C((uint64_t)v27, (uint64_t)v25);
  sub_100010E9C((uint64_t)v25, (uint64_t)v23);
  v7 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v8 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(&v24, v23, v7, v8, 6) & 1) == 0)
    v24 = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  if ((_QWORD)v24)
  {
    v21 = v24;
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = (double *)sub_10020070C(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = *((_QWORD *)v9 + 2);
    v10 = *((_QWORD *)v9 + 3);
    if (v11 >= v10 >> 1)
      v9 = (double *)sub_10020070C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v21;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100010E9C((uint64_t)v28, (uint64_t)v25);
  sub_100010E9C((uint64_t)v25, (uint64_t)v23);
  v12 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v13 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(&v24, v23, v12, v13, 6) & 1) == 0)
    v24 = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  if ((_QWORD)v24)
  {
    v22 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = (double *)sub_10020070C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v15 = *((_QWORD *)v9 + 2);
    v14 = *((_QWORD *)v9 + 3);
    v16 = v22;
    if (v15 >= v14 >> 1)
    {
      v20 = (double *)sub_10020070C((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v22;
      v9 = v20;
    }
    *((_QWORD *)v9 + 2) = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v27, v26, (char *)&type metadata for Any + 8);
  v17 = *(_QWORD *)(v1 + qword_100852EA8);
  v18 = type metadata accessor for SearchFocusLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain(v17);
  result = sub_1001D7FAC(v29, (uint64_t)v9, v17, 0);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = result;
  return result;
}

unint64_t sub_1003772D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = PageGridCache.init()(v3);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v6 = PageGridCache.init()(v5);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v8 = PageGridCache.init()(v7);
  a1[3] = (uint64_t)&type metadata for SearchFocusPageGridProvider;
  result = sub_1003776A4();
  a1[4] = result;
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  return result;
}

void sub_100377374(void *a1, uint64_t a2, void *a3)
{
  id v4;
  char *v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType();
  v4 = a3;
  v5 = (char *)v11.receiver;
  objc_msgSendSuper2(&v11, "scrollViewWillBeginDragging:", v4);
  v6 = &v5[qword_1008540E0];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[qword_1008540E0]);
  if (Strong)
  {
    v8 = Strong;
    v9 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);

    swift_unknownObjectRelease(v8);
  }
  else
  {

  }
}

uint64_t sub_100377420@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SearchFocusShelfComponentTypeMappingProvider();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(_QWORD *)(v3 + 16) = swift_allocObject(v4, 16, 7);
  a1[3] = v2;
  result = sub_10000E99C(&qword_100809CD0, (uint64_t (*)(uint64_t))type metadata accessor for SearchFocusShelfComponentTypeMappingProvider, (uint64_t)"Y.\v");
  a1[4] = result;
  *a1 = v3;
  return result;
}

void sub_1003774A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_10000DF3C(&qword_100809CC0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10037592C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:))
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  else
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100377574()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_100809750));
  return sub_100010E34(v0 + qword_1008540E0);
}

uint64_t sub_1003775A0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_100809750));
  return sub_100010E34(a1 + qword_1008540E0);
}

uint64_t type metadata accessor for SearchFocusDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100809780;
  if (!qword_100809780)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchFocusDiffablePageViewController);
  return result;
}

uint64_t sub_100377614(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_1006871A8;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_100377660()
{
  return type metadata accessor for SearchFocusDiffablePageViewController(0);
}

uint64_t sub_100377668()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037768C(uint64_t a1)
{
  uint64_t v1;

  return sub_1003762DC(a1, v1);
}

unint64_t sub_1003776A4()
{
  unint64_t result;

  result = qword_100809CD8;
  if (!qword_100809CD8)
  {
    result = swift_getWitnessTable(&unk_10067015C, &type metadata for SearchFocusPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_100809CD8);
  }
  return result;
}

unint64_t sub_1003776E8()
{
  unint64_t result;

  result = qword_100809CF8;
  if (!qword_100809CF8)
  {
    result = swift_getWitnessTable("5&\v", &type metadata for SearchFocusPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_100809CF8);
  }
  return result;
}

void sub_10037772C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;

  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2A20 != -1)
    swift_once(&qword_1007F2A20, sub_10042D138);
  v6 = type metadata accessor for StaticDimension(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_1008561B0);
  static Dimensions.defaultRoundingRule.getter(v7);
  v8 = AnyDimension.value(in:rounded:)(a1, v5, v6, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(a1, "additionalSafeAreaInsets");
  objc_msgSend(a1, "setAdditionalSafeAreaInsets:", v8);
  v9 = objc_msgSend(a1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for MSODiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100809E38;
  if (!qword_100809E38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MSODiffablePageViewController);
  return result;
}

uint64_t sub_1003778D0(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 1456);
}

uint64_t sub_100377904()
{
  return type metadata accessor for MSODiffablePageViewController(0);
}

uint64_t sub_10037790C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_1008540E8);
  sub_1000117A8(v5, (uint64_t)qword_1008540E8);
  if (qword_1007F2100 != -1)
    swift_once(&qword_1007F2100, sub_1004135EC);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100854800);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 16.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

char *sub_100377AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  UIFontTextStyle *v15;
  uint64_t v16;
  id v17;
  char *v18;
  _QWORD *v19;
  NSString *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  objc_class *v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  id v46;
  NSString *v47;
  void *v48;
  id v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  NSString v53;
  Class isa;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  NSString v70;
  Class v71;
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90[72];
  char v91[112];
  objc_super v92;
  _QWORD v93[5];

  v88 = a4;
  v82 = a3;
  v87 = a2;
  v81 = a1;
  v85 = type metadata accessor for DividerView.Style(0);
  __chkstk_darwin(v85);
  v86 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for DirectionalTextAlignment(0);
  v84 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FontSource(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (UIFontTextStyle *)((char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_divider;
  v17 = objc_allocWithZone((Class)type metadata accessor for DividerView(0));
  v18 = v4;
  *(_QWORD *)&v4[v16] = objc_msgSend(v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0, v81, v82);
  *v15 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for FontSource.textStyle(_:), v12);
  v93[3] = v12;
  v93[4] = &protocol witness table for FontSource;
  v19 = sub_1000117C0(v93);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v13 + 16))(v19, v15, v12);
  v20 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v93, 32.0);
  (*(void (**)(UIFontTextStyle *, uint64_t))(v13 + 8))(v15, v12);
  v21 = &v18[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_title];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v83 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_titleLabel;
  if (qword_1007F2100 != -1)
    swift_once(&qword_1007F2100, sub_1004135EC);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100854800);
  v24 = *(_QWORD *)(v22 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v25(v11, v23, v22);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v26(v11, 0, 1, v22);
  v27 = enum case for DirectionalTextAlignment.none(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 104);
  v28(v7, enum case for DirectionalTextAlignment.none(_:), v89);
  v29 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v30 = objc_allocWithZone(v29);
  v31 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v11, 0, 0, 1, 0, v7, 0, 0);
  *(_QWORD *)&v18[v83] = v31;
  v32 = &v18[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionText];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v84 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionLabel;
  if (qword_1007F25D0 != -1)
    swift_once(&qword_1007F25D0, sub_100416264);
  v33 = sub_1000117A8(v22, (uint64_t)qword_100855658);
  v25(v11, v33, v22);
  v26(v11, 0, 1, v22);
  v28(v7, v27, v89);
  v34 = objc_allocWithZone(v29);
  v35 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v11, 2, 0, 1, 0, v7, 0, 0);
  *(_QWORD *)&v18[v84] = v35;
  v18[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_hasDivider] = 0;

  v36 = (objc_class *)type metadata accessor for EmptyStateView(0);
  v92.receiver = v18;
  v92.super_class = v36;
  v37 = objc_msgSendSuper2(&v92, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v38 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v39 = (char *)v37;
  v41 = (void *)static UIColor.defaultBackground.getter(v39, v40);
  objc_msgSend(v39, "setBackgroundColor:", v41);

  if (v87)
  {
    v42 = *(void **)&v39[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_titleLabel];
    v43 = sub_10000DF3C(&qword_1007FC280);
    inited = swift_initStackObject(v43, v90);
    *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
    *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
    v45 = qword_1007F1028;
    v46 = v42;
    v47 = NSParagraphStyleAttributeName;
    if (v45 != -1)
      swift_once(&qword_1007F1028, sub_100083BD0);
    v48 = (void *)qword_1008510A8;
    *(_QWORD *)(inited + 64) = sub_100019574(0, &qword_1007F67F8, NSParagraphStyle_ptr);
    *(_QWORD *)(inited + 40) = v48;
    v49 = v48;
    v50 = sub_1003699BC(inited);
    v51 = objc_allocWithZone((Class)NSAttributedString);
    v52 = v87;
    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v52);
    type metadata accessor for Key(0);
    sub_100140B68();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v55 = objc_msgSend(v51, "initWithString:attributes:", v53, isa, swift_bridgeObjectRelease(v50).n128_f64[0]);

    objc_msgSend(v46, "setAttributedText:", v55);
  }
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_titleLabel]);
  v56 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionLabel;
  v57 = *(void **)&v39[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionLabel];
  objc_msgSend(v57, "setNumberOfLines:", 0);
  if (v88)
  {
    v58 = sub_10000DF3C(&qword_1007FC280);
    v59 = swift_initStackObject(v58, v91);
    *(_OWORD *)(v59 + 16) = xmmword_10066F870;
    *(_QWORD *)(v59 + 32) = NSParagraphStyleAttributeName;
    v60 = qword_1007F1028;
    v61 = v57;
    v62 = NSParagraphStyleAttributeName;
    if (v60 != -1)
      swift_once(&qword_1007F1028, sub_100083BD0);
    v63 = (void *)qword_1008510A8;
    v64 = sub_100019574(0, &qword_1007F67F8, NSParagraphStyle_ptr);
    *(_QWORD *)(v59 + 40) = v63;
    *(_QWORD *)(v59 + 64) = v64;
    *(_QWORD *)(v59 + 72) = NSForegroundColorAttributeName;
    v65 = v63;
    v66 = static UIColor.secondaryText.getter(NSForegroundColorAttributeName);
    *(_QWORD *)(v59 + 104) = v38;
    *(_QWORD *)(v59 + 80) = v66;
    v67 = sub_1003699BC(v59);
    v68 = objc_allocWithZone((Class)NSAttributedString);
    v69 = v88;
    v70 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v69);
    type metadata accessor for Key(0);
    sub_100140B68();
    v71 = Dictionary._bridgeToObjectiveC()().super.isa;
    v72 = objc_msgSend(v68, "initWithString:attributes:", v70, v71, swift_bridgeObjectRelease(v67).n128_f64[0]);

    objc_msgSend(v61, "setAttributedText:", v72);
  }
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[v56]);
  v73 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_divider;
  v74 = *(char **)&v39[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_divider];
  objc_msgSend(v74, "setHidden:", (v39[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_hasDivider] & 1) == 0);
  if (qword_1007F2038 != -1)
    swift_once(&qword_1007F2038, sub_1003FC974);
  v75 = sub_1000117A8(v85, (uint64_t)qword_100854658);
  v76 = v86;
  sub_1000FB5B0(v75, v86);
  v77 = &v74[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style];
  swift_beginAccess(&v74[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style], v93, 33, 0);
  sub_1000FB5F4(v76, (uint64_t)v77);
  swift_endAccess(v93);
  v78 = &v74[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_separatorInset];
  v79 = *((_OWORD *)v77 + 1);
  *(_OWORD *)v78 = *(_OWORD *)v77;
  *((_OWORD *)v78 + 1) = v79;
  objc_msgSend(v74, "setNeedsLayout");
  objc_msgSend(v74, "setNeedsLayout");
  sub_1000FB638(v76);
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[v73]);

  return v39;
}

void sub_100378390()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  void *v11;
  double Width;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v26;
  objc_super v27;
  CGRect v28;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DividerView.Style(0);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for EmptyStateView(0);
  v27.receiver = v1;
  v27.super_class = v10;
  objc_msgSendSuper2(&v27, "layoutSubviews");
  v11 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_divider];
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v28);
  if (qword_1007F2038 != -1)
    swift_once(&qword_1007F2038, sub_1003FC974);
  v13 = sub_1000117A8(v7, (uint64_t)qword_100854658);
  v14 = sub_1000FB5B0(v13, (uint64_t)v9);
  if (qword_1007F2028 != -1)
    v14 = swift_once(&qword_1007F2028, sub_1003FC8FC);
  v15 = floor(*(double *)&qword_100854638);
  static Dimensions.defaultRoundingRule.getter(v14);
  v16 = type metadata accessor for StaticDimension(0);
  v17 = AnyDimension.value(in:rounded:)(v1, v6, v16, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000FB638((uint64_t)v9);
  objc_msgSend(v11, "setFrame:", 0.0, 0.0, Width, v15 + v17);
  v18 = (void *)objc_opt_self(UIView);
  v19 = swift_allocObject(&unk_10073A888, 32, 7);
  *(_QWORD *)(v19 + 16) = v1;
  *(_QWORD *)(v19 + 24) = ObjectType;
  v20 = swift_allocObject(&unk_10073A8B0, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100378AA8;
  *(_QWORD *)(v20 + 24) = v19;
  aBlock[4] = sub_100030368;
  v26 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100101718;
  aBlock[3] = &unk_10073A8C8;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  v23 = v1;
  swift_retain(v20);
  objc_msgSend(v18, "performWithoutAnimation:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 97, 115, 40, 1);
  swift_release(v19);
  swift_release(v20);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

id sub_100378680(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  double Width;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  double v28;
  uint64_t v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_titleLabel];
  objc_msgSend(a1, "bounds", v4);
  objc_msgSend(v7, "sizeThatFits:", v8, v9);
  v11 = v10;
  v13 = v12;
  v14 = *(void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionLabel];
  objc_msgSend(a1, "bounds");
  objc_msgSend(v14, "sizeThatFits:", v15, v16);
  v18 = v17;
  v20 = v19;
  v21 = v13 + v19;
  objc_msgSend(a1, "bounds");
  v22 = (CGRectGetWidth(v31) - v11) * 0.5;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v7, "setFrame:", v22, (CGRectGetHeight(v32) - v21) * 0.5, v11, v13);
  objc_msgSend(a1, "bounds");
  Width = CGRectGetWidth(v33);
  objc_msgSend(v7, "lastBaselineMaxY");
  v25 = v24;
  if (qword_1007F1D78 != -1)
    swift_once(&qword_1007F1D78, sub_10037790C);
  v26 = type metadata accessor for StaticDimension(0);
  sub_1000117A8(v26, (uint64_t)qword_1008540E8);
  v27 = objc_msgSend(a1, "traitCollection");
  static Dimensions.defaultRoundingRule.getter(v27);
  v28 = StaticDimension.value(compatibleWith:rounded:)(v27, v6);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return objc_msgSend(v14, "setFrame:", (Width - v18) * 0.5, v25 + v28, v18, v20);
}

id sub_1003788E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyStateView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003789AC()
{
  return type metadata accessor for EmptyStateView(0);
}

uint64_t type metadata accessor for EmptyStateView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A470;
  if (!qword_10080A470)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmptyStateView);
  return result;
}

uint64_t sub_1003789F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100687228;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = &unk_100687228;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_100687240;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100378A84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100378AA8()
{
  uint64_t v0;

  return sub_100378680(*(char **)(v0 + 16));
}

uint64_t sub_100378AB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100378AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100378AD0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100378AD8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  UIFontTextStyle *v11;
  uint64_t v12;
  _QWORD *v13;
  NSString *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[5];

  v1 = v0;
  v33 = type metadata accessor for DirectionalTextAlignment(0);
  v2 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontSource(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (UIFontTextStyle *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_divider;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DividerView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *v11 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FontSource.textStyle(_:), v8);
  v35[3] = v8;
  v35[4] = &protocol witness table for FontSource;
  v13 = sub_1000117C0(v35);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v9 + 16))(v13, v11, v8);
  v14 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v35, 32.0);
  (*(void (**)(UIFontTextStyle *, uint64_t))(v9 + 8))(v11, v8);
  v15 = &v1[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_title];
  *v15 = 0;
  v15[1] = 0;
  v32 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_titleLabel;
  if (qword_1007F2100 != -1)
    swift_once(&qword_1007F2100, sub_1004135EC);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = sub_1000117A8(v16, (uint64_t)qword_100854800);
  v18 = *(_QWORD *)(v16 - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v19(v7, v17, v16);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v20(v7, 0, 1, v16);
  v21 = enum case for DirectionalTextAlignment.none(_:);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v23 = v34;
  v22(v34, enum case for DirectionalTextAlignment.none(_:), v33);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  v26 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 0, 0, 1, 0, v23, 0, 0);
  *(_QWORD *)&v1[v32] = v26;
  v27 = &v1[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionText];
  *v27 = 0;
  v27[1] = 0;
  v28 = OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_descriptionLabel;
  if (qword_1007F25D0 != -1)
    swift_once(&qword_1007F25D0, sub_100416264);
  v29 = sub_1000117A8(v16, (uint64_t)qword_100855658);
  v19(v7, v29, v16);
  v20(v7, 0, 1, v16);
  v30 = v34;
  v22(v34, v21, v33);
  v31 = objc_allocWithZone(v24);
  *(_QWORD *)&v1[v28] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 2, 0, 1, 0, v30, 0, 0);
  v1[OBJC_IVAR____TtC22SubscribePageExtension14EmptyStateView_hasDivider] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/EmptyStateView.swift", 43, 2, 104, 0);
  __break(1u);
}

double sub_100378E60(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, double, double);
  uint64_t v11;
  uint64_t v12;
  double result;

  v10 = *(void (**)(uint64_t, uint64_t, double, double))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v11 = sub_10000DF3C(&qword_1007F48E8);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
  swift_retain(v9);
  swift_unknownObjectRetain(a3);
  v10(v12, a3, a4, a5);
  swift_release(v9);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  return result;
}

void sub_100378EFC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  __objc2_meth_list **p_base_meths;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  char *v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  objc_class *v41;
  char *v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t ObjCClassFromMetadata;
  id v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  NSString v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  objc_super v82;
  _BYTE v83[24];
  _QWORD v84[5];

  v9 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v9);
  v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupDataSource] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView] = 0;
  swift_weakInit(&v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator]);
  v12 = &v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver] = 0;
  v13 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_compoundScrollObserver;
  v14 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  v15 = v4;
  *(_QWORD *)&v4[v13] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  v16 = &v15[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_listConfiguration];
  *v16 = 0;
  *((_QWORD *)v16 + 1) = 1;
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ImageHeadingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_iconHeadingView;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_iconHeadingView] = v17;
  v19 = qword_1007F1D80;
  v20 = (char *)v17;
  if (v19 != -1)
    swift_once(&qword_1007F1D80, sub_1003797D4);
  v21 = *(void **)&v20[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView];
  v22 = (id)qword_10080A480;
  v23 = objc_msgSend(v21, "image");
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if (!v23)
    goto LABEL_5;
  v25 = v23;
  sub_100019574(0, (unint64_t *)&qword_1007FD5C0, UIImage_ptr);
  v26 = v22;
  v27 = v25;
  LOBYTE(v25) = static NSObject.== infix(_:_:)(v27, v26);

  p_base_meths = &TodayCardChinLockupListView.base_meths;
  if ((v25 & 1) == 0)
  {
LABEL_5:
    objc_msgSend(v21, "setImage:", v22);
    objc_msgSend(v20, (SEL)p_base_meths[408]);
  }

  if (qword_1007F1D88 != -1)
    swift_once(&qword_1007F1D88, sub_100379874);
  v28 = type metadata accessor for FontUseCase(0);
  v29 = sub_1000117A8(v28, (uint64_t)qword_10080A488);
  v30 = *(_QWORD *)(v28 - 8);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v31(v11, v29, v28);
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
  v32(v11, 0, 1, v28);
  sub_1002EA000((uint64_t)v11);
  v33 = *(char **)&v15[v18];
  if (qword_1007F1D90 != -1)
    swift_once(&qword_1007F1D90, sub_100379888);
  sub_1001D6100((uint64_t)&qword_10080A4A0, (uint64_t)v84);
  v34 = &v33[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_metrics];
  swift_beginAccess(&v33[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_metrics], v83, 33, 0);
  sub_1001D613C(v84, v34);
  objc_msgSend(v33, (SEL)p_base_meths[408], swift_endAccess(v83).n128_f64[0]);
  sub_1001D6178(v84);
  objc_msgSend(*(id *)(*(_QWORD *)&v15[v18] + OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_headingLabel), "setNumberOfLines:", 1);
  v35 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchHeadingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v36 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_titleHeadingView;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_titleHeadingView] = v35;
  if (qword_1007F1D98 != -1)
    swift_once(&qword_1007F1D98, sub_1003798B0);
  v37 = sub_1000117A8(v28, (uint64_t)qword_10080A4C8);
  v31(v11, v37, v28);
  v32(v11, 0, 1, v28);
  sub_1001804A8((uint64_t)v11);
  v38 = *(char **)&v15[v36];
  v39 = *(void **)&v38[OBJC_IVAR____TtC22SubscribePageExtension17SearchHeadingView_headingLabel];
  v40 = v38;
  objc_msgSend(v39, "setNumberOfLines:", 2);

  v41 = (objc_class *)type metadata accessor for SearchLockupListCollectionViewCell();
  v82.receiver = v15;
  v82.super_class = v41;
  v42 = (char *)objc_msgSendSuper2(&v82, "initWithFrame:", a1, a2, a3, a4);
  v43 = sub_10037A2C8();
  v44 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v43, a1, a2, a3, a4);

  v45 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView;
  v46 = *(void **)&v42[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView];
  *(_QWORD *)&v42[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView] = v44;

  v47 = *(void **)&v42[v45];
  if (!v47)
  {
    __break(1u);
    goto LABEL_20;
  }
  v48 = type metadata accessor for NestedCollectionViewImpressionsCoordinator(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = NestedCollectionViewImpressionsCoordinator.init(collectionView:)(v47);
  v50 = *(_QWORD *)&v42[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator];
  *(_QWORD *)&v42[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator] = v49;
  v51 = objc_msgSend(v42, "contentView", swift_release(v50).n128_f64[0]);
  objc_msgSend(v51, "addSubview:", *(_QWORD *)&v42[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_iconHeadingView]);

  v52 = objc_msgSend(v42, "contentView");
  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v42[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_titleHeadingView]);

  v53 = *(void **)&v42[v45];
  if (!v53)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v53, "setDelegate:", v42);
  v54 = *(void **)&v42[v45];
  if (!v54)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v55 = (void *)objc_opt_self(UIColor);
  v56 = v54;
  v57 = objc_msgSend(v55, "clearColor");
  objc_msgSend(v56, "setBackgroundColor:", v57);

  v58 = *(void **)&v42[v45];
  if (!v58)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v59 = type metadata accessor for SmallSearchLockupCollectionViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v59);
  v61 = v58;
  static UICollectionReusableView.defaultReuseIdentifier.getter(v62);
  v64 = v63;
  v65 = String._bridgeToObjectiveC()();
  objc_msgSend(v61, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v65, swift_bridgeObjectRelease(v64).n128_f64[0]);

  v66 = *(void **)&v42[v45];
  if (!v66)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v67 = type metadata accessor for SeparatorSpacerReusableView();
  v68 = swift_getObjCClassFromMetadata(v67);
  v69 = v66;
  static UICollectionReusableView.defaultReuseIdentifier.getter(v70);
  v72 = v71;
  v73 = String._bridgeToObjectiveC()();
  v74 = swift_bridgeObjectRelease(v72);
  static UICollectionReusableView.defaultReuseIdentifier.getter(v74);
  v76 = v75;
  v77 = String._bridgeToObjectiveC()();
  objc_msgSend(v69, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v68, v73, v77, swift_bridgeObjectRelease(v76).n128_f64[0]);

  v78 = objc_msgSend(v42, "contentView");
  v79 = *(void **)&v42[v45];
  if (v79)
  {
    v80 = v78;
    v81 = v79;
    objc_msgSend(v80, "addSubview:", v81);

    return;
  }
LABEL_24:
  __break(1u);
}

void (*sub_10037965C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_1003796CC;
}

void sub_1003796CC(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
LABEL_6:
    free(v3);
    return;
  }
  v5 = v3[4];
  swift_endAccess(v3);
  swift_release(v4);
  v6 = *(_QWORD *)(v5
                 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator);
  if (v6)
  {
    v7 = v3[4] + v3[5];
    Strong = swift_weakLoadStrong(v7);
    swift_retain(v6);
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.impressionsCalculator.setter(Strong);
    swift_release(v6);
    v9 = swift_weakLoadStrong(v7);
    if (v9)
    {
      v10 = v9;
      v11 = v3[4];
      v12 = type metadata accessor for ImpressionsScrollObserver(0);
      swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
      v13 = swift_retain(v10);
      v14 = ImpressionsScrollObserver.init(_:)(v13);
      v15 = *(_QWORD *)(v11
                      + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver);
      *(_QWORD *)(v11
                + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver) = v14;
      swift_release(v10);
      swift_release(v15);
    }
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1003797D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for SystemImage.appstore(_:), v0);
  v4 = static SystemImage.load(_:with:)(v3, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_10080A480 = v4;
  return result;
}

id sub_100379874(uint64_t a1)
{
  return sub_1001D2734(a1, qword_10080A488, (id *)&UIFontTextStyleCaption2);
}

void sub_100379888()
{
  qword_10080A4B8 = (uint64_t)&type metadata for CGFloat;
  unk_10080A4C0 = &protocol witness table for CGFloat;
  qword_10080A4A0 = 0x4008000000000000;
}

id sub_1003798B0(uint64_t a1)
{
  return sub_1001D2734(a1, qword_10080A4C8, (id *)&UIFontTextStyleTitle3);
}

uint64_t sub_1003798C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100045464(v0, qword_10080A4E0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_10080A4E0);
  if (qword_1007F2180 != -1)
    swift_once(&qword_1007F2180, sub_1004137FC);
  v2 = sub_1000117A8(v0, (uint64_t)qword_100854980);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100379954(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v10[5];
  __int128 v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  void *v15;
  void *v16;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &type metadata for CGFloat;
  v16 = &protocol witness table for CGFloat;
  *(_QWORD *)&v14 = 0x4010000000000000;
  if (qword_1007F1DA0 != -1)
    swift_once(&qword_1007F1DA0, sub_1003798C4);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_10080A4E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v6, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v12 = type metadata accessor for StaticDimension(0);
  v13 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v11);
  v10[3] = v1;
  v10[4] = &protocol witness table for FontSource;
  v7 = sub_1000117C0(v10);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  StaticDimension.init(_:scaledLike:)(v10, 20.0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100010F3C(&v14, (uint64_t)&unk_10080A4F8);
  return sub_100010F3C(&v11, (uint64_t)&unk_10080A520);
}

id sub_100379AC8(id result, uint64_t a2)
{
  char *v2;
  char *v3;
  int v4;
  uint64_t v5;
  id v6;

  v3 = &v2[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_listConfiguration];
  if (((result ^ v2[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_listConfiguration]) & 1) != 0
    || *((_QWORD *)v3 + 1) != a2)
  {
    v4 = result & 1;
    *v3 = result & 1;
    *((_QWORD *)v3 + 1) = a2;
    v5 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView;
    result = *(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView];
    if (result)
    {
      v6 = objc_msgSend(result, "collectionViewLayout");
      objc_msgSend(v6, "invalidateLayout");

      result = *(id *)&v2[v5];
      if (result)
      {
        objc_msgSend(result, "setScrollEnabled:", v4 == 0);
        return objc_msgSend(v2, "setNeedsLayout");
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_100379B90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  double v30;
  void *v31;
  void *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  id v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48;
  objc_super v49;

  v1 = v0;
  swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for SearchLockupListCollectionViewCell();
  v49.receiver = v0;
  v49.super_class = v6;
  objc_msgSendSuper2(&v49, "layoutSubviews");
  v7 = objc_msgSend(v0, "contentView");
  objc_msgSend(v7, "bounds");
  v42 = v8;
  v41 = v9;
  v11 = v10;
  v13 = v12;

  v14 = objc_msgSend(v1, "contentView");
  objc_msgSend(v14, "layoutMargins");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_listConfiguration
                     + 8];
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v24 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100852280);
  v26 = objc_msgSend(v1, "traitCollection");
  sub_1001934E0(v25, (uint64_t)v26, v11, v13);
  v28 = v27;

  if (qword_1007F1DB0 == -1)
  {
    v29 = v23 - 1;
    if (!__OFSUB__(v23, 1))
      goto LABEL_5;
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_once(&qword_1007F1DB0, sub_10037A2A8);
  v29 = v23 - 1;
  if (__OFSUB__(v23, 1))
    goto LABEL_9;
LABEL_5:
  v30 = *(double *)&qword_10080A548;
  v31 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_iconHeadingView];
  v45[3] = type metadata accessor for ImageHeadingView();
  v45[4] = &protocol witness table for UIView;
  v45[0] = v31;
  v32 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_titleHeadingView];
  v33 = type metadata accessor for SearchHeadingView();
  v44[4] = &protocol witness table for UIView;
  v44[3] = v33;
  v44[0] = v32;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView])
  {
    v34 = v28 * (double)v23 + v30 * (double)v29;
    v46[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView];
    v35 = sub_100019574(0, &qword_100800840, UICollectionView_ptr);
    v36 = v31;
    v37 = v32;
    LayoutView.withMeasurements(representing:)(v43, v35, &protocol witness table for UIView, v11, v34);
    v38.n128_u64[0] = v16;
    sub_100379F04((uint64_t)v45, (uint64_t)v44, (uint64_t)v43, v46, v38, v18, v20, v22);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v45);
    v39 = v47;
    v40 = v48;
    sub_100011064(v46, v47);
    dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v39, v40, v42, v41, v11, v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v46);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_100379F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, __n128 a5@<Q0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  double v11;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  void *v36;
  void *v37;
  _QWORD v38[5];
  _QWORD v39[6];

  v11 = a5.n128_f64[0];
  v33 = a2;
  v34 = a3;
  v14 = type metadata accessor for FontSource(0, a5);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SearchLockupListLayout.Metrics(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v33 - v24;
  v39[3] = type metadata accessor for ZeroDimension(0);
  v39[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v39);
  static ZeroDimension.zero.getter();
  if (qword_1007F1D98 != -1)
    swift_once(&qword_1007F1D98, sub_1003798B0);
  v26 = type metadata accessor for FontUseCase(0);
  v27 = sub_1000117A8(v26, (uint64_t)qword_10080A4C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v18, v27, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for FontSource.useCase(_:), v14);
  v38[3] = type metadata accessor for StaticDimension(0);
  v38[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v38);
  v36 = (void *)v14;
  v37 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(v35);
  (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v28, v18, v14);
  StaticDimension.init(_:scaledLike:)(v35, 25.0);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v36 = &type metadata for CGFloat;
  v37 = &protocol witness table for CGFloat;
  v35[0] = 0x4030000000000000;
  SearchLockupListLayout.Metrics.init(headingLeadingSpace:titleLeadingSpace:lockupCollectionViewTopSpace:layoutMargins:)(v39, v38, v35, v11, a6, a7, a8);
  v29 = v19;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v25, v19);
  sub_100011020(a1, (uint64_t)v39);
  sub_100011020(v33, (uint64_t)v38);
  sub_100011020(v34, (uint64_t)v35);
  v30 = type metadata accessor for SearchLockupListLayout(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = SearchLockupListLayout.init(metrics:iconHeadingView:titleHeadingView:lockupCollectionView:)(v22, v39, v38, v35);
  a4[3] = v30;
  a4[4] = sub_10000E99C(&qword_100800808, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLockupListLayout, (uint64_t)&protocol conformance descriptor for SearchLockupListLayout);
  a4[5] = sub_10000E99C(&qword_100800810, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLockupListLayout, (uint64_t)&protocol conformance descriptor for SearchLockupListLayout);
  *a4 = v31;
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v29);
}

void sub_10037A2A8()
{
  qword_10080A548 = 0x4030000000000000;
}

void sub_10037A2B8()
{
  qword_10080A550 = 0x4020000000000000;
}

id sub_10037A2C8()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD v8[5];
  uint64_t v9;

  ObjectType = swift_getObjectType();
  v1 = swift_allocObject(&unk_10073A980, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16);
  v2 = swift_allocObject(&unk_10073A9A8, 32, 7);
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = ObjectType;
  v3 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v8[4] = sub_10037B044;
  v9 = v2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100252D24;
  v8[3] = &unk_10073A9C0;
  v4 = _Block_copy(v8);
  v5 = objc_msgSend(v3, "initWithSectionProvider:", v4, swift_retain(v1).n128_f64[0]);
  _Block_release(v4);
  v6 = v9;
  swift_release(v1);
  swift_release(v6);
  return v5;
}

id sub_10037A3D0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *Strong;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD aBlock[5];
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v23, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = Strong[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_listConfiguration];
  v7 = *(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_listConfiguration
                        + 8];

  swift_beginAccess(v4, v22, 0, 0);
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = objc_msgSend(v8, "contentView");

  if (!v10)
    return 0;
  objc_msgSend(v10, "layoutMargins");
  v13 = sub_10037B25C(v6, v7, a2, v11, v12);
  if (v13)
  {
    v14 = swift_allocObject(&unk_10073A980, 24, 7);
    swift_beginAccess(v4, v21, 0, 0);
    v15 = (void *)swift_unknownObjectWeakLoadStrong(v4);
    swift_unknownObjectWeakInit(v14 + 16);
    v16 = v13;

    aBlock[4] = sub_10037B77C;
    v20 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100378E60;
    aBlock[3] = &unk_10073A9E8;
    v17 = _Block_copy(aBlock);
    objc_msgSend(v16, "setVisibleItemsInvalidationHandler:", v17, swift_release(v20).n128_f64[0]);

    _Block_release(v17);
    v10 = v16;
  }

  return v13;
}

void sub_10037A588(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver);
    swift_retain(v12);

    if (v12)
    {
      v13 = type metadata accessor for ImpressionsScrollObserver(0);
      ScrollObserver.didScroll(visibleItems:layoutEnvironment:contentOffset:)(a1, a2, v13, &protocol witness table for ImpressionsScrollObserver, a4, a5);
      swift_release(v12);
    }
  }
}

id sub_10037A7B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchLockupListCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchLockupListCollectionViewCell()
{
  return objc_opt_self(_TtC22SubscribePageExtension34SearchLockupListCollectionViewCell);
}

ValueMetadata *type metadata accessor for SearchLockupListCollectionViewCell.ListConfiguration()
{
  return &type metadata for SearchLockupListCollectionViewCell.ListConfiguration;
}

uint64_t sub_10037A8D0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

double sub_10037A918(uint64_t a1)
{
  double result;

  sub_10037AF14(a1);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*sub_10037A93C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10037965C(v2);
  return sub_10001DF34;
}

uint64_t sub_10037A980()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_10037A9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

uint64_t (*sub_10037AA34(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

double sub_10037AA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, void *a15, uint64_t a16)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  __n128 v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  _BYTE v51[12];
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[5];
  _QWORD v60[5];
  _QWORD v61[5];
  uint64_t v62[3];
  uint64_t v63;
  uint64_t v64;

  v58 = a8;
  v52 = a7;
  v56 = a6;
  v55 = a5;
  v54 = a4;
  v53 = a3;
  v57 = a2;
  v23 = type metadata accessor for FontUseCase(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = &v51[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v29 = &v51[-v28];
  v30 = type metadata accessor for ImageHeadingView();
  if (qword_1007F1D80 != -1)
    swift_once(&qword_1007F1D80, sub_1003797D4);
  v31 = (void *)qword_10080A480;
  if (qword_1007F1D88 != -1)
    swift_once(&qword_1007F1D88, sub_100379874);
  v32 = sub_1000117A8(v23, (uint64_t)qword_10080A488);
  v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16);
  v33(v29, v32, v23);
  if (qword_1007F1D90 != -1)
    swift_once(&qword_1007F1D90, sub_100379888);
  v57 = sub_1002EB6AC(v31, a1, v57, (uint64_t)v29, 1, (uint64_t)&qword_10080A4A0, a15, v30, v34);
  v35 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
  v35(v29, v23);
  type metadata accessor for SearchHeadingView();
  if (qword_1007F1D98 != -1)
    swift_once(&qword_1007F1D98, sub_1003798B0);
  v36 = sub_1000117A8(v23, (uint64_t)qword_10080A4C8);
  v33(v29, v36, v23);
  if (qword_1007F1DA0 != -1)
    swift_once(&qword_1007F1DA0, sub_1003798C4);
  v37 = sub_1000117A8(v23, (uint64_t)qword_10080A4E0);
  v33(v26, v37, v23);
  if (qword_1007F1DA8 != -1)
    swift_once(&qword_1007F1DA8, sub_100379954);
  v39 = v52 & 1;
  v40 = sub_10018203C(v53, v54, (uint64_t)v29, 2, v55, v56, v38, (uint64_t)v26, (uint64_t)&unk_10080A4F8, a15);
  v35(v26, v23);
  v35(v29, v23);
  v41 = swift_allocObject(&unk_10073AA20, 40, 7);
  *(_QWORD *)(v41 + 16) = a16;
  *(_BYTE *)(v41 + 24) = v39;
  *(_QWORD *)(v41 + 32) = v58;
  v42 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v44 = LayoutViewPlaceholder.init(measureWith:)(sub_10037BC00, v41, v43);
  v61[3] = v42;
  v61[4] = &protocol witness table for LayoutViewPlaceholder;
  v45 = v57;
  v60[4] = &protocol witness table for LayoutViewPlaceholder;
  v61[0] = v57;
  v60[3] = v42;
  v60[0] = v40;
  v59[4] = &protocol witness table for LayoutViewPlaceholder;
  v59[3] = v42;
  v59[0] = v44;
  swift_retain(v57);
  swift_retain(v40);
  v46 = swift_retain(v44);
  v46.n128_f64[0] = a11;
  sub_100379F04((uint64_t)v61, (uint64_t)v60, (uint64_t)v59, v62, v46, a12, a13, a14);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v60);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v61);
  v47 = v63;
  v48 = v64;
  sub_100011064(v62, v63);
  v49 = Measurable.measuredSize(fitting:in:)(a15, v47, v48, a9, a10);
  swift_release(v44);
  swift_release(v40);
  swift_release(v45);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
  return v49;
}

uint64_t sub_10037AF14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator, v13, 1, 0);
  result = swift_weakAssign(v4, a1);
  v6 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator);
  if (v6)
  {
    Strong = swift_weakLoadStrong(v4);
    swift_retain(v6);
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.impressionsCalculator.setter(Strong);
    swift_release(v6);
    result = swift_weakLoadStrong(v4);
    if (result)
    {
      v8 = result;
      v9 = type metadata accessor for ImpressionsScrollObserver(0);
      swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
      v10 = swift_retain(v8);
      v11 = ImpressionsScrollObserver.init(_:)(v10);
      v12 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver);
      *(_QWORD *)(v2
                + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver) = v11;
      swift_release(v8);
      return swift_release(v12);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037AFFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037B020()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10037B044(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_10037A3D0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10037B04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10037B05C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10037B064()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupCollectionView] = 0;
  swift_weakInit(&v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCalculator], 0);
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsScrollObserver] = 0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_compoundScrollObserver;
  v3 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)&v0[v2] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SearchLockupListCollectionViewCell.swift", 63, 2, 70, 0);
  __break(1u);
}

void sub_10037B154(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for SmallLockupView(0);
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v8 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v9 = sub_1000117A8(v8, (uint64_t)qword_100852280);
  sub_100193710(v9, a2, a3, a4);
  if (qword_1007F1DB0 == -1)
  {
    if (!__OFSUB__(a1, 1))
      return;
LABEL_8:
    __break(1u);
    return;
  }
  swift_once(&qword_1007F1DB0, sub_10037A2A8);
  if (__OFSUB__(a1, 1))
    goto LABEL_8;
}

id sub_10037B25C(char a1, uint64_t a2, void *a3, double a4, double a5)
{
  double v9;
  id v10;
  void *v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  id v36;
  double v37;
  int v38;
  char **v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v50;
  int v51;
  uint64_t v52;

  if (qword_1007F1DB0 != -1)
    swift_once(&qword_1007F1DB0, sub_10037A2A8);
  v51 = a1 & 1;
  v9 = *(double *)&qword_10080A548;
  v10 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 4, 0.0, *(double *)&qword_10080A548);
  v11 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v12 = 1.0;
  v13 = objc_msgSend(v11, "fractionalWidthDimension:", 1.0);
  v14 = objc_msgSend(v11, "absoluteDimension:", v9);
  v15 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v16 = objc_msgSend(v15, "sizeWithWidthDimension:heightDimension:", v13, v14);

  type metadata accessor for SeparatorSpacerReusableView();
  static UICollectionReusableView.defaultReuseIdentifier.getter(v17);
  v19 = v18;
  v20 = v10;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v22 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v16, v21, v20);

  v50 = v20;
  v23 = objc_msgSend(v11, "fractionalWidthDimension:", 1.0);
  v24 = a2;
  v25 = objc_msgSend(v11, "fractionalHeightDimension:", 1.0 / (double)a2);
  v26 = objc_msgSend(v15, "sizeWithWidthDimension:heightDimension:", v23, v25);

  v27 = sub_10000DF3C(&qword_1007F5840);
  v28 = swift_allocObject(v27, 40, 7);
  *(_OWORD *)(v28 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v28 + 32) = v22;
  v52 = v28;
  specialized Array._endMutation()(v28);
  sub_100019574(0, &qword_1007F49D0, NSCollectionLayoutSupplementaryItem_ptr);
  v29 = v22;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v52);
  v31 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:supplementaryItems:", v26, isa);

  v32 = objc_msgSend(a3, "container");
  objc_msgSend(v32, "contentSize");
  v34 = v33;
  *(_QWORD *)&v35 = swift_unknownObjectRelease(v32).n128_u64[0];
  if (v34 <= 0.0)
  {
    v39 = &selRef_estimatedDimension_;
    v38 = v51;
  }
  else
  {
    v36 = objc_msgSend(a3, "container", v35);
    objc_msgSend(v36, "contentSize");
    v12 = v37;
    swift_unknownObjectRelease(v36);
    v38 = v51;
    if (!v51)
      v12 = v12 - a4 - a5;
    v39 = &selRef_absoluteDimension_;
  }
  v40 = objc_msgSend(v11, *v39, v12, a3);
  v41 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v42 = v40;
  v43 = objc_msgSend(v11, "fractionalHeightDimension:", 1.0);
  v44 = objc_msgSend(v15, "sizeWithWidthDimension:heightDimension:", v42, v43);

  v45 = objc_msgSend(v41, "verticalGroupWithLayoutSize:subitem:count:", v44, v31, v24);
  v46 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", *(double *)&qword_10080A548);
  objc_msgSend(v45, "setInterItemSpacing:", v46);

  v47 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v45);
  if (qword_1007F1DB8 != -1)
    swift_once(&qword_1007F1DB8, sub_10037A2B8);
  objc_msgSend(v47, "setInterGroupSpacing:", *(double *)&qword_10080A550);
  objc_msgSend(v47, "setContentInsets:", 0.0, a4, 0.0, a5);
  objc_msgSend(v47, "setOrthogonalScrollingBehavior:", (4 * v38) ^ 4u);

  return v47;
}

void sub_10037B77C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;

  sub_10037A588(a1, a2, v4, a3, a4);
}

double sub_10037B784(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];

  v2 = v1;
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_10080A5E0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1008007F0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_objectGraph];
  if (v16)
  {
    v31 = v4;
    v17 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupDataSource];
    if (v17)
    {
      swift_retain(v16);
      v18 = v17;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
        DiffableLens.value.getter(v32, v11);
        v19 = v32[0];
        v21 = Lockup.clickAction.getter(v20);
        v22 = swift_release(v19);
        if (v21)
        {
          v23 = UIResponder.nearestActionRunner.getter();
          if (v23)
          {
            v24 = v23;
            v32[3] = type metadata accessor for SearchLockupListCollectionViewCell();
            v32[0] = v2;
            v25 = v31;
            (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v31);
            v26 = v2;
            dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v21, v32, v7, v16);
            swift_release(v16);
            swift_release(v21);
            v27 = swift_release(v24);
            (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v25, v27);
            (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
            sub_100011088((uint64_t)v32, &qword_1007F6E90);
            return v13.n128_f64[0];
          }
          (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
          swift_release(v16);
          v28 = v21;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v15, v11, v22);
          v28 = v16;
        }
        v13.n128_u64[0] = swift_release(v28).n128_u64[0];
        return v13.n128_f64[0];
      }
      swift_release(v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, 1, 1, v11, v13);
    }
    sub_100011088((uint64_t)v10, &qword_10080A5E0);
  }
  return v13.n128_f64[0];
}

uint64_t sub_10037BA28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  __n128 v18;
  _QWORD v20[5];

  v3 = v2;
  v6 = sub_10000DF3C(&qword_10080A5E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1008007F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_lockupDataSource);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v11);
    return sub_100011088((uint64_t)v8, &qword_10080A5E0);
  }
  v15 = v14;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100011088((uint64_t)v8, &qword_10080A5E0);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  v17 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC22SubscribePageExtension34SearchLockupListCollectionViewCell_impressionsCoordinator);
  if (v17)
  {
    v20[3] = type metadata accessor for Lockup(0);
    v20[4] = sub_10000E99C((unint64_t *)&qword_1007FBDA0, (uint64_t (*)(uint64_t))&type metadata accessor for Lockup, (uint64_t)&protocol conformance descriptor for Lockup);
    swift_retain(v17);
    DiffableLens.value.getter(v20, v9);
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.register(model:for:)(v20, a1);
    v18 = swift_release(v17);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v18);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037BBF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10037BC00(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + 32);
  swift_getObjectType();
  sub_10037B154(v7, a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for SearchLockupListCollectionViewCell.ListConfiguration.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10037BCB0 + 4 * byte_100687265[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10037BCE4 + 4 * byte_100687260[v4]))();
}

uint64_t sub_10037BCE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037BCEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10037BCF4);
  return result;
}

uint64_t sub_10037BD00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10037BD08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10037BD0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037BD14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchLockupListCollectionViewCell.ListConfiguration.Mode()
{
  return &type metadata for SearchLockupListCollectionViewCell.ListConfiguration.Mode;
}

unint64_t sub_10037BD34()
{
  unint64_t result;

  result = qword_10080A5E8;
  if (!qword_10080A5E8)
  {
    result = swift_getWitnessTable(&unk_1006873B8, &type metadata for SearchLockupListCollectionViewCell.ListConfiguration.Mode);
    atomic_store(result, (unint64_t *)&qword_10080A5E8);
  }
  return result;
}

uint64_t sub_10037BD80()
{
  return sub_10000E99C(qword_10080A5F0, type metadata accessor for UpsellBreakoutCollectionViewCell, (uint64_t)&unk_1006873E0);
}

double sub_10037BDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t KeyPath;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  __n128 v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v37 = a2;
  v41 = type metadata accessor for PageGrid(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v3 = (uint64_t *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ComponentLayoutOptions(0);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  __chkstk_darwin(v4);
  v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000DF3C((uint64_t *)&unk_1007F5380);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShelfLayoutContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UpsellBreakout(0);
  v16 = sub_10000E99C(&qword_1007F8460, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBreakout, (uint64_t)&protocol conformance descriptor for UpsellBreakout);
  ItemLayoutContext.typedModel<A>(as:)(&v46, v15, v15, v16);
  v18 = v46;
  if (!v46)
    return 0.0;
  ItemLayoutContext.parentShelfLayoutContext.getter(v17);
  ShelfLayoutContext.shelf.getter(v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  KeyPath = swift_getKeyPath(&unk_100687430);
  ReadOnlyLens.subscript.getter(KeyPath, v7);
  v21 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v21);
  swift_bridgeObjectRelease(v46);
  v22 = type metadata accessor for NilState(0);
  v23 = sub_10000E99C(&qword_100807550, (uint64_t (*)(uint64_t))&type metadata accessor for NilState, (uint64_t)&protocol conformance descriptor for NilState);
  v24 = v38;
  ItemLayoutContext.typedState<A>(as:)(v22, v22, v23);
  v25 = type metadata accessor for ObjectGraph(0);
  swift_dynamicCastClassUnconditional(v37, v25, 0, 0, 0);
  v26 = v43;
  ItemLayoutContext.componentLayoutOptions.getter(v27);
  v28 = swift_getKeyPath(&unk_100687460);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v28);
  v29 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v31 = v30;
  (*(void (**)(_QWORD *, uint64_t))(v39 + 8))(v3, v41);
  v32 = sub_1000826AC();
  sub_100315268(v29, v31, v18, v32);
  v34 = v33;
  swift_release(v18);
  v35 = swift_unknownObjectRelease(v32);
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v26, v45, v35);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v42);
  return v34;
}

uint64_t sub_10037C104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[15];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v11[0] = *(_QWORD *)(v2 - 8) + 64;
    v11[1] = &unk_1006874F8;
    v11[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v11[3] = &unk_100687510;
    v11[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v11[5] = &unk_1006874F8;
    v11[6] = &unk_100687528;
    v11[7] = &unk_100687510;
    v11[8] = &unk_100687510;
    v11[9] = &unk_100687540;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 88));
    v6 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
    v8 = type metadata accessor for ReusePool(319, v6, WitnessTable);
    v3 = v8;
    if (v9 <= 0x3F)
    {
      v11[10] = *(_QWORD *)(v8 - 8) + 64;
      v11[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v11[12] = &unk_100687558;
      v11[13] = &unk_100687558;
      v11[14] = &unk_100687528;
      return swift_initClassMetadata2(a1, 0, 15, v11, a1 + 96);
    }
  }
  return v3;
}

uint64_t sub_10037C24C(uint64_t a1, CGFloat a2, CGFloat a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  double v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[10];
  _QWORD v29[10];
  _QWORD v30[10];
  _QWORD v31[10];
  _QWORD v32[9];
  uint64_t v33;
  CGPoint v34;
  CGRect v35;

  v6 = swift_isaMask & *v3;
  v7 = *(_QWORD *)(v6 + 0x50);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v28[-1] - v9;
  sub_10037D154(v11);
  v12 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v13(v10, v12, v7);
  v14 = *(_QWORD *)(v6 + 88);
  v15 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 24);
  v15(v28, v7, v14);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v17 = *(double *)v28;
  v18 = *(double *)&v28[1];
  objc_msgSend(v3, "contentSize");
  v35.size.width = v19;
  v35.size.height = v20;
  v35.origin.x = v18;
  v35.origin.y = v17;
  v34.x = a2;
  v34.y = a3;
  if (!CGRectContainsPoint(v35, v34))
    return 0;
  v13(v10, v12, v7);
  v15(v29, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v22 = floor((a2 - v18) / (*(double *)&v29[4] + *(double *)&v29[6]));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((uint64_t)v22 < 0)
    return 0;
  v27 = (uint64_t)v22;
  v23 = sub_10037D000(result);
  if (v23 <= v27)
    return 0;
  v13(v10, v12, v7);
  v15(v30, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v24 = floor((a3 - v17) / (*(double *)&v30[5] + *(double *)&v30[7]));
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
    goto LABEL_19;
  if (v24 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = (uint64_t)v24;
  if ((uint64_t)v24 < 0)
    return 0;
  v13(v10, v12, v7);
  v15(v31, v7, v14);
  v16(v10, v7);
  if (v31[9] <= v25)
    return 0;
  v13(v10, v12, v7);
  v15(v32, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v26 = v27 * v33;
  if ((unsigned __int128)(v27 * (__int128)v33) >> 64 != (v27 * v33) >> 63)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  result = v26 + v25;
  if (__OFADD__(v26, v25))
LABEL_23:
    __break(1u);
  return result;
}

id sub_10037C554(char a1)
{
  _QWORD *v1;

  objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = a1;
  objc_msgSend(v1, "invalidateIntrinsicContentSize");
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_10037C5C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_10037F798();
}

id sub_10037C5E4(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  return ArcadeSubscribeViewController.__deallocating_deinit((uint64_t)v1, v2);
}

void sub_10037C608(char *a1)
{
  _QWORD *v2;
  uint64_t *v3;
  char *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;

  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)a1);
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v2[10] - 8) + 8))(&a1[v2[12]], v2[10]);
  v3 = (uint64_t *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x68)];
  sub_100019310(*v3, v3[1]);

  swift_unknownObjectRelease(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x88)]);
  swift_release(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x90)]);
  v4 = &a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xB0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2[11]);
  v6 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for ViewRecycler<A>, v6);
  v8 = type metadata accessor for ReusePool(0, v6, WitnessTable);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  swift_bridgeObjectRelease(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xB8)]);

}

uint64_t sub_10037C76C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t WitnessTable;
  _BYTE v7[24];

  v1 = *v0;
  v2 = swift_isaMask;
  result = (uint64_t)objc_msgSend(v0, "isTracking");
  if ((result & 1) == 0)
  {
    result = (uint64_t)objc_msgSend(v0, "isDragging");
    if ((result & 1) == 0)
    {
      swift_beginAccess((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xB0), v7, 33, 0);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)((v2 & v1) + 0x58));
      v5 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v5);
      type metadata accessor for ReusePool(0, v5, WitnessTable);
      ReusePool.drain()();
      return swift_endAccess(v7);
    }
  }
  return result;
}

uint64_t sub_10037C850(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = a1;
  sub_10037C76C();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_10037C8EC(void *a1)
{
  _QWORD *v1;
  id v3;
  id v4;
  id result;
  _BOOL8 v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    v6 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") == (id)1;
    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setFlipsHorizontalAxis:", v6);

    objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 1;
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

void sub_10037CA28(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_10037C8EC(a3);

}

id sub_10037CA80(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = sub_10037CAB0();

  return v2;
}

id sub_10037CAB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

void sub_10037CAE4(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a1;
  sub_10037CB24(a3);

}

id sub_10037CB24(id a1)
{
  _QWORD *v1;
  objc_class *ObjectType;
  id v4;
  id result;
  _BOOL8 v6;
  id v7;
  objc_super v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v9, "semanticContentAttribute");
  v8.receiver = v1;
  v8.super_class = ObjectType;
  result = objc_msgSendSuper2(&v8, "setSemanticContentAttribute:", a1);
  if (v4 != a1)
  {
    v6 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") == (id)1;
    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setFlipsHorizontalAxis:", v6);

    objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 1;
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_10037CC34()
{
  return 0;
}

double sub_10037CC3C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  double result;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 32) = 0xD000000000000040;
  *(_QWORD *)(v3 + 40) = 0x8000000100646350;
  v4 = a1;
  debugPrint(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

double sub_10037CCD0(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = sub_10037CD10((uint64_t)v1);

  return v2;
}

CGFloat sub_10037CD10(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)v1);
  v3 = v2[10];
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)v8 - v5;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v8 - v5, &v1[v2[12]], v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v2[11] + 24))(v8, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return UIViewNoIntrinsicMetric;
}

CGFloat sub_10037CE14(uint64_t a1, CGFloat Width)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  _QWORD v20[2];
  CGRect v21;

  v4 = swift_isaMask & *(_QWORD *)v2;
  v5 = *(_QWORD *)(v4 + 0x50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)v20 - v7;
  v9 = v4;
  if (Width < COERCE_DOUBLE(1))
  {
    v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v10, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v21.origin.x = v12;
    v21.origin.y = v14;
    v21.size.width = v16;
    v21.size.height = v18;
    Width = CGRectGetWidth(v21);
    v9 = swift_isaMask & *(_QWORD *)v2;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(_QWORD *)(v9 + 96)], v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v4 + 88) + 24))(v20, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return Width;
}

double sub_10037CFB0(void *a1, CGFloat a2)
{
  id v3;
  double v4;

  v3 = a1;
  v4 = sub_10037CE14((uint64_t)v3, a2);

  return v4;
}

uint64_t sub_10037D000(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t result;
  double v13;
  _QWORD v14[10];

  v2 = (_QWORD *)(swift_isaMask & *v1);
  v3 = v2[10];
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)v14 - v5;
  v7 = (char *)v1 + v2[12];
  v8 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v8((char *)v14 - v5, v7, v3);
  v9 = v2[11];
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v3, v9);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v8(v6, v7, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 24))(v14, v3, v9);
  result = ((uint64_t (*)(char *, uint64_t))v11)(v6, v3);
  v13 = ceil((double)v10 / (double)v14[9]);
  if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v13 < 9.22337204e18)
    return (uint64_t)v13;
LABEL_7:
  __break(1u);
  return result;
}

void sub_10037D154(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(double *__return_ptr, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  _QWORD v32[10];
  _QWORD v33[10];
  _QWORD v34[10];
  _QWORD v35[10];
  _QWORD v36[10];
  double v37[10];
  _QWORD v38[10];
  _QWORD v39[10];
  _QWORD v40[11];

  v2 = v1;
  v3 = swift_isaMask & *v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(a1).n128_u64[0];
  v8 = (char *)&v32[-1] - v7;
  v9 = objc_msgSend(v1, "contentSize", v6);
  if (v11 == 0.0 && v10 == 0.0)
  {
    v12 = (double)sub_10037D000((uint64_t)v9);
    v13 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v8, v13, v4);
    v15 = *(_QWORD *)(v3 + 88);
    v16 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v15 + 24);
    v16((double *)v32, v4, v15);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v18 = (double)v32[9];
    v14(v8, v13, v4);
    v16((double *)v33, v4, v15);
    v17(v8, v4);
    v19 = *(double *)&v33[1];
    v14(v8, v13, v4);
    v16((double *)v34, v4, v15);
    v17(v8, v4);
    v20 = v19 + *(double *)&v34[3] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v35, v4, v15);
    v17(v8, v4);
    v21 = v20 + *(double *)&v35[4] * v12;
    v14(v8, v13, v4);
    v16((double *)v36, v4, v15);
    v17(v8, v4);
    v22 = v21 + (v12 + -1.0) * *(double *)&v36[6];
    v14(v8, v13, v4);
    v16(v37, v4, v15);
    v17(v8, v4);
    v23 = v37[0];
    v14(v8, v13, v4);
    v16((double *)v38, v4, v15);
    v17(v8, v4);
    v24 = v23 + *(double *)&v38[2] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v39, v4, v15);
    v17(v8, v4);
    v25 = v24 + *(double *)&v39[5] * v18;
    v14(v8, v13, v4);
    v16((double *)v40, v4, v15);
    v17(v8, v4);
    sub_10037D4E8((uint64_t)objc_msgSend(v1, "setContentSize:", v22, v25 + (v18 + -1.0) * *(double *)&v40[7]));
    v26 = (double *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA8));
    if (((_BYTE)v26[2] & 1) == 0)
    {
      objc_msgSend(v2, "setContentOffset:", *v26, v26[1]);
      *v26 = 0.0;
      v26[1] = 0.0;
      *((_BYTE *)v26 + 16) = 1;
      v27 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x88));
      v28 = *v27;
      if (*v27)
      {
        v29 = v27[1];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v28);
        dispatch thunk of ScrollObserver.didScroll(in:)(v2, ObjectType, v29);
        swift_unknownObjectRelease(v28);
      }
    }
  }
}

id sub_10037D4E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void (*v9)(_BYTE *, char *, uint64_t);
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void (*v12)(_BYTE *, uint64_t);
  double v13;
  double Width;
  id result;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  _BYTE v32[24];
  _QWORD v33[10];
  _QWORD v34[9];
  uint64_t v35;
  CGRect v36;

  v2 = v1;
  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = &v32[-v6];
  v8 = (char *)v2 + v3[12];
  v9 = *(void (**)(_BYTE *, char *, uint64_t))(v5 + 16);
  v9(&v32[-v6], v8, v4);
  v10 = v3[11];
  v11 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 24);
  v11(v33, v4, v10);
  v12 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v13 = *(double *)&v33[4] + *(double *)&v33[6];
  objc_msgSend(v2, "frame");
  Width = CGRectGetWidth(v36);
  result = objc_msgSend(v2, "contentInset");
  v17 = ceil((Width - v16) / v13);
  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = (uint64_t)v17;
  v19 = *(uint64_t *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x70));
  if (*((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78)) == 1)
  {
    v20 = __OFADD__(v18, v19);
    v21 = v18 + v19;
    if (!v20)
    {
      if (v21 + 0x4000000000000000 >= 0)
      {
        v22 = 2 * v21;
        v9(v7, v8, v4);
        v11(v34, v4, v10);
        result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
        v23 = v22 * v35;
        if ((unsigned __int128)(v22 * (__int128)v35) >> 64 == (v22 * v35) >> 63)
        {
          v24 = *v2;
          v25 = swift_isaMask;
LABEL_13:
          swift_beginAccess((char *)v2 + *(_QWORD *)((v25 & v24) + 0xB0), v32, 33, 0);
          AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10);
          v29 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
          WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v29);
          v31 = type metadata accessor for ReusePool(0, v29, WitnessTable);
          ReusePool.limit.setter(v23, v31);
          return (id)swift_endAccess(v32);
        }
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v19 + 0x4000000000000000 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v26 = 2 * v19;
  v9(v7, v8, v4);
  v11(v34, v4, v10);
  result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
  v27 = v26 * v35;
  if ((unsigned __int128)(v26 * (__int128)v35) >> 64 != (v26 * v35) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v23 = v18 + v27;
  if (!__OFADD__(v18, v27))
  {
    v24 = *v2;
    v25 = swift_isaMask;
    goto LABEL_13;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_10037D7C8(uint64_t a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(double *__return_ptr, uint64_t, uint64_t);
  double v28;
  double v29;
  double v30;
  double v31;
  double Width;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  double v44[10];
  _QWORD v45[10];
  _QWORD v46[10];
  CGRect v47;
  CGRect v48;

  v3 = v2;
  v43 = a1;
  v5 = swift_isaMask & *v2;
  v6 = *(_QWORD *)(v5 + 0x50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v41 - v11;
  objc_msgSend(v3, "frame");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22(v12, v21, v6);
  v23 = *(_QWORD *)(v5 + 88);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
  v25 = v24(v6, v23);
  v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v12, v6);
  if (v25 >= 1)
  {
    v47.origin.x = v14;
    v47.origin.y = v16;
    v47.size.width = v18;
    v47.size.height = v20;
    if (!CGRectIsEmpty(v47))
    {
      v22(v12, v21, v6);
      v27 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v23 + 24);
      v27(v44, v6, v23);
      v26(v12, v6);
      v28 = v44[4] + v44[6];
      v22(v12, v21, v6);
      v27((double *)v45, v6, v23);
      v26(v12, v6);
      v42 = v45[9];
      v22(v12, v21, v6);
      v27((double *)v46, v6, v23);
      v26(v12, v6);
      v29 = *(double *)&v46[3];
      v30 = 0.0;
      if (a2 >= 0.0)
        v30 = a2;
      v31 = v30 + *(double *)&v46[1];
      v48.origin.x = v14;
      v48.origin.y = v16;
      v48.size.width = v18;
      v48.size.height = v20;
      Width = CGRectGetWidth(v48);
      v33 = floor(v31 / v28);
      if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) != 0)
      {
        if (v33 > -9.22337204e18)
        {
          if (v33 < 9.22337204e18)
          {
            v34 = floor((v31 + Width - v29) / v28);
            if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
            {
              if (v34 > -9.22337204e18)
              {
                if (v34 < 9.22337204e18)
                {
                  v35 = (uint64_t)v33;
                  v36 = (uint64_t)v34;
                  if ((v43 & 1) != 0)
                  {
                    v37 = *(_QWORD *)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x70));
                    v38 = __OFSUB__(v35, v37);
                    v35 -= v37;
                    if (v38)
                    {
LABEL_26:
                      __break(1u);
                      goto LABEL_27;
                    }
                    v38 = __OFADD__(v36, v37);
                    v36 += v37;
                    if (v38)
                    {
LABEL_27:
                      __break(1u);
                      return;
                    }
                  }
                  if ((unsigned __int128)(v35 * (__int128)v42) >> 64 == (v35 * v42) >> 63)
                  {
                    v39 = v21;
                    v40 = v42;
                    v22(v10, v39, v6);
                    v24(v6, v23);
                    v26(v10, v6);
                    if ((unsigned __int128)(v36 * (__int128)v40) >> 64 == (v36 * v40) >> 63)
                      return;
                    goto LABEL_25;
                  }
LABEL_24:
                  __break(1u);
LABEL_25:
                  __break(1u);
                  goto LABEL_26;
                }
LABEL_23:
                __break(1u);
                goto LABEL_24;
              }
LABEL_22:
              __break(1u);
              goto LABEL_23;
            }
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_20;
    }
  }
}

uint64_t sub_10037DB60(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  char *v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  void (*v14)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  _QWORD v20[10];
  _QWORD v21[9];
  uint64_t v22;
  _QWORD v23[9];
  uint64_t v24;
  _QWORD v25[10];
  _QWORD v26[10];
  _QWORD v27[8];
  char v28;
  _QWORD v29[9];
  uint64_t v30;
  _QWORD v31[7];

  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(a1);
  v8 = (char *)&v16 - v7;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v9 = (char *)v1 + v3[12];
  v10 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v10(v8, v9, v4);
  v11 = v3[11];
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v4, v11);
  v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v13(v8, v4);
  if (v12 <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18 = a1;
  v10(v8, v9, v4);
  v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 24);
  v14(v19, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v20, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v21, v4, v11);
  result = v13(v8, v4);
  v15 = v22;
  if (!v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10(v8, v9, v4);
  v14(v23, v4, v11);
  result = v13(v8, v4);
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v18 / v15;
  v17 = v18 % v24;
  if (v18 / v15 >= 1)
  {
    v10(v8, v9, v4);
    v14(v25, v4, v11);
    v13(v8, v4);
  }
  if (v17)
  {
    v10(v8, v9, v4);
    v14(v26, v4, v11);
    v13(v8, v4);
  }
  v10(v8, v9, v4);
  v14(v27, v4, v11);
  result = v13(v8, v4);
  if ((v28 & 1) != 0)
  {
    v10(v8, v9, v4);
    v14(v29, v4, v11);
    result = v13(v8, v4);
    if (v30)
    {
      if ((v18 + 1) % v30)
      {
        v10(v8, v9, v4);
        v14(v31, v4, v11);
        return v13(v8, v4);
      }
      return result;
    }
LABEL_18:
    __break(1u);
  }
  return result;
}

void sub_10037DEC0()
{
  _QWORD *v0;
  _QWORD *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t, id, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t AssociatedTypeWitness;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  _BYTE v69[24];
  char v70[24];
  objc_super v71;
  _QWORD v72[6];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x50);
  v57 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(ObjectType);
  v63 = (char *)&v53 - v4;
  v6 = *(_QWORD *)(v5 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v55 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(AssociatedTypeWitness).n128_u64[0];
  v65 = (char *)&v53 - v8;
  v71.receiver = v1;
  v71.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v71, "layoutSubviews", v7);
  sub_10037D154((uint64_t)v9);
  objc_msgSend(v1, "contentOffset");
  sub_10037D7C8(1, v10);
  v12 = v11;
  v14 = v13;
  v15 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
  swift_beginAccess(v15, v70, 0, 0);
  v16 = *v15;
  v62 = v6;
  v64 = v3;
  v17 = swift_getAssociatedTypeWitness(0, v6);
  v18 = swift_bridgeObjectRetain(v16);
  v59 = v17;
  _NativeDictionary.makeIterator()(v72, v18);
  v19 = v72[0];
  v20 = v72[1];
  v21 = v72[3];
  v22 = v72[4];
  v66 = *(_QWORD *)((swift_isaMask & *v1) + 0xA0);
  v23 = (unint64_t)(v72[2] + 64) >> 6;
  while (1)
  {
    if (v22)
    {
      v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_20;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v26 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v26);
    v28 = v21 + 1;
    if (v27)
      goto LABEL_19;
    v28 = v21 + 2;
    if (v21 + 2 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 3;
    if (v21 + 3 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 4;
    if (v21 + 4 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 5;
    if (v21 + 5 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (!v27)
    {
      v29 = v21 + 6;
      do
      {
        if (v23 == v29)
          goto LABEL_28;
        v27 = *(_QWORD *)(v20 + 8 * v29++);
      }
      while (!v27);
      v28 = v29 - 1;
    }
LABEL_19:
    v22 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v28 << 6);
    v21 = v28;
LABEL_20:
    v30 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v25);
    if (*((_BYTE *)v1 + v66) == 1 || v30 < v12 || v30 >= v14)
      sub_10037E41C(v30);
  }
LABEL_28:
  swift_release(v19);
  v33 = v59;
  if (v12 == v14)
  {
LABEL_29:
    *((_BYTE *)v1 + v66) = 0;
    return;
  }
  if (v14 < v12)
    goto LABEL_45;
  if (v12 < v14)
  {
    v34 = (_QWORD *)(swift_isaMask & *v1);
    v60 = (char *)v1 + v34[12];
    v36 = v34[24];
    v35 = v34[25];
    v61 = (char *)v1 + v36;
    v58 = (char *)v1 + v35;
    v54 = v15;
    v53 = v14;
    while (2)
    {
      swift_beginAccess(v15, v69, 32, 0);
      v38 = *v15;
      v67 = v12;
      Dictionary.subscript.getter(&v68, &v67, v38, &type metadata for Int, v33, &protocol witness table for Int);
      v39 = v68;
      swift_endAccess(v69);

      if (v39)
        goto LABEL_35;
      v40 = sub_10037E76C(v12);
      v41 = v57;
      v42 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      v43 = v63;
      v44 = v64;
      v45 = v60;
      v42(v63, v60, v64);
      v46 = v62;
      v47 = v65;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 40))(v12, v44, v62);
      v48 = *(void (**)(char *, uint64_t))(v41 + 8);
      v48(v43, v44);
      v42(v43, v45, v44);
      (*(void (**)(char *, uint64_t, id, uint64_t, uint64_t))(v46 + 56))(v47, v12, v40, v44, v46);
      v48(v43, v44);
      if ((v61[8] & 1) == 0 && v12 == *(_QWORD *)v61)
      {
        v49 = v63;
        v50 = v64;
        v42(v63, v60, v64);
        v51 = *(void (**)(uint64_t, id, char *, uint64_t))(v62 + 72);
        v52 = 1;
        goto LABEL_43;
      }
      if ((v58[8] & 1) != 0 || v12 != *(_QWORD *)v58)
      {

        v37 = v65;
      }
      else
      {
        v49 = v63;
        v50 = v64;
        v42(v63, v60, v64);
        v51 = *(void (**)(uint64_t, id, char *, uint64_t))(v62 + 72);
        v52 = 2;
LABEL_43:
        v37 = v65;
        v51(v52, v40, v65, v50);

        v48(v49, v50);
      }
      v15 = v54;
      v14 = v53;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v37, AssociatedTypeWitness);
      v33 = v59;
LABEL_35:
      if (v14 == ++v12)
        goto LABEL_29;
      continue;
    }
  }
LABEL_46:
  __break(1u);
}

void sub_10037E41C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t WitnessTable;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  void *v41;

  v2 = v1;
  v4 = (_QWORD *)(swift_isaMask & *v1);
  v5 = v4[10];
  v6 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v35 = AssociatedTypeWitness;
  v36 = v8;
  v9 = __chkstk_darwin(AssociatedTypeWitness);
  v11 = (char *)&v34 - v10;
  v37 = *(_QWORD *)(v5 - 8);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v38 = a1;
  v40 = a1;
  swift_beginAccess((char *)v1 + v4[23], v39, 33, 0);
  v17 = swift_getAssociatedTypeWitness(255, v6);
  v18 = type metadata accessor for Dictionary(0, &type metadata for Int, v17, &protocol witness table for Int);
  Dictionary.removeValue(forKey:)(&v41, &v40, v18);
  swift_endAccess(v39);
  v19 = v41;
  if (v41)
  {
    v20 = swift_isaMask & *v1;
    v21 = (char *)v1 + *(_QWORD *)(v20 + 0xC0);
    if ((v21[8] & 1) == 0 && *(_QWORD *)v21 == v38
      || (v22 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC8), (v22[8] & 1) == 0) && *(_QWORD *)v22 == v38)
    {
      v23 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60);
      v34 = v17;
      v24 = v16;
      v25 = v37;
      v26 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v26(v24, v23, v5);
      v26(v14, v23, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v38, v5, v6);
      v27 = *(void (**)(char *, uint64_t))(v25 + 8);
      v16 = v24;
      v17 = v34;
      v27(v14, v5);
      (*(void (**)(_QWORD, void *, char *, uint64_t, uint64_t))(v6 + 72))(0, v19, v11, v5, v6);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v35);
      v27(v16, v5);
      v20 = swift_isaMask & *v2;
    }
    v41 = v19;
    swift_beginAccess((char *)v2 + *(_QWORD *)(v20 + 176), v39, 33, 0);
    v28 = type metadata accessor for ViewRecycler(255, v17);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v28);
    v30 = type metadata accessor for ReusePool(0, v28, WitnessTable);
    v31 = ReusePool.recycle(_:)(&v41, v30);
    swift_endAccess(v39);
    if ((v31 & 1) != 0)
    {
      v32 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x60);
      v33 = v37;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v16, v32, v5);
      (*(void (**)(void *, uint64_t, uint64_t))(v6 + 64))(v19, v5, v6);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v5);
    }
    else
    {

    }
  }
}

id sub_10037E76C(uint64_t a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  __n128 v14;
  void *v15;
  id v16;
  id v17;
  objc_class *ObjectType;
  id v19;
  _BOOL8 v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;
  id v28;

  v2 = v1;
  v4 = (_QWORD *)(swift_isaMask & *(_QWORD *)v1);
  v5 = v4[10];
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v25 - v7;
  swift_beginAccess(&v1[v4[22]], &v27, 33, 0);
  v9 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9);
  v11 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for ViewRecycler<A>, v11);
  v13 = type metadata accessor for ReusePool(0, v11, WitnessTable);
  ReusePool.dequeue()(&v28, v13);
  v14 = swift_endAccess(&v27);
  v15 = v28;
  if (!v28)
  {
    (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v8, &v2[*(_QWORD *)((swift_isaMask & *(_QWORD *)v2) + 0x60)], v5, v14);
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v5, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(v2, "addSubview:", v15);
  }
  v16 = v15;
  sub_10037DB60(a1);
  objc_msgSend(v16, "setFrame:");

  objc_msgSend(v16, "setAutoresizingMask:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v17 = v16;
  ObjectType = (objc_class *)swift_getObjectType();
  v27.receiver = v2;
  v27.super_class = ObjectType;
  objc_msgSend(v17, "setSemanticContentAttribute:", objc_msgSendSuper2(&v27, "semanticContentAttribute"));

  v19 = v17;
  v20 = objc_msgSend(v19, "effectiveUserInterfaceLayoutDirection") == (id)1;
  v21 = objc_msgSend(v19, "layer");
  objc_msgSend(v21, "setFlipsHorizontalAxis:", v20);

  v28 = v19;
  v26 = a1;
  swift_beginAccess(&v2[*(_QWORD *)((swift_isaMask & *(_QWORD *)v2) + 0xB8)], &v27, 33, 0);
  v22 = type metadata accessor for Dictionary(0, &type metadata for Int, AssociatedTypeWitness, &protocol witness table for Int);
  v23 = v19;
  Dictionary.subscript.setter(&v28, &v26, v22);
  swift_endAccess(&v27);
  return v23;
}

void sub_10037EA34(void *a1)
{
  id v1;

  v1 = a1;
  sub_10037DEC0();

}

int64_t *sub_10037EA68()
{
  void *v0;
  double v1;
  int64_t *v2;
  int64_t v3;

  objc_msgSend(v0, "contentOffset");
  sub_10037D7C8(0, v1);
  return sub_10052EBEC(v2, v3);
}

uint64_t sub_10037EA90()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[24];

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = v2[10];
  v4 = v2[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  v10 = __chkstk_darwin(v6);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v16 = (char *)&v27 - v14;
  v17 = (char *)v1 + v2[24];
  if ((v17[8] & 1) == 0)
  {
    v18 = *(_QWORD *)v17;
    if ((*(_QWORD *)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v28 = v15;
      v29 = result;
      v19 = (char *)v1 + v2[12];
      v27 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v27((char *)&v27 - v14, v19, v3);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      result = v21(v16, v3);
      if (v18 < v20)
      {
        v22 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
        swift_beginAccess(v22, v32, 32, 0);
        v23 = *v22;
        v30 = v18;
        v24 = swift_getAssociatedTypeWitness(0, v4);
        Dictionary.subscript.getter(&v31, &v30, v23, &type metadata for Int, v24, &protocol witness table for Int);
        v25 = v31;
        if (!v31)
          return swift_endAccess(v32);
        swift_endAccess(v32);
        v26 = v27;
        v27(v16, v19, v3);
        v26(v12, v19, v3);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v18, v3, v4);
        v21(v12, v3);
        (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v4 + 72))(1, v25, v8, v3, v4);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
        return v21(v16, v3);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10037ED14()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[24];

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = v2[10];
  v4 = v2[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  v10 = __chkstk_darwin(v6);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v16 = (char *)&v27 - v14;
  v17 = (char *)v1 + v2[25];
  if ((v17[8] & 1) == 0)
  {
    v18 = *(_QWORD *)v17;
    if ((*(_QWORD *)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v28 = v15;
      v29 = result;
      v19 = (char *)v1 + v2[12];
      v27 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v27((char *)&v27 - v14, v19, v3);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      result = v21(v16, v3);
      if (v18 < v20)
      {
        v22 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
        swift_beginAccess(v22, v32, 32, 0);
        v23 = *v22;
        v30 = v18;
        v24 = swift_getAssociatedTypeWitness(0, v4);
        Dictionary.subscript.getter(&v31, &v30, v23, &type metadata for Int, v24, &protocol witness table for Int);
        v25 = v31;
        if (!v31)
          return swift_endAccess(v32);
        swift_endAccess(v32);
        v26 = v27;
        v27(v16, v19, v3);
        v26(v12, v19, v3);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v18, v3, v4);
        v21(v12, v3);
        (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v4 + 72))(2, v25, v8, v3, v4);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
        return v21(v16, v3);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10037EF98(uint64_t a1, char a2)
{
  _QWORD *v2;
  char *v5;

  sub_10037FC74();
  v5 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC8);
  *(_QWORD *)v5 = a1;
  v5[8] = a2 & 1;
  return sub_10037ED14();
}

void sub_10037EFEC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  _QWORD *v18;
  id v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char *v25;
  void *v26;

  v3 = v2;
  v6 = (uint64_t *)(swift_isaMask & *v2);
  v7 = v6[26];
  v8 = *(void **)((char *)v2 + v7);
  if (!v8
    || objc_msgSend(v8, "phase") == (id)3
    || (v9 = *(void **)((char *)v2 + v7)) != 0 && objc_msgSend(v9, "phase") == (id)4)
  {
    swift_bridgeObjectRetain(a1);
    v11 = (void *)sub_10055C0E0(v10);
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(a1).n128_u64[0];
    if (v11)
    {
      objc_msgSend(v11, "locationInView:", v2, v12);
      v14 = v13;
      v16 = v15;
      v17 = objc_msgSend(v2, "hitTest:withEvent:", a2);
      if (v17
        && (sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr),
            v18 = v2,
            v19 = v17,
            v20 = static NSObject.== infix(_:_:)(v19, v18),
            v19,
            v18,
            (v20 & 1) != 0)
        || (v21 = sub_10037FF48(v17, v6[10], v6[11]), (v21 & 1) == 0))
      {
        v22 = 0;
        v24 = 1;
      }
      else
      {
        v22 = sub_10037C24C(v21, v14, v16);
        v24 = v23 & 1;
      }
      sub_10037FA38();
      v25 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0xC0);
      *(_QWORD *)v25 = v22;
      v25[8] = v24;
      sub_10037EA90();

      v26 = *(void **)((char *)v3 + v7);
      *(_QWORD *)((char *)v3 + v7) = v11;

    }
  }
  sub_10037F4AC(v3, a1, a2, (SEL *)&selRef_touchesBegan_withEvent_);
}

double sub_10037F1B0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100069D8C(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10037EFEC);
}

void sub_10037F1BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v37 = a2;
  v4 = a1;
  v5 = (_QWORD *)(swift_isaMask & *(_QWORD *)v2);
  v6 = v5[10];
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v32 - v8;
  v10 = v5[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v10);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v14 = (char *)&v32 - v13;
  v15 = v5[26];
  v16 = *(void **)&v3[v15];
  if (v16)
  {
    v17 = v16;
    v18 = v4;
    v19 = v17;
    v36 = v18;
    if ((sub_100246510(v17, v18) & 1) != 0)
    {
      v20 = *(void **)&v3[v15];
      *(_QWORD *)&v3[v15] = 0;

      v21 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
      if ((v21[8] & 1) != 0 || (v35 = *(_QWORD *)v21, (objc_msgSend(v3, "isDragging") & 1) != 0))
      {
        sub_10037FA38();
        v22 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
        *(_QWORD *)v22 = 0;
        v22[8] = 1;
        sub_10037EA90();
        sub_10037FC74();
        v23 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC8)];
        *(_QWORD *)v23 = 0;
        v23[8] = 1;
        sub_10037ED14();
      }
      else
      {
        sub_10037FA38();
        v24 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
        *(_QWORD *)v24 = 0;
        v24[8] = 1;
        sub_10037EA90();
        sub_10037FC74();
        v25 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC8)];
        *(_QWORD *)v25 = v35;
        v25[8] = 0;
        sub_10037ED14();
        v26 = swift_isaMask & *(_QWORD *)v3;
        v27 = (uint64_t *)&v3[*(_QWORD *)(v26 + 0x68)];
        v34 = (uint64_t (*)(char *, uint64_t))*v27;
        if (v34)
        {
          v33 = v27[1];
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v3[*(_QWORD *)(v26 + 96)], v6);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v35, v6, v10);
          v28 = v33;
          v29 = v34;
          sub_100019320((uint64_t)v34, v33);
          v30 = *(void (**)(char *, uint64_t))(v7 + 8);
          v31 = v28;
          v30(v9, v6);
          LOBYTE(v28) = v29(v14, v35);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
          if ((v28 & 1) != 0)
            sub_10037FED8();

          sub_100019310((uint64_t)v29, v31);
          goto LABEL_7;
        }
      }
    }

LABEL_7:
    v4 = v36;
  }
  sub_10037F4AC(v3, v4, v37, (SEL *)&selRef_touchesEnded_withEvent_);
}

void sub_10037F4AC(_QWORD *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  Class isa;
  uint64_t v9;
  objc_class *v10;
  objc_super v11;

  v7 = swift_isaMask & *a1;
  sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
  sub_10006C2E0();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v10 = (objc_class *)type metadata accessor for HorizontalShelfView(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v9);
  v11.receiver = a1;
  v11.super_class = v10;
  objc_msgSendSuper2(&v11, *a4, isa, a3);

}

double sub_10037F55C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100069D8C(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10037F1BC);
}

void sub_10037F568(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  char *v7;
  char *v8;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + 0xD0);
  v6 = *(void **)((char *)v2 + v5);
  *(_QWORD *)((char *)v2 + v5) = 0;

  sub_10037FA38();
  v7 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC0);
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  sub_10037EA90();
  sub_10037FC74();
  v8 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC8);
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  sub_10037ED14();
  sub_10037F4AC(v2, a1, a2, (SEL *)&selRef_touchesCancelled_withEvent_);
}

double sub_10037F620(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100069D8C(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10037F568);
}

void sub_10037F62C()
{
  sub_100380050();
}

uint64_t type metadata accessor for HorizontalShelfView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011EB8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalShelfView);
}

uint64_t sub_10037F654(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = &unk_1006875E8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_10037F69C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SnapToColumnScrollObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011EB8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapToColumnScrollObserver);
}

uint64_t getEnumTagSinglePayload for HorizontalShelfLayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 64);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalShelfLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalShelfLayout()
{
  return &type metadata for HorizontalShelfLayout;
}

void sub_10037F788(UIScrollView in)
{
  ScrollObserver.didScroll(in:)(in);
}

void sub_10037F790(double a1, double a2, uint64_t a3, double *a4)
{
  sub_10038007C(a4, a1, a2);
}

void sub_10037F798()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  char *v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v2 + 88));
  v4 = type metadata accessor for ViewRecycler(0, AssociatedTypeWitness);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - v5;
  v7 = (_QWORD *)((char *)v1 + *(_QWORD *)(v2 + 104));
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x70)) = 1;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78)) = 0;
  v8 = *(_QWORD *)((swift_isaMask & *v1) + 0x80);
  v9 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)((char *)v1 + v8) = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  v10 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x88));
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90)) = 0;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x98)) = 0;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 0;
  v11 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA8);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  ViewRecycler.init()(AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v4);
  ReusePool.init(recycler:limit:)(v6, 5, v4, WitnessTable);
  v13 = *(_QWORD *)((swift_isaMask & *v1) + 0xB8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, AssociatedTypeWitness, 0, 0);
  v15 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  *(_QWORD *)((char *)v1 + v13) = Dictionary.init(dictionaryLiteral:)(v15, &type metadata for Int, AssociatedTypeWitness, &protocol witness table for Int);
  v16 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC0);
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC8);
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xD0)) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/HorizontalShelfView.swift", 48, 2, 250, 0);
  __break(1u);
}

uint64_t sub_10037FA38()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _BYTE v31[24];

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = v1[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3);
  v5 = __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v26 - v6;
  v8 = *(_QWORD *)(v2 - 8);
  v9 = __chkstk_darwin(v5);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v15 = (char *)&v26 - v14;
  v16 = (char *)v0 + v1[24];
  if ((v16[8] & 1) == 0)
  {
    v27 = v13;
    v17 = *(_QWORD *)v16;
    v18 = (_QWORD *)((char *)v0 + v1[23]);
    swift_beginAccess(v18, v31, 32, 0);
    v19 = *v18;
    v28 = v17;
    v29 = v17;
    v20 = swift_getAssociatedTypeWitness(0, v3);
    Dictionary.subscript.getter(&v30, &v29, v19, &type metadata for Int, v20, &protocol witness table for Int);
    v21 = v30;
    if (v30)
    {
      swift_endAccess(v31);
      v22 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60);
      v23 = AssociatedTypeWitness;
      v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v24(v15, v22, v2);
      v24(v11, v22, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v28, v2, v3);
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v11, v2);
      (*(void (**)(_QWORD, void *, char *, uint64_t, uint64_t))(v3 + 72))(0, v21, v7, v2, v3);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v23);
      return ((uint64_t (*)(char *, uint64_t))v25)(v15, v2);
    }
    else
    {
      return swift_endAccess(v31);
    }
  }
  return result;
}

uint64_t sub_10037FC74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char v24;
  _BOOL8 v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _BYTE v34[24];

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = v1[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3);
  v5 = __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v29 - v6;
  v8 = *(_QWORD *)(v2 - 8);
  v9 = __chkstk_darwin(v5);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v15 = (char *)&v29 - v14;
  v16 = (char *)v0 + v1[25];
  if ((v16[8] & 1) == 0)
  {
    v30 = v13;
    v17 = *(_QWORD *)v16;
    v18 = (_QWORD *)((char *)v0 + v1[23]);
    swift_beginAccess(v18, v34, 32, 0);
    v19 = *v18;
    v31 = v17;
    v32 = v17;
    v20 = swift_getAssociatedTypeWitness(0, v3);
    Dictionary.subscript.getter(&v33, &v32, v19, &type metadata for Int, v20, &protocol witness table for Int);
    v21 = v33;
    if (v33)
    {
      swift_endAccess(v34);
      v22 = swift_isaMask & *v0;
      v23 = (char *)v0 + *(_QWORD *)(v22 + 0xC0);
      v24 = v23[8];
      v29 = AssociatedTypeWitness;
      v25 = (v24 & 1) == 0 && v31 == *(_QWORD *)v23;
      v26 = (char *)v0 + *(_QWORD *)(v22 + 96);
      v27 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v27(v15, v26, v2);
      v27(v11, v26, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v31, v2, v3);
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v11, v2);
      (*(void (**)(_BOOL8, void *, char *, uint64_t, uint64_t))(v3 + 72))(v25, v21, v7, v2, v3);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
      return ((uint64_t (*)(char *, uint64_t))v28)(v15, v2);
    }
    else
    {
      return swift_endAccess(v34);
    }
  }
  return result;
}

uint64_t sub_10037FED8()
{
  _QWORD *v0;
  char *v1;
  char *v2;

  sub_10037FA38();
  v1 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xC0);
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  sub_10037EA90();
  sub_10037FC74();
  v2 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xC8);
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  return sub_10037ED14();
}

unint64_t sub_10037FF48(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (!a1)
    return 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  v7 = a1;
  while (1)
  {
    v9 = swift_dynamicCastUnknownClass(v7, AssociatedTypeWitness);
    v8 = v9 != 0;
    if (v9)
      break;
    v11 = type metadata accessor for HorizontalShelfView(0, a2, a3, v10);
    if (swift_dynamicCastClass(v7, v11))
      break;
    v12 = objc_opt_self(UIControl);
    v13 = (void *)swift_dynamicCastObjCClass(v7, v12);
    if (v13)
    {
      if ((objc_msgSend(v13, "isTracking") & 1) != 0)
        break;
    }
    v8 = (unint64_t)objc_msgSend(v7, "superview");

    v7 = (id)v8;
    if (!v8)
      return v8;
  }

  return v8;
}

void sub_100380050()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.HorizontalShelfView", 42, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_10038007C(double *a1, double a2, double a3)
{
  uint64_t *v3;
  double *v4;
  uint64_t *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *Strong;
  int64_t *v15;
  int64_t v16;
  long double v17;
  void *v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double Width;
  double v28;
  void *v29;
  double v30;
  double v31;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  _QWORD v37[4];
  double v38;
  double v39;
  CGRect v40;

  v4 = (double *)v3;
  v8 = v3 + 2;
  v9 = *(double *)v3;
  v10 = *(_QWORD *)(*v3 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(a1);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + 2);
  v15 = sub_10037EA68();

  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    v17 = *a1;
    v18 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
    objc_msgSend(v18, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v40.origin.x = v20;
    v40.origin.y = v22;
    v40.size.width = v24;
    v40.size.height = v26;
    Width = CGRectGetWidth(v40);
    if (v17 > 0.0)
    {
      v28 = Width;
      v29 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
      objc_msgSend(v29, "contentSize");
      v31 = v30;

      if (v17 < v31 - v28)
      {
        v32 = (char *)swift_unknownObjectUnownedLoadStrong(v8);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &v32[*(_QWORD *)((swift_isaMask & *(_QWORD *)v32) + 0x60)], v10);
        (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)&v9 + 88) + 24))(v37, v10);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        v33 = v38 + v39;
        v34 = a2;
        if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
          v34 = v4[3];
        v35 = fmod(v17, v38 + v39);
        if (v34 >= 0.0)
          v36 = v33 - v35 + *a1;
        else
          v36 = *a1 - v35;
        *a1 = v36;
        v4[3] = a2;
        v4[4] = a3;
      }
    }
  }
}

ValueMetadata *type metadata accessor for ExternalUrlActionImplementation()
{
  return &type metadata for ExternalUrlActionImplementation;
}

unint64_t sub_100380294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080A6F8;
  if (!qword_10080A6F8)
  {
    v1 = type metadata accessor for ExternalUrlAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080A6F8);
  }
  return result;
}

id sub_1003802DC()
{
  return sub_1003802E4();
}

id sub_1003802E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  id result;
  void *v11;
  NSURL *v12;
  void *v13;
  void *v14;
  NSURL *v15;
  void *v16;
  uint64_t v17;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ExternalUrlAction.isSensitive.getter(v8);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  v11 = result;
  if ((v9 & 1) != 0)
  {
    if (result)
    {
      ExternalUrlAction.url.getter();
      URL._bridgeToObjectiveC()(v12);
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v11, "openSensitiveURL:withOptions:", v14, 0);
LABEL_6:

      sub_10000DF3C(&qword_100803510);
      (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
      return (id)Promise.__allocating_init(value:)(v3);
    }
    __break(1u);
  }
  else if (result)
  {
    ExternalUrlAction.url.getter();
    URL._bridgeToObjectiveC()(v15);
    v14 = v16;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v11, "openURL:configuration:completionHandler:", v14, 0, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

__n128 sub_100380490()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-8.0 }
  xmmword_100854120 = (__int128)result;
  *(__n128 *)&qword_100854130 = result;
  return result;
}

__n128 sub_1003804A4()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-5.0 }
  xmmword_100854140 = (__int128)result;
  *(__n128 *)&qword_100854150 = result;
  return result;
}

uint64_t type metadata accessor for SearchAdItemSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension33SearchAdItemSupplementaryProvider);
}

uint64_t getEnumTagSinglePayload for NavigationAccessory.Location(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdPage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1003805B4 + 4 * byte_100687745[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003805E8 + 4 * byte_100687740[v4]))();
}

uint64_t sub_1003805E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003805F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003805F8);
  return result;
}

uint64_t sub_100380604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10038060CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100380610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100380618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdPage()
{
  return &type metadata for AdPage;
}

unint64_t sub_100380638()
{
  unint64_t result;

  result = qword_10080A7B8;
  if (!qword_10080A7B8)
  {
    result = swift_getWitnessTable(&unk_1006877EC, &type metadata for AdPage);
    atomic_store(result, (unint64_t *)&qword_10080A7B8);
  }
  return result;
}

double sub_100380680@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  v6 = type metadata accessor for AdBackgroundView();
  if ((static UICollectionReusableView.matchesItemElementKind(_:)(a1, a2) & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain(a2);
    v8 = static UICollectionReusableView.defaultReuseIdentifier.getter(v7);
    v10 = v9;
    *(_QWORD *)(a3 + 24) = sub_10000DF3C(&qword_10080A7C0);
    *(_QWORD *)(a3 + 32) = sub_10038073C();
    sub_1000117C0((_QWORD *)a3);
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(a1, a2, v8, v10, static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:), 0, v6);
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_10038073C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080A7C8;
  if (!qword_10080A7C8)
  {
    v1 = sub_100010EF8(&qword_10080A7C0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10080A7C8);
  }
  return result;
}

double sub_100380788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100687848);
  ItemLayoutContext.subscript.getter(v3);
  v5 = swift_release(KeyPath);
  v6 = PageGrid.columnCount.getter(v5);
  v7 = ((double (*)(void))PageGrid.interRowSpace.getter)();
  if (v6 <= 1.0)
  {
    v9 = PageGrid.horizontalMargins.getter();
    PageGrid.interRowSpace.getter(v9);
    PageGrid.horizontalMargins.getter();
  }
  else
  {
    PageGrid.interColumnSpace.getter();
    PageGrid.interRowSpace.getter(v8);
    PageGrid.interColumnSpace.getter();
  }
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  return v7 * -0.5;
}

unint64_t sub_1003808B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(char *, uint64_t);
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  id v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  __int128 *v33;
  char *v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v2 = v1;
  v4 = sub_10000DF3C(&qword_1007F9668);
  __chkstk_darwin(v4);
  v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ItemBackground(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v47 - v12;
  v50 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = sub_10000DF3C(&qword_1007F9680);
  ItemLayoutContext.typedModel<A>(as:)(v47, v14, v14);
  v15 = v48;
  if (v48)
  {
    v16 = v49;
    sub_100011064(v47, v48);
    dispatch thunk of ItemBackgroundProviding.itemBackground.getter(v15, v16);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
      v17 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
      v18 = *(void (**)(char *, uint64_t))(v8 + 8);
      if (v17 != enum case for ItemBackground.ad(_:))
      {
        v18(v13, v7);
        v34 = v10;
LABEL_21:
        v18(v34, v7);
        return v50;
      }
      v18(v10, v7);
      v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:", 3);
      v20 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v21 = objc_msgSend(v20, "fractionalWidthDimension:", 1.0);
      v22 = objc_msgSend(v20, "fractionalHeightDimension:", 1.0);
      v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v21, v22);

      type metadata accessor for AdBackgroundView();
      v24 = v23;
      static UICollectionReusableView.makeItemScopedElementKind(in:uniquify:)(a1, 1);
      v26 = v25;
      v27 = v19;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v26);
      v29 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v24, v28, v27);

      v30 = *(unsigned __int8 *)(v2 + 16);
      if (v30 >= 2)
      {
        if (v30 == 2)
        {
          v35 = v29;
          v36 = sub_100380788();
LABEL_18:
          objc_msgSend(v29, "setContentInsets:", v36, v37, v38, v39);

          objc_msgSend(v29, "setZIndex:", -1);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
          v44 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v43 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v44 >= v43 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
          v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v29);
          specialized Array._endMutation()(v45);
          v34 = v13;
          goto LABEL_21;
        }
        v40 = qword_1007F1DC8;
        v41 = v29;
        if (v40 != -1)
          swift_once(&qword_1007F1DC8, sub_1003804A4);
        v33 = &xmmword_100854140;
      }
      else
      {
        v31 = qword_1007F1DC0;
        v32 = v29;
        if (v31 != -1)
          swift_once(&qword_1007F1DC0, sub_100380490);
        v33 = &xmmword_100854120;
      }
      v36 = *(double *)v33;
      v37 = *((double *)v33 + 1);
      v38 = *((double *)v33 + 2);
      v39 = *((double *)v33 + 3);
      goto LABEL_18;
    }
  }
  else
  {
    sub_100011088((uint64_t)v47, &qword_1007F9678);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_100011088((uint64_t)v6, &qword_1007F9668);
  return v50;
}

uint64_t sub_100380CF8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v9[5];

  v1 = type metadata accessor for Separator.Position(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Separator(0);
  sub_100045464(v5, qword_100854160);
  sub_1000117A8(v5, (uint64_t)qword_100854160);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Separator.Position.bottom(_:), v1);
  v9[3] = type metadata accessor for ZeroDimension(0);
  v9[4] = &protocol witness table for ZeroDimension;
  v6 = sub_1000117C0(v9);
  static ZeroDimension.zero.getter(v6);
  return Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v4, v9, 0.0, 0.0);
}

void sub_100380DE4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  void **v10;
  id v11;
  id v12;
  char *v13;
  char v14;
  void *v15;
  id v16;
  void *v17;
  char *v18;
  void *v19;
  id v20;
  char v21;
  id v22;
  id v23;
  _BYTE v25[24];

  v1 = v0;
  v2 = type metadata accessor for Separator(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_hasSeparator] & 1) == 0)
  {
    v10 = (void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView];
    v11 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView];
LABEL_10:
    if (!v11)
    {
      v7 = 0;
      goto LABEL_14;
    }
    v16 = v11;
    v7 = 0;
    v15 = v11;
LABEL_12:
    objc_msgSend(v15, "removeFromSuperview");
    goto LABEL_14;
  }
  if (qword_1007F1DD0 != -1)
    swift_once(&qword_1007F1DD0, sub_100380CF8);
  v6 = sub_1000117A8(v2, (uint64_t)qword_100854160);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = &v7[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
  v9 = swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v25, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v3 + 40))(v8, v5, v2, v9);
  swift_endAccess(v25);
  v10 = (void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView];
  v11 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView];
  if (!v7)
    goto LABEL_10;
  if (v11)
  {
    v12 = v11;
    v13 = v7;
    v14 = static NSObject.== infix(_:_:)(v13, v12);

    if ((v14 & 1) == 0)
    {
      v15 = *v10;
      if (*v10)
        goto LABEL_12;
    }
  }
LABEL_14:
  v17 = *v10;
  *v10 = v7;
  v18 = v7;

  v19 = *v10;
  if (v11)
  {
    if (!v19)
      goto LABEL_22;
    type metadata accessor for SeparatorView(0);
    v11 = v11;
    v20 = v19;
    v21 = static NSObject.== infix(_:_:)(v11, v20);

    if ((v21 & 1) != 0)
      goto LABEL_22;
    v19 = *v10;
    if (!*v10)
      goto LABEL_22;
    goto LABEL_21;
  }
  if (v19)
  {
    v11 = 0;
LABEL_21:
    v22 = v19;
    v23 = objc_msgSend(v1, "contentView");
    objc_msgSend(v23, "addSubview:", v22);

    v11 = v22;
    v18 = (char *)v23;
LABEL_22:

  }
}

uint64_t sub_100381064()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100856150);
  qword_100854190 = v0;
  unk_100854198 = &protocol witness table for StaticDimension;
  v2 = sub_1000117C0(qword_100854178);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

char *sub_1003810E8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  objc_super v48;

  v5 = v4;
  v10 = type metadata accessor for DirectionalTextAlignment(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView;
  sub_1000117FC();
  v18 = v4;
  v19 = (void *)static UIColor.tableViewCellBackground.getter();
  v20 = objc_allocWithZone((Class)type metadata accessor for ExpandableTextView());
  *(_QWORD *)&v5[v17] = sub_10020C48C(v19, 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata;
  if (qword_1007F22C8 != -1)
    swift_once(&qword_1007F22C8, sub_100413D94);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100854D40);
  v24 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v16, v23, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DirectionalTextAlignment.none(_:), v10);
  v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v18[v21] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v16, 2, 0, 1, 0, v13, 0, 0);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView;
  *(_QWORD *)&v18[v26] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_hasSeparator] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView] = 0;
  v27 = &v18[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate];
  v28 = type metadata accessor for Artwork.URLTemplate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);

  v29 = (objc_class *)type metadata accessor for UpdatesLockupCollectionViewCell(0);
  v48.receiver = v18;
  v48.super_class = v29;
  v30 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  v31 = objc_msgSend(v30, "contentView");
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v32 = objc_msgSend(v30, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView]);

  v33 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView;
  v34 = *(char **)&v30[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView];
  v35 = OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_collapsedNumberOfLines;
  v36 = *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_collapsedNumberOfLines];
  *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_collapsedNumberOfLines] = 2;
  v37 = OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_isCollapsed;
  if (v34[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_isCollapsed] == 1)
  {
    v38 = *(void **)&v34[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_textLabel];
    v39 = v34;
    objc_msgSend(v38, "setNumberOfLines:", 2);
    if (*(_QWORD *)&v34[v35] == v36)
      goto LABEL_9;
  }
  else
  {
    v40 = v34;
    if (v36 == 2)
      goto LABEL_9;
  }
  if ((v34[v37] & 1) != 0)
    sub_10020D2E0();
LABEL_9:

  v41 = objc_msgSend(v30, "contentView");
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v30[v33]);

  v42 = objc_msgSend(v30, "contentView");
  v43 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata;
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata]);

  v44 = *(id *)&v30[v43];
  v45 = (void *)static UIColor.secondaryText.getter(v44);
  objc_msgSend(v44, "setTextColor:", v45);

  v46 = (void *)static UIColor.tableViewCellBackground.getter();
  objc_msgSend(v30, "setBackgroundColor:", v46);

  return v30;
}

void sub_100381638()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(v0, "contentView");
  v2 = objc_msgSend(v0, "backgroundColor");
  objc_msgSend(v1, "setBackgroundColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView];
  v4 = objc_msgSend(v0, "backgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView];
  v6 = objc_msgSend(v0, "backgroundColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata];
  v8 = objc_msgSend(v0, "backgroundColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

}

uint64_t sub_100381764()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double MinX;
  double MinY;
  double Width;
  double Height;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  void (*v21)(char *, uint64_t);
  double v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double MaxY;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  CGFloat v44;
  id v45;
  double v46;
  void *v47;
  char *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  char *v53;
  __n128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char v72[24];
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  objc_super v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;

  v1 = v0;
  v69 = type metadata accessor for Separator(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for UpdatesLockupCollectionViewCell(0);
  v76.receiver = v0;
  v76.super_class = v7;
  objc_msgSendSuper2(&v76, "layoutSubviews");
  v8 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView];
  LayoutMarginsAware<>.layoutFrame.getter(v7);
  objc_msgSend(v8, "sizeThatFits:", v9, v10);
  v12 = v11;
  v77.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  MinX = CGRectGetMinX(v77);
  v78.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  MinY = CGRectGetMinY(v78);
  v79.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  Width = CGRectGetWidth(v79);
  objc_msgSend(v8, "setFrame:", MinX, MinY, Width, v12);
  if (qword_1007F1DD8 != -1)
    swift_once(&qword_1007F1DD8, sub_100381064);
  sub_100011020((uint64_t)qword_100854178, (uint64_t)v73);
  v80.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  Height = CGRectGetHeight(v80);
  v81.origin.x = MinX;
  v81.origin.y = MinY;
  v81.size.width = Width;
  v81.size.height = v12;
  v17 = CGRectGetHeight(v81);
  v18 = v74;
  v19 = v75;
  sub_100011064(v73, v74);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v18);
  v20 = AnyDimension.value(in:rounded:)(v1, v6, v18, v19);
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v6, v3);
  v22 = Height - (v17 + v20);
  v23 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata];
  LayoutMarginsAware<>.layoutFrame.getter(v7);
  v71 = v23;
  objc_msgSend(v23, "sizeThatFits:", v24, v25);
  v27 = v26;
  v28 = *(_BYTE **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView];
  v70 = OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_isCollapsed;
  if ((v28[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_isCollapsed] & 1) == 0)
  {
    v29 = v74;
    v30 = v75;
    sub_100011064(v73, v74);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v29);
    v31 = AnyDimension.value(in:rounded:)(v1, v6, v29, v30);
    v21(v6, v3);
    v22 = v22 - (v27 + v31);
  }
  v82.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  objc_msgSend(v28, "measurementsWithFitting:in:", v1, CGRectGetWidth(v82), v22);
  v33 = v32;
  v83.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  v34 = CGRectGetMinX(v83);
  v84.origin.x = MinX;
  v84.origin.y = MinY;
  v84.size.width = Width;
  v84.size.height = v12;
  MaxY = CGRectGetMaxY(v84);
  v36 = v74;
  v37 = v75;
  sub_100011064(v73, v74);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v36);
  v38 = AnyDimension.value(in:rounded:)(v1, v6, v36, v37);
  v21(v6, v3);
  v85.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  objc_msgSend(v28, "setFrame:", v34, MaxY + v38, CGRectGetWidth(v85), v33);
  objc_msgSend(v28, "frame");
  v39 = CGRectGetMinX(v86);
  objc_msgSend(v28, "frame");
  v40 = CGRectGetMaxY(v87);
  v41 = v74;
  v42 = v75;
  sub_100011064(v73, v74);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v41);
  v43 = AnyDimension.value(in:rounded:)(v1, v6, v41, v42);
  v21(v6, v3);
  v88.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
  v44 = CGRectGetWidth(v88);
  v45 = v71;
  objc_msgSend(v71, "setFrame:", v39, v40 + v43, v44, v27);
  v46 = 1.0;
  if (v28[v70])
    v46 = 0.0;
  objc_msgSend(v45, "setAlpha:", v46);
  v47 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView];
  if (v47)
  {
    v48 = v47;
    v89.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
    v49 = CGRectGetMinX(v89);
    objc_msgSend(v1, "bounds");
    v50 = CGRectGetMinY(v90);
    v91.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v7);
    v51 = CGRectGetWidth(v91);
    objc_msgSend(v1, "bounds");
    v52 = CGRectGetHeight(v92);
    v53 = &v48[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
    v54 = swift_beginAccess(&v48[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v72, 0, 0);
    v55 = v68;
    v56 = v67;
    v57 = v53;
    v58 = v69;
    (*(void (**)(char *, char *, uint64_t, __n128))(v68 + 16))(v67, v57, v69, v54);
    v59 = Separator.frame(forBoundingRect:in:)(v48, v49, v50, v51, v52);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v58);
    objc_msgSend(v48, "setFrame:", v59, v61, v63, v65);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v73);
}

id sub_100381D48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  objc_class *v5;
  id v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v13[24];
  objc_super v14;
  UIImage_optional v15;

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F8EC0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for UpdatesLockupCollectionViewCell(0);
  v14.receiver = v0;
  v14.super_class = v5;
  objc_msgSendSuper2(&v14, "prepareForReuse");
  v6 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView]
                         + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
  v15.value.super.isa = 0;
  v15.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v15, v7);

  v8 = type metadata accessor for Artwork.URLTemplate(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate], v13, 33, 0);
  sub_1003829E0((uint64_t)v4, v9);
  swift_endAccess(v13);
  v10 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView];
  sub_10020CA18(0, 0);
  objc_msgSend(v10, "setNeedsLayout");
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata], "setText:", 0);
}

double sub_100381ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  _QWORD v47[5];

  v3 = v2;
  v6 = sub_10000DF3C(&qword_1007F8EC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v47[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.Style(0, v9);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v47[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)&result = __chkstk_darwin(v14).n128_u64[0];
  v18 = (char *)&v47[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v46 = a2;
    v19 = swift_retain(a1);
    v20 = Artwork.crop.getter(v19);
    v21 = Artwork.Crop.preferredContentMode.getter(v20);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (qword_1007F14D8 != -1)
      swift_once(&qword_1007F14D8, sub_100190FCC);
    v22 = type metadata accessor for SmallLockupLayout.Metrics(0);
    v23 = sub_1000117A8(v22, (uint64_t)qword_100852280);
    v24 = SmallLockupLayout.Metrics.artworkSize.getter(v23);
    v26 = Artwork.config(_:mode:prefersLayeredImage:)(v21, 0, v24, v25);
    v27 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView);
    v28 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
    v29 = *(id *)(v27 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    Artwork.style.getter(v29);
    v30 = ArtworkView.style.setter(v13);
    *(_QWORD *)&v31 = Artwork.contentMode.getter(v30).n128_u64[0];
    v33 = ArtworkLoaderConfig.size.getter(objc_msgSend(v29, "setContentMode:", v32, v31));
    v35 = ArtworkView.imageSize.setter(v33, v34);
    v36 = Artwork.backgroundColor.getter(v35);
    if (!v36)
    {
      v37 = sub_1000117FC();
      v36 = static UIColor.placeholderBackground.getter(v37);
    }
    ArtworkView.backgroundColor.setter(v36);

    objc_msgSend(*(id *)(v27 + v28), "setContentMode:", v21);
    Artwork.template.getter(v38);
    v39 = type metadata accessor for Artwork.URLTemplate(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 0, 1, v39);
    v40 = v3 + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate;
    swift_beginAccess(v3 + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate, v47, 33, 0);
    sub_1003829E0((uint64_t)v8, v40);
    swift_endAccess(v47);
    type metadata accessor for ArtworkLoader(0);
    v41 = *(void **)(v27 + v28);
    v42 = type metadata accessor for ArtworkView(0);
    v43 = v41;
    static ArtworkLoader.handlerKey<A>(for:)(v47, v43, v42);

    v44 = swift_allocObject(&unk_10073AF48, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16);
    v45 = swift_retain(v44);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v26, 2, 1, v47, sub_100382A4C, v44, v45);
    swift_release(a1);
    swift_release(v26);
    swift_release(v44);
    sub_100011088((uint64_t)v47, (uint64_t *)&unk_1007F9850);
    *(_QWORD *)&result = swift_release(v44).n128_u64[0];
  }
  return result;
}

void sub_1003821FC(objc_class *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  uint64_t Strong;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  id v34;
  Swift::Bool v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  objc_class *v41;
  char v42[24];
  char v43[24];
  _BYTE v44[24];
  char v45[24];
  char v46[24];
  UIImage_optional v47;

  v40 = a2;
  v41 = a1;
  v7 = sub_10000DF3C(&qword_1007F8EC0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - v14;
  v16 = type metadata accessor for Artwork.URLTemplate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v39 - v21;
  v23 = a5 + 16;
  sub_100148E0C(a3, (uint64_t)v15);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v24(v15, 1, v16) == 1)
  {
    v12 = v15;
  }
  else
  {
    v39 = v9;
    v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v25(v22, v15, v16);
    swift_beginAccess(v23, v43, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v23);
    if (Strong)
    {
      v27 = (void *)Strong;
      v28 = Strong + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate;
      swift_beginAccess(Strong + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate, v42, 0, 0);
      sub_100148E0C(v28, (uint64_t)v12);

      if (v24(v12, 1, v16) != 1)
      {
        v25(v19, v12, v16);
        v29 = sub_10000E99C(&qword_1007F8EC8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.URLTemplate, (uint64_t)&protocol conformance descriptor for Artwork.URLTemplate);
        v30 = dispatch thunk of static Equatable.== infix(_:_:)(v22, v19, v16, v29);
        v31 = *(void (**)(char *, uint64_t))(v17 + 8);
        v31(v19, v16);
        v31(v22, v16);
        v9 = v39;
        if ((v30 & 1) == 0)
          return;
        goto LABEL_10;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v12, 1, 1, v16);
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    v9 = v39;
  }
  sub_100011088((uint64_t)v12, &qword_1007F8EC0);
LABEL_10:
  swift_beginAccess(v23, v46, 0, 0);
  v32 = swift_unknownObjectWeakLoadStrong(v23);
  if (v32)
  {
    v33 = (void *)v32;
    v34 = objc_retain(*(id *)(*(_QWORD *)(v32
                                        + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));

    v47.is_nil = (v40 & 1) == 0;
    v47.value.super.isa = v41;
    ArtworkView.show(image:isAnimationPermitted:)(v47, v35);

  }
  swift_beginAccess(v23, v45, 0, 0);
  v36 = swift_unknownObjectWeakLoadStrong(v23);
  if (v36)
  {
    v37 = (char *)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
    v38 = (uint64_t)&v37[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate];
    swift_beginAccess(&v37[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate], v44, 33, 0);
    sub_1003829E0((uint64_t)v9, v38);
    swift_endAccess(v44);

  }
}

double sub_100382550(double a1, double a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char v7;
  int v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView];
  v6 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_textLabel), "attributedText");
  v7 = *(_BYTE *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_isCollapsed);
  v8 = v2[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_hasSeparator];
  v9 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata], "text");
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  objc_msgSend(v2, "layoutMargins");
  v18 = sub_100382A58(v6, v7, v8, v11, v13, 2, v2, v14, v15, v16, v17, a1, a2);

  swift_bridgeObjectRelease(v13);
  return v18;
}

id sub_1003826F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UpdatesLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10038279C()
{
  return type metadata accessor for UpdatesLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for UpdatesLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A820;
  if (!qword_10080A820)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpdatesLockupCollectionViewCell);
  return result;
}

void sub_1003827E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_1006878C0;
  v4[4] = &unk_1006878D8;
  sub_100382874(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_100382874(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080A830)
  {
    v2 = type metadata accessor for Artwork.URLTemplate(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080A830);
  }
}

id sub_1003828C8()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView)
                           + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
}

double sub_1003828E8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v0 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100852280);
  return SmallLockupLayout.Metrics.artworkSize.getter(v1);
}

id sub_100382944()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView));
}

void sub_100382958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("Q6\v", a3);
  sub_1001202F8(a1, a2, a3, WitnessTable);
}

uint64_t sub_1003829A4(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E99C(&qword_10080A838, type metadata accessor for UpdatesLockupCollectionViewCell, (uint64_t)&unk_1006878F0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003829E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F8EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100382A28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100382A4C(objc_class *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1003821FC(a1, a2, a3, a4, v4);
}

double sub_100382A58(void *a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, double a8, double a9, double a10, double a11, double a12, double a13)
{
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  void (*v36)(char *, uint64_t);
  double v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  _QWORD v66[5];

  v65 = a5;
  v61 = a4;
  v64 = a3;
  v23 = type metadata accessor for FontUseCase(0);
  v62 = *(_QWORD *)(v23 - 8);
  v63 = v23;
  __chkstk_darwin(v23);
  v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for FloatingPointRoundingRule(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10020E028(a1, a2, a6, a7, a8, a9, a10, a11, a12, a13);
  v32 = v31;
  if (qword_1007F1DD8 != -1)
    swift_once(&qword_1007F1DD8, sub_100381064);
  v33 = qword_100854190;
  v34 = unk_100854198;
  sub_100011064(qword_100854178, qword_100854190);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v33);
  v35 = AnyDimension.value(in:rounded:)(a7, v29, v33, v34);
  v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v29, v26);
  v37 = v32 + v35;
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v38 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v39 = sub_1000117A8(v38, (uint64_t)qword_100852280);
  v40 = objc_msgSend(a7, "traitCollection");
  sub_1001934E0(v39, (uint64_t)v40, 0.0, 0.0);
  v42 = v41;

  v43 = v37 + v42;
  if (v65 && (a2 & 1) == 0)
  {
    v44 = a12 - a9 - a11;
    v45 = qword_100854190;
    v46 = unk_100854198;
    sub_100011064(qword_100854178, qword_100854190);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v45);
    v47 = AnyDimension.value(in:rounded:)(a7, v29, v45, v46);
    v36(v29, v26);
    v48 = v43 + v47;
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v49 = v63;
    v50 = sub_1000117A8(v63, (uint64_t)qword_100854D40);
    v51 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v25, v50, v49);
    v52 = type metadata accessor for Feature(0);
    v66[3] = v52;
    v66[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v53 = sub_1000117C0(v66);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v53, enum case for Feature.measurement_with_labelplaceholder(_:), v52);
    LOBYTE(v52) = isFeatureEnabled(_:)(v66);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
    v54 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v61, v65, v25, 4, 0, 0, 2, 0, v44, 1.79769313e308, a7, v52 & 1);
    v56 = v55;
    (*(void (**)(char *, uint64_t, double))(v51 + 8))(v25, v49, v54);
    v43 = v48 + v56;
  }
  if ((v64 & 1) != 0)
  {
    if (qword_1007F1DD0 != -1)
      swift_once(&qword_1007F1DD0, sub_100380CF8);
    v57 = type metadata accessor for Separator(0);
    v58 = sub_1000117A8(v57, (uint64_t)qword_100854160);
    v59.n128_f64[0] = v43;
    return CGSize.adding(separator:in:)(v58, a7, v30, v59);
  }
  return v30;
}

void sub_100382E88()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_expandableTextView;
  sub_1000117FC();
  v10 = (void *)static UIColor.tableViewCellBackground.getter();
  v11 = objc_allocWithZone((Class)type metadata accessor for ExpandableTextView());
  *(_QWORD *)&v1[v9] = sub_10020C48C(v10, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_versionMetadata;
  if (qword_1007F22C8 != -1)
    swift_once(&qword_1007F22C8, sub_100413D94);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_1000117A8(v13, (uint64_t)qword_100854D40);
  v15 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, v14, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v16 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v12] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 2, 0, 1, 0, v5, 0, 0);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_lockupView;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_hasSeparator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_separatorView] = 0;
  v18 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31UpdatesLockupCollectionViewCell_fetchingArtworkTemplate];
  v19 = type metadata accessor for Artwork.URLTemplate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/UpdatesLockupCollectionViewCell.swift", 60, 2, 78, 0);
  __break(1u);
}

void *sub_1003830FC(void *result, double a2)
{
  uint64_t v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  __n128 v9;

  if (*(double *)(v2 + 32) != a2)
  {
    v3 = result;
    *(double *)(v2 + 32) = a2;
    objc_msgSend(result, "_systemContentInset");
    v5 = v4;
    objc_msgSend(v3, "contentOffset");
    v7 = v6;
    v8 = objc_msgSend(v3, "contentInset");
    v9.n128_f64[0] = fmin((v5 + v7 + v9.n128_f64[0] - *(double *)(v2 + 32)) / *(double *)(v2 + 40), 1.0);
    if (v9.n128_f64[0] < 0.0)
      v9.n128_f64[0] = 0.0;
    return (void *)(*(uint64_t (**)(id, __n128))(v2 + 16))(v8, v9);
  }
  return result;
}

uint64_t sub_100383194(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  __n128 v8;

  objc_msgSend(a1, "_systemContentInset");
  v4 = v3;
  objc_msgSend(a1, "contentOffset");
  v6 = v5;
  v7 = objc_msgSend(a1, "contentInset");
  v8.n128_f64[0] = fmin((v4 + v6 + v8.n128_f64[0] - *(double *)(v1 + 32)) / *(double *)(v1 + 40), 1.0);
  if (v8.n128_f64[0] < 0.0)
    v8.n128_f64[0] = 0.0;
  return (*(uint64_t (**)(id, __n128))(v1 + 16))(v7, v8);
}

uint64_t sub_10038321C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for NavigationBarVisibilityScrollObserver()
{
  return objc_opt_self(_TtC22SubscribePageExtension37NavigationBarVisibilityScrollObserver);
}

CGFloat sub_100383264()
{
  CGFloat result;
  CATransform3D v1;
  CGAffineTransform m;

  CGAffineTransformMakeScale((CGAffineTransform *)&v1, 1.0, -1.0);
  *(_OWORD *)&m.a = *(_OWORD *)&v1.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&v1.m13;
  *(_OWORD *)&m.tx = *(_OWORD *)&v1.m21;
  CATransform3DMakeAffineTransform(&v1, &m);
  result = v1.m11;
  *(CATransform3D *)byte_1008541B0 = v1;
  return result;
}

uint64_t sub_1003832FC()
{
  return type metadata accessor for RevealingImageMirrorView(0);
}

uint64_t type metadata accessor for RevealingImageMirrorView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A918;
  if (!qword_10080A918)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RevealingImageMirrorView);
  return result;
}

uint64_t sub_100383340(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 480);
}

uint64_t sub_100383374()
{
  return sub_10000E99C(&qword_10080A930, type metadata accessor for SmallBreakoutCollectionViewCell, (uint64_t)&unk_100687A60);
}

double sub_1003833A4(__n128 a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t KeyPath;
  double v13;
  double v14;
  double v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  _QWORD v35[5];

  v1 = type metadata accessor for SmallBreakoutLayout.Metrics(0, a1);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SmallBreakoutLayout(0, v2);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100687AB0);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  v13 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v15 = v14;
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  v16 = sub_1000826AC();
  v17.n128_f64[0] = v13;
  sub_1001046BC(v16, (uint64_t)v4, v17);
  swift_getObjectType();
  swift_unknownObjectRetain(v16);
  v19 = sub_10010583C(v18);
  v21 = v20;
  swift_unknownObjectRelease(v16);
  v22 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = LayoutViewPlaceholder.init(representing:)(v19, v21);
  v35[3] = v22;
  v35[4] = &protocol witness table for LayoutViewPlaceholder;
  v35[0] = v23;
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v24 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v34[3] = v22;
  v34[4] = &protocol witness table for LayoutViewPlaceholder;
  v34[0] = v24;
  SmallBreakoutLayout.init(metrics:iconView:detailsView:)(v4, v35, v34);
  v25 = swift_getKeyPath(&unk_100687AE0);
  ItemLayoutContext.subscript.getter(v35);
  swift_release(v25);
  v26 = v35[0];
  v27 = sub_10000E99C(&qword_1008015F0, (uint64_t (*)(uint64_t))&type metadata accessor for SmallBreakoutLayout, (uint64_t)&protocol conformance descriptor for SmallBreakoutLayout);
  dispatch thunk of Measurable.measurements(fitting:in:)(v26, v5, v27, v13, v15);
  v29 = v28;
  swift_unknownObjectRelease(v16);
  v30 = swift_unknownObjectRelease(v26);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v7, v5, v30);
  return v29;
}

uint64_t sub_100383640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_1007F5840);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10066FE60;
  v8 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100671250;
  v9 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v9, 120, 7);
  *(_QWORD *)(v8 + 32) = sub_1004804B8(0x6574616C756D6953, 0xEF65676E61684320, 0, 0, 0, 0, (uint64_t)sub_100383884, 0);
  v10 = swift_allocObject(&unk_10073B020, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_10073B048, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  v12 = type metadata accessor for NavigationActionDebugSetting();
  swift_allocObject(v12, 104, 7);
  swift_retain(a1);
  v13 = sub_1004A9118(0x6C6C412077656956, 0xE800000000000000, 0, 0, (uint64_t)sub_1003848A8, v11);
  swift_release(v11);
  *(_QWORD *)(v8 + 40) = v13;
  v26 = v8;
  specialized Array._endMutation()(v14);
  v15 = v26;
  v16 = type metadata accessor for DebugSection();
  v17 = (_QWORD *)swift_allocObject(v16, 56, 7);
  v19 = UUID.init()(v18);
  v20 = UUID.uuidString.getter(v19);
  v22 = v21;
  v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17[2] = v20;
  v17[3] = v22;
  v17[4] = 0xD000000000000010;
  v17[5] = 0x80000001006466C0;
  v17[6] = v15;
  *(_QWORD *)(v7 + 32) = v17;
  v26 = v7;
  specialized Array._endMutation()(v23);
  return v26;
}

void sub_100383884()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v0, "postNotificationName:object:", ASDAppCapabilitiesDidChangeNotification, 0);

}

void sub_1003838E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1003848B0(a3);

  }
}

uint64_t sub_100383938@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  void *v45;
  NSString v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSString v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  NSString v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  double *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;
  __n128 v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  double *v91;
  unint64_t v92;
  unint64_t v93;
  __int128 v94;
  __n128 v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  double *v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t result;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t Strategy;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t *v155;
  char *v156;
  char *v157;
  char *v158;
  void (*v159)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  _OWORD v174[2];
  uint64_t v175;
  double *v176;

  v155 = a3;
  v4 = type metadata accessor for ActionMetrics(0, a2);
  __chkstk_darwin(v4);
  v163 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for UUID(0);
  v160 = *(_QWORD *)(v162 - 8);
  v6 = __chkstk_darwin(v162);
  v161 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for Shelf.ContentsMetadata(0, v6);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v154 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for Shelf.PresentationHints(0);
  __chkstk_darwin(v148);
  v153 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for ShelfBackground(0);
  v146 = *(_QWORD *)(v147 - 8);
  v10 = __chkstk_darwin(v147);
  v150 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for ShelfHorizontalScrollTargetBehavior(0, v10);
  v143 = *(_QWORD *)(v144 - 8);
  v12 = __chkstk_darwin(v144);
  v149 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strategy = type metadata accessor for IncompleteShelfFetchStrategy(0, v12);
  v140 = *(_QWORD *)(Strategy - 8);
  __chkstk_darwin(Strategy);
  v158 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v15);
  v164 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v17);
  v157 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v19);
  v145 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v156 = (char *)&v131 - v22;
  v23 = type metadata accessor for ShelfHeader.Configuration(0);
  __chkstk_darwin(v23);
  v137 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v25);
  v136 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v135 = (char *)&v131 - v28;
  v29 = sub_10000DF3C(&qword_1008019E8);
  __chkstk_darwin(v29);
  v31 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v32);
  v34 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Shelf.ContentType(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *a1;
  v40 = a1[1];
  v175 = 0;
  memset(v174, 0, sizeof(v174));
  v41 = *(void (**)(void))(v36 + 104);
  v138 = v38;
  v41();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v139 = v34;
  v42(v34, 1, 1, v35);
  v43 = type metadata accessor for ShelfMarker(0);
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v142 = v31;
  v44(v31, 1, 1, v43);
  v170 = xmmword_10066F860;
  *(_QWORD *)&v167 = 0;
  *((_QWORD *)&v167 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(*((_QWORD *)&v167 + 1));
  *(_QWORD *)&v167 = 0xD000000000000018;
  *((_QWORD *)&v167 + 1) = 0x80000001006466E0;
  v45 = (void *)objc_opt_self(ASDAppCapabilities);
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v45, "isCapableOfAction:capability:", 0, v46);

  if (v47)
    v48 = 7562585;
  else
    v48 = 28494;
  if (v47)
    v49 = 0xE300000000000000;
  else
    v49 = 0xE200000000000000;
  v50 = v49;
  String.append(_:)(*(Swift::String *)&v48);
  swift_bridgeObjectRelease(v49);
  v51 = *((_QWORD *)&v167 + 1);
  v132 = v167;
  v171 = v167;
  *(_QWORD *)&v167 = 0x203A6E65704FLL;
  *((_QWORD *)&v167 + 1) = 0xE600000000000000;
  v52 = String._bridgeToObjectiveC()();
  v53 = objc_msgSend(v45, "isCapableOfAction:capability:", 3, v52);

  if (v53)
    v54 = 7562585;
  else
    v54 = 28494;
  if (v53)
    v55 = 0xE300000000000000;
  else
    v55 = 0xE200000000000000;
  v56 = v55;
  String.append(_:)(*(Swift::String *)&v54);
  swift_bridgeObjectRelease(v55);
  v172 = v167;
  *(_QWORD *)&v167 = 0x203A657461647055;
  *((_QWORD *)&v167 + 1) = 0xE800000000000000;
  v134 = v39;
  v133 = v40;
  v57 = String._bridgeToObjectiveC()();
  v58 = objc_msgSend(v45, "isCapableOfAction:capability:", 1, v57);

  if (v58)
    v59 = 7562585;
  else
    v59 = 28494;
  if (v58)
    v60 = 0xE300000000000000;
  else
    v60 = 0xE200000000000000;
  v61 = v60;
  String.append(_:)(*(Swift::String *)&v59);
  swift_bridgeObjectRelease(v60);
  v173 = v167;
  v176 = _swiftEmptyArrayStorage;
  sub_100021C44(0, 3, 0);
  v62 = swift_bridgeObjectRetain(v51);
  v63 = v161;
  v64 = UUID.init()(v62);
  v65 = UUID.uuidString.getter(v64);
  v67 = v66;
  v68 = *(void (**)(char *, uint64_t))(v160 + 8);
  v68(v63, v162);
  v165 = v65;
  v166 = v67;
  v69 = AnyHashable.init<A>(_:)(&v165, &type metadata for String, &protocol witness table for String);
  v70 = v163;
  static ActionMetrics.notInstrumented.getter(v69);
  v71 = type metadata accessor for ImpressionMetrics(0);
  v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v73 = v164;
  v160 = v71;
  v159 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v164, 1, 1);
  v74 = type metadata accessor for Action(0);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v75 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v167, v132, v51, 0, 0, v70, v73);
  v76 = v176;
  if ((swift_isUniquelyReferenced_nonNull_native(v176) & 1) == 0)
  {
    sub_100021C44(0, *((_QWORD *)v76 + 2) + 1, 1);
    v76 = v176;
  }
  v78 = *((_QWORD *)v76 + 2);
  v77 = *((_QWORD *)v76 + 3);
  if (v78 >= v77 >> 1)
  {
    sub_100021C44(v77 > 1, v78 + 1, 1);
    v76 = v176;
  }
  v168 = v74;
  v79 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  v169 = v79;
  *(_QWORD *)&v167 = v75;
  *((_QWORD *)v76 + 2) = v78 + 1;
  sub_100010F3C(&v167, (uint64_t)&v76[5 * v78 + 4]);
  v80 = v172;
  v81 = swift_bridgeObjectRetain(*((_QWORD *)&v172 + 1));
  v82 = v161;
  v83 = UUID.init()(v81);
  v84 = UUID.uuidString.getter(v83);
  v86 = v85;
  v68(v82, v162);
  v165 = v84;
  v166 = v86;
  v87 = AnyHashable.init<A>(_:)(&v165, &type metadata for String, &protocol witness table for String);
  v88 = v163;
  static ActionMetrics.notInstrumented.getter(v87);
  v89 = v164;
  v159(v164, 1, 1, v160);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v90 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v167, v80, *((_QWORD *)&v80 + 1), 0, 0, v88, v89);
  v91 = v176;
  if ((swift_isUniquelyReferenced_nonNull_native(v176) & 1) == 0)
  {
    sub_100021C44(0, *((_QWORD *)v91 + 2) + 1, 1);
    v91 = v176;
  }
  v93 = *((_QWORD *)v91 + 2);
  v92 = *((_QWORD *)v91 + 3);
  if (v93 >= v92 >> 1)
  {
    sub_100021C44(v92 > 1, v93 + 1, 1);
    v91 = v176;
  }
  v168 = v74;
  v169 = v79;
  *(_QWORD *)&v167 = v90;
  *((_QWORD *)v91 + 2) = v93 + 1;
  sub_100010F3C(&v167, (uint64_t)&v91[5 * v93 + 4]);
  v94 = v173;
  v95 = swift_bridgeObjectRetain(*((_QWORD *)&v173 + 1));
  v96 = v161;
  v97 = UUID.init()(v95);
  v98 = UUID.uuidString.getter(v97);
  v100 = v99;
  v68(v96, v162);
  v165 = v98;
  v166 = v100;
  v101 = AnyHashable.init<A>(_:)(&v165, &type metadata for String, &protocol witness table for String);
  v102 = v163;
  static ActionMetrics.notInstrumented.getter(v101);
  v103 = v164;
  v159(v164, 1, 1, v160);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v104 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v167, v94, *((_QWORD *)&v94 + 1), 0, 0, v102, v103);
  v105 = v176;
  if ((swift_isUniquelyReferenced_nonNull_native(v176) & 1) == 0)
  {
    sub_100021C44(0, *((_QWORD *)v105 + 2) + 1, 1);
    v105 = v176;
  }
  v107 = *((_QWORD *)v105 + 2);
  v106 = *((_QWORD *)v105 + 3);
  if (v107 >= v106 >> 1)
  {
    sub_100021C44(v106 > 1, v107 + 1, 1);
    v105 = v176;
  }
  v168 = v74;
  v169 = v79;
  *(_QWORD *)&v167 = v104;
  *((_QWORD *)v105 + 2) = v107 + 1;
  sub_100010F3C(&v167, (uint64_t)&v105[5 * v107 + 4]);
  swift_arrayDestroy(&v171, v170, &type metadata for String);
  v108 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56);
  v110 = v135;
  v109(v135, 1, 1, v108);
  v111 = v136;
  v109(v136, 1, 1, v108);
  v112 = v133;
  swift_bridgeObjectRetain(v133);
  v113 = v137;
  ShelfHeader.Configuration.init(eyebrowColor:eyebrowImageColor:titleColor:titleImageColor:subtitleColor:accessoryColor:includeSeparator:includeTrailingArtwork:prefersShelfHeader:)(0, 0, 0, 0, 0, 0, 2, 2, 2);
  v114 = type metadata accessor for ShelfHeader(0);
  swift_allocObject(v114, *(unsigned int *)(v114 + 48), *(unsigned __int16 *)(v114 + 52));
  v163 = (char *)ShelfHeader.init(eyebrow:eyebrowArtwork:eyebrowArtworkType:eyebrowAction:eyebrowTrailingArtwork:title:titleArtwork:titleArtworkType:titleAction:subtitle:trailingArtwork:accessoryAction:configuration:)(0, 0, 0, v110, 0, 0, v134, v112, 0, v111, 0, 0, 0, 0, 0, v113);
  v115 = type metadata accessor for URL(0);
  v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56);
  v116(v156, 1, 1, v115);
  v117 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v157, 1, 1, v117);
  v118 = v164;
  v159(v164, 1, 1, v160);
  v119 = v145;
  v116(v145, 1, 1, v115);
  (*(void (**)(char *, _QWORD, uint64_t))(v140 + 104))(v158, enum case for IncompleteShelfFetchStrategy.onPageLoad(_:), Strategy);
  v120 = v149;
  (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v149, enum case for ShelfHorizontalScrollTargetBehavior.viewAligned(_:), v144);
  v121 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v150, enum case for ShelfBackground.none(_:), v147);
  v122 = sub_10000DF3C(&qword_1008019F0);
  swift_allocObject(v122, *(unsigned int *)(v122 + 48), *(unsigned __int16 *)(v122 + 52));
  v123 = AsyncEvent.init()();
  *(_QWORD *)&v167 = _swiftEmptyArrayStorage;
  v124 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v125 = sub_10000DF3C(&qword_1008019F8);
  v126 = sub_100206854();
  v127 = v153;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v167, v125, v126, v148, v124);
  v128 = v154;
  (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v154, enum case for Shelf.ContentsMetadata.none(_:), v152);
  v129 = type metadata accessor for Shelf(0);
  swift_allocObject(v129, *(unsigned int *)(v129 + 48), *(unsigned __int16 *)(v129 + 52));
  result = Shelf.init(id:contentType:placeholderContentType:marker:items:header:url:mergeWhenFetched:batchGroup:fetchStrategy:footerTitle:footerAction:isHidden:isHorizontal:horizontalScrollTargetBehavior:isPersonalized:rowsPerColumn:background:onShouldRemoveModel:removeModelEvents:presentationHints:contentsMetadata:nextPreferredContentRefreshDate:impressionMetrics:refreshUrl:pageChangeMetrics:adIncidents:)(v174, v138, v139, v142, v105, v163, v156, 0, 0, 0, v158, 0, 0, 0, 0, v120, 0, 0, v121,
             v123,
             _swiftEmptyArrayStorage,
             v127,
             v128,
             v157,
             v118,
             v119,
             0,
             0);
  *v155 = result;
  return result;
}

id sub_100384808()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppCapabilitiesSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppCapabilitiesSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension23AppCapabilitiesSettings);
}

uint64_t sub_100384858()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038487C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003848A8(uint64_t a1)
{
  uint64_t v1;

  sub_1003838E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1003848B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD v83[2];
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87[2];

  v82 = a1;
  v1 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v1);
  v78 = (uint64_t)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DF3C(&qword_1007F78F0);
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  __chkstk_darwin(v3);
  v79 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1008019E0);
  v6 = __chkstk_darwin(v5);
  v77 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageMetrics(0, v6);
  v9 = __chkstk_darwin(v8);
  v76 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for FlowOrigin(0, v9);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v75 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for FlowAnimationBehavior(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v74 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for FlowPresentationContext(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v72 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ActionMetrics(0, v14);
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v18);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FlowPage(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v83[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(2);
  *(_QWORD *)&v84 = 0xD00000000000001ELL;
  *((_QWORD *)&v84 + 1) = "ectionIdentifier";
  swift_bridgeObjectRetain("ectionIdentifier");
  sub_100383938((uint64_t *)&v84, v29, v87);
  swift_bridgeObjectRelease("ectionIdentifier");
  v30 = v87[0];
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v32 = *(_QWORD *)(*(_QWORD *)&v83[0] + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
  v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
  specialized ContiguousArray._endMutation()(v33);
  *(_QWORD *)&v84 = 0xD00000000000001CLL;
  *((_QWORD *)&v84 + 1) = "uses-non-webkit-browser-engine";
  swift_bridgeObjectRetain("uses-non-webkit-browser-engine");
  sub_100383938((uint64_t *)&v84, v34, v87);
  swift_bridgeObjectRelease("uses-non-webkit-browser-engine");
  v35 = v87[0];
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
  v37 = *(_QWORD *)(*(_QWORD *)&v83[0] + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
  v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
  specialized ContiguousArray._endMutation()(v38);
  v39 = *(_QWORD *)&v83[0];
  swift_arrayDestroy(&qword_1007212C0, 2, &type metadata for String);
  v86 = 0;
  v84 = 0u;
  v85 = 0u;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, enum case for FlowPage.page(_:), v25);
  v40 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v24, 1, 1, v40);
  v41 = type metadata accessor for ReferrerData(0);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v20, 1, 1, v41);
  memset(v83, 0, sizeof(v83));
  static ActionMetrics.notInstrumented.getter(v42);
  v43 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v72, enum case for FlowPresentationContext.infer(_:), v68);
  v44 = v74;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v74, enum case for FlowAnimationBehavior.infer(_:), v70);
  v45 = v75;
  v46 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v71 + 104))(v75, enum case for FlowOrigin.inapp(_:), v73);
  v47 = static FlowActionPresentation.stackPush.getter(v46);
  v49 = v48;
  v50 = type metadata accessor for FlowAction(0);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v84, 0, 0, 0, v28, v24, 0, 0, v20, v83, v17, v43, v44, v45, 0, v47, v49);
  v84 = 0u;
  v85 = 0u;
  v52 = v76;
  static PageMetrics.notInstrumented.getter(v51);
  v53 = type metadata accessor for JSONContext(0);
  v54 = v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v77, 1, 1, v53);
  v55 = type metadata accessor for GenericPage(0);
  swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
  v56 = GenericPage.init(shelves:title:shareAction:presentationOptions:nextPage:isIncomplete:uber:loadCompletedAction:pageRefreshPolicy:pageMetrics:pageRenderEvent:context:)(v39, 0xD000000000000010, 0x80000001006466C0, 0, 0, &v84, 0, 0, 0, 0, v52, 0, v54);
  *((_QWORD *)&v85 + 1) = v55;
  *(_QWORD *)&v84 = v56;
  FlowAction.setPageData(_:)(&v84);
  sub_100011088((uint64_t)&v84, &qword_1007F6E90);
  v57 = v82;
  v58 = v82 + qword_100854048;
  swift_beginAccess(v82 + qword_100854048, &v84, 0, 0);
  v59 = v58;
  v60 = v78;
  sub_100384FA4(v59, v78);
  v62 = v80;
  v61 = v81;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v60, 1, v81) == 1)
  {
    sub_100011088(v60, (uint64_t *)&unk_1007F5140);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v61);
    __break(1u);
  }
  else
  {
    v63 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v79, v60, v61);
    swift_retain(v51);
    v65 = sub_10008EB74(v64, v57, v63);
    swift_release(v51);
    v66 = swift_release(v65);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v63, v61, v66);
    swift_release(v51);
  }
}

uint64_t sub_100384FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100384FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  unint64_t *v3;
  uint64_t result;

  switch(a1)
  {
    case 0:
    case 1:
    case 8:
      v1 = type metadata accessor for StoryCardCollectionViewCell(0);
      v2 = type metadata accessor for StoryCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A980;
      goto LABEL_11;
    case 2:
      v1 = type metadata accessor for ListTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for ListTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_1007FBBE0;
      goto LABEL_11;
    case 3:
    case 6:
      v1 = type metadata accessor for MultiAppFallbackCardCollectionViewCell(0);
      v2 = type metadata accessor for MultiAppFallbackCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A978;
      goto LABEL_11;
    case 4:
      v1 = type metadata accessor for InAppPurchaseTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for InAppPurchaseTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A998;
      goto LABEL_11;
    case 5:
      v1 = type metadata accessor for RiverTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for RiverTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A990;
      goto LABEL_11;
    case 7:
      v1 = type metadata accessor for GridTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for GridTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A988;
      goto LABEL_11;
    case 9:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "SubscribePageExtension/TodayCardMediaKind+Views.swift", 53, 2, 78, 0);
      goto LABEL_14;
    case 10:
      v1 = type metadata accessor for AppEventTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for AppEventTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A970;
      goto LABEL_11;
    case 11:
      v1 = type metadata accessor for CondensedAdLockupWithIconBackgroundViewTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for CondensedAdLockupWithIconBackgroundViewTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A968;
      goto LABEL_11;
    case 12:
      v1 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell(0);
      v2 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell;
      v3 = (unint64_t *)&unk_10080A960;
LABEL_11:
      sub_10038519C(v3, v2);
      result = v1;
      break;
    default:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "SubscribePageExtension/TodayCardMediaKind+Views.swift", 53, 2, 81, 0);
LABEL_14:
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_10038519C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = swift_getWitnessTable(&unk_10069339C, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v1);
  if (qword_1007F1DE8 != -1)
    swift_once(&qword_1007F1DE8, sub_1003852A0);
  v4 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  return PageGrid.init(from:breakpointOverrides:)(v3, v4);
}

uint64_t sub_10038528C()
{
  return static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
}

uint64_t sub_1003852A0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  void (*v32)(_QWORD);
  double left;
  double bottom;
  double right;
  __int128 v36;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  __int128 v48;
  double v49;
  double v50;
  __int128 v51;
  uint64_t result;
  int64x2_t v53;
  double v54;
  double top;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = &v53.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v6 = (int64x2_t *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = &v53.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v53.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v53.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v53.i8[-v17];
  v19 = sub_10000DF3C(&qword_1007F5878);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v61 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100671120;
  v56 = v24;
  v60 = v24 + v23;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v25 = xmmword_100856810;
  v62[0] = 0x3FF0000000000000;
  v26 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4048000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v32 = *(void (**)(_QWORD))(v4 + 104);
  v59 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v58 = (void (*)(int64x2_t *, _QWORD, uint64_t))v32;
  v32(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v62[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for Bool, &protocol witness table for Bool);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v36 = xmmword_100856820;
  v62[0] = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4048000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v38 = v57;
  v58(v6, v59, v57);
  LOBYTE(v62[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for Bool, &protocol witness table for Bool);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v36, *((double *)&v36 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v39 = xmmword_100856830;
  v62[0] = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4048000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v53 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v53;
  v58(v6, v59, v38);
  LOBYTE(v62[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for Bool, &protocol witness table for Bool);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v54 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v39, *((double *)&v39 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v40 = xmmword_100856870;
  v62[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  *v6 = v53;
  v58(v6, v59, v57);
  v41 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  LOBYTE(v62[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for Bool, &protocol witness table for Bool);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v40, *((double *)&v40 + 1), v41, v43, v45, v47);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v48 = xmmword_100856880;
  v62[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v53 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v53;
  v58(v6, v59, v57);
  LOBYTE(v62[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for Bool, &protocol witness table for Bool);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v50 = v54;
  v49 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v48, *((double *)&v48 + 1), top, v54, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v51 = xmmword_100856890;
  v62[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  v62[0] = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  *v6 = v53;
  v58(v6, v59, v57);
  LOBYTE(v62[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for Bool, &protocol witness table for Bool);
  v62[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v62, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v51, *((double *)&v51 + 1), v49, v50, bottom, right);
  qword_100854230 = v56;
  return result;
}

uint64_t sub_100385B4C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  __n128 v28;
  double left;
  double bottom;
  double right;
  __int128 v32;
  __n128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __n128 v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  __int128 v45;
  __n128 v46;
  double v47;
  double v48;
  __int128 v49;
  __n128 v50;
  uint64_t result;
  double v52;
  double top;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  v19 = sub_10000DF3C(&qword_1007F5878);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100671120;
  v55 = v24;
  v25 = v24 + v23;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v26 = xmmword_100856810;
  v57 = 0x3FF0000000000000;
  v27 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4048000000000000;
  v28 = PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  static PageGrid.HorizontalMargins.zero.getter(v28);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v57) = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for Bool, &protocol witness table for Bool);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v26, *((double *)&v26 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v56 = v25;
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v32 = xmmword_100856820;
  v57 = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4048000000000000;
  v33 = PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  static PageGrid.HorizontalMargins.zero.getter(v33);
  LOBYTE(v57) = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for Bool, &protocol witness table for Bool);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v32, *((double *)&v32 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v34 = xmmword_100856830;
  v57 = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4048000000000000;
  v35 = PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  static PageGrid.HorizontalMargins.zero.getter(v35);
  LOBYTE(v57) = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for Bool, &protocol witness table for Bool);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v52 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v34, *((double *)&v34 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v54 = v56 + 3 * v21;
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v36 = xmmword_100856870;
  v57 = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4044000000000000;
  v37 = PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  static PageGrid.HorizontalMargins.zero.getter(v37);
  v38 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  LOBYTE(v57) = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for Bool, &protocol witness table for Bool);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v36, *((double *)&v36 + 1), v38, v40, v42, v44);
  v54 = v21;
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v45 = xmmword_100856880;
  v57 = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4044000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  static PageGrid.HorizontalMargins.zero.getter(v46);
  LOBYTE(v57) = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for Bool, &protocol witness table for Bool);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v48 = v52;
  v47 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v45, *((double *)&v45 + 1), top, v52, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v49 = xmmword_100856890;
  v57 = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4044000000000000;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  v57 = 0x4044000000000000;
  v50 = PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  static PageGrid.HorizontalMargins.zero.getter(v50);
  LOBYTE(v57) = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for Bool, &protocol witness table for Bool);
  v57 = 0;
  PageGrid.DirectionalValue.init(_:)(&v57, &type metadata for CGFloat, v27);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v49, *((double *)&v49 + 1), v47, v48, bottom, right);
  qword_100854238 = v55;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TopChartSegmentPageShelfLayoutSpacingProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for TopChartSegmentPageShelfLayoutSpacingProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for TopChartSegmentPageShelfLayoutSpacingProvider(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for TopChartSegmentPageShelfLayoutSpacingProvider()
{
  return &type metadata for TopChartSegmentPageShelfLayoutSpacingProvider;
}

uint64_t sub_100386418@<X0>(uint64_t (*a1)(void)@<X1>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;

  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = ShelfLayoutContext.isFirstShelf.getter(v6);
  if ((result & 1) != 0)
  {
    v10 = a1();
    if ((v10 & 1) != 0)
    {
      if (qword_1007F2A20 != -1)
        swift_once(&qword_1007F2A20, sub_10042D138);
      v11 = type metadata accessor for StaticDimension(0);
      v12 = sub_1000117A8(v11, (uint64_t)qword_1008561B0);
      *((_QWORD *)a2 + 3) = v11;
      *((_QWORD *)a2 + 4) = &protocol witness table for StaticDimension;
      v13 = sub_1000117C0(a2);
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v13, v12, v11);
    }
    else
    {
      v14 = ShelfLayoutContext.contentPageGrid.getter(v10);
      v15 = PageGrid.interRowSpace.getter(v14);
      result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      *((_QWORD *)a2 + 3) = &type metadata for CGFloat;
      *((_QWORD *)a2 + 4) = &protocol witness table for CGFloat;
      *a2 = v15;
    }
  }
  else
  {
    *((_QWORD *)a2 + 3) = &type metadata for Double;
    *((_QWORD *)a2 + 4) = &protocol witness table for Double;
    *a2 = 0.0;
  }
  return result;
}

uint64_t sub_100386598@<X0>(double *a1@<X8>)
{
  uint64_t (**v1)(void);

  return sub_100386418(*v1, a1);
}

uint64_t sub_1003865A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_1007F2A10 != -1)
    swift_once(&qword_1007F2A10, sub_10042D114);
  v2 = type metadata accessor for StaticDimension(0);
  v3 = sub_1000117A8(v2, (uint64_t)qword_100856180);
  a1[3] = v2;
  a1[4] = &protocol witness table for StaticDimension;
  v4 = sub_1000117C0(a1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v4, v3, v2);
}

double *sub_100386630(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = sub_100481C8C(a1, a2);
  if (v2)
  {
    v3 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v4 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v5 >= v4 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
    v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
    specialized Array._endMutation()(v6);

  }
  sub_100019D30((uint64_t)_swiftEmptyArrayStorage);
  return _swiftEmptyArrayStorage;
}

double sub_1003866E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a3;
  v9 = type metadata accessor for ItemLayoutContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SeparatorSupplementaryView(0);
  if ((static UICollectionReusableView.matchesItemElementKind(_:)(a1, a2) & 1) != 0)
  {
    v14 = swift_bridgeObjectRetain(a2);
    v15 = static UICollectionReusableView.defaultReuseIdentifier.getter(v14);
    v26 = v16;
    v27 = v15;
    v17 = swift_allocObject(&unk_10073B130, 24, 7);
    v25 = a4;
    v18 = v17;
    swift_weakInit(v17 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v9);
    v19 = *(unsigned __int8 *)(v10 + 80);
    v20 = (v19 + 24) & ~v19;
    v28 = a1;
    v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_10073B158, v21 + 8, v19 | 7);
    *(_QWORD *)(v22 + 16) = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v22 + v20, v12, v9);
    v23 = v25;
    *(_QWORD *)(v22 + v21) = v25;
    *(_QWORD *)(a5 + 24) = sub_10000DF3C((uint64_t *)&unk_100810B00);
    *(_QWORD *)(a5 + 32) = sub_1002D9150();
    sub_1000117C0((_QWORD *)a5);
    swift_retain(v23);
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v28, a2, v27, v26, sub_100386968, v22, v13);
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for GenericPageItemSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension36GenericPageItemSupplementaryProvider);
}

uint64_t sub_1003868B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003868D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ItemLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100386968(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for ItemLayoutContext(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_100482690(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1003869E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_initClassMetadata2(a1, 0, 2, v4, a1 + 96);
  }
}

char *sub_100386A58(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, double, double, double, double);
  char *v18;
  id v19;
  double left;
  double bottom;
  double right;
  char *v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = swift_isaMask & *(_QWORD *)v4;
  v12 = &v4[qword_100854240];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = qword_100854248;
  v15 = *(_QWORD *)(v11 + 80);
  v16 = *(_QWORD *)(v11 + 88);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, double, double, double, double))(v16 + 72);
  v18 = v5;
  *(_QWORD *)&v5[v14] = v17(v15, v16, 0.0, 0.0, 0.0, 0.0);

  v28.receiver = v18;
  v28.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v23 = (char *)v19;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v24 = objc_msgSend(v23, "contentView");
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v25 = objc_msgSend(v23, "contentView");
  v26 = *(id *)&v23[qword_100854248];
  objc_msgSend(v25, "addSubview:", v26);

  return v23;
}

char *sub_100386C20(double a1, double a2, double a3, double a4)
{
  return sub_100386A58(a1, a2, a3, a4);
}

void sub_100386C40(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1003871F8();
}

uint64_t sub_100386C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_100854240;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

double sub_100386CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + qword_100854240;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_100386D0C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_100854240, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_100386D50()
{
  char *v0;
  void *v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  v1 = *(void **)&v0[qword_100854248];
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v1, "setFrame:");
}

void sub_100386DB8(void *a1)
{
  id v1;

  v1 = a1;
  sub_100386D50();

}

void sub_100386DEC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;

  v5 = *(_QWORD *)(v2 + qword_100854248);
  v6 = type metadata accessor for ScrollablePillView(0);
  v7 = swift_dynamicCastClass(v5, v6);
  v8 = 1.79769313e308;
  if (!v7)
    v8 = a1;
  CustomLayoutView.sizeThatFits(_:)(v8, a2);
}

double sub_100386E4C(void *a1, double a2, double a3)
{
  id v5;
  double v6;
  double v7;

  v5 = a1;
  sub_100386DEC(a2, a3);
  v7 = v6;

  return v7;
}

uint64_t sub_100386E9C()
{
  _QWORD *v0;
  objc_class *ObjectType;
  uint64_t v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = swift_isaMask & *v0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  objc_msgSendSuper2(&v4, "prepareForReuse");
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 88) + 88))(*(_QWORD *)(v2 + 80));
}

void sub_100386F04(void *a1)
{
  id v1;

  v1 = a1;
  sub_100386E9C();

}

id sub_100386F38(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_100386F68();

  return v2;
}

uint64_t sub_100386F68()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)((swift_isaMask & *v0) + 0x58) + 40))(*(_QWORD *)((swift_isaMask & *v0) + 0x50));
}

uint64_t sub_100386FAC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)((swift_isaMask & *v2) + 0x58) + 96))(a1, a2, *(_QWORD *)((swift_isaMask & *v2) + 0x50));
}

uint64_t sub_100386FF0()
{
  return dispatch thunk of static ExactHeightProviding.height(in:asPartOf:)();
}

uint64_t sub_100387018(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return dispatch thunk of CellWithArtwork.fetch(artwork:on:)(a1, a2, *(_QWORD *)((swift_isaMask & *v2) + 0x50), *(_QWORD *)(*(_QWORD *)((swift_isaMask & *v2) + 0x58) + 16));
}

uint64_t sub_10038705C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return dispatch thunk of CellWithArtwork.cancelArtworkFetch(on:deprioritizingFetch:)(a1, a2, *(_QWORD *)((swift_isaMask & *v2) + 0x50), *(_QWORD *)(*(_QWORD *)((swift_isaMask & *v2) + 0x58) + 16));
}

uint64_t sub_1003870A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for ComponentSeparator.Position(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v5 + 104))(v4, enum case for ComponentSeparator.Position.bottom(_:));
  ComponentSeparator.init(position:leadingInset:trailingInset:)(v4, 0.0, 0.0);
  v6 = type metadata accessor for ComponentSeparator(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

uint64_t sub_100387148()
{
  return dispatch thunk of static ArtworkPrefetchingShelfComponentView.sizingForArtworkPrefetch(in:asPartOf:)();
}

uint64_t sub_100387170()
{
  return dispatch thunk of static ArtworkPrefetchingShelfComponentView.prefetchArtwork(for:with:asPartOf:)();
}

void sub_100387198(uint64_t a1)
{
  sub_100028A60(a1 + qword_100854240);

}

uint64_t type metadata accessor for SearchLinkCollectionViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011EB8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SearchLinkCollectionViewCell);
}

uint64_t sub_1003871E8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100687D50, a1);
}

void sub_1003871F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = &v0[qword_100854240];
  v4 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = qword_100854248;
  *(_QWORD *)&v1[v5] = (*(uint64_t (**)(double, double, double, double))(*(_QWORD *)(v2 + 88) + 72))(0.0, 0.0, 0.0, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SearchLinkCollectionViewCell.swift", 57, 2, 29, 0);
  __break(1u);
}

uint64_t getEnumTagSinglePayload for ProductReviewExpansionState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductReviewExpansionState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003873C0 + 4 * byte_100687DD5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1003873F4 + 4 * byte_100687DD0[v4]))();
}

uint64_t sub_1003873F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1003873FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100387404);
  return result;
}

uint64_t sub_100387410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100387418);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10038741C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100387424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductReviewExpansionState()
{
  return &type metadata for ProductReviewExpansionState;
}

id sub_100387440(uint64_t a1, __int16 a2, char a3, void *a4, uint64_t a5)
{
  _BYTE *v5;
  _BYTE *v6;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  NSString v46;
  unint64_t v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  void *v82;
  id v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void *v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  NSString v114;
  void *v115;
  id v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  __n128 v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  void *v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  id v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;

  v6 = v5;
  v8 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_titleLabel];
  v9 = objc_msgSend(v8, "text");
  v152 = a5;
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    v15 = Review.title.getter(v14);
    if (!v15)
    {
      if (!v13)
        goto LABEL_22;
      goto LABEL_15;
    }
    v17 = (void *)v15;
  }
  else
  {
    v18 = Review.title.getter(0);
    if (!v18)
      goto LABEL_22;
    v17 = (void *)v18;
    v13 = 0;
    v11 = 0;
  }
  v19 = LanguageAwareString.string.getter(v16);
  v21 = v20;

  if (!v13)
  {
    if (!v21)
      goto LABEL_22;
    goto LABEL_17;
  }
  if (!v21)
  {
LABEL_15:
    v21 = v13;
LABEL_17:
    swift_bridgeObjectRelease(v21);
LABEL_18:
    v25 = Review.title.getter(v24);
    if (v25)
    {
      v26 = (void *)v25;
      v27 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

    }
    else
    {
      v27 = 0;
    }
    objc_msgSend(v8, "setAttributedText:", v27);

    goto LABEL_22;
  }
  if (v11 == v19 && v13 == v21)
  {
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v21);
    goto LABEL_22;
  }
  v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v19, v21, 0);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v21);
  if ((v23 & 1) == 0)
    goto LABEL_18;
LABEL_22:
  v28 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_dateLabel];
  v29 = objc_msgSend(v28, "text");
  if (!v29)
  {
    Review.dateText.getter(0);
    v38 = v42;
    goto LABEL_32;
  }
  v30 = v29;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v33 = v32;

  v35 = Review.dateText.getter(v34);
  v38 = v36;
  if (!v33)
  {
LABEL_32:
    if (!v38)
      goto LABEL_39;
    v33 = v38;
    goto LABEL_34;
  }
  if (!v36)
  {
LABEL_34:
    swift_bridgeObjectRelease(v33);
LABEL_35:
    Review.dateText.getter(v41);
    if (v43)
    {
      v45 = v43;
      v46 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v44 = swift_bridgeObjectRelease(v45).n128_u64[0];
    }
    else
    {
      v46 = 0;
    }
    objc_msgSend(v28, "setText:", v46, v44);

    goto LABEL_39;
  }
  if (v31 == v35 && v36 == v33)
  {
    swift_bridgeObjectRelease(v33);
    v37 = swift_bridgeObjectRelease(v38);
    goto LABEL_39;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v36, 0);
  swift_bridgeObjectRelease(v33);
  v37 = swift_bridgeObjectRelease(v38);
  if ((v40 & 1) == 0)
    goto LABEL_35;
LABEL_39:
  v47 = Review.rating.getter(v37);
  sub_10042AA4C((float)v47);
  v48 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_authorLabel];
  v49 = objc_msgSend(v48, "text");
  if (v49)
  {
    v50 = v49;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

    v55 = Review.reviewerName.getter(v54);
    if (!v55)
    {
      if (!v53)
        goto LABEL_57;
      goto LABEL_50;
    }
    v57 = (void *)v55;
  }
  else
  {
    v58 = Review.reviewerName.getter(0);
    if (!v58)
      goto LABEL_57;
    v57 = (void *)v58;
    v53 = 0;
    v51 = 0;
  }
  v59 = LanguageAwareString.string.getter(v56);
  v61 = v60;

  if (!v53)
  {
    if (!v61)
      goto LABEL_57;
    goto LABEL_52;
  }
  if (!v61)
  {
LABEL_50:
    v61 = v53;
LABEL_52:
    swift_bridgeObjectRelease(v61);
LABEL_53:
    v63 = Review.reviewerName.getter(v62);
    if (v63)
    {
      v64 = (void *)v63;
      v65 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

    }
    else
    {
      v65 = 0;
    }
    objc_msgSend(v48, "setAttributedText:", v65);

    goto LABEL_57;
  }
  if (v51 == v59 && v53 == v61)
  {
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v61);
    goto LABEL_57;
  }
  v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v59, v61, 0);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v61);
  if ((v131 & 1) == 0)
    goto LABEL_53;
LABEL_57:
  v66 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_dateAuthorLabel];
  v67 = objc_msgSend(v66, "text");
  if (v67)
  {
    v68 = v67;
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v71 = v70;

    v73 = Review.dateAuthorText.getter(v72);
    if (!v73)
    {
      if (!v71)
        goto LABEL_75;
      goto LABEL_68;
    }
    v75 = (void *)v73;
  }
  else
  {
    v73 = Review.dateAuthorText.getter(0);
    if (!v73)
      goto LABEL_75;
    v75 = (void *)v73;
    v71 = 0;
    v69 = 0;
  }
  v76 = LanguageAwareString.string.getter(v74);
  v78 = v77;

  if (!v71)
  {
    if (!v78)
      goto LABEL_75;
    goto LABEL_70;
  }
  if (!v78)
  {
LABEL_68:
    v78 = v71;
LABEL_70:
    swift_bridgeObjectRelease(v78);
LABEL_71:
    v79 = Review.dateAuthorText.getter(v73);
    if (v79)
    {
      v80 = (void *)v79;
      v81 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

    }
    else
    {
      v81 = 0;
    }
    objc_msgSend(v66, "setAttributedText:", v81);

    goto LABEL_75;
  }
  if (v69 == v76 && v71 == v78)
  {
    swift_bridgeObjectRelease(v71);
    swift_bridgeObjectRelease(v78);
    goto LABEL_75;
  }
  v132 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v76, v78, 0);
  swift_bridgeObjectRelease(v71);
  swift_bridgeObjectRelease(v78);
  if ((v132 & 1) == 0)
    goto LABEL_71;
LABEL_75:
  v82 = *(void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_bodyLabel]
                 + OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_languageAwareString);
  if (v82)
  {
    v83 = v82;
    v85 = LanguageAwareString.string.getter(v84);
    v87 = v86;

    v89 = Review.contents.getter(v88);
    if (!v89)
    {
      if (!v87)
        goto LABEL_90;
      goto LABEL_86;
    }
    v91 = (void *)v89;
  }
  else
  {
    v89 = Review.contents.getter(v73);
    if (!v89)
      goto LABEL_90;
    v91 = (void *)v89;
    v87 = 0;
    v85 = 0;
  }
  v92 = LanguageAwareString.string.getter(v90);
  v94 = v93;

  if (!v87)
  {
    if (!v94)
      goto LABEL_90;
    goto LABEL_88;
  }
  if (!v94)
  {
LABEL_86:
    v94 = v87;
LABEL_88:
    swift_bridgeObjectRelease(v94);
LABEL_89:
    v95 = (void *)Review.contents.getter(v89);
    sub_10020E524(v95);

    goto LABEL_90;
  }
  if (v85 == v92 && v87 == v94)
  {
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease(v94);
    goto LABEL_90;
  }
  v133 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v87, v92, v94, 0);
  swift_bridgeObjectRelease(v87);
  swift_bridgeObjectRelease(v94);
  if ((v133 & 1) == 0)
    goto LABEL_89;
LABEL_90:
  v96 = Review.response.getter(v89);
  if (!v96)
  {
    v109 = v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_hasResponse];
    v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_hasResponse] = 0;
    sub_100292E8C((id)v109);
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_responseDateLabel], "setText:", 0);
    sub_10020CA18(0, 0);
    goto LABEL_133;
  }
  v97 = v96;
  v98 = v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_hasResponse];
  v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_hasResponse] = 1;
  sub_100292E8C((id)v98);
  v99 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_responseDateLabel];
  v100 = objc_msgSend(v99, "text");
  if (!v100)
  {
    ((void (*)(void))Response.dateText.getter)();
    v108 = v110;
    goto LABEL_99;
  }
  v101 = v100;
  v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
  v104 = v103;

  v105 = ((uint64_t (*)(void))Response.dateText.getter)();
  v108 = v106;
  if (!v104)
  {
LABEL_99:
    if (!v108)
      goto LABEL_106;
    v104 = v108;
    goto LABEL_101;
  }
  if (!v106)
  {
LABEL_101:
    v107 = swift_bridgeObjectRelease(v104);
LABEL_102:
    Response.dateText.getter(v107);
    if (v111)
    {
      v113 = v111;
      v114 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v112 = swift_bridgeObjectRelease(v113).n128_u64[0];
    }
    else
    {
      v114 = 0;
    }
    objc_msgSend(v99, "setText:", v114, v112);

    goto LABEL_106;
  }
  if (v102 == v105 && v106 == v104)
  {
    swift_bridgeObjectRelease(v104);
    v107 = swift_bridgeObjectRelease(v108);
    goto LABEL_106;
  }
  v134 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v104, v105, v106, 0);
  swift_bridgeObjectRelease(v104);
  v107 = swift_bridgeObjectRelease(v108);
  if ((v134 & 1) == 0)
    goto LABEL_102;
LABEL_106:
  v115 = *(void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_responseBodyLabel]
                  + OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_languageAwareString);
  if (!v115)
  {
    v125 = Response.contents.getter(v107);
    if (!v125)
      goto LABEL_132;
    v124 = (void *)v125;
    v120 = 0;
    v118 = 0;
    goto LABEL_111;
  }
  v116 = v115;
  v118 = LanguageAwareString.string.getter(v117);
  v120 = v119;

  v122 = Response.contents.getter(v121);
  if (v122)
  {
    v124 = (void *)v122;
LABEL_111:
    v126 = LanguageAwareString.string.getter(v123);
    v128 = v127;

    if (v120)
    {
      if (v128)
      {
        if (v118 == v126 && v120 == v128)
        {
          swift_release(v97);
          swift_bridgeObjectRelease(v120);
          swift_bridgeObjectRelease(v128);
          goto LABEL_133;
        }
        v135 = _stringCompareWithSmolCheck(_:_:expecting:)(v118, v120, v126, v128, 0);
        swift_bridgeObjectRelease(v120);
        v129 = swift_bridgeObjectRelease(v128);
        if ((v135 & 1) != 0)
          goto LABEL_132;
LABEL_120:
        v130 = (void *)Response.contents.getter(v129);
        sub_10020E524(v130);
        swift_release(v97);

        goto LABEL_133;
      }
      goto LABEL_117;
    }
    if (v128)
      goto LABEL_119;
    goto LABEL_132;
  }
  if (v120)
  {
LABEL_117:
    v128 = v120;
LABEL_119:
    v129 = swift_bridgeObjectRelease(v128);
    goto LABEL_120;
  }
LABEL_132:
  swift_release(v97);
LABEL_133:
  v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_isReviewExpanded] = a2 & 1;
  sub_1002930A0();
  v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_isResponseExpanded] = HIBYTE(a2) & 1;
  v136 = sub_10029317C();
  v137 = Review.moreAction.getter(v136);
  if (v137)
  {
    v138 = v137;
    v139 = objc_msgSend(a4, "traitCollection");
    v140 = objc_msgSend(v139, "horizontalSizeClass");

    if (v140 == (id)1)
    {
      v141 = swift_allocObject(&unk_10073B310, 24, 7);
      swift_unknownObjectWeakInit(v141 + 16);
      v142 = (_QWORD *)swift_allocObject(&unk_10073B338, 40, 7);
      v142[2] = v141;
      v142[3] = v138;
      v142[4] = v152;
      v143 = (uint64_t *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler];
      v144 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler];
      v145 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler + 8];
      *v143 = (uint64_t)sub_100389CE0;
      v143[1] = (uint64_t)v142;
      swift_retain(v138);
      swift_retain(v152);
      sub_100019310(v144, v145);
      v146 = *v143;
      v147 = v143[1];
      v148 = (uint64_t *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler];
      v149 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler];
      v150 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler + 8];
      *v148 = *v143;
      v148[1] = v147;
      sub_100019320(v146, v147);
      sub_100019310(v149, v150);
    }
    swift_release(v138);
  }
  v6[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_isFlowPreviewingDestination] = a3 & 1;
  sub_1002921E0();
  return objc_msgSend(v6, "setNeedsLayout");
}

void sub_100387E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v18[24];
  __int128 v19;
  __int128 v20;
  _BYTE v21[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v18, 0, 0);
      v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        v15 = v14;
        *((_QWORD *)&v20 + 1) = type metadata accessor for ProductReviewView();
        *(_QWORD *)&v19 = v15;
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v19, v9, a3);
      v16 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_1000131E0((uint64_t)&v19);
    }
  }
}

double sub_100387FA4(uint64_t a1, int a2, int a3, void *a4, __n128 a5)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  id v94;
  _BOOL4 v95;
  uint64_t v96;
  _QWORD *v97;
  void (*v98)(_QWORD);
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  char v108;
  _QWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  void (*v147)(char *, char *, uint64_t);
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  char v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  _QWORD *v169;
  char v170;
  BOOL v171;
  uint64_t v172;
  _QWORD *v173;
  char v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  char v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  Swift::String v195;
  unint64_t v196;
  Swift::String v197;
  Swift::String v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  char v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  __n128 v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  char v230;
  __n128 v231;
  uint64_t v232;
  BOOL v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  _QWORD *v238;
  void (*v239)(_QWORD *, char *, uint64_t);
  _QWORD *v240;
  _QWORD *v241;
  _QWORD *v242;
  _QWORD *v243;
  _QWORD *v244;
  _QWORD *v245;
  _QWORD *v246;
  char *v247;
  id v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t OpaqueTypeConformance2;
  uint64_t v254;
  void (*v255)(char *, uint64_t);
  __n128 v256;
  __n128 v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  __n128 v267;
  char *v268;
  uint64_t v269;
  __n128 v270;
  char *v271;
  char *v272;
  __n128 v273;
  char *v274;
  __n128 v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  __n128 v279;
  void (*v280)(char *, uint64_t);
  uint64_t v281;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _BOOL8 v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  _QWORD *v318;
  void (*v319)(char *, uint64_t, uint64_t);
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  id v325;
  int v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  void (*v332)(char *, char *, uint64_t);
  char *v333;
  char *v334;
  uint64_t v335;
  char *v336;
  char *v337;
  char *v338;
  char *v339;
  char *v340;
  char *v341;
  char *v342;
  char *v343;
  int v344;
  void (*v345)(_QWORD *, _QWORD, uint64_t);
  unsigned int v346;
  uint64_t v347;
  uint64_t v348;
  _BYTE v349[32];
  uint64_t v350;
  _BYTE v351[40];
  _QWORD v352[5];
  _QWORD v353[5];
  _QWORD v354[5];
  _QWORD v355[5];
  _QWORD v356[5];
  _QWORD v357[3];
  uint64_t v358;
  void *v359;
  _QWORD v360[5];
  _QWORD v361[3];
  uint64_t v362;
  _QWORD *v363;
  _QWORD v364[3];
  uint64_t v365;
  _QWORD *v366;
  _QWORD v367[3];
  uint64_t v368;
  _QWORD *v369;

  v6 = a5.n128_f64[0];
  v326 = a3;
  v344 = a2;
  v348 = a1;
  v313 = type metadata accessor for ProductReviewLayout.Metrics(0, a5);
  v292 = *(_QWORD *)(v313 - 8);
  __chkstk_darwin(v313);
  v294 = (char *)&v283 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v314 = type metadata accessor for ProductReviewLayout(0);
  v300 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v298 = (char *)&v283 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_100804470);
  v301 = *(_QWORD *)(v9 - 8);
  v302 = v9;
  __chkstk_darwin(v9);
  v299 = (char *)&v283 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ProductReviewCustomLayout.Metrics(0);
  v290 = *(_QWORD *)(v11 - 8);
  v291 = v11;
  v12 = __chkstk_darwin(v11);
  v293 = (char *)&v283 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ProductReviewCustomLayout(0, v12);
  v296 = *(_QWORD *)(v14 - 8);
  v297 = v14;
  v15 = __chkstk_darwin(v14);
  v295 = (char *)&v283 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v312 = type metadata accessor for LabelPlaceholder(0, v15);
  v315 = *(_QWORD *)(v312 - 8);
  __chkstk_darwin(v312);
  v324 = (char *)&v283 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v342 = (char *)&v283 - v19;
  __chkstk_darwin(v20);
  v343 = (char *)&v283 - v21;
  __chkstk_darwin(v22);
  v327 = (char *)&v283 - v23;
  __chkstk_darwin(v24);
  v328 = (char *)&v283 - v25;
  __chkstk_darwin(v26);
  v329 = (char *)&v283 - v27;
  __chkstk_darwin(v28);
  v330 = (char *)&v283 - v29;
  __chkstk_darwin(v30);
  v331 = (char *)&v283 - v31;
  v347 = type metadata accessor for FontUseCase(0);
  v318 = *(_QWORD **)(v347 - 8);
  __chkstk_darwin(v347);
  v309 = (char *)&v283 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v308 = (char *)&v283 - v34;
  __chkstk_darwin(v35);
  v304 = (char *)&v283 - v36;
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v283 - v39;
  v303 = type metadata accessor for DynamicTextAppearance(0, v38);
  v332 = *(void (**)(char *, char *, uint64_t))(v303 - 8);
  __chkstk_darwin(v303);
  v321 = (char *)&v283 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v310 = (char *)&v283 - v43;
  __chkstk_darwin(v44);
  v311 = (char *)&v283 - v45;
  __chkstk_darwin(v46);
  v337 = (char *)&v283 - v47;
  __chkstk_darwin(v48);
  v340 = (char *)&v283 - v49;
  __chkstk_darwin(v50);
  v320 = (char *)&v283 - v51;
  __chkstk_darwin(v52);
  v306 = (char *)&v283 - v53;
  __chkstk_darwin(v54);
  v307 = (char *)&v283 - v55;
  __chkstk_darwin(v56);
  v322 = (char *)&v283 - v57;
  __chkstk_darwin(v58);
  v316 = (char *)&v283 - v59;
  __chkstk_darwin(v60);
  v317 = (char *)&v283 - v61;
  __chkstk_darwin(v62);
  v305 = (char *)&v283 - v63;
  __chkstk_darwin(v64);
  v336 = (char *)&v283 - v65;
  __chkstk_darwin(v66);
  v339 = (char *)&v283 - v67;
  __chkstk_darwin(v68);
  v341 = (char *)&v283 - v69;
  __chkstk_darwin(v70);
  v333 = (char *)&v283 - v71;
  __chkstk_darwin(v72);
  v334 = (char *)&v283 - v73;
  __chkstk_darwin(v74);
  v323 = (char *)&v283 - v75;
  __chkstk_darwin(v76);
  v78 = (char *)&v283 - v77;
  __chkstk_darwin(v79);
  v81 = (char *)&v283 - v80;
  __chkstk_darwin(v82);
  v84 = (char *)&v283 - v83;
  __chkstk_darwin(v85);
  v87 = (char *)&v283 - v86;
  *(_QWORD *)&v89 = __chkstk_darwin(v88).n128_u64[0];
  v338 = (char *)&v283 - v90;
  v91 = objc_msgSend(a4, "traitCollection", v89);
  v92 = objc_msgSend(v91, "userInterfaceIdiom");

  v325 = a4;
  if (v92 == (id)1)
  {
    v93 = objc_msgSend(a4, "traitCollection");
    v94 = objc_msgSend(v93, "horizontalSizeClass");

    v95 = v94 == (id)2;
  }
  else
  {
    v95 = 0;
  }
  v96 = type metadata accessor for Feature.iOS(0);
  v368 = v96;
  v335 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v369 = (_QWORD *)v335;
  v97 = sub_1000117C0(v367);
  v98 = *(void (**)(_QWORD))(*(_QWORD *)(v96 - 8) + 104);
  v346 = enum case for Feature.iOS.review_summarization(_:);
  v345 = (void (*)(_QWORD *, _QWORD, uint64_t))v98;
  v98(v97);
  v99 = isFeatureEnabled(_:)(v367);
  v100 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  v101 = v347;
  if ((v99 & 1) == 0 && v95 && (v344 & 1) == 0 && (v326 & 1) == 0)
  {
    if (qword_1007F1940 != -1)
      swift_once(&qword_1007F1940, sub_10028F210);
    v102 = sub_1000117A8(v313, (uint64_t)qword_100853578);
    v103 = sub_10000E99C((unint64_t *)&qword_1007F53F0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReviewLayout, (uint64_t)&protocol conformance descriptor for ProductReviewLayout);
    return dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v102, v325, v314, v103, v6, 1.79769313e308);
  }
  v105 = Review.response.getter(v100);
  v106 = v105;
  if (v105)
    swift_release(v105);
  v289 = v106;
  DynamicTextAppearance.init()(v105);
  v368 = v96;
  v369 = (_QWORD *)v335;
  v107 = sub_1000117C0(v367);
  v345(v107, v346, v96);
  v108 = isFeatureEnabled(_:)(v367);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  v109 = v318;
  if ((v108 & 1) != 0)
  {
    if (qword_1007F23F8 != -1)
      swift_once(&qword_1007F23F8, sub_100414D74);
    v110 = qword_1008550D0;
  }
  else
  {
    if (qword_1007F2400 != -1)
      swift_once(&qword_1007F2400, sub_100414D8C);
    v110 = qword_1008550E8;
  }
  v111 = sub_1000117A8(v101, (uint64_t)v110);
  v319 = (void (*)(char *, uint64_t, uint64_t))v109[2];
  v319(v40, v111, v101);
  DynamicTextAppearance.withFontUseCase(_:)(v40);
  v318 = (_QWORD *)v109[1];
  ((void (*)(char *, uint64_t))v318)(v40, v101);
  v112 = (void (*)(char *, uint64_t))*((_QWORD *)v332 + 1);
  v113 = v303;
  v112(v81, v303);
  v114 = v344;
  v286 = (v344 & 1) == 0;
  DynamicTextAppearance.withNumberOfLines(_:)(v286);
  v112(v84, v113);
  if ((v114 & 1) != 0)
    v115 = 0;
  else
    v115 = 4;
  v285 = v115;
  DynamicTextAppearance.withLineBreakMode(_:)(v115);
  v116 = ((uint64_t (*)(char *, uint64_t))v112)(v87, v113);
  v117 = Review.title.getter(v116);
  v287 = v96;
  if (v117)
  {
    v118 = (void *)v117;
    v119 = ((uint64_t (*)(void))LanguageAwareString.string.getter)();
    v121 = v120;

  }
  else
  {
    v119 = 0;
    v121 = 0xE000000000000000;
  }
  v122 = v334;
  v123 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v332 + 2);
  v123(v78, v338, v113);
  v124 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v119, v121, v78, v124);
  v125 = type metadata accessor for LayoutViewPlaceholder(0);
  v126 = *(unsigned int *)(v125 + 48);
  v127 = *(unsigned __int16 *)(v125 + 52);
  v288 = v125;
  swift_allocObject(v125, v126, v127);
  v303 = LayoutViewPlaceholder.init(measureWith:)(sub_100387FA0, 0, v128);
  v129 = v333;
  DynamicTextAppearance.init()(v303);
  if (qword_1007F2418 != -1)
    swift_once(&qword_1007F2418, sub_100414DD4);
  v284 = sub_1000117A8(v347, (uint64_t)qword_100855130);
  DynamicTextAppearance.withFontUseCase(_:)(v284);
  v112(v129, v113);
  DynamicTextAppearance.withNumberOfLines(_:)(1);
  v112(v122, v113);
  v130 = v323;
  DynamicTextAppearance.withLineBreakMode(_:)(4);
  v131 = ((uint64_t (*)(char *, uint64_t))v112)(v78, v113);
  v132 = Review.dateText.getter(v131);
  if (v133)
    v134 = v132;
  else
    v134 = 0;
  if (v133)
    v135 = v133;
  else
    v135 = 0xE000000000000000;
  v332 = v123;
  v123(v78, v130, v113);
  v136 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v134, v135, v78, v136);
  DynamicTextAppearance.init()(v137);
  if (qword_1007F2420 != -1)
    swift_once(&qword_1007F2420, sub_100414DEC);
  v138 = sub_1000117A8(v347, (uint64_t)qword_100855148);
  DynamicTextAppearance.withFontUseCase(_:)(v138);
  v112(v129, v113);
  DynamicTextAppearance.withNumberOfLines(_:)(1);
  v112(v122, v113);
  DynamicTextAppearance.withLineBreakMode(_:)(4);
  v139 = ((uint64_t (*)(char *, uint64_t))v112)(v78, v113);
  v140 = Review.reviewerName.getter(v139);
  v141 = v287;
  if (v140)
  {
    v142 = (void *)v140;
    v143 = ((uint64_t (*)(void))LanguageAwareString.string.getter)();
    v145 = v144;

  }
  else
  {
    v143 = 0;
    v145 = 0xE000000000000000;
  }
  v146 = (_QWORD *)v335;
  v147 = v332;
  v332(v78, v341, v113);
  v148 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v143, v145, v78, v148);
  v149 = v333;
  DynamicTextAppearance.init()(v150);
  v151 = v334;
  if (qword_1007F2428 != -1)
    swift_once(&qword_1007F2428, sub_100414E04);
  v152 = sub_1000117A8(v347, (uint64_t)qword_100855160);
  DynamicTextAppearance.withFontUseCase(_:)(v152);
  v112(v149, v113);
  DynamicTextAppearance.withNumberOfLines(_:)(1);
  v112(v151, v113);
  DynamicTextAppearance.withLineBreakMode(_:)(4);
  v153 = ((uint64_t (*)(char *, uint64_t))v112)(v78, v113);
  v154 = Review.dateAuthorText.getter(v153);
  if (v154)
  {
    v155 = (void *)v154;
    v156 = ((uint64_t (*)(void))LanguageAwareString.string.getter)();
    v158 = v157;

  }
  else
  {
    v156 = 0;
    v158 = 0xE000000000000000;
  }
  v147(v78, v339, v113);
  v159 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v156, v158, v78, v159);
  DynamicTextAppearance.init()(v160);
  v368 = v141;
  v369 = v146;
  v161 = sub_1000117C0(v367);
  v345(v161, v346, v141);
  v162 = isFeatureEnabled(_:)(v367);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  if ((v162 & 1) != 0)
  {
    if (qword_1007F2410 != -1)
      swift_once(&qword_1007F2410, sub_100414DBC);
    v163 = qword_100855118;
  }
  else
  {
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v163 = qword_100854D40;
  }
  v164 = v347;
  v165 = sub_1000117A8(v347, (uint64_t)v163);
  v166 = v304;
  v319(v304, v165, v164);
  v167 = v316;
  DynamicTextAppearance.withFontUseCase(_:)(v166);
  ((void (*)(char *, uint64_t))v318)(v166, v164);
  v112(v167, v113);
  if ((v344 & 1) != 0)
  {
    v168 = 0;
  }
  else
  {
    v368 = v141;
    v369 = v146;
    if (v289)
    {
      v169 = sub_1000117C0(v367);
      v345(v169, v346, v141);
      v170 = isFeatureEnabled(_:)(v367);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
      v171 = (v170 & 1) == 0;
      v172 = 2;
    }
    else
    {
      v173 = sub_1000117C0(v367);
      v345(v173, v346, v141);
      v174 = isFeatureEnabled(_:)(v367);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
      v171 = (v174 & 1) == 0;
      v172 = 6;
    }
    if (v171)
      v168 = v172 + 1;
    else
      v168 = v172;
  }
  v175 = v305;
  v176 = v317;
  DynamicTextAppearance.withNumberOfLines(_:)(v168);
  v112(v176, v113);
  DynamicTextAppearance.withLineBreakMode(_:)(0);
  v177 = ((uint64_t (*)(char *, uint64_t))v112)(v175, v113);
  v178 = Review.contents.getter(v177);
  if (v178)
  {
    v179 = (void *)v178;
    v180 = ((uint64_t (*)(void))LanguageAwareString.string.getter)();
    v182 = v181;

  }
  else
  {
    v180 = 0;
    v182 = 0xE000000000000000;
  }
  v147(v78, v336, v113);
  v183 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v180, v182, v78, v183);
  DynamicTextAppearance.init()(v184);
  v368 = v141;
  v369 = v146;
  v185 = sub_1000117C0(v367);
  v345(v185, v346, v141);
  v186 = isFeatureEnabled(_:)(v367);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  if ((v186 & 1) != 0)
  {
    if (qword_1007F2408 != -1)
      swift_once(&qword_1007F2408, sub_100414DA4);
    v187 = qword_100855100;
  }
  else
  {
    if (qword_1007F2400 != -1)
      swift_once(&qword_1007F2400, sub_100414D8C);
    v187 = qword_1008550E8;
  }
  v188 = v347;
  v189 = sub_1000117A8(v347, (uint64_t)v187);
  v190 = v308;
  v319(v308, v189, v188);
  v191 = v306;
  v192 = v320;
  DynamicTextAppearance.withFontUseCase(_:)(v190);
  ((void (*)(char *, uint64_t))v318)(v190, v188);
  v112(v192, v113);
  v193 = v307;
  DynamicTextAppearance.withNumberOfLines(_:)(v286);
  v112(v191, v113);
  v194 = v322;
  DynamicTextAppearance.withLineBreakMode(_:)(v285);
  v112(v193, v113);
  v195._object = (void *)0x8000000100640240;
  v196 = 0xE000000000000000;
  v195._countAndFlagsBits = 0xD000000000000012;
  v197._countAndFlagsBits = 0;
  v197._object = (void *)0xE000000000000000;
  v198 = localizedString(_:comment:)(v195, v197);
  v332(v78, v194, v113);
  v199 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v198._countAndFlagsBits, v198._object, v78, v199);
  v200 = v333;
  DynamicTextAppearance.init()(v201);
  v202 = v334;
  DynamicTextAppearance.withFontUseCase(_:)(v284);
  v112(v200, v113);
  DynamicTextAppearance.withNumberOfLines(_:)(1);
  v112(v202, v113);
  DynamicTextAppearance.withLineBreakMode(_:)(4);
  v203 = ((uint64_t (*)(char *, uint64_t))v112)(v78, v113);
  v204 = Review.response.getter(v203);
  if (v204)
  {
    v205 = Response.dateText.getter();
    v207 = v206;
    swift_release(v204);
    v204 = v207 ? v205 : 0;
    if (v207)
      v196 = v207;
  }
  v208 = v324;
  v209 = v310;
  v332(v78, v340, v113);
  v210 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v204, v196, v78, v210);
  DynamicTextAppearance.init()(v211);
  v368 = v141;
  v369 = v146;
  v212 = sub_1000117C0(v367);
  v345(v212, v346, v141);
  v213 = isFeatureEnabled(_:)(v367);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  if ((v213 & 1) != 0)
  {
    if (qword_1007F2410 != -1)
      swift_once(&qword_1007F2410, sub_100414DBC);
    v214 = qword_100855118;
  }
  else
  {
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v214 = qword_100854D40;
  }
  v215 = v347;
  v216 = sub_1000117A8(v347, (uint64_t)v214);
  v217 = v309;
  v319(v309, v216, v215);
  v218 = v321;
  DynamicTextAppearance.withFontUseCase(_:)(v217);
  ((void (*)(char *, uint64_t))v318)(v217, v215);
  v112(v218, v113);
  if ((v326 & 1) != 0)
  {
    v219 = 0;
  }
  else
  {
    if (qword_1007F1968 != -1)
      swift_once(&qword_1007F1968, sub_10028FDF8);
    v219 = qword_1008535B8;
  }
  v220 = (_QWORD *)v335;
  v221 = v311;
  DynamicTextAppearance.withNumberOfLines(_:)(v219);
  v112(v209, v113);
  DynamicTextAppearance.withLineBreakMode(_:)(0);
  v222 = ((uint64_t (*)(char *, uint64_t))v112)(v221, v113);
  v223 = Review.response.getter(v222);
  if (v223)
  {
    v224 = (void *)Response.contents.getter();
    v225 = swift_release(v223);
    if (v224)
    {
      v223 = LanguageAwareString.string.getter(v225);
      v227 = v226;

      goto LABEL_92;
    }
    v223 = 0;
  }
  v227 = 0xE000000000000000;
LABEL_92:
  v332(v78, v337, v113);
  v228 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v223, v227, v78, v228);
  v368 = v141;
  v369 = v220;
  v229 = sub_1000117C0(v367);
  v345(v229, v346, v141);
  v230 = isFeatureEnabled(_:)(v367);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  if ((v230 & 1) != 0)
  {
    v232 = v289;
    if (qword_1007F1948 != -1)
      swift_once(&qword_1007F1948, sub_10028FA5C);
    v233 = v232 != 0;
    v234 = v291;
    v235 = sub_1000117A8(v291, (uint64_t)qword_100853590);
    v236 = v293;
    (*(void (**)(char *, uint64_t, uint64_t))(v290 + 16))(v293, v235, v234);
    v237 = v312;
    v368 = v312;
    v369 = &protocol witness table for LabelPlaceholder;
    v238 = sub_1000117C0(v367);
    v239 = *(void (**)(_QWORD *, char *, uint64_t))(v315 + 16);
    v239(v238, v331, v237);
    v365 = v237;
    v366 = &protocol witness table for LabelPlaceholder;
    v240 = sub_1000117C0(v364);
    v239(v240, v330, v237);
    v362 = v237;
    v363 = &protocol witness table for LabelPlaceholder;
    v241 = sub_1000117C0(v361);
    v239(v241, v329, v237);
    v360[3] = v237;
    v360[4] = &protocol witness table for LabelPlaceholder;
    v242 = sub_1000117C0(v360);
    v239(v242, v328, v237);
    v358 = v237;
    v359 = &protocol witness table for LabelPlaceholder;
    v243 = sub_1000117C0(v357);
    v239(v243, v327, v237);
    v356[3] = v237;
    v356[4] = &protocol witness table for LabelPlaceholder;
    v244 = sub_1000117C0(v356);
    v239(v244, v343, v237);
    v355[3] = v237;
    v355[4] = &protocol witness table for LabelPlaceholder;
    v245 = sub_1000117C0(v355);
    v239(v245, v342, v237);
    v354[3] = v237;
    v354[4] = &protocol witness table for LabelPlaceholder;
    v246 = sub_1000117C0(v354);
    v239(v246, v208, v237);
    v352[0] = v303;
    Measurable.placeable.getter(v353, v288, &protocol witness table for LayoutViewPlaceholder);
    v247 = v295;
    ProductReviewCustomLayout.init(metrics:titleLabel:dateLabel:authorLabel:dateAuthorLabel:bodyLabel:responseTitleLabel:responseDateLabel:responseBodyLabel:hasResponse:ratingsView:)(v236, v367, v364, v361, v360, v357, v356, v355, v354, v233, v353);
    v248 = objc_msgSend(v325, "traitCollection");
    v249 = sub_10000E99C((unint64_t *)&unk_100804480, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReviewCustomLayout, (uint64_t)&protocol conformance descriptor for ProductReviewCustomLayout);
    v250 = v299;
    v251 = v297;
    v252 = dispatch thunk of CustomLayout.layout.getter(v297, v249);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v252, &opaque type descriptor for <<opaque return type of ProductReviewCustomLayout.layout>>, 1);
    v254 = v302;
    v104 = dispatch thunk of Placeable.measure(toFit:with:)(v248, v302, OpaqueTypeConformance2, v6, 1.79769313e308);
    (*(void (**)(char *, uint64_t))(v301 + 8))(v250, v254);
    swift_release(v303);

    (*(void (**)(char *, uint64_t))(v296 + 8))(v247, v251);
    v255 = *(void (**)(char *, uint64_t))(v315 + 8);
    v255(v324, v237);
    v112(v337, v113);
    v255(v342, v237);
    v112(v340, v113);
    v255(v343, v237);
    v112(v322, v113);
    v255(v327, v237);
    v112(v336, v113);
    v255(v328, v237);
    v112(v339, v113);
    v255(v329, v237);
    v112(v341, v113);
    v255(v330, v237);
    v112(v323, v113);
    v255(v331, v237);
    v112(v338, v113);
  }
  else
  {
    LabelPlaceholder.layoutTextView.getter(v367, v231);
    LabelPlaceholder.layoutTextView.getter(v364, v256);
    LabelPlaceholder.layoutTextView.getter(v361, v257);
    if (!v289)
    {
      v258 = v368;
      v259 = v369;
      sub_100011064(v367, v368);
      dispatch thunk of LayoutView.isHidden.setter(1, v258, v259[1]);
      v260 = v365;
      v261 = v366;
      sub_100011064(v364, v365);
      dispatch thunk of LayoutView.isHidden.setter(1, v260, v261[1]);
      v262 = v362;
      v263 = v363;
      sub_100011064(v361, v362);
      dispatch thunk of LayoutView.isHidden.setter(1, v262, v263[1]);
    }
    if (qword_1007F1940 != -1)
      swift_once(&qword_1007F1940, sub_10028F210);
    v264 = v313;
    v265 = sub_1000117A8(v313, (uint64_t)qword_100853578);
    v266 = v294;
    v267.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v292 + 16))(v294, v265, v264);
    v268 = v331;
    LabelPlaceholder.layoutTextView.getter(v360, v267);
    v359 = &protocol witness table for LayoutViewPlaceholder;
    v358 = v288;
    v269 = v303;
    v357[0] = v303;
    v270 = swift_retain(v303);
    v271 = v330;
    LabelPlaceholder.layoutTextView.getter(v356, v270);
    v272 = v329;
    LabelPlaceholder.layoutTextView.getter(v355, v273);
    v274 = v327;
    LabelPlaceholder.layoutTextView.getter(v354, v275);
    sub_100011020((uint64_t)v367, (uint64_t)v353);
    sub_100011020((uint64_t)v364, (uint64_t)v352);
    sub_100011020((uint64_t)v361, (uint64_t)v351);
    v350 = 0;
    memset(v349, 0, sizeof(v349));
    v276 = v298;
    ProductReviewLayout.init(metrics:titleText:ratingView:dateText:authorText:bodyText:responseTitleText:responseDateText:responseBodyText:badgeText:actionViews:)(v266, v360, v357, v356, v355, v354, v353, v352, v351, v349, 0);
    v277 = sub_10000E99C((unint64_t *)&unk_10080AAE0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReviewLayout, (uint64_t)&protocol conformance descriptor for ProductReviewLayout);
    v278 = v314;
    v104 = dispatch thunk of Measurable.measurements(fitting:in:)(v325, v314, v277, v6, 1.79769313e308);
    v279 = swift_release(v269);
    (*(void (**)(char *, uint64_t, __n128))(v300 + 8))(v276, v278, v279);
    v280 = *(void (**)(char *, uint64_t))(v315 + 8);
    v281 = v312;
    v280(v324, v312);
    v112(v337, v113);
    v280(v342, v281);
    v112(v340, v113);
    v280(v343, v281);
    v112(v322, v113);
    v280(v274, v281);
    v112(v336, v113);
    v280(v328, v281);
    v112(v339, v113);
    v280(v272, v281);
    v112(v341, v113);
    v280(v271, v281);
    v112(v323, v113);
    v280(v268, v281);
    v112(v338, v113);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v361);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v364);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v367);
  }
  return v104;
}

double sub_100389958(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  double v8;
  __C::UIContentSizeCategory_optional v9;
  id v10;
  Class isa;
  void *v12;
  id v13;
  void (*v14)(char *, _QWORD, uint64_t);
  id v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD v29[2];
  __C::UIContentSizeCategory_optional v30;

  v2 = type metadata accessor for SystemImage(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1978 != -1)
    swift_once(&qword_1007F1978, sub_10028FEAC);
  v6 = sub_10000DF3C(&qword_1007F55F0);
  sub_1000117A8(v6, (uint64_t)qword_1008535C8);
  v29[0] = a1;
  *(_QWORD *)&v7 = Conditional.evaluate(with:)(v29, v6).n128_u64[0];
  v8 = *(double *)&v29[1];
  v10 = objc_msgSend(a1, "traitCollection", v7);
  if (qword_1007F1970 != -1)
    swift_once(&qword_1007F1970, sub_10028FE94);
  v30.is_nil = qword_1008535C0;
  v30.value._rawValue = 0;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v30, v9).super.isa;

  v12 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v13 = objc_msgSend(v12, "configurationWithTextStyle:scale:", UIFontTextStyleCaption2, 1);
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v14(v5, enum case for SystemImage.star(_:), v2);
  v15 = objc_msgSend(v13, "configurationWithTraitCollection:", isa);
  v16 = (void *)static SystemImage.load(_:with:)(v5, v15);

  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  objc_msgSend(v16, "contentInsets");
  v19 = v18;
  objc_msgSend(v16, "contentInsets");
  v21 = v19 + v20;
  objc_msgSend(v16, "size");
  v23 = v22 - v21;
  objc_msgSend(v16, "contentInsets");
  objc_msgSend(v16, "contentInsets");
  objc_msgSend(v16, "size");

  v24 = objc_msgSend(v12, "configurationWithTextStyle:scale:", UIFontTextStyleCaption2, 1);
  v14(v5, enum case for SystemImage.starFill(_:), v2);
  v25 = objc_msgSend(v24, "configurationWithTraitCollection:", isa);
  v26 = (void *)static SystemImage.load(_:with:)(v5, v25);

  v27 = ((uint64_t (*)(char *, uint64_t))v17)(v5, v2);
  UIImage.baselineOffsetFromBottom.getter(v27);
  objc_msgSend(v26, "contentInsets");

  return v8 * 4.0 + v23 * 5.0;
}

uint64_t sub_100389C88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100389CAC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100389CE0()
{
  uint64_t *v0;

  sub_100387E58(v0[2], v0[3], v0[4]);
}

uint64_t sub_100389CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DF3C(&qword_10080AC00);
  sub_100045464(v0, qword_10080AAF0);
  sub_1000117A8(v0, (uint64_t)qword_10080AAF0);
  v5 = 2;
  v4 = 8;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for UIRectEdge(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

void sub_100389D7C(void *a1, void *a2, char a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void *v15;
  _BYTE *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  id v70;
  id v71;
  char *v72;
  objc_super v73;
  __int128 v74;
  __int128 v75;
  unint64_t v76;

  v4 = v3;
  v70 = a1;
  v71 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = type metadata accessor for AutomationSemantics(0);
  v68 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v69 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_100804490);
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissTapGestureRecognizer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer] = 0;
  v13 = &v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures] = 0;
  v14 = &v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView]);
  v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissCompleted] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_scrollDismissInitialTranslationY] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_isScrollDismissActive] = 0;
  v15 = (void *)objc_opt_self(UIBlurEffect);
  v16 = v4;
  v17 = objc_msgSend(v15, "effectWithBlurRadius:", 50.0);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v17);

  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView] = v18;
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView] = v19;
  v20 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shadowView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v20)), "init");
  v21 = type metadata accessor for TransitioningPresentedContainerView();
  v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21)), "init");
  v23 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView;
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView] = v22;
  v16[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shouldUseReducedMotionTransition] = a3;
  v24 = type metadata accessor for Feature.iOS(0);
  *((_QWORD *)&v75 + 1) = v24;
  v76 = sub_1000365B4();
  v25 = sub_1000117C0(&v74);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v25, enum case for Feature.iOS.today_tab_largest_ax_support(_:), v24);
  LOBYTE(v24) = isFeatureEnabled(_:)(&v74);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v74);
  if ((v24 & 1) == 0)
  {
    v26 = *(id *)&v16[v23];
    objc_msgSend(v26, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);

  }
  v73.receiver = v16;
  v73.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v73, "initWithPresentedViewController:presentingViewController:", v70, v71);
  v28 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v29 = (char *)v27;
  v30 = objc_msgSend(v28, "initWithTarget:action:", v29, "dismissTapDidChange:");
  v31 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissTapGestureRecognizer;
  v32 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissTapGestureRecognizer];
  *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissTapGestureRecognizer] = v30;

  if (!*(_QWORD *)&v29[v31])
  {
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView], "addGestureRecognizer:");
  v33 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView;
  v34 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView];
  objc_msgSend(v34, "setUserInteractionEnabled:", 0);
  v35 = (void *)objc_opt_self(UIColor);
  v36 = v34;
  v37 = objc_msgSend(v35, "blackColor");
  objc_msgSend(v36, "setBackgroundColor:", v37);

  objc_msgSend(*(id *)&v29[v33], "setAlpha:", 0.0);
  v38 = objc_msgSend(objc_allocWithZone((Class)UIScreenEdgePanGestureRecognizer), "initWithTarget:action:", v29, "edgePanDidChange:");
  v39 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer;
  v40 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer];
  *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer] = v38;

  v41 = *(void **)&v29[v39];
  if (!v41)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v42 = qword_1007F1DF8;
  v43 = v41;
  if (v42 != -1)
    swift_once(&qword_1007F1DF8, sub_100389CEC);
  v44 = sub_10000DF3C(&qword_10080AC00);
  sub_1000117A8(v44, (uint64_t)qword_10080AAF0);
  v72 = v29;
  *(_QWORD *)&v45 = Conditional.evaluate(with:)(&v72, v44).n128_u64[0];
  objc_msgSend(v43, "setEdges:", (_QWORD)v74, v45);

  if (!*(_QWORD *)&v29[v39])
    goto LABEL_13;
  v46 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView;
  objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView], "addGestureRecognizer:");
  v47 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shadowView;
  if (qword_1007F1408 != -1)
    swift_once(&qword_1007F1408, sub_10015E3D0);
  v48 = type metadata accessor for Shadow(0);
  v49 = sub_1000117A8(v48, (uint64_t)qword_100852018);
  v50 = *(_QWORD *)(v48 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v12, v49, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v12, 0, 1, v48);
  dispatch thunk of ShadowView.shadow.setter(v12);
  v51 = objc_msgSend(*(id *)&v29[v47], "layer");
  objc_msgSend(v51, "setMaskedCorners:", 3);

  v52 = *(void **)&v29[v47];
  objc_msgSend(v52, "_setContinuousCornerRadius:", 14.0);
  objc_msgSend(v52, "setAutoresizingMask:", 18);
  v53 = v52;
  dispatch thunk of ShadowView.shouldAnimateBoundsChange.setter(1);

  v54 = *(void **)&v29[v46];
  objc_msgSend(v54, "setClipsToBounds:", 0);
  v55 = *(id *)&v29[v47];
  objc_msgSend(v54, "bounds");
  objc_msgSend(v55, "setFrame:");

  objc_msgSend(*(id *)&v29[v46], "addSubview:", *(_QWORD *)&v29[v47]);
  v74 = 0u;
  v75 = 0u;
  static AutomationSemantics.page(name:id:)(0x656C6369747261, 0xE700000000000000, &v74);
  sub_100011088((uint64_t)&v74, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v9);
  (*(void (**)(char *, _QWORD))(v68 + 8))(v9, v69);
  v56 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v57 = swift_allocObject(v56, 48, 7);
  v69 = xmmword_10066FBA0;
  *(_OWORD *)(v57 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v57 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v57 + 40) = &protocol witness table for UITraitLayoutDirection;
  v58 = swift_allocObject(&unk_10073B590, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16);
  v59 = swift_allocObject(&unk_10073B5B8, 32, 7);
  *(_QWORD *)(v59 + 16) = v58;
  *(_QWORD *)(v59 + 24) = ObjectType;
  v60 = v29;
  v61 = UIPresentationController.registerForTraitChanges<A>(_:handler:)(v57, sub_10038D2E4, v59, ObjectType);
  swift_unknownObjectRelease(v61);

  swift_bridgeObjectRelease(v57);
  swift_release(v59);
  v62 = swift_allocObject(v56, 48, 7);
  *(_OWORD *)(v62 + 16) = v69;
  *(_QWORD *)(v62 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v62 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v63 = swift_allocObject(&unk_10073B590, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16);
  v64 = swift_allocObject(&unk_10073B5E0, 32, 7);
  *(_QWORD *)(v64 + 16) = v63;
  *(_QWORD *)(v64 + 24) = ObjectType;
  v65 = v60;
  v66 = UIPresentationController.registerForTraitChanges<A>(_:handler:)(v62, sub_10038D2EC, v64, ObjectType);
  swift_unknownObjectRelease(v66);
  swift_bridgeObjectRelease(v62);
  swift_release(v64);

}

void sub_10038A544(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  char *Strong;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  _QWORD v14[2];
  char v15[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v15, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "traitCollection");
    v8 = objc_msgSend(v7, "layoutDirection");

    if (v8 == objc_msgSend(a2, "layoutDirection"))
    {

    }
    else
    {
      v9 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer];
      if (v9)
      {
        v10 = qword_1007F1DF8;
        v11 = v9;
        if (v10 != -1)
          swift_once(&qword_1007F1DF8, sub_100389CEC);
        v12 = sub_10000DF3C(&qword_10080AC00);
        sub_1000117A8(v12, (uint64_t)qword_10080AAF0);
        v14[0] = v6;
        *(_QWORD *)&v13 = Conditional.evaluate(with:)(v14, v12).n128_u64[0];
        objc_msgSend(v11, "setEdges:", v14[1], v13);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10038A680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10038CF58();

  }
}

void sub_10038A6D0(char a1)
{
  _BYTE *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _BYTE v11[24];
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[24];

  if (v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures] == (a1 & 1))
    return;
  v2 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissTapGestureRecognizer];
  if (!v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures])
  {
    if (v2)
    {
      objc_msgSend(v2, "setEnabled:", 1);
      v7 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer];
      if (v7)
      {
        v10 = v7;
        v8 = objc_msgSend(v1, "traitCollection");
        v9 = objc_msgSend(v8, "horizontalSizeClass");

        objc_msgSend(v10, "setEnabled:", v9 != (id)2);
        return;
      }
      goto LABEL_15;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v2, "setEnabled:", 0);
  v3 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer];
  if (!v3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v3, "setEnabled:", 0);
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal], v15, 0, 0);
  if (*(_QWORD *)(v4 + 24))
  {
    sub_100011020(v4, (uint64_t)&v12);
    v5 = *((_QWORD *)&v13 + 1);
    v6 = v14;
    sub_100011064(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v12);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  swift_beginAccess(v4, v11, 33, 0);
  sub_10038CE58((uint64_t)&v12, v4);
  swift_endAccess(v11);
}

void sub_10038A8EC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v45;
  uint64_t v46;
  uint64_t v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;

  v1 = type metadata accessor for PageGrid.Direction(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - v6;
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v0, "containerView", v10);
  if (!v13)
    return;
  v14 = v13;
  v47 = v9;
  v15 = objc_msgSend(v0, "traitCollection");
  v16 = objc_msgSend(v15, "horizontalSizeClass");

  if (v16 != (id)2)
  {
    objc_msgSend(v14, "bounds");

    return;
  }
  v46 = v8;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v7, enum case for PageGrid.Direction.vertical(_:), v1);
  v17 = objc_msgSend(v0, "presentingViewController");
  v18 = objc_msgSend(v17, "view");

  if (!v18)
  {
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v18, "bounds");
  v20 = v19;
  v22 = v21;

  v23 = objc_msgSend(v0, "presentingViewController");
  v24 = objc_msgSend(v23, "view");

  if (!v24)
  {
LABEL_17:
    __break(1u);
    return;
  }
  objc_msgSend(v24, "safeAreaInsets");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;

  v33 = objc_msgSend(v0, "presentingViewController");
  v34 = objc_msgSend(v33, "traitCollection");

  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1007F0F10 != -1)
    swift_once(&qword_1007F0F10, sub_100063300);
  v35 = qword_1007F6188;
  swift_bridgeObjectRetain(qword_1007F6188);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6972477961646F74, 0xE900000000000064, v4, 0, v35, v20, v22, v26, v28, v30, v32);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  v36 = objc_msgSend(v0, "presentingViewController");
  v37 = objc_msgSend(v36, "traitCollection");

  v39 = PageGrid.containerWidth.getter(v38);
  LOBYTE(v36) = UITraitCollection.isSizeClassRegular.getter(v40);

  if ((v36 & 1) != 0)
  {
    if (v39 + -160.0 <= 672.0)
      v39 = v39 + -160.0;
    else
      v39 = 672.0;
    if (v39 < 533.0)
      v39 = 533.0;
  }
  objc_msgSend(v14, "bounds");
  x = v48.origin.x;
  y = v48.origin.y;
  width = v48.size.width;
  height = v48.size.height;
  v45 = CGRectGetMidX(v48) + v39 * -0.5;
  v49.origin.x = x;
  v49.origin.y = y;
  v49.size.width = width;
  v49.size.height = height;
  CGRectGetMinY(v49);
  v50.origin.x = x;
  v50.origin.y = y;
  v50.size.width = width;
  v50.size.height = height;
  CGRectGetHeight(v50);

  sub_10038D1F0(v45);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v46);
}

void sub_10038AD58(void *a1, void *a2)
{
  char *v2;
  char *v3;
  void *v6;
  char v7;
  id v8;
  _BOOL8 v9;
  id v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  char *v15;
  id v16;
  id v17;
  _QWORD v18[5];
  _QWORD *v19;
  objc_super v20;

  v3 = v2;
  v20.receiver = v3;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  v6 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissSwipeGestureRecognizer];
  if (v6)
  {
    v7 = v3[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures];
    v8 = v6;
    v9 = (v7 & 1) == 0 && objc_msgSend(a1, "horizontalSizeClass") != (id)2;
    objc_msgSend(v8, "setEnabled:", v9);

    v10 = objc_msgSend(v3, "containerView");
    if (v10)
    {
      v11 = v10;
      v12 = (_QWORD *)swift_allocObject(&unk_10073B540, 40, 7);
      v12[2] = v3;
      v12[3] = a1;
      v12[4] = v11;
      v18[4] = sub_10038D290;
      v19 = v12;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 1107296256;
      v18[2] = sub_10033F618;
      v18[3] = &unk_10073B558;
      v13 = _Block_copy(v18);
      v14 = v19;
      v15 = v3;
      v16 = a1;
      v17 = v11;
      objc_msgSend(a2, "animateAlongsideTransition:completion:", v13, 0, swift_release(v14).n128_f64[0]);
      _Block_release(v13);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10038AED8(int a1, char *a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;

  v7 = objc_msgSend(a2, "presentedViewController");
  v18 = objc_msgSend(v7, "view");

  if (objc_msgSend(a3, "horizontalSizeClass") == (id)2)
  {
    if (v18)
    {
      v8 = *(void **)&a2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shadowView];
      v9 = v18;
      objc_msgSend(v8, "_continuousCornerRadius");
      objc_msgSend(v9, "_setContinuousCornerRadius:");

    }
  }
  else if (v18)
  {
    objc_msgSend(v18, "_setContinuousCornerRadius:", 0.0);
  }
  objc_msgSend(a4, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView], "setFrame:");
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView], "setFrame:", v11, v13, v15, v17);

}

void sub_10038B09C(void *a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  *(_BYTE *)(*(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView]
           + OBJC_IVAR____TtC22SubscribePageExtension35TransitioningPresentedContainerView_hidesInsertedSubviews) = 1;
  v7 = swift_allocObject(&unk_10073B4F0, 24, 7);
  *(_QWORD *)(v7 + 16) = v3;
  v11[4] = sub_10038D238;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10033F618;
  v11[3] = &unk_10073B508;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
}

void sub_10038B218()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;

  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v19 = v1;
    objc_msgSend(v1, "bounds");
    v3 = v2;
    v5 = v4;
    v7 = v6;
    v9 = v8;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView], "setFrame:");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView], "setFrame:", v3, v5, v7, v9);
    sub_10038A8EC();
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView];
    objc_msgSend(v18, "setFrame:", v11, v13, v15, v17);

  }
}

void sub_10038B368()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  double v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;

  v1 = v0;
  v2 = objc_msgSend(v0, "containerView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v12 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView];
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView], "setFrame:");
    v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView];
    objc_msgSend(v13, "setFrame:", v5, v7, v9, v11);
    objc_msgSend(v3, "addSubview:", v13);
    objc_msgSend(v3, "addSubview:", v12);
    v14 = objc_msgSend(v1, "presentedViewController");
    v15 = objc_msgSend(v14, "view");

    if (v15)
    {
      v16 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView];
      objc_msgSend(v16, "bounds");
      objc_msgSend(v15, "setFrame:");
      objc_msgSend(v15, "setAutoresizingMask:", 18);
      objc_msgSend(v16, "addSubview:", v15);

    }
    v17 = v13;
    v18 = v12;
    v19 = objc_msgSend(v1, "presentedViewController");
    v20 = objc_msgSend(v19, "view");

    if (v20)
    {
      v21 = &v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider];
      Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider]);
      v23 = *((_QWORD *)v21 + 1);
      v24 = objc_msgSend(v1, "traitCollection");
      v25 = v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shouldUseReducedMotionTransition];
      v26 = type metadata accessor for TodayTransitionCompanionAnimations();
      swift_allocObject(v26, 120, 7);
      v27 = sub_100284E88(v17, v18, v20, Strong, v23, (uint64_t)v24, v25);
      swift_unknownObjectRelease(Strong);
      v28 = objc_opt_self(UIView);
      v29 = swift_allocObject(&unk_10073B450, 32, 7);
      *(_QWORD *)(v29 + 16) = sub_10038D1B4;
      *(_QWORD *)(v29 + 24) = v27;
      v43 = sub_10006C410;
      v44 = v29;
      v39 = _NSConcreteStackBlock;
      v40 = 1107296256;
      v41 = sub_100101718;
      v42 = &unk_10073B468;
      v30 = _Block_copy(&v39);
      v31 = v44;
      swift_retain(v27);
      swift_retain(v29);
      objc_msgSend((id)v28, "performWithoutAnimation:", v30, swift_release(v31).n128_f64[0]);
      _Block_release(v30);
      LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v29, "", 145, 243, 40, 1);
      swift_release(v27);
      *(_QWORD *)&v32 = swift_release(v29).n128_u64[0];
      if ((v28 & 1) == 0)
      {
        v33 = objc_msgSend(v1, "presentingViewController", v32);
        v34 = objc_msgSend(v33, "transitionCoordinator");

        if (v34)
        {
          v43 = sub_10038D1CC;
          v44 = v27;
          v39 = _NSConcreteStackBlock;
          v40 = 1107296256;
          v41 = sub_10033F618;
          v42 = &unk_10073B490;
          v35 = _Block_copy(&v39);
          v36 = v44;
          swift_retain(v27);
          swift_release(v36);
          v43 = sub_10038D1D0;
          v44 = v27;
          v39 = _NSConcreteStackBlock;
          v40 = 1107296256;
          v41 = sub_10033F618;
          v42 = &unk_10073B4B8;
          v37 = _Block_copy(&v39);
          v38 = v44;
          swift_retain(v27);
          objc_msgSend(v34, "animateAlongsideTransition:completion:", v35, v37, swift_release(v38).n128_f64[0]);

          swift_release(v27);
          _Block_release(v37);
          _Block_release(v35);
          swift_unknownObjectRelease(v34);
        }
        else
        {

          swift_release(v27);
        }
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10038B7F0(char a1)
{
  char *v1;
  id v2;
  unsigned int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend(v1, "presentedViewController");
    v3 = objc_msgSend(v2, "isViewLoaded");

    if (v3)
    {
      v4 = objc_msgSend(v1, "presentedViewController");
      v7 = objc_msgSend(v4, "contentScrollView");

      sub_10038D0EC((uint64_t)v7);
    }
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView], "removeFromSuperview");
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView], "removeFromSuperview");
    v5 = objc_msgSend(v1, "presentedViewController");
    v8 = objc_msgSend(v5, "view");

    if (v8)
    {
      objc_msgSend(v8, "setClipsToBounds:", 0);
      v6 = objc_msgSend(v8, "layer");
      objc_msgSend(v6, "setMaskedCorners:", 15);

      objc_msgSend(v8, "_setContinuousCornerRadius:", 0.0);
    }
  }
}

void sub_10038B9AC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  double v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayBlurView];
  v3 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_overlayTintView];
  v4 = v2;
  v5 = objc_msgSend(v1, "presentedViewController");
  v6 = objc_msgSend(v5, "view");

  if (!v6)
    goto LABEL_7;
  v7 = &v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider]);
  v9 = *((_QWORD *)v7 + 1);
  v10 = objc_msgSend(v1, "traitCollection");
  v11 = v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shouldUseReducedMotionTransition];
  v12 = type metadata accessor for TodayTransitionCompanionAnimations();
  swift_allocObject(v12, 120, 7);
  v13 = sub_100284E88(v3, v4, v6, Strong, v9, (uint64_t)v10, v11);
  swift_unknownObjectRelease(Strong);
  v14 = objc_opt_self(UIView);
  v15 = swift_allocObject(&unk_10073B388, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10038CED4;
  *(_QWORD *)(v15 + 24) = v13;
  v31 = sub_100030368;
  v32 = v15;
  v27 = _NSConcreteStackBlock;
  v28 = 1107296256;
  v29 = sub_100101718;
  v30 = &unk_10073B3A0;
  v16 = _Block_copy(&v27);
  v17 = v32;
  swift_retain(v13);
  swift_retain(v15);
  objc_msgSend((id)v14, "performWithoutAnimation:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v15, "", 145, 261, 40, 1);
  swift_release(v13);
  *(_QWORD *)&v18 = swift_release(v15).n128_u64[0];
  if ((v14 & 1) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v19 = objc_msgSend(v1, "presentingViewController", v18);
  v20 = objc_msgSend(v19, "transitionCoordinator");

  if (v20)
  {
    v21 = swift_allocObject(&unk_10073B3D8, 32, 7);
    *(_QWORD *)(v21 + 16) = v13;
    *(_QWORD *)(v21 + 24) = v1;
    v31 = sub_10038CF30;
    v32 = v21;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10033F618;
    v30 = &unk_10073B3F0;
    v22 = _Block_copy(&v27);
    v23 = v32;
    swift_retain(v13);
    v24 = v1;
    swift_release(v23);
    v31 = sub_10038CF38;
    v32 = v13;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10033F618;
    v30 = &unk_10073B418;
    v25 = _Block_copy(&v27);
    v26 = v32;
    swift_retain(v13);
    objc_msgSend(v20, "animateAlongsideTransition:completion:", v22, v25, swift_release(v26).n128_f64[0]);
    swift_release(v13);
    _Block_release(v25);
    _Block_release(v22);
    swift_unknownObjectRelease(v20);
  }
  else
  {
    swift_release(v13);
  }
}

void sub_10038BCF4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  sub_100284558();
  v4 = objc_msgSend(a3, "presentedViewController");
  objc_msgSend(v4, "setNeedsStatusBarAppearanceUpdate");

}

void sub_10038BD4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__n128);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;

  v3 = a3();
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v11 = v3;
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (v5)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease_n(v4, 2);
    return;
  }
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v5)
    goto LABEL_15;
LABEL_3:
  if (v5 >= 1)
  {
    v6 = 0;
    while ((v4 & 0xC000000000000001) == 0)
    {
      v7 = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_retain(v7);
      v8 = *(void (**)(__n128))(v7 + 48);
      if (v8)
        goto LABEL_10;
LABEL_5:
      swift_release(v7);
      if (v5 == ++v6)
        goto LABEL_15;
    }
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
    v8 = *(void (**)(__n128))(v7 + 48);
    if (!v8)
      goto LABEL_5;
LABEL_10:
    v9 = *(_QWORD *)(v7 + 56);
    v10 = swift_retain(v9);
    v8(v10);
    sub_100019310((uint64_t)v8, v9);
    goto LABEL_5;
  }
  __break(1u);
}

void sub_10038BF84(void *a1)
{
  char *v1;
  char *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  double *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  __int128 v38;
  __int128 v39;
  _UNKNOWN **v40;
  _BYTE v41[24];
  CGRect v42;

  v2 = v1;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView], "frame");
  v4 = CGRectGetWidth(v42) * 0.28;
  objc_msgSend(a1, "translationInView:", 0);
  v6 = fabs(v5);
  if (v6 >= v4)
    v6 = v4;
  v7 = v6 / v4;
  switch((unint64_t)objc_msgSend(a1, "state"))
  {
    case 0uLL:
    case 4uLL:
    case 5uLL:
      goto LABEL_4;
    case 1uLL:
      v12 = sub_10000DF3C(&qword_1007F5840);
      v13 = swift_allocObject(v12, 48, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100671250;
      v14 = objc_msgSend(v2, "presentedViewController");
      v15 = objc_msgSend(v14, "view");

      if (!v15)
      {
        __break(1u);
        JUMPOUT(0x10038C3BCLL);
      }
      v17 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shadowView];
      *(_QWORD *)(v13 + 32) = v15;
      *(_QWORD *)(v13 + 40) = v17;
      *(_QWORD *)&v38 = v13;
      specialized Array._endMutation()(v16);
      v18 = v13;
      Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider]);
      if (Strong)
      {
        v20 = Strong;
        v21 = swift_unknownObjectWeakLoadStrong(Strong+ OBJC_IVAR____TtC22SubscribePageExtension33TodayArticleTransitioningDelegate_presentedViewController);
        if (v21)
        {
          v22 = v21;
          v23 = *(void **)(v21 + qword_100851200);
          v24 = v17;
          v25 = v23;
          swift_unknownObjectRelease(v20);
          swift_unknownObjectRelease(v22);
          v26 = swift_allocObject(v12, 40, 7);
          *(_OWORD *)(v26 + 16) = xmmword_10066FE60;
          *(_QWORD *)(v26 + 32) = v25;
          *(_QWORD *)&v38 = v26;
          specialized Array._endMutation()(v26);
          v27 = (double *)v38;
          goto LABEL_21;
        }
        v33 = v17;
        swift_unknownObjectRelease(v20);
      }
      else
      {
        v32 = v17;
      }
      v27 = _swiftEmptyArrayStorage;
LABEL_21:
      v34 = objc_msgSend(v2, "traitCollection");
      *((_QWORD *)&v39 + 1) = &type metadata for ScaleDownInteractiveDismissal;
      v40 = &off_1007270E8;
      v35 = swift_allocObject(&unk_10073B360, 56, 7);
      *(_QWORD *)&v38 = v35;
      *(_QWORD *)(v35 + 16) = v18;
      *(_QWORD *)(v35 + 24) = v27;
      *(_QWORD *)(v35 + 32) = v34;
      *(_BYTE *)(v35 + 40) = 1;
      *(_QWORD *)(v35 + 48) = 0x3FEA3D70A3D70A3DLL;
      v36 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
      swift_beginAccess(v36, v41, 33, 0);
      sub_10038CE58((uint64_t)&v38, v36);
      v11 = v41;
      goto LABEL_22;
    case 2uLL:
      if (v7 == 1.0)
        goto LABEL_15;
      v29 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
      swift_beginAccess(v29, v41, 0, 0);
      if (*(_QWORD *)(v29 + 24))
      {
        sub_100011020(v29, (uint64_t)&v38);
        v30 = *((_QWORD *)&v39 + 1);
        v31 = v40;
        sub_100011064(&v38, *((uint64_t *)&v39 + 1));
        ((void (*)(uint64_t, _UNKNOWN **, double))v31[2])(v30, v31, v7);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v38);
      }
      return;
    case 3uLL:
      if (v7 == 1.0)
      {
LABEL_15:
        v28 = objc_msgSend(v2, "presentedViewController");
        objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, 0);

        v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissCompleted] = 1;
      }
      else
      {
LABEL_4:
        if ((v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissCompleted] & 1) == 0)
        {
          v8 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
          swift_beginAccess(v8, v41, 0, 0);
          if (*(_QWORD *)(v8 + 24))
          {
            sub_100011020(v8, (uint64_t)&v38);
            v9 = *((_QWORD *)&v39 + 1);
            v10 = v40;
            sub_100011064(&v38, *((uint64_t *)&v39 + 1));
            ((void (*)(uint64_t, _UNKNOWN **))v10[4])(v9, v10);
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v38);
          }
          v40 = 0;
          v38 = 0u;
          v39 = 0u;
          swift_beginAccess(v8, v37, 33, 0);
          sub_10038CE58((uint64_t)&v38, v8);
          v11 = v37;
LABEL_22:
          swift_endAccess(v11);
        }
      }
      return;
    default:
      return;
  }
}

void sub_10038C428(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  __objc2_meth_list **p_base_meths;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  double *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  double *v59;
  uint64_t v60;
  uint64_t v61;
  _UNKNOWN **v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  _BYTE v75[24];
  _BYTE v76[24];
  __int128 v77;
  __int128 v78;
  _UNKNOWN **v79;
  CGRect v80;

  if ((v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures] & 1) != 0)
    return;
  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView]);
  if (!Strong)
    return;
  v74 = (id)Strong;
  v6 = OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_isScrollDismissActive;
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_isScrollDismissActive] == 1)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView], "frame");
    v7 = CGRectGetHeight(v80) * 0.18;
    objc_msgSend(a1, "translationInView:", 0);
    v9 = v8
       - *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_scrollDismissInitialTranslationY];
    if (v9 >= v7)
      v10 = v7;
    else
      v10 = v8
          - *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_scrollDismissInitialTranslationY];
    v11 = 0.0;
    if (v7 <= 0.0)
      v11 = v7;
    if (v9 < 0.0)
      v12 = v11;
    else
      v12 = v10;
    v13 = v12 / v7;
    switch((unint64_t)objc_msgSend(a1, "state"))
    {
      case 0uLL:
      case 4uLL:
      case 5uLL:
        goto LABEL_13;
      case 2uLL:
        if (v13 == 1.0)
          goto LABEL_32;
        v60 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
        swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal], v76, 0, 0);
        if (*(_QWORD *)(v60 + 24))
        {
          sub_100011020(v60, (uint64_t)&v77);
          v61 = *((_QWORD *)&v78 + 1);
          v62 = v79;
          sub_100011064(&v77, *((uint64_t *)&v78 + 1));
          ((void (*)(uint64_t, _UNKNOWN **, double))v62[2])(v61, v62, v13);

          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v77);
        }
        else
        {

        }
        return;
      case 3uLL:
        if (v13 == 1.0)
        {
LABEL_32:
          v43 = objc_msgSend(v1, "presentedViewController");
          objc_msgSend(v43, "dismissViewControllerAnimated:completion:", 1, 0);

          v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissCompleted] = 1;
        }
        else
        {
LABEL_13:
          if ((v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissCompleted] & 1) != 0)
            goto LABEL_28;
          v14 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
          swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal], v76, 0, 0);
          if (*(_QWORD *)(v14 + 24))
          {
            sub_100011020(v14, (uint64_t)&v77);
            v15 = *((_QWORD *)&v78 + 1);
            v16 = v79;
            sub_100011064(&v77, *((uint64_t *)&v78 + 1));
            ((void (*)(uint64_t, _UNKNOWN **))v16[4])(v15, v16);
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v77);
          }
          v79 = 0;
          v77 = 0u;
          v78 = 0u;
          swift_beginAccess(v14, v75, 33, 0);
          sub_10038CE58((uint64_t)&v77, v14);
          swift_endAccess(v75);
          v17 = (void *)swift_unknownObjectWeakLoadStrong(v4);
          if (v17)
          {
            v18 = v17;
            objc_msgSend(v17, "setShowsVerticalScrollIndicator:", 1);

          }
          v2[v6] = 0;
        }
        break;
      default:
        goto LABEL_28;
    }
    return;
  }
  if (objc_msgSend(a1, "state") != (id)1 && objc_msgSend(a1, "state") != (id)2
    || (objc_msgSend(v74, "contentOffset"), v20 = v19, objc_msgSend(v74, "adjustedContentInset"), v20 + v21 > 0.0)
    || (objc_msgSend(a1, "velocityInView:", v74), v22 <= 0.0))
  {
LABEL_28:

    return;
  }
  objc_msgSend(v74, "adjustedContentInset");
  objc_msgSend(v74, "contentOffset");
  objc_msgSend(v74, "setContentOffset:");
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  v24 = objc_msgSend(v1, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");

  if (v25 != (id)1)
  {
    v44 = sub_10000DF3C(&qword_1007F5840);
    v45 = swift_allocObject(v44, 48, 7);
    *(_OWORD *)(v45 + 16) = xmmword_100671250;
    v46 = objc_msgSend(v2, "presentedViewController");
    v47 = objc_msgSend(v46, "view");

    if (!v47)
    {
LABEL_53:
      __break(1u);
      JUMPOUT(0x10038CBC8);
    }
    v49 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shadowView];
    *(_QWORD *)(v45 + 32) = v47;
    *(_QWORD *)(v45 + 40) = v49;
    *(_QWORD *)&v77 = v45;
    specialized Array._endMutation()(v48);
    v50 = v45;
    v51 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider]);
    if (v51)
    {
      v52 = v51;
      v53 = swift_unknownObjectWeakLoadStrong(v51 + OBJC_IVAR____TtC22SubscribePageExtension33TodayArticleTransitioningDelegate_presentedViewController);
      if (v53)
      {
        v54 = v53;
        v55 = *(void **)(v53 + qword_100851200);
        v56 = v49;
        v57 = v55;
        swift_unknownObjectRelease(v52);
        swift_unknownObjectRelease(v54);
        v58 = swift_allocObject(v44, 40, 7);
        *(_OWORD *)(v58 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v58 + 32) = v57;
        *(_QWORD *)&v77 = v58;
        specialized Array._endMutation()(v58);
        v59 = (double *)v77;
LABEL_46:
        *((_QWORD *)&v78 + 1) = &type metadata for PullDownInteractiveDismissal;
        v79 = &off_100727110;
        *(_QWORD *)&v77 = v50;
        *((_QWORD *)&v77 + 1) = v59;
        *(_QWORD *)&v78 = 0x3FB1EB851EB851ECLL;
        goto LABEL_47;
      }
      v68 = v49;
      swift_unknownObjectRelease(v52);
    }
    else
    {
      v64 = v49;
    }
    v59 = _swiftEmptyArrayStorage;
    goto LABEL_46;
  }
  v26 = sub_10000DF3C(&qword_1007F5840);
  v27 = swift_allocObject(v26, 48, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100671250;
  v28 = objc_msgSend(v2, "presentedViewController");
  v29 = objc_msgSend(v28, "view");

  if (!v29)
  {
    __break(1u);
    goto LABEL_53;
  }
  v31 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_shadowView];
  *(_QWORD *)(v27 + 32) = v29;
  *(_QWORD *)(v27 + 40) = v31;
  *(_QWORD *)&v77 = v27;
  specialized Array._endMutation()(v30);
  v32 = v27;
  v33 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_transitioningViewProvider]);
  if (!v33)
  {
    v63 = v31;
LABEL_42:
    v42 = _swiftEmptyArrayStorage;
    goto LABEL_43;
  }
  v34 = v33;
  v35 = swift_unknownObjectWeakLoadStrong(v33 + OBJC_IVAR____TtC22SubscribePageExtension33TodayArticleTransitioningDelegate_presentedViewController);
  if (!v35)
  {
    v65 = v31;
    swift_unknownObjectRelease(v34);
    goto LABEL_42;
  }
  v36 = v35;
  v37 = *(void **)(v35 + qword_100851200);
  v38 = v31;
  v39 = v37;
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  v40 = v39;
  swift_unknownObjectRelease(v34);
  swift_unknownObjectRelease(v36);
  v41 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v41 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v41 + 32) = v40;
  *(_QWORD *)&v77 = v41;
  specialized Array._endMutation()(v41);
  v42 = (double *)v77;
LABEL_43:
  v66 = objc_msgSend(v2, (SEL)p_base_meths[471]);
  *((_QWORD *)&v78 + 1) = &type metadata for ScaleDownInteractiveDismissal;
  v79 = &off_1007270E8;
  v67 = swift_allocObject(&unk_10073B360, 56, 7);
  *(_QWORD *)&v77 = v67;
  *(_QWORD *)(v67 + 16) = v32;
  *(_QWORD *)(v67 + 24) = v42;
  *(_QWORD *)(v67 + 32) = v66;
  *(_BYTE *)(v67 + 40) = 1;
  *(_QWORD *)(v67 + 48) = 0x3FEA3D70A3D70A3DLL;
LABEL_47:
  v69 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal];
  swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_interactiveDismissal], v76, 33, 0);
  sub_10038CE58((uint64_t)&v77, v69);
  swift_endAccess(v76);
  v70 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (v70)
  {
    v71 = v70;
    objc_msgSend(v70, "setShowsVerticalScrollIndicator:", 0);

  }
  objc_msgSend(a1, "translationInView:", 0);
  v73 = v72;

  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_scrollDismissInitialTranslationY] = v73;
  v2[v6] = 1;
}

void sub_10038CCE0(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  char v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = *(_BYTE *)(Strong
                  + OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures);
    v5[OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_disableDismissGestures] = v2;
    sub_10038A6D0(v6);

  }
}

uint64_t type metadata accessor for ArticlePagePresentationController()
{
  return objc_opt_self(_TtC22SubscribePageExtension33ArticlePagePresentationController);
}

uint64_t sub_10038CE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100819CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038CEA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

void sub_10038CED4()
{
  uint64_t v0;

  sub_100284440(v0);
}

uint64_t sub_10038CEDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038CEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10038CEFC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10038CF04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10038CF30(uint64_t a1)
{
  uint64_t v1;

  sub_10038BCF4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10038CF38(uint64_t a1)
{
  uint64_t v1;

  sub_10038BD4C(a1, v1, sub_100283D10);
}

void sub_10038CF58()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, "traitCollection");
  if (objc_msgSend(v1, "userInterfaceIdiom") != (id)1 || (v2 = 0.0, objc_msgSend(v1, "horizontalSizeClass") != (id)1))
  {
    objc_msgSend(v1, "displayCornerRadius");
    v2 = v3;
  }

  v4 = objc_msgSend(v0, "presentedViewController");
  v5 = objc_msgSend(v4, "view");

  objc_msgSend(v5, "_setContinuousCornerRadius:", v2);
}

void sub_10038D034()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v4, "removeTarget:action:", v0, "scrollPanDidChange:");
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "_removeScrollViewScrollObserver:", v0);

  }
}

void sub_10038D0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  void *v8;
  id v9;

  sub_10038D034();
  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView;
  v4 = swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_dismissalScrollView, a1);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v7, "addTarget:action:", v1, "scrollPanDidChange:");
  }
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "_addScrollViewScrollObserver:", v1);

  }
}

void sub_10038D1B4()
{
  uint64_t v0;

  sub_100284428(v0);
}

uint64_t sub_10038D1BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10038D1D0(uint64_t a1)
{
  uint64_t v1;

  sub_10038BD4C(a1, v1, sub_100283738);
}

double sub_10038D1F0(double a1)
{
  return a1 + 0.0;
}

uint64_t sub_10038D214()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10038D238()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)
                       + OBJC_IVAR____TtC22SubscribePageExtension33ArticlePagePresentationController_presentedContainerView)
           + OBJC_IVAR____TtC22SubscribePageExtension35TransitioningPresentedContainerView_hidesInsertedSubviews) = 0;
}

uint64_t sub_10038D25C()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10038D290(int a1)
{
  uint64_t v1;

  sub_10038AED8(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10038D29C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038D2C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10038D2E4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_10038A544(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10038D2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10038A680(a1, a2, *(_QWORD *)(v2 + 16));
}

double *sub_10038D330()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  UIBarButtonItem v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t (*v47)();
  uint64_t v48;
  UIAction_optional v49;
  UIMenu_optional v50;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugMetricsEventRecorder(0, v2);
  BaseObjectGraph.optional<A>(_:)(&v42, v5, v5);
  v6 = v42;
  if (!v42)
    return _swiftEmptyArrayStorage;
  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  v7 = swift_retain(v42);
  State.init(wrappedValue:)(&v42, v41, &type metadata for String, v7);
  v40 = v0;
  v8 = v42;
  v9 = v43;
  v10 = v44;
  v11 = sub_10000DF3C(&qword_1007F5840);
  v39 = v1;
  v12 = v11;
  v13 = swift_allocObject(v11, 40, 7);
  v38 = xmmword_10066FE60;
  *(_OWORD *)(v13 + 16) = xmmword_10066FE60;
  sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
  sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
  v14 = swift_allocObject(&unk_10073B608, 24, 7);
  swift_weakInit(v14 + 16);
  v49.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10038D7F4, v14);
  v49.is_nil = 0;
  v15.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemTrash, v49, v50).super.super.isa;
  *(UIBarButtonItem *)(v13 + 32) = v15;
  v42 = v13;
  specialized Array._endMutation()(v15.super.super.isa);
  v16 = v42;
  v42 = v6;
  v43 = sub_1000BF54C;
  v44 = 0;
  v45 = 0;
  v46 = v8;
  v47 = v9;
  v48 = v10;
  v17 = objc_allocWithZone((Class)sub_10000DF3C(&qword_10080AC30));
  v18 = sub_10038D7FC(&v42, 0x7363697274654DLL, 0xE700000000000000, v16);
  swift_bridgeObjectRelease(v9);
  swift_release(v6);
  swift_release(v10);
  v19 = swift_allocObject(&unk_10073B630, 24, 7);
  *(_QWORD *)(v19 + 16) = v18;
  v20 = type metadata accessor for NavigationActionDebugSetting();
  swift_allocObject(v20, 104, 7);
  v21 = v18;
  v22 = sub_1004A9118(0xD000000000000013, 0x8000000100646AE0, 0, 0, (uint64_t)sub_10038DA90, v19);
  swift_release(v19);
  v23 = type metadata accessor for BoolUserDefaultsDebugSetting();
  swift_allocObject(v23, 97, 7);
  v24 = sub_1005FC4AC(0xD00000000000001ALL, 0x8000000100646B00, 0, 0xD000000000000018, 0x8000000100646B20, 0);
  v25 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v25 + 16) = v38;
  v26 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100671250;
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v24;
  v41[0] = v26;
  specialized Array._endMutation()(v26);
  v27 = v41[0];
  v28 = type metadata accessor for DebugSection();
  v29 = (_QWORD *)swift_allocObject(v28, 56, 7);
  swift_retain(v22);
  v30 = swift_retain(v24);
  v31 = UUID.init()(v30);
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  v35 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v4, v40);
  v29[2] = v32;
  v29[3] = v34;
  v29[4] = 0x7363697274654DLL;
  v29[5] = 0xE700000000000000;
  v29[6] = v27;
  *(_QWORD *)(v25 + 32) = v29;
  v41[0] = v25;
  specialized Array._endMutation()(v35);
  v36 = v41[0];
  swift_release(v6);

  swift_release(v22);
  swift_release(v24);
  return (double *)v36;
}

uint64_t sub_10038D72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    DebugMetricsEventRecorder.clear()();
    return swift_release(v4);
  }
  return result;
}

id sub_10038D780()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetricsSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MetricsSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension15MetricsSettings);
}

uint64_t sub_10038D7D0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038D7F4(uint64_t a1)
{
  uint64_t v1;

  return sub_10038D72C(a1, v1);
}

id sub_10038D7FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  id v14;
  id v15;
  double v16;
  NSString v17;
  id v18;
  Class isa;
  id v20;
  objc_super v22;
  _OWORD v23[3];
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char v30;

  v8 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x60);
  v9 = *a1;
  v29 = *(_OWORD *)(a1 + 1);
  v30 = *((_BYTE *)a1 + 24);
  v25 = *((_OWORD *)a1 + 2);
  v26 = a1[6];
  v28 = v25;
  sub_1000C0D84((uint64_t)&v26, (uint64_t)&v27);
  v10 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *((_OWORD *)v8 + 1) = v10;
  v12 = *(_OWORD *)a1;
  v11 = *((_OWORD *)a1 + 1);
  *((_OWORD *)v8 + 2) = *((_OWORD *)a1 + 2);
  *((_QWORD *)v8 + 6) = a1[6];
  v23[0] = v12;
  v23[1] = v11;
  v23[2] = *((_OWORD *)a1 + 2);
  v24 = a1[6];
  objc_allocWithZone((Class)sub_10000DF3C(&qword_10080AC38));
  swift_retain(v9);
  sub_1000ADB10((uint64_t)&v28);
  sub_10038DAA4((uint64_t *)&v29);
  sub_1000C0E9C(&v27);
  swift_retain(v9);
  sub_1000ADB10((uint64_t)&v28);
  sub_10038DAA4((uint64_t *)&v29);
  sub_1000C0E9C(&v27);
  v13 = v4;
  *(_QWORD *)((char *)v13 + *(_QWORD *)((swift_isaMask & *v13) + 0x68)) = UIHostingController.init(rootView:)(v23);

  v22.receiver = v13;
  v22.super_class = (Class)sub_10000DF3C(&qword_10080AC30);
  v14 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", 0, 0);
  v15 = objc_msgSend(v14, "navigationItem");
  if (a3)
  {
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v15, "setTitle:", v17, v16);

  v18 = objc_msgSend(v14, "navigationItem");
  sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(a4).n128_f64[0]);

  v20 = objc_msgSend(v14, "navigationItem");
  objc_msgSend(v20, "setLargeTitleDisplayMode:", 2);

  return v14;
}

uint64_t sub_10038DA6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10038DA90(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, "showViewController:sender:", *(_QWORD *)(v1 + 16), 0);
}

uint64_t *sub_10038DAA4(uint64_t *a1)
{
  sub_1000C0AE0(*a1, a1[1]);
  return a1;
}

ValueMetadata *type metadata accessor for ShareSheetActionImplementation()
{
  return &type metadata for ShareSheetActionImplementation;
}

unint64_t sub_10038DAE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080AC40;
  if (!qword_10080AC40)
  {
    v1 = type metadata accessor for ShareSheetAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080AC40);
  }
  return result;
}

uint64_t sub_10038DB30(uint64_t *a1, uint64_t a2)
{
  return sub_10038DB38(*a1, a2);
}

uint64_t sub_10038DB38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[4];
  _OWORD v64[2];
  uint64_t v65;

  v62 = a2;
  v59 = a1;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v2);
  v61 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DF3C(&qword_1007F78F0);
  v60 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v54 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowOrigin(0, v5);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowAnimationBehavior(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowPresentationContext(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActionMetrics(0, v17);
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FlowPage(0, v25);
  __chkstk_darwin(v28);
  v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  (*(void (**)(char *, _QWORD))(v31 + 104))(v30, enum case for FlowPage.shareSheet(_:));
  v32 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v27, 1, 1, v32);
  v33 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 1, 1, v33);
  v63[3] = type metadata accessor for ShareSheetAction(0);
  v63[0] = v59;
  swift_retain(v59);
  static ActionMetrics.notInstrumented.getter(v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FlowPresentationContext.infer(_:), v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v12, enum case for FlowAnimationBehavior.infer(_:), v56);
  v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v57 + 104))(v9, enum case for FlowOrigin.inapp(_:), v58);
  v36 = static FlowActionPresentation.stackPush.getter(v35);
  v38 = v37;
  v39 = type metadata accessor for FlowAction(0);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v52 = v23;
  v40 = v60;
  v41 = v30;
  v42 = v62;
  v43 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(v64, 0, 0, 0, v41, v27, 0, 0, v52, v63, v20, v16, v12, v9, 0, v36, v38);
  v44 = v61;
  BaseObjectGraph.optional<A>(_:)(v61, v4, v4);
  v45 = v44;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48))(v44, 1, v4) == 1)
  {
    sub_100037038((uint64_t)v44);
    sub_10000DF3C(&qword_100803510);
    v46 = sub_1000559B4();
    v47 = swift_allocError(&type metadata for GeneralActionImplementationError, v46, 0, 0);
    *v48 = 1;
    v49 = Promise.__allocating_init(error:)(v47);
  }
  else
  {
    v50 = (uint64_t)v54;
    (*(void (**)(char *, _QWORD *, uint64_t))(v40 + 32))(v54, v45, v4);
    v49 = sub_10008EB74(v43, v42, v50);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v50, v4);
  }
  swift_release(v43);
  return v49;
}

uint64_t sub_10038DFA4(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  char v7;

  v2 = v1;
  if (a1)
    v3 = objc_msgSend(a1, "superview");
  else
    v3 = 0;
  v4 = objc_msgSend(v2, "contentView");
  v5 = v4;
  if (v3)
  {
    if (v4)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v6 = v3;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

    }
    else
    {
      v7 = 0;
      v5 = v3;
    }
  }
  else
  {
    if (!v4)
    {
      v7 = 1;
      return v7 & 1;
    }
    v7 = 0;
  }

  return v7 & 1;
}

char *sub_10038E074(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  objc_class *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double left;
  double bottom;
  double right;
  char *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  _OWORD v30[2];
  objc_super v31[2];
  objc_super v32;

  v9 = type metadata accessor for AutomationSemantics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext];
  v14 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v4[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_shouldForcePortrait] = 0;
  v15 = &v4[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_artworkDisplaySize];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v16 = v4;
  static VideoConfiguration.defaultConfiguration.getter(v16);
  swift_unknownObjectWeakInit(&v16[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView]);
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BorderedScreenshotView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v17 = (objc_class *)type metadata accessor for ProductMediaItemCollectionViewCell(0);
  v32.receiver = v16;
  v32.super_class = v17;
  v18 = (char *)objc_msgSendSuper2(&v32, "initWithFrame:", a1, a2, a3, a4);
  v19 = OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView;
  v20 = *(char **)&v18[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v24 = v18;
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = *(void **)&v20[OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView];
  memset(v31, 0, sizeof(v31));
  memset(v30, 0, sizeof(v30));
  v26 = v25;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6B726F77747261, 0xE700000000000000, v31, v30);
  sub_100011088((uint64_t)v30, &qword_1007F6E90);
  sub_100011088((uint64_t)v31, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v27 = objc_msgSend(v24, "contentView");
  v28 = *(id *)&v18[v19];
  objc_msgSend(v27, "addSubview:", v28);

  return v24;
}

id sub_10038E40C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  Swift::Bool v4;
  uint64_t Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  double v10;
  char *v11;
  objc_super v13;
  UIImage_optional v14;

  v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ProductMediaItemCollectionViewCell(0);
  objc_msgSendSuper2(&v13, "prepareForReuse");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView];
  v3 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, v4);

  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView]);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(id *)(Strong + qword_10080FD18);

    v8 = objc_msgSend(v7, "layer");
    objc_msgSend(v8, "removeAllAnimations");

    objc_msgSend(v7, "setImage:", 0);
  }
  sub_10038ED68(0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform) = 0;
  swift_release(v9);
  v10 = sub_10022E900();
  v11 = &v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_artworkDisplaySize];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  return objc_msgSend(v1, "setNeedsLayout", v10);
}

void sub_10038E588()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  void *v27;
  id v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double MidX;
  uint64_t Strong;
  void *v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  objc_super v49;
  CGRect v50;
  CGRect v51;

  v1 = v0;
  v2 = type metadata accessor for AspectRatio(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for ProductMediaItemCollectionViewCell(0);
  v49.receiver = v1;
  v49.super_class = v6;
  v7 = objc_msgSendSuper2(&v49, "layoutSubviews");
  if ((v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_artworkDisplaySize + 16] & 1) != 0)
  {
    v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView];
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "bounds");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    objc_msgSend(v8, "setFrame:", v11, v13, v15, v17);
  }
  else
  {
    v18 = objc_msgSend(v1, "contentView", AspectRatio.init(_:_:)(v7).n128_f64[0]);
    objc_msgSend(v18, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;

    v26 = AspectRatio.height(fromWidth:)(v25, v24);
    v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView];
    objc_msgSend(v27, "setFrame:", v20, v22, v24, v26);
    v28 = objc_msgSend(v1, "contentView");
    objc_msgSend(v28, "bounds");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;

    v50.origin.x = v30;
    v50.origin.y = v32;
    v50.size.width = v34;
    v50.size.height = v36;
    MidX = CGRectGetMidX(v50);
    v51.origin.x = v30;
    v51.origin.y = v32;
    v51.size.width = v34;
    v51.size.height = v36;
    objc_msgSend(v27, "setCenter:", MidX, CGRectGetMidY(v51));
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView]);
  if (Strong)
  {
    v39 = (void *)Strong;
    v40 = objc_msgSend(v1, "contentView");
    objc_msgSend(v40, "bounds");
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;

    objc_msgSend(v39, "setFrame:", v42, v44, v46, v48);
  }
}

void sub_10038E84C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  int v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  double v17;
  id v18;
  id v19;
  id v20;
  Swift::Bool v21;
  _BYTE v22[24];
  UIImage_optional v23;

  if (a1)
  {
    v6 = a5 + 16;
    swift_beginAccess(a5 + 16, v22, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (char *)Strong;
      v9 = *(unsigned __int8 *)(Strong
                              + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_shouldForcePortrait);
      v10 = a1;
      v11 = v10;
      if (v9 == 1
        && (objc_msgSend(v10, "size"), v13 = v12, objc_msgSend(v11, "size"), v14 < v13)
        && (v15 = objc_msgSend(v11, "CGImage")) != 0)
      {
        v16 = v15;
        objc_msgSend(v11, "scale");
        v18 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v16, 2, v17);

      }
      else
      {
        v18 = v11;
      }
      v19 = objc_retain(*(id *)(*(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView]
                              + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView));
      v20 = v18;
      v23.value.super.isa = (Class)v18;
      v23.is_nil = 1;
      ArtworkView.show(image:isAnimationPermitted:)(v23, v21);

    }
  }
}

id sub_10038E9B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductMediaItemCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10038EA5C()
{
  return type metadata accessor for ProductMediaItemCollectionViewCell(0);
}

uint64_t type metadata accessor for ProductMediaItemCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080AC70;
  if (!qword_10080AC70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductMediaItemCollectionViewCell);
  return result;
}

void sub_10038EAA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = &unk_100687FA8;
    v6[3] = &unk_100687FC0;
    v4 = type metadata accessor for VideoConfiguration(319, v3);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = &unk_100687FD8;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

uint64_t sub_10038EB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10038F300(a1, a3);
}

uint64_t sub_10038EB5C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView);
}

void sub_10038EB6C(void *a1)
{
  sub_10038ED68((uint64_t)a1);

}

void (*sub_10038EB90(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView);
  return sub_10038EBD0;
}

void sub_10038EBD0(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10038ED68((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_10038ED68(*a1);
    v3 = v4;
  }

}

uint64_t sub_10038EC28(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100688060, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10038EC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100688060, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

void (*sub_10038ECA8(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(byte_100688060, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001DF34;
}

uint64_t sub_10038ED10()
{
  return sub_10000E99C(&qword_10080AC80, type metadata accessor for ProductMediaItemCollectionViewCell, (uint64_t)&unk_100687FF0);
}

uint64_t sub_10038ED3C()
{
  return sub_10000E99C(&qword_10080AC88, type metadata accessor for ProductMediaItemCollectionViewCell, (uint64_t)&unk_100688020);
}

void sub_10038ED68(uint64_t a1)
{
  char *v1;
  char *v3;
  void *Strong;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = &v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView]);
  v5 = Strong;
  if (Strong)
  {
    sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    Strong = v5;
  }
  v6 = sub_10038DFA4(Strong);

  if ((v6 & 1) != 0)
  {
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
  }
  v9 = swift_unknownObjectWeakAssign(v3, a1);
  v10 = swift_unknownObjectWeakLoadStrong(v9);
  if (v10)
  {
    v12 = (id)v10;
    v11 = objc_msgSend(v1, "contentView");
    objc_msgSend(v11, "addSubview:", v12);

    objc_msgSend(v1, "setNeedsLayout");
  }
}

void sub_10038EE7C(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *Strong;
  char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __n128 v50;
  id v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  id v57[2];
  uint64_t v58;
  _QWORD v59[3];
  _OWORD v60[2];
  uint64_t v61;

  v3 = v2;
  v6 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v6);
  v8 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VideoConfiguration(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AspectRatio(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011020(a1, (uint64_t)v60);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v19 = type metadata accessor for ProductMediaItem(0);
  v20 = swift_dynamicCast(v59, v60, v18, v19, 6);
  if ((_DWORD)v20)
  {
    v57[1] = a2;
    v58 = v59[0];
    v21 = ProductMediaItem.video.getter(v20);
    if (v21)
    {
      v22 = v21;
      Strong = (char *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView]);
      if (Strong)
      {
        v57[0] = Strong;
        v24 = &Strong[qword_100856360];
        v25 = swift_beginAccess(&Strong[qword_100856360], v59, 0, 0);
        v26 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v13, v24, v10, v25);
        VideoConfiguration.aspectRatio.getter(v26);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v8, v14);
          v36 = objc_msgSend(v3, "contentView");
          objc_msgSend(v36, "bounds");
          v38 = v37;
          v40 = v39;

          v41 = AspectRatio.maxSize(filling:)(v38, v40);
          v43 = v42;
          v45 = Video.preview.getter(v44);
          v46 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v41, v43);
          swift_release(v45);
          v47 = type metadata accessor for VideoView(0);
          v48 = sub_10000E99C((unint64_t *)&unk_1007F4810, type metadata accessor for VideoView, (uint64_t)"\t,\v");
          v49 = v57[0];
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v46, 2, 1, v57[0], v47, v48);
          swift_release(v58);
          swift_release(v46);

          v50 = swift_release(v22);
          (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v50);
          return;
        }

        swift_release(v22);
        v21 = sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007FA760);
      }
      else
      {
        swift_release(v22);
      }
    }
    v27 = v58;
    v28 = ProductMediaItem.screenshot.getter(v21);
    if (v28)
    {
      v29 = v28;
      if ((v3[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_shouldForcePortrait] & 1) != 0
        && (dispatch thunk of Artwork.isPortrait.getter(v28) & 1) == 0)
      {
        v51 = objc_msgSend(v3, "contentView");
        objc_msgSend(v51, "bounds");
        v32 = v52;

        v30 = objc_msgSend(v3, "contentView");
        objc_msgSend(v30, "bounds");
        v34 = v53;
      }
      else
      {
        v30 = objc_msgSend(v3, "contentView");
        objc_msgSend(v30, "bounds");
        v32 = v31;
        v34 = v33;
      }

      v54 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v32, v34);
      v61 = 0;
      memset(v60, 0, sizeof(v60));
      v55 = swift_allocObject(&unk_10073B6B8, 24, 7);
      swift_unknownObjectWeakInit(v55 + 16);
      v56 = swift_retain(v55);
      ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v54, 2, 1, v60, sub_10038F468, v55, v56);
      swift_release(v54);
      swift_release(v55);
      swift_release(v29);
      swift_release(v27);
      sub_100011088((uint64_t)v60, (uint64_t *)&unk_1007F9850);
      v35 = v55;
    }
    else
    {
      v35 = v27;
    }
    swift_release(v35);
  }
}

uint64_t sub_10038F300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t result;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  _BYTE v14[40];

  v13 = *(id *)(*(_QWORD *)(v2
                          + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView)
              + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
  v4 = type metadata accessor for ArtworkView(0);
  v5 = sub_10000E99C((unint64_t *)&qword_1007F8EB8, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for NSObject);
  v6 = v13;
  AnyHashable.init<A>(_:)(&v13, v4, v5);
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v14, a2);
  sub_100019370((uint64_t)v14);
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView);
  if (result)
  {
    v8 = (void *)result;
    v9 = *(id *)(result + qword_10080FD18);

    v13 = v9;
    v10 = sub_100019574(0, (unint64_t *)&qword_1007FE190, UIImageView_ptr);
    v11 = sub_100312EB8();
    v12 = v9;
    AnyHashable.init<A>(_:)(&v13, v10, v11);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v14, a2 & 1);

    return sub_100019370((uint64_t)v14);
  }
  return result;
}

uint64_t sub_10038F444()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10038F468(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10038E84C(a1, a2, a3, a4, v4);
}

uint64_t sub_10038F470()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer)
                            + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (!v1)
    return 0;
  v2 = type metadata accessor for VideoView(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
    v4 = v1;
  return v3;
}

uint64_t sub_10038F4DC(double a1, double a2)
{
  _QWORD v3[5];
  _QWORD v4[5];
  _QWORD v5[5];
  _QWORD v6[5];
  _QWORD v7[5];

  v7[3] = &type metadata for Double;
  v7[4] = &protocol witness table for Double;
  v6[4] = &protocol witness table for Double;
  v7[0] = 0x403E000000000000;
  v6[3] = &type metadata for Double;
  v6[0] = 0x4044000000000000;
  v5[3] = &type metadata for Double;
  v5[4] = &protocol witness table for Double;
  v4[4] = &protocol witness table for Double;
  v5[0] = 0x4044000000000000;
  v4[3] = &type metadata for Double;
  v3[4] = &protocol witness table for Double;
  v4[0] = 0x4024000000000000;
  v3[3] = &type metadata for Double;
  v3[0] = 0x4032000000000000;
  return PosterLockupLayout.Metrics.init(headingTopSpace:logoMargin:titleTopSpace:offerButtonTopSpace:footerTopSpace:footerBottomSpace:)(v7, v6, v5, v4, v3, a2 * 0.175, a1 * 0.1, a2 * 0.225);
}

id sub_10038F584()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artworkView);
}

double sub_10038F594()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "bounds");
  return v1;
}

void sub_10038F5BC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v11;
  uint64_t v12;
  NSString v13;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView];
  v2 = objc_msgSend(v1, "text");
  if (!v2)
  {
    v9 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle + 8];
    v8 = *(_QWORD *)v9;
LABEL_11:
    if (!v8)
      return;
    goto LABEL_12;
  }
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v5;

  v7 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle];
  v9 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle + 8];
  v8 = *(_QWORD *)v9;
  if (!v6)
    goto LABEL_11;
  if (!v8)
  {
    swift_bridgeObjectRelease(v6);
    v12 = *(_QWORD *)v9;
    if (*(_QWORD *)v9)
      goto LABEL_13;
    goto LABEL_16;
  }
  if (v4 == *(_QWORD *)v7 && v8 == v6)
  {
    swift_bridgeObjectRelease(v6);
    return;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, *(_QWORD *)v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  if ((v11 & 1) == 0)
  {
LABEL_12:
    v12 = *(_QWORD *)v9;
    if (*(_QWORD *)v9)
    {
LABEL_13:
      swift_bridgeObjectRetain(v12);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
LABEL_17:
      objc_msgSend(v1, "setText:", v13);

      objc_msgSend(v0, "setNeedsLayout");
      return;
    }
LABEL_16:
    v13 = 0;
    goto LABEL_17;
  }
}

id sub_10038F71C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __objc2_meth_list **p_base_meths;
  double v14;
  id result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  NSString v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  NSString v36;
  uint64_t v37;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText + 8];
  if (v10)
  {
    v11 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel;
    v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel];
    p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
    if (v12)
    {
      *(_QWORD *)&v14 = swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText
                                                              + 8]).n128_u64[0];
    }
    else
    {
      v16 = qword_1007F2298;
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText
                                            + 8]);
      if (v16 != -1)
        swift_once(&qword_1007F2298, sub_100413C00);
      v17 = type metadata accessor for FontUseCase(0);
      v18 = sub_1000117A8(v17, (uint64_t)qword_100854CB0);
      v19 = *(_QWORD *)(v17 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v9, v18, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v17);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
      v20 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
      v21 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v9, 1, 0, 1, 0, v5, 0, 0);
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "setText:", v22);

      v23 = qword_1007F0C80;
      v24 = v21;
      if (v23 != -1)
        swift_once(&qword_1007F0C80, sub_10004C9D8);
      objc_msgSend(v24, "setTextColor:", qword_1008508B0);

      objc_msgSend(v24, "setTextAlignment:", 1);
      objc_msgSend(v24, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
      v25 = v24;
      sub_100391048(v24);

      p_base_meths = &TodayCardChinLockupListView.base_meths;
      v26 = objc_msgSend(v1, "contentView");
      objc_msgSend(v26, "addSubview:", v25);

      v12 = *(void **)&v1[v11];
      if (!v12)
        goto LABEL_17;
    }
    v27 = objc_msgSend(v12, "layer", v14);
    v28 = objc_msgSend(v1, (SEL)p_base_meths[238]);
    v29 = objc_msgSend(v28, "overrideUserInterfaceStyle");

    v30 = &kCAFilterPlusD;
    if (v29 != (id)1)
      v30 = &kCAFilterPlusL;
    static String._unconditionallyBridgeFromObjectiveC(_:)(*v30);
    v32 = v31;
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "setCompositingFilter:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

    v34 = *(void **)&v1[v11];
    if (v34)
    {
      v35 = v34;
      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v35, "setText:", v36, swift_bridgeObjectRelease(v10).n128_f64[0]);

      result = *(id *)&v1[v11];
      if (!result)
        return result;
      return objc_msgSend(result, "setHidden:", 0);
    }
LABEL_17:
    swift_bridgeObjectRelease(v10);
    result = *(id *)&v1[v11];
    if (!result)
      return result;
    return objc_msgSend(result, "setHidden:", 0);
  }
  result = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel];
  if (result)
    return objc_msgSend(result, "setHidden:", 1, v7);
  return result;
}

void (*sub_10038FB10(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer);
  v4 = OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer;
  a1[1] = v3;
  a1[2] = v4;
  v5 = *(void **)(*(_QWORD *)(v3 + v4)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (v5)
  {
    v6 = type metadata accessor for VideoView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
      v8 = v5;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  return sub_10038FB98;
}

void sub_10038FB98(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  v7 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v7;
    v4 = v2;
    sub_10049A390(v7);

    v5 = v4;
  }
  else
  {
    v6 = v2;
    sub_10049A390(v7);

    v5 = v7;
  }

}

char *sub_10038FC10(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  uint64_t v69;
  id v70;
  void *v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  objc_class *ObjectType;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  objc_super v89;
  __int128 v90;
  __int128 v91;
  void *v92;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v86 = type metadata accessor for AutomationSemantics(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v85 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for DirectionalTextAlignment(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v82 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WordmarkView.Alignment(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v20);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = &v5[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_itemLayoutContext];
  v24 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = &v5[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v26 = &v5[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_video] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeadingArtwork] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artwork] = 0;
  v27 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_headingView;
  v28 = enum case for Wordmark.arcade(_:);
  v29 = type metadata accessor for Wordmark(0);
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v22, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v22, 0, 1, v29);
  *((_QWORD *)&v91 + 1) = &type metadata for Double;
  v92 = &protocol witness table for Double;
  *(_QWORD *)&v90 = 0x4028000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for WordmarkView.Alignment.leading(_:), v16);
  objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v31 = v5;
  *(_QWORD *)&v5[v27] = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v22, &v90, v19, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeaderView] = 0;
  v32 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView;
  if (qword_1007F2290 != -1)
    swift_once(&qword_1007F2290, sub_100413BDC);
  v33 = type metadata accessor for FontUseCase(0);
  v34 = sub_1000117A8(v33, (uint64_t)qword_100854C98);
  v35 = *(_QWORD *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v15, v34, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v15, 0, 1, v33);
  v36 = v82;
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v82, enum case for DirectionalTextAlignment.none(_:), v81);
  v37 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v31[v32] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 0, 1, 0, v36, 0, 0);
  v38 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_offerButton;
  v39 = type metadata accessor for OfferButton();
  *(_QWORD *)&v31[v38] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v39)), "init");
  v40 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artworkView;
  v41 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v31[v40] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v41)), "init");
  *(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel] = 0;
  v42 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_gradientView;
  *(_QWORD *)&v31[v42] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v43 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer;
  v44 = objc_allocWithZone((Class)type metadata accessor for MediaView());
  *(_QWORD *)&v31[v43] = sub_1004990CC(0.0, 0.0, 0.0, 0.0, 1.0, 0.0);

  v89.receiver = v31;
  v89.super_class = ObjectType;
  v45 = (char *)objc_msgSendSuper2(&v89, "initWithFrame:", a1, a2, a3, a4);
  v46 = objc_msgSend(v45, "contentView");
  objc_msgSend(v46, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v47 = objc_msgSend(v45, "contentView");
  objc_msgSend(v47, "_setCornerRadius:", 5.0);

  v48 = objc_msgSend(v45, "contentView");
  objc_msgSend(v48, "setClipsToBounds:", 1);

  v49 = objc_msgSend(v45, "contentView");
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v50 = (void *)static UIColor.placeholderBackground.getter();
  objc_msgSend(v49, "setBackgroundColor:", v50);

  v51 = objc_msgSend(v45, "contentView");
  v52 = objc_msgSend(v51, "layer");

  objc_msgSend(v52, "setAllowsGroupBlending:", 0);
  v53 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_gradientView;
  v54 = *(void **)&v45[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_gradientView];
  v55 = sub_10000DF3C(&qword_1007F5840);
  v56 = swift_allocObject(v55, 48, 7);
  *(_OWORD *)(v56 + 16) = xmmword_100671250;
  v57 = objc_allocWithZone((Class)UIColor);
  v58 = v54;
  *(_QWORD *)(v56 + 32) = objc_msgSend(v57, "initWithWhite:alpha:", 0.0, 0.0);
  v59 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.15);
  *(_QWORD *)(v56 + 40) = v59;
  *(_QWORD *)&v90 = v56;
  specialized Array._endMutation()(v59);
  v60 = *(_QWORD *)&v58[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  *(_QWORD *)&v58[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v90;
  swift_bridgeObjectRelease(v60);
  sub_10003B47C();

  v61 = objc_msgSend(v45, "contentView");
  objc_msgSend(v61, "addSubview:", *(_QWORD *)&v45[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer]);

  v62 = objc_msgSend(v45, "contentView");
  objc_msgSend(v62, "addSubview:", *(_QWORD *)&v45[v53]);

  v63 = objc_msgSend(v45, "contentView");
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v45[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_offerButton]);

  v64 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView;
  v65 = *(id *)&v45[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView];
  v66 = (void *)static UIColor.primaryText.getter(v65);
  objc_msgSend(v65, "setTextColor:", v66);

  v67 = *(void **)&v45[v64];
  objc_msgSend(v67, "setTextAlignment:", 1);
  objc_msgSend(v67, "setHidden:", 1);
  v68 = objc_msgSend(v45, "contentView");
  objc_msgSend(v68, "addSubview:", v67);

  v69 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_headingView;
  v70 = *(id *)&v45[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_headingView];
  v71 = (void *)static UIColor.primaryText.getter(v70);
  objc_msgSend(v70, "setTintColor:", v71);

  v90 = 0u;
  v91 = 0u;
  v87 = 0u;
  v88 = 0u;
  v72 = v85;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x676E6964616568, 0xE700000000000000, &v90, &v87);
  sub_100011088((uint64_t)&v87, &qword_1007F6E90);
  sub_100011088((uint64_t)&v90, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v72);
  v73 = *(void (**)(char *, uint64_t))(v84 + 8);
  v74 = v86;
  v73(v72, v86);
  v75 = objc_msgSend(v45, "contentView");
  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v45[v69]);

  v76 = *(void **)&v45[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artworkView];
  v90 = 0u;
  v91 = 0u;
  v87 = 0u;
  v88 = 0u;
  v77 = v76;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6B726F77747261, 0xE700000000000000, &v90, &v87);
  sub_100011088((uint64_t)&v87, &qword_1007F6E90);
  sub_100011088((uint64_t)&v90, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v72);

  v73(v72, v74);
  return v45;
}

uint64_t sub_100390554()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  char *v39;
  uint64_t v40;
  uint64_t inited;
  CGFloat v42;
  id v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  void *v55;
  _QWORD v56[5];
  _QWORD v57[5];
  __int128 v58;
  __int128 v59;
  void *v60;
  _QWORD v61[5];
  _QWORD v62[5];
  _QWORD v63[5];
  objc_super v64;
  CGRect v65;
  CGRect v66;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  v4 = __chkstk_darwin(v3);
  v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PosterLockupLayout.Metrics(0, v4);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PosterLockupLayout(0, v7);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v49 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64.receiver = v1;
  v64.super_class = ObjectType;
  objc_msgSendSuper2(&v64, "layoutSubviews", v11);
  objc_msgSend(v1, "bounds");
  v45 = v9;
  sub_10038F4DC(v13, v14);
  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_gradientView];
  v63[3] = type metadata accessor for GradientView();
  v63[4] = &protocol witness table for UIView;
  v44 = v15;
  v63[0] = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer];
  v62[3] = type metadata accessor for MediaView();
  v62[4] = &protocol witness table for UIView;
  v62[0] = v16;
  v17 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_headingView];
  v61[3] = type metadata accessor for WordmarkView(0);
  v61[4] = &protocol witness table for UIView;
  v61[0] = v17;
  v18 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeaderView];
  if (v18)
  {
    *((_QWORD *)&v59 + 1) = type metadata accessor for ArtworkView(0);
    v60 = &protocol witness table for UIView;
    *(_QWORD *)&v58 = v18;
  }
  else
  {
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
  }
  v19 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView];
  v20 = type metadata accessor for DynamicTypeLabel(0);
  v57[3] = v20;
  v57[4] = &protocol witness table for UILabel;
  v57[0] = v19;
  v21 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_offerButton];
  v56[3] = type metadata accessor for OfferButton();
  v56[4] = &protocol witness table for UIView;
  v56[0] = v21;
  v22 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel];
  if (v22)
  {
    *((_QWORD *)&v54 + 1) = v20;
    v55 = &protocol witness table for UIView;
    *(_QWORD *)&v53 = v22;
  }
  else
  {
    v55 = 0;
    v53 = 0u;
    v54 = 0u;
  }
  v23 = v18;
  v24 = v19;
  v25 = v21;
  v26 = v22;
  v44;
  v27 = v16;
  v28 = v17;
  v29 = v49;
  PosterLockupLayout.init(metrics:gradient:poster:header:logoArt:fallbackTitle:offerButton:footer:)(v45, v63, v62, v61, &v58, v57, v56, &v53);
  v30 = objc_msgSend(v1, "contentView");
  objc_msgSend(v30, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v39 = v46;
  PosterLockupLayout.placeChildren(relativeTo:in:)(v1, v32, v34, v36, v38);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v48);
  v40 = sub_10000DF3C(&qword_1007FB3B0);
  inited = swift_initStackObject(v40, &v52);
  *(_OWORD *)(inited + 16) = xmmword_10066F870;
  objc_msgSend(v1, "bounds");
  v42 = CGRectGetHeight(v65) + -88.0;
  objc_msgSend(v1, "bounds");
  *(CGFloat *)(inited + 32) = v42 / CGRectGetHeight(v66);
  *(_QWORD *)(inited + 40) = 0x3FF0000000000000;
  sub_10003B2E4(inited);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v29, v51);
}

id sub_100390908()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  objc_super v22;

  v1 = v0;
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, "prepareForReuse");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artwork];
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artwork] = 0;
  swift_release(v2);
  v3 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artworkView];
  ArtworkView.image.setter(0);

  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer];
  v5 = OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer;
  v6 = *(char **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
  v7 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents];
  *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents] = 0;
  v8 = v6;
  sub_100499CC4(v7);

  sub_10049920C();
  v9 = *(char **)(v4 + v5);
  v10 = *(void **)&v9[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents];
  *(_QWORD *)&v9[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents] = 0;
  v11 = v9;
  sub_100499CC4(v10);

  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_video];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_video] = 0;
  swift_release(v12);
  v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeaderView];
  if (v13)
  {
    v14 = v13;
    ArtworkView.image.setter(0);

  }
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeadingArtwork];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeadingArtwork] = 0;
  swift_release(v15);
  v16 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle];
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle + 8];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  swift_bridgeObjectRelease(v17);
  sub_10038F5BC();
  v18 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView];
  objc_msgSend(v18, "setHidden:", 1);
  objc_msgSend(v18, "setText:", 0);
  v19 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText];
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText + 8];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  swift_bridgeObjectRelease(v20);
  return sub_10038F71C();
}

uint64_t sub_100390AF0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

uint64_t sub_100390D4C()
{
  return type metadata accessor for PosterLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for PosterLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080ACD0;
  if (!qword_10080ACD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterLockupCollectionViewCell);
  return result;
}

void sub_100390D90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100688130;
    v4[2] = &unk_100688130;
    v4[3] = &unk_100688148;
    v4[4] = &unk_100688148;
    v4[5] = &unk_100688148;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = &unk_100688148;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = &unk_100688148;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
}

void sub_100390E34(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = objc_retain(*(id *)(*(_QWORD *)(v1
                                     + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer)
                         + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer));
  sub_10049A390(a1);

}

uint64_t (*sub_100390E88(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_10038FB10(v2);
  return sub_10001B55C;
}

uint64_t sub_100390ECC()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E99C(&qword_10080ACF0, type metadata accessor for PosterLockupCollectionViewCell, (uint64_t)&unk_1006881D0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100390F14(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C(&qword_10080ACF0, type metadata accessor for PosterLockupCollectionViewCell, (uint64_t)&unk_1006881D0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_100390F74(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E99C(&qword_10080ACF0, type metadata accessor for PosterLockupCollectionViewCell, (uint64_t)&unk_1006881D0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001B55C;
}

uint64_t sub_100390FF0()
{
  return sub_10000E99C(&qword_10080ACE0, type metadata accessor for PosterLockupCollectionViewCell, (uint64_t)&unk_100688160);
}

uint64_t sub_10039101C()
{
  return sub_10000E99C(&qword_10080ACE8, type metadata accessor for PosterLockupCollectionViewCell, (uint64_t)&unk_100688190);
}

void sub_100391048(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _OWORD v12[2];
  _OWORD v13[2];

  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel) = a1;
  v9 = a1;

  v10 = *(void **)(v1 + v7);
  if (v10)
  {
    memset(v13, 0, sizeof(v13));
    memset(v12, 0, sizeof(v12));
    v11 = v10;
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x614C7265746F6F66, 0xEB000000006C6562, v13, v12);
    sub_100011088((uint64_t)v12, &qword_1007F6E90);
    sub_100011088((uint64_t)v13, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v6);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_100391158()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[5];

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  __chkstk_darwin(v2);
  v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WordmarkView.Alignment(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_itemLayoutContext];
  v16 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitle];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerText];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_video] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeadingArtwork] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artwork] = 0;
  v19 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_headingView;
  v20 = enum case for Wordmark.arcade(_:);
  v21 = type metadata accessor for Wordmark(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v14, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v21);
  v40[3] = &type metadata for Double;
  v40[4] = &protocol witness table for Double;
  v40[0] = 0x4028000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for WordmarkView.Alignment.leading(_:), v8);
  v23 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  *(_QWORD *)&v1[v19] = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v14, v40, v11, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_epicHeaderView] = 0;
  v24 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_fallbackTitleView;
  if (qword_1007F2290 != -1)
    swift_once(&qword_1007F2290, sub_100413BDC);
  v25 = type metadata accessor for FontUseCase(0);
  v26 = sub_1000117A8(v25, (uint64_t)qword_100854C98);
  v27 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v7, v26, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v25);
  v28 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v39, enum case for DirectionalTextAlignment.none(_:), v38);
  v29 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v24] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 0, 0, 1, 0, v28, 0, 0);
  v30 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_offerButton;
  v31 = type metadata accessor for OfferButton();
  *(_QWORD *)&v1[v30] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v31)), "init");
  v32 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_artworkView;
  v33 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v1[v32] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v33)), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_footerLabel] = 0;
  v34 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_gradientView;
  *(_QWORD *)&v1[v34] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v35 = OBJC_IVAR____TtC22SubscribePageExtension30PosterLockupCollectionViewCell_mediaViewContainer;
  v36 = objc_allocWithZone((Class)type metadata accessor for MediaView());
  *(_QWORD *)&v1[v35] = sub_1004990CC(0.0, 0.0, 0.0, 0.0, 1.0, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/PosterLockupCollectionViewCell.swift", 59, 2, 168, 0);
  __break(1u);
}

unint64_t sub_100391574()
{
  uint64_t v0;
  uint64_t inited;
  unint64_t result;
  _BYTE v3[200];

  v0 = sub_10000DF3C((uint64_t *)&unk_100819F70);
  inited = swift_initStackObject(v0, v3);
  *(_OWORD *)(inited + 16) = xmmword_1006717F0;
  *(_QWORD *)(inited + 32) = 0x6E6F697469736F70;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(inited + 56) = 0x6E6564646968;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(inited + 80) = 0x49726564724F6E6FLL;
  *(_QWORD *)(inited + 88) = 0xE90000000000006ELL;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(inited + 104) = 0x4F726564724F6E6FLL;
  *(_QWORD *)(inited + 112) = 0xEA00000000007475;
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(inited + 128) = 0x726579616C627573;
  *(_QWORD *)(inited + 136) = 0xE900000000000073;
  *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(inited + 152) = 0x73746E65746E6F63;
  *(_QWORD *)(inited + 160) = 0xE800000000000000;
  *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(inited + 176) = 0x73646E756F62;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  *(_QWORD *)(inited + 192) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  result = sub_1003699D0(inited);
  qword_10080ACF8 = result;
  return result;
}

void sub_100391714()
{
  qword_10080AD00 = 0x4065C00000000000;
}

uint64_t sub_100391728(uint64_t a1)
{
  return sub_100391758(0.32, 0.0, a1, &qword_10080AD08);
}

uint64_t sub_100391740(uint64_t a1)
{
  return sub_100391758(0.0, 0.32, a1, &qword_10080AD10);
}

uint64_t sub_100391758(double a1, double a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v7 = sub_10000DF3C(&qword_1007F5840);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100671250;
  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "blackColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", a1);

  v12 = objc_msgSend(v11, "CGColor");
  *(_QWORD *)(v8 + 32) = v12;
  v13 = objc_msgSend(v9, "blackColor");
  v14 = objc_msgSend(v13, "colorWithAlphaComponent:", a2);

  v15 = objc_msgSend(v14, "CGColor");
  *(_QWORD *)(v8 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  *a4 = v8;
  return result;
}

char *sub_1003918A0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  double left;
  double bottom;
  double right;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  Class isa;
  id v22;
  objc_super v24;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_gradient;
  v10 = objc_allocWithZone((Class)CAGradientLayer);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v11[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsTopGradient] = 1;
  v11[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsBottomGradient] = 1;

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for HeroGradientView();
  v12 = objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v16 = (char *)v12;
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v16, "setUserInteractionEnabled:", 0);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_gradient;
  v18 = *(void **)&v16[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_gradient];
  objc_msgSend(v18, "setAnchorPoint:", 0.0, 0.0);
  v19 = qword_1007F1E00;
  v20 = v18;
  if (v19 != -1)
    swift_once(&qword_1007F1E00, sub_100391574);
  sub_10000DF3C((uint64_t *)&unk_100819F60);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "setActions:", isa);

  v22 = objc_msgSend(v16, "layer");
  objc_msgSend(v22, "addSublayer:", *(_QWORD *)&v16[v17]);

  sub_100391BEC();
  return v16;
}

id sub_100391BEC()
{
  _BYTE *v0;
  void *v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  Class v9;

  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsTopGradient] & 1) == 0
    && v0[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsBottomGradient] != 1)
  {
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_gradient], "setHidden:");
  }
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_gradient];
  objc_msgSend(v1, "setHidden:", 0);
  objc_msgSend(v0, "bounds");
  v4 = sub_100391D38(v2, v3);
  v6 = v5;
  sub_10012F63C();
  swift_bridgeObjectRetain(v4);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setLocations:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);
  swift_bridgeObjectRelease(v4);

  v8 = sub_100418F80(v6);
  swift_bridgeObjectRelease(v6);
  v9 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setColors:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  return objc_msgSend(v1, "setNeedsDisplay");
}

uint64_t sub_100391D38(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSNumber v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSNumber v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v3 = v2;
  if (qword_1007F1E08 != -1)
    swift_once(&qword_1007F1E08, sub_100391714);
  v5 = *(double *)&qword_10080AD00 / a2;
  v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v5);
  v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", 1.0 - v5);
  v8 = sub_10000DF3C(&qword_1007F5840);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10066FE60;
  sub_10012F63C();
  v10.super.super.isa = NSNumber.init(floatLiteral:)(0.0).super.super.isa;
  *(NSNumber *)(v9 + 32) = v10;
  v41 = v9;
  specialized Array._endMutation()(v10.super.super.isa);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsTopGradient;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsTopGradient) == 1)
  {
    v12 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
    specialized Array._endMutation()(v15);
    if (qword_1007F1E10 != -1)
      swift_once(&qword_1007F1E10, sub_100391728);
    swift_bridgeObjectRetain(qword_10080AD08);
    sub_100019D48(v16);
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsBottomGradient) & 1) == 0)
    {
      v17 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.0);

      v19 = objc_msgSend(v18, "CGColor");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v22 >= v21 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
      specialized Array._endMutation()(v23);
    }
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension16HeroGradientView_wantsBottomGradient) == 1)
  {
    v24 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);
    if ((*(_BYTE *)(v3 + v11) & 1) == 0)
    {
      v28 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      v29 = objc_msgSend(v28, "colorWithAlphaComponent:", 0.0);

      v30 = objc_msgSend(v29, "CGColor");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v33 >= v32 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
      specialized Array._endMutation()(v34);
    }
    if (qword_1007F1E18 != -1)
      swift_once(&qword_1007F1E18, sub_100391740);
    swift_bridgeObjectRetain(qword_10080AD10);
    sub_100019D48(v35);
  }
  v36.super.super.isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36.super.super.isa);
  v38 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v37 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v38 >= v37 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
  v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36.super.super.isa);
  specialized Array._endMutation()(v39);

  return v41;
}

id sub_100392198()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeroGradientView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeroGradientView()
{
  return objc_opt_self(_TtC22SubscribePageExtension16HeroGradientView);
}

id sub_1003921F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  __objc2_meth_list **p_base_meths;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __n128 v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;

  v4 = v3;
  v54 = a3;
  v53[1] = swift_getObjectType();
  v7 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  __chkstk_darwin(v7);
  v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_100804D10);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  if (a1)
  {
    v15 = type metadata accessor for Feature.iOS(0);
    v56 = v15;
    v57 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
    v16 = sub_1000117C0(v55);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v16, enum case for Feature.iOS.review_summarization(_:), v15);
    swift_retain(a1);
    LOBYTE(v15) = isFeatureEnabled(_:)(v55);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v55);
    v18 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton];
    if ((v15 & 1) != 0)
    {
      if (qword_1007F1F10 != -1)
        swift_once(&qword_1007F1F10, sub_1003CABE8);
      v19 = (void *)qword_1008544E8;
      v20 = Action.title.getter(v17);
      v22 = v21;
      sub_1003CA470(v19, v20, v21);
      swift_bridgeObjectRelease(v22);
      v23 = type metadata accessor for UIButton.Configuration(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
      UIButton.configuration.setter(v13);
      p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
    }
    else
    {
      Action.title.getter(v17);
      if (v25)
      {
        v27 = v25;
        v28 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
      }
      else
      {
        v28 = 0;
      }
      p_base_meths = &TodayCardChinLockupListView.base_meths;
      objc_msgSend(v18, "setTitle:forState:", v28, 0, v26);

    }
    objc_msgSend(v18, (SEL)p_base_meths[396], 0);
    v55[0] = a1;
    v29 = type metadata accessor for Action(0);
    v30 = type metadata accessor for ObjectGraph(0);
    v31 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    ComponentModel.pairedWith<A>(objectGraph:)(v54, v29, v30, v31);
    v32 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 0, 1, v32);
    v33 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewAction];
    swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewAction], v55, 33, 0);
    sub_100162C98((uint64_t)v9, v33);
    swift_endAccess(v55);
    swift_release(a1);
    if (a2)
      goto LABEL_13;
LABEL_7:
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton], (SEL)p_base_meths[396], 1);
    return objc_msgSend(v4, "setNeedsLayout", v24);
  }
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton], "setHidden:", 1, v11);
  if (!a2)
    goto LABEL_7;
LABEL_13:
  v34 = type metadata accessor for Feature.iOS(0);
  v56 = v34;
  v57 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v35 = sub_1000117C0(v55);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v35, enum case for Feature.iOS.review_summarization(_:), v34);
  swift_retain(a2);
  LOBYTE(v34) = isFeatureEnabled(_:)(v55);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v55);
  v37 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton];
  if ((v34 & 1) != 0)
  {
    if (qword_1007F1F18 != -1)
      swift_once(&qword_1007F1F18, sub_1003CABFC);
    v38 = (void *)qword_1008544F0;
    v39 = Action.title.getter(v36);
    v41 = v40;
    sub_1003CA470(v38, v39, v40);
    swift_bridgeObjectRelease(v41);
    v42 = type metadata accessor for UIButton.Configuration(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v13, 0, 1, v42);
    UIButton.configuration.setter(v13);
  }
  else
  {
    Action.title.getter(v36);
    if (v43)
    {
      v45 = v43;
      v46 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v44 = swift_bridgeObjectRelease(v45).n128_u64[0];
    }
    else
    {
      v46 = 0;
    }
    objc_msgSend(v37, "setTitle:forState:", v46, 0, v44);

  }
  objc_msgSend(v37, (SEL)p_base_meths[396], 0);
  v55[0] = a2;
  v47 = type metadata accessor for Action(0);
  v48 = type metadata accessor for ObjectGraph(0);
  v49 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  ComponentModel.pairedWith<A>(objectGraph:)(v54, v47, v48, v49);
  v50 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v9, 0, 1, v50);
  v51 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportAction];
  swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportAction], v55, 33, 0);
  sub_100162C98((uint64_t)v9, v51);
  swift_endAccess(v55);
  *(_QWORD *)&v24 = swift_release(a2).n128_u64[0];
  return objc_msgSend(v4, "setNeedsLayout", v24);
}

void sub_10039277C(void *a1, void *a2)
{
  char *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  objc_super v39;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = sub_10000DF3C(&qword_100804490);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissTapGestureRecognizer] = 0;
  v10 = &v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissalScrollView]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_scrollDismissInitialTranslationY] = 0;
  v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_isScrollDismissActive] = 0;
  v11 = (void *)objc_opt_self(UIBlurEffect);
  v12 = v3;
  v13 = objc_msgSend(v11, "effectWithStyle:", 4);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v13);

  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView] = v14;
  v15 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_shadowView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  v16 = type metadata accessor for TransitioningPresentedContainerView();
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");

  v39.receiver = v12;
  v39.super_class = ObjectType;
  v38 = a1;
  v17 = objc_msgSendSuper2(&v39, "initWithPresentedViewController:presentingViewController:", a1, a2);
  v18 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v19 = (char *)v17;
  v20 = objc_msgSend(v18, "initWithTarget:action:", v19, "dismissTapDidChange:");
  v21 = OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissTapGestureRecognizer;
  v22 = *(void **)&v19[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissTapGestureRecognizer];
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissTapGestureRecognizer] = v20;

  if (*(_QWORD *)&v19[v21])
  {
    objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView], "addGestureRecognizer:");
    v23 = OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_shadowView;
    if (qword_1007F1408 != -1)
      swift_once(&qword_1007F1408, sub_10015E3D0);
    v24 = type metadata accessor for Shadow(0);
    v25 = sub_1000117A8(v24, (uint64_t)qword_100852018);
    v26 = *(_QWORD *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v9, v25, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v9, 0, 1, v24);
    dispatch thunk of ShadowView.shadow.setter(v9);
    v27 = objc_msgSend(*(id *)&v19[v23], "layer");
    objc_msgSend(v27, "setMaskedCorners:", 3);

    v28 = *(void **)&v19[v23];
    objc_msgSend(v28, "_setContinuousCornerRadius:", 14.0);
    objc_msgSend(v28, "setAutoresizingMask:", 18);
    v29 = v28;
    dispatch thunk of ShadowView.shouldAnimateBoundsChange.setter(1);

    v30 = OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView;
    v31 = *(void **)&v19[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView];
    objc_msgSend(v31, "setClipsToBounds:", 0);
    v32 = *(id *)&v19[v23];
    objc_msgSend(v31, "bounds");
    objc_msgSend(v32, "setFrame:");

    v33 = *(void **)&v19[v30];
    v34 = *(void **)&v19[v23];
    v35 = v33;
    v36 = v34;
    objc_msgSend(v35, "addSubview:", v36);

  }
  else
  {
    __break(1u);
  }
}

void sub_100392BE4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double x;
  double y;
  double width;
  double height;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  double v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  CGRect v74;
  CGRect v75;

  v1 = v0;
  v2 = type metadata accessor for PageGrid.Direction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v72 - v7;
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(v1, "containerView", v11);
  if (!v14)
    return;
  v15 = v14;
  v73 = v10;
  v16 = objc_msgSend(v1, "traitCollection");
  v17 = objc_msgSend(v16, "horizontalSizeClass");

  if (v17 != (id)2)
  {
    v68 = objc_msgSend(v1, "presentingViewController");
    v69 = objc_msgSend(v68, "view");

    if (v69)
    {
      objc_msgSend(v69, "bounds");

      return;
    }
    goto LABEL_30;
  }
  v72 = v9;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for PageGrid.Direction.vertical(_:), v2);
  v18 = objc_msgSend(v1, "presentingViewController");
  v19 = objc_msgSend(v18, "view");

  if (!v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v19, "bounds");
  v21 = v20;
  v23 = v22;

  v24 = objc_msgSend(v1, "presentingViewController");
  v25 = objc_msgSend(v24, "view");

  if (!v25)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  objc_msgSend(v25, "safeAreaInsets");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v34 = objc_msgSend(v1, "presentingViewController");
  v35 = objc_msgSend(v34, "traitCollection");

  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  if (qword_1007F1898 != -1)
    swift_once(&qword_1007F1898, sub_10024F308);
  v36 = qword_100802E20;
  swift_bridgeObjectRetain(qword_100802E20);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x65656C426C6C7566, 0xE900000000000064, v5, 0, v36, v21, v23, v27, v29, v31, v33);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v37 = objc_msgSend(v1, "presentingViewController");
  v38 = objc_msgSend(v37, "traitCollection");

  v40 = PageGrid.containerWidth.getter(v39);
  LOBYTE(v37) = UITraitCollection.isSizeClassRegular.getter(v41);

  if ((v37 & 1) != 0)
  {
    v40 = v40 + -160.0 <= 672.0 ? v40 + -160.0 : 672.0;
    if (v40 < 533.0)
      v40 = 533.0;
  }
  objc_msgSend(v15, "safeAreaInsets");
  v44 = fmax(v43, 44.0);
  if (v42 < 0.0)
    v45 = 0.0;
  else
    v45 = v42;
  objc_msgSend(v15, "bounds");
  v74.origin.x = sub_1000F4FBC(v46, v47, v48, v49, v44, v45);
  x = v74.origin.x;
  y = v74.origin.y;
  width = v74.size.width;
  height = v74.size.height;
  v54 = CGRectGetHeight(v74);
  v55 = static CGRect.frame(centeredWithin:of:)(x, y, width, height, v40, v54);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v62 = objc_msgSend(v1, "presentedViewController");
  v63 = type metadata accessor for ComponentViewOverflowViewController();
  v64 = swift_dynamicCastClass(v62, v63);
  v65 = v73;
  if (v64)
  {
    v40 = sub_100440EB4(v59, v61);
    v67 = v66;

  }
  else
  {

    v70 = objc_msgSend(v1, "presentedViewController");
    v71 = type metadata accessor for ProductPageReviewsOverflowViewController(0);
    if (swift_dynamicCastClass(v70, v71))
    {
      v67 = sub_100554DD0();

    }
    else
    {

      v67 = v61;
      v40 = v59;
    }
  }
  v75.origin.x = v55;
  v75.origin.y = v57;
  v75.size.width = v59;
  v75.size.height = v61;
  if (CGRectGetHeight(v75) >= v67)
  {
    static CGRect.frame(centeredWithin:of:)(v55, v57, v59, v61, v40, v67);

  }
  else
  {
    objc_msgSend(v15, "safeAreaInsets");

    sub_1000F4FBC(v55, v57, v59, v61, 0.0, 0.0);
  }
  (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v72);
}

void sub_1003931F0(uint64_t a1, void *a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  v5 = objc_msgSend(v2, "containerView");
  if (v5)
  {
    v6 = v5;
    v7 = swift_allocObject(&unk_10073B8D8, 32, 7);
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v6;
    v12[4] = sub_100394B70;
    v13 = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10033F618;
    v12[3] = &unk_10073B8F0;
    v8 = _Block_copy(v12);
    v9 = v13;
    v10 = v2;
    v11 = v6;
    objc_msgSend(a2, "animateAlongsideTransition:completion:", v8, 0, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
}

void sub_100393304(int a1, char *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v5 = objc_msgSend(a2, "presentedViewController");
  v10 = objc_msgSend(v5, "view");

  v6 = objc_msgSend(a2, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  if (v7 == (id)2)
  {
    if (v10)
    {
      v8 = *(void **)&a2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_shadowView];
      v9 = v10;
      objc_msgSend(v8, "_continuousCornerRadius");
      objc_msgSend(v9, "_setContinuousCornerRadius:");

    }
  }
  else if (v10)
  {
    objc_msgSend(v10, "_setContinuousCornerRadius:", 0.0);
  }
  objc_msgSend(a3, "bounds");
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView], "setFrame:");

}

void sub_1003934A0(void *a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  *(_BYTE *)(*(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView]
           + OBJC_IVAR____TtC22SubscribePageExtension35TransitioningPresentedContainerView_hidesInsertedSubviews) = 1;
  v7 = swift_allocObject(&unk_10073B888, 24, 7);
  *(_QWORD *)(v7 + 16) = v3;
  v11[4] = sub_100394B20;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10033F618;
  v11[3] = &unk_10073B8A0;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
}

void sub_10039361C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  id v13;
  void *v14;
  double MaxY;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  id v21;
  objc_super v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v1 = v0;
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, "containerViewWillLayoutSubviews");
  v2 = objc_msgSend(v0, "containerView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView], "setFrame:");
    v4 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView];
    sub_100392BE4();
    objc_msgSend(v4, "setFrame:");

    objc_msgSend(v4, "frame");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = objc_msgSend(v0, "containerView");
    if (!v13)
    {
LABEL_12:

      return;
    }
    v14 = v13;
    v27.origin.x = 0.0;
    v27.origin.y = 0.0;
    v27.size.width = 0.0;
    v27.size.height = 0.0;
    v23.origin.x = v6;
    v23.origin.y = v8;
    v23.size.width = v10;
    v23.size.height = v12;
    if (CGRectEqualToRect(v23, v27)
      || (objc_msgSend(v14, "bounds"),
          v28.origin.x = 0.0,
          v28.origin.y = 0.0,
          v28.size.width = 0.0,
          v28.size.height = 0.0,
          CGRectEqualToRect(v24, v28)))
    {
LABEL_11:

      v3 = v14;
      goto LABEL_12;
    }
    objc_msgSend(v14, "bounds");
    MaxY = CGRectGetMaxY(v25);
    objc_msgSend(v14, "safeAreaInsets");
    v17 = MaxY - v16;
    v26.origin.x = v6;
    v26.origin.y = v8;
    v26.size.width = v10;
    v26.size.height = v12;
    v18 = CGRectGetMaxY(v26);
    v19 = objc_msgSend(v1, "presentedViewController");
    v20 = objc_msgSend(v19, "view");

    if (v17 >= v18)
    {
      if (v20)
      {
        v21 = objc_msgSend(v20, "layer");

        objc_msgSend(v21, "setMaskedCorners:", 15);
        goto LABEL_10;
      }
    }
    else
    {
      if (v20)
      {
        v21 = objc_msgSend(v20, "layer");

        objc_msgSend(v21, "setMaskedCorners:", 3);
LABEL_10:

        v3 = v14;
        v14 = v21;
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1003938D8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v18 = v1;
    objc_msgSend(v1, "bounds");
    v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView];
    objc_msgSend(v2, "setFrame:");
    objc_msgSend(v18, "addSubview:", v2);
    v3 = objc_msgSend(v0, "presentedViewController");
    v4 = objc_msgSend(v3, "view");

    if (v4)
    {
      objc_msgSend(v4, "setClipsToBounds:", 1);
      objc_msgSend(v4, "setAutoresizingMask:", 18);
      v5 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView];
      objc_msgSend(v5, "bounds");
      objc_msgSend(v4, "setFrame:");
      v6 = objc_msgSend(v4, "layer");
      v7 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_shadowView];
      v8 = objc_msgSend(v7, "layer");
      v9 = objc_msgSend(v8, "maskedCorners");

      objc_msgSend(v6, "setMaskedCorners:", v9);
      objc_msgSend(v7, "_cornerRadius");
      objc_msgSend(v4, "_setCornerRadius:");
      objc_msgSend(v5, "addSubview:", v4);
      v10 = objc_msgSend(v0, "presentedViewController");
      v11 = objc_msgSend(v10, "contentScrollView");

      sub_100394A58((uint64_t)v11);
    }
    v12 = objc_msgSend(v0, "presentingViewController");
    v13 = objc_msgSend(v12, "transitionCoordinator");

    objc_msgSend(v2, "setAlpha:", 0.0);
    if (v13)
    {
      v14 = swift_allocObject(&unk_10073B838, 24, 7);
      *(_QWORD *)(v14 + 16) = v0;
      aBlock[4] = sub_100394998;
      v20 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10033F618;
      aBlock[3] = &unk_10073B850;
      v15 = _Block_copy(aBlock);
      v16 = v20;
      swift_unknownObjectRetain(v13);
      v17 = v0;
      objc_msgSend(v13, "animateAlongsideTransition:completion:", v15, 0, swift_release(v16).n128_f64[0]);

      swift_unknownObjectRelease(v13);
      _Block_release(v15);
      swift_unknownObjectRelease(v13);
    }
    else
    {

    }
  }
}

void sub_100393BFC(uint64_t a1, char *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView], "setAlpha:", 1.0);
  v3 = objc_msgSend(a2, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (id)1)
  {
    v5 = objc_msgSend(a2, "presentedViewController");
    v6 = objc_msgSend(v5, "view");

    if (v6)
    {
      objc_msgSend(v6, "_setCornerRadius:", 0.0);

    }
  }
}

void sub_100393D1C(char a1)
{
  char *v1;
  id v2;
  id v3;
  id v4;

  if ((a1 & 1) == 0)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView], "removeFromSuperview");
    v2 = objc_msgSend(v1, "presentedViewController");
    v4 = objc_msgSend(v2, "view");

    if (v4)
    {
      objc_msgSend(v4, "setClipsToBounds:", 0);
      v3 = objc_msgSend(v4, "layer");
      objc_msgSend(v3, "setMaskedCorners:", 15);

      objc_msgSend(v4, "_setCornerRadius:", 0.0);
    }
  }
}

double sub_100393E44()
{
  void *v0;
  id v1;
  id v2;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = objc_msgSend(v0, "presentingViewController");
  v2 = objc_msgSend(v1, "transitionCoordinator");

  if (v2)
  {
    v4 = swift_allocObject(&unk_10073B7E8, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v8[4] = sub_100394978;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_10033F618;
    v8[3] = &unk_10073B800;
    v5 = _Block_copy(v8);
    v6 = v9;
    swift_unknownObjectRetain(v2);
    v7 = v0;
    objc_msgSend(v2, "animateAlongsideTransition:completion:", v5, 0, swift_release(v6).n128_f64[0]);
    swift_unknownObjectRelease(v2);
    _Block_release(v5);
    *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  }
  return result;
}

void sub_100393F4C(uint64_t a1, char *a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_overlayView], "setAlpha:", 0.0);
  v3 = *(void **)&a2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_shadowView];
  objc_msgSend(v3, "setAlpha:", 0.0);
  v4 = objc_msgSend(a2, "presentedViewController");
  v5 = objc_msgSend(v4, "view");

  if (v5)
  {
    objc_msgSend(v3, "_cornerRadius");
    objc_msgSend(v5, "_setCornerRadius:");

  }
  v6 = objc_msgSend(a2, "presentedViewController");
  v7 = objc_msgSend(v6, "view");

  if (v7)
  {
    v8 = objc_msgSend(v7, "layer");

    objc_msgSend(v8, "setMaskedCorners:", 15);
  }
  v9 = objc_msgSend(a2, "presentedViewController");
  objc_msgSend(v9, "setNeedsStatusBarAppearanceUpdate");

}

uint64_t sub_100394100()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v8 = objc_msgSend(v0, "presentedViewController");
  v1 = sub_1000531A4();
  v2 = sub_10000DF3C(&qword_10080ADD0);
  if ((swift_dynamicCast(v6, &v8, v1, v2, 6) & 1) != 0)
  {
    sub_100010F3C(v6, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    sub_100011064(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
  }
  else
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    return sub_100011088((uint64_t)v6, &qword_10080ADD8);
  }
}

uint64_t sub_1003941D0()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v8 = objc_msgSend(v0, "presentedViewController");
  v1 = sub_1000531A4();
  v2 = sub_10000DF3C(&qword_10080ADD0);
  if ((swift_dynamicCast(v6, &v8, v1, v2, 6) & 1) != 0)
  {
    sub_100010F3C(v6, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    sub_100011064(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
  }
  else
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    return sub_100011088((uint64_t)v6, &qword_10080ADD8);
  }
}

void sub_100394330(void *a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  _UNKNOWN **v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  id v34;
  id v35;
  _BYTE v36[24];
  _BYTE v37[24];
  __int128 v38;
  __int128 v39;
  _UNKNOWN **v40;
  CGRect v41;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissalScrollView]);
  if (Strong)
  {
    v35 = (id)Strong;
    v5 = OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_isScrollDismissActive;
    if (v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_isScrollDismissActive] == 1)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView], "frame");
      v6 = CGRectGetHeight(v41) * 0.14;
      objc_msgSend(a1, "translationInView:", 0);
      v8 = v7
         - *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_scrollDismissInitialTranslationY];
      if (v8 >= v6)
        v9 = v6;
      else
        v9 = v7
           - *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_scrollDismissInitialTranslationY];
      v10 = 0.0;
      if (v6 <= 0.0)
        v10 = v6;
      if (v8 < 0.0)
        v11 = v10;
      else
        v11 = v9;
      v12 = v11 / v6;
      switch((unint64_t)objc_msgSend(a1, "state"))
      {
        case 0uLL:
        case 4uLL:
        case 5uLL:
          goto LABEL_12;
        case 2uLL:
          v31 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal];
          swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal], v37, 0, 0);
          if (*(_QWORD *)(v31 + 24))
          {
            sub_100011020(v31, (uint64_t)&v38);
            v32 = *((_QWORD *)&v39 + 1);
            v33 = v40;
            sub_100011064(&v38, *((uint64_t *)&v39 + 1));
            ((void (*)(uint64_t, _UNKNOWN **, double))v33[2])(v32, v33, v12);

            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v38);
          }
          else
          {

          }
          return;
        case 3uLL:
          if (v12 == 1.0)
          {
            v34 = objc_msgSend(v1, "presentedViewController");
            objc_msgSend(v34, "dismissViewControllerAnimated:completion:", 1, 0);

            goto LABEL_26;
          }
LABEL_12:
          v13 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal];
          swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal], v37, 0, 0);
          if (*(_QWORD *)(v13 + 24))
          {
            sub_100011020(v13, (uint64_t)&v38);
            v14 = *((_QWORD *)&v39 + 1);
            v15 = v40;
            sub_100011064(&v38, *((uint64_t *)&v39 + 1));
            ((void (*)(uint64_t, _UNKNOWN **))v15[4])(v14, v15);

            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v38);
          }
          else
          {

          }
          v40 = 0;
          v38 = 0u;
          v39 = 0u;
          swift_beginAccess(v13, v36, 33, 0);
          sub_10038CE58((uint64_t)&v38, v13);
          swift_endAccess(v36);
          v1[v5] = 0;
          break;
        default:
          goto LABEL_26;
      }
    }
    else if (objc_msgSend(a1, "state") == (id)1
           && (v16 = objc_msgSend(v1, "traitCollection"),
               v17 = objc_msgSend(v16, "horizontalSizeClass"),
               v16,
               v17 == (id)2)
           && (objc_msgSend(v35, "contentOffset"), v19 = v18,
                                                   objc_msgSend(v35, "adjustedContentInset"),
                                                   v19 + v20 <= 0.0))
    {
      objc_msgSend(v35, "adjustedContentInset");
      objc_msgSend(v35, "contentOffset");
      objc_msgSend(v35, "setContentOffset:");
      v21 = sub_10000DF3C(&qword_1007F5840);
      v22 = swift_allocObject(v21, 48, 7);
      *(_OWORD *)(v22 + 16) = xmmword_100671250;
      v23 = objc_msgSend(v2, "presentedViewController");
      v24 = objc_msgSend(v23, "view");

      if (!v24)
      {
        __break(1u);
        JUMPOUT(0x10039479CLL);
      }
      v26 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_shadowView];
      *(_QWORD *)(v22 + 32) = v24;
      *(_QWORD *)(v22 + 40) = v26;
      *(_QWORD *)&v38 = v22;
      specialized Array._endMutation()(v25);
      v40 = &off_100727110;
      *((_QWORD *)&v38 + 1) = _swiftEmptyArrayStorage;
      *(_QWORD *)&v39 = 0x3FB1EB851EB851ECLL;
      *((_QWORD *)&v39 + 1) = &type metadata for PullDownInteractiveDismissal;
      v27 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal];
      swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_interactiveDismissal], v37, 33, 0);
      v28 = v26;
      sub_10038CE58((uint64_t)&v38, v27);
      objc_msgSend(a1, "translationInView:", 0, swift_endAccess(v37).n128_f64[0]);
      v30 = v29;

      *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_scrollDismissInitialTranslationY] = v30;
      v2[v5] = 1;
    }
    else
    {
LABEL_26:

    }
  }
}

uint64_t type metadata accessor for ComponentViewOverflowPresentationController()
{
  return objc_opt_self(_TtC22SubscribePageExtension43ComponentViewOverflowPresentationController);
}

uint64_t sub_100394954()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100394978(uint64_t a1)
{
  uint64_t v1;

  sub_100393F4C(a1, *(char **)(v1 + 16));
}

uint64_t sub_100394980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100394990(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100394998(uint64_t a1)
{
  uint64_t v1;

  sub_100393BFC(a1, *(char **)(v1 + 16));
}

void sub_1003949A0()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissalScrollView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissalScrollView);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v4, "removeTarget:action:", v0, "scrollPanDidChange:");
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "_removeScrollViewScrollObserver:", v0);

  }
}

void sub_100394A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  void *v8;
  id v9;

  sub_1003949A0();
  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissalScrollView;
  v4 = swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_dismissalScrollView, a1);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v7, "addTarget:action:", v1, "scrollPanDidChange:");
  }
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "_addScrollViewScrollObserver:", v1);

  }
}

void sub_100394B20()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)
                       + OBJC_IVAR____TtC22SubscribePageExtension43ComponentViewOverflowPresentationController_presentedContainerView)
           + OBJC_IVAR____TtC22SubscribePageExtension35TransitioningPresentedContainerView_hidesInsertedSubviews) = 0;
}

uint64_t sub_100394B44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100394B70(int a1)
{
  uint64_t v1;

  sub_100393304(a1, *(char **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100394B98(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  void *v5;
  double MinY;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;
  uint64_t v22;
  CGRect v23;
  CGRect v24;

  objc_msgSend(a1, "contentOffset");
  v4 = v3;
  v5 = *(void **)(v1 + 16);
  objc_msgSend(v5, "frame");
  MinY = CGRectGetMinY(v23);
  objc_msgSend(v5, "frame");
  v7 = CGRectGetHeight(v24) * -0.5 - MinY;
  if (*(_BYTE *)(v1 + 24) != v7 < v4)
  {
    *(_BYTE *)(v1 + 24) = v7 < v4;
    v8 = objc_retain(*(id *)(v1
                           + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection));
    objc_msgSend(a1, "_verticalVelocity");
    v10 = fabs(v9);
    v11 = v10 / 5.0;
    if (v10 >= 5.0)
      v11 = 1.0;
    v12 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, v11);
    v13 = sub_10000DF3C(&qword_1007F8D38);
    AccessibilityConditional.value(with:)(&v22, v8, v13);
    if (v7 >= v4)
    {
      v14 = v22;
    }
    else
    {
      v14 = 0;
      LOBYTE(v22) = 0;
    }
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_10073B928, 25, 7);
    *(_QWORD *)(v16 + 16) = v5;
    *(_BYTE *)(v16 + 24) = v14;
    aBlock[4] = sub_1000ADEBC;
    v21 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_10073B940;
    v17 = _Block_copy(aBlock);
    v18 = v21;
    v19 = v5;
    swift_release(v18);
    objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 4, v17, 0, v12, 0.0);
    _Block_release(v17);

  }
}

uint64_t sub_100394D88()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0
     + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_editorialButtonStyle;
  v2 = sub_10000DF3C(&qword_1007F8D38);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection));
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100394DF4()
{
  return type metadata accessor for ArticleCloseButtonAppearanceCoordinator(0);
}

uint64_t type metadata accessor for ArticleCloseButtonAppearanceCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_10080AE08;
  if (!qword_10080AE08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArticleCloseButtonAppearanceCoordinator);
  return result;
}

void sub_100394E38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_100688338;
  sub_100394EBC(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_100394EBC(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080AE18)
  {
    v2 = sub_1000AD1C0();
    v3 = type metadata accessor for AccessibilityConditional(a1, &type metadata for CardHeaderButton.Style, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080AE18);
  }
}

uint64_t sub_100394F18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100394F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100394F4C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_100394F54(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  objc_class *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  id v26;
  double left;
  double bottom;
  double right;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  objc_super v39;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for FontUseCase(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_primaryLabel;
  v16 = qword_1007F2628;
  v17 = v5;
  if (v16 != -1)
    swift_once(&qword_1007F2628, sub_100416554);
  v18 = sub_1000117A8(v11, (uint64_t)qword_100855760);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v14, v18, v11);
  v20 = (objc_class *)type metadata accessor for DynamicTypeLinkedLabel(0);
  v21 = objc_allocWithZone(v20);
  *(_QWORD *)&v5[v15] = sub_100059FA0((uint64_t)v14, 0, 0, 0);
  v22 = OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_secondaryLabel;
  if (qword_1007F2630 != -1)
    swift_once(&qword_1007F2630, sub_10041656C);
  v23 = sub_1000117A8(v11, (uint64_t)qword_100855778);
  v19(v14, v23, v11);
  v24 = objc_allocWithZone(v20);
  *(_QWORD *)&v17[v22] = sub_100059FA0((uint64_t)v14, 0, 0, 0);
  v25 = &v17[OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_actionRunnerProviderProxy];
  *((_QWORD *)v25 + 4) = 0;
  *(_OWORD *)v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;

  v39.receiver = v17;
  v39.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v30 = (char *)v26;
  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v31 = OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_primaryLabel;
  v32 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_primaryLabel];
  sub_1000117FC();
  v33 = v32;
  v34 = (void *)static UIColor.secondaryText.getter(v33);
  objc_msgSend(v33, "setTextColor:", v34);

  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[v31]);
  v35 = OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_secondaryLabel;
  v36 = *(id *)&v30[OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_secondaryLabel];
  v37 = (void *)static UIColor.secondaryText.getter(v36);
  objc_msgSend(v36, "setTextColor:", v37);

  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[v35]);
  return v30;
}

uint64_t sub_100395250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  _BYTE v8[24];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_actionRunnerProviderProxy;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_actionRunnerProviderProxy, v8, 0, 0);
  sub_10039604C(v1, (uint64_t)&v6);
  if (v7)
  {
    sub_100010F3C(&v6, (uint64_t)v9);
    v2 = v10;
    v3 = v11;
    sub_100011064(v9, v10);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
  }
  else
  {
    sub_100011088((uint64_t)&v6, (uint64_t *)&unk_100812400);
    return UIResponder.nearestActionRunner.getter();
  }
  return v4;
}

uint64_t sub_100395308()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  _QWORD v19[5];
  _QWORD v20[3];
  uint64_t v21;
  void *v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  objc_super v26;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26.receiver = v1;
  v26.super_class = ObjectType;
  objc_msgSendSuper2(&v26, "layoutSubviews", v5);
  v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_primaryLabel];
  v21 = type metadata accessor for DynamicTypeLinkedLabel(0);
  v22 = &protocol witness table for UILabel;
  v19[4] = &protocol witness table for UILabel;
  v20[0] = v8;
  v9 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_secondaryLabel];
  v19[3] = v21;
  v19[0] = v9;
  v10 = v8;
  v11 = v9;
  sub_10039544C(v20, v19, v23);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
  v12 = v24;
  v13 = v25;
  sub_100011064(v23, v24);
  v14 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v12, v13, v14, v15, v16, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v23);
}

double sub_10039544C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_QWORD);
  void (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  void (*v70)(char *, _QWORD *);
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  __n128 v74;
  uint64_t v75;
  _QWORD *v76;
  double result;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  void (*v84)(_QWORD *, char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, _QWORD, uint64_t);
  unsigned int v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void (*v103)(char *, _QWORD, uint64_t);
  unsigned int v104;
  void (*v105)(char *, _QWORD, _QWORD *);
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  double *v109;
  __int128 v110;
  __int128 v111;
  void *v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v93 = a2;
  v96 = a3;
  v107 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0);
  v100 = *(_QWORD *)(v107 - 8);
  v4 = __chkstk_darwin(v107);
  v102 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for FontSource(0, v4);
  v101 = *(_QWORD *)(v89 - 8);
  v6 = __chkstk_darwin(v89);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_1007FE260);
  v19 = *(_QWORD *)(type metadata accessor for _VerticalFlowLayout.Child(0) - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = *(unsigned __int8 *)(v19 + 80);
  v22 = (v21 + 32) & ~v21;
  v94 = v20;
  v23 = swift_allocObject(v18, v22 + 3 * v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_10066F860;
  v95 = v23;
  v108 = v23 + v22;
  v24 = a1[3];
  v25 = a1[4];
  v26 = sub_100011064(a1, v24);
  v117 = v24;
  v27 = *(void **)(v25 + 8);
  v28 = (_QWORD *)v14;
  v29 = v9;
  v118 = v27;
  v30 = sub_1000117C0(&v116);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v30, v26, v24);
  v90 = v15;
  v31 = *(void (**)(_QWORD))(v15 + 104);
  v92 = v17;
  v106 = enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:);
  v105 = (void (*)(char *, _QWORD, _QWORD *))v31;
  v31(v17);
  v99 = v10;
  v32 = *(void (**)(_QWORD))(v10 + 104);
  v98 = v13;
  v104 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:);
  v103 = (void (*)(char *, _QWORD, uint64_t))v32;
  v32(v13);
  if (qword_1007F2628 != -1)
    swift_once(&qword_1007F2628, sub_100416554);
  v33 = type metadata accessor for FontUseCase(0);
  v34 = sub_1000117A8(v33, (uint64_t)qword_100855760);
  v88 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v88(v8, v34, v33);
  v35 = v101;
  v36 = *(void (**)(_QWORD))(v101 + 104);
  v87 = enum case for FontSource.useCase(_:);
  v37 = v89;
  v86 = (void (*)(char *, _QWORD, uint64_t))v36;
  v36(v8);
  v85 = type metadata accessor for StaticDimension(0);
  v114 = (void *)v85;
  v115 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v113);
  *((_QWORD *)&v111 + 1) = v37;
  v112 = &protocol witness table for FontSource;
  v38 = sub_1000117C0(&v110);
  v84 = *(void (**)(_QWORD *, char *, uint64_t))(v35 + 16);
  v84(v38, v8, v37);
  StaticDimension.init(_:scaledLike:)(&v110, 30.0);
  v83 = *(void (**)(char *, uint64_t))(v35 + 8);
  v83(v8, v37);
  v112 = 0;
  v110 = 0u;
  v111 = 0u;
  v39 = sub_10000DF3C((uint64_t *)&unk_100803BE0);
  v40 = v100;
  v41 = *(unsigned __int8 *)(v100 + 80);
  v42 = (v41 + 32) & ~v41;
  v43 = v42 + *(_QWORD *)(v100 + 72);
  v81 = v39;
  v80 = v43;
  v79 = v41 | 7;
  v44 = swift_allocObject(v39, v43, v41 | 7);
  v78 = xmmword_10066FBA0;
  *(_OWORD *)(v44 + 16) = xmmword_10066FBA0;
  v82 = v42;
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v44);
  v109 = (double *)v44;
  v45 = sub_10000E99C((unint64_t *)&qword_1007FE268, (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  v46 = sub_10000DF3C((uint64_t *)&unk_100803BF0);
  v47 = sub_100187310();
  v48 = v102;
  v91 = v46;
  v49 = v46;
  v97 = v47;
  v50 = v107;
  v101 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v109, v49, v47, v107, v45);
  v51 = v92;
  v52 = v98;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v116, v92, v98, &v113, &v110, v48);
  v100 = *(_QWORD *)(v40 + 8);
  ((void (*)(char *, uint64_t))v100)(v48, v50);
  sub_100011088((uint64_t)&v110, (uint64_t *)&unk_100803C00);
  v99 = *(_QWORD *)(v99 + 8);
  ((void (*)(char *, uint64_t))v99)(v52, v29);
  v90 = *(_QWORD *)(v90 + 8);
  ((void (*)(char *, _QWORD *))v90)(v51, v28);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v116);
  v53 = v93[3];
  v54 = v93[4];
  v55 = v29;
  v56 = v28;
  v57 = sub_100011064(v93, v53);
  v117 = v53;
  v118 = *(void **)(v54 + 8);
  v58 = sub_1000117C0(&v116);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v58, v57, v53);
  v93 = v56;
  v105(v51, v106, v56);
  v103(v52, v104, v55);
  v59 = v55;
  v60 = v37;
  if (qword_1007F2630 != -1)
    swift_once(&qword_1007F2630, sub_10041656C);
  v61 = v94;
  v62 = sub_1000117A8(v33, (uint64_t)qword_100855778);
  v88(v8, v62, v33);
  v86(v8, v87, v60);
  v114 = (void *)v85;
  v115 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v113);
  *((_QWORD *)&v111 + 1) = v60;
  v112 = &protocol witness table for FontSource;
  v63 = sub_1000117C0(&v110);
  v84(v63, v8, v60);
  StaticDimension.init(_:scaledLike:)(&v110, 20.0);
  v83(v8, v60);
  v112 = 0;
  v110 = 0u;
  v111 = 0u;
  v64 = swift_allocObject(v81, v80, v79);
  *(_OWORD *)(v64 + 16) = v78;
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v64);
  v109 = (double *)v64;
  v65 = v102;
  v66 = v91;
  v67 = v107;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v109, v91, v97, v107, v101);
  v68 = v98;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v116, v51, v98, &v113, &v110, v65);
  ((void (*)(char *, uint64_t))v100)(v65, v67);
  sub_100011088((uint64_t)&v110, (uint64_t *)&unk_100803C00);
  ((void (*)(char *, uint64_t))v99)(v68, v59);
  v69 = v93;
  v70 = (void (*)(char *, _QWORD *))v90;
  ((void (*)(char *, _QWORD *))v90)(v51, v93);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v116);
  v108 += 2 * v61;
  v71 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v71, *(unsigned int *)(v71 + 48), *(unsigned __int16 *)(v71 + 52));
  v72 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v117 = v71;
  v118 = &protocol witness table for LayoutViewPlaceholder;
  v116 = v72;
  v103(v68, v104, v59);
  v114 = &type metadata for CGFloat;
  v115 = &protocol witness table for CGFloat;
  v112 = 0;
  v113 = 0x4032000000000000;
  v110 = 0u;
  v111 = 0u;
  v109 = _swiftEmptyArrayStorage;
  v73 = dispatch thunk of SetAlgebra.init<A>(_:)(&v109, v66, v97, v67, v101);
  ((void (*)(char *, _QWORD, _QWORD *, __n128))v105)(v51, v106, v69, v73);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v116, v51, v68, &v113, &v110, v65);
  v70(v51, v69);
  ((void (*)(char *, uint64_t))v100)(v65, v67);
  sub_100011088((uint64_t)&v110, (uint64_t *)&unk_100803C00);
  ((void (*)(char *, uint64_t))v99)(v68, v59);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v116);
  v75 = type metadata accessor for _VerticalFlowLayout(0, v74);
  v76 = v96;
  v96[3] = v75;
  v76[4] = sub_10000E99C(&qword_1007FE278, (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout, (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  v76[5] = sub_10000E99C((unint64_t *)&unk_1007FE280, (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout, (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  sub_1000117C0(v76);
  *(_QWORD *)&result = _VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v95).n128_u64[0];
  return result;
}

double sub_100395E28(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  _QWORD v15[5];
  _QWORD v16[3];
  uint64_t v17;
  void *v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  swift_getObjectType();
  v7 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_primaryLabel);
  v17 = type metadata accessor for DynamicTypeLinkedLabel(0);
  v18 = &protocol witness table for UILabel;
  v15[4] = &protocol witness table for UILabel;
  v16[0] = v7;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_secondaryLabel);
  v15[3] = v17;
  v15[0] = v8;
  v9 = v7;
  v10 = v8;
  sub_10039544C(v16, v15, v19);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
  v11 = v20;
  v12 = v21;
  sub_100011064(v19, v20);
  v13 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v11, v12, a2, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
  return v13;
}

uint64_t type metadata accessor for SearchResultsMessageView()
{
  return objc_opt_self(_TtC22SubscribePageExtension24SearchResultsMessageView);
}

uint64_t sub_10039602C()
{
  return sub_100395250();
}

uint64_t sub_10039604C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100812400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100396094()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  objc_class *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_primaryLabel;
  if (qword_1007F2628 != -1)
    swift_once(&qword_1007F2628, sub_100416554);
  v7 = sub_1000117A8(v2, (uint64_t)qword_100855760);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  v9 = (objc_class *)type metadata accessor for DynamicTypeLinkedLabel(0);
  v10 = objc_allocWithZone(v9);
  *(_QWORD *)&v1[v6] = sub_100059FA0((uint64_t)v5, 0, 0, 0);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_secondaryLabel;
  if (qword_1007F2630 != -1)
    swift_once(&qword_1007F2630, sub_10041656C);
  v12 = sub_1000117A8(v2, (uint64_t)qword_100855778);
  v8(v5, v12, v2);
  v13 = objc_allocWithZone(v9);
  *(_QWORD *)&v1[v11] = sub_100059FA0((uint64_t)v5, 0, 0, 0);
  v14 = &v1[OBJC_IVAR____TtC22SubscribePageExtension24SearchResultsMessageView_actionRunnerProviderProxy];
  *((_QWORD *)v14 + 4) = 0;
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SearchResultsMessageView.swift", 53, 2, 34, 0);
  __break(1u);
}

unint64_t sub_100396244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  NSString v26;
  double v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t inited;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  objc_class *v77;
  char *v78;
  NSString v79;
  id v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  objc_class *v94;
  char *v95;
  uint64_t *v96;
  uint64_t v97;
  char *v98;
  void *v99;
  uint64_t v100;
  NSString v101;
  double v102;
  id v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v110;
  __int128 v111;
  char v112;
  objc_super v113;
  objc_super v114;
  char v115[40];
  char v116[40];
  char v117;
  objc_super v118;
  unint64_t v119;

  v3 = type metadata accessor for ShareSheetData.Metadata(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = (unint64_t)_swiftEmptyArrayStorage;
  ShareSheetData.metadata.getter(v5);
  v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for ShareSheetData.Metadata.article(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    v9 = *v7;
    v10 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    swift_retain(v1);
    swift_retain(a1);
    v11 = sub_1004839C4(v1, a1, (uint64_t)&_swiftEmptySetSingleton);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v13 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
    v15 = specialized Array._endMutation()(v14);
    v16 = ShareSheetArticleMetadata.text.getter(v15);
    v18 = v17;
    v19 = (objc_class *)type metadata accessor for TextActivityItemProvider();
    v20 = (char *)objc_allocWithZone(v19);
    v21 = (uint64_t *)&v20[OBJC_IVAR____TtC22SubscribePageExtension24TextActivityItemProvider_text];
    *v21 = v16;
    v21[1] = v18;
    v22 = qword_1007F1D20;
    v23 = v20;
    swift_bridgeObjectRetain(v18);
    if (v22 != -1)
      swift_once(&qword_1007F1D20, sub_100350A0C);
    v24 = (void *)qword_100808D80;
    swift_bridgeObjectRetain(qword_100808D80);
    sub_100396AB0((uint64_t)&_swiftEmptySetSingleton, v24);
    *(_QWORD *)&v23[OBJC_IVAR____TtC22SubscribePageExtension24TextActivityItemProvider_excludedActivityTypes] = v25;

    v26 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v18).n128_u64[0];
    v113.receiver = v23;
    v113.super_class = v19;
    v28 = objc_msgSendSuper2(&v113, "initWithPlaceholderItem:", v26, v27);

    v29 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    v33 = specialized Array._endMutation()(v32);
    v34 = ShareSheetArticleMetadata.artwork.getter(v33);
    if (v34)
    {
      v35 = v34;
      v36 = sub_10000DF3C((uint64_t *)&unk_100811BA0);
      v37 = &v112;
LABEL_10:
      inited = swift_initStackObject(v36, v37);
      *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
      v39 = (void *)UIActivityTypeSaveToNotes;
      *(_QWORD *)(inited + 32) = UIActivityTypeSaveToNotes;
      swift_retain(a1);
      swift_retain(v35);
      v40 = v39;
      sub_100172D78(inited);
      v42 = v41;
      swift_setDeallocating(inited);
      type metadata accessor for ActivityType(0);
      swift_arrayDestroy(inited + 32, 1, v43);
      v44 = objc_allocWithZone((Class)type metadata accessor for ArtworkActivityItemProvider());
      v45 = sub_1005E56FC(v35, a1, v42);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
      v47 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v46 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v47 >= v46 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
      v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
      specialized Array._endMutation()(v48);
      swift_release(v9);

      v49 = v35;
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v8 == enum case for ShareSheetData.Metadata.product(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    v50 = *v7;
    v51 = sub_10000DF3C((uint64_t *)&unk_100811BA0);
    v52 = swift_initStackObject(v51, v116);
    v111 = xmmword_10066FBA0;
    *(_OWORD *)(v52 + 16) = xmmword_10066FBA0;
    v53 = (void *)UIActivityTypeSaveToNotes;
    *(_QWORD *)(v52 + 32) = UIActivityTypeSaveToNotes;
    swift_retain(v1);
    swift_retain(a1);
    v54 = v53;
    sub_100172D78(v52);
    v56 = v55;
    swift_setDeallocating(v52);
    type metadata accessor for ActivityType(0);
    v58 = v57;
    swift_arrayDestroy(v52 + 32, 1, v57);
    v59 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    v11 = sub_1004839C4(v1, a1, v56);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v60 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v61 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v60 >= v61 >> 1)
    {
      v110 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v60 + 1, 1);
      v60 = v110;
    }
    v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v11);
    v63 = specialized Array._endMutation()(v62);
    v64 = ShareSheetProductMetadata.icon.getter(v63);
    v65 = swift_initStackObject(v51, v115);
    *(_OWORD *)(v65 + 16) = v111;
    *(_QWORD *)(v65 + 32) = v54;
    swift_retain(a1);
    v66 = v54;
    sub_100172D78(v65);
    v68 = v67;
    swift_setDeallocating(v65);
    swift_arrayDestroy(v65 + 32, 1, v58);
    v69 = objc_allocWithZone((Class)type metadata accessor for ArtworkActivityItemProvider());
    v70 = sub_1005E56FC(v64, a1, v68);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
    v72 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v71 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v72 >= v71 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
    v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
    v74 = specialized Array._endMutation()(v73);
    v75 = ShareSheetProductMetadata.notesMetadata.getter(v74);
    if (v75)
    {
      v76 = v75;
      v77 = (objc_class *)type metadata accessor for NotesMetadataActivityItemProvider();
      v78 = (char *)objc_allocWithZone(v77);
      *(_OWORD *)&v78[OBJC_IVAR____TtC22SubscribePageExtension33NotesMetadataActivityItemProvider____lazy_storage___notesMetadata] = xmmword_100688400;
      *(_QWORD *)&v78[OBJC_IVAR____TtC22SubscribePageExtension33NotesMetadataActivityItemProvider_metadata] = v76;
      swift_retain(v76);
      v79 = String._bridgeToObjectiveC()();
      v114.receiver = v78;
      v114.super_class = v77;
      v80 = objc_msgSendSuper2(&v114, "initWithPlaceholderItem:", v79);

      v81 = v80;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
      v83 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v82 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v83 >= v82 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
      v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
      specialized Array._endMutation()(v84);
      swift_release(v50);

      v85 = v76;
    }
    else
    {
      v85 = v50;
    }
    swift_release(v85);

    goto LABEL_36;
  }
  if (v8 == enum case for ShareSheetData.Metadata.appEvent(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    v9 = *v7;
    v86 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    swift_retain(v1);
    swift_retain(a1);
    v11 = sub_1004839C4(v1, a1, (uint64_t)&_swiftEmptySetSingleton);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v88 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v87 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v88 >= v87 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
    v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v11);
    v90 = specialized Array._endMutation()(v89);
    v91 = ShareSheetAppEventMetadata.text.getter(v90);
    v93 = v92;
    v94 = (objc_class *)type metadata accessor for TextActivityItemProvider();
    v95 = (char *)objc_allocWithZone(v94);
    v96 = (uint64_t *)&v95[OBJC_IVAR____TtC22SubscribePageExtension24TextActivityItemProvider_text];
    *v96 = v91;
    v96[1] = v93;
    v97 = qword_1007F1D20;
    v98 = v95;
    swift_bridgeObjectRetain(v93);
    if (v97 != -1)
      swift_once(&qword_1007F1D20, sub_100350A0C);
    v99 = (void *)qword_100808D80;
    swift_bridgeObjectRetain(qword_100808D80);
    sub_100396AB0((uint64_t)&_swiftEmptySetSingleton, v99);
    *(_QWORD *)&v98[OBJC_IVAR____TtC22SubscribePageExtension24TextActivityItemProvider_excludedActivityTypes] = v100;

    v101 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v102 = swift_bridgeObjectRelease(v93).n128_u64[0];
    v118.receiver = v98;
    v118.super_class = v94;
    v103 = objc_msgSendSuper2(&v118, "initWithPlaceholderItem:", v101, v102);

    v29 = v103;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v105 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v104 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v105 >= v104 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v104 > 1, v105 + 1, 1);
    v106 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v29);
    v107 = specialized Array._endMutation()(v106);
    v108 = ShareSheetAppEventMetadata.artwork.getter(v107);
    if (v108)
    {
      v35 = v108;
      v36 = sub_10000DF3C((uint64_t *)&unk_100811BA0);
      v37 = &v117;
      goto LABEL_10;
    }
LABEL_31:
    v49 = v9;
LABEL_32:
    swift_release(v49);

LABEL_36:
    return v119;
  }
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v7, v3);
  return v119;
}

void sub_100396AB0(uint64_t a1, void *a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14[2];

  v3 = 0;
  v14[1] = a2;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_10016E6BC(v14, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10));

  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100396C18()
{
  uint64_t v0;

  v0 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  sub_100045464(v0, qword_1008542E8);
  sub_1000117A8(v0, (uint64_t)qword_1008542E8);
  return PreferenceKey.init(_:)(0xD000000000000034, 0x80000001006472A0, &type metadata for Bool);
}

__n128 sub_100396C84()
{
  __n128 result;

  __asm { FMOV            V0.2D, #10.0 }
  xmmword_10080AF30 = (__int128)result;
  return result;
}

char *sub_100396C98(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *ObjCClassFromMetadata;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  objc_super v29;
  uint64_t v30;

  v9 = type metadata accessor for LocalPreferences(0);
  v10 = v4;
  v11 = static LocalPreferences.AppStoreKitInternal.getter(v10);
  if (qword_1007F1E20 != -1)
    swift_once(&qword_1007F1E20, sub_100396C18);
  v12 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v13 = sub_1000117A8(v12, (uint64_t)qword_1008542E8);
  Preferences.subscript.getter(&v30, v13, v9, &type metadata for Bool, &protocol witness table for LocalPreferences);
  swift_release(v11);
  if (v30 != 2 && (v30 & 1) != 0)
    v14 = (objc_class *)type metadata accessor for AccessoryDarkMaterialView();
  else
    v14 = (objc_class *)type metadata accessor for SemiLightMaterialView();
  v15 = objc_msgSend(objc_allocWithZone(v14), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_materialView] = v15;
  v16 = OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView;
  v17 = type metadata accessor for InteractiveBackgroundContentView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v17);
  *(_QWORD *)&v10[v16] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v19 = OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_bottomBackgroundView;
  *(_QWORD *)&v10[v19] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v20 = &v10[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState];
  v21 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);

  v29.receiver = v10;
  v29.super_class = (Class)type metadata accessor for InteractiveSectionBackgroundView(0);
  v22 = objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v23 = (char *)v22;
  v25 = (void *)static UIColor.defaultBackground.getter(v23, v24);
  objc_msgSend(v23, "setBackgroundColor:", v25);

  v26 = *(void **)&v23[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_bottomBackgroundView];
  objc_msgSend(v26, "setBackgroundColor:", 0);
  objc_msgSend(v23, "addSubview:", v26);
  v27 = *(void **)&v23[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView];
  objc_msgSend(v27, "setBackgroundColor:", 0);
  objc_msgSend(v27, "setAlpha:", 1.0);
  objc_msgSend(v23, "addSubview:", v27);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_materialView]);

  return v23;
}

id sub_100396F74()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for InteractiveSectionBackgroundView(0);
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_materialView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_bottomBackgroundView];
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v3, "setFrame:");
}

double sub_100397060()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v9[24];
  objc_super v10;

  v1 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (objc_class *)type metadata accessor for InteractiveSectionBackgroundView(0);
  v10.receiver = v0;
  v10.super_class = v4;
  objc_msgSendSuper2(&v10, "prepareForReuse");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView], "setBackgroundColor:", 0);
  ArtworkView.image.setter(0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_bottomBackgroundView], "setBackgroundColor:", 0);
  ArtworkView.image.setter(0);
  v5 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState], v9, 33, 0);
  sub_1000FDEBC((uint64_t)v3, v6);
  *(_QWORD *)&result = swift_endAccess(v9).n128_u64[0];
  return result;
}

void sub_1003971D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_BYTE *, uint64_t, uint64_t);
  unsigned int v38;
  _QWORD *v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void (*v41)(_QWORD);
  _BYTE *v42;
  uint64_t v43;
  uint64_t (*v44)(_BYTE *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v51;
  uint64_t v52;
  _QWORD *v53;
  _BYTE *v54;
  void (*v55)(_BYTE *);
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  void (*v71)(_BYTE *, uint64_t);
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  char v76;
  void (*v77)(_BYTE *, uint64_t);
  _BYTE v78[12];
  int v79;
  _BYTE *v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  unsigned int (*v85)(_BYTE *, uint64_t, uint64_t);
  void (*v86)(_BYTE *);
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v99[24];
  char v100[32];

  v97 = a1;
  v4 = type metadata accessor for ShelfBackground(0);
  v96 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v83 = &v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v94 = sub_10000DF3C(&qword_100804DE8);
  __chkstk_darwin(v94);
  v87 = &v78[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v78[-v8];
  v10 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v84 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  __chkstk_darwin(v13);
  v88 = &v78[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v78[-v16];
  __chkstk_darwin(v18);
  v20 = &v78[-v19];
  v21 = sub_10000DF3C(&qword_1007F6330);
  __chkstk_darwin(v21);
  v82 = &v78[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v91 = &v78[-v24];
  __chkstk_darwin(v25);
  v92 = &v78[-v26];
  __chkstk_darwin(v27);
  v81 = &v78[-v28];
  __chkstk_darwin(v29);
  v31 = &v78[-v30];
  __chkstk_darwin(v32);
  v34 = &v78[-v33];
  v35 = type metadata accessor for ArtworkLoader(0);
  v98 = *(_QWORD *)(a2 + qword_100854050);
  if (v98)
  {
    v36 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState];
    swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState], v100, 0, 0);
    v95 = v36;
    sub_1000194E4(v36, (uint64_t)v20, (uint64_t *)&unk_1007F6040);
    v37 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
    v90 = v10;
    v85 = v37;
    v38 = v37(v20, 1, v10);
    v93 = v2;
    v89 = v11;
    if (v38)
    {
      swift_retain(v98);
      sub_100011088((uint64_t)v20, (uint64_t *)&unk_1007F6040);
      v39 = v96;
      v40 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v96[7];
      v40(v34, 1, 1, v4);
      v41 = (void (*)(_QWORD))v39[2];
    }
    else
    {
      v42 = v84;
      sub_10005EC94((uint64_t)v20, (uint64_t)v84);
      swift_retain(v98);
      sub_100011088((uint64_t)v20, (uint64_t *)&unk_1007F6040);
      v39 = v96;
      v41 = (void (*)(_QWORD))v96[2];
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v41)(v34, v42, v4);
      sub_10005EC58((uint64_t)v42);
      v40 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v39[7];
      v40(v34, 0, 1, v4);
    }
    ((void (*)(_BYTE *, uint64_t, uint64_t))v41)(v31, v97, v4);
    v40(v31, 0, 1, v4);
    v43 = (uint64_t)&v9[*(int *)(v94 + 48)];
    sub_1000194E4((uint64_t)v34, (uint64_t)v9, &qword_1007F6330);
    sub_1000194E4((uint64_t)v31, v43, &qword_1007F6330);
    v44 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v39[6];
    v45 = v44(v9, 1, v4);
    v86 = (void (*)(_BYTE *))v41;
    if (v45 == 1)
    {
      sub_100011088((uint64_t)v31, &qword_1007F6330);
      sub_100011088((uint64_t)v34, &qword_1007F6330);
      v46 = v44((_BYTE *)v43, 1, v4);
      v47 = v97;
      if (v46 == 1)
      {
        sub_100011088((uint64_t)v9, &qword_1007F6330);
        v48 = v90;
        v49 = (uint64_t)v87;
        v50 = v85;
        goto LABEL_12;
      }
    }
    else
    {
      v51 = v81;
      sub_1000194E4((uint64_t)v9, (uint64_t)v81, &qword_1007F6330);
      if (v44((_BYTE *)v43, 1, v4) != 1)
      {
        v67 = (void (*)(_BYTE *, uint64_t, uint64_t))v39[4];
        v80 = v17;
        v68 = v51;
        v69 = v83;
        v67(v83, v43, v4);
        v70 = sub_10000E99C((unint64_t *)&qword_100804DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
        v79 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v69, v4, v70);
        v71 = (void (*)(_BYTE *, uint64_t))v39[1];
        v71(v69, v4);
        sub_100011088((uint64_t)v31, &qword_1007F6330);
        sub_100011088((uint64_t)v34, &qword_1007F6330);
        v72 = v68;
        v17 = v80;
        v71(v72, v4);
        sub_100011088((uint64_t)v9, &qword_1007F6330);
        v47 = v97;
        v48 = v90;
        v49 = (uint64_t)v87;
        v50 = v85;
        if ((v79 & 1) != 0)
        {
LABEL_12:
          sub_1000194E4(v95, (uint64_t)v17, (uint64_t *)&unk_1007F6040);
          if (v50(v17, 1, v48))
          {
            sub_100011088((uint64_t)v17, (uint64_t *)&unk_1007F6040);
            v52 = 1;
            v53 = v96;
            v54 = v92;
            v55 = v86;
          }
          else
          {
            v56 = v84;
            sub_10005EC94((uint64_t)v17, (uint64_t)v84);
            sub_100011088((uint64_t)v17, (uint64_t *)&unk_1007F6040);
            v54 = v92;
            v55 = v86;
            ((void (*)(_BYTE *, _BYTE *, uint64_t))v86)(v92, &v56[*(int *)(v48 + 28)], v4);
            sub_10005EC58((uint64_t)v56);
            v52 = 0;
            v53 = v96;
          }
          v40(v54, v52, 1, v4);
          v57 = v91;
          v97 = v47 + *(int *)(v48 + 28);
          v55(v91);
          v40(v57, 0, 1, v4);
          v58 = (uint64_t)v57;
          v59 = v49 + *(int *)(v94 + 48);
          sub_1000194E4((uint64_t)v54, v49, &qword_1007F6330);
          sub_1000194E4(v58, v59, &qword_1007F6330);
          if (v44((_BYTE *)v49, 1, v4) == 1)
          {
            sub_100011088(v58, &qword_1007F6330);
            sub_100011088((uint64_t)v54, &qword_1007F6330);
            v60 = v44((_BYTE *)v59, 1, v4);
            v61 = v93;
            v63 = (uint64_t)v88;
            v62 = v89;
            if (v60 == 1)
            {
              sub_100011088(v49, &qword_1007F6330);
              v64 = v98;
LABEL_22:
              objc_msgSend(*(id *)&v61[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView], "setAlpha:", *(double *)(v47 + *(int *)(v48 + 20)));
              sub_10005EC94(v47, v63);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v48);
              v66 = v95;
              swift_beginAccess(v95, v99, 33, 0);
              sub_1000FDEBC(v63, v66);
              swift_endAccess(v99);
              swift_release(v64);
              return;
            }
          }
          else
          {
            v65 = v82;
            sub_1000194E4(v49, (uint64_t)v82, &qword_1007F6330);
            if (v44((_BYTE *)v59, 1, v4) != 1)
            {
              v73 = v83;
              ((void (*)(_BYTE *, uint64_t, uint64_t))v53[4])(v83, v59, v4);
              v74 = sub_10000E99C((unint64_t *)&qword_100804DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
              v75 = v65;
              v76 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v73, v4, v74);
              v77 = (void (*)(_BYTE *, uint64_t))v53[1];
              v77(v73, v4);
              sub_100011088((uint64_t)v91, &qword_1007F6330);
              sub_100011088((uint64_t)v92, &qword_1007F6330);
              v77(v75, v4);
              sub_100011088(v49, &qword_1007F6330);
              v61 = v93;
              v63 = (uint64_t)v88;
              v62 = v89;
              v64 = v98;
              if ((v76 & 1) != 0)
                goto LABEL_22;
              goto LABEL_21;
            }
            sub_100011088((uint64_t)v91, &qword_1007F6330);
            sub_100011088((uint64_t)v92, &qword_1007F6330);
            ((void (*)(_BYTE *, uint64_t))v53[1])(v65, v4);
            v61 = v93;
            v63 = (uint64_t)v88;
            v62 = v89;
          }
          sub_100011088(v49, &qword_100804DE8);
          v64 = v98;
LABEL_21:
          sub_100398888(*(void **)&v61[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_bottomBackgroundView], v97, v64, v61);
          goto LABEL_22;
        }
LABEL_11:
        sub_100398888(*(void **)&v93[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView], v47, v98, v93);
        goto LABEL_12;
      }
      sub_100011088((uint64_t)v31, &qword_1007F6330);
      sub_100011088((uint64_t)v34, &qword_1007F6330);
      ((void (*)(_BYTE *, uint64_t))v39[1])(v51, v4);
      v47 = v97;
    }
    sub_100011088((uint64_t)v9, &qword_100804DE8);
    v48 = v90;
    v49 = (uint64_t)v87;
    v50 = v85;
    goto LABEL_11;
  }
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v35);
  __break(1u);
}

id sub_100397B00()
{
  return sub_10014741C(type metadata accessor for InteractiveSectionBackgroundView);
}

uint64_t sub_100397B70()
{
  return type metadata accessor for InteractiveSectionBackgroundView(0);
}

uint64_t type metadata accessor for InteractiveSectionBackgroundView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080AF80;
  if (!qword_10080AF80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InteractiveSectionBackgroundView);
  return result;
}

void sub_100397BB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10005C114(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_100397C34@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, (uint64_t *)&unk_1007F6040);
}

void sub_100397C90(uint64_t a1, uint64_t a2)
{
  sub_1003971D4(a1, a2);
}

char *sub_100397CB0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  CGAffineTransform v19;
  objc_super v20;

  v9 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F32InteractiveBackgroundContentView_artworkView;
  v10 = type metadata accessor for ArtworkView(0);
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for InteractiveBackgroundContentView();
  v13 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F32InteractiveBackgroundContentView_artworkView;
  v15 = *(void **)&v13[OBJC_IVAR____TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F32InteractiveBackgroundContentView_artworkView];
  v16 = v13;
  objc_msgSend(v15, "setContentMode:", 4);
  v17 = objc_msgSend(v15, "layer");
  CGAffineTransformMakeScale(&v19, 3.0, 3.0);
  objc_msgSend(v17, "setAffineTransform:", &v19);

  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v13[v14]);
  return v16;
}

id sub_10039800C()
{
  return sub_10014741C((uint64_t (*)(_QWORD))type metadata accessor for InteractiveBackgroundContentView);
}

uint64_t type metadata accessor for InteractiveBackgroundContentView()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F32InteractiveBackgroundContentView);
}

uint64_t sub_100398048()
{
  return ArtworkView.image.getter();
}

uint64_t sub_100398070(uint64_t a1)
{
  return ArtworkView.image.setter(a1);
}

void (*sub_100398098(_QWORD *a1, __n128 a2))(_QWORD *a1, char a2)
{
  uint64_t v2;

  a1[1] = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F32InteractiveBackgroundContentView_artworkView);
  *a1 = ArtworkView.image.getter(a2);
  return sub_1003980D8;
}

void sub_1003980D8(_QWORD *a1, char a2)
{
  void *v2;
  id v3;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ArtworkView.image.setter(v2);

  }
  else
  {
    ArtworkView.image.setter(*a1);
  }
}

void sub_10039812C(UIImage_optional a1, Swift::Bool a2)
{
  ArtworkView.show(image:isAnimationPermitted:)(a1, a2);
}

id sub_100398154()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class v14;
  id v15;
  Class v16;
  id v17;
  id v18;
  id v19;
  double v20;
  objc_super v22;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 90.0);
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for SemiLightMaterialView();
  v2 = objc_msgSendSuper2(&v22, "initWithEffect:", v1);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v4 = v3;
  v5 = objc_allocWithZone((Class)CAFilter);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithType:", v7, swift_bridgeObjectRelease(v4).n128_f64[0]);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setValue:forKey:", isa, kCAFilterInputAmount);

  v10 = objc_msgSend(v6, "layer");
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v12 + 56) = sub_100019574(0, &qword_10080B018, CAFilter_ptr);
  *(_QWORD *)(v12 + 32) = v8;
  v13 = v8;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "setFilters:", v14, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v15 = objc_msgSend(v6, "layer");
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v16 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.4).super.isa;
  v17 = -[objc_class CGColor](v16, "CGColor");

  objc_msgSend(v15, "setBackgroundColor:", v17);
  v18 = objc_msgSend(v6, "layer");

  v19 = objc_msgSend(v18, "mask");
  LODWORD(v20) = 1.0;
  objc_msgSend(v19, "setOpacity:", v20);

  return v6;
}

id sub_10039848C()
{
  return sub_10014741C((uint64_t (*)(_QWORD))type metadata accessor for SemiLightMaterialView);
}

uint64_t type metadata accessor for SemiLightMaterialView()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F21SemiLightMaterialView);
}

id sub_1003984B8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class v14;
  id v15;
  Class v16;
  id v17;
  id v18;
  id v19;
  double v20;
  objc_super v22;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 90.0);
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for AccessoryDarkMaterialView();
  v2 = objc_msgSendSuper2(&v22, "initWithEffect:", v1);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v4 = v3;
  v5 = objc_allocWithZone((Class)CAFilter);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithType:", v7, swift_bridgeObjectRelease(v4).n128_f64[0]);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setValue:forKey:", isa, kCAFilterInputAmount);

  v10 = objc_msgSend(v6, "layer");
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v12 + 56) = sub_100019574(0, &qword_10080B018, CAFilter_ptr);
  *(_QWORD *)(v12 + 32) = v8;
  v13 = v8;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "setFilters:", v14, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v15 = objc_msgSend(v6, "layer");
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v16 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.58824, 0.58824, 0.15).super.isa;
  v17 = -[objc_class CGColor](v16, "CGColor");

  objc_msgSend(v15, "setBackgroundColor:", v17);
  v18 = objc_msgSend(v6, "layer");

  v19 = objc_msgSend(v18, "mask");
  if (v19)
  {
    LODWORD(v20) = 1.0;
    objc_msgSend(v19, "setOpacity:", v20);

  }
  return v6;
}

void sub_1003987F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v7;

  v7 = a3;
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, "init(effect:)", 13, 0);
  __break(1u);
}

id sub_100398830()
{
  return sub_10014741C((uint64_t (*)(_QWORD))type metadata accessor for AccessoryDarkMaterialView);
}

uint64_t type metadata accessor for AccessoryDarkMaterialView()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F25AccessoryDarkMaterialView);
}

uint64_t sub_10039885C()
{
  return sub_10000E99C(&qword_10080B010, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveBackgroundContentView, (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_100398888(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  void **v15;
  int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;

  v7 = type metadata accessor for AspectRatio(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShelfBackground(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (void **)((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a2, v11, v13);
  v16 = (*(uint64_t (**)(void **, uint64_t))(v12 + 88))(v15, v11);
  if (v16 == enum case for ShelfBackground.artwork(_:))
  {
    (*(void (**)(void **, uint64_t))(v12 + 96))(v15, v11);
    v17 = *v15;
    v34 = (char *)v15 + *(int *)(sub_10000DF3C(&qword_1008042E0) + 48);
    v18 = type metadata accessor for InteractiveBackgroundContentView();
    v19 = sub_10000E99C((unint64_t *)&unk_10080B020, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveBackgroundContentView, (uint64_t)"\r5\v");
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(a1, 1, v18, v19);
    ArtworkView.image.setter(0);
    AspectRatio.init(_:_:)(objc_msgSend(a4, "frame"));
    if (qword_1007F1E28 != -1)
      swift_once(&qword_1007F1E28, sub_100396C84);
    v20 = AspectRatio.maxSize(fitting:)(*(double *)&xmmword_10080AF30, *((double *)&xmmword_10080AF30 + 1));
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v23 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v20, v22);
    v24 = (void *)Artwork.backgroundColor.getter(v23);
    objc_msgSend(a1, "setBackgroundColor:", v24);

    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v23, 2, 1, a1, v18, v19);
    swift_release(v17);
    swift_release(v23);
    v25 = type metadata accessor for ShelfBackgroundStyle(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v34, v25);
  }
  else if (v16 == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v12 + 96))(v15, v11);
    v27 = *v15;
    v28 = (char *)v15 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
    ArtworkView.image.setter(0);
    objc_msgSend(a1, "setBackgroundColor:", v27);

    v29 = type metadata accessor for ShelfBackgroundStyle(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  }
  else
  {
    ArtworkView.image.setter(0);
    v30 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v32 = (void *)static UIColor.defaultBackground.getter(v30, v31);
    objc_msgSend(a1, "setBackgroundColor:", v32);

    return (*(uint64_t (**)(void **, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_100398BF0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *ObjCClassFromMetadata;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for LocalPreferences(0);
  v3 = static LocalPreferences.AppStoreKitInternal.getter(v2);
  if (qword_1007F1E20 != -1)
    swift_once(&qword_1007F1E20, sub_100396C18);
  v4 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v5 = sub_1000117A8(v4, (uint64_t)qword_1008542E8);
  Preferences.subscript.getter(&v15, v5, v2, &type metadata for Bool, &protocol witness table for LocalPreferences);
  swift_release(v3);
  if (v15 != 2 && (v15 & 1) != 0)
    v6 = (objc_class *)type metadata accessor for AccessoryDarkMaterialView();
  else
    v6 = (objc_class *)type metadata accessor for SemiLightMaterialView();
  v7 = objc_msgSend(objc_allocWithZone(v6), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_materialView] = v7;
  v8 = OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_topBackgroundView;
  v9 = type metadata accessor for InteractiveBackgroundContentView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v9);
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v11 = OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_bottomBackgroundView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v12 = &v1[OBJC_IVAR____TtC22SubscribePageExtension32InteractiveSectionBackgroundView_currentState];
  v13 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/InteractiveSectionBackgroundView.swift", 61, 2, 76, 0);
  __break(1u);
  return result;
}

uint64_t sub_100398D84(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  unsigned __int8 *v5;
  uint64_t v6;
  int v12;
  double Width;
  double v14;
  double v15;
  double Height;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double *v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  CGFloat v30;
  CGFloat v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  CGFloat v35;
  CGFloat v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double *v47;
  double v48;
  double *v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  CGFloat v54;
  double v55;
  double v56;
  int v57;
  double v58;
  char v59;
  CGFloat v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double MaxY;
  double *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  CGFloat v99;
  double v100;
  CGFloat v101;
  double rect;
  double v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[51];
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;

  v6 = (uint64_t)v5;
  v12 = *v5;
  Width = CGRectGetWidth(*(CGRect *)&a2);
  v14 = Width;
  if (v12 == 1)
  {
    v119.origin.x = a2;
    v119.origin.y = a3;
    v119.size.width = a4;
    v119.size.height = a5;
    CGRectGetWidth(v119);
    v15 = *((double *)v5 + 9);
  }
  else
  {
    v14 = Width * 0.5;
    v120.origin.x = a2;
    v120.origin.y = a3;
    v120.size.width = a4;
    v120.size.height = a5;
    v15 = CGRectGetWidth(v120);
    v121.origin.x = a2;
    v121.origin.y = a3;
    v121.size.width = a4;
    v121.size.height = a5;
    Height = CGRectGetHeight(v121);
    if (Height < v15)
      v15 = Height;
  }
  rect = v15;
  v17 = *((_QWORD *)v5 + 13);
  v18 = *((_QWORD *)v5 + 14);
  sub_100011064((_QWORD *)v5 + 10, v17);
  v19 = CGRect.withLayoutDirection(using:relativeTo:)(a1, a2);
  dispatch thunk of Placeable.place(at:with:)(a1, v17, v18, v19);
  if (v12)
    v20 = *((double *)v5 + 2);
  else
    v20 = *((double *)v5 + 6);
  v21 = (double *)(v5 + 32);
  if (!v12)
    v21 = (double *)(v5 + 64);
  v103 = v14;
  v22 = v14 - v20 - *v21;
  if (v12)
    v23 = 8;
  else
    v23 = 40;
  v122.origin.x = a2;
  v122.origin.y = a3;
  v122.size.width = a4;
  v122.size.height = a5;
  v24 = CGRectGetHeight(v122);
  v25 = *((_QWORD *)v5 + 18);
  v26 = *((_QWORD *)v5 + 19);
  sub_100011064((_QWORD *)v5 + 15, v25);
  v27 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v25, v26, v22, v24);
  v29 = v28;
  v30 = a4;
  v31 = a5;
  v32 = *(double *)&v5[v23];
  v33 = *((_QWORD *)v5 + 18);
  v34 = *((_QWORD *)v5 + 19);
  sub_100011064((_QWORD *)v5 + 15, v33);
  v96 = v32;
  v97 = v29;
  v35 = v31;
  v36 = v30;
  v98 = v27;
  v37 = CGRect.withLayoutDirection(using:relativeTo:)(a1, a2);
  dispatch thunk of Placeable.place(at:with:)(a1, v33, v34, v37);
  v123.origin.x = a2;
  v123.origin.y = a3;
  v123.size.width = v30;
  v123.size.height = v35;
  CGRectGetWidth(v123);
  v124.origin.x = 0.0;
  v124.origin.y = 0.0;
  v124.size.width = v103;
  v124.size.height = rect;
  CGRectGetHeight(v124);
  v38 = v103;
  if (v12)
  {
    v125.origin.x = a2;
    v125.origin.y = a3;
    v125.size.width = v30;
    v125.size.height = v35;
    CGRectGetWidth(v125);
  }
  else
  {
    v39 = 0;
    v40 = 0;
    v41 = rect;
    CGRectGetMaxX(*(CGRect *)(&v38 - 2));
  }
  sub_1003996DC((uint64_t)v5, (uint64_t)v118);
  sub_10011BB28(v118);
  v42 = *((_QWORD *)v5 + 28);
  v43 = *(_QWORD *)(v6 + 232);
  sub_100011064((_QWORD *)(v6 + 200), v42);
  Measurable.placeable.getter(v115, v42, *(_QWORD *)(v43 + 8));
  v44 = v116;
  v45 = v117;
  sub_100011064(v115, v116);
  v46 = CGRect.withLayoutDirection(using:relativeTo:)(a1, a2);
  dispatch thunk of Placeable.place(at:with:)(a1, v44, v45, v46);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v115);
  if (*(_BYTE *)v6)
    v47 = (double *)(v6 + 16);
  else
    v47 = (double *)(v6 + 48);
  v48 = *v47;
  v49 = (double *)(v6 + 32);
  if (!*(_BYTE *)v6)
    v49 = (double *)(v6 + 64);
  v50 = v103 - v48 - *v49;
  v100 = a2;
  v101 = a3;
  v126.origin.x = a2;
  v126.origin.y = a3;
  v126.size.width = v30;
  v126.size.height = v35;
  v51 = CGRectGetHeight(v126);
  v52 = *(_QWORD *)(v6 + 184);
  v53 = *(_QWORD *)(v6 + 192);
  sub_100011064((_QWORD *)(v6 + 160), v52);
  v54 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v52, v53, v50, v51);
  v56 = v55;
  v57 = *(unsigned __int8 *)(v6 + 2);
  sub_1003996DC(v6, (uint64_t)v115);
  v99 = v35;
  if (v57 == 1)
  {
    sub_10011BB28(v115);
    v58 = rect;
    goto LABEL_26;
  }
  v59 = v115[0];
  sub_10011BB28(v115);
  v58 = rect;
  if ((v59 & 1) == 0)
  {
LABEL_26:
    v63 = 0;
    v64 = 0;
    v65 = v103;
    MaxY = CGRectGetMaxY(*(CGRect *)(&v58 - 3));
    v67 = (double *)(v6 + 24);
    if (!*(_BYTE *)v6)
      v67 = (double *)(v6 + 56);
    v62 = MaxY - *v67 - v56;
    v60 = *(double *)(v6 + 16);
    v61 = *(double *)(v6 + 48);
    if ((*(_BYTE *)v6 & 1) != 0)
      goto LABEL_29;
    goto LABEL_31;
  }
  v60 = *(double *)(v6 + 16);
  v61 = *(double *)(v6 + 48);
  if ((*(_BYTE *)v6 & 1) != 0)
  {
    v62 = *(double *)(v6 + 8);
LABEL_29:
    v68 = 1;
    goto LABEL_32;
  }
  v62 = *(double *)(v6 + 40);
LABEL_31:
  v68 = 0;
  v60 = v61;
LABEL_32:
  v69 = *(_QWORD *)(v6 + 184);
  v70 = *(_QWORD *)(v6 + 192);
  sub_100011064((_QWORD *)(v6 + 160), v69);
  v71 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v100);
  dispatch thunk of Placeable.place(at:with:)(a1, v69, v70, v71);
  if (v68)
  {
    type metadata accessor for TodayListCardLockupContainer();
    sub_1001249DC(*(_QWORD *)(v6 + 280), a1);
  }
  v127.origin.x = 0.0;
  v127.origin.y = 0.0;
  v127.size.height = rect;
  v127.size.width = v103;
  CGRectGetMaxY(v127);
  v128.origin.x = v60;
  v128.origin.y = v62;
  v128.size.width = v54;
  v128.size.height = v56;
  CGRectGetMaxY(v128);
  v129.origin.x = v100;
  v129.origin.y = v101;
  v129.size.width = v36;
  v129.size.height = v99;
  CGRectGetWidth(v129);
  v72 = *(_QWORD *)(v6 + 264);
  v73 = *(_QWORD *)(v6 + 272);
  sub_100011064((_QWORD *)(v6 + 240), v72);
  Measurable.placeable.getter(v112, v72, *(_QWORD *)(v73 + 8));
  v74 = v113;
  v75 = v114;
  sub_100011064(v112, v113);
  v76 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v100);
  dispatch thunk of Placeable.place(at:with:)(a1, v74, v75, v76);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  v77 = v6 + 328;
  sub_10007B0D4(v6 + 328, (uint64_t)&v109);
  if (v110)
  {
    sub_100010F3C(&v109, (uint64_t)v112);
    sub_10007B0D4(v6 + 288, (uint64_t)&v106);
    if (v107)
    {
      sub_100010F3C(&v106, (uint64_t)&v109);
      sub_10007B0D4(v6 + 368, (uint64_t)&v104);
      if (v105)
      {
        sub_100010F3C(&v104, (uint64_t)&v106);
        v78 = v113;
        v79 = v114;
        sub_100011064(v112, v113);
        dispatch thunk of Placeable.measure(toFit:with:)(a1, v78, v79, v103, rect);
        v130.origin.x = v100;
        v130.origin.y = v101;
        v130.size.width = v36;
        v130.size.height = v99;
        CGRectGetHeight(v130);
        v131.origin.x = v20;
        v131.origin.y = v96;
        v131.size.width = v98;
        v131.size.height = v97;
        CGRectGetMaxY(v131);
        v132.origin.x = v20;
        v132.origin.y = v96;
        v132.size.width = v98;
        v132.size.height = v97;
        CGRectGetMaxY(v132);
        v80 = v110;
        v81 = v111;
        sub_100011064(&v109, v110);
        v82 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v100);
        dispatch thunk of Placeable.place(at:with:)(a1, v80, v81, v82);
        if (qword_1007F1E30 != -1)
          swift_once(&qword_1007F1E30, sub_100399710);
        v83 = v113;
        v84 = v114;
        sub_100011064(v112, v113);
        dispatch thunk of Placeable.place(at:with:)(a1, v83, v84, 0.0);
        v85 = v107;
        v86 = v108;
        sub_100011064(&v106, v107);
        v87 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v100);
        dispatch thunk of Placeable.place(at:with:)(a1, v85, v86, v87);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v106);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v109);
        return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
      }
      sub_10007B344((uint64_t)&v104);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v109);
    }
    else
    {
      sub_10007B344((uint64_t)&v106);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  }
  else
  {
    sub_10007B344((uint64_t)&v109);
  }
  v88 = v6 + 288;
  sub_10007B0D4(v88, (uint64_t)v112);
  v89 = v113;
  if (v113)
  {
    v90 = v114;
    sub_100011064(v112, v113);
    dispatch thunk of Placeable.place(at:with:)(a1, v89, v90, 0.0);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  }
  else
  {
    sub_10007B344((uint64_t)v112);
  }
  sub_10007B0D4(v77, (uint64_t)v112);
  v91 = v113;
  if (v113)
  {
    v92 = v114;
    sub_100011064(v112, v113);
    dispatch thunk of Placeable.place(at:with:)(a1, v91, v92, 0.0);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  }
  else
  {
    sub_10007B344((uint64_t)v112);
  }
  sub_10007B0D4(v88, (uint64_t)v112);
  v93 = v113;
  if (v113)
  {
    v94 = v114;
    sub_100011064(v112, v113);
    dispatch thunk of Placeable.place(at:with:)(a1, v93, v94, 0.0);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
  }
  return sub_10007B344((uint64_t)v112);
}

uint64_t sub_1003996DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ExtraWideListTodayCardLayout(a2, a1);
  return a2;
}

void sub_100399710()
{
  qword_100854308 = 0x4046800000000000;
}

uint64_t destroy for ExtraWideListTodayCardLayout(_QWORD *a1)
{
  uint64_t result;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 20);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 25);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 30);
  if (a1[39])
    result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 36);
  if (a1[44])
    result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 41);
  if (a1[49])
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 46);
  return result;
}

uint64_t initializeWithCopy for ExtraWideListTodayCardLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  v10 = *(_QWORD *)(a2 + 264);
  v11 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v10;
  *(_QWORD *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v12 = (_OWORD *)(a1 + 288);
  v13 = (_OWORD *)(a2 + 288);
  v14 = *(_QWORD *)(a2 + 312);
  if (v14)
  {
    v15 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 312) = v14;
    *(_QWORD *)(a1 + 320) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 304);
    *v12 = *v13;
    *(_OWORD *)(a1 + 304) = v16;
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  }
  v17 = (_OWORD *)(a1 + 328);
  v18 = (_OWORD *)(a2 + 328);
  v19 = *(_QWORD *)(a2 + 352);
  if (v19)
  {
    v20 = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 352) = v19;
    *(_QWORD *)(a1 + 360) = v20;
    (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
  }
  else
  {
    v21 = *(_OWORD *)(a2 + 344);
    *v17 = *v18;
    *(_OWORD *)(a1 + 344) = v21;
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  }
  v22 = (_OWORD *)(a1 + 368);
  v23 = (_OWORD *)(a2 + 368);
  v24 = *(_QWORD *)(a2 + 392);
  if (v24)
  {
    v25 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 392) = v24;
    *(_QWORD *)(a1 + 400) = v25;
    (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
  }
  else
  {
    v26 = *(_OWORD *)(a2 + 384);
    *v22 = *v23;
    *(_OWORD *)(a1 + 384) = v26;
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  }
  return a1;
}

uint64_t assignWithCopy for ExtraWideListTodayCardLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_10001216C((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  sub_10001216C((_QWORD *)(a1 + 120), (_QWORD *)(a2 + 120));
  sub_10001216C((_QWORD *)(a1 + 160), (_QWORD *)(a2 + 160));
  sub_10001216C((_QWORD *)(a1 + 200), (_QWORD *)(a2 + 200));
  sub_10001216C((_QWORD *)(a1 + 240), (_QWORD *)(a2 + 240));
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v4 = *(_QWORD *)(a2 + 312);
  if (*(_QWORD *)(a1 + 312))
  {
    if (v4)
    {
      sub_10001216C((_QWORD *)(a1 + 288), (_QWORD *)(a2 + 288));
      goto LABEL_8;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 288));
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 312) = v4;
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 288, a2 + 288);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 288);
  v6 = *(_OWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 288) = v5;
  *(_OWORD *)(a1 + 304) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 352);
  if (*(_QWORD *)(a1 + 352))
  {
    if (v7)
    {
      sub_10001216C((_QWORD *)(a1 + 328), (_QWORD *)(a2 + 328));
      goto LABEL_15;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 328));
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 352) = v7;
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 328, a2 + 328);
    goto LABEL_15;
  }
  v8 = *(_OWORD *)(a2 + 328);
  v9 = *(_OWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 328) = v8;
  *(_OWORD *)(a1 + 344) = v9;
LABEL_15:
  v10 = *(_QWORD *)(a2 + 392);
  if (!*(_QWORD *)(a1 + 392))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 392) = v10;
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 368, a2 + 368);
      return a1;
    }
LABEL_21:
    v11 = *(_OWORD *)(a2 + 368);
    v12 = *(_OWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 368) = v11;
    *(_OWORD *)(a1 + 384) = v12;
    return a1;
  }
  if (!v10)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 368));
    goto LABEL_21;
  }
  sub_10001216C((_QWORD *)(a1 + 368), (_QWORD *)(a2 + 368));
  return a1;
}

void *initializeWithTake for ExtraWideListTodayCardLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x198uLL);
}

uint64_t assignWithTake for ExtraWideListTodayCardLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 200));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 240));
  v6 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v6;
  v7 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v7;
  if (*(_QWORD *)(a1 + 312))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 288));
  v8 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v8;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  if (*(_QWORD *)(a1 + 352))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 328));
  v9 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v9;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  if (*(_QWORD *)(a1 + 392))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 368));
  v10 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v10;
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtraWideListTodayCardLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 408))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 104);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtraWideListTodayCardLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 408) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 104) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 408) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtraWideListTodayCardLayout()
{
  return &type metadata for ExtraWideListTodayCardLayout;
}

double sub_100399D9C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  double result;

  v2 = *(_BYTE *)(v1 + 1);
  v3 = *(_BYTE *)(v1 + 2);
  result = *(double *)(v1 + 72);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_BYTE *)(a1 + 1) = v2;
  *(_BYTE *)(a1 + 2) = v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(double *)(a1 + 72) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ExtraWideListTodayCardLayout.Metrics(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[80])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtraWideListTodayCardLayout.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtraWideListTodayCardLayout.Metrics()
{
  return &type metadata for ExtraWideListTodayCardLayout.Metrics;
}

uint64_t sub_100399E9C()
{
  return sub_10000E99C(&qword_10080B030, type metadata accessor for ProductRatingsCollectionViewCell, (uint64_t)&unk_1006885D8);
}

double sub_100399EC8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  __C::UIContentSizeCategory_optional v7;
  id v8;
  Class isa;
  void *v10;
  id v11;
  void (*v12)(char *, _QWORD, uint64_t);
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  __C::UIContentSizeCategory_optional v28;

  v2 = type metadata accessor for SystemImage(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "traitCollection", v4);
  if (qword_1007F2C48 != -1)
    swift_once(&qword_1007F2C48, sub_10049ABD8);
  v28.is_nil = qword_100856780;
  v28.value._rawValue = 0;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v28, v7).super.isa;

  v10 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v11 = objc_msgSend(v10, "configurationWithTextStyle:scale:", UIFontTextStyleHeadline, 2);
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v12(v6, enum case for SystemImage.star(_:), v2);
  v13 = objc_msgSend(v11, "configurationWithTraitCollection:", isa);
  v14 = (void *)static SystemImage.load(_:with:)(v6, v13);

  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  objc_msgSend(v14, "contentInsets");
  v17 = v16;
  objc_msgSend(v14, "contentInsets");
  v19 = v17 + v18;
  objc_msgSend(v14, "size");
  v21 = v20 - v19;
  objc_msgSend(v14, "contentInsets");
  objc_msgSend(v14, "contentInsets");
  objc_msgSend(v14, "size");

  v22 = objc_msgSend(v10, "configurationWithTextStyle:scale:", UIFontTextStyleHeadline, 2);
  v12(v6, enum case for SystemImage.starFill(_:), v2);
  v23 = objc_msgSend(v22, "configurationWithTraitCollection:", isa);
  v24 = (void *)static SystemImage.load(_:with:)(v6, v23);

  v25 = ((uint64_t (*)(char *, uint64_t))v15)(v6, v2);
  UIImage.baselineOffsetFromBottom.getter(v25);
  objc_msgSend(v24, "contentInsets");

  return v21 * 5.0 + 24.0;
}

id sub_10039A18C(void *a1)
{
  id v2;
  id v4;

  if (qword_1007F2C40 != -1)
    swift_once(&qword_1007F2C40, sub_10049ABC0);
  v2 = (id)qword_100856778;
  if ((static UIContentSizeCategory.< infix(_:_:)(v2, a1) & 1) != 0)
    return v2;
  v4 = a1;

  return v4;
}

double sub_10039A204(void *a1, double a2)
{
  id v3;
  double v4;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = sub_100079674((uint64_t)v3, a2);

  return v4;
}

double sub_10039A278(void *a1, void *a2, int a3, double a4, double a5, uint64_t a6, char *a7)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  double v44;
  _QWORD *v45;
  void *v46;
  float v47;
  id v48;
  double v49;
  Class isa;
  Swift::Int v51;
  void *object;
  uint64_t v53;
  float v54;
  void *v55;
  uint64_t v56;
  uint64_t inited;
  NSString *v58;
  unint64_t v59;
  id v60;
  NSString v61;
  Class v62;
  id v63;
  char *v64;
  uint64_t v65;
  void *v66;
  id v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  char *v82;
  __n128 v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  Swift::Int v89;
  Swift::String v90;
  Swift::String v91;
  Swift::String v92;
  __n128 v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void (*v100)(_QWORD *, char *, uint64_t);
  char *v101;
  _QWORD *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  id v133;
  void *v134;
  char *v135;
  _QWORD v136[28];
  _QWORD v137[5];
  uint64_t v138[5];
  _QWORD v139[5];
  _QWORD v140[5];
  uint64_t v141[5];
  char v142;
  char v143[80];
  NSNumber_optional v144;

  v132 = a7;
  v119 = a3;
  v134 = a2;
  v10 = type metadata accessor for Adaptive(0);
  v129 = *(_QWORD *)(v10 - 8);
  v130 = v10;
  v11 = __chkstk_darwin(v10);
  v128 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for TextAppearance(0, v11);
  v124 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v126 = (char *)&v110 - v16;
  v115 = (_QWORD *)type metadata accessor for FontSource(0, v15);
  v123 = *(v115 - 1);
  __chkstk_darwin(v115);
  v122 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FontUseCase(0);
  v120 = *(_QWORD *)(v18 - 8);
  v121 = v18;
  v19 = __chkstk_darwin(v18);
  v118 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DynamicTextAppearance(0, v19);
  v116 = *(_QWORD *)(v21 - 8);
  v117 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v110 - v26;
  v28 = type metadata accessor for LabelPlaceholder(0, v25);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v110 - v33;
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v110 - v37;
  v133 = a1;
  v39 = Ratings.status.getter(v36);
  if (v40)
  {
    v41 = v39;
    v42 = v40;
    type metadata accessor for ProductNoRatingsView();
    v43.n128_f64[0] = a4;
    v44 = sub_1000E1D50(v41, v42, v134, v43, a5);
    swift_bridgeObjectRelease(v42);
  }
  else
  {
    v110 = v23;
    v111 = v27;
    v45 = v115;
    v131 = v38;
    v132 = v34;
    v113 = v31;
    v114 = v29;
    v112 = v28;
    v46 = v134;
    v47 = Ratings.ratingAverage.getter(v39);
    v48 = objc_allocWithZone((Class)NSNumber);
    *(float *)&v49 = v47;
    v144.value.super.super.isa = (Class)objc_msgSend(v48, "initWithFloat:", v49);
    isa = v144.value.super.super.isa;
    v144.is_nil = 1;
    object = localizedStringForDecimal(_:_:)(v144, v51).value._object;

    if (!object)
    {
      v54 = Ratings.ratingAverage.getter(v53);
      Float.description.getter(v54);
      object = v55;
    }
    v56 = sub_10000DF3C(&qword_1007FC280);
    inited = swift_initStackObject(v56, v143);
    *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
    *(_QWORD *)(inited + 64) = &type metadata for CGFloat;
    *(_QWORD *)(inited + 32) = NSKernAttributeName;
    *(_QWORD *)(inited + 40) = 0xC010000000000000;
    v58 = NSKernAttributeName;
    v59 = sub_1003699BC(inited);
    v60 = objc_allocWithZone((Class)NSAttributedString);
    v61 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    type metadata accessor for Key(0);
    sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
    v62 = Dictionary._bridgeToObjectiveC()().super.isa;
    v63 = objc_msgSend(v60, "initWithString:attributes:", v61, v62, swift_bridgeObjectRelease(v59).n128_f64[0]);

    v115 = v63;
    v64 = v110;
    DynamicTextAppearance.init()(v115);
    if (qword_1007F2C38 != -1)
      swift_once(&qword_1007F2C38, sub_10049AA58);
    v119 &= 1u;
    v65 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
    sub_1000117A8(v65, (uint64_t)qword_100856760);
    v66 = v46;
    v67 = objc_msgSend(v46, "snapshotPageTraitEnvironment");
    v136[0] = v67;
    v68 = v118;
    Conditional.evaluate(with:)(v136, v65);
    swift_unknownObjectRelease(v67);
    v69 = v111;
    DynamicTextAppearance.withFontUseCase(_:)(v68);
    v71 = v120;
    v70 = v121;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v68, v121);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v64, v117);
    v72 = LabelPlaceholder.Options.init(rawValue:)(0);
    LabelPlaceholder.init(_:with:where:)(v63, v69, v72);
    v73 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v73, *(unsigned int *)(v73 + 48), *(unsigned __int16 *)(v73 + 52));
    v118 = (char *)LayoutViewPlaceholder.init(measureWith:)(sub_100399EC8, 0, v74);
    v75 = v122;
    v76 = v123;
    if (qword_1007F23E0 != -1)
      swift_once(&qword_1007F23E0, sub_100414D2C);
    v77 = sub_1000117A8(v70, (uint64_t)qword_100855088);
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v75, v77, v70);
    (*(void (**)(char *, _QWORD, _QWORD *))(v76 + 104))(v75, enum case for FontSource.useCase(_:), v45);
    v78 = (void *)FontSource.font(in:for:)(v66, sub_10039A18C, 0);
    (*(void (**)(char *, _QWORD *))(v76 + 8))(v75, v45);
    v79._object = (void *)0x80000001006302D0;
    v79._countAndFlagsBits = 0xD000000000000012;
    v80._countAndFlagsBits = 0;
    v80._object = (void *)0xE000000000000000;
    v81 = localizedStringWithCount(_:count:comment:)(v79, 5, v80);
    v82 = v125;
    TextAppearance.init()(v83);
    v84 = v126;
    TextAppearance.withFont(_:)(v78);
    v85 = *(void (**)(char *, uint64_t))(v124 + 8);
    v86 = v127;
    v85(v82, v127);
    v87 = LabelPlaceholder.Options.init(rawValue:)(0);
    v88 = LabelPlaceholder.init(_:with:where:)(v81._countAndFlagsBits, v81._object, v84, v87);
    v89 = Ratings.totalNumberOfRatings.getter(v88);
    v90._countAndFlagsBits = 0xD000000000000013;
    v90._object = (void *)0x80000001006302F0;
    v91._countAndFlagsBits = 0;
    v91._object = (void *)0xE000000000000000;
    v92 = localizedStringWithCount(_:count:comment:)(v90, v89, v91);
    TextAppearance.init()(v93);
    v133 = v78;
    TextAppearance.withFont(_:)(v78);
    v85(v82, v86);
    v94 = LabelPlaceholder.Options.init(rawValue:)(0);
    LabelPlaceholder.init(_:with:where:)(v92._countAndFlagsBits, v92._object, v84, v94);
    swift_allocObject(v73, *(unsigned int *)(v73 + 48), *(unsigned __int16 *)(v73 + 52));
    v127 = LayoutViewPlaceholder.init(measureWith:)(sub_10039A204, 0, v95);
    v96 = (uint64_t)v128;
    v97 = v112;
    v98 = v114;
    if (qword_1007F2C30 != -1)
      swift_once(&qword_1007F2C30, sub_10049A5E4);
    v137[3] = v97;
    v137[4] = &protocol witness table for LabelPlaceholder;
    v99 = sub_1000117C0(v137);
    v100 = *(void (**)(_QWORD *, char *, uint64_t))(v98 + 16);
    v100(v99, v131, v97);
    v101 = v118;
    v135 = v118;
    Measurable.placeable.getter(v138, v73, &protocol witness table for LayoutViewPlaceholder);
    v139[3] = v97;
    v139[4] = &protocol witness table for LabelPlaceholder;
    v102 = sub_1000117C0(v139);
    v100(v102, v132, v97);
    v140[3] = v97;
    v140[4] = &protocol witness table for LabelPlaceholder;
    v103 = sub_1000117C0(v140);
    v104 = v113;
    v100(v103, v113, v97);
    v105 = v127;
    v135 = (char *)v127;
    Measurable.placeable.getter(v141, v73, &protocol witness table for LayoutViewPlaceholder);
    sub_1000457F4((uint64_t)&xmmword_100856680, (uint64_t)v136);
    v142 = v119;
    v106 = objc_msgSend(v134, "traitCollection");
    sub_100057028(v96);
    v107 = v130;
    v44 = dispatch thunk of Placeable.measure(toFit:with:)(v106, v130, &protocol witness table for Adaptive, a4, a5);
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v96, v107);

    swift_release(v101);
    swift_release(v105);

    sub_100045830(v136);
    v108 = *(void (**)(char *, uint64_t))(v114 + 8);
    v108(v104, v97);
    v108(v132, v97);
    v108(v131, v97);
  }
  return v44;
}

double sub_10039AB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t KeyPath;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *ObjectType;
  double v27;
  double v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;

  v1 = v0;
  v2 = type metadata accessor for Shelf.PresentationHints(0);
  v32 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - v6;
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for Ratings(0);
  v13 = sub_10000E99C(&qword_1007F5310, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v33, v12, v12, v13);
  v14 = v33;
  if (!v33)
    return 0.0;
  KeyPath = swift_getKeyPath(&unk_100688628);
  v31 = v1;
  v16 = KeyPath;
  ItemLayoutContext.subscript.getter(v11);
  swift_release(v16);
  v17 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v19 = v18;
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  v20 = sub_1000826AC();
  v21 = swift_getKeyPath(&unk_100688658);
  ItemLayoutContext.subscript.getter(v7);
  swift_release(v21);
  static Shelf.PresentationHints.isSeeAllContext.getter(v22);
  v23 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v24 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v2, v23);
  v25 = *(void (**)(char *, uint64_t))(v32 + 8);
  v25(v4, v2);
  v25(v7, v2);
  ObjectType = (char *)swift_getObjectType();
  sub_10039A278(v14, v20, v24 & 1, v17, v19, v31, ObjectType);
  v28 = v27;
  swift_unknownObjectRelease(v20);
  swift_release(v14);
  return v28;
}

double sub_10039AD68(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double v14;

  v11 = Screenshots.artwork.getter(a1);
  v13 = Screenshots.mediaPlatform.getter(v12);
  v14 = sub_1002A2978(v11, v13, a8, 0.0, 0.0, a2, a3, a2);
  swift_bridgeObjectRelease(v11);
  swift_release(v13);
  return v14;
}

id sub_10039ADF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_10039AE34(*a1, a2, a4, a5, a6);
}

uint64_t sub_10039AE08()
{
  return sub_10000E99C(&qword_1007F5008, (uint64_t (*)(uint64_t))&type metadata accessor for Screenshots, (uint64_t)&protocol conformance descriptor for Screenshots);
}

id sub_10039AE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  double v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  id result;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[64];
  double v62;
  double v63;

  v6 = v5;
  v8 = type metadata accessor for AspectRatio(0);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Screenshots.mediaPlatform.getter(v9);
  v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_platform];
  v60 = OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_platform;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_platform] = v12;
  *(_QWORD *)&v14 = swift_release(v13).n128_u64[0];
  v15 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_flowLayout];
  objc_msgSend(a5, "pageMarginInsets", v14);
  objc_msgSend(v15, "setSectionInset:");
  v58 = a5;
  v16 = objc_msgSend(a5, "snapshotPageTraitEnvironment");
  v17 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_pageTraits];
  v59 = OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_pageTraits;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_pageTraits] = v16;
  swift_unknownObjectRelease(v17);
  v19 = Screenshots.artwork.getter(v18);
  v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_artwork];
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_artwork] = v19;
  swift_bridgeObjectRetain(v19);
  sub_1001063BC(v21, v20);
  v23 = v22;
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v19).n128_u64[0];
  v25 = &unk_100804000;
  v26 = (uint64_t)&selRef_activityViewController_itemForActivityType_;
  if ((v23 & 1) == 0)
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_collectionView], "reloadData", v24);
  swift_bridgeObjectRelease(v20);
  v28 = Screenshots.artwork.getter(v27);
  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v29)
      goto LABEL_5;
LABEL_23:
    swift_bridgeObjectRelease(v28);
    v30 = _swiftEmptyArrayStorage;
LABEL_24:
    v54 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_sizedArtwork];
    *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension33ScreenshotShelfCollectionViewCell_sizedArtwork] = v30;
    return objc_msgSend(*(id *)&v6[v25[471]], *(SEL *)(v26 + 2320), swift_bridgeObjectRelease(v54).n128_f64[0]);
  }
LABEL_19:
  if (v28 < 0)
    v53 = v28;
  else
    v53 = v28 & 0xFFFFFFFFFFFFFF8;
  v29 = _CocoaArrayWrapper.endIndex.getter(v53);
  if (!v29)
    goto LABEL_23;
LABEL_5:
  v55 = v28 & 0xC000000000000001;
  v30 = _swiftEmptyArrayStorage;
  v26 = 4;
  while (1)
  {
    v31 = v26 - 4;
    if (v55)
    {
      v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26 - 4, v28);
      v33 = v32;
      v34 = (_QWORD *)(v26 - 3);
      if (__OFADD__(v31, 1))
        goto LABEL_18;
    }
    else
    {
      v33 = *(_QWORD *)(v28 + 8 * v26);
      swift_retain(v33);
      v34 = (_QWORD *)(v26 - 3);
      if (__OFADD__(v31, 1))
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    v25 = (_QWORD *)v29;
    Artwork.size.getter(v32);
    AspectRatio.init(_:_:)(v35);
    v36 = sub_1002A1E84();
    v37 = *(_QWORD *)&v6[v60];
    swift_retain(v37);
    sub_10022F9D4(v38, (uint64_t)v61);
    swift_release(v37);
    sub_100075D04((uint64_t)v61);
    result = *(id *)&v6[v59];
    if (!result)
      break;
    v40 = v62;
    v41 = v63;
    objc_msgSend(result, "pageContainerSize");
    v43 = v42;
    v45 = v44;
    objc_msgSend(v6, "bounds");
    v47 = sub_100538CBC(1, (uint64_t)v11, v36 & 1, v58, v40, v41, v43, v45, v46);
    v49 = v48;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v57);
    swift_retain(v33);
    if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
      v30 = (double *)sub_100201138(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v51 = *((_QWORD *)v30 + 2);
    v50 = *((_QWORD *)v30 + 3);
    if (v51 >= v50 >> 1)
      v30 = (double *)sub_100201138((_QWORD *)(v50 > 1), v51 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v51 + 1;
    v52 = &v30[3 * v51];
    *((_QWORD *)v52 + 4) = v33;
    v52[5] = v47;
    *((_QWORD *)v52 + 6) = v49;
    swift_release(v33);
    ++v26;
    v29 = (uint64_t)v25;
    if (v34 == v25)
    {
      swift_bridgeObjectRelease(v28);
      v26 = 0x1007C4000;
      v25 = (_QWORD *)&unk_100804000;
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SheetActionImplementation()
{
  return &type metadata for SheetActionImplementation;
}

unint64_t sub_10039B1F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B080;
  if (!qword_10080B080)
  {
    v1 = type metadata accessor for SheetAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080B080);
  }
  return result;
}

void sub_10039B238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  NSString v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  char v59;
  void *v60;
  NSString v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  __n128 v87;
  id v88;
  __n128 v89;
  id v90;
  id v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  char *v99;
  id v100;
  void *v101;
  double v102;
  double v103;
  void *v104;
  char *v105;
  double v106;
  uint64_t v107;
  __n128 v108;
  void *object;
  Swift::String v110;
  Swift::String v111;
  void *v112;
  NSString v113;
  id v114;
  id v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  _QWORD v171[4];
  __int128 aBlock;
  __int128 v173;
  double (*v174)(uint64_t);
  char *v175;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v4);
  v155 = (char **)((char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_1007F78F0);
  v154 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for FlowOrigin(0, v7);
  v149 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v153 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for FlowAnimationBehavior(0);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v152 = (char *)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for FlowPresentationContext(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v150 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  __chkstk_darwin(v14);
  v148 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  v17 = __chkstk_darwin(v16);
  v145 = (char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for FlowPage(0, v17);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v144 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for Artwork.URLTemplate(0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v21);
  v141 = (char *)&v137 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v157 = (char *)&v137 - v24;
  v162 = type metadata accessor for URL(0);
  v161 = *(_QWORD *)(v162 - 8);
  v25 = __chkstk_darwin(v162);
  v27 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SheetActionStyle(0, v25);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = SheetAction.style.getter(v30);
  v34 = SheetActionStyle.allowsDisplayOfTitle.getter(v33);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  if ((v34 & 1) != 0)
  {
    Action.title.getter(v36);
    v38 = v37;
    SheetAction.message.getter(v39);
    v41 = v40;
    if (v38)
    {
      v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v38);
      if (!v41)
        goto LABEL_8;
LABEL_6:
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v41);
      goto LABEL_9;
    }
    v42 = 0;
    if (v40)
      goto LABEL_6;
  }
  else
  {
    SheetAction.message.getter(v35);
    v41 = v43;
    v42 = 0;
    if (v43)
      goto LABEL_6;
  }
LABEL_8:
  v44 = 0;
LABEL_9:
  v45 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v42, v44, 0);

  v167 = v45;
  v46 = SheetAction.actions.getter(objc_msgSend(v45, "setModalPresentationStyle:", 7));
  v47 = v46;
  v156 = v6;
  v137 = v9;
  if (v46 >> 62)
  {
LABEL_52:
    if (v47 < 0)
      v107 = v47;
    else
      v107 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v47);
    v48 = _CocoaArrayWrapper.endIndex.getter(v107);
    swift_bridgeObjectRelease(v47);
    v49 = v47;
    if (v48)
      goto LABEL_11;
LABEL_56:
    v108 = swift_bridgeObjectRelease(v49);
    if ((SheetAction.isCancelable.getter(v108) & 1) != 0)
    {
      SheetAction.cancelTitle.getter();
      if (!object)
      {
        v110._countAndFlagsBits = 0x435F4E4F49544341;
        v110._object = (void *)0xED00004C45434E41;
        v111._countAndFlagsBits = 0;
        v111._object = (void *)0xE000000000000000;
        object = localizedString(_:comment:)(v110, v111)._object;
      }
      v112 = object;
      v113 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v112);
      v114 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v113, 1, 0);

      v115 = v167;
      objc_msgSend(v167, "addAction:", v114);
      objc_msgSend(v115, "setPreferredAction:", v114);

    }
    v174 = 0;
    aBlock = 0u;
    v173 = 0u;
    v116 = v144;
    (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v144, enum case for FlowPage.viewController(_:), v140);
    v117 = v141;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v161 + 56))(v141, 1, 1, v162);
    v118 = type metadata accessor for ReferrerData(0);
    v119 = v145;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v145, 1, 1, v118);
    v171[3] = sub_10039C250();
    v171[0] = v167;
    v170 = v167;
    v120 = v148;
    static ActionMetrics.notInstrumented.getter(v170);
    v121 = v150;
    (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v150, enum case for FlowPresentationContext.infer(_:), v143);
    v122 = v152;
    (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v152, enum case for FlowAnimationBehavior.infer(_:), v147);
    v123 = v153;
    v124 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v149 + 104))(v153, enum case for FlowOrigin.inapp(_:), v151);
    v125 = static FlowActionPresentation.stackPush.getter(v124);
    v127 = v126;
    v128 = type metadata accessor for FlowAction(0);
    swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
    v129 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&aBlock, 0, 0, 0, v116, v117, 0, 0, v119, v171, v120, v121, v122, v123, 0, v125, v127);
    v130 = v155;
    v131 = v156;
    BaseObjectGraph.optional<A>(_:)(v155, v156, v156);
    v132 = v154;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v154 + 48))(v130, 1, v131) == 1)
    {
      sub_100011088((uint64_t)v130, (uint64_t *)&unk_1007F5140);
      sub_10000DF3C(&qword_100803510);
      v133 = sub_1000559B4();
      v134 = swift_allocError(&type metadata for GeneralActionImplementationError, v133, 0, 0);
      *v135 = 1;
      Promise.__allocating_init(error:)(v134);
    }
    else
    {
      v136 = (uint64_t)v137;
      (*(void (**)(char *, _QWORD *, uint64_t))(v132 + 32))(v137, v130, v131);
      sub_10008EB74(v129, a2, v136);
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v136, v131);
    }
    swift_release(v129);

    return;
  }
  v48 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
  v49 = v46;
  if (!v48)
    goto LABEL_56;
LABEL_11:
  v50 = 0;
  v170 = (id)(v49 & 0xC000000000000001);
  v163 = 0x800000010062F8B0;
  v165 = a1;
  v166 = a2;
  v164 = v49;
  v169 = v48;
  v138 = v27;
  while (1)
  {
    if (v170)
    {
      v51 = specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v49);
      v52 = v50 + 1;
      if (__OFADD__(v50, 1))
        goto LABEL_51;
    }
    else
    {
      v51 = *(_QWORD *)(v49 + 8 * v50 + 32);
      swift_retain(v51);
      v52 = v50 + 1;
      if (__OFADD__(v50, 1))
      {
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
    }
    if (v50 == SheetAction.destructiveActionIndex.getter() && (v53 & 1) == 0)
      v55 = 2;
    else
      v55 = 0;
    v27 = (char *)swift_allocObject(&unk_10073BC48, 32, 7);
    *((_QWORD *)v27 + 2) = v51;
    *((_QWORD *)v27 + 3) = a2;
    swift_retain(v51);
    v56 = swift_retain(a2);
    if ((SheetAction.isCustom.getter(v56) & 1) == 0)
    {
      Action.title.getter(v57);
      if (v65)
      {
        v66 = v65;
        swift_retain(v27);
        v47 = (uint64_t)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v66);
      }
      else
      {
        swift_retain(v27);
        v47 = 0;
      }
      v174 = sub_10039C230;
      v175 = v27;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v173 = sub_10060B64C;
      *((_QWORD *)&v173 + 1) = &unk_10073BC60;
      v80 = _Block_copy(&aBlock);
      swift_release(v175);
      v81 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v47, v55, v80);
      goto LABEL_48;
    }
    v58 = SheetAction.checkedIndex.getter();
    v168 = v55;
    if ((v59 & 1) != 0 || v50 != v58)
    {
      v67 = Action.artwork.getter(v58);
      if (!v67)
        goto LABEL_40;
      v68 = v67;
      v69 = dispatch thunk of Artwork.isBundleImage.getter(v67);
      if ((v69 & 1) != 0)
      {
        v71 = v158;
        v72 = Artwork.template.getter(v70);
        v73 = Artwork.URLTemplate.rawValue.getter(v72);
        v75 = v74;
        (*(void (**)(char *, uint64_t))(v159 + 8))(v71, v160);
        v76 = (uint64_t)v157;
        URL.init(string:)(v73, v75);
        v77 = swift_bridgeObjectRelease(v75);
        v78 = v161;
        v79 = v162;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v161 + 48))(v76, 1, v162, v77) == 1)
        {
          sub_100011088(v76, (uint64_t *)&unk_1007F5150);
LABEL_39:
          swift_release(v68);
LABEL_40:
          v64 = 0;
          goto LABEL_46;
        }
        v82 = v138;
        v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 32))(v138, v76, v79);
        v84 = URL.host.getter(v83);
        v64 = v85;
        if (v85)
        {
          v86 = v84;
          if ((dispatch thunk of Artwork.isBundleImage.getter(v84) & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v78 + 8))(v138, v79);
            swift_release(v68);
            swift_bridgeObjectRelease(v64);
            goto LABEL_40;
          }
          v88 = sub_1004853E8(v86, (uint64_t)v64, 0, v87);
          v89 = swift_bridgeObjectRelease(v64);
          (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v138, v79, v89);
          v90 = objc_msgSend(v88, "imageWithRenderingMode:", 2);

          v64 = objc_msgSend(v90, "_imageThatSuppressesAccessibilityHairlineThickening");
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v82, v79);
        }
      }
      else
      {
        if ((dispatch thunk of Artwork.isSystemImage.getter(v69) & 1) == 0)
          goto LABEL_39;
        v64 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v68, 0, 1);
      }
      swift_release(v68);
      goto LABEL_46;
    }
    v60 = (void *)objc_opt_self(UIImage);
    v61 = String._bridgeToObjectiveC()();
    v62 = objc_msgSend(v60, "kitImageNamed:", v61);

    if (!v62)
      goto LABEL_65;
    v63 = objc_msgSend(v62, "imageWithRenderingMode:", 2);

    v64 = objc_msgSend(v63, "_imageThatSuppressesAccessibilityHairlineThickening");
LABEL_46:
    v91 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    Action.title.getter(v92);
    v94 = v93;
    v96 = v95;
    v97 = objc_allocWithZone((Class)type metadata accessor for AlertActionTrailingImageView());
    v98 = v64;
    v99 = sub_1004373A4(v94, v96, v64);
    objc_msgSend(v91, "setView:", v99);

    v100 = objc_msgSend(v91, "view");
    if (!v100)
      break;
    v101 = v100;
    objc_msgSend(v100, "intrinsicContentSize");
    v103 = v102;

    objc_msgSend(v91, "setPreferredContentSize:", 0.0, v103);
    v104 = (void *)objc_opt_self(UIAlertAction);
    v174 = sub_10039C230;
    v175 = v27;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v173 = sub_10002B92C;
    *((_QWORD *)&v173 + 1) = &unk_10073BC88;
    v80 = _Block_copy(&aBlock);
    v105 = v175;
    v47 = (uint64_t)v91;
    swift_retain(v27);
    *(_QWORD *)&v106 = swift_release(v105).n128_u64[0];
    v81 = objc_msgSend(v104, "_actionWithContentViewController:style:handler:", v47, v168, v80, v106);

    a1 = v165;
    a2 = v166;
    v49 = v164;
LABEL_48:
    _Block_release(v80);

    if (v81)
    {
      objc_msgSend(v167, "addAction:", v81);

    }
    swift_release(v27);
    swift_release(v51);
    ++v50;
    if (v52 == v169)
      goto LABEL_56;
  }

  __break(1u);
LABEL_65:
  __break(1u);
}

double sub_10039C080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v5 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DF3C(&qword_1007F78F0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  BaseObjectGraph.optional<A>(_:)(v7, v8, v8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F5140);
    sub_10000DF3C(&qword_100803510);
    v12 = sub_1000559B4();
    v13 = swift_allocError(&type metadata for GeneralActionImplementationError, v12, 0, 0);
    *v14 = 1;
    v15 = Promise.__allocating_init(error:)(v13);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v11, v7, v8);
    v15 = sub_10008EB60(a2, a3, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_release(a2);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_10039C1FC(uint64_t *a1, uint64_t a2)
{
  sub_10039B238(*a1, a2);
}

uint64_t sub_10039C204()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10039C230(uint64_t a1)
{
  uint64_t v1;

  return sub_10039C080(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10039C238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10039C248(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10039C250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B088;
  if (!qword_10080B088)
  {
    v1 = objc_opt_self(UIAlertController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080B088);
  }
  return result;
}

char *sub_10039C294(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  char *v22;
  _OWORD v24[2];
  objc_super v25[2];
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView;
  v15 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15));
  v17 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v16, "init");
  v17[OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_isAnimationEnabled] = 1;

  v26.receiver = v17;
  v26.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "setClipsToBounds:", 1);

  v20 = *(void **)&v18[OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView];
  objc_msgSend(v20, "setClipsToBounds:", 1);
  v21 = objc_msgSend(v18, "contentView");
  objc_msgSend(v21, "addSubview:", v20);

  memset(v25, 0, sizeof(v25));
  memset(v24, 0, sizeof(v24));
  v22 = v18;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x64416D756964656DLL, 0xEE0070756B636F4CLL, v25, v24);
  sub_100011088((uint64_t)v24, &qword_1007F6E90);
  sub_100011088((uint64_t)v25, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v13);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v22;
}

double sub_10039C540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  double v6;
  double v7;
  double v8;
  _QWORD v10[43];

  v6 = PageGrid.columnWidth.getter(a1);
  if (qword_1007F1920 != -1)
    swift_once(&qword_1007F1920, sub_10028C0C4);
  sub_100076534((uint64_t)&xmmword_100853000, (uint64_t)v10);
  if (qword_1007F1938 != -1)
    swift_once(&qword_1007F1938, sub_10028CF1C);
  sub_10028E66C((uint64_t)v10, (uint64_t)&xmmword_100853420, a5, v6);
  v8 = v7;
  sub_100076570(v10);
  return v8;
}

double sub_10039C64C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  double result;
  uint64_t v22;
  uint64_t v23;

  v9 = type metadata accessor for TodayCard.Style(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = TodayCard.media.getter(v13);
  v15 = type metadata accessor for TodayCardMediaMediumLockupWithScreenshots(0);
  if (swift_dynamicCastClass(v14, v15))
  {
    v23 = v10;
    v16 = TodayCardMediaMediumLockupWithScreenshots.mediumAdLockupWithScreenshotsBackground.getter();
    v22 = v9;
    v17 = a3;
    v18 = v16;
    sub_1000746C0(v16, a4);
    swift_release(v18);
    sub_1004FB730(a1, a2, v17);
    TodayCard.style.getter(v19);
    objc_msgSend(v4, "setNeedsLayout");
    v20 = swift_release(v14);
    (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v12, v22, v20);
  }
  else
  {
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

double sub_10039C7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v16[40];

  v3 = v2;
  sub_100011020(a1, (uint64_t)v16);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v6 = type metadata accessor for TodayCard(0);
  v7 = swift_dynamicCast(&v15, v16, v5, v6, 6);
  if ((_DWORD)v7)
  {
    v9 = v15;
    v10 = TodayCard.media.getter(v7);
    swift_release(v9);
    v11 = type metadata accessor for TodayCardMediaMediumLockupWithScreenshots(0);
    if (swift_dynamicCastClass(v10, v11))
    {
      v12 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView);
      v13 = TodayCardMediaMediumLockupWithScreenshots.mediumAdLockupWithScreenshotsBackground.getter();
      sub_10039CED4(v13, v14, a2, v12);
      swift_release(v13);
    }
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

void sub_10039C870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;

  v5 = *(_QWORD *)(*(_QWORD *)(v3
                             + OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView)
                 + OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v7 = *(id *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  ArtworkView.image.setter(0);

  v8 = *(void **)(v5 + v6);
  v9 = type metadata accessor for ArtworkView(0);
  v10 = sub_100059C5C();
  v11 = v8;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, a3, v9, v10);

}

void (*sub_10039CA5C(uint64_t a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  __int128 v7[2];

  v2 = swift_allocObject(&unk_10073BCE8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  sub_100011020(a1, (uint64_t)v7);
  v3 = swift_allocObject(&unk_10073BD10, 24, 7);
  swift_weakInit(v3 + 16);
  sub_100010F3C(v7, (uint64_t)v6);
  v4 = swift_allocObject(&unk_10073BD38, 72, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_100010F3C(v6, v4 + 32);
  return sub_10039CEC8;
}

void sub_10039CB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  _BYTE v26[40];
  _BYTE v27[24];
  _BYTE v28[24];

  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v6);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v27, 0, 0);
    v16 = swift_weakLoadStrong(v15);
    if (v16)
    {
      v17 = v16;
      sub_100011020(a3, (uint64_t)v26);
      v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v19 = type metadata accessor for TodayCard(0);
      v20 = swift_dynamicCast(&v25, v26, v18, v19, 6);
      if ((v20 & 1) != 0)
      {
        v21 = v25;
        v22 = TodayCard.media.getter(v20);
        v23 = swift_release(v21);
        TodayCardMedia.impressionMetrics.getter(v23);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          swift_release(v22);
          swift_release(v17);

          sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F7740);
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
          objc_msgSend(v14, "bounds");
          ImpressionsCalculator.addElement(_:at:)(v12);

          swift_release(v22);
          v24 = swift_release(v17);
          (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v24);
        }
      }
      else
      {

        swift_release(v17);
      }
    }
    else
    {

    }
  }
}

void sub_10039CD34()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView));
}

uint64_t sub_10039CD54()
{
  return type metadata accessor for MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell(0);
}

uint64_t type metadata accessor for MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B0C8;
  if (!qword_10080B0C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_10039CD98(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_1006887E8;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 608);
}

double sub_10039CDE4(uint64_t a1, uint64_t a2)
{
  return sub_10028BD34(a1, a2);
}

uint64_t sub_10039CE1C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0
                                                    + OBJC_IVAR____TtC22SubscribePageExtension66MediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView)
                                        + OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

uint64_t sub_10039CE4C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039CE70()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039CE94()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 4);
  return swift_deallocObject(v0, 72, 7);
}

void sub_10039CEC8()
{
  uint64_t v0;

  sub_10039CB20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

uint64_t sub_10039CED4(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v19;
  _BYTE v20[40];
  _QWORD v21[5];

  v6 = type metadata accessor for MediumAdLockupWithScreenshotsBackground(0, a2);
  v21[3] = v6;
  v21[4] = &protocol witness table for MediumAdLockupWithScreenshotsBackground;
  v21[0] = a1;
  sub_100011020((uint64_t)v21, (uint64_t)v20);
  swift_retain(a1);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  if (swift_dynamicCast(&v19, v20, v7, v6, 6))
  {
    v9 = v19;
    v10 = MediumAdLockupWithScreenshotsBackground.lockup.getter(v8);
    v12 = Lockup.icon.getter(v11);
    swift_release(v10);
    if (v12)
    {
      if (qword_1007F1920 != -1)
        swift_once(&qword_1007F1920, sub_10028C0C4);
      v13 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_100853000, *((double *)&xmmword_100853000 + 1));
      v14 = *(void **)(*(_QWORD *)(a4
                                 + OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView)
                     + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
      v15 = type metadata accessor for ArtworkView(0);
      v16 = sub_100059C5C();
      v17 = v14;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v13, 2, 1, v17, v15, v16);
      swift_release(v9);
      swift_release(v12);
      swift_release(v13);

    }
    else
    {
      swift_release(v9);
    }
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
}

uint64_t sub_10039D068()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0, v2);
  sub_100045464(v5, qword_100854310);
  sub_1000117A8(v5, (uint64_t)qword_100854310);
  if (qword_1007F3438 != -1)
    swift_once(&qword_1007F3438, sub_10060239C);
  v6 = sub_1000117A8(v0, (uint64_t)qword_1008575D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0xD000000000000018, 0x8000000100688830);
}

void sub_10039D2B0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v3 = v2;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension24UpsellGridViewController_gridView];
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension24UpsellGridViewController_artworkLoader];
  v8 = objc_msgSend(v3, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "bounds");
    v11 = v10;
    v13 = v12;

    v14 = *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon) = a1;
    swift_retain(a1);
    swift_release(v14);
    v15 = (uint64_t *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons);
    swift_beginAccess(v6 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons, v18, 1, 0);
    v16 = *v15;
    *v15 = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v16);
    v17 = *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader) = v7;
    swift_release(v17);
    swift_retain(v7);
    sub_1003A4034(v11, v13);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for UpsellGridViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension24UpsellGridViewController);
}

uint64_t sub_10039D478()
{
  return sub_10039D4C0(&qword_10080B120, "55\v");
}

uint64_t sub_10039D49C()
{
  return sub_10039D4C0(&qword_10080B128, byte_100688894);
}

uint64_t sub_10039D4C0(unint64_t *a1, const char *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UpsellGridViewController();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10039D4FC(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  _QWORD v19[4];

  v3 = type metadata accessor for OSLogger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1E38 != -1)
    swift_once(&qword_1007F1E38, sub_10039D068);
  v7 = sub_1000117A8(v3, (uint64_t)qword_100854310);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10000DF3C(&qword_1007FD430);
  v9 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 2 * *(_QWORD *)(v9 + 72), *(unsigned __int8 *)(v9 + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD000000000000025, 0x800000010063A200);
  swift_getErrorValue(a1, v18, &v16);
  v11 = v16;
  v12 = v17;
  v19[3] = v17;
  v13 = sub_1000117C0(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v13, v11, v12);
  static LogMessage.safe(_:)(v19);
  sub_1000131E0((uint64_t)v19);
  Logger.error(_:)(v10, v3, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
}

char *sub_10039D6A4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  NSString v22;
  uint64_t v24;

  v4 = type metadata accessor for FontUseCase(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  type metadata accessor for FadeInDynamicTypeButton(0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11(v10, a1, v4);
  v11(v7, (uint64_t)v10, v4);
  v12 = a2;
  v13 = (char *)(id)DynamicTypeButton.__allocating_init(useCase:)(v7);
  v14 = sub_10012F458(v12);
  v15 = qword_100819168;
  v16 = *(void **)&v13[qword_100819168];
  *(_QWORD *)&v13[qword_100819168] = v14;

  objc_msgSend(v13, "setBackgroundColor:", v12);
  v17 = objc_msgSend(v13, "layer");
  objc_msgSend(v17, "addSublayer:", *(_QWORD *)&v13[v15]);

  v18 = objc_msgSend(v13, "layer");
  objc_msgSend(v18, "setMasksToBounds:", 0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v19._countAndFlagsBits = 0x4D5F4E4F49544341;
  v19._object = (void *)0xEB0000000045524FLL;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v19, v20)._object;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setTitle:forState:", v22, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v13, "setContentEdgeInsets:", COERCE_DOUBLE(1), 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setAdjustsImageWhenHighlighted:", 0);
  return v13;
}

uint64_t sub_10039D8BC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(uint64_t (**)(void))(a2 + 32);
  v5 = v4();
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 80))(0, 0, v5, v6, a1, a2);
  v7 = swift_unknownObjectRelease(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 56))(a1, a2, v7);
  if (v8)
  {
    v10 = v8;
    v11 = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
    v13 = v12;
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
    sub_1005AA1A0(v11, v13, v14, v15 & 1);
    swift_release(v10);
    v9 = swift_unknownObjectRelease(v11);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, __n128))(a2 + 16))(0, 1, a1, a2, v9);
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a2 + 40))(0, 0, a1, a2);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a2 + 64))(0, a1, a2);
}

void sub_10039D9D8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  void (*v10)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(__n128);
  __n128 v42;
  void (*v43)(__n128);
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  void (*v54)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128);
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128);
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];

  v7 = v6;
  v64 = a4;
  v62 = a3;
  v61 = a2;
  v63 = type metadata accessor for TodayCard.Style(0);
  v10 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128))(v63 - 8);
  __chkstk_darwin(v63);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for EditorialDisplayOptions(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = TodayCard.editorialDisplayOptions.getter(v15);
  v19 = EditorialDisplayOptions.suppressLockup.getter(v18);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  if ((v19 & 1) == 0)
  {
    v21 = TodayCard.overlay.getter(v20);
    if (v21)
    {
      v22 = v21;
      v23 = type metadata accessor for TodayCardOverlayReusePool();
      BaseObjectGraph.optional<A>(_:)(v65, v23, v23);
      v60 = v65[0];
      if (v65[0])
      {
        v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(a5, a6);
        v26 = v25;
        v27 = TodayCardOverlay.kind.getter(v24);
        if ((v26 & 1) != 0
          || (v28 = v27,
              v29 = TodayCardOverlay.Kind.rawValue.getter(v24),
              v27 = TodayCardOverlay.Kind.rawValue.getter(v28),
              v29 != v27))
        {
          v30 = TodayCardOverlay.kind.getter(v27);
          sub_1005A9FFC(v30);
          v32 = v31;
          v59 = v10;
          v34 = v33;
          v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a6 + 32);
          v36 = swift_unknownObjectRetain(v31);
          v37 = v35(a5, a6, v36);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 80))(v32, v34, v37, v38, a5, a6);
          swift_unknownObjectRelease(v32);
          swift_unknownObjectRelease(v37);
          v40 = TodayCardOverlay.kind.getter(v39);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(a6 + 16))(v40, 0, a5, a6);
          v41 = *(void (**)(__n128))(a6 + 40);
          v42 = swift_unknownObjectRetain(v32);
          v10 = v59;
          v41(v42);
          swift_unknownObjectRelease(v32);
        }
        v43 = *(void (**)(__n128))(a6 + 64);
        v44 = swift_retain(v60);
        v43(v44);
        v45 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
        if (v45)
        {
          v47 = v45;
          v48 = v46;
          v65[3] = type metadata accessor for TodayCardOverlay(0);
          v65[4] = sub_100238C74();
          v65[0] = v22;
          v49 = swift_retain(v22);
          TodayCard.style.getter(v49);
          v50 = type metadata accessor for ArtworkLoader(0);
          v51 = v64;
          v52 = *(_QWORD *)(v64 + qword_100854050);
          if (!v52)
          {
            dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v50);
            __break(1u);
            return;
          }
          ObjectType = swift_getObjectType();
          v54 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128))(v48 + 112);
          v58 = ObjectType;
          v59 = v54;
          v55 = swift_retain(v52);
          v59(v65, v51, v61, v12, v62, v52, v58, v48, v55);
          swift_unknownObjectRelease(v47);
          v56 = swift_release(v52);
          (*((void (**)(char *, uint64_t, __n128))v10 + 1))(v12, v63, v56);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v65);
        }
        (*(void (**)(uint64_t, uint64_t))(a6 + 88))(a5, a6);
        objc_msgSend(v7, "setNeedsLayout");
        swift_release(v22);
        v57 = v60;
      }
      else
      {
        v57 = v22;
      }
      swift_release(v57);
    }
  }
}

uint64_t sub_10039DD30(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64x2_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v38;
  double left;
  double right;
  double bottom;
  char *v42;
  uint64_t v43;
  __int128 v44;
  __n128 v45;
  __n128 v46;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  __n128 v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  double v76;
  double v77;
  double v78;
  __int128 v79;
  __n128 v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  int64x2_t v85;
  char *v86;
  double v87;
  double v88;
  double top;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(int64x2_t *, uint64_t, uint64_t);
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  _QWORD v107[2];

  v97 = a1;
  v95 = sub_10000DF3C(&qword_10080B130);
  v92 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v91 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1007F5870);
  v5 = __chkstk_darwin(v4);
  v102 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for PageGrid.HorizontalMargins(0, v5);
  v7 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v9 = (int64x2_t *)((char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v10);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v83 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v83 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v83 - v20;
  if ((a2 & 1) != 0)
    v22 = 1.1;
  else
    v22 = 1.0;
  v23 = sub_10000DF3C(&qword_1007F5878);
  v24 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 32) & ~v26;
  v101 = v25;
  v28 = swift_allocObject(v23, v27 + 6 * v25, v26 | 7);
  *(_OWORD *)(v28 + 16) = xmmword_100671120;
  v90 = v28;
  v99 = v28 + v27;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v29 = xmmword_100856810;
  v105 = *(_QWORD *)&v22;
  v30 = sub_100020838();
  v31 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4020000000000000;
  v103 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v31);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v32);
  __asm { FMOV            V0.2D, #16.0 }
  *v9 = _Q0;
  v38 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v100 = *(void (**)(int64x2_t *, uint64_t, uint64_t))(v7 + 104);
  v100(v9, enum case for PageGrid.HorizontalMargins.absolute(_:), v98);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v105) = 0;
  v42 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v43 = v99;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v21, v42, v12, v18, v15, v9, *(double *)&v29, *((double *)&v29 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v96 = v43 + v101;
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v44 = xmmword_100856820;
  v105 = *(_QWORD *)&v22;
  v45 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4024000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v45);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v46);
  __asm { FMOV            V0.2D, #20.0 }
  *v9 = _Q0;
  v48 = v18;
  v49 = v98;
  v100(v9, v38, v98);
  LOBYTE(v105) = 0;
  v50 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v94 = v21;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v21, v50, v12, v48, v15, v9, *(double *)&v44, *((double *)&v44 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v93 = v99 + 2 * v101;
  v51 = v49;
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v52 = xmmword_100856830;
  v105 = *(_QWORD *)&v22;
  v53 = v94;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4034000000000000;
  v54 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v54);
  v85 = vdupq_n_s64(0x4041000000000000uLL);
  *v9 = v85;
  v100(v9, v38, v51);
  LOBYTE(v105) = 0;
  LODWORD(v96) = v38;
  v55 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  top = UIEdgeInsetsZero.top;
  v88 = left;
  v87 = bottom;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v53, v55, v12, v48, v15, v9, *(double *)&v52, *((double *)&v52 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v84 = v99 + 3 * v101;
  v56 = v51;
  v86 = v12;
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v57 = xmmword_100856870;
  v107[0] = 0x4000000000000000;
  v105 = 0x3FF8000000000000;
  v106 = 0;
  v103 = *(_QWORD *)&v22;
  v104 = 0;
  v58 = sub_10039E8DC();
  v59 = v91;
  v93 = v58;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v107, &v105, &v103, &type metadata for CGFloat);
  v60 = v95;
  AccessibilityConditional.value(with:)(&v105, v97, v95);
  v92 = *(_QWORD *)(v92 + 8);
  ((void (*)(char *, uint64_t))v92)(v59, v60);
  v103 = v105;
  v61 = v94;
  PageGrid.DirectionalValue.init(_:)(&v103, &type metadata for CGFloat, v30);
  v105 = 0x4034000000000000;
  v62 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v62);
  *v9 = v85;
  v100(v9, v96, v56);
  v63 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  LOBYTE(v105) = 0;
  v70 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  v71 = v86;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v61, v70, v71, v48, v15, v9, *(double *)&v57, *((double *)&v57 + 1), v63, v65, v67, v69);
  v84 = v99 + 4 * v101;
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v72 = xmmword_100856880;
  v107[0] = 0x4000000000000000;
  v105 = 0x3FF8000000000000;
  v106 = 0;
  v103 = *(_QWORD *)&v22;
  v104 = 0;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v107, &v105, &v103, &type metadata for CGFloat);
  AccessibilityConditional.value(with:)(&v105, v97, v60);
  v73 = v95;
  ((void (*)(char *, uint64_t))v92)(v59, v95);
  v103 = v105;
  PageGrid.DirectionalValue.init(_:)(&v103, &type metadata for CGFloat, v30);
  v105 = 0x4038000000000000;
  v74 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v74);
  v85 = vdupq_n_s64(0x404A000000000000uLL);
  *v9 = v85;
  v100(v9, v96, v98);
  LOBYTE(v105) = 0;
  v75 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v76 = top;
  v77 = v88;
  v78 = v87;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v61, v75, v71, v48, v15, v9, *(double *)&v72, *((double *)&v72 + 1), top, v88, v87, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v79 = xmmword_100856890;
  v107[0] = 0x4004000000000000;
  v101 = v99 + 5 * v101;
  v105 = 0x4000000000000000;
  v106 = 0;
  v103 = 0x3FF8000000000000;
  v104 = 0;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v107, &v105, &v103, &type metadata for CGFloat);
  AccessibilityConditional.value(with:)(&v105, v97, v73);
  ((void (*)(char *, uint64_t))v92)(v59, v73);
  v103 = v105;
  PageGrid.DirectionalValue.init(_:)(&v103, &type metadata for CGFloat, v30);
  v105 = 0x4038000000000000;
  v80 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v80);
  *v9 = v85;
  v100(v9, v96, v98);
  LOBYTE(v105) = 0;
  v81 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v61, v81, v71, v48, v15, v9, *(double *)&v79, *((double *)&v79 + 1), v76, v77, v78, right);
  return v90;
}

unint64_t sub_10039E8DC()
{
  unint64_t result;

  result = qword_10080B138;
  if (!qword_10080B138)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10080B138);
  }
  return result;
}

uint64_t sub_10039E920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v35;
  double left;
  double bottom;
  double right;
  char *v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  char *v44;
  __int128 v45;
  __n128 v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  __n128 v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  char *v60;
  __int128 v61;
  __n128 v62;
  char *v63;
  double v64;
  double v65;
  __int128 v66;
  __n128 v67;
  _QWORD v69[2];
  int64x2_t v70;
  unint64_t v71;
  uint64_t v72;
  double v73;
  double top;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int64x2_t v78;
  unsigned int v79;
  void (*v80)(int64x2_t *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  _QWORD v89[2];

  v78.i64[0] = a1;
  v76 = sub_10000DF3C(&qword_10080B130);
  v72 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = (char *)v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C(&qword_1007F5870);
  v3 = __chkstk_darwin(v2);
  v83 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for PageGrid.HorizontalMargins(0, v3);
  v5 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v7 = (int64x2_t *)((char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v8);
  v10 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v69 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v69 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v69 - v18;
  v20 = sub_10000DF3C(&qword_1007F5878);
  v21 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v82 = v22;
  v25 = swift_allocObject(v20, v24 + 6 * v22, v23 | 7);
  *(_OWORD *)(v25 + 16) = xmmword_100671120;
  v77 = v25;
  v81 = v25 + v24;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v26 = xmmword_100856810;
  v87 = 0x3FF0000000000000;
  v27 = sub_100020838();
  v28 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4020000000000000;
  v85 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v28);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v35 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v80 = *(void (**)(int64x2_t *, uint64_t, uint64_t))(v5 + 104);
  v80(v7, enum case for PageGrid.HorizontalMargins.absolute(_:), v84);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v87) = 0;
  v39 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v39, v10, v16, v13, v7, *(double *)&v26, *((double *)&v26 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v40 = xmmword_100856820;
  v87 = 0x3FF0000000000000;
  v41 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4024000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v41);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v7 = _Q0;
  v80(v7, v35, v84);
  LOBYTE(v87) = 0;
  v44 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v44, v10, v16, v13, v7, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v45 = xmmword_100856830;
  v87 = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v46);
  v70 = vdupq_n_s64(0x4041000000000000uLL);
  *v7 = v70;
  v80(v7, v35, v84);
  LOBYTE(v87) = 0;
  v79 = v35;
  v47 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  top = UIEdgeInsetsZero.top;
  v73 = left;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v47, v10, v16, v13, v7, *(double *)&v45, *((double *)&v45 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v69[1] = v81 + 3 * v82;
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v48 = xmmword_100856870;
  v89[0] = 0x4000000000000000;
  v87 = 0;
  v88 = 1;
  v85 = 0x3FF0000000000000;
  v86 = 0;
  v49 = sub_10039E8DC();
  v50 = v75;
  v71 = v49;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v89, &v87, &v85, &type metadata for CGFloat);
  v51 = v76;
  AccessibilityConditional.value(with:)(&v87, v78.i64[0], v76);
  v72 = *(_QWORD *)(v72 + 8);
  ((void (*)(char *, uint64_t))v72)(v50, v51);
  v85 = v87;
  PageGrid.DirectionalValue.init(_:)(&v85, &type metadata for CGFloat, v27);
  v87 = 0x4034000000000000;
  v52 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v52);
  *v7 = v70;
  v80(v7, v79, v84);
  v53 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  LOBYTE(v87) = 0;
  v60 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v60, v10, v16, v13, v7, *(double *)&v48, *((double *)&v48 + 1), v53, v55, v57, v59);
  v70.i64[0] = v81 + 4 * v82;
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v61 = xmmword_100856880;
  v89[0] = 0x4000000000000000;
  v87 = 0;
  v88 = 1;
  v85 = 0x3FF0000000000000;
  v86 = 0;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v89, &v87, &v85, &type metadata for CGFloat);
  AccessibilityConditional.value(with:)(&v87, v78.i64[0], v51);
  ((void (*)(char *, uint64_t))v72)(v50, v51);
  v85 = v87;
  PageGrid.DirectionalValue.init(_:)(&v85, &type metadata for CGFloat, v27);
  v87 = 0x4038000000000000;
  v62 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v62);
  v78 = vdupq_n_s64(0x404A000000000000uLL);
  *v7 = v78;
  v80(v7, v79, v84);
  LOBYTE(v87) = 0;
  v63 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v64 = top;
  v65 = v73;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v63, v10, v16, v13, v7, *(double *)&v61, *((double *)&v61 + 1), top, v73, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v66 = xmmword_100856890;
  v87 = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4038000000000000;
  v67 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v67);
  *v7 = v78;
  v80(v7, v79, v84);
  LOBYTE(v87) = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v63, v10, v16, v13, v7, *(double *)&v66, *((double *)&v66 + 1), v64, v65, bottom, right);
  return v77;
}

char *sub_10039F3E0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  void *v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  id v33;
  Class v34;
  void *v35;
  id v36;
  id v37;
  CATransform3D v39;
  objc_super v40;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_style];
  v12 = type metadata accessor for Artwork.Style(0, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image] = 0;
  v13 = objc_allocWithZone((Class)CALayer);
  v14 = v4;
  v15 = objc_msgSend(v13, "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_gradientLayer] = v16;

  v40.receiver = v14;
  v40.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v17, "setClipsToBounds:", 1);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer;
  v19 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer];
  objc_msgSend(v19, "setMasksToBounds:", 1);
  LODWORD(v20) = 1053609165;
  objc_msgSend(v19, "setOpacity:", v20);
  v21 = v19;
  CATransform3DMakeRotation(&v39, -0.523598776, 0.0, 0.0, 1.0);
  objc_msgSend(v21, "setTransform:", &v39);

  v22 = objc_msgSend(v17, "layer");
  objc_msgSend(v22, "addSublayer:", *(_QWORD *)&v17[v18]);

  v23 = OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_gradientLayer;
  v24 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_gradientLayer];
  v25 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v26 = swift_allocObject(v25, 96, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10066F870;
  sub_1000117FC();
  v27 = v24;
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.0).super.isa;
  v29 = -[objc_class CGColor](isa, "CGColor");

  type metadata accessor for CGColor(0);
  v31 = v30;
  *(_QWORD *)(v26 + 56) = v30;
  *(_QWORD *)(v26 + 32) = v29;
  v32 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.47451, 0.47451, 0.47451, 0.5).super.isa;
  v33 = -[objc_class CGColor](v32, "CGColor");

  *(_QWORD *)(v26 + 88) = v31;
  *(_QWORD *)(v26 + 64) = v33;
  v34 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setColors:", v34, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v35 = *(void **)&v17[v23];
  objc_msgSend(v35, "setStartPoint:", 0.5, 0.0);
  objc_msgSend(v35, "setEndPoint:", 0.5, 1.0);
  v36 = objc_msgSend(v17, "layer");
  v37 = v35;
  objc_msgSend(v36, "addSublayer:", v37);

  return v17;
}

id sub_10039F828()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer];
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image];
  if (v2 && (v3 = objc_msgSend(v2, "CGImage")) != 0)
  {
    v7 = v3;
    type metadata accessor for CGImage(0);
    v5 = _bridgeAnythingToObjectiveC<A>(_:)(&v7, v4);

  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, "setContents:", v5);
  return objc_msgSend(v0, "setNeedsLayout", swift_unknownObjectRelease(v5).n128_f64[0]);
}

id sub_10039F8DC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  CGFloat v34;
  uint64_t v35;
  _BYTE v36[24];
  objc_super v37;
  CGRect v38;
  CGRect v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v36[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v36[-v7 - 8];
  v9 = sub_10000DF3C(&qword_1007F67E8);
  __chkstk_darwin(v9);
  v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for Artwork.Style(0, v12);
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)&v15 = __chkstk_darwin(v13).n128_u64[0];
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v37.receiver = v0;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "layoutSubviews", v15);
  objc_msgSend(v0, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_gradientLayer], "setFrame:");
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image])
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer], "setFrame:", 0.0, 0.0, 0.0, 0.0);
  v35 = v3;
  v26 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v26, "begin");
  objc_msgSend(v26, "setDisableActions:", 1);
  v27 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_style];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_style], v36, 0, 0);
  sub_10039FE5C(v27, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_10039FEA4((uint64_t)v11);
    v28 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer];
    objc_msgSend(v28, "setContinuousCorners:", 0);
    objc_msgSend(v28, "setCornerRadius:", 0.0);
  }
  else
  {
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v17, v11, v13);
    v28 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_imageLayer];
    Artwork.Style.cornerStyle.getter(v30);
    v31 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
    v32 = static CornerStyle.== infix(_:_:)(v8, v5);
    v33 = *(void (**)(char *, uint64_t))(v31 + 8);
    v33(v5, v2);
    v33(v8, v2);
    objc_msgSend(v28, "setContinuousCorners:", v32 & 1);
    objc_msgSend(v28, "setCornerRadius:", Artwork.Style.iconCornerRadius(for:)(230.0, 230.0));
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  objc_msgSend(v28, "setBounds:", 0.0, 0.0, 230.0, 230.0);
  v38.origin.x = v19;
  v38.origin.y = v21;
  v38.size.width = v23;
  v38.size.height = v25;
  v34 = CGRectGetMaxX(v38) + -115.0 + 79.0;
  v39.origin.x = v19;
  v39.origin.y = v21;
  v39.size.width = v23;
  v39.size.height = v25;
  objc_msgSend(v28, "setPosition:", v34, CGRectGetMinY(v39) + 115.0 + 13.0);
  return objc_msgSend(v26, "commit");
}

uint64_t sub_10039FD40()
{
  return type metadata accessor for BrandedAppTodayCardNoArtBackgroundView(0);
}

uint64_t type metadata accessor for BrandedAppTodayCardNoArtBackgroundView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B178;
  if (!qword_10080B178)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrandedAppTodayCardNoArtBackgroundView);
  return result;
}

void sub_10039FD84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10039FE08(319, a2);
  if (v4 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(v3 - 8) + 64;
    v5[3] = "\b";
    swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
  }
}

void sub_10039FE08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_10080B188)
  {
    v3 = type metadata accessor for Artwork.Style(255, a2);
    v4 = type metadata accessor for Optional(a1, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_10080B188);
  }
}

uint64_t sub_10039FE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F67E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039FEA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F67E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10039FEE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;

  sub_1003A1EB8(a1, a2, a3, a4, a5, a6);
  v9 = v8;
  swift_bridgeObjectRelease(a3);
  swift_unknownObjectRelease(a4);
  return v9;
}

uint64_t sub_10039FF44()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10000DF3C(&qword_10080B268);
  sub_100045464(v0, qword_10080B190);
  sub_1000117A8(v0, (uint64_t)qword_10080B190);
  v1 = sub_10000DF3C(&qword_10080B280);
  return PreferenceKey.init(_:)(0xD00000000000001BLL, 0x8000000100647720, v1);
}

uint64_t sub_10039FFBC(uint64_t a1)
{
  return sub_1003A016C(a1, qword_10080B1A8, 0x65676175676E616CLL, 0xE800000000000000);
}

uint64_t sub_10039FFDC()
{
  uint64_t v0;

  v0 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  sub_100045464(v0, qword_10080B1C0);
  sub_1000117A8(v0, (uint64_t)qword_10080B1C0);
  return PreferenceKey.init(_:)(0x72656D6165726373, 0xEC00000065646F4DLL, &type metadata for Bool);
}

uint64_t sub_1003A004C()
{
  uint64_t v0;

  v0 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  sub_100045464(v0, qword_10080B1D8);
  sub_1000117A8(v0, (uint64_t)qword_10080B1D8);
  return PreferenceKey.init(_:)(0xD000000000000018, 0x80000001006476D0, &type metadata for Bool);
}

uint64_t sub_1003A00B8()
{
  uint64_t v0;

  v0 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  sub_100045464(v0, qword_10080B1F0);
  sub_1000117A8(v0, (uint64_t)qword_10080B1F0);
  return PreferenceKey.init(_:)(0xD000000000000011, 0x80000001006476B0, &type metadata for Bool);
}

uint64_t sub_1003A0124(uint64_t a1)
{
  return sub_1003A016C(a1, qword_10080B208, 0xD00000000000001ELL, 0x8000000100647690);
}

uint64_t sub_1003A0148(uint64_t a1)
{
  return sub_1003A016C(a1, qword_10080B220, 0xD000000000000020, 0x80000001006476F0);
}

uint64_t sub_1003A016C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_10000DF3C(&qword_10080B260);
  sub_100045464(v7, a2);
  sub_1000117A8(v7, (uint64_t)a2);
  return PreferenceKey.init(_:)(a3, a4, &type metadata for String);
}

uint64_t sub_1003A01D4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD *v46;
  uint64_t v47;
  __int128 v48;
  _QWORD *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t ObjectType;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;

  ObjectType = swift_getObjectType();
  v88 = type metadata accessor for UUID(0);
  v83 = *(uint64_t (**)(char *, uint64_t))(v88 - 8);
  __chkstk_darwin(v88);
  v1 = (char *)&v79 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C(&qword_10080B260);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalPreferences(0);
  v8 = static LocalPreferences.currentApplication.getter(v7);
  if (qword_1007F1E40 != -1)
    swift_once(&qword_1007F1E40, sub_10039FF44);
  v9 = sub_10000DF3C(&qword_10080B268);
  v10 = sub_1000117A8(v9, (uint64_t)qword_10080B190);
  v11 = Preferences.subscript.getter(v10, v6, &protocol witness table for LocalPreferences);
  v13 = v12;
  swift_release(v8);
  v14 = swift_getObjectType();
  if (qword_1007F1E70 != -1)
    swift_once(&qword_1007F1E70, sub_1003A0148);
  v15 = sub_1000117A8(v2, (uint64_t)qword_10080B220);
  v16 = *(void (**)(char *))(v3 + 16);
  v84 = v15;
  v16(v5);
  v91 = xmmword_1006889B0;
  v85 = v14;
  v17 = Preferences.subscript.setter(&v91, v5, v14, &type metadata for String, v13);
  v18 = static Locale.availableIdentifiers.getter(v17);
  *(_QWORD *)&v91 = v18;
  swift_bridgeObjectRetain(v18);
  sub_1003A1224((uint64_t *)&v91);
  swift_bridgeObjectRelease(v18);
  v19 = v91;
  v20 = sub_10041A194(v91);
  swift_release(v19);
  *(_QWORD *)&v91 = &off_100720F48;
  sub_100019D78((uint64_t)v20);
  v21 = v91;
  swift_unknownObjectRetain(v11);
  v22 = ObjectType;
  v23 = sub_10039FEE4(v21, 0x636F4C7465736E75, 0xED00006449656C61, v11, v13, ObjectType);
  swift_bridgeObjectRelease(v21);
  v86 = sub_10000DF3C(&qword_1007F5840);
  v24 = swift_allocObject(v86, 104, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1006889C0;
  v25 = swift_allocObject(&unk_10073BE00, 56, 7);
  *(_QWORD *)(v25 + 16) = v11;
  *(_QWORD *)(v25 + 24) = v13;
  strcpy((char *)(v25 + 32), "unsetLocaleId");
  *(_WORD *)(v25 + 46) = -4864;
  *(_QWORD *)(v25 + 48) = v22;
  v82 = type metadata accessor for MenuDebugSetting();
  swift_allocObject(v82, 96, 7);
  swift_unknownObjectRetain(v11);
  sub_100092F78(0xD000000000000011, 0x8000000100647510, v23, (uint64_t)sub_1003A12B8, v25);
  *(_QWORD *)(v24 + 32) = v26;
  v27 = type metadata accessor for DebugSetting();
  if (qword_1007F1E50 != -1)
    swift_once(&qword_1007F1E50, sub_10039FFDC);
  v28 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v29 = sub_1000117A8(v28, (uint64_t)qword_10080B1C0);
  v30 = v85;
  *(_QWORD *)(v24 + 40) = sub_1002F2190(0x72656D6165726353, 0xED000065646F4D20, 0xD000000000000025, 0x8000000100647530, v29, v11, 0, v27, v85, v13);
  if (qword_1007F1E58 != -1)
    swift_once(&qword_1007F1E58, sub_1003A004C);
  v31 = sub_1000117A8(v28, (uint64_t)qword_10080B1D8);
  *(_QWORD *)(v24 + 48) = sub_1002F2190(0xD000000000000011, 0x8000000100647560, 0xD00000000000002CLL, 0x8000000100647580, v31, v11, 1, v27, v30, v13);
  v80 = type metadata accessor for InfoDebugSetting();
  v32 = (_QWORD *)swift_allocObject(v80, 88, 7);
  v32[7] = 0xD000000000000013;
  v32[8] = 0x80000001006475B0;
  v32[9] = 0xD00000000000001CLL;
  v32[10] = 0x80000001006475D0;
  v34 = UUID.init()(v33);
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  v38 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v83 + 1);
  v81 = v1;
  v83 = v38;
  v38(v1, v88);
  *(_QWORD *)&v91 = v35;
  *((_QWORD *)&v91 + 1) = v37;
  AnyHashable.init<A>(_:)(&v91, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v24 + 56) = v32;
  if (qword_1007F1E60 != -1)
    swift_once(&qword_1007F1E60, sub_1003A00B8);
  v39 = sub_1000117A8(v28, (uint64_t)qword_10080B1F0);
  *(_QWORD *)(v24 + 64) = sub_1002F2190(0xD000000000000012, 0x80000001006475F0, 0xD000000000000030, 0x8000000100647610, v39, v11, 0, v27, v30, v13);
  v40 = swift_allocObject(v86, 56, 7);
  *(_OWORD *)(v40 + 16) = xmmword_1006710E0;
  v89 = 1701736302;
  v90 = 0xE400000000000000;
  AnyHashable.init<A>(_:)(&v89, &type metadata for String, &protocol witness table for String);
  v41 = (_QWORD *)swift_allocObject(&unk_10073BE28, 40, 7);
  v41[2] = v11;
  v41[3] = v13;
  v42 = ObjectType;
  v41[4] = ObjectType;
  v43 = type metadata accessor for MenuItemDebugSetting();
  v44 = swift_allocObject(v43, 96, 7);
  *(_BYTE *)(v44 + 72) = 0;
  *(_QWORD *)(v44 + 56) = 1701736270;
  *(_QWORD *)(v44 + 64) = 0xE400000000000000;
  *(_QWORD *)(v44 + 80) = sub_1003A1D14;
  *(_QWORD *)(v44 + 88) = v41;
  v45 = v92;
  *(_OWORD *)(v44 + 16) = v91;
  *(_OWORD *)(v44 + 32) = v45;
  *(_QWORD *)(v44 + 48) = v93;
  *(_QWORD *)(v40 + 32) = v44;
  v89 = 0x646E616D65446E6FLL;
  v90 = 0xE800000000000000;
  swift_unknownObjectRetain(v11);
  AnyHashable.init<A>(_:)(&v89, &type metadata for String, &protocol witness table for String);
  v46 = (_QWORD *)swift_allocObject(&unk_10073BE50, 40, 7);
  v46[2] = v11;
  v46[3] = v13;
  v46[4] = v42;
  v47 = swift_allocObject(v43, 96, 7);
  *(_BYTE *)(v47 + 72) = 0;
  *(_QWORD *)(v47 + 56) = 0x6E616D6544206E4FLL;
  *(_QWORD *)(v47 + 64) = 0xE900000000000064;
  *(_QWORD *)(v47 + 80) = sub_1003A1D38;
  *(_QWORD *)(v47 + 88) = v46;
  v48 = v92;
  *(_OWORD *)(v47 + 16) = v91;
  *(_OWORD *)(v47 + 32) = v48;
  *(_QWORD *)(v47 + 48) = v93;
  *(_QWORD *)(v40 + 40) = v47;
  v89 = 0x74726174536E6FLL;
  v90 = 0xE700000000000000;
  swift_unknownObjectRetain(v11);
  AnyHashable.init<A>(_:)(&v89, &type metadata for String, &protocol witness table for String);
  v49 = (_QWORD *)swift_allocObject(&unk_10073BE78, 40, 7);
  v49[2] = v11;
  v49[3] = v13;
  v49[4] = v42;
  v50 = swift_allocObject(v43, 96, 7);
  *(_BYTE *)(v50 + 72) = 0;
  *(_QWORD *)(v50 + 80) = sub_1003A1D5C;
  *(_QWORD *)(v50 + 88) = v49;
  v51 = v92;
  *(_OWORD *)(v50 + 16) = v91;
  *(_OWORD *)(v50 + 32) = v51;
  v52 = v93;
  *(_QWORD *)(v50 + 56) = 0x7472617453206E4FLL;
  *(_QWORD *)(v50 + 64) = 0xE800000000000000;
  *(_QWORD *)(v50 + 48) = v52;
  *(_QWORD *)(v40 + 48) = v50;
  *(_QWORD *)&v91 = v40;
  specialized Array._endMutation()(v50);
  v53 = v91;
  v54 = (_QWORD *)swift_allocObject(&unk_10073BEA0, 40, 7);
  v54[2] = v11;
  v54[3] = v13;
  v54[4] = v42;
  swift_allocObject(v82, 96, 7);
  swift_unknownObjectRetain_n(v11, 2);
  sub_100092F78(0xD00000000000001ALL, 0x8000000100647650, v53, (uint64_t)sub_1003A1DA4, (uint64_t)v54);
  *(_QWORD *)(v24 + 72) = v55;
  Preferences.subscript.getter(&v91, v84, v85, &type metadata for String, v13);
  v56 = v91;
  v57 = swift_allocObject(v80, 88, 7);
  *(_QWORD *)(v57 + 56) = 0xD000000000000016;
  *(_QWORD *)(v57 + 64) = 0x8000000100647670;
  *(_OWORD *)(v57 + 72) = v56;
  v58 = swift_bridgeObjectRetain(*((_QWORD *)&v56 + 1));
  v59 = v81;
  v60 = UUID.init()(v58);
  v61 = UUID.uuidString.getter(v60);
  v63 = v62;
  v64 = v83;
  v83(v59, v88);
  v89 = v61;
  v90 = v63;
  AnyHashable.init<A>(_:)(&v89, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(*((_QWORD *)&v56 + 1));
  *(_QWORD *)(v24 + 80) = v57;
  v65 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v65, 120, 7);
  *(_QWORD *)(v24 + 88) = sub_1004804B8(0x655320796C707041, 0xEE0073676E697474, 0, 0, 0, 0, (uint64_t)sub_1003A11B4, 0);
  swift_allocObject(v65, 120, 7);
  v66 = sub_1004804B8(0x6553207465736552, 0xEE0073676E697474, 0, 0, 0, 0, (uint64_t)sub_1003A1DB0, 0);
  *(_QWORD *)(v24 + 96) = v66;
  *(_QWORD *)&v91 = v24;
  specialized Array._endMutation()(v66);
  v67 = v91;
  v68 = swift_allocObject(v86, 40, 7);
  *(_OWORD *)(v68 + 16) = xmmword_10066FE60;
  v69 = type metadata accessor for DebugSection();
  v70 = (_QWORD *)swift_allocObject(v69, 56, 7);
  v72 = UUID.init()(v71);
  v73 = UUID.uuidString.getter(v72);
  v75 = v74;
  v76 = v64(v59, v88);
  v70[2] = v73;
  v70[3] = v75;
  v70[4] = 0x657A696C61636F4CLL;
  v70[5] = 0xE900000000000072;
  v70[6] = v67;
  *(_QWORD *)(v68 + 32) = v70;
  *(_QWORD *)&v91 = v68;
  specialized Array._endMutation()(v76);
  v77 = v91;
  swift_unknownObjectRelease(v11);
  return v77;
}

double sub_1003A0C34@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  double result;
  _QWORD v23[2];
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v10 = *a1;
  v11 = a1[1];
  if (v11)
  {
    v12 = a1[1];
    v13 = v12;
    v14 = *a1;
    v15 = *a1;
    v16 = v12;
  }
  else
  {
    v16 = a3;
    v15 = a2;
    swift_bridgeObjectRetain(a3);
    v13 = 0;
    v14 = 0x74655320746F4ELL;
    v12 = 0xE700000000000000;
  }
  v23[0] = v15;
  v23[1] = v16;
  swift_bridgeObjectRetain(v13);
  AnyHashable.init<A>(_:)(v23, &type metadata for String, &protocol witness table for String);
  v17 = (_QWORD *)swift_allocObject(&unk_10073BEC8, 56, 7);
  v17[2] = v10;
  v17[3] = v11;
  v17[4] = a4;
  v17[5] = a5;
  v17[6] = a6;
  v18 = type metadata accessor for MenuItemDebugSetting();
  v19 = swift_allocObject(v18, 96, 7);
  *(_BYTE *)(v19 + 72) = 0;
  *(_QWORD *)(v19 + 56) = v14;
  *(_QWORD *)(v19 + 64) = v12;
  *(_QWORD *)(v19 + 80) = sub_1003A1FFC;
  *(_QWORD *)(v19 + 88) = v17;
  v20 = v25;
  *(_OWORD *)(v19 + 16) = v24;
  *(_OWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 48) = v26;
  *a7 = v19;
  swift_bridgeObjectRetain_n(v13, 2);
  *(_QWORD *)&result = swift_unknownObjectRetain(a4).n128_u64[0];
  return result;
}

uint64_t sub_1003A0D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[5];

  v7 = sub_10000DF3C(&qword_10080B260);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  if (a2)
  {
    if (qword_1007F1E48 != -1)
      swift_once(&qword_1007F1E48, sub_10039FFBC);
    v12 = sub_1000117A8(v7, (uint64_t)qword_10080B1A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
    v17[0] = a1;
    v17[1] = a2;
    swift_bridgeObjectRetain(a2);
    return Preferences.subscript.setter(v17, v10, ObjectType, &type metadata for String, a4);
  }
  else
  {
    if (qword_1007F1E48 != -1)
      swift_once(&qword_1007F1E48, sub_10039FFBC);
    v14 = sub_1000117A8(v7, (uint64_t)qword_10080B1A8);
    v17[3] = v7;
    v17[4] = sub_1003A200C(&qword_10080B278, &qword_10080B260);
    v15 = sub_1000117C0(v17);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v15, v14, v7);
    dispatch thunk of Preferences.removeValue(forKey:)(v17, ObjectType, a4);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v17);
  }
}

uint64_t sub_1003A0F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  if (qword_1007F1E48 != -1)
    swift_once(&qword_1007F1E48, sub_10039FFBC);
  v8 = sub_10000DF3C(&qword_10080B260);
  v9 = sub_1000117A8(v8, (uint64_t)qword_10080B1A8);
  Preferences.subscript.getter(&v11, v9, ObjectType, &type metadata for String, a2);
  if (v12)
  {
    a3 = v11;
    a4 = v12;
  }
  else
  {
    swift_bridgeObjectRetain(a4);
  }
  v11 = a3;
  v12 = a4;
  return AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
}

uint64_t sub_1003A0FE0(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjectType;
  uint64_t v9;
  __n128 v11;
  __n128 v12;

  v11 = a1;
  v4 = sub_10000DF3C(&qword_10080B260);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  if (qword_1007F1E68 != -1)
    swift_once(&qword_1007F1E68, sub_1003A0124);
  v9 = sub_1000117A8(v4, (uint64_t)qword_10080B208);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v12 = v11;
  return Preferences.subscript.setter(&v12, v7, ObjectType, &type metadata for String, a3);
}

uint64_t sub_1003A10D4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  ObjectType = swift_getObjectType();
  if (qword_1007F1E68 != -1)
    swift_once(&qword_1007F1E68, sub_1003A0124);
  v4 = sub_10000DF3C(&qword_10080B260);
  v5 = sub_1000117A8(v4, (uint64_t)qword_10080B208);
  Preferences.subscript.getter(&v9, v5, ObjectType, &type metadata for String, a2);
  v7 = v9;
  v6 = v10;
  if (!v10)
  {
    v7 = 0x74726174536E6FLL;
    v6 = 0xE700000000000000;
  }
  v9 = v7;
  v10 = v6;
  return AnyHashable.init<A>(_:)(&v9, &type metadata for String, &protocol witness table for String);
}

void sub_1003A11B4()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v0, "notify");

}

uint64_t type metadata accessor for LocalizerSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension17LocalizerSettings);
}

void sub_1003A1224(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10005D9FC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1003A12C8(v4);
  *a1 = v2;
}

uint64_t sub_1003A128C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A12B8()
{
  uint64_t *v0;

  return sub_1003A0F00(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1003A12C8(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  double *v110;
  Swift::Int v111;
  Swift::Int v112;
  Swift::Int v113;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1003A19B0(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v111 = v4;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v110 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v102 = *v108;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v102)
          goto LABEL_161;
        v100 = v101;
        v104 = *(_QWORD *)&v101[16 * v103 + 32];
        v105 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_1003A1A7C((char *)(v102 + 16 * v104), (char *)(v102 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 16 * v105, __dst);
        if (v1)
          goto LABEL_116;
        if (v105 < v104)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_10005D9D4((uint64_t)v100);
        if (v103 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v106 = &v100[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v100 + 2);
        if (v12 > v107)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_117;
      }
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v110 = (double *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v111)
      {
        if (__OFADD__(v13, v111))
          goto LABEL_155;
        if (v13 + v111 >= v3)
          v36 = v3;
        else
          v36 = v13 + v111;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v39 == v43 && v40 == v44;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v43, v44, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10005D78C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_10005D78C((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_120;
    }
  }
  v113 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_1003A1A7C((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v113;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0.0;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_1003A19B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A1A7C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v19 = &v4[16 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v20 = (char *)(a3 - 16);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 16;
          v23 = *((_QWORD *)v19 - 2);
          v24 = *((_QWORD *)v19 - 1);
          v25 = *((_QWORD *)v21 - 2);
          v26 = *((_QWORD *)v21 - 1);
          v21 -= 16;
          v27 = v23 == v25 && v24 == v26;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 1) & 1) == 0)
          {
            v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_OWORD *)v20 = *((_OWORD *)v19 - 1);
            v21 = v6;
            v19 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
              *(_OWORD *)v20 = *(_OWORD *)v21;
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 16;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *((_QWORD *)v6 + 1);
        v16 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v6 == *(_QWORD *)v4 && v15 == v16;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v15, *(_QWORD *)v4, v16, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v30 = v4;
          v18 = v6;
        }
        else
        {
          v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_10005D92C((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003A1D14()
{
  uint64_t v0;

  return sub_1003A0FE0((__n128)xmmword_1006889D0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A1D38()
{
  uint64_t v0;

  return sub_1003A0FE0((__n128)xmmword_1006889E0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A1D5C()
{
  uint64_t v0;

  return sub_1003A0FE0((__n128)xmmword_1006889F0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A1D80()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A1DA4()
{
  uint64_t v0;

  return sub_1003A10D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003A1DB0()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  _QWORD v6[5];

  type metadata accessor for LocalPreferences(0);
  v1 = static LocalPreferences.currentApplication.getter(v0);
  if (qword_1007F1E40 != -1)
    swift_once(&qword_1007F1E40, sub_10039FF44);
  v2 = sub_10000DF3C(&qword_10080B268);
  v3 = sub_1000117A8(v2, (uint64_t)qword_10080B190);
  v6[3] = v2;
  v6[4] = sub_1003A200C(&qword_10080B270, &qword_10080B268);
  v4 = sub_1000117C0(v6);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v4, v3, v2);
  LocalPreferences.removeValue(forKey:)(v6);
  swift_release(v1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v6);
  v5 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v5, "notify");

}

void sub_1003A1EB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20[2];
  uint64_t v21;
  double *v22;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v22 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v8);
    v12 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v13 = *v12;
      v20[0] = *(v12 - 1);
      v20[1] = v13;
      swift_bridgeObjectRetain(v13);
      sub_1003A0C34(v20, a2, a3, a4, a5, a6, &v21);
      swift_bridgeObjectRelease(v13);
      if (v6)
        break;
      v12 += 2;
      v15 = v21;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = *((_QWORD *)v22 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
      if (!--v8)
        return;
    }
    swift_release(v22);
  }
}

uint64_t sub_1003A1FD0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A1FFC()
{
  uint64_t *v0;

  return sub_1003A0D70(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1003A200C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100010EF8(a2);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for PreferenceKey<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003A2058()
{
  return sub_10000E99C(&qword_10080B288, type metadata accessor for LargeGameCenterPlayerCollectionViewCell, (uint64_t)&unk_100688A34);
}

double sub_1003A2088(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_QWORD);
  char v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  void (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  int v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  void (*v100)(char *, _QWORD, uint64_t);
  unsigned int v101;
  void (*v102)(char *, _QWORD, uint64_t);
  void (*v103)(char *, uint64_t);
  void (*v104)(_QWORD *, _QWORD, uint64_t);
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  id v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[5];
  uint64_t v138;
  void *v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v131 = type metadata accessor for FloatingPointRoundingRule(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v127 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for VerticalFlowLayout(0);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v126 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for VerticalFlowLayout.Child(0);
  v10 = *(_QWORD *)(v116 - 8);
  v11 = __chkstk_darwin(v116);
  v114 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(0, v11);
  v122 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v119 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for VerticalFlowLayout.HorizontalPlacement(0);
  v120 = *(_QWORD *)(v123 - 8);
  v14 = __chkstk_darwin(v123);
  v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for VerticalFlowLayout.VerticalPlacement(0, v14);
  v135 = *(_QWORD *)(v121 - 8);
  v17 = __chkstk_darwin(v121);
  v19 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LabelPlaceholderCompatibility(0, v17);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = (_QWORD *)a1;
  v24 = *(double *)(a1 + 8);
  v25 = sub_1000466E4();
  if (qword_1007F2508 != -1)
    swift_once(&qword_1007F2508, sub_10041585C);
  v107 = type metadata accessor for FontUseCase(0);
  v26 = sub_1000117A8(v107, (uint64_t)qword_100855400);
  v133 = a2;
  v27 = objc_msgSend(a2, "traitCollection");
  v109 = v25;
  v28 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v26, v27);

  v29 = type metadata accessor for Feature(0);
  v145 = v29;
  v106 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v146 = v106;
  v30 = sub_1000117C0(&v144);
  v31 = *(void (**)(_QWORD))(*(_QWORD *)(v29 - 8) + 104);
  v105 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v108 = v29;
  v104 = (void (*)(_QWORD *, _QWORD, uint64_t))v31;
  v31(v30);
  v32 = isFeatureEnabled(_:)(&v144);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v144);
  v33 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(0, 0xE000000000000000, v28, 4, 0, 0, 1, 0, v32 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v144, v33);
  v34 = *(void (**)(char *, uint64_t))(v21 + 8);
  v112 = v23;
  v113 = v20;
  v103 = v34;
  v34(v23, v20);
  v35 = sub_10000DF3C((uint64_t *)&unk_1007F4760);
  v36 = *(_QWORD *)(v10 + 72);
  v115 = v10;
  v37 = *(unsigned __int8 *)(v10 + 80);
  v38 = (v37 + 32) & ~v37;
  v111 = v36;
  v39 = swift_allocObject(v35, v38 + v36, v37 | 7);
  v132 = xmmword_10066FBA0;
  *(_OWORD *)(v39 + 16) = xmmword_10066FBA0;
  v125 = v39;
  v110 = v38;
  v118 = v39 + v38;
  v40 = v145;
  v41 = v146;
  v42 = sub_100011064(&v144, v145);
  v142 = v40;
  v143 = *(_QWORD *)(v41 + 8);
  v43 = sub_1000117C0(&v141);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v43, v42, v40);
  v44 = v134;
  v117 = v134 + 2;
  v139 = &type metadata for Double;
  v140 = &protocol witness table for Double;
  v138 = 0;
  v45 = *(void (**)(_QWORD))(v135 + 104);
  v101 = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
  v46 = v121;
  v102 = (void (*)(char *, _QWORD, uint64_t))v45;
  v45(v19);
  v47 = v120;
  v48 = *(void (**)(_QWORD))(v120 + 104);
  v99 = enum case for VerticalFlowLayout.HorizontalPlacement.center(_:);
  v49 = v123;
  v100 = (void (*)(char *, _QWORD, uint64_t))v48;
  v48(v16);
  v50 = sub_10000DF3C((uint64_t *)&unk_100819230);
  v51 = v122;
  v52 = *(unsigned __int8 *)(v122 + 80);
  v53 = (v52 + 32) & ~v52;
  v54 = v53 + *(_QWORD *)(v122 + 72);
  v97 = v50;
  v96 = v54;
  v95 = v52 | 7;
  v55 = swift_allocObject(v50, v54, v52 | 7);
  *(_OWORD *)(v55 + 16) = v132;
  v98 = v53;
  static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v55);
  v137[0] = v55;
  v56 = sub_10000E99C(&qword_1007F4750, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
  v57 = sub_10000DF3C((uint64_t *)&unk_100819240);
  v58 = sub_100019528();
  v59 = v119;
  v93 = v57;
  v60 = v57;
  v92 = v58;
  v61 = v124;
  v94 = v56;
  dispatch thunk of SetAlgebra.init<A>(_:)(v137, v60, v58, v124, v56);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v141, v117, &v138, v19, v16, v59);
  v122 = *(_QWORD *)(v51 + 8);
  ((void (*)(char *, uint64_t))v122)(v59, v61);
  v120 = *(_QWORD *)(v47 + 8);
  ((void (*)(char *, uint64_t))v120)(v16, v49);
  v135 = *(_QWORD *)(v135 + 8);
  ((void (*)(char *, uint64_t))v135)(v19, v46);
  sub_1000DC354((uint64_t)&v138);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v141);
  if (*((_BYTE *)v44 + 176) == 1)
  {
    v62 = v61;
    v63 = v49;
    v64 = v46;
    if (qword_1007F2510 != -1)
      swift_once(&qword_1007F2510, sub_100415874);
    v65 = sub_1000117A8(v107, (uint64_t)qword_100855418);
    v66 = objc_msgSend(v133, "traitCollection");
    v67 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v65, v66);

    v68 = v108;
    v142 = v108;
    v143 = v106;
    v69 = sub_1000117C0(&v141);
    v104(v69, v105, v68);
    LOBYTE(v68) = isFeatureEnabled(_:)(&v141);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v141);
    LOBYTE(v91) = v68 & 1;
    v70 = v112;
    v71 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(0, 0xE000000000000000, v67, 4, 0, 0, 1, 0, v91);
    LabelPlaceholderCompatibility.layoutTextView.getter(&v141, v71);
    v103(v70, v113);
    v72 = v142;
    v73 = v143;
    v74 = sub_100011064(&v141, v142);
    v139 = (void *)v72;
    v140 = *(void **)(v73 + 8);
    v75 = sub_1000117C0(&v138);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v75, v74, v72);
    v76 = v134;
    v137[4] = &protocol witness table for Double;
    v137[3] = &type metadata for Double;
    v137[0] = 0;
    v77 = v19;
    v102(v19, v101, v64);
    v100(v16, v99, v63);
    v78 = swift_allocObject(v97, v96, v95);
    *(_OWORD *)(v78 + 16) = v132;
    static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v78);
    v136 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v136, v93, v92, v62, v94);
    v79 = v114;
    static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v138, v76 + 7, v137, v77, v16, v59);
    ((void (*)(char *, uint64_t))v122)(v59, v62);
    ((void (*)(char *, uint64_t))v120)(v16, v63);
    ((void (*)(char *, uint64_t))v135)(v77, v64);
    sub_1000DC354((uint64_t)v137);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v138);
    v80 = v125;
    v82 = *(_QWORD *)(v125 + 16);
    v81 = *(_QWORD *)(v125 + 24);
    if (v82 >= v81 >> 1)
      v80 = sub_1002006F8(v81 > 1, v82 + 1, 1, v125);
    v83 = v115;
    *(_QWORD *)(v80 + 16) = v82 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v80 + v110 + v82 * v111, v79, v116);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v141);
  }
  else
  {
    v76 = v44;
    v80 = v125;
  }
  v84 = v126;
  VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v80);
  v85 = v133;
  v86 = v129;
  dispatch thunk of Measurable.measurements(fitting:in:)(v133, v129, &protocol witness table for VerticalFlowLayout, a3, a4 - v24);
  v87 = v76[15];
  v88 = v76[16];
  sub_100011064(v76 + 12, v87);
  v89 = v127;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v87);
  AnyDimension.value(in:rounded:)(v85, v89, v87, v88);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v89, v131);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v84, v86);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v144);
  return a3;
}

double sub_1003A2B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  double *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v21;
  objc_super v22;
  _QWORD v23[23];

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v4);
  v5 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v7 = v6;
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  if (qword_1007F3430 != -1)
    swift_once(&qword_1007F3430, sub_1005FF108);
  v9 = sub_1001FFA28((uint64_t)&xmmword_1008574F0, (uint64_t)v23);
  v10 = ShelfLayoutContext.contentPageGrid.getter(v9);
  v11 = PageGrid.containerWidth.getter(v10);
  v12 = ((uint64_t (*)(char *, uint64_t))v8)(v3, v0);
  v13 = ShelfLayoutContext.traitCollection.getter(v12);
  v14 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = (double *)&v15[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v16 = v11;
  v16[1] = 1.79769313e308;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v13;
  v22.receiver = v15;
  v22.super_class = v14;
  v17 = objc_msgSendSuper2(&v22, "init");
  sub_1003A2088((uint64_t)v23, v17, v5, v7);
  v19 = v18;

  sub_1003A2D04(v23);
  return v19;
}

_QWORD *sub_1003A2D04(_QWORD *a1)
{
  destroy for LargeGameCenterPlayerLayout.Metrics(a1);
  return a1;
}

char *sub_1003A2D38(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView;
  v13 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView();
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
  v15 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v14, "init");
  v15[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_isAnimationEnabled] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator] = 0;
  v16 = &v15[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v18 = objc_msgSend(v17, "contentView");
  objc_msgSend(v18, "setClipsToBounds:", 1);

  v19 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView];
  objc_msgSend(v19, "setClipsToBounds:", 1);
  v20 = objc_msgSend(v17, "contentView");
  v21 = v19;
  objc_msgSend(v20, "addSubview:", v21);

  return v17;
}

void sub_1003A3028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _BYTE v27[40];
  _BYTE v28[24];
  _BYTE v29[24];

  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v28, 0, 0);
    v16 = swift_weakLoadStrong(v15);
    if (v16)
    {
      v17 = v16;
      sub_100011020(a3, (uint64_t)v27);
      v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v20 = type metadata accessor for MediumAdLockupWithScreenshotsBackground(0, v19);
      if ((swift_dynamicCast(&v26, v27, v18, v20, 6) & 1) != 0)
      {
        v22 = v26;
        v23 = MediumAdLockupWithScreenshotsBackground.lockup.getter(v21);
        swift_release(v22);
        Lockup.impressionMetrics.getter(v24);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          swift_release(v23);
          swift_release(v17);

          sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F7740);
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
          objc_msgSend(v14, "bounds");
          ImpressionsCalculator.addElement(_:at:)(v12);

          swift_release(v23);
          v25 = swift_release(v17);
          (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
        }
      }
      else
      {

        swift_release(v17);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_1003A32A0()
{
  return type metadata accessor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell(0);
}

uint64_t type metadata accessor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B2C8;
  if (!qword_10080B2C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell);
  return result;
}

void sub_1003A32E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100688AE0;
    v4[3] = &unk_100688AF8;
    v4[4] = &unk_100688B10;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_1003A337C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E99C(&qword_10080B2D8, type metadata accessor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell, (uint64_t)&unk_100688BC0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1003A33E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

double sub_1003A3438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1003A3490(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1003A34D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char v4[24];
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator], v4, 1, 0);
  v2 = *(_QWORD *)v1;
  *(_QWORD *)v1 = 0;
  return swift_release(v2);
}

double sub_1003A353C(__n128 a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for MediumAdLockupWithScreenshotsBackground(0, a1);
  v6 = sub_10000E99C(&qword_1007F6A38, (uint64_t (*)(uint64_t))&type metadata accessor for MediumAdLockupWithScreenshotsBackground, (uint64_t)&protocol conformance descriptor for MediumAdLockupWithScreenshotsBackground);
  ItemLayoutContext.typedModel<A>(as:)(&v11, v5, v5, v6);
  v8 = v11;
  if (v11)
  {
    v9 = type metadata accessor for ObjectGraph(0);
    v10 = swift_dynamicCastClassUnconditional(a3, v9, 0, 0, 0);
    sub_1000746C0(v8, v10);
    objc_msgSend(v3, "setNeedsLayout");
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003A3604()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0
                + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator);
  swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1003A364C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1003A369C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1003A36E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_1003A3738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

uint64_t (*sub_1003A3794(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

void (*sub_1003A37D8(uint64_t a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  __int128 v7[2];

  v2 = swift_allocObject(&unk_10073BF28, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  sub_100011020(a1, (uint64_t)v7);
  v3 = swift_allocObject(&unk_10073BF50, 24, 7);
  swift_weakInit(v3 + 16);
  sub_100010F3C(v7, (uint64_t)v6);
  v4 = swift_allocObject(&unk_10073BF78, 72, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_100010F3C(v6, v4 + 32);
  return sub_1003A3980;
}

double sub_1003A389C(uint64_t a1, uint64_t a2)
{
  return sub_10028BD34(a1, a2);
}

uint64_t sub_1003A38D4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0
                                                    + OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView)
                                        + OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

uint64_t sub_1003A3904()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A3928()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A394C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 4);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1003A3980()
{
  uint64_t v0;

  sub_1003A3028(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void sub_1003A398C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext];
  v2 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView;
  v4 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  v0[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_isAnimationEnabled] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator] = 0;
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock];
  *v5 = 0;
  v5[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/MediumAdLockupWithScreenshotsBackgroundCollectionViewCell.swift", 86, 2, 33, 0);
  __break(1u);
}

void sub_1003A3A74(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v10 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon) = a1;
  swift_retain(a1);
  swift_release(v10);
  v11 = (uint64_t *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons);
  swift_beginAccess(v5 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons, v14, 1, 0);
  v12 = *v11;
  *v11 = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader) = a3;
  swift_release(v13);
  swift_retain(a3);
  sub_1003A4034(a4, a5);
}

id sub_1003A3B38(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  id v4;
  double left;
  double bottom;
  double right;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_impressionsCalculator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_amsImpressionItems] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_isCompactSheet] = a1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v8 = v4;
  objc_msgSend(v8, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v8, "setClipsToBounds:", 1);

  return v8;
}

void sub_1003A3C6C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  double x;
  double y;
  double width;
  double height;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  id v27;
  void *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[4];
  unsigned int v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  char v51[24];
  objc_super v52;
  CGRect v53;
  CGRect v54;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v50 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v49 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UpsellGridLayout(0, v4);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for UpsellGridLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = &v43[-v16];
  v52.receiver = v1;
  v52.super_class = ObjectType;
  objc_msgSendSuper2(&v52, "layoutSubviews", v15);
  objc_msgSend(v1, "bounds");
  x = v53.origin.x;
  y = v53.origin.y;
  width = v53.size.width;
  height = v53.size.height;
  if (CGRectIsEmpty(v53))
    return;
  v22 = (uint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews], v51, 0, 0);
  v23 = *v22;
  if ((unint64_t)*v22 >> 62)
  {
    if (v23 < 0)
      v40 = *v22;
    else
      v40 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v22);
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v23);
    if (!v41)
      return;
  }
  else if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  v24 = (void *)objc_opt_self(UIView);
  v44 = objc_msgSend(v24, "areAnimationsEnabled");
  v45 = v24;
  objc_msgSend(v24, "setAnimationsEnabled:", 0);
  v25 = objc_msgSend(v1, "traitCollection");
  v26 = UITraitCollection.isSizeClassCompact.getter(v25);

  v46 = v3;
  if ((v26 & 1) != 0
    && ((v27 = objc_msgSend(v1, "window")) == 0
     || (v28 = v27, objc_msgSend(v27, "frame"), v29 = CGRectGetWidth(v54), v28, width >= v29))
    || v1[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_isCompactSheet] == 1)
  {
    v30 = 4;
  }
  else
  {
    v30 = 5;
  }
  UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v30);
  v31 = static UpsellGridLayout.iconCount(fitting:using:in:)(v17, v1, width, height);
  v32 = *v22;
  if ((unint64_t)*v22 >> 62)
  {
    if (v32 < 0)
      v42 = *v22;
    else
      v42 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v22);
    v33 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = v46;
  if (v33 != v31)
    sub_1003A4034(width, height);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v13, v17, v10);
  v35 = *v22;
  swift_bridgeObjectRetain(*v22);
  v37 = sub_100419698(v36);
  v38 = swift_bridgeObjectRelease(v35);
  UpsellGridLayout.init(metrics:icons:)(v13, v37, v38);
  v39 = v49;
  UpsellGridLayout.placeChildren(relativeTo:in:)(v1, x, y, width, height);
  (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v39, v34);
  (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v9, v48);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v17, v10);
  objc_msgSend(v45, "setAnimationsEnabled:", v44);
}

void sub_1003A4034(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __objc2_meth_list **p_base_meths;
  id v17;
  char v18;
  uint64_t p_vtable;
  SEL *v20;
  id v21;
  void *v22;
  double Width;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  double v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  __n128 v76;
  id v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t i;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  _QWORD *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  id v107;
  char *v108;
  unint64_t v109;
  SEL *v110;
  unint64_t v111;
  _BYTE v112[24];
  _BYTE v113[24];
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  CGRect v117;
  CGRect v118;

  v3 = v2;
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  v7 = __chkstk_darwin(v6);
  v110 = (SEL *)((char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for UpsellGridLayout.Metrics(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v108 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v102 - v13;
  v15 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader);
  if (!v15)
    return;
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  v17 = objc_msgSend(v2, "traitCollection", swift_retain(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader)).n128_f64[0]);
  v18 = UITraitCollection.isSizeClassCompact.getter(v17);

  p_vtable = (uint64_t)&OBJC_METACLASS____TtC22SubscribePageExtensionP33_8DA30027F2CC80FAC5FE2DBE0813F10F25AccessoryDarkMaterialView.vtable;
  v20 = (SEL *)&selRef_activityViewController_itemForActivityType_;
  if ((v18 & 1) != 0
    && ((v21 = objc_msgSend(v3, "window")) == 0
     || (v22 = v21, objc_msgSend(v21, "frame"), Width = CGRectGetWidth(v117), v22, Width <= a1))
    || *((_BYTE *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_isCompactSheet) == 1)
  {
    v24 = 4;
  }
  else
  {
    v24 = 5;
  }
  UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v24);
  v25 = static UpsellGridLayout.largeIconSize(fitting:using:in:)(v14, v3, a1, a2);
  v27 = v26;
  v104 = *(void (**)(char *, uint64_t))(v10 + 8);
  v105 = v9;
  v104(v14, v9);
  v115 = (unint64_t)_swiftEmptyArrayStorage;
  v116 = (uint64_t)_swiftEmptyArrayStorage;
  v114 = (uint64_t)_swiftEmptyArrayStorage;
  v28 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews, v113, 33, 0);
  sub_1003A4E54(v28);
  v30 = v29;
  swift_endAccess(v113);
  v31 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    goto LABEL_109;
LABEL_9:
  v107 = (id)v31;
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  v36 = *(id *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon);
  v109 = v15;
  if (!v36)
    goto LABEL_16;
  v37 = swift_retain_n(v36, 2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
  v39 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v38 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v39 >= v38 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v36);
  specialized Array._endMutation()(v40);
  v31 = (uint64_t)v110;
  ImpressionableArtwork.impressionMetrics.getter(v41);
  v33 = (uint64_t)sub_1003A5648(v31);
  v42 = sub_1003A5990(v31);
  if (!v33)
    goto LABEL_15;
  v31 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)AMSUIDynamicImpressionItem), "initWithFrame:impressionMetrics:", v33, 0.0, 0.0, a1, a2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v15 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v43 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v43 >> 1)
    goto LABEL_131;
  while (1)
  {
    v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v31);
    specialized Array._endMutation()(v44);

    v15 = v109;
LABEL_15:
    v45 = ImpressionableArtwork.art.getter(v42);
    v46 = Artwork.config(using:)(v25, v27);
    swift_release(v45);
    v47 = type metadata accessor for ArtworkView(0);
    v48 = sub_100059C5C();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v46, 2, 1, v107, v47, v48);
    swift_release(v36);
    *(_QWORD *)&v35 = swift_release(v46).n128_u64[0];
LABEL_16:
    objc_msgSend(v3, "bounds", v35);
    v25 = v49;
    v50 = objc_msgSend(v3, (SEL)p_base_meths[471]);
    v33 = UITraitCollection.isSizeClassCompact.getter(v50);

    if ((v33 & 1) != 0
      && ((v51 = objc_msgSend(v3, v20[463])) == 0
       || (v52 = v51, objc_msgSend(v51, "frame"), v27 = CGRectGetWidth(v118), v52, v25 >= v27))
      || *((_BYTE *)v3 + *(_QWORD *)(p_vtable + 776)) == 1)
    {
      v53 = 4;
    }
    else
    {
      v53 = 5;
    }
    p_vtable = (uint64_t)v108;
    UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v53);
    v54 = static UpsellGridLayout.iconSizes(fitting:using:in:)(p_vtable, v3, a1, a2);
    v55 = *(_QWORD *)(v54 + 16);
    v56 = v55 != 0;
    v106 = v54;
    if (v55 != v56)
    {
      v57 = v55 > v56;
      v43 = v55 - v56;
      v111 = v43;
      if (!v57)
        goto LABEL_130;
      v31 = v54;
      v103 = v3;
      v3 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons);
      swift_bridgeObjectRetain(v54);
      swift_beginAccess(v3, v113, 0, 0);
      p_vtable = 0;
      v32 = v31 + 16 * v56;
      p_base_meths = (__objc2_meth_list **)(v32 + 40);
      while (1)
      {
        if (__OFADD__(p_vtable, 1))
        {
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
          goto LABEL_9;
        }
        v25 = *((double *)p_base_meths - 1);
        v27 = *(double *)p_base_meths;
        swift_beginAccess(v28, v112, 33, 0);
        v58 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v58 < 0)
            v63 = *v28;
          else
            v63 = v58 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v64 = _CocoaArrayWrapper.endIndex.getter(v63);
          swift_bridgeObjectRelease(v58);
          if (!v64)
          {
LABEL_45:
            v65 = type metadata accessor for ArtworkView(0);
            v33 = static ArtworkView.iconArtworkView.getter(v65);
            goto LABEL_46;
          }
        }
        else if (!*(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_45;
        }
        v59 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v59 < 0)
            v86 = *v28;
          else
            v86 = v59 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v33 = _CocoaArrayWrapper.endIndex.getter(v86);
          swift_bridgeObjectRelease(v59);
          if (!v33)
            goto LABEL_105;
        }
        else
        {
          v32 = v59 & 0xFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_105;
        }
        v60 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v60 < 0)
            v87 = *v28;
          else
            v87 = v60 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v33 = _CocoaArrayWrapper.endIndex.getter(v87);
          swift_bridgeObjectRelease(v60);
          if (!v33)
            goto LABEL_106;
        }
        else
        {
          v32 = v60 & 0xFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_106;
        }
        if ((v60 & 0xC000000000000001) != 0)
        {
          v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v60);
        }
        else
        {
          v32 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v32)
            goto LABEL_102;
          v61 = *(id *)(v60 + 32);
        }
        v33 = (uint64_t)v61;
        v62 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v62 < 0)
            v88 = *v28;
          else
            v88 = v62 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v31 = _CocoaArrayWrapper.endIndex.getter(v88);
          swift_bridgeObjectRelease(v62);
          if (!v31)
            goto LABEL_108;
        }
        else
        {
          v32 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v32)
            goto LABEL_108;
        }
        sub_100451BA0(0, 1);
LABEL_46:
        swift_endAccess(v112);
        v36 = (id)v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
        v33 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v66 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v33 >= v66 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v33 + 1, 1);
        v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v36);
        specialized Array._endMutation()(v67);
        v68 = *v3;
        if (*v3 >> 62)
        {
          if (v68 < 0)
            v85 = *v3;
          else
            v85 = v68 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v3);
          v33 = _CocoaArrayWrapper.endIndex.getter(v85);
          swift_bridgeObjectRelease(v68);
          if (!v33)
          {
LABEL_26:

            goto LABEL_27;
          }
        }
        else if (!*(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_26;
        }
        v69 = *v3;
        if (*v3 >> 62)
        {
          if (v69 < 0)
            v89 = *v3;
          else
            v89 = v69 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v3);
          v33 = _CocoaArrayWrapper.endIndex.getter(v89);
          swift_bridgeObjectRelease(v69);
          if (!v33)
            goto LABEL_107;
        }
        else
        {
          v32 = v69 & 0xFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_107;
        }
        v70 = p_vtable % v33;
        swift_beginAccess(v3, v112, 32, 0);
        v71 = *v3;
        if ((*v3 & 0xC000000000000001) != 0)
        {
          v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(p_vtable % v33, v71);
        }
        else
        {
          if ((v70 & 0x8000000000000000) != 0)
            goto LABEL_103;
          v32 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v70 >= v32)
            goto LABEL_104;
          v33 = *(_QWORD *)(v71 + 8 * v70 + 32);
          swift_retain(v33);
        }
        swift_endAccess(v112);
        swift_retain(v33);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
        v74 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v73 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v74 >= v73 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
        v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v33);
        specialized Array._endMutation()(v75);
        v20 = v110;
        ImpressionableArtwork.impressionMetrics.getter(v76);
        v77 = sub_1003A5648((uint64_t)v20);
        v78 = sub_1003A5990((uint64_t)v20);
        if (v77)
        {
          v79 = objc_msgSend(objc_allocWithZone((Class)AMSUIDynamicImpressionItem), "initWithFrame:impressionMetrics:", v77, 0.0, 0.0, v25, v27);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
          v20 = *(SEL **)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v80 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v20 >= v80 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, (char *)v20 + 1, 1);
          v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v79);
          specialized Array._endMutation()(v81);

          v15 = v109;
        }
        v82 = ImpressionableArtwork.art.getter(v78);
        v31 = Artwork.config(using:)(v25, v27);
        swift_release(v82);
        v83 = type metadata accessor for ArtworkView(0);
        v84 = sub_100059C5C();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v36, v83, v84);

        swift_release(v33);
        swift_release(v31);
LABEL_27:
        ++p_vtable;
        p_base_meths += 2;
        v32 = v111;
        if (v111 == p_vtable)
        {
          swift_bridgeObjectRelease(v106);
          v3 = v103;
          break;
        }
      }
    }
    v90 = v116;
    sub_1003A4FA8(v116);
    swift_bridgeObjectRelease(v90);
    v91 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_amsImpressionItems);
    *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_amsImpressionItems) = v115;
    swift_bridgeObjectRelease(v91);
    v92 = v114;
    if ((unint64_t)v114 >> 62)
    {
      if (v114 < 0)
        v95 = v114;
      else
        v95 = v114 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v114);
      v33 = _CocoaArrayWrapper.endIndex.getter(v95);
      if (!v33)
        goto LABEL_114;
    }
    else
    {
      v33 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v114);
      if (!v33)
        goto LABEL_114;
    }
    if (v33 >= 1)
      break;
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v15 + 1, 1);
  }
  v93 = 0;
  p_vtable = v92 & 0xC000000000000001;
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  do
  {
    if (p_vtable)
      v94 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v93, v92);
    else
      v94 = *(id *)(v92 + 8 * v93 + 32);
    v36 = v94;
    v20 = (SEL *)objc_msgSend(v94, "superview");

    if (!v20)
      objc_msgSend(v3, "addSubview:", v36);
    ++v93;

  }
  while (v33 != v93);
LABEL_114:
  swift_bridgeObjectRelease(v92);
  v33 = *v28;
  if ((unint64_t)*v28 >> 62)
  {
    if (v33 < 0)
      v99 = *v28;
    else
      v99 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v28);
    v31 = _CocoaArrayWrapper.endIndex.getter(v99);
    v15 = v109;
    if (!v31)
      goto LABEL_126;
  }
  else
  {
    v31 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v28);
    v15 = v109;
    if (!v31)
      goto LABEL_126;
  }
  if (v31 < 1)
    goto LABEL_129;
  for (i = 0; i != v31; ++i)
  {
    if ((v33 & 0xC000000000000001) != 0)
      v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
    else
      v97 = *(id *)(v33 + 8 * i + 32);
    v98 = v97;
    objc_msgSend(v97, "removeFromSuperview");

  }
LABEL_126:
  swift_bridgeObjectRelease(v33);
  v100 = *v28;
  *v28 = v92;
  objc_msgSend(v3, "setNeedsLayout", swift_bridgeObjectRelease(v100).n128_f64[0]);

  swift_release(v15);
  v101 = swift_bridgeObjectRelease(v106);
  ((void (*)(char *, uint64_t, __n128))v104)(v108, v105, v101);
}

double sub_1003A4BD4(uint64_t a1, __n128 a2, double a3)
{
  char *v3;
  char *v4;
  double v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  id v19;
  char v20;
  id v21;
  void *v22;
  double Width;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  double v30;
  char v33[24];
  CGRect v34;

  v4 = v3;
  v7 = a2.n128_f64[0];
  v8 = type metadata accessor for UpsellGridLayout.Metrics(0, a2);
  v9 = __chkstk_darwin(v8);
  v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for UpsellGridLayout(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_msgSend(v3, "bounds", v14);
  v18 = v17;
  v19 = objc_msgSend(v3, "traitCollection");
  v20 = UITraitCollection.isSizeClassCompact.getter(v19);

  if ((v20 & 1) != 0
    && ((v21 = objc_msgSend(v4, "window")) == 0
     || (v22 = v21, objc_msgSend(v21, "frame"), Width = CGRectGetWidth(v34), v22, v18 >= Width))
    || v4[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_isCompactSheet] == 1)
  {
    v24 = 4;
  }
  else
  {
    v24 = 5;
  }
  UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v24);
  v25 = &v4[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews], v33, 0, 0);
  v26 = *(_QWORD *)v25;
  swift_bridgeObjectRetain(v26);
  v28 = sub_100419698(v27);
  v29 = swift_bridgeObjectRelease(v26);
  UpsellGridLayout.init(metrics:icons:)(v11, v28, v29);
  v30 = UpsellGridLayout.measurements(fitting:in:)(a1, v7, a3);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v30;
}

void sub_1003A4E54(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *a1;
  v2 = (unint64_t)*a1 >> 62;
  if (!v2)
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
    goto LABEL_14;
  }
  if (v1 < 0)
    v4 = *a1;
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_14;
  swift_bridgeObjectRetain(v1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (v6)
  {
    swift_bridgeObjectRetain(v1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v1);
    if (v7)
    {
LABEL_3:
      if ((v1 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
        if (!v2)
        {
LABEL_6:
          v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_20;
        }
      }
      else
      {
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        *(id *)(v1 + 32);
        if (!v2)
          goto LABEL_6;
      }
      if (v1 < 0)
        v9 = v1;
      else
        v9 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v3 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v1);
LABEL_20:
      if (v3)
      {
        sub_100451BA0(0, 1);
        return;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_14:
    v8 = type metadata accessor for ArtworkView(0);
    static ArtworkView.iconArtworkView.getter(v8);
    return;
  }
LABEL_24:
  __break(1u);
}

void sub_1003A4FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t i;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_impressionsCalculator);
  if (!v17)
    return;
  if (!((unint64_t)a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v17);
    swift_bridgeObjectRetain(a1);
    if (v10)
      goto LABEL_4;
LABEL_19:
    swift_release(v17);
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v15 = a1;
  else
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_retain(v17);
  swift_bridgeObjectRetain(a1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v10)
    goto LABEL_19;
LABEL_4:
  if (v10 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v13 = *(_QWORD *)(a1 + 8 * i + 32);
        v14 = swift_retain(v13);
      }
      ImpressionableArtwork.impressionMetrics.getter(v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        swift_release(v13);
        sub_1003A5990((uint64_t)v5);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
        ImpressionsCalculator.addElement(_:at:)(v9);
        v12 = swift_release(v13);
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v12);
      }
    }
    swift_release(v17);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t type metadata accessor for UpsellGridView()
{
  return objc_opt_self(_TtC22SubscribePageExtension14UpsellGridView);
}

void sub_1003A52F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  __int128 v41;
  _OWORD v42[2];
  __int128 v43;
  _OWORD v44[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000DF3C(&qword_1008094B8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v36 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v4) >> 6;
  v7 = v44;
  v8 = v42;
  swift_bridgeObjectRetain(v1);
  v37 = 0;
  v9 = &qword_100800140;
  v10 = (char *)&type metadata for Any + 8;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v19 = v37 + 1;
  if (__OFADD__(v37, 1))
    goto LABEL_35;
  if (v19 >= v35)
    goto LABEL_32;
  v20 = *(_QWORD *)(v36 + 8 * v19);
  v21 = v37 + 1;
  if (!v20)
  {
    v21 = v37 + 2;
    if (v37 + 2 >= v35)
      goto LABEL_32;
    v20 = *(_QWORD *)(v36 + 8 * v21);
    if (!v20)
    {
      v21 = v37 + 3;
      if (v37 + 3 >= v35)
        goto LABEL_32;
      v20 = *(_QWORD *)(v36 + 8 * v21);
      if (!v20)
      {
        v21 = v37 + 4;
        if (v37 + 4 >= v35)
          goto LABEL_32;
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          v22 = v37 + 5;
          if (v37 + 5 < v35)
          {
            v20 = *(_QWORD *)(v36 + 8 * v22);
            if (v20)
            {
              v21 = v37 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v35)
                break;
              v20 = *(_QWORD *)(v36 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100172A9C(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v37 = v21;
  v38 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v6)) | (v37 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    sub_100010E9C(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v7);
    *(_QWORD *)&v43 = v24;
    *((_QWORD *)&v43 + 1) = v25;
    v41 = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    v26 = v43;
    sub_10003B8E8(v8, v39);
    swift_bridgeObjectRetain(v25);
    v27 = sub_10000DF3C(v9);
    swift_dynamicCast(&v40, v39, v10, v27, 7);
    v28 = v40;
    v29 = sub_10036C324(v26, *((uint64_t *)&v26 + 1));
    v30 = v29;
    if ((v31 & 1) != 0)
    {
      v11 = v1;
      v12 = v9;
      v13 = v8;
      v14 = v7;
      v15 = v3[6] + 16 * v29;
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
      *(_OWORD *)v15 = v26;
      v16 = v3[7];
      v17 = 8 * v30;
      swift_unknownObjectRelease(*(_QWORD *)(v16 + v17));
      *(_QWORD *)(v16 + v17) = v28;
      v7 = v14;
      v8 = v13;
      v9 = v12;
      v1 = v11;
      v10 = (char *)&type metadata for Any + 8;
      v6 = v38;
      if (!v38)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v29;
    *(_OWORD *)(v3[6] + 16 * v29) = v26;
    *(_QWORD *)(v3[7] + 8 * v29) = v28;
    v32 = v3[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_34;
    v3[2] = v34;
    v6 = v38;
    if (!v38)
      goto LABEL_11;
LABEL_10:
    v38 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

id sub_1003A5648(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  double (*v20)(char *, char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t);
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  Class isa;
  Class v44;
  uint64_t v46;
  uint64_t v47;

  v2 = type metadata accessor for ImpressionMetrics.ID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C6C5C(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1003A5990((uint64_t)v14);
    return 0;
  }
  else
  {
    v20 = *(double (**)(char *, char *, uint64_t))(v16 + 32);
    v47 = v15;
    v21.n128_f64[0] = v20(v18, v14, v15);
    v22 = ImpressionMetrics.id.getter(v21);
    v46 = ImpressionMetrics.ID.parent.getter(v22);
    v24 = v23;
    v25 = *(double (**)(char *, uint64_t))(v3 + 8);
    v26.n128_f64[0] = v25(v11, v2);
    ImpressionMetrics.id.getter(v26);
    ImpressionMetrics.ID.element.getter(v27);
    v29 = v28;
    v30.n128_f64[0] = v25(v8, v2);
    v31 = ImpressionMetrics.id.getter(v30);
    v32 = ImpressionMetrics.ID.index.getter(v31);
    v25(v5, v2);
    if (v24)
    {
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v33 = 0;
    }
    v34 = objc_allocWithZone((Class)AMSUIDynamicImpressionMetricsIdentifier);
    v35 = String._bridgeToObjectiveC()();
    v36 = objc_msgSend(v34, "initWithParent:element:index:", v33, v35, v32, swift_bridgeObjectRelease(v29).n128_f64[0]);

    v37 = v36;
    v38 = ImpressionMetrics.fields.getter();
    sub_1003A52F8(v38);
    v40 = v39;
    swift_bridgeObjectRelease(v38);
    v41 = sub_10036AF30((uint64_t)_swiftEmptyArrayStorage);
    v42 = objc_allocWithZone((Class)AMSUIDynamicImpressionMetrics);
    sub_10000DF3C(&qword_100800140);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v40);
    v44 = Dictionary._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(v42, "initWithIdentifier:fields:custom:", v37, isa, v44, swift_bridgeObjectRelease(v41).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
  }
  return v19;
}

uint64_t sub_1003A5990(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003A59D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B340;
  if (!qword_10080B340)
  {
    v1 = objc_opt_self(AMSUIDynamicImpressionItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080B340);
  }
  return result;
}

void sub_1003A5A0C()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_primaryIcon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_remainingIcons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_artworkLoader] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_impressionsCalculator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_iconViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension14UpsellGridView_amsImpressionItems] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/UpsellGridView.swift", 43, 2, 34, 0);
  __break(1u);
}

void sub_1003A5B2C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  void *v15;
  id v16;
  CGContext *v17;
  CGContext *v18;
  CGContext *v19;
  CGColor *v20;
  double MinX;
  double MidY;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  double v25;
  double v26;
  double v27;
  void (*v28)(char *, uint64_t);
  double MaxX;
  double v30;
  double v31;
  double v32;
  CGContext *v33;
  CGContext *v34;
  double MidX;
  double MinY;
  double v37;
  double v38;
  double v39;
  double v40;
  double MaxY;
  double v42;
  double v43;
  double v44;
  CGContext *v45;
  CGContext *v46;
  objc_super v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  v5 = v4;
  v10 = type metadata accessor for FloatingPointRoundingRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (objc_class *)type metadata accessor for PlusView();
  v47.receiver = v4;
  v47.super_class = v14;
  objc_msgSendSuper2(&v47, "drawRect:", a1, a2, a3, a4);
  v15 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension8PlusView_plusColor];
  if (v15)
  {
    v16 = v15;
    v17 = UIGraphicsGetCurrentContext();
    v18 = v17;
    if (v17)
    {
      CGContextBeginPath(v17);
      v19 = v18;
      v20 = (CGColor *)objc_msgSend(v16, "CGColor");
      CGContextSetStrokeColorWithColor(v19, v20);

    }
    v48.origin.x = a1;
    v48.origin.y = a2;
    v48.size.width = a3;
    v48.size.height = a4;
    MinX = CGRectGetMinX(v48);
    v49.origin.x = a1;
    v49.origin.y = a2;
    v49.size.width = a3;
    v49.size.height = a4;
    MidY = CGRectGetMidY(v49);
    v23 = enum case for FloatingPointRoundingRule.down(_:);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    v24(v13, enum case for FloatingPointRoundingRule.down(_:), v10);
    v25 = CGPoint.rounded(_:)(v13, MinX, MidY);
    v27 = v26;
    v28 = *(void (**)(char *, uint64_t))(v11 + 8);
    v28(v13, v10);
    v50.origin.x = a1;
    v50.origin.y = a2;
    v50.size.width = a3;
    v50.size.height = a4;
    MaxX = CGRectGetMaxX(v50);
    v24(v13, v23, v10);
    v30 = CGPoint.rounded(_:)(v13, MaxX, v27);
    v32 = v31;
    v28(v13, v10);
    if (v18)
    {
      CGContextSetLineWidth(v18, *(CGFloat *)&v5[OBJC_IVAR____TtC22SubscribePageExtension8PlusView_lineThickness]);
      v33 = v18;
      CGContextRef.move(to:)(v33, v25, v27);

      v34 = v33;
      CGContextRef.addLine(to:)(v30, v32);

    }
    v51.origin.x = a1;
    v51.origin.y = a2;
    v51.size.width = a3;
    v51.size.height = a4;
    MidX = CGRectGetMidX(v51);
    v52.origin.x = a1;
    v52.origin.y = a2;
    v52.size.width = a3;
    v52.size.height = a4;
    MinY = CGRectGetMinY(v52);
    v24(v13, v23, v10);
    v37 = CGPoint.rounded(_:)(v13, MidX, MinY);
    v39 = v38;
    v28(v13, v10);
    v53.origin.x = a1;
    v53.origin.y = a2;
    v53.size.width = a3;
    v53.size.height = a4;
    v40 = CGRectGetMidX(v53);
    v54.origin.x = a1;
    v54.origin.y = a2;
    v54.size.width = a3;
    v54.size.height = a4;
    MaxY = CGRectGetMaxY(v54);
    v24(v13, v23, v10);
    v42 = CGPoint.rounded(_:)(v13, v40, MaxY);
    v44 = v43;
    v28(v13, v10);
    if (v18)
    {
      CGContextSetLineWidth(v18, *(CGFloat *)&v5[OBJC_IVAR____TtC22SubscribePageExtension8PlusView_lineThickness]);
      v45 = v18;
      CGContextRef.move(to:)(v45, v37, v39);

      v46 = v45;
      CGContextRef.addLine(to:)(v42, v44);

      CGContextStrokePath(v46);
    }

  }
}

id sub_1003A5F24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlusView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlusView()
{
  return objc_opt_self(_TtC22SubscribePageExtension8PlusView);
}

uint64_t sub_1003A5F84()
{
  return sub_10000E99C((unint64_t *)&unk_10080B380, type metadata accessor for EditorsChoiceCollectionViewCell, (uint64_t)&unk_100688CD0);
}

double sub_1003A5FB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __n128 v17;
  int v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t KeyPath;
  double v33;
  double v34;
  double v35;
  double v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;

  v0 = type metadata accessor for PageGrid(0);
  v44 = *(_QWORD *)(v0 - 8);
  v45 = v0;
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for ComponentLayoutOptions(0);
  v43 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F5390);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorsChoice(0);
  v13 = sub_10000E99C(&qword_1007F5360, (uint64_t (*)(uint64_t))&type metadata accessor for EditorsChoice, (uint64_t)&protocol conformance descriptor for EditorsChoice);
  ItemLayoutContext.typedModel<A>(as:)(&v48, v12, v12, v13);
  v14 = v48;
  if (!v48)
    return 0.0;
  v15 = sub_100044CE0();
  ItemLayoutContext.typedState<A>(as:)(&_s5StateVN_7, &_s5StateVN_7, v15);
  v42 = v9;
  v16 = StateLens<A>.currentValue.getter(&v47, v9, v15);
  if (v47 == 2)
    v18 = EditorsChoice.isCollapsed.getter(v16);
  else
    v18 = v47 & 1;
  v20 = ItemLayoutContext.componentLayoutOptions.getter(v17);
  static ComponentLayoutOptions.overflowed.getter(v20);
  v21 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v5, v3, v21);
  v23 = *(void (**)(char *, uint64_t))(v43 + 8);
  v23(v5, v3);
  v24 = ((uint64_t (*)(char *, uint64_t))v23)(v8, v3);
  LODWORD(v43) = v22 | ~v18;
  v25 = EditorsChoice.showsBadge.getter(v24);
  v41 = v25;
  v40 = EditorsChoice.title.getter(v25);
  v27 = v26;
  v28 = EditorsChoice.notes.getter();
  v30 = v29;
  v31 = sub_1000826AC();
  KeyPath = swift_getKeyPath(&unk_100688D20);
  ItemLayoutContext.subscript.getter(v2);
  swift_release(KeyPath);
  v33 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v35 = v34;
  (*(void (**)(_QWORD *, uint64_t))(v44 + 8))(v2, v45);
  type metadata accessor for EditorsChoiceReviewView();
  swift_getObjectType();
  sub_1003EAB88(v41 & 1, v40, v27, v28, v30, v43 & 1, v31, v33, v35);
  v19 = v36;
  swift_unknownObjectRelease(v31);
  swift_release(v14);
  swift_bridgeObjectRelease(v30);
  v37 = swift_bridgeObjectRelease(v27);
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v11, v42, v37);
  return v19;
}

uint64_t sub_1003A62F0(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  double v38;
  void (*v39)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, char *, uint64_t);
  char *v44;
  id v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v10 = type metadata accessor for Placement(0);
  v46 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_10080B558);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DisjointStack.Placements(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v41 - v25;
  v27 = type metadata accessor for DisjointStack(0);
  v28 = sub_10000E99C(&qword_10080B5A8, (uint64_t (*)(uint64_t))&type metadata accessor for DisjointStack, (uint64_t)&protocol conformance descriptor for DisjointStack);
  v45 = a1;
  dispatch thunk of PrimitiveLayout.layout(relativeTo:with:)(a1, v27, v28, a2, a3, a4, a5);
  v41 = v26;
  v42 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v26, v17);
  v29 = sub_10000E99C(&qword_10080B5B0, (uint64_t (*)(uint64_t))&type metadata accessor for DisjointStack.Placements, (uint64_t)&protocol conformance descriptor for DisjointStack.Placements);
  dispatch thunk of Sequence.makeIterator()(v17, v29);
  v30 = sub_10000E99C(&qword_10080B5B8, (uint64_t (*)(uint64_t))&type metadata accessor for DisjointStack.Placements, (uint64_t)&protocol conformance descriptor for DisjointStack.Placements);
  dispatch thunk of IteratorProtocol.next()(v17, v30);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v31(v16, 1, v10) != 1)
  {
    v43 = *(uint64_t (**)(char *, char *, uint64_t))(v46 + 32);
    v44 = v23;
    do
    {
      v32 = v43(v12, v16, v10);
      Placement.child.getter(v47, v32);
      v33 = v17;
      v35 = v48;
      v34 = v49;
      sub_100011064(v47, v48);
      Placement.frame.getter();
      v36 = v45;
      CGRect.withLayoutDirection(_:relativeTo:)(objc_msgSend(v45, "layoutDirection"), a2);
      v37 = v34;
      v17 = v33;
      v23 = v44;
      dispatch thunk of Placeable.place(at:with:)(v36, v35, v37, v38);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v10);
      dispatch thunk of IteratorProtocol.next()(v17, v30);
    }
    while (v31(v16, 1, v10) != 1);
  }
  v39 = *(void (**)(char *, uint64_t))(v42 + 8);
  v39(v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v39)(v41, v17);
}

uint64_t sub_1003A6670(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  double v38;
  void (*v39)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, char *, uint64_t);
  char *v44;
  id v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v10 = type metadata accessor for Placement(0);
  v46 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_10080B558);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for VerticalStack.Placements(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v41 - v25;
  v27 = type metadata accessor for VerticalStack(0);
  v28 = sub_10000E99C(&qword_10080B560, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStack, (uint64_t)&protocol conformance descriptor for VerticalStack);
  v45 = a1;
  dispatch thunk of PrimitiveLayout.layout(relativeTo:with:)(a1, v27, v28, a2, a3, a4, a5);
  v41 = v26;
  v42 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v26, v17);
  v29 = sub_10000E99C(&qword_10080B568, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStack.Placements, (uint64_t)&protocol conformance descriptor for VerticalStack.Placements);
  dispatch thunk of Sequence.makeIterator()(v17, v29);
  v30 = sub_10000E99C(&qword_10080B570, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStack.Placements, (uint64_t)&protocol conformance descriptor for VerticalStack.Placements);
  dispatch thunk of IteratorProtocol.next()(v17, v30);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v31(v16, 1, v10) != 1)
  {
    v43 = *(uint64_t (**)(char *, char *, uint64_t))(v46 + 32);
    v44 = v23;
    do
    {
      v32 = v43(v12, v16, v10);
      Placement.child.getter(v47, v32);
      v33 = v17;
      v35 = v48;
      v34 = v49;
      sub_100011064(v47, v48);
      Placement.frame.getter();
      v36 = v45;
      CGRect.withLayoutDirection(_:relativeTo:)(objc_msgSend(v45, "layoutDirection"), a2);
      v37 = v34;
      v17 = v33;
      v23 = v44;
      dispatch thunk of Placeable.place(at:with:)(v36, v35, v37, v38);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v10);
      dispatch thunk of IteratorProtocol.next()(v17, v30);
    }
    while (v31(v16, 1, v10) != 1);
  }
  v39 = *(void (**)(char *, uint64_t))(v42 + 8);
  v39(v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v39)(v41, v17);
}

double sub_1003A69F0()
{
  double result;

  result = 0.0;
  xmmword_10080B390 = xmmword_100684BB0;
  *(_OWORD *)&qword_10080B3A0 = xmmword_100684BB0;
  return result;
}

uint64_t sub_1003A6A08(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_10080B3B0);
  sub_1000117A8(v5, (uint64_t)qword_10080B3B0);
  if (qword_1007F2878 != -1)
    swift_once(&qword_1007F2878, sub_100417628);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855E50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 34.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1003A6B58(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_10080B3C8);
  sub_1000117A8(v5, (uint64_t)qword_10080B3C8);
  if (qword_1007F2880 != -1)
    swift_once(&qword_1007F2880, sub_100417644);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855E68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 20.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1003A6CA4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_10080B3E0);
  sub_1000117A8(v5, (uint64_t)qword_10080B3E0);
  if (qword_1007F2890 != -1)
    swift_once(&qword_1007F2890, sub_10041767C);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855E98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 15.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1003A6DF0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_10080B3F8);
  sub_1000117A8(v5, (uint64_t)qword_10080B3F8);
  if (qword_1007F2890 != -1)
    swift_once(&qword_1007F2890, sub_10041767C);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855E98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 23.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1003A6F3C(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *ObjCClassFromMetadata;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  objc_class *v39;
  id v40;
  double left;
  double bottom;
  double right;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  objc_super v83;

  v9 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v9);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v23 + 104))(v22, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.leading(_:), v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:), v15);
  v24 = v4;
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v24);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)(v22, v18, v14, 1);
  v25 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_materialBackground;
  *(_QWORD *)&v24[v25] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v26 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork;
  v27 = type metadata accessor for CollectionLockupArtwork();
  *(_QWORD *)&v24[v26] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v27)), "init");
  v28 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_badgeLabel;
  v29 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v29);
  *(_QWORD *)&v24[v28] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v31 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_titleLabel;
  *(_QWORD *)&v24[v31] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v32 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_descriptionLabel;
  *(_QWORD *)&v24[v32] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v33);

  if (v34)
  {
    v35 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_chevronView;
    v36 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v34);

    *(_QWORD *)&v24[v35] = v36;
    v37 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_tapGestureRecognizer;
    *(_QWORD *)&v24[v37] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
    v38 = &v24[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_selectionHandler];
    *(_QWORD *)v38 = 0;
    *((_QWORD *)v38 + 1) = 0;

    v39 = (objc_class *)type metadata accessor for CarouselItemCollectionLockupOverlay(0);
    v83.receiver = v24;
    v83.super_class = v39;
    v40 = objc_msgSendSuper2(&v83, "initWithFrame:", a1, a2, a3, a4);
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v44 = (char *)v40;
    objc_msgSend(v44, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
    objc_msgSend(v44, "setOverrideUserInterfaceStyle:", 2);
    objc_msgSend(v44, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);
    v81 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_materialBackground;
    v45 = *(id *)&v44[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_materialBackground];
    sub_1005C8FE8(26.0);

    v46 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_badgeLabel;
    if (qword_1007F2878 != -1)
      swift_once(&qword_1007F2878, sub_100417628);
    v47 = type metadata accessor for FontUseCase(0);
    v48 = sub_1000117A8(v47, (uint64_t)qword_100855E50);
    v49 = *(_QWORD *)(v47 - 8);
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
    v50(v11, v48, v47);
    v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56);
    v51(v11, 0, 1, v47);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v11);
    v52 = *(void **)&v44[v46];
    objc_msgSend(v52, "setNumberOfLines:", 1);
    v53 = (void *)objc_opt_self(UIColor);
    v54 = v52;
    v55 = objc_msgSend(v53, "secondaryLabelColor");
    objc_msgSend(v54, "setTextColor:", v55);

    v82 = v46;
    v56 = objc_msgSend(*(id *)&v44[v46], "layer");
    v57 = kCAFilterPlusL;
    objc_msgSend(v56, "setCompositingFilter:", kCAFilterPlusL);

    v58 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_titleLabel;
    if (qword_1007F2880 != -1)
      swift_once(&qword_1007F2880, sub_100417644);
    v59 = sub_1000117A8(v47, (uint64_t)qword_100855E68);
    v50(v11, v59, v47);
    v51(v11, 0, 1, v47);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v11);
    v60 = *(void **)&v44[v58];
    objc_msgSend(v60, "setNumberOfLines:", 1);
    v61 = v60;
    v62 = objc_msgSend(v53, "labelColor");
    v80 = v58;
    v63 = v62;
    objc_msgSend(v61, "setTextColor:", v62);

    v64 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_descriptionLabel;
    if (qword_1007F2890 != -1)
      swift_once(&qword_1007F2890, sub_10041767C);
    v65 = sub_1000117A8(v47, (uint64_t)qword_100855E98);
    v50(v11, v65, v47);
    v51(v11, 0, 1, v47);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v11);
    v66 = *(void **)&v44[v64];
    objc_msgSend(v66, "setNumberOfLines:", 1);
    v67 = v66;
    v68 = objc_msgSend(v53, "secondaryLabelColor");
    objc_msgSend(v67, "setTextColor:", v68);

    v69 = objc_msgSend(*(id *)&v44[v64], "layer");
    objc_msgSend(v69, "setCompositingFilter:", v57);

    v70 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_chevronView;
    v71 = *(void **)&v44[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_chevronView];
    v72 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v73 = v71;
    v74 = objc_msgSend(v72, "configurationWithTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v73, "setPreferredSymbolConfiguration:", v74);

    v75 = *(id *)&v44[v70];
    v76 = objc_msgSend(v53, "secondaryLabelColor");
    objc_msgSend(v75, "setTintColor:", v76);

    v77 = objc_msgSend(*(id *)&v44[v70], "layer");
    objc_msgSend(v77, "setCompositingFilter:", v57);

    v78 = *(void **)&v44[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_tapGestureRecognizer];
    objc_msgSend(v78, "setEnabled:", 0);
    objc_msgSend(v78, "addTarget:action:", v44, "handleSelection:");
    objc_msgSend(v78, "setDelegate:", v44);
    objc_msgSend(v44, "addGestureRecognizer:", v78);
    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v44[v81]);
    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v44[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork]);
    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v44[v82]);
    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v44[v80]);
    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v44[v64]);
    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v44[v70]);
    sub_1003A80CC();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003A7974@<X0>(int a1@<W0>, _QWORD *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  id v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  unint64_t v41;
  char *v42;
  void *v43;
  id v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  void *v61;
  char *v62;
  id v63;
  id v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  double v70;
  double v71;
  uint64_t v72;
  _QWORD *v73;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD v89[5];
  _QWORD v90[5];
  _QWORD v91[5];
  __int128 v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  void *v97;

  v4 = v3;
  LODWORD(v87) = a1;
  v88 = a2;
  v81 = type metadata accessor for FlankedHorizontalLayout.ViewAlignment(0, a3);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v84 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v82 = (char *)&v75 - v8;
  v86 = type metadata accessor for FlankedHorizontalLayout(0, v7);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v83 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for HorizontalStack(0);
  v76 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v77 = (char *)&v75 - v12;
  __chkstk_darwin(v13);
  v78 = (char *)&v75 - v14;
  v15 = type metadata accessor for VerticalStack(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v75 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v75 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v75 - v27;
  VerticalStack.init(with:)(0, 0, v26);
  v29 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_badgeLabel);
  v30 = type metadata accessor for DynamicTypeLabel(0);
  v96 = v30;
  v97 = &protocol witness table for UILabel;
  v95 = (uint64_t)v29;
  v31 = v29;
  v32 = v28;
  VerticalStack.adding(_:with:)(&v95, sub_1003A8AA4, 0);
  v33 = *(void (**)(char *, uint64_t))(v16 + 8);
  v33(v18, v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
  v34 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_titleLabel);
  v96 = v30;
  v97 = &protocol witness table for UILabel;
  v95 = (uint64_t)v34;
  v35 = v34;
  VerticalStack.adding(_:with:)(&v95, sub_1003A8AC0, 0);
  v36 = v21;
  v37 = v4;
  v33(v36, v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
  v38 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_descriptionLabel);
  v96 = v30;
  v97 = &protocol witness table for UILabel;
  v95 = (uint64_t)v38;
  v39 = v38;
  v40 = v32;
  v41 = v15;
  VerticalStack.adding(_:with:)(&v95, sub_1003A8BC4, 0);
  v33(v24, v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
  if ((v87 & 1) != 0)
  {
    v42 = v75;
    HorizontalStack.init(with:)(0, 0);
    v43 = *(void **)(v37
                   + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork);
    v96 = type metadata accessor for CollectionLockupArtwork();
    v97 = (void *)sub_10000E99C((unint64_t *)&unk_10080B598, (uint64_t (*)(uint64_t))type metadata accessor for CollectionLockupArtwork, (uint64_t)"9,\v");
    v95 = (uint64_t)v43;
    v44 = v43;
    v45 = v77;
    HorizontalStack.adding(_:with:)(&v95, sub_1003A8D38, 0);
    v46 = *(void (**)(char *, uint64_t))(v76 + 8);
    v47 = v80;
    v46(v42, v80);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
    v96 = v41;
    v97 = &protocol witness table for VerticalStack;
    v48 = sub_1000117C0(&v95);
    (*(void (**)(_QWORD *, char *, unint64_t))(v16 + 16))(v48, v40, v41);
    v49 = v78;
    HorizontalStack.adding(_:with:)(&v95, sub_1003A8D40, 0);
    v46(v45, v47);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
    v50 = *(void **)(v37 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_chevronView);
    v96 = sub_10016ABFC();
    v97 = &protocol witness table for UIImageView;
    v95 = (uint64_t)v50;
    v93 = v47;
    v94 = &protocol witness table for HorizontalStack;
    sub_1000117C0(&v92);
    v51 = v50;
    HorizontalStack.adding(_:with:)(&v95, 0, 0);
    v46(v49, v47);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
    sub_100010F3C(&v92, (uint64_t)&v95);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v24, v40, v15);
    v52 = type metadata accessor for TextLayout(0);
    v53 = swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v53 + OBJC_IVAR____TtC22SubscribePageExtensionP33_04B5E2A62FC871564D6815F6F8FC541210TextLayout_textStack, v24, v15);
    v96 = v52;
    v97 = (void *)sub_10000E99C((unint64_t *)&unk_10080B580, type metadata accessor for TextLayout, (uint64_t)&unk_100688DE4);
    v95 = v53;
    v54 = *(void **)(v37
                   + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork);
    v93 = type metadata accessor for CollectionLockupArtwork();
    v94 = &protocol witness table for UIView;
    *(_QWORD *)&v92 = v54;
    v91[3] = &type metadata for CGFloat;
    v91[4] = &protocol witness table for CGFloat;
    v91[0] = 0x4024000000000000;
    v55 = enum case for FlankedHorizontalLayout.ViewAlignment.center(_:);
    v56 = v37;
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 104);
    v87 = v15;
    v58 = v82;
    v59 = v81;
    v57(v82, enum case for FlankedHorizontalLayout.ViewAlignment.center(_:), v81);
    v60 = v33;
    v61 = *(void **)(v56 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_chevronView);
    v90[3] = sub_10016ABFC();
    v90[4] = &protocol witness table for UIView;
    v90[0] = v61;
    v89[4] = &protocol witness table for CGFloat;
    v89[3] = &type metadata for CGFloat;
    v89[0] = 0x4038000000000000;
    v62 = v84;
    v57(v84, v55, v59);
    v63 = v54;
    v64 = v61;
    v33 = v60;
    v65 = v83;
    v66 = v58;
    v41 = v87;
    FlankedHorizontalLayout.init(sublayout:leadingView:leadingMargin:leadingAlignment:trailingView:trailingMargin:trailingAlignment:)(&v95, &v92, v91, v66, v90, v89, v62);
    v67 = sub_10000E99C(&qword_10080B590, (uint64_t (*)(uint64_t))&type metadata accessor for FlankedHorizontalLayout, (uint64_t)&protocol conformance descriptor for FlankedHorizontalLayout);
    v68 = v86;
    Measurable.placeable.getter(&v95, v86, v67);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v65, v68);
  }
  if (qword_1007F1E78 != -1)
    swift_once(&qword_1007F1E78, sub_1003A69F0);
  v69 = xmmword_10080B390;
  v70 = *(double *)&qword_10080B3A0;
  v71 = unk_10080B3A8;
  sub_100011020((uint64_t)&v95, (uint64_t)&v92);
  v72 = type metadata accessor for Margins(0);
  v73 = v88;
  v88[3] = v72;
  v73[4] = &protocol witness table for Margins;
  sub_1000117C0(v73);
  Margins.init(insets:child:)(&v92, *(double *)&v69, *((double *)&v69 + 1), v70, v71);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v95);
  return ((uint64_t (*)(char *, unint64_t))v33)(v40, v41);
}

id sub_1003A80CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t (*v43)(char *, char *, uint64_t);
  char *v44;

  v1 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v39 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v39 - v8;
  v10 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v39 - v18;
  v20 = *(uint64_t (**)(char *, char *, uint64_t))(v11 + 16);
  v40 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_badgeLabel];
  v41 = &v0[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_displayOptions];
  v43 = v20;
  v44 = v0;
  v21 = ((uint64_t (*)(char *))v20)((char *)&v39 - v18);
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v21);
  v22 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v23 = v19;
  v24 = v1;
  v25 = v22(v23, v10);
  v26 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.badgeColor.getter(v25);
  v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  v27(v9, v1);
  if (!v26)
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v40, "setTextColor:", v26);

  v28 = *(void **)&v44[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_titleLabel];
  v29 = v41;
  v30 = v43(v17, v41, v10);
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v30);
  v31 = v22(v17, v10);
  v32 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.titleColor.getter(v31);
  v27(v7, v24);
  if (!v32)
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v28, "setTextColor:", v32);

  v33 = *(void **)&v44[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_descriptionLabel];
  v34 = v43(v14, v29, v10);
  v35 = v42;
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v34);
  v36 = v22(v14, v10);
  v37 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.descriptionColor.getter(v36);
  v27(v35, v24);
  if (!v37)
    v37 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v33, "setTextColor:", v37);

  return objc_msgSend(v44, "setNeedsLayout");
}

id sub_1003A84A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarouselItemCollectionLockupOverlay(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003A8598()
{
  return type metadata accessor for CarouselItemCollectionLockupOverlay(0);
}

uint64_t type metadata accessor for CarouselItemCollectionLockupOverlay(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_10080B478, (uint64_t)&nominal type descriptor for CarouselItemCollectionLockupOverlay);
}

uint64_t sub_1003A85B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = &unk_100688D98;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003A8644(uint64_t a1, uint64_t a2)
{
  sub_1003A8F0C(a1, a2);
  return sub_100019310(a1, a2);
}

double sub_1003A867C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double *v4;
  double result;

  v3 = HeroCarouselItemOverlay.collectionIcons.getter();
  if (v3)
    v4 = (double *)v3;
  else
    v4 = _swiftEmptyArrayStorage;
  sub_1000594B0((uint64_t)v4, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_1003A86D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1);
  v3 = type metadata accessor for ArtworkView(0);
  v4 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v2, 1, v3, v4);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2), 1, v3, v4);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3), 1, v3, v4);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4), 1, v3, v4);
}

uint64_t sub_1003A87B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtensionP33_04B5E2A62FC871564D6815F6F8FC541210TextLayout_textStack;
  v2 = type metadata accessor for VerticalStack(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003A8804()
{
  return type metadata accessor for TextLayout(0);
}

uint64_t type metadata accessor for TextLayout(uint64_t a1)
{
  return sub_10005C17C(a1, qword_10080B4B8, (uint64_t)&nominal type descriptor for TextLayout);
}

uint64_t sub_1003A8820(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for VerticalStack(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003A888C(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;

  v9 = objc_msgSend(a1, "traitCollection");
  sub_1003A6670(v9, a2, a3, a4, a5);

  return LayoutRect.init(representing:)(a2, a3, a4, a5);
}

double sub_1003A8924(void *a1, __n128 a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v24;

  v5 = a2.n128_f64[0];
  v6 = type metadata accessor for VerticalStack.Placements(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "traitCollection", v8);
  v12 = measuringBoundingRect(toFit:)(v5, a3);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = type metadata accessor for VerticalStack(0);
  v20 = sub_10000E99C(&qword_10080B560, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStack, (uint64_t)&protocol conformance descriptor for VerticalStack);
  dispatch thunk of PrimitiveLayout.layout(relativeTo:with:)(v11, v19, v20, v12, v14, v16, v18);
  v21 = sub_10000E99C(&qword_10080B578, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalStack.Placements, (uint64_t)&protocol conformance descriptor for VerticalStack.Placements);
  v22 = dispatch thunk of PlacementSequence.measure.getter(v6, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

  return v22;
}

uint64_t sub_1003A8AA4(uint64_t a1)
{
  return sub_1003A8ADC(a1, &qword_1007F1E80, (uint64_t)qword_10080B3B0, (uint64_t)sub_1003A6A08);
}

uint64_t sub_1003A8AC0(uint64_t a1)
{
  return sub_1003A8ADC(a1, &qword_1007F1E88, (uint64_t)qword_10080B3C8, (uint64_t)sub_1003A6B58);
}

uint64_t sub_1003A8ADC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v15[5];

  v7 = VerticalStack.Properties.alignment.setter(0);
  v8 = static VerticalStack.Edge.top.getter(v7);
  v9 = VerticalStack.Edge.init(rawValue:)(0);
  v10 = VerticalStack.Edge.init(rawValue:)(v9);
  if (VerticalStack.Edge.init(rawValue:)(v10 & v8) != v8)
    v9 = VerticalStack.Edge.init(rawValue:)(v9 | v8);
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v9);
  if (*a2 != -1)
    swift_once(a2, a4);
  v11 = type metadata accessor for StaticDimension(0);
  v12 = sub_1000117A8(v11, a3);
  v15[3] = v11;
  v15[4] = &protocol witness table for StaticDimension;
  v13 = sub_1000117C0(v15);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v13, v12, v11);
  return VerticalStack.Properties.topSpacing.setter(v15);
}

uint64_t sub_1003A8BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[3];
  uint64_t v14;
  void *v15;

  v0 = VerticalStack.Properties.alignment.setter(0);
  v1 = static VerticalStack.Edge.top.getter(v0);
  v2 = static VerticalStack.Edge.bottom.getter();
  v3 = VerticalStack.Edge.init(rawValue:)(0);
  v4 = VerticalStack.Edge.init(rawValue:)(v3);
  if (VerticalStack.Edge.init(rawValue:)(v4 & v1) != v1)
    v3 = VerticalStack.Edge.init(rawValue:)(v3 | v1);
  v5 = VerticalStack.Edge.init(rawValue:)(v3);
  if (VerticalStack.Edge.init(rawValue:)(v5 & v2) != v2)
    v3 = VerticalStack.Edge.init(rawValue:)(v3 | v2);
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v3);
  if (qword_1007F1E90 != -1)
    swift_once(&qword_1007F1E90, sub_1003A6CA4);
  v6 = type metadata accessor for StaticDimension(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_10080B3E0);
  v14 = v6;
  v15 = &protocol witness table for StaticDimension;
  v8 = sub_1000117C0(v13);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v9(v8, v7, v6);
  VerticalStack.Properties.topSpacing.setter(v13);
  if (qword_1007F1E98 != -1)
    swift_once(&qword_1007F1E98, sub_1003A6DF0);
  v10 = sub_1000117A8(v6, (uint64_t)qword_10080B3F8);
  v14 = v6;
  v15 = &protocol witness table for StaticDimension;
  v11 = sub_1000117C0(v13);
  v9(v11, v10, v6);
  return VerticalStack.Properties.bottomSpacing.setter(v13);
}

uint64_t sub_1003A8D38()
{
  return sub_1003A8D48(10.0);
}

uint64_t sub_1003A8D40()
{
  return sub_1003A8D48(24.0);
}

uint64_t sub_1003A8D48(double a1)
{
  _QWORD v2[5];

  v2[3] = &type metadata for CGFloat;
  v2[4] = &protocol witness table for CGFloat;
  *(double *)v2 = a1;
  return HorizontalStack.Properties.trailingSpacing.setter(v2);
}

id sub_1003A8D8C(uint64_t a1)
{
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_badgeLabel];
  HeroCarouselItemOverlay.badgeText.getter(a1);
  if (v4)
  {
    v6 = v4;
    v7 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v3, "setText:", v7, v5);

  v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_titleLabel];
  HeroCarouselItemOverlay.titleText.getter();
  if (v9)
  {
    v11 = v9;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v8, "setText:", v12, v10);

  v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_descriptionLabel];
  HeroCarouselItemOverlay.descriptionText.getter();
  if (v14)
  {
    v16 = v14;
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v13, "setText:", v17, v15);

  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork];
  v19 = HeroCarouselItemOverlay.collectionIcons.getter();
  if (v19)
  {
    v20 = v19;
    if ((unint64_t)v19 >> 62)
    {
      if (v19 >= 0)
        v19 &= 0xFFFFFFFFFFFFFF8uLL;
      v21 = _CocoaArrayWrapper.endIndex.getter(v19);
    }
    else
    {
      v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v20);
    v22 = 4;
    if (v21 < 4)
      v22 = v21;
  }
  else
  {
    v22 = 0;
  }
  v23 = *(void **)(v18 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount) = v22;
  sub_1000586B0(v23);
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_1003A8F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_selectionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_selectionHandler);
  v5 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_selectionHandler
                 + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_100019320(a1, a2);
  sub_100019310(v4, v5);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_tapGestureRecognizer);
  v7 = *v3;
  v8 = v3[1];
  if (*v3)
  {
    v9 = swift_allocObject(&unk_10073C0C8, 32, 7);
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = v8;
    v10 = sub_100030368;
  }
  else
  {
    v10 = 0;
    v9 = 0;
  }
  sub_100019320(v7, v8);
  sub_100019310((uint64_t)v10, v9);
  return objc_msgSend(v6, "setEnabled:", v7 != 0);
}

uint64_t sub_1003A8FCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003A8FF0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *ObjCClassFromMetadata;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v1 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v12 + 104))(v11, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.leading(_:), v9);
  v13 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:), v4);
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v13);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)(v11, v7, v3, 1);
  v14 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_materialBackground;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v15 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_collectionArtwork;
  v16 = type metadata accessor for CollectionLockupArtwork();
  *(_QWORD *)&v0[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  v17 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_badgeLabel;
  v18 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v18);
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v20 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_titleLabel;
  *(_QWORD *)&v0[v20] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v21 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_descriptionLabel;
  *(_QWORD *)&v0[v21] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

  if (!v23)
    __break(1u);
  v24 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_chevronView;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v23);

  *(_QWORD *)&v0[v24] = v25;
  v26 = OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_tapGestureRecognizer;
  *(_QWORD *)&v0[v26] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v27 = &v0[OBJC_IVAR____TtC22SubscribePageExtension35CarouselItemCollectionLockupOverlay_selectionHandler];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CarouselItemCollectionLockupOverlay.swift", 64, 2, 91, 0);
  __break(1u);
}

uint64_t sub_1003A92C8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0, v2);
  sub_100045464(v5, qword_10080B5C0);
  sub_1000117A8(v5, (uint64_t)qword_10080B5C0);
  if (qword_1007F3438 != -1)
    swift_once(&qword_1007F3438, sub_10060239C);
  v6 = sub_1000117A8(v0, (uint64_t)qword_1008575D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0xD00000000000001BLL, 0x8000000100688E20);
}

void sub_1003A93C8(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  __n128 v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  __int128 aBlock;
  __int128 v46;
  id (*v47)(char, uint64_t, __n128);
  _QWORD *v48;

  v43 = a4;
  v44 = a3;
  v6 = type metadata accessor for Bag(0);
  v7 = __chkstk_darwin(v6);
  v41 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for MetricsTopicProvider(0, v7);
  v40 = *(_QWORD *)(v42 - 8);
  v9 = __chkstk_darwin(v42);
  v39 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1EA0 != -1)
    swift_once(&qword_1007F1EA0, sub_1003A92C8);
  v15 = sub_1000117A8(v11, (uint64_t)qword_10080B5C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ 4 * *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_1006725D0;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100647BD0);
  *((_QWORD *)&v46 + 1) = sub_100019574(0, (unint64_t *)&unk_10080B688, AMSEngagement_ptr);
  *(_QWORD *)&aBlock = a1;
  v19 = a1;
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100647D50);
  if (a2)
  {
    *((_QWORD *)&v46 + 1) = sub_100019574(0, &qword_10080B6A0, AMSEngagementRequest_ptr);
    *(_QWORD *)&aBlock = a2;
  }
  else
  {
    aBlock = 0u;
    v46 = 0u;
  }
  v20 = a2;
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  Logger.info(_:)(v18, v11, &protocol witness table for OSLogger);
  v21 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
  if (a2)
  {
    v22 = v44;
    v23 = v20;
    v24 = ASKBagContract.amsBag.getter(v23);
    v25 = v41;
    Bag.init(from:)(v24);
    v26 = v39;
    v27 = MetricsTopicProvider.init(bag:)(v25);
    LOBYTE(v25) = MetricsTopicProvider.shouldHaveAnonymousEvents.getter(v27);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v42);
    objc_msgSend(v23, "setAnonymousMetrics:", v25 & 1);
    v28 = v23;
    v29 = ASKBagContract.amsBag.getter(v28);
    v30 = objc_msgSend(objc_allocWithZone((Class)AMSUIEngagementTaskViewController), "initWithRequest:bag:", v28, v29);

    v31 = objc_msgSend(v30, "canPresent", swift_unknownObjectRelease(v29).n128_f64[0]);
    v32 = (_QWORD *)swift_allocObject(&unk_10073C2B8, 48, 7);
    v32[2] = v28;
    v32[3] = v22;
    v33 = v43;
    v32[4] = v30;
    v32[5] = v33;
    v47 = sub_1003AB6AC;
    v48 = v32;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v46 = sub_100442B30;
    *((_QWORD *)&v46 + 1) = &unk_10073C2D0;
    v34 = _Block_copy(&aBlock);
    v35 = v48;
    v36 = v28;
    v37 = v22;
    v38 = v30;
    objc_msgSend(v31, "addFinishBlock:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);

  }
}

id sub_1003A97E0(char a1, __n128 a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  id v22;
  __n128 v23;
  Swift::String v24;
  __n128 v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  id v33;
  __n128 v34;
  Swift::String v35;
  id v36;
  __n128 v37;
  Swift::String v38;
  __n128 v39;
  uint64_t v40;
  id v41;
  _QWORD v42[3];
  uint64_t v43;

  v41 = a6;
  v9 = type metadata accessor for LogMessage.StringInterpolation(0, a2);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OSLogger(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_1007F1EA0 != -1)
      swift_once(&qword_1007F1EA0, sub_1003A92C8);
    v17 = sub_1000117A8(v13, (uint64_t)qword_10080B5C0);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
    v18 = sub_10000DF3C(&qword_1007FD430);
    v19 = type metadata accessor for LogMessage(0);
    v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
    *(_OWORD *)(v20 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(65, 1);
    v21._countAndFlagsBits = 0xD000000000000040;
    v21._object = (void *)0x8000000100647DC0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    v43 = sub_100019574(0, &qword_10080B6A0, AMSEngagementRequest_ptr);
    v42[0] = a4;
    v22 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42, v23);
    sub_1000131E0((uint64_t)v42);
    v24._countAndFlagsBits = 41;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)(v12);
    Logger.info(_:)(v20, v13, &protocol witness table for OSLogger);
    v25 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v25);
    v26 = *(void **)(a5 + OBJC_IVAR____TtC22SubscribePageExtension27JourneyDrivenOnboardingStep_engagementViewController);
    *(_QWORD *)(a5 + OBJC_IVAR____TtC22SubscribePageExtension27JourneyDrivenOnboardingStep_engagementViewController) = v41;

    return v41;
  }
  else
  {
    if (qword_1007F1EA0 != -1)
      swift_once(&qword_1007F1EA0, sub_1003A92C8);
    v28 = sub_1000117A8(v13, (uint64_t)qword_10080B5C0);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v28, v13);
    v29 = sub_10000DF3C(&qword_1007FD430);
    v30 = type metadata accessor for LogMessage(0);
    v31 = swift_allocObject(v29, ((*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) | 7);
    *(_OWORD *)(v31 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(81, 2);
    v32._object = (void *)0x8000000100647C70;
    v32._countAndFlagsBits = 0xD000000000000016;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    v43 = sub_100019574(0, &qword_10080B6A8, AMSUIEngagementTaskViewController_ptr);
    v42[0] = v41;
    v33 = v41;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42, v34);
    sub_1000131E0((uint64_t)v42);
    v35._countAndFlagsBits = 0xD000000000000018;
    v35._object = (void *)0x8000000100647D70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    v43 = sub_100019574(0, &qword_10080B6A0, AMSEngagementRequest_ptr);
    v42[0] = a4;
    v36 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42, v37);
    sub_1000131E0((uint64_t)v42);
    v38._countAndFlagsBits = 0xD000000000000023;
    v38._object = (void *)0x8000000100647D90;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    LogMessage.init(stringInterpolation:)(v12);
    Logger.info(_:)(v31, v13, &protocol witness table for OSLogger);
    v39 = swift_bridgeObjectRelease(v31);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v39);
  }
}

void sub_1003A9BC4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 aBlock;
  __int128 v57;
  id (*v58)(char, uint64_t, __n128);
  _QWORD *v59;

  v51 = a8;
  v52 = a7;
  *(_QWORD *)&v53 = a5;
  *((_QWORD *)&v53 + 1) = a6;
  v54 = a4;
  v55 = a3;
  v10 = type metadata accessor for Bag(0);
  v11 = __chkstk_darwin(v10);
  v49 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for MetricsTopicProvider(0, v11);
  v48 = *(_QWORD *)(v50 - 8);
  v13 = __chkstk_darwin(v50);
  v47 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSLogger(0, v13);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1EA0 != -1)
    swift_once(&qword_1007F1EA0, sub_1003A92C8);
  v19 = sub_1000117A8(v15, (uint64_t)qword_10080B5C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  v20 = sub_10000DF3C(&qword_1007FD430);
  v21 = type metadata accessor for LogMessage(0);
  v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ 8 * *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
  *(_OWORD *)(v22 + 16) = xmmword_10067C1E0;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100647BD0);
  *((_QWORD *)&v57 + 1) = sub_100019574(0, (unint64_t *)&unk_10080B688, AMSEngagement_ptr);
  *(_QWORD *)&aBlock = a1;
  v23 = a1;
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)(0xD000000000000018, 0x8000000100647C50);
  if (a2)
  {
    *((_QWORD *)&v57 + 1) = sub_100019574(0, &qword_10080B6A0, AMSEngagementRequest_ptr);
    *(_QWORD *)&aBlock = a2;
  }
  else
  {
    aBlock = 0u;
    v57 = 0u;
  }
  v24 = v55;
  v46 = a2;
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100647C10);
  *((_QWORD *)&v57 + 1) = &type metadata for String;
  *(_QWORD *)&aBlock = v24;
  v25 = v54;
  *((_QWORD *)&aBlock + 1) = v54;
  swift_bridgeObjectRetain(v54);
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)(0x6563697672657320, 0xEF203A6570797420);
  *((_QWORD *)&v57 + 1) = &type metadata for String;
  aBlock = v53;
  swift_bridgeObjectRetain(*((_QWORD *)&v53 + 1));
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  Logger.info(_:)(v22, v15, &protocol witness table for OSLogger);
  v26 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v26);
  if (a2)
  {
    v27 = v52;
    v28 = v46;
    v29 = ASKBagContract.amsBag.getter(v28);
    v30 = v49;
    Bag.init(from:)(v29);
    v31 = v47;
    v32 = MetricsTopicProvider.init(bag:)(v30);
    LOBYTE(v30) = MetricsTopicProvider.shouldHaveAnonymousEvents.getter(v32);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v50);
    objc_msgSend(v28, "setAnonymousMetrics:", v30 & 1);
    v33 = v28;
    v34 = ASKBagContract.amsBag.getter(v33);
    v35 = objc_msgSend(objc_allocWithZone((Class)AMSUIEngagementTaskViewController), "initWithRequest:bag:", v33, v34);

    v36 = objc_msgSend(v35, "canPresent", swift_unknownObjectRelease(v34).n128_f64[0]);
    v37 = (_QWORD *)swift_allocObject(&unk_10073C218, 64, 7);
    v38 = v55;
    v37[2] = v33;
    v37[3] = v38;
    v37[4] = v25;
    v37[5] = v27;
    v39 = v51;
    v37[6] = v35;
    v37[7] = v39;
    v58 = sub_1003AB654;
    v59 = v37;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v57 = sub_100442B30;
    *((_QWORD *)&v57 + 1) = &unk_10073C230;
    v40 = _Block_copy(&aBlock);
    v41 = v59;
    v42 = v33;
    swift_bridgeObjectRetain(v25);
    v43 = v27;
    v44 = v35;
    objc_msgSend(v36, "addFinishBlock:", v40, swift_release(v41).n128_f64[0]);
    _Block_release(v40);

  }
}

id sub_1003AA0B0(char a1, __n128 a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  id v26;
  __n128 v27;
  Swift::String v28;
  __n128 v29;
  Swift::String v30;
  __n128 v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  id v39;
  __n128 v40;
  Swift::String v41;
  id v42;
  __n128 v43;
  Swift::String v44;
  __n128 v45;
  Swift::String v46;
  __n128 v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;

  v49 = a8;
  v13 = type metadata accessor for LogMessage.StringInterpolation(0, a2);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OSLogger(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_1007F1EA0 != -1)
      swift_once(&qword_1007F1EA0, sub_1003A92C8);
    v21 = sub_1000117A8(v17, (uint64_t)qword_10080B5C0);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, v17);
    v22 = sub_10000DF3C(&qword_1007FD430);
    v23 = type metadata accessor for LogMessage(0);
    v24 = swift_allocObject(v22, ((*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) | 7);
    *(_OWORD *)(v24 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(80, 2);
    v25._countAndFlagsBits = 0xD000000000000040;
    v25._object = (void *)0x8000000100647CE0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    v52 = (_QWORD *)sub_100019574(0, &qword_10080B6A0, AMSEngagementRequest_ptr);
    v50 = a4;
    v26 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v50, v27);
    sub_1000131E0((uint64_t)&v50);
    v28._object = (void *)0x8000000100647D30;
    v28._countAndFlagsBits = 0xD000000000000010;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    v52 = &type metadata for String;
    v50 = a5;
    v51 = a6;
    v29 = swift_bridgeObjectRetain(a6);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v50, v29);
    sub_1000131E0((uint64_t)&v50);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)(v16);
    Logger.info(_:)(v24, v17, &protocol witness table for OSLogger);
    v31 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v31);
    v32 = *(void **)(a7 + OBJC_IVAR____TtC22SubscribePageExtension27JourneyDrivenOnboardingStep_engagementViewController);
    *(_QWORD *)(a7 + OBJC_IVAR____TtC22SubscribePageExtension27JourneyDrivenOnboardingStep_engagementViewController) = v49;

    return v49;
  }
  else
  {
    if (qword_1007F1EA0 != -1)
      swift_once(&qword_1007F1EA0, sub_1003A92C8);
    v34 = sub_1000117A8(v17, (uint64_t)qword_10080B5C0);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v34, v17);
    v35 = sub_10000DF3C(&qword_1007FD430);
    v36 = type metadata accessor for LogMessage(0);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(98, 3);
    v38._countAndFlagsBits = 0xD000000000000016;
    v38._object = (void *)0x8000000100647C70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    v52 = (_QWORD *)sub_100019574(0, &qword_10080B6A8, AMSUIEngagementTaskViewController_ptr);
    v50 = v49;
    v39 = v49;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v50, v40);
    sub_1000131E0((uint64_t)&v50);
    v41._countAndFlagsBits = 0xD000000000000018;
    v41._object = (void *)0x8000000100647C90;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    v52 = (_QWORD *)sub_100019574(0, &qword_10080B6A0, AMSEngagementRequest_ptr);
    v50 = a4;
    v42 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v50, v43);
    sub_1000131E0((uint64_t)&v50);
    v44._countAndFlagsBits = 0x63616C70206E6920;
    v44._object = (void *)0xEF203A746E656D65;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    v52 = &type metadata for String;
    v50 = a5;
    v51 = a6;
    v45 = swift_bridgeObjectRetain(a6);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v50, v45);
    sub_1000131E0((uint64_t)&v50);
    v46._countAndFlagsBits = 0xD000000000000025;
    v46._object = (void *)0x8000000100647CB0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    LogMessage.init(stringInterpolation:)(v16);
    Logger.info(_:)(v37, v17, &protocol witness table for OSLogger);
    v47 = swift_bridgeObjectRelease(v37);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v47);
  }
}

uint64_t sub_1003AA5F4(void *a1, void *a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  __n128 v15;
  __int128 v17;
  __int128 v18;

  v5 = type metadata accessor for OSLogger(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1EA0 != -1)
    swift_once(&qword_1007F1EA0, sub_1003A92C8);
  v9 = sub_1000117A8(v5, (uint64_t)qword_10080B5C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_10000DF3C(&qword_1007FD430);
  v11 = type metadata accessor for LogMessage(0);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_1006725D0;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100647BD0);
  *((_QWORD *)&v18 + 1) = sub_100019574(0, (unint64_t *)&unk_10080B688, AMSEngagement_ptr);
  *(_QWORD *)&v17 = a1;
  v13 = a1;
  static LogMessage.safe(_:)(&v17);
  sub_1000131E0((uint64_t)&v17);
  LogMessage.init(stringLiteral:)(0xD000000000000017, 0x8000000100647C30);
  if (a2)
  {
    *((_QWORD *)&v18 + 1) = sub_100019574(0, &qword_10080B698, AMSDialogRequest_ptr);
    *(_QWORD *)&v17 = a2;
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  v14 = a2;
  static LogMessage.safe(_:)(&v17);
  sub_1000131E0((uint64_t)&v17);
  Logger.info(_:)(v12, v5, &protocol witness table for OSLogger);
  v15 = swift_bridgeObjectRelease(v12);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v15);
}

void sub_1003AA81C(void *a1, int a2, void *a3, void *a4, void *aBlock, void (*a6)(id, void *))
{
  void *v10;
  id v11;
  id v12;
  id v13;

  v10 = _Block_copy(aBlock);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  a6(v11, a4);
  _Block_release(v10);

}

uint64_t sub_1003AA8A8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v31 = a3;
  v32 = a5;
  ObjectType = swift_getObjectType();
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0, v12);
  v33 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_10073C128, 72, 7);
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = v31;
  v20[5] = a4;
  v20[6] = v32;
  v20[7] = a6;
  v20[8] = ObjectType;
  aBlock[4] = sub_1003AAF34;
  v37 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_10073C140;
  v21 = _Block_copy(aBlock);
  v22 = v37;
  v23 = a2;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  v24 = a1;
  v25 = swift_release(v22);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_100033D20();
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v28 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v11, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v14, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v17, v34);
}

uint64_t sub_1003AAACC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  *(_QWORD *)&v23 = a5;
  *((_QWORD *)&v23 + 1) = a6;
  v21 = a4;
  v22 = a3;
  v9 = type metadata accessor for OSLogger(0, a7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1EA0 != -1)
    swift_once(&qword_1007F1EA0, sub_1003A92C8);
  v13 = sub_1000117A8(v9, (uint64_t)qword_10080B5C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10000DF3C(&qword_1007FD430);
  v15 = type metadata accessor for LogMessage(0);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ 8 * *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10067C1E0;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100647BD0);
  *((_QWORD *)&v25 + 1) = sub_100019574(0, (unint64_t *)&unk_10080B688, AMSEngagement_ptr);
  *(_QWORD *)&v24 = a1;
  v17 = a1;
  static LogMessage.safe(_:)(&v24);
  sub_1000131E0((uint64_t)&v24);
  LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100647BF0);
  if (a2)
  {
    *((_QWORD *)&v25 + 1) = sub_100019574(0, &qword_10080B698, AMSDialogRequest_ptr);
    *(_QWORD *)&v24 = a2;
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  v18 = a2;
  static LogMessage.safe(_:)(&v24);
  sub_1000131E0((uint64_t)&v24);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100647C10);
  *((_QWORD *)&v25 + 1) = &type metadata for String;
  *(_QWORD *)&v24 = v22;
  *((_QWORD *)&v24 + 1) = v21;
  swift_bridgeObjectRetain(v21);
  static LogMessage.safe(_:)(&v24);
  sub_1000131E0((uint64_t)&v24);
  LogMessage.init(stringLiteral:)(0x6563697672657320, 0xEF203A6570797420);
  *((_QWORD *)&v25 + 1) = &type metadata for String;
  v24 = v23;
  swift_bridgeObjectRetain(*((_QWORD *)&v23 + 1));
  static LogMessage.safe(_:)(&v24);
  sub_1000131E0((uint64_t)&v24);
  Logger.info(_:)(v16, v9, &protocol witness table for OSLogger);
  v19 = swift_bridgeObjectRelease(v16);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
}

uint64_t type metadata accessor for JourneyDrivenOnboardingStep()
{
  return objc_opt_self(_TtC22SubscribePageExtension27JourneyDrivenOnboardingStep);
}

uint64_t sub_1003AAEE4()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension27JourneyDrivenOnboardingStep_shouldShow);
}

uint64_t sub_1003AAEF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003AAF34(__n128 a1)
{
  uint64_t v1;

  return sub_1003AAACC(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_1003AAF48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003AAF58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003AAF60(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0, v8);
  v11 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_10073C268, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v2;
  v16[5] = ObjectType;
  aBlock[4] = sub_1003AB668;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_10073C280;
  v17 = _Block_copy(aBlock);
  v18 = v30;
  v19 = a2;
  v20 = v3;
  v21 = a1;
  v22 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100033D20();
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v25 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v7, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v27);
}

uint64_t sub_1003AB160(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  id v24;
  id v25;
  id v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  _QWORD *v42;

  v7 = v6;
  v35 = a3;
  v36 = a5;
  ObjectType = swift_getObjectType();
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0, v13);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v37 = static OS_dispatch_queue.main.getter(v19);
  v20 = (_QWORD *)swift_allocObject(&unk_10073C1C8, 80, 7);
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = v35;
  v20[5] = a4;
  v20[6] = v36;
  v20[7] = a6;
  v21 = ObjectType;
  v20[8] = v6;
  v20[9] = v21;
  aBlock[4] = sub_1003AB604;
  v42 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_10073C1E0;
  v22 = _Block_copy(aBlock);
  v23 = v42;
  v24 = a2;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  v25 = v7;
  v26 = a1;
  v27 = swift_release(v23);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = _swiftEmptyArrayStorage;
  v28 = sub_100033D20();
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v30 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v12, v28);
  v31 = (void *)v37;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v15, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v18, v39);
}

uint64_t sub_1003AB390(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_10073C178, 40, 7);
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = ObjectType;
  aBlock[4] = sub_1003AB5B4;
  v28 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_10073C190;
  v16 = _Block_copy(aBlock);
  v17 = v28;
  v18 = a2;
  v19 = a1;
  v20 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100033D20();
  v22 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v23 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v5, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1003AB588()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003AB5B4(__n128 a1)
{
  uint64_t v1;

  return sub_1003AA5F4(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1003AB5C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 80, 7);
}

void sub_1003AB604()
{
  uint64_t v0;

  sub_1003A9BC4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1003AB618()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

id sub_1003AB654(char a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  return sub_1003AA0B0(a1, a3, a2, *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48));
}

void sub_1003AB668()
{
  uint64_t v0;

  sub_1003A93C8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1003AB678()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_1003AB6AC(char a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  return sub_1003A97E0(a1, a3, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

id sub_1003AB6E0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t ObjectType;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  objc_super v16;

  ObjectType = swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_sizeCategory] = 5;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isExpanded] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_originalSizeCategory] = 5;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isLayoutRequired] = 1;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isTransitioning] = 0;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for InfoLayerOverlayContainerView();
  v10 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v13 = v10;
  v14 = UIView.registerForTraitChanges<A>(_:handler:)(v12, sub_1003ABDD0, 0, ObjectType);
  swift_unknownObjectRelease(v14);

  swift_bridgeObjectRelease(v12);
  return v13;
}

id sub_1003AB864()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id result;
  _QWORD v5[6];

  v1 = OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView];
  if (v2)
  {
    v5[0] = 0x3FF0000000000000;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0x3FF0000000000000;
    v5[4] = 0;
    v5[5] = 0;
    objc_msgSend(v2, "setTransform:", v5);
    v2 = *(void **)&v0[v1];
  }
  objc_msgSend(v2, "removeFromSuperview");
  v3 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isLayoutRequired] = 1;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_sizeCategory] = 5;
  result = objc_msgSend(v0, "setHidden:", 0);
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_originalSizeCategory] = 5;
  return result;
}

void sub_1003AB910()
{
  char *v0;
  void *v1;
  int v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for InfoLayerOverlayContainerView();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView];
  if (v1)
  {
    v2 = v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_originalSizeCategory];
    v3 = v1;
    v4 = v3;
    if (v2 == 4)
    {
      sub_1003AB9E0(v3);
    }
    else
    {
      objc_msgSend(v0, "bounds");
      objc_msgSend(v4, "setFrame:");
    }

  }
}

uint64_t sub_1003AB9E0(void *a1)
{
  void *v1;
  void *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  uint64_t result;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  _QWORD v18[6];
  CGAffineTransform v19;
  CGAffineTransform v20;

  v2 = v1;
  objc_msgSend(v1, "bounds");
  v5 = v4;
  objc_msgSend(a1, "bounds");
  v7 = v6;
  v9 = v8;
  v10 = (void *)objc_opt_self(UIView);
  objc_msgSend(v10, "setAnimationsEnabled:", 0);
  if (v5 == v7)
    goto LABEL_2;
  if (v7 < v5 && (v7 != 0.0 || v9 != 0.0))
    goto LABEL_11;
  if (v7 == 0.0 && v9 == 0.0)
  {
LABEL_2:
    objc_msgSend(v2, "bounds");
    objc_msgSend(a1, "setFrame:");
LABEL_3:
    objc_msgSend(v10, "setAnimationsEnabled:", 1);
    v20.a = 1.0;
    v20.b = 0.0;
    v20.c = 0.0;
    v20.d = 1.0;
    v20.tx = 0.0;
    v20.ty = 0.0;
    return (uint64_t)objc_msgSend(a1, "setTransform:", &v20, v18[0], v18[1], v18[2], v18[3], v18[4], v18[5]);
  }
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isExpanded) == 1)
  {
LABEL_11:
    objc_msgSend(v2, "bounds");
    objc_msgSend(a1, "setFrame:");
    objc_msgSend(a1, "transform");
    CGAffineTransformScale(&v19, &v20, v7 / v5, v7 / v5);
    v20 = v19;
    objc_msgSend(a1, "setTransform:", &v20);
    goto LABEL_3;
  }
  CGAffineTransformMakeScale(&v20, v5 / v7, v5 / v7);
  a = v20.a;
  b = v20.b;
  c = v20.c;
  d = v20.d;
  tx = v20.tx;
  ty = v20.ty;
  objc_msgSend(v10, "setAnimationsEnabled:", 1);
  objc_msgSend(a1, "transform");
  v19 = v20;
  v20.a = 1.0;
  v20.b = 0.0;
  v20.c = 0.0;
  v20.d = 1.0;
  v20.tx = 0.0;
  v20.ty = 0.0;
  result = static CGAffineTransform.== infix(_:_:)(&v19, &v20);
  if ((result & 1) != 0)
    return (uint64_t)objc_msgSend(a1, "setTransform:", v18, *(_QWORD *)&a, *(_QWORD *)&b, *(_QWORD *)&c, *(_QWORD *)&d, *(_QWORD *)&tx, *(_QWORD *)&ty);
  return result;
}

double sub_1003ABC18(double a1)
{
  char *v1;
  double v2;
  void *v3;
  double v4;
  id v5;
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;

  v2 = a1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView];
  if (v3)
  {
    objc_msgSend(v3, "sizeThatFits:", a1);
    return v4;
  }
  else
  {
    v5 = objc_msgSend(v1, "traitCollection");
    if (qword_1007F1928 != -1)
      swift_once(&qword_1007F1928, sub_10028C58C);
    sub_1001E61B8(v5, (uint64_t)&xmmword_100853160, 1);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v6) & 1) != 0)
    {
      v7.n128_u64[0] = 20.0;
      v8.n128_u64[0] = 20.0;
    }
    else
    {
      v7.n128_u64[0] = 13.0;
      v8.n128_u64[0] = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v7, v8);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v9) & 1) != 0)
    {
      v10.n128_u64[0] = 20.0;
      v11.n128_u64[0] = 20.0;
    }
    else
    {
      v10.n128_u64[0] = 13.0;
      v11.n128_u64[0] = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v10, v11);

  }
  return v2;
}

id sub_1003ABD70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InfoLayerOverlayContainerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for InfoLayerOverlayContainerView()
{
  return objc_opt_self(_TtC22SubscribePageExtension29InfoLayerOverlayContainerView);
}

id sub_1003ABDD0(_BYTE *a1)
{
  a1[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isLayoutRequired] = 1;
  return objc_msgSend(a1, "setNeedsLayout");
}

void sub_1003ABDEC()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_sizeCategory] = 5;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isExpanded] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_originalSizeCategory] = 5;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isLayoutRequired] = 1;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isTransitioning] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/InfoLayerOverlayContainerView.swift", 58, 2, 26, 0);
  __break(1u);
}

uint64_t sub_1003ABE98()
{
  uint64_t v0;

  v0 = type metadata accessor for Bag.Profile(0);
  sub_100045464(v0, qword_100854358);
  sub_1000117A8(v0, (uint64_t)qword_100854358);
  return Bag.Profile.init(name:version:)(0x65726F7453707041, 0xE800000000000000, 49, 0xE100000000000000);
}

int64x2_t sub_1003ABEFC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4067E00000000000uLL);
  xmmword_100854370 = (__int128)result;
  return result;
}

void sub_1003ABF14()
{
  qword_100854380 = 0x4047000000000000;
}

char *sub_1003ABF24(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for ArtworkView(0);
  v10 = v4;
  *(_QWORD *)&v10[qword_100854388] = static ArtworkView.iconArtworkView.getter();

  v16.receiver = v10;
  v16.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v12 = objc_msgSend(v11, "contentView");
  objc_msgSend(v12, "insertSubview:atIndex:", *(_QWORD *)&v11[qword_100854388], 0);

  v13 = *(void **)&v11[qword_100852D38];
  objc_msgSend(v13, "setNumberOfLines:", 2);
  v14 = v13;
  objc_msgSend(v14, "setLineBreakMode:", 4);

  return v11;
}

char *sub_1003AC04C(double a1, double a2, double a3, double a4)
{
  return sub_1003ABF24(a1, a2, a3, a4);
}

void sub_1003AC06C(CGFloat *a1)
{
  uint64_t v1;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  double MaxY;
  uint64_t v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  if (qword_1007F1EB0 != -1)
    swift_once(&qword_1007F1EB0, sub_1003ABEFC);
  v4 = *((double *)&xmmword_100854370 + 1);
  v3 = *(double *)&xmmword_100854370;
  if (qword_1007F1EB8 != -1)
    swift_once(&qword_1007F1EB8, sub_1003ABF14);
  v5 = *(double *)&qword_100854380;
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v14.origin.x = *a1;
  v14.origin.y = v7;
  v14.size.width = v8;
  v14.size.height = v9;
  v10 = floor(CGRectGetMidX(v14) + v3 * -0.5);
  objc_msgSend(*(id *)(v1 + qword_100852D38), "frame");
  v11 = v5 + CGRectGetMaxY(v15);
  v16.origin.x = v10;
  v16.origin.y = v11;
  v16.size.width = v3;
  v16.size.height = v4;
  MaxY = CGRectGetMaxY(v16);
  v17.origin.x = v6;
  v17.origin.y = v7;
  v17.size.width = v8;
  v17.size.height = v9;
  if (CGRectGetMaxY(v17) < MaxY)
  {
    v18.origin.x = v6;
    v18.origin.y = v7;
    v18.size.width = v8;
    v18.size.height = v9;
    CGRectGetMidY(v18);
  }
  ArtworkView.frame.setter(v13);
}

void sub_1003AC1F0(void *a1, uint64_t a2, char a3)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  id v21;
  uint64_t v22;

  ObjectType = swift_getObjectType();
  v7 = a3 & 1;
  v9 = type metadata accessor for Artwork.Style(0, v8);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005A3708(a1, a2, v7);
  v12 = swift_dynamicCastClass(a1, ObjectType);
  if (v12)
  {
    if (!(_DWORD)v7)
    {
      v13 = *(void **)(v12 + qword_100854388);
      v14 = a1;
      v15 = v13;
      v16 = ArtworkView.image.getter();

      ArtworkView.image.setter(v16);
      v17 = v15;
      v18 = ArtworkView.imageSize.getter();
      v20 = v19;

      ArtworkView.imageSize.setter(v18, v20);
      v21 = v17;
      ArtworkView.style.getter();

      ArtworkView.style.setter(v11);
    }
  }
}

void sub_1003AC324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = v4;
  v10 = type metadata accessor for Artwork.Style(0, a2);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1005C0808(a1, a2, a3, a4, v11);
  v15 = TodayCard.media.getter(v14);
  v16 = type metadata accessor for TodayCardMediaAppIcon(0);
  if (swift_dynamicCastClass(v15, v16))
  {
    v17 = type metadata accessor for ArtworkLoader(0);
    v18 = *(_QWORD *)(a4 + qword_100854050);
    if (v18)
    {
      swift_retain(*(_QWORD *)(a4 + qword_100854050));
      v20 = TodayCardMediaAppIcon.icon.getter(v19);
      if (qword_1007F1EB0 != -1)
        swift_once(&qword_1007F1EB0, sub_1003ABEFC);
      v21 = *(void **)(v5 + qword_100854388);
      v22 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v21, "contentMode"), 0, *(double *)&xmmword_100854370, *((double *)&xmmword_100854370 + 1));
      swift_release(v20);
      v24 = TodayCardMediaAppIcon.icon.getter(v23);
      Artwork.style.getter(v24);
      v25 = ArtworkView.style.setter(v13);
      *(_QWORD *)&v26 = Artwork.contentMode.getter(v25).n128_u64[0];
      v28 = ArtworkLoaderConfig.size.getter(objc_msgSend(v21, "setContentMode:", v27, v26));
      v30 = ArtworkView.imageSize.setter(v28, v29);
      v31 = Artwork.backgroundColor.getter(v30);
      if (!v31)
      {
        sub_1000117FC();
        v31 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v31);
      swift_release(v24);
      v32 = type metadata accessor for ArtworkView(0);
      v33 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v22, 2, 1, v21, v32, v33);
      swift_release(v15);
      swift_release(v18);
      swift_release(v22);
    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v17);
      __break(1u);
    }
  }
  else
  {
    swift_release(v15);
  }
}

double sub_1003AC590()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  double result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::OpaquePointer v12;
  void *v13;

  v0 = type metadata accessor for TodayCard(0);
  v1 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v2 = ItemLayoutContext.typedModel<A>(as:)(&v13, v0, v0, v1);
  v4 = v13;
  if (v13)
  {
    v5 = TodayCard.media.getter(v2);
    swift_release(v4);
    v6 = type metadata accessor for TodayCardMediaAppIcon(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = TodayCardMediaAppIcon.icon.getter(v7);
      if (qword_1007F1EB0 != -1)
        swift_once(&qword_1007F1EB0, sub_1003ABEFC);
      v9 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_100854370, *((double *)&xmmword_100854370 + 1));
      swift_release(v8);
      v10 = sub_10000DF3C(&qword_1007F5840);
      v11 = swift_allocObject(v10, 40, 7);
      *(_OWORD *)(v11 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v11 + 32) = v9;
      v13 = (void *)v11;
      specialized Array._endMutation()(v11);
      v12._rawValue = v13;
      swift_retain(v9);
      ArtworkLoader.prefetchArtwork(using:)(v12);
      swift_release(v5);
      swift_release(v9);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v12._rawValue).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

void sub_1003AC6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];

  v4 = v3;
  v8 = type metadata accessor for Artwork.Style(0, a2);
  v9 = __chkstk_darwin(v8);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005C0B60(a1, a2, a3, v9);
  sub_100011020(a1, (uint64_t)v35);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v13 = type metadata accessor for TodayCard(0);
  v14 = swift_dynamicCast(&v34, v35, v12, v13, 6);
  if ((_DWORD)v14)
  {
    v15 = v34;
    v16 = TodayCard.media.getter(v14);
    swift_release(v15);
    v17 = type metadata accessor for TodayCardMediaAppIcon(0);
    v18 = swift_dynamicCastClass(v16, v17);
    if (v18)
    {
      v19 = TodayCardMediaAppIcon.icon.getter(v18);
      if (qword_1007F1EB0 != -1)
        swift_once(&qword_1007F1EB0, sub_1003ABEFC);
      v20 = *(void **)(v4 + qword_100854388);
      v21 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v20, "contentMode"), 0, *(double *)&xmmword_100854370, *((double *)&xmmword_100854370 + 1));
      swift_release(v19);
      v23 = TodayCardMediaAppIcon.icon.getter(v22);
      Artwork.style.getter(v23);
      v24 = ArtworkView.style.setter(v11);
      *(_QWORD *)&v25 = Artwork.contentMode.getter(v24).n128_u64[0];
      v27 = ArtworkLoaderConfig.size.getter(objc_msgSend(v20, "setContentMode:", v26, v25));
      v29 = ArtworkView.imageSize.setter(v27, v28);
      v30 = Artwork.backgroundColor.getter(v29);
      if (!v30)
      {
        sub_1000117FC();
        v30 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v30);
      swift_release(v23);
      v31 = type metadata accessor for ArtworkView(0);
      v32 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2, 1, v20, v31, v32);
      swift_release(v16);
      v33 = v21;
    }
    else
    {
      v33 = v16;
    }
    swift_release(v33);
  }
}

uint64_t sub_1003AC954(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  UIImage_optional v17;

  v4 = v3;
  v7 = v3 + qword_100852D48;
  v8 = *(_QWORD *)(v3 + qword_100852D48);
  if (v8)
  {
    v9 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 128);
    v12 = swift_unknownObjectRetain(v8);
    v11(a1, ObjectType, v9, v12);
    swift_unknownObjectRelease(v8);
  }
  v13 = *(_QWORD *)(v4 + qword_100854388);
  v17.value.super.isa = 0;
  v17.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v17, a3);
  v14 = type metadata accessor for ArtworkView(0);
  v15 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v13, a3, v14, v15);
}

void sub_1003ACA34()
{
  uint64_t v0;

}

void sub_1003ACA44(uint64_t a1)
{

}

uint64_t type metadata accessor for AppIconTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B730;
  if (!qword_10080B730)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppIconTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_1003ACA90(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 808);
}

uint64_t sub_1003ACAD4()
{
  return type metadata accessor for AppIconTodayCardCollectionViewCell(0);
}

unint64_t sub_1003ACAE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080BAA0;
  if (!qword_10080BAA0)
  {
    v1 = type metadata accessor for ReviewsContainerCell(255);
    result = swift_getWitnessTable(byte_100697478, v1);
    atomic_store(result, (unint64_t *)&qword_10080BAA0);
  }
  return result;
}

double sub_1003ACB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double result;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100688F30);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  ReadOnlyLens.value.getter(&v23, v7);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  v13 = v23;
  v14 = ItemLayoutContext.sectionIndex.getter(v12);
  v15 = type metadata accessor for ArtworkLoader(0);
  v16 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v22, v15, a4, v15, v16);
  v17 = v22;
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(a4, v18, 0, 0, 0);
  v20 = (char *)sub_1000826AC();
  sub_10003CA98(v13, v14, v17, v19, a1, a2, v20);
  swift_release(v17);
  swift_unknownObjectRelease(v20);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1003ACCA8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf);
  if (v1)
  {
    v2 = v1;
    sub_100098E30(v2);

  }
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice + 8);
  *v3 = 0;
  v3[1] = 0;
  return sub_100019310(v4, v5);
}

char *sub_1003ACD08(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  double left;
  double bottom;
  double right;
  char *v17;
  objc_super v19;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_eventCardView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CondensedAppEventCardView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_interRowSpacing] = 0;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for CondensedAppEventContentView();
  v13 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = (char *)v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v17, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView]);
  objc_msgSend(v17, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_eventCardView]);

  return v17;
}

void sub_1003ACF74()
{
  char *v0;
  char *v1;
  objc_class *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  void *v24;
  char *v25;
  id v26;
  __n128 v27;
  __n128 v28;
  objc_super v29;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for CondensedAppEventContentView();
  v29.receiver = v1;
  v29.super_class = v2;
  objc_msgSendSuper2(&v29, "layoutSubviews");
  v3 = LayoutMarginsAware<>.layoutFrame.getter(v2);
  v5 = v4;
  v7 = v6;
  v8 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView];
  v9 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v10 = sub_10000DF3C(&qword_1007F5840);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = v9;
  v13 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v11);
  objc_msgSend(v8, "measurementsWithFitting:in:", v13, v5, v7);

  v14 = objc_msgSend(v1, "traitCollection");
  v15 = CGRect.withLayoutDirection(using:relativeTo:)(v14, v3);
  v17 = v16;
  v19 = v18;
  v21 = v20;

  objc_msgSend(v8, "setFrame:", v15, v17, v19, v21);
  v22 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_eventCardView];
  v23 = objc_msgSend(v22, "superview");
  if (v23)
  {
    v24 = v23;
    sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v25 = v1;
    v26 = v24;
    LOBYTE(v24) = static NSObject.== infix(_:_:)(v26, v25);

    if ((v24 & 1) != 0)
    {
      sub_1003AD79C(v27);
      objc_msgSend(v22, "setBounds:", 0.0, 0.0);
      objc_msgSend(v22, "setCenter:", sub_1003AD91C(v28));
    }
  }
}

uint64_t sub_1003AD200()
{
  uint64_t v0;
  char *v1;
  id v2;
  Swift::Bool v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  UIImage_optional v16;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView);
  v2 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView];
  v16.value.super.isa = 0;
  v16.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v16, v3);

  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_descriptionLabel];
  v5 = objc_msgSend(v4, "superview");
  if (!v5)
    goto LABEL_3;
  v6 = v5;
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v7 = v1;
  v8 = v6;
  LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

  if ((v6 & 1) == 0)
LABEL_3:
    objc_msgSend(v1, "addSubview:", v4);
  objc_msgSend(v4, "setHidden:", 1);
  objc_msgSend(v4, "setText:", 0);
  objc_msgSend(v1, "setNeedsLayout");
  v9 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton;
  v10 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton];
  if (v10)
  {
    objc_msgSend(v10, "removeFromSuperview");
    v11 = *(void **)&v1[v9];
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)&v1[v9] = 0;

  v14 = *(_QWORD *)&v1[v9];
  if (v14)
    v12 = objc_msgSend(v1, "addSubview:");
  return sub_10012059C((uint64_t)v12, v13, v14);
}

void sub_1003AD388(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  double (*v25)();
  double (**v26)();
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v5 = type metadata accessor for PageGrid(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppEventSearchResult(0);
  v13 = sub_10001F65C((unint64_t *)&qword_1007F4890, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v14 = ItemLayoutContext.typedModel<A>(as:)(&v33, v12, v12, v13);
  v15 = v33;
  if (v33)
  {
    v32 = v5;
    v16 = AppEventSearchResult.lockup.getter(v14);
    v17 = type metadata accessor for ItemLayoutContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
    v18 = type metadata accessor for ObjectGraph(0);
    v19 = swift_dynamicCastClassUnconditional(a2, v18, 0, 0, 0);
    sub_1000303E4(v16, (uint64_t)v11, v19);
    swift_release(v16);
    v20 = sub_100011088((uint64_t)v11, &qword_1007F4A50);
    v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_eventCardView];
    v22 = AppEventSearchResult.appEvent.getter(v20);
    sub_10012070C(v22, v23);
    swift_release(v22);
    v24 = swift_allocObject(&unk_10073C3D8, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    v25 = (double (*)())swift_allocObject(&unk_10073C400, 40, 7);
    *((_QWORD *)v25 + 2) = v24;
    *((_QWORD *)v25 + 3) = v15;
    *((_QWORD *)v25 + 4) = a2;
    v26 = (double (**)())(v21
                        + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventViewTappedAction);
    v27 = *(_QWORD *)(v21 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventViewTappedAction);
    v28 = *(_QWORD *)(v21
                    + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventViewTappedAction
                    + 8);
    *v26 = sub_1003AE848;
    v26[1] = v25;
    swift_retain(v15);
    swift_retain(a2);
    sub_100019310(v27, v28);
    KeyPath = swift_getKeyPath(&unk_1006890C0);
    ItemLayoutContext.subscript.getter(v8);
    swift_release(KeyPath);
    v31 = PageGrid.interRowSpace.getter(v30);
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v32);
    *(double *)&v3[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_interRowSpacing] = v31;
    objc_msgSend(v3, "setNeedsLayout");
    swift_release(v15);
  }
}

double sub_1003AD62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  double result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  _QWORD v19[4];
  _BYTE v20[24];

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v14 = AppEventSearchResult.appEvent.getter(v13);
      v15 = AppPromotion.clickAction.getter(v14);
      swift_release(v14);
      if (v15)
      {
        v19[3] = type metadata accessor for CondensedAppEventContentView();
        v19[0] = v11;
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
        v16 = v11;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v15, v19, v8, a3);

        swift_release(v15);
        v17 = swift_release(v12);
        (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v17);
        sub_100011088((uint64_t)v19, &qword_1007F6E90);
      }
      else
      {

        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

double sub_1003AD79C(__n128 a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v2 = v1;
  v3 = type metadata accessor for CondensedSearchInAppEventContentLayout.Metrics(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView], "frame", v5);
  CGRectGetMaxY(v21);
  v8 = objc_msgSend(v1, "traitCollection");
  v9 = UITraitCollection.prefersAccessibilityLayouts.getter(v8);

  if ((v9 & 1) == 0)
  {
    v11 = static CondensedSearchInAppEventContentLayout.Metrics.standard.getter(v10);
    CondensedSearchInAppEventContentLayout.Metrics.lockupBottomSpacing.getter(v18, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v12 = v19;
    v13 = v20;
    sub_100011064(v18, v19);
    v14 = objc_msgSend(v2, "traitCollection");
    AnyDimension.value(with:)(v14, v12, v13);

    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  v15 = type metadata accessor for CondensedAppEventContentView();
  v22.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v15);
  CGRectGetHeight(v22);
  v23.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v15);
  CGRectGetWidth(v23);
  return 0.0;
}

CGFloat sub_1003AD91C(__n128 a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v2 = v1;
  v3 = type metadata accessor for CondensedSearchInAppEventContentLayout.Metrics(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView], "frame", v5);
  CGRectGetMaxY(v21);
  v8 = objc_msgSend(v1, "traitCollection");
  v9 = UITraitCollection.prefersAccessibilityLayouts.getter(v8);

  if ((v9 & 1) == 0)
  {
    v11 = static CondensedSearchInAppEventContentLayout.Metrics.standard.getter(v10);
    CondensedSearchInAppEventContentLayout.Metrics.lockupBottomSpacing.getter(v18, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v12 = v19;
    v13 = v20;
    sub_100011064(v18, v19);
    v14 = objc_msgSend(v2, "traitCollection");
    AnyDimension.value(with:)(v14, v12, v13);

    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  v15 = type metadata accessor for CondensedAppEventContentView();
  v22.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v15);
  CGRectGetHeight(v22);
  objc_msgSend(v2, "bounds");
  return CGRectGetWidth(v23) * 0.5;
}

id sub_1003ADAC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CondensedAppEventContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CondensedAppEventContentView()
{
  return objc_opt_self(_TtC22SubscribePageExtension28CondensedAppEventContentView);
}

uint64_t sub_1003ADB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  Swift::Bool v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  Swift::Bool v11;
  UIImage_optional v13;
  UIImage_optional v14;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v4 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v13.value.super.isa = 0;
  v13.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v13, v5);

  v6 = *(void **)(v2 + v3);
  v7 = type metadata accessor for ArtworkView(0);
  v8 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v9 = v6;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v9, 1, v7, v8);

  v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_eventCardView)
                  + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_artworkView);
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, v11);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1, v7, v8);
}

uint64_t sub_1003ADC54(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_10080BAF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for CondensedAppEventContentView, (uint64_t)"y4\v");
}

uint64_t sub_1003ADC80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10001F65C(&qword_10080BAF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for CondensedAppEventContentView, (uint64_t)&unk_100688FDC);
  result = sub_10001F65C((unint64_t *)&unk_10080BB00, v3, (uint64_t (*)(uint64_t))type metadata accessor for CondensedAppEventContentView, (uint64_t)&unk_10068900C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_1003ADCDC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  __n128 v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD);
  void (*v17)(_QWORD, _QWORD);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  double v31;
  double v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __n128 v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  double v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;

  v1 = type metadata accessor for CondensedSearchInAppEventContentLayout.Metrics(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_10080C0B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppEventSearchResult(0);
  v9 = sub_10001F65C((unint64_t *)&qword_1007F4890, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v10 = ItemLayoutContext.typedModel<A>(as:)(v54, v8, v8, v9);
  v11 = v54[0];
  if (!v54[0])
    return 0.0;
  v49 = v2;
  v50 = v1;
  v12 = AppEventSearchResult.lockup.getter(v10);
  KeyPath = swift_getKeyPath(&unk_100689090);
  ItemLayoutContext.subscript.getter(v54);
  swift_release(KeyPath);
  v53 = (void *)v54[0];
  v14 = swift_retain(v12);
  Lockup.title.getter(v14);
  v52 = v15;
  v17 = v16;
  swift_release(v12);
  v18 = swift_retain(v12);
  v51 = Lockup.subtitle.getter(v18);
  v20 = v19;
  swift_release(v12);
  v21 = swift_retain(v12);
  v22 = Lockup.searchAd.getter(v21);
  v23 = swift_release(v12);
  if (v22)
  {
    v24 = SearchAd.advertisingText.getter(v23);
    v26 = v25;
    v23 = swift_release(v22);
  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  v28 = MixedMediaLockup.metadataRibbonItems.getter(v23);
  v29 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v30 = ((__n128 (*)(char *, uint64_t, uint64_t, uint64_t))*(_QWORD *)(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  v30.n128_u64[0] = 0;
  sub_10015649C(v52, v17, v51, v20, v24, v26, v28, (uint64_t)v7, v30, 0.0, 0, v53);
  v32 = v31;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v17);
  sub_100011088((uint64_t)v7, (uint64_t *)&unk_10080C0B0);
  type metadata accessor for CondensedAppEventCardView();
  v33 = swift_getKeyPath(&unk_100689090);
  ItemLayoutContext.subscript.getter(v54);
  swift_release(v33);
  v34 = (void *)v54[0];
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v35) & 1) != 0)
    v37 = sub_10058BDCC(v36);
  else
    v37 = sub_10058C4B4();
  v38 = v37;
  v40 = v49;
  v39 = v50;

  v41 = v32 + v38;
  v43 = static CondensedSearchInAppEventContentLayout.Metrics.standard.getter(v42);
  CondensedSearchInAppEventContentLayout.Metrics.lockupBottomSpacing.getter(v54, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v39);
  v44 = v55;
  v45 = v56;
  sub_100011064(v54, v55);
  v46 = v53;
  v47 = AnyDimension.value(with:)(v53, v44, v45);
  swift_release(v11);

  swift_release(v12);
  v27 = v41 + v47;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v54);
  return v27;
}

double sub_1003AE018()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD);
  void (*v16)(_QWORD, _QWORD);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  double v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  v45 = *(_QWORD *)(v0 - 8);
  v46 = v0;
  v1 = __chkstk_darwin(v0);
  v44 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CondensedSearchInAppEventContentLayout.Metrics(0, v1);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_10080C0B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100689060);
  ItemLayoutContext.subscript.getter(v47);
  swift_release(KeyPath);
  v10 = (void *)v47[0];
  v12 = AppEventSearchResult.lockup.getter(v11);
  Lockup.title.getter(v13);
  v41 = v14;
  v16 = v15;
  v17 = swift_retain(v12);
  v40 = Lockup.subtitle.getter(v17);
  v19 = v18;
  swift_release(v12);
  v20 = swift_retain(v12);
  v21 = Lockup.searchAd.getter(v20);
  v22 = swift_release(v12);
  if (v21)
  {
    v23 = SearchAd.advertisingText.getter(v22);
    v25 = v24;
    v22 = swift_release(v21);
  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v26 = MixedMediaLockup.metadataRibbonItems.getter(v22);
  v27 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
  v28 = objc_msgSend(v10, "traitCollection");
  v29.n128_u64[0] = 0;
  sub_10015649C(v41, v16, v40, v19, v23, v25, v26, (uint64_t)v8, v29, 0.0, 0, v28);
  v31 = v30;

  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v16);
  v32 = sub_100011088((uint64_t)v8, (uint64_t *)&unk_10080C0B0);
  v33 = static CondensedSearchInAppEventContentLayout.Metrics.standard.getter(v32);
  CondensedSearchInAppEventContentLayout.Metrics.lockupBottomSpacing.getter(v47, v33);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v43);
  v34 = v48;
  v35 = v49;
  sub_100011064(v47, v48);
  v36 = v44;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v34);
  v37 = AnyDimension.value(in:rounded:)(v10, v36, v34, v35);
  swift_release(v12);
  v38 = swift_unknownObjectRelease(v10);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v36, v46, v38);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
  return v31 + v37;
}

void sub_1003AE300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Bool v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  Swift::Bool v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];
  UIImage_optional v49;
  UIImage_optional v50;

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011020(a1, (uint64_t)v48);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v10 = type metadata accessor for AppEventSearchResult(0);
  v11 = swift_dynamicCast(&v47, v48, v9, v10, 6);
  if ((_DWORD)v11)
  {
    v12 = v47;
    v46 = AppEventSearchResult.appEvent.getter(v11);
    v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_lockupView);
    v14 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
    v15 = *(id *)(v13 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    v49.value.super.isa = 0;
    v49.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v49, v16);

    v17 = *(void **)(v13 + v14);
    v18 = type metadata accessor for ArtworkView(0);
    v19 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v20 = v17;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v20, 1, v18, v19);

    v21 = *(_QWORD *)(*(_QWORD *)(v3
                                + OBJC_IVAR____TtC22SubscribePageExtension28CondensedAppEventContentView_eventCardView)
                    + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_artworkView);
    v50.value.super.isa = 0;
    v50.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v50, v22);
    v45 = v18;
    v23 = ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v21, 1, v18, v19);
    v24 = AppEventSearchResult.lockup.getter(v23);
    v26 = Lockup.icon.getter(v25);
    swift_release(v24);
    if (v26)
    {
      v44 = v12;
      v27 = qword_1007F14D8;
      v28 = *(id *)(v13 + v14);
      if (v27 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v29 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v30 = sub_1000117A8(v29, (uint64_t)qword_100852280);
      v31 = SmallLockupLayout.Metrics.artworkSize.getter(v30);
      v33 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v28, "contentMode"), 0, v31, v32);
      Artwork.style.getter(v33);
      v34 = ArtworkView.style.setter(v8);
      *(_QWORD *)&v35 = Artwork.contentMode.getter(v34).n128_u64[0];
      v37 = ArtworkLoaderConfig.size.getter(objc_msgSend(v28, "setContentMode:", v36, v35));
      v39 = ArtworkView.imageSize.setter(v37, v38);
      v40 = Artwork.backgroundColor.getter(v39);
      if (!v40)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v40 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v40);
      v41 = *(id *)(v13 + v14);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2, 1, v41, v45, v19);
      swift_release(v26);

      swift_release(v33);
      v12 = v44;
    }
    v42 = v46;
    sub_1001203C8(v46, a2);
    swift_release(v12);
    swift_release(v42);
  }
}

double sub_1003AE628()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  double result;
  void *rawValue;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  double *v20;
  void *v21;
  Swift::OpaquePointer using;

  v0 = type metadata accessor for AppEventSearchResult(0);
  v1 = sub_10001F65C((unint64_t *)&qword_1007F4890, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v2 = ItemLayoutContext.typedModel<A>(as:)(&using, v0, v0, v1);
  rawValue = using._rawValue;
  if (using._rawValue)
  {
    using._rawValue = _swiftEmptyArrayStorage;
    v5 = AppEventSearchResult.lockup.getter(v2);
    v7 = Lockup.icon.getter(v6);
    swift_release(v5);
    if (v7)
    {
      if (qword_1007F14D8 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v10 = sub_1000117A8(v9, (uint64_t)qword_100852280);
      v11 = SmallLockupLayout.Metrics.artworkSize.getter(v10);
      v13 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v11, v12);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v15 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v15 >= v14 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized Array._endMutation()(v16);
      swift_release(v7);
    }
    v17 = AppEventSearchResult.appEvent.getter(v8);
    v18 = sub_1000826AC();
    v20 = sub_100120878(v19);
    swift_release(v17);
    swift_unknownObjectRelease(v18);
    sub_10001988C((uint64_t)v20);
    v21 = using._rawValue;
    ArtworkLoader.prefetchArtwork(using:)(using);
    swift_bridgeObjectRelease(v21);
    *(_QWORD *)&result = swift_release(rawValue).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003AE7F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003AE814()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003AE848()
{
  uint64_t *v0;

  return sub_1003AD62C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003AE858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  UIColor v6;

  if (a1 != 2)
    return 0;
  v1 = sub_10000DF3C(&qword_1007F5840);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100671250;
  v3 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v2 + 32) = objc_msgSend(v3, "clearColor");
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v4 = objc_msgSend(v3, "blackColor");
  v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.06);

  v6.super.isa = UIColor.init(light:dark:)((UIColor)v5, (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.06667, 1.0)).super.isa;
  *(UIColor *)(v2 + 40) = v6;
  specialized Array._endMutation()(v6.super.isa);
  return v2;
}

unint64_t sub_1003AE988@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1003B0D84(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id sub_1003AE9D0()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  objc_super v15;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension26SearchCollectionViewLayout_backgroundCornerRadius] = 0;
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension26SearchCollectionViewLayout_pendingPrepareObserver];
  v2 = (objc_class *)type metadata accessor for SearchCollectionViewLayout();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v15.receiver = v0;
  v15.super_class = v2;
  v3 = objc_msgSendSuper2(&v15, "init");
  v4 = type metadata accessor for SearchResultBackgroundView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4);
  v6 = v3;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "registerClass:forDecorationViewOfKind:", ObjCClassFromMetadata, v7);

  v8 = type metadata accessor for SearchTransparencyView();
  v9 = swift_getObjCClassFromMetadata(v8);
  v10 = v6;
  static UICollectionReusableView.elementKind.getter();
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "registerClass:forDecorationViewOfKind:", v9, v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  return v10;
}

double sub_1003AEBD0()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  char *v8;
  uint64_t ObjectType;
  __n128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  unint64_t v16;
  objc_super v18;

  v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for SearchCollectionViewLayout();
  objc_msgSendSuper2(&v18, "collectionViewContentSize");
  v3 = v2;
  v4 = objc_msgSend(v0, "collectionView");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v0, "collectionView");
    if (v6
      && (v7 = v6, v8 = (char *)objc_msgSend(v6, "delegate"), v7, v8))
    {
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateSearchLayout))
        v11 = v8;
      else
        v11 = 0;
      if (v11)
      {
        v12 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter(v10);
        if (v12)
        {
          v13 = v12;
          v14 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits], "pageContainerSize");
          v15.n128_f64[0] = CGSize.subtracting(insets:)(objc_msgSend(*(id *)&v11[v14], "pageMarginInsets"));
          sub_1000CAA18(v15, 1.79769313e308, v13, v5);
          swift_unknownObjectRelease(v8);
          v16 = swift_release(v13).n128_u64[0];
        }
        else
        {
          v16 = swift_unknownObjectRelease(v8).n128_u64[0];
        }
        objc_msgSend(v1, "minimumLineSpacing", *(double *)&v16);

      }
      else
      {

        swift_unknownObjectRelease(v8);
      }
    }
    else
    {

    }
  }
  return v3;
}

void sub_1003AED84(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  objc_class *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  char *v34;
  uint64_t ObjectType;
  char *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  NSString v53;
  Class isa;
  id v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  Class v75;
  id v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  id v99;
  unint64_t v100;
  objc_super v101;

  v2 = v1;
  v97 = sub_10000DF3C((uint64_t *)&unk_10080BB50);
  __chkstk_darwin(v97);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v91 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v86 - v10;
  v12 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v12);
  v14 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v86 - v16;
  __chkstk_darwin(v18);
  v98 = (uint64_t)&v86 - v19;
  v20 = sub_1003AF6A8(a1);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = (objc_class *)type metadata accessor for SearchCollectionViewLayout();
  v101.receiver = v1;
  v101.super_class = v27;
  v28 = objc_msgSendSuper2(&v101, "layoutAttributesForElementsInRect:", v20, v22, v24, v26);
  if (!v28)
    return;
  v29 = v28;
  v30 = sub_100019574(0, (unint64_t *)&qword_1007F4A20, UICollectionViewLayoutAttributes_ptr);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  v32 = objc_msgSend(v2, "collectionView");
  if (!v32)
    return;
  v33 = v32;
  v34 = (char *)objc_msgSend(v32, "delegate");

  if (!v34)
    return;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateSearchLayout))
    v36 = v34;
  else
    v36 = 0;
  if (!v36)
  {
    swift_unknownObjectRelease(v34);
    return;
  }
  v87 = v34;
  v89 = v8;
  v90 = v14;
  v37 = objc_msgSend(*(id *)&v36[OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits], "traitCollection");
  v38 = objc_msgSend(v37, "horizontalSizeClass");

  if (v38 == (id)1)
    v39 = 1;
  else
    v39 = 2;
  v40 = dispatch thunk of SearchResultsPresenter.transparencyLinkIndex(columnCount:)(v39);
  if ((v42 & 1) != 0)
  {
    v44 = v91;
    v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56);
    v46 = v98;
    v47 = 1;
  }
  else
  {
    v43 = v98;
    IndexPath.init(item:section:)(v40, 0, v41);
    v44 = v91;
    v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56);
    v46 = v43;
    v47 = 0;
  }
  v96 = v45;
  v45((char *)v46, v47, 1, v6);
  v100 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v85 = v31;
    else
      v85 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v48 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v31);
    if (v48)
      goto LABEL_18;
LABEL_46:
    swift_bridgeObjectRelease(v31);
    swift_unknownObjectRelease(v87);
LABEL_47:
    sub_100011088(v98, &qword_1007F5520);
    return;
  }
  v48 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v48)
    goto LABEL_46;
LABEL_18:
  v99 = v2;
  if (v48 >= 1)
  {
    v49 = 0;
    v92 = 0x8000000100648070;
    v93 = v31 & 0xC000000000000001;
    v94 = v48;
    v95 = v31;
    v88 = v11;
    while (1)
    {
      if (v93)
        v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v31);
      else
        v50 = *(id *)(v31 + 8 * v49 + 32);
      v51 = v50;
      v52 = objc_msgSend(v50, "indexPath");
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v52);

      v53 = String._bridgeToObjectiveC()();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v55 = objc_msgSend(v99, "layoutAttributesForDecorationViewOfKind:atIndexPath:", v53, isa);

      if (v55)
      {
        v56 = v55;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
        v58 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v57 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v58 >= v57 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
        v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
        specialized Array._endMutation()(v59);

      }
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v17, v11, v6);
      v96(v17, 0, 1, v6);
      v60 = (uint64_t)&v5[*(int *)(v97 + 48)];
      sub_100049EBC((uint64_t)v17, (uint64_t)v5);
      sub_100049EBC(v98, v60);
      v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
      if (v61(v5, 1, v6) == 1)
        break;
      v62 = (uint64_t)v90;
      sub_100049EBC((uint64_t)v5, (uint64_t)v90);
      if (v61((char *)v60, 1, v6) == 1)
      {
        sub_100011088((uint64_t)v17, &qword_1007F5520);
        v63 = v62;
        v44 = v91;
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v63, v6);
LABEL_32:
        sub_100011088((uint64_t)v5, (uint64_t *)&unk_10080BB50);
        goto LABEL_38;
      }
      v64 = v5;
      v65 = (uint64_t)v17;
      v66 = v91;
      v67 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v89, v60, v6);
      v68 = sub_1000CFD1C();
      v69 = dispatch thunk of static Equatable.== infix(_:_:)(v62, v67, v6, v68);
      v70 = *(void (**)(char *, uint64_t))(v66 + 8);
      v70(v67, v6);
      sub_100011088(v65, &qword_1007F5520);
      v71 = v62;
      v44 = v66;
      v17 = (char *)v65;
      v5 = v64;
      v11 = v88;
      v70((char *)v71, v6);
      sub_100011088((uint64_t)v5, &qword_1007F5520);
      if ((v69 & 1) != 0)
        goto LABEL_34;
LABEL_38:
      v81 = sub_1003AF844(v51);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
      v83 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v82 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v83 >= v82 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
      ++v49;
      v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
      specialized Array._endMutation()(v84);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v6);
      v31 = v95;
      if (v94 == v49)
      {
        swift_bridgeObjectRelease(v95);
        swift_unknownObjectRelease(v87);
        goto LABEL_47;
      }
    }
    sub_100011088((uint64_t)v17, &qword_1007F5520);
    if (v61((char *)v60, 1, v6) == 1)
    {
      sub_100011088((uint64_t)v5, &qword_1007F5520);
LABEL_34:
      type metadata accessor for SearchTransparencyView();
      static UICollectionReusableView.elementKind.getter();
      v73 = v72;
      v74 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v73);
      v75 = IndexPath._bridgeToObjectiveC()().super.isa;
      v76 = objc_msgSend(v99, "layoutAttributesForDecorationViewOfKind:atIndexPath:", v74, v75);

      if (v76)
      {
        v77 = v76;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
        v79 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v78 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v79 >= v78 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
        v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v77);
        specialized Array._endMutation()(v80);

      }
      goto LABEL_38;
    }
    goto LABEL_32;
  }
  __break(1u);
}

double sub_1003AF6A8(double a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t ObjectType;
  __n128 v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  v3 = objc_msgSend(v1, "collectionView");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "collectionView");
    if (v5
      && (v6 = v5, v7 = (char *)objc_msgSend(v5, "delegate"), v6, v7))
    {
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateSearchLayout))
        v10 = v7;
      else
        v10 = 0;
      if (v10)
      {
        v11 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter(v9);
        if (v11)
        {
          v12 = v11;
          v13 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits], "pageContainerSize");
          v14.n128_f64[0] = CGSize.subtracting(insets:)(objc_msgSend(*(id *)&v10[v13], "pageMarginInsets"));
          sub_1000CAA18(v14, 1.79769313e308, v12, v4);
          swift_unknownObjectRelease(v7);

          swift_release(v12);
        }
        else
        {
          swift_unknownObjectRelease(v7);

        }
      }
      else
      {

        swift_unknownObjectRelease(v7);
      }
    }
    else
    {

    }
  }
  return a1;
}

id sub_1003AF844(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  __n128 v17;
  void *v18;
  char *v19;
  uint64_t ObjectType;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char v28;
  __n128 v29;
  char *v30;
  id v31;
  __n128 v32;
  void *v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  unint64_t v42;
  char *v44;
  id v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;

  v2 = v1;
  v52 = a1;
  v3 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v49 - v12;
  v14 = objc_msgSend(v1, "collectionView", v11);
  if (!v14)
    return v52;
  v15 = v14;
  v16 = objc_msgSend(v1, "collectionView");
  if (!v16)
    goto LABEL_23;
  v18 = v16;
  v19 = (char *)objc_msgSend(v16, "delegate");

  if (!v19)
    goto LABEL_23;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateSearchLayout))
    v21 = v19;
  else
    v21 = 0;
  if (!v21)
  {
    v17 = swift_unknownObjectRelease(v19);
LABEL_23:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v17);
LABEL_24:

    sub_100011088((uint64_t)v5, &qword_1007F5520);
    return v52;
  }
  v50 = v9;
  v51 = v13;
  v22 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits], "traitCollection");
  v23 = objc_msgSend(v22, "horizontalSizeClass");

  v24 = 1;
  if (v23 == (id)1)
    v25 = 1;
  else
    v25 = 2;
  v26 = dispatch thunk of SearchResultsPresenter.transparencyLinkIndex(columnCount:)(v25);
  if ((v28 & 1) == 0)
  {
    IndexPath.init(item:section:)(v26, 0, v27);
    v24 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v24, 1, v6);
  v29 = swift_unknownObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v29) == 1)
    goto LABEL_24;
  v30 = v51;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v51, v5, v6);
  v31 = objc_msgSend(v2, "collectionView");
  if (!v31)
    goto LABEL_27;
  v33 = v31;
  v34 = (char *)objc_msgSend(v31, "delegate");

  if (!v34)
    goto LABEL_27;
  v35 = swift_getObjectType();
  if (swift_conformsToProtocol2(v35, &protocol descriptor for UICollectionViewDelegateSearchLayout))
    v37 = v34;
  else
    v37 = 0;
  if (!v37)
  {
    v32 = swift_unknownObjectRelease(v34);
LABEL_27:
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v30, v6, v32);
LABEL_28:

    return v52;
  }
  v38 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter(v36);
  if (v38)
  {
    v39 = v38;
    v40 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
    objc_msgSend(*(id *)&v37[OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits], "pageContainerSize");
    v41.n128_f64[0] = CGSize.subtracting(insets:)(objc_msgSend(*(id *)&v37[v40], "pageMarginInsets"));
    sub_1000CAA18(v41, 1.79769313e308, v39, v15);
    swift_unknownObjectRelease(v34);
    v42 = swift_release(v39).n128_u64[0];
  }
  else
  {
    v42 = swift_unknownObjectRelease(v34).n128_u64[0];
  }
  v44 = v50;
  v45 = objc_msgSend(v52, "indexPath", *(double *)&v42);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v45);

  LOBYTE(v45) = static IndexPath.> infix(_:_:)(v44, v30);
  v46 = *(void (**)(char *, uint64_t))(v7 + 8);
  v46(v44, v6);
  if ((v45 & 1) == 0)
  {
    v46(v30, v6);
    goto LABEL_28;
  }
  v47 = sub_100019574(0, (unint64_t *)&qword_1007F4A20, UICollectionViewLayoutAttributes_ptr);
  v48 = (void *)NSCopying.makeCopy()(v47);
  objc_msgSend(v2, "minimumLineSpacing");
  objc_msgSend(v48, "frame");
  objc_msgSend(v48, "setFrame:");

  v46(v30, v6);
  return v48;
}

uint64_t sub_1003AFCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  Class isa;
  objc_class *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  char *v28;
  uint64_t ObjectType;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  Class v35;
  char *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  double v47;
  char *v48;
  uint64_t result;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char v56;
  double Width;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  unint64_t v66;
  id v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  void *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  int v102;
  uint64_t v103;
  int v104;
  char *v105;
  void *v106;
  int v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  char v114;
  void (*v115)(char *, uint64_t);
  char *v116;
  double v117;
  double v118;
  char *v119;
  char *v120;
  double MaxY;
  __n128 v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  __n128 v126;
  double v127;
  double v128;
  double v129;
  id v130;
  char *v131;
  char *v132;
  id v133;
  uint64_t v134;
  void *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  objc_super v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;

  v4 = v3;
  v142 = a2;
  v143 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v140 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v137 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_10080BB50);
  __chkstk_darwin(v8);
  v10 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v11);
  v138 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v139 = (uint64_t)&v130 - v14;
  __chkstk_darwin(v15);
  v141 = (uint64_t)&v130 - v16;
  v17 = type metadata accessor for FloatingPointRoundingRule(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v22 = (objc_class *)type metadata accessor for SearchCollectionViewLayout();
  v145.receiver = v4;
  v145.super_class = v22;
  v23 = objc_msgSendSuper2(&v145, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v23)
    return 0;
  v136 = v10;
  v24 = objc_msgSend(v4, "collectionView");
  if (!v24)
    goto LABEL_14;
  v25 = v24;
  v26 = objc_msgSend(v4, "collectionView");
  if (!v26
    || (v27 = v26,
        v134 = v6,
        v28 = (char *)objc_msgSend(v26, "delegate"),
        v27,
        !v28))
  {

LABEL_14:
    return 0;
  }
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateSearchLayout))
    v30 = v28;
  else
    v30 = 0;
  if (!v30)
  {

    swift_unknownObjectRelease(v28);
    return 0;
  }
  v131 = v30;
  v132 = v28;
  v133 = v23;
  v31 = type metadata accessor for SearchCollectionLayoutAttributes();
  v32 = v142;
  swift_bridgeObjectRetain(v142);
  v33 = String._bridgeToObjectiveC()();
  v135 = v25;
  v34 = v33;
  swift_bridgeObjectRelease(v32);
  v35 = IndexPath._bridgeToObjectiveC()().super.isa;
  v36 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(v31), "layoutAttributesForDecorationViewOfKind:withIndexPath:", v34, v35);

  v37 = v135;
  v38 = objc_msgSend(v37, "traitCollection");
  v130 = objc_msgSend(v38, "horizontalSizeClass");

  v39 = objc_msgSend(v37, "traitCollection");
  v40 = objc_msgSend(v39, "userInterfaceIdiom");

  if (v40)
  {
    if (qword_1007F2A00 != -1)
      swift_once(&qword_1007F2A00, sub_10042D0F4);
    v41 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v41, (uint64_t)qword_100856150);
    v42 = objc_msgSend(v37, "traitCollection");
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v43 = sub_10000DF3C(&qword_1007F5840);
    v44 = swift_allocObject(v43, 40, 7);
    *(_OWORD *)(v44 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v44 + 32) = v42;
    v45 = v42;
    v46 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v44);
    v47 = dispatch thunk of AnyDimension.rawValue(in:)(v46, v41, &protocol witness table for StaticDimension);

  }
  else
  {
    if (qword_1007F1EC8 != -1)
      swift_once(&qword_1007F1EC8, sub_1003B0C24);
    v50 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v50, (uint64_t)qword_100854390);
    v51 = objc_msgSend(v37, "traitCollection");
    static Dimensions.defaultRoundingRule.getter(v51);
    v47 = StaticDimension.value(compatibleWith:rounded:)(v51, v20);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  v52 = v133;
  v53 = v142;
  v54 = v141;
  if (v143 != 0xD000000000000022 || v142 != 0x8000000100648070)
  {
    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022, 0x8000000100648070, v143, v142, 0);
    v55 = v135;
    if ((v56 & 1) != 0 && v130 == (id)1)
    {
LABEL_27:
      v48 = (char *)sub_1000C5F28();
      if (v48)
      {
        objc_msgSend(v52, "frame");
        Width = CGRectGetWidth(v146);
        objc_msgSend(v52, "frame");
        v59 = Width + v58 + v58;
        objc_msgSend(v52, "frame");
        v60 = v47 + v47 + CGRectGetHeight(v147);
        objc_msgSend(v52, "frame");
        v62 = v61;
        v64 = v63;
        objc_msgSend(v52, "frame");
        objc_msgSend(v36, "setFrame:", v62 - v65, v64 - v47, v59, v60);
        *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_cornerRadius] = 0;
        v66 = (unint64_t)(v48 - 1);
        if (v48 != (char *)1)
        {
          v67 = 0;
          if (v48 == (char *)2)
            goto LABEL_47;
          goto LABEL_39;
        }
LABEL_46:
        v67 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
        goto LABEL_47;
      }
LABEL_38:
      swift_unknownObjectRelease(v132);

LABEL_54:
      return (uint64_t)v48;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022, 0x8000000100648070, v143, v53, 0) & 1) != 0)
      goto LABEL_32;
    type metadata accessor for SearchTransparencyView();
    v74 = static UICollectionReusableView.elementKind.getter();
    v76 = v75;
    if (v74 == v143 && v75 == v53)
    {
      v77 = swift_bridgeObjectRelease(v53);
    }
    else
    {
      v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, v143, v53, 0);
      v77 = swift_bridgeObjectRelease(v76);
      if ((v85 & 1) == 0)
      {
        swift_unknownObjectRelease(v132);

        goto LABEL_69;
      }
    }
    v86 = v140;
    v87 = v134;
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v140 + 16))(v54, a3, v134, v77);
    v88 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v86 + 56);
    v89 = 1;
    v88(v54, 0, 1, v87);
    v143 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_presenter;
    v90 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
    v91 = objc_msgSend(*(id *)&v131[OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits], "traitCollection");
    v92 = objc_msgSend(v91, "horizontalSizeClass");

    if (v92 == (id)1)
      v93 = 1;
    else
      v93 = 2;
    v94 = dispatch thunk of SearchResultsPresenter.transparencyLinkIndex(columnCount:)(v93);
    v96 = v139;
    if ((v97 & 1) == 0)
    {
      IndexPath.init(item:section:)(v94, 0, v95);
      v89 = 0;
    }
    v98 = v134;
    v88(v96, v89, 1, v134);
    v99 = (uint64_t)v136;
    v100 = (uint64_t)&v136[*(int *)(v8 + 48)];
    sub_100049EBC(v54, (uint64_t)v136);
    sub_100049EBC(v96, v100);
    v101 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v140 + 48);
    v102 = v101(v99, 1, v98);
    v103 = v138;
    if (v102 == 1)
    {
      sub_100011088(v96, &qword_1007F5520);
      sub_100011088(v54, &qword_1007F5520);
      v104 = v101(v100, 1, v98);
      v105 = v132;
      v106 = v133;
      v55 = v135;
      if (v104 == 1)
      {
        sub_100011088(v99, &qword_1007F5520);
LABEL_71:
        v116 = v131;
        objc_msgSend(*(id *)&v131[v90], "pageMarginInsets");
        v118 = v117;
        v119 = v36;
        v120 = v116;
        v48 = v119;
        objc_msgSend(v106, "frame");
        MaxY = CGRectGetMaxY(v150);
        objc_msgSend(v4, "minimumLineSpacing");
        v123 = v122.n128_f64[0];
        v124 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter(v122);
        if (v124)
        {
          v125 = v124;
          objc_msgSend(*(id *)&v120[v90], "pageContainerSize");
          v126.n128_f64[0] = CGSize.subtracting(insets:)(objc_msgSend(*(id *)&v120[v90], "pageMarginInsets"));
          v127 = sub_1000CAA18(v126, 1.79769313e308, v125, v55);
          v129 = v128;
          swift_release(v125);
        }
        else
        {
          v127 = 0.0;
          v129 = 0.0;
        }
        objc_msgSend(v48, "setFrame:", v118, MaxY + v123, v127, v129);

        swift_unknownObjectRelease(v132);
        return (uint64_t)v48;
      }
    }
    else
    {
      v142 = v90;
      sub_100049EBC(v99, v138);
      v107 = v101(v100, 1, v98);
      v108 = v133;
      v109 = v135;
      if (v107 != 1)
      {
        v110 = v140;
        v111 = v103;
        v112 = v137;
        (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v137, v100, v98);
        v113 = sub_1000CFD1C();
        v114 = dispatch thunk of static Equatable.== infix(_:_:)(v111, v112, v98, v113);
        v115 = *(void (**)(_QWORD, _QWORD))(v110 + 8);
        v115(v112, v98);
        sub_100011088(v139, &qword_1007F5520);
        sub_100011088(v141, &qword_1007F5520);
        v115(v111, v98);
        sub_100011088(v99, &qword_1007F5520);
        v105 = v132;
        v55 = v109;
        v106 = v108;
        v90 = v142;
        if ((v114 & 1) != 0)
          goto LABEL_71;
        goto LABEL_67;
      }
      sub_100011088(v139, &qword_1007F5520);
      sub_100011088(v54, &qword_1007F5520);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v103, v98);
      v105 = v132;
      v55 = v109;
      v106 = v108;
    }
    sub_100011088(v99, (uint64_t *)&unk_10080BB50);
LABEL_67:
    swift_unknownObjectRelease(v105);

LABEL_69:
    return 0;
  }
  v55 = v135;
  if (v130 == (id)1)
    goto LABEL_27;
LABEL_32:
  v48 = (char *)sub_1000C5F28();
  if (!v48)
    goto LABEL_38;
  objc_msgSend(v52, "frame");
  v68 = CGRectGetWidth(v148);
  if (qword_1007F1EC0 != -1)
    swift_once(&qword_1007F1EC0, sub_1003B0C14);
  v69 = *(double *)&qword_10080BB10;
  objc_msgSend(v52, "frame");
  v70 = v47 + v47 + CGRectGetHeight(v149);
  objc_msgSend(v52, "frame");
  objc_msgSend(v36, "setFrame:", v71 - v69, v72 - v47, v68 + v69 + v69, v70);
  *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_cornerRadius] = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension26SearchCollectionViewLayout_backgroundCornerRadius];
  v66 = (unint64_t)(v48 - 1);
  if (v48 == (char *)1)
    goto LABEL_46;
  if (v48 == (char *)2)
  {
    v67 = 0;
    goto LABEL_47;
  }
LABEL_39:
  if (v48 != (char *)3)
    goto LABEL_75;
  if (qword_1007F18A0 != -1)
    swift_once(&qword_1007F18A0, sub_100258A64);
  v67 = (id)qword_100852EC0;
  v73 = (id)qword_100852EC0;
LABEL_47:
  v78 = *(void **)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_backgroundColor];
  *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_backgroundColor] = v67;

  v79 = sub_1003AE858((uint64_t)v48);
  v80 = *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_backgroundGradientColors];
  *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_backgroundGradientColors] = v79;
  swift_bridgeObjectRelease(v80);
  if (v66 < 2)
  {
    v81 = 0;
    v82 = v132;
LABEL_53:
    v84 = *(void **)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_borderColor];
    *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension32SearchCollectionLayoutAttributes_borderColor] = v81;

    v48 = v36;
    objc_msgSend(v48, "setZIndex:", -1);

    swift_unknownObjectRelease(v82);
    goto LABEL_54;
  }
  v82 = v132;
  if (v48 == (char *)3)
  {
    if (qword_1007F18A8 != -1)
      swift_once(&qword_1007F18A8, sub_100258B04);
    v81 = qword_100852EC8;
    v83 = (id)qword_100852EC8;
    goto LABEL_53;
  }
LABEL_75:
  v144 = v48;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for SearchBackgroundStyle, &v144, &type metadata for SearchBackgroundStyle, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_1003B0A0C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  objc_class *v12;
  uint64_t *v13;
  void (*v14)(char *, __n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  char v20[24];
  objc_super v21;

  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "delegate");

    if (v3)
    {
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateSearchLayout))
        v5 = v3;
      else
        v5 = 0;
      if (v5)
      {
        v6 = type metadata accessor for SearchResultsCollectionViewDelegate(0);
        v7 = swift_dynamicCastClass(v5, v6);
        if (v7)
        {
          v8 = v7;
          v9 = sub_10036DBE0((uint64_t)_swiftEmptyArrayStorage);
          v10 = (unint64_t *)(v8
                                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_maxSizeForRowCache);
          swift_beginAccess(v8 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_maxSizeForRowCache, v20, 1, 0);
          v11 = *v10;
          *v10 = v9;
          swift_bridgeObjectRelease(v11);
          *(_BYTE *)(v8
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_isFirstItemFullWidth) = 2;
        }
      }
      swift_unknownObjectRelease(v3);
    }
  }
  v12 = (objc_class *)type metadata accessor for SearchCollectionViewLayout();
  v21.receiver = v0;
  v21.super_class = v12;
  objc_msgSendSuper2(&v21, "prepareLayout");
  v13 = (uint64_t *)&v0[OBJC_IVAR____TtC22SubscribePageExtension26SearchCollectionViewLayout_pendingPrepareObserver];
  v14 = *(void (**)(char *, __n128))&v0[OBJC_IVAR____TtC22SubscribePageExtension26SearchCollectionViewLayout_pendingPrepareObserver];
  if (v14)
  {
    v15 = v13[1];
    v16 = swift_retain(v15);
    v14(v0, v16);
    sub_100019310((uint64_t)v14, v15);
    v17 = *v13;
  }
  else
  {
    v17 = 0;
  }
  v18 = v13[1];
  *v13 = 0;
  v13[1] = 0;
  return sub_100019310(v17, v18);
}

id sub_1003B0BB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchCollectionViewLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchCollectionViewLayout()
{
  return objc_opt_self(_TtC22SubscribePageExtension26SearchCollectionViewLayout);
}

void sub_1003B0C14()
{
  qword_10080BB10 = 0x4028000000000000;
}

uint64_t sub_1003B0C24(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  UIFontTextStyle *v4;
  uint64_t v5;
  _QWORD *v6;
  NSString *v7;
  _QWORD v10[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (UIFontTextStyle *)((char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100854390);
  sub_1000117A8(v5, (uint64_t)qword_100854390);
  *v4 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.textStyle(_:), v1);
  v10[3] = v1;
  v10[4] = &protocol witness table for FontSource;
  v6 = sub_1000117C0(v10);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v2 + 16))(v6, v4, v1);
  v7 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v10, 24.0);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v2 + 8))(v4, v1);
}

ValueMetadata *type metadata accessor for SearchBackgroundStyle()
{
  return &type metadata for SearchBackgroundStyle;
}

unint64_t sub_1003B0D40()
{
  unint64_t result;

  result = qword_10080BB60;
  if (!qword_10080BB60)
  {
    result = swift_getWitnessTable(&unk_100689200, &type metadata for SearchBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_10080BB60);
  }
  return result;
}

unint64_t sub_1003B0D84(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

id sub_1003B0D94(void *a1)
{
  return objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_1003B0DA8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "presentingViewController");

    if (v4)
    {
      objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

id sub_1003B0F68()
{
  return sub_10014741C((uint64_t (*)(_QWORD))type metadata accessor for AccountPageViewControllerDelegate);
}

uint64_t type metadata accessor for AccountPageViewControllerDelegate()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454633AccountPageViewControllerDelegate);
}

void sub_1003B1000(void *a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  uint64_t v9;

  if (a1)
  {
    v3 = objc_msgSend(a1, "presentingViewController");
    if (v3)
    {
      v4 = v3;
      v5 = swift_allocObject(&unk_10073C508, 24, 7);
      swift_unknownObjectWeakInit(v5 + 16);
      v6 = swift_allocObject(&unk_10073C530, 32, 7);
      *(_BYTE *)(v6 + 16) = a2 & 1;
      *(_QWORD *)(v6 + 24) = v5;
      v8[4] = sub_1003B187C;
      v9 = v6;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      v8[2] = sub_1000BD6CC;
      v8[3] = &unk_10073C548;
      v7 = _Block_copy(v8);
      objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v7, swift_release(v9).n128_f64[0]);
      _Block_release(v7);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003B1104(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t Strong;
  char *v24;
  __n128 v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];
  char v57[24];
  char v58[32];

  v4 = sub_10000DF3C(&qword_1007F7900);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F78F0);
  v53 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AlertActionStyle(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v22 = a2 + 16;
    swift_beginAccess(v22, v58, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v22);
    if (Strong)
    {
      v24 = (char *)Strong;
      type metadata accessor for Artwork(0);
      v25.n128_u64[0] = 0x4056800000000000;
      v26 = sub_1005169EC(0x6E65537473616F54, 0xE900000000000074, v25, 90.0);
      v27._object = (void *)0x80000001006481C0;
      v27._countAndFlagsBits = 0xD000000000000012;
      v28._countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      v29 = localizedString(_:comment:)(v27, v28);
      object = v29._object;
      countAndFlagsBits = v29._countAndFlagsBits;
      v30._countAndFlagsBits = 0xD000000000000018;
      v30._object = (void *)0x80000001006481E0;
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      v32 = localizedString(_:comment:)(v30, v31);
      v48 = v32._object;
      v49 = v32._countAndFlagsBits;
      (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for AlertActionStyle.toast(_:), v18);
      swift_retain(v26);
      static ActionMetrics.notInstrumented.getter(v33);
      v34 = type metadata accessor for AlertAction(0);
      swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
      v52 = v26;
      v35 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)(countAndFlagsBits, object, v49, v48, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 1, v21, v26, 0, 1, 0, v17);
      v36 = OBJC_IVAR____TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454621ComposeReviewDelegate_objectGraph;
      v37 = *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454621ComposeReviewDelegate_objectGraph];
      v38 = v37 + qword_100854048;
      swift_beginAccess(v37 + qword_100854048, v57, 0, 0);
      sub_1000194E4(v38, (uint64_t)v9, (uint64_t *)&unk_1007F5140);
      v39 = v53;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v9, 1, v10) == 1)
      {
        swift_retain(v37);
        sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007F5140);
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v10);
        __break(1u);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v12, v9, v10);
        v56[3] = v34;
        v56[4] = sub_10000E99C(&qword_1007F7A38, (uint64_t (*)(uint64_t))&type metadata accessor for AlertAction, (uint64_t)&protocol conformance descriptor for Action);
        v56[0] = v35;
        v40 = v54;
        v41 = v39;
        v42 = v55;
        (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v6, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v55);
        v43 = *(_QWORD *)&v24[v36];
        v44 = swift_retain(v35);
        v45 = ActionDispatcher.perform(_:withMetrics:asPartOf:)(v56, v6, v43, v10, v44);
        v46 = swift_release(v45);
        (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v6, v42, v46);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v56);
        v47 = *(void **)&v24[OBJC_IVAR____TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454621ComposeReviewDelegate_selfReference];
        *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454621ComposeReviewDelegate_selfReference] = 0;
        swift_release(v52);
        swift_release(v35);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v10);
      }
    }
  }
}

id sub_1003B15B8()
{
  return sub_10014741C((uint64_t (*)(_QWORD))_s22SubscribePageExtension21ComposeReviewDelegateCMa_0);
}

uint64_t _s22SubscribePageExtension21ComposeReviewDelegateCMa_0()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454621ComposeReviewDelegate);
}

char *sub_1003B1660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for MetricsPipeline(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for PageFacetsPresenter(0, v8);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = PageFacetsPresenter.init()();
  v13 = swift_retain(v12);
  static PageFacetsFieldsProvider.metricsPipelineWithPageFacetsProvider(using:currentPipeline:)(v13);
  swift_release(v12);
  v14 = sub_10000DF3C(&qword_100812340);
  v15 = *(_QWORD *)(type metadata accessor for Dependency(0) - 8);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ 2 * *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10066F870;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  Dependency.init<A>(satisfying:with:)(v3, v6, v3);
  v17 = type metadata accessor for GuidedSearchPresenter(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v23 = GuidedSearchPresenter.init()();
  Dependency.init<A>(satisfying:with:)(v17, &v23, v17);
  v18 = sub_1005989D0(a2, 0, 0, v16, 0x686372616573, 0xE600000000000000);
  swift_bridgeObjectRelease(v16);
  v19 = objc_allocWithZone((Class)type metadata accessor for SearchViewController(0));
  v20 = sub_100495B64(v12, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  return v20;
}

uint64_t sub_1003B1858()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B187C()
{
  uint64_t v0;

  sub_1003B1104(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003B1888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003B1898(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003B18A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B18C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454633AccountPageViewControllerDelegate_selfReference);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC22SubscribePageExtensionP33_17E5165BDAD277E02C837297BEA7454633AccountPageViewControllerDelegate_selfReference) = 0;

}

void sub_1003B18DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  __n128 v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  Swift::String v149;
  void *object;
  Swift::String v151;
  Swift::String v152;
  __n128 v153;
  Swift::String v154;
  __n128 v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  __int128 v243;
  uint64_t v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  void *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  Swift::String v276;
  __int128 v277;
  uint64_t v278;
  char v279[8];

  v229 = a3;
  v207 = a2;
  v6 = sub_10000DF3C(&qword_10080BCA0);
  __chkstk_darwin(v6);
  v215 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_10080BCA8);
  v9 = __chkstk_darwin(v8);
  v211 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for DashboardLaunchContext(0, v9);
  v204 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v206 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for IndexPath(0);
  v210 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v209 = (char *)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = type metadata accessor for Shelf.ContentType(0);
  v226 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v228 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_10080BCB0);
  __chkstk_darwin(v14);
  v202 = (char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v214 = (char *)&v161 - v17;
  v213 = type metadata accessor for ShareSheetAction.ShareSheetStyle(0);
  v201 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v217 = (char *)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v265 = (char *)&v161 - v20;
  v22 = __chkstk_darwin(v21);
  v208 = (char *)&v161 - v23;
  v171 = type metadata accessor for URLComponents(0, v22);
  v172 = *(_QWORD *)(v171 - 8);
  v24 = __chkstk_darwin(v171);
  v164 = (char *)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for RateAction.Parameter(0, v24);
  v168 = *(_QWORD *)(v169 - 8);
  v26 = __chkstk_darwin(v169);
  v167 = (char *)&v161 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for URLQueryItem(0, v26);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v165 = (char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v216 = (char *)&v161 - v30;
  v31 = sub_10000DF3C((uint64_t *)&unk_100818A60);
  __chkstk_darwin(v31);
  v179 = (char *)&v161 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = type metadata accessor for LegacyAppState(0);
  v197 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v199 = (char *)&v161 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for AdamId(0);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v35 = (char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for Bag(0);
  __chkstk_darwin(v162);
  v163 = (char *)&v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for Dependency(0);
  v244 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v177 = (char *)&v161 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for ArcadeWelcomePage.ContentType(0);
  v225 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v192 = (char *)&v161 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v39);
  v224 = (char *)&v161 - v41;
  v196 = type metadata accessor for ArcadePageUrls(0, v40);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v189 = (char *)&v161 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v194 = (char *)&v161 - v44;
  v45 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v45);
  v188 = (char *)&v161 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v193 = (char *)&v161 - v48;
  __chkstk_darwin(v49);
  v181 = (char *)&v161 - v50;
  __chkstk_darwin(v51);
  v170 = (char *)&v161 - v52;
  __chkstk_darwin(v53);
  v187 = (char *)&v161 - v54;
  __chkstk_darwin(v55);
  v203 = (char *)&v161 - v56;
  __chkstk_darwin(v57);
  v248 = (char *)&v161 - v58;
  v60 = __chkstk_darwin(v59);
  v249 = (char *)&v161 - v61;
  v191 = type metadata accessor for FlowOrigin(0, v60);
  v186 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v185 = (char *)&v161 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __chkstk_darwin(v63);
  v190 = (char *)&v161 - v65;
  v253 = type metadata accessor for ASKBagContract.AdPlacementBagValue(0, v64);
  v230 = *(_QWORD *)(v253 - 8);
  __chkstk_darwin(v253);
  v239 = (char *)&v161 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v242 = (char *)&v161 - v68;
  __chkstk_darwin(v69);
  v241 = (char *)&v161 - v70;
  __chkstk_darwin(v71);
  v240 = (char *)&v161 - v72;
  __chkstk_darwin(v73);
  v245 = (char *)&v161 - v74;
  __chkstk_darwin(v75);
  v247 = (char *)&v161 - v76;
  v237 = type metadata accessor for ProductDiffablePagePresenter.PageWidth(0);
  v236 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v180 = (char *)&v161 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v78);
  v235 = (char *)&v161 - v79;
  v252 = type metadata accessor for URL(0);
  v254 = *(_QWORD *)(v252 - 8);
  __chkstk_darwin(v252);
  v232 = (char *)&v161 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v81);
  v266 = (char *)&v161 - v82;
  __chkstk_darwin(v83);
  v223 = (char *)&v161 - v84;
  __chkstk_darwin(v85);
  v238 = (char *)&v161 - v86;
  __chkstk_darwin(v87);
  v166 = (char *)&v161 - v88;
  __chkstk_darwin(v89);
  v246 = (char *)&v161 - v90;
  __chkstk_darwin(v91);
  v250 = (char *)&v161 - v92;
  v94 = __chkstk_darwin(v93);
  v234 = (char *)&v161 - v95;
  v96 = type metadata accessor for LogMessage.StringInterpolation(0, v94);
  v97 = __chkstk_darwin(v96);
  v99 = (char *)&v161 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for OSLogger(0, v97);
  v262 = *(_QWORD *)(v263 - 8);
  __chkstk_darwin(v263);
  v261 = (char *)&v161 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_10000DF3C(&qword_1008141F0);
  __chkstk_darwin(v101);
  v103 = (char *)&v161 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = type metadata accessor for MetricsPipeline(0);
  v275 = *(_QWORD *)(v272 - 8);
  __chkstk_darwin(v272);
  v183 = (char *)&v161 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v105);
  v184 = (char *)&v161 - v106;
  __chkstk_darwin(v107);
  v274 = (char *)&v161 - v108;
  v109 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v109);
  v218 = (char *)&v161 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v111);
  v113 = (char *)&v161 - v112;
  v114 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v114);
  v116 = (char *)&v161 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for FlowDestination(0);
  v118 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v264 = (uint64_t)&v161 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v120);
  v122 = (char *)&v161 - v121;
  v123 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(&v278, v123);
  sub_10011BB90(a1, (uint64_t)&v278, (uint64_t)v116);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117) == 1)
  {
    swift_storeEnumTagMultiPayload(v122, v117, 50);
    v124 = sub_100011088((uint64_t)v116, &qword_1007F7950);
  }
  else
  {
    v124 = sub_10002EF34((uint64_t)v116, (uint64_t)v122);
  }
  v125 = (void *)FlowAction.referrerUrl.getter(v124);
  v260 = v126;
  FlowAction.referrerData.getter();
  v127 = sub_100019574(0, (unint64_t *)&qword_100800130, ACAccountStore_ptr);
  v128 = type metadata accessor for ObjectGraph(0);
  v176 = v127;
  v269 = v128;
  inject<A, B>(_:from:)(&v278, v127, a4, v127, v128);
  v129 = *(_QWORD *)(a4 + qword_100854060);
  if (v129)
  {
    v219 = v35;
    v251 = v125;
    v255 = v278;
    v233 = a4 + qword_100854060;
    v231 = *(_QWORD *)(a4 + qword_100854060 + 8);
    v130 = type metadata accessor for ArcadeSubscriptionManager(0);
    v125 = *(void **)(a4 + qword_100854068);
    if (v125)
    {
      v161 = type metadata accessor for ASKBagContract(0);
      v131 = a4;
      v222 = qword_100854070;
      v132 = *(_QWORD *)(a4 + qword_100854070);
      if (v132)
      {
        v133 = type metadata accessor for GameCenterFriendRequestCoordinator(0);
        swift_unknownObjectRetain(v129);
        v257 = v125;
        v267 = v132;
        swift_retain(v132);
        v134 = v269;
        inject<A, B>(_:from:)(&v278, v133, v131, v133, v269);
        v258 = v278;
        v135 = v131 + qword_100854078;
        swift_beginAccess(v131 + qword_100854078, v279, 0, 0);
        sub_1000194E4(v135, (uint64_t)v103, &qword_1008141F0);
        v136 = v275;
        v137 = v272;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48))(v103, 1, v272) == 1)
        {
          sub_100011088((uint64_t)v103, &qword_1008141F0);
          v139 = v137;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v274, v103, v137);
          v182 = type metadata accessor for PersonalizationDataProvider(0);
          BaseObjectGraph.optional<A>(_:)(&v278, v182, v182);
          v259 = v278;
          v138 = sub_10000DF3C((uint64_t *)&unk_10080BCC0);
          inject<A, B>(_:from:)(&v278, v138, v131, v138, v134);
          v139 = sub_100019574(0, (unint64_t *)&qword_100818AE0, ASKRestrictions_ptr);
          v140 = *(void **)(v131 + qword_100854080);
          if (v140)
          {
            v175 = v138;
            v270 = v131;
            v271 = v129;
            v268 = v113;
            v141 = qword_1007F3450;
            v256 = v140;
            if (v141 != -1)
              swift_once(&qword_1007F3450, sub_10060243C);
            v142 = v263;
            v143 = sub_1000117A8(v263, (uint64_t)qword_100857618);
            v144 = v262;
            v145 = v261;
            (*(void (**)(char *, uint64_t, uint64_t))(v262 + 16))(v261, v143, v142);
            v146 = sub_10000DF3C(&qword_1007FD430);
            v147 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
            v148 = swift_allocObject(v146, ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ *(_QWORD *)(v147 + 72), *(unsigned __int8 *)(v147 + 80) | 7);
            v243 = xmmword_10066FBA0;
            *(_OWORD *)(v148 + 16) = xmmword_10066FBA0;
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(73, 1);
            v149._countAndFlagsBits = 0xD000000000000049;
            v149._object = (void *)0x8000000100648230;
            LogMessage.StringInterpolation.appendLiteral(_:)(v149);
            v276._countAndFlagsBits = 0;
            v276._object = (void *)0xE000000000000000;
            _print_unlocked<A, B>(_:_:)(v122, &v276, v117, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            object = v276._object;
            v151._countAndFlagsBits = 40;
            v151._object = (void *)0xE100000000000000;
            v152 = String.prefix(upToCharacter:)(v151);
            v273 = v122;
            v153 = swift_bridgeObjectRelease(object);
            *((_QWORD *)&v277 + 1) = &type metadata for String;
            v276 = v152;
            LogMessage.StringInterpolation.appendInterpolation(safe:)(&v276, v153);
            sub_100011088((uint64_t)&v276, &qword_1007F6E90);
            v154._countAndFlagsBits = 0;
            v154._object = (void *)0xE000000000000000;
            LogMessage.StringInterpolation.appendLiteral(_:)(v154);
            LogMessage.init(stringInterpolation:)(v99);
            Logger.info(_:)(v148, v142, &protocol witness table for OSLogger);
            v155 = swift_bridgeObjectRelease(v148);
            (*(void (**)(char *, uint64_t, __n128))(v144 + 8))(v145, v142, v155);
            v156 = v264;
            sub_10002EF78((uint64_t)v273, v264);
            v157 = (char *)&loc_1003B2A10
                 + *((int *)qword_1003B7F88 + swift_getEnumCaseMultiPayload(v156, v117));
            __asm { BR              X10 }
          }
        }
LABEL_18:
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v139);
        __break(1u);
        JUMPOUT(0x1003B7F28);
      }
LABEL_15:
      swift_unknownObjectRetain(v129);
      v160 = v125;
      v139 = v161;
      goto LABEL_18;
    }
    v159 = v130;
    swift_unknownObjectRetain(v129);
    v158 = v159;
  }
  else
  {
    v158 = sub_10000DF3C(&qword_1007FDEA0);
  }
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v158);
  __break(1u);
  goto LABEL_15;
}

_QWORD *sub_1003B8054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t ObjCClassFromMetadata;
  double v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  __n128 v24;
  _QWORD *v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Class v31;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  UIBarButtonItem v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  uint64_t v46;
  _QWORD v47[5];
  objc_super v48;
  UIAction_optional v49;
  UIMenu_optional v50;

  v46 = a2;
  v5 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v5);
  v7 = (char *)&v47[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowDestination(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v47[-1] - v13;
  v15 = type metadata accessor for NavigationBarManualCheckLayoutMarginsChange();
  v16 = (objc_class *)type metadata accessor for StoreNavigationController();
  v17 = (char *)objc_allocWithZone(v16);
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension25StoreNavigationController_objectGraph] = a3;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v48.receiver = v17;
  v48.super_class = v16;
  *(_QWORD *)&v19 = swift_retain(a3).n128_u64[0];
  v20 = objc_msgSendSuper2(&v48, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, 0, v19);
  (*(void (**)(void))((swift_isaMask & *v20) + 0x60))();
  v47[3] = v16;
  v47[4] = sub_10000E99C((unint64_t *)&unk_1007F5130, (uint64_t (*)(uint64_t))type metadata accessor for StoreNavigationController, (uint64_t)"M(\v");
  v47[0] = v20;
  v21 = v20;
  sub_1003B18DC(a1, v46, (uint64_t)v47, a3);
  v23 = v22;
  sub_100011088((uint64_t)v47, (uint64_t *)&unk_10080BD00);
  if (v23)
  {
    v24 = swift_retain(a1);
    dispatch thunk of Action.clickSender.getter(v47, v24);
    sub_10011BB90(a1, (uint64_t)v47, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      swift_storeEnumTagMultiPayload(v14, v8, 50);
      sub_100011088((uint64_t)v7, &qword_1007F7950);
    }
    else
    {
      sub_10002EF34((uint64_t)v7, (uint64_t)v14);
    }
    sub_10002EF78((uint64_t)v14, (uint64_t)v11);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v8);
    if (EnumCaseMultiPayload == 18 || EnumCaseMultiPayload == 15)
    {
      sub_10018E470((uint64_t)v11);
    }
    else
    {
      if (EnumCaseMultiPayload != 14)
      {
        sub_10018E470((uint64_t)v11);
        sub_10018E470((uint64_t)v14);
        v33 = swift_allocObject(&unk_10073C5D0, 24, 7);
        swift_unknownObjectWeakInit(v33 + 16);
        swift_retain(v33);
        if ((sub_10031AC74(v23) & 1) != 0)
        {
          swift_release_n(v33, 2);
        }
        else
        {
          v34 = objc_msgSend(v23, "navigationItem");
          v35 = objc_msgSend(v34, "rightBarButtonItems");
          if (v35)
          {
            v36 = v35;
            v37 = sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
            v38 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

          }
          else
          {
            v38 = _swiftEmptyArrayStorage;
          }
          v47[0] = v38;
          sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
          sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
          v39 = swift_allocObject(&unk_10073C5F8, 32, 7);
          *(_QWORD *)(v39 + 16) = sub_1003B85A0;
          *(_QWORD *)(v39 + 24) = v33;
          swift_retain(v33);
          v49.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10009EF0C, v39);
          v49.is_nil = 0;
          v40.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v49, v50).super.super.isa;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40.super.super.isa);
          v42 = *(_QWORD *)((v47[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v41 = *(_QWORD *)((v47[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v42 >= v41 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
          v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40.super.super.isa);
          specialized Array._endMutation()(v43);
          v44 = v47[0];
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v34, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);
          swift_release_n(v33, 2);

        }
        goto LABEL_12;
      }
      sub_10000DF3C(&qword_1007F79A0);
      swift_release();
      sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F5150);
    }
    sub_10018E470((uint64_t)v14);
LABEL_12:
    v27 = sub_10000DF3C(&qword_1007F5840);
    v28 = swift_allocObject(v27, 40, 7);
    *(_OWORD *)(v28 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v28 + 32) = v23;
    v47[0] = v28;
    specialized Array._endMutation()(v28);
    v29 = v47[0];
    sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v25 = v21;
    v30 = v23;
    v31 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "setViewControllers:", v31, swift_bridgeObjectRelease(v29).n128_f64[0]);

    return v25;
  }

  return 0;
}

void sub_1003B85A0()
{
  uint64_t v0;

  sub_1003B0DA8(v0);
}

uint64_t sub_1003B85A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t AXArcadeSubscribePageLayout.init(metrics:headerView:contentView:detailsView:offerButton:dismissButton:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, void *a7@<X8>)
{
  memcpy(a7, __src, 0x190uLL);
  sub_100350DFC(a2, (uint64_t)a7 + 400);
  sub_100350DFC(a3, (uint64_t)a7 + 440);
  sub_100010F3C(a4, (uint64_t)a7 + 480);
  sub_100010F3C(a5, (uint64_t)a7 + 520);
  return sub_100010F3C(a6, (uint64_t)a7 + 560);
}

uint64_t AppPromotionFormattedDateLayout.Metrics.liveIndicatorTrailingMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 80);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t CrossLinkLockupLayout.Metrics.offerButtonMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 120);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppPromotionFormattedDateLayout.Metrics.liveIndicatorSize.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t LinkableHeaderViewLayout.topSeparator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 160, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 160);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsBottomMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 200);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsBottomMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.offerButtonHeight.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 240);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.offerButtonHeight.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 280);
}

void AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[35] = a1;
  v4[36] = a2;
  v4[37] = a3;
  v4[38] = a4;
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 312);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 312) = result;
  return result;
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 320, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 320);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 360, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.bottomSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 360);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.bottomSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003B88BC(v1, a1);
}

uint64_t sub_1003B88BC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AXArcadeSubscribePageLayout.Metrics(a2, a1);
  return a2;
}

uint64_t AXArcadeSubscribePageLayout.headerView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000B9BD4(v1 + 400, a1);
}

uint64_t AXArcadeSubscribePageLayout.contentView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000B9BD4(v1 + 440, a1);
}

uint64_t AXArcadeSubscribePageLayout.detailsView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 480, a1);
}

uint64_t AXArcadeSubscribePageLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 520, a1);
}

uint64_t AXArcadeSubscribePageLayout.dismissButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 560, a1);
}

double AXArcadeSubscribePageLayout.contentViewSize(fitting:in:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = v3;
  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v3[3];
  v13 = v4[4];
  sub_100011064(v4, v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  swift_getObjectType();
  sub_1003BA194(a1, (uint64_t)v4, a2, a3);
  v15 = v4 + 5;
  v16 = v4[8];
  v17 = v4[9];
  sub_100011064(v15, v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  AnyDimension.value(in:rounded:)(a1, v11, v16, v17);
  v14(v11, v8);
  return a2;
}

_QWORD *AXArcadeSubscribePageLayout.placeChildren(relativeTo:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t ObjectType;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double MinY;
  uint64_t v40;
  uint64_t v41;
  double MaxY;
  double v43;
  double v44;
  double v45;
  double v46;
  CGFloat v47;
  CGFloat MinX;
  CGFloat Width;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  double v82;
  double v83;
  double v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  double v89;
  double v90;
  double v91;
  double v92;
  uint64_t v94;
  CGFloat v95;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  CGFloat v99;
  CGFloat height;
  uint64_t v101;
  CGFloat v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  CGFloat v107;
  CGFloat v108;
  _QWORD v109[3];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  double v116;
  double v117;
  _BYTE v118[56];
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;

  v7 = v6;
  v105 = a2;
  *(_QWORD *)&v104 = type metadata accessor for LayoutRect(0);
  v106 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v103 = (uint64_t)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FloatingPointRoundingRule(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)(v6 + 80);
  v19 = *(_QWORD *)(v6 + 104);
  v20 = *(_QWORD *)(v7 + 112);
  sub_100011064(v18, v19);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19);
  v21 = AnyDimension.value(in:rounded:)(a1, v17, v19, v20);
  v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v17, v14);
  v23 = *(_QWORD *)(v7 + 24);
  v24 = *(_QWORD *)(v7 + 32);
  sub_100011064((_QWORD *)v7, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23);
  v25 = AnyDimension.value(in:rounded:)(a1, v17, v23, v24);
  v22(v17, v14);
  v26 = *(_QWORD *)(v7 + 64);
  v27 = *(_QWORD *)(v7 + 72);
  sub_100011064((_QWORD *)(v7 + 40), v26);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v26);
  v28 = AnyDimension.value(in:rounded:)(a1, v17, v26, v27);
  v22(v17, v14);
  ObjectType = swift_getObjectType();
  v30 = sub_1003BA194(a1, v7, a5, a6);
  if (v25 > v30)
    v30 = v25;
  if (v30 >= v28)
    v31 = v28;
  else
    v31 = v30;
  sub_1000B9BD4(v7 + 400, (uint64_t)&v115);
  v32 = v117;
  v101 = ObjectType;
  v107 = v31;
  v102 = v21;
  if (v117 == 0.0)
  {
    sub_100011088((uint64_t)&v115, &qword_1007FAF60);
    v38 = 0.0;
    MinY = 0.0;
    v35 = 0.0;
    v37 = 0.0;
  }
  else
  {
    sub_100010F3C(&v115, (uint64_t)v109);
    v33 = v110;
    v34 = v111;
    sub_100011064(v109, v110);
    v35 = Measurable.measuredSize(fitting:in:)(a1, v33, *(_QWORD *)(v34 + 8), a5, a6);
    v37 = v36;
    v124.origin.x = a3;
    v124.origin.y = a4;
    v124.size.width = a5;
    v124.size.height = a6;
    v38 = CGRectGetMidX(v124) + v35 * -0.5;
    v125.origin.x = a3;
    v125.origin.y = a4;
    v125.size.width = a5;
    v125.size.height = a6;
    MinY = CGRectGetMinY(v125);
    v41 = v110;
    v40 = v111;
    sub_100011064(v109, v110);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v41, v40);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v109);
  }
  sub_1000B9BD4(v7 + 440, (uint64_t)&v115);
  v108 = a4;
  if (v117 == 0.0)
  {
    sub_100011088((uint64_t)&v115, &qword_1007FAF60);
    v43 = 0.0;
    if (v32 == 0.0)
      v44 = 0.0;
    else
      v44 = v35;
    if (v32 != 0.0)
      v43 = v37;
    v107 = v43;
    if (v32 == 0.0)
      v45 = a3;
    else
      v45 = v38;
    v95 = v44;
    v96 = v45;
    if (v32 == 0.0)
      v46 = a4;
    else
      v46 = MinY;
    v97 = v46;
  }
  else
  {
    sub_100010F3C(&v115, (uint64_t)v109);
    if (v32 == 0.0)
    {
      v127.origin.x = a3;
      v127.origin.y = a4;
      v127.size.width = a5;
      v127.size.height = a6;
      MaxY = CGRectGetMinY(v127);
    }
    else
    {
      v126.origin.x = v38;
      v126.origin.y = MinY;
      v126.size.width = v35;
      v126.size.height = v37;
      MaxY = CGRectGetMaxY(v126);
    }
    v47 = v102 + MaxY;
    v128.origin.x = a3;
    v128.origin.y = a4;
    v128.size.width = a5;
    v128.size.height = a6;
    MinX = CGRectGetMinX(v128);
    v129.origin.x = a3;
    v129.origin.y = a4;
    v129.size.width = a5;
    v129.size.height = a6;
    Width = CGRectGetWidth(v129);
    v50 = v110;
    v51 = v111;
    sub_100011064(v109, v110);
    v96 = MinX;
    v97 = v47;
    v95 = Width;
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v50, v51);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v109);
  }
  v52 = v104;
  v53 = *(_QWORD *)(v7 + 184);
  v54 = *(_QWORD *)(v7 + 192);
  sub_100011064((_QWORD *)(v7 + 160), v53);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v53);
  v55 = AnyDimension.value(in:rounded:)(a1, v17, v53, v54);
  v22(v17, v14);
  v56 = *(_QWORD *)(v7 + 144);
  v57 = *(_QWORD *)(v7 + 152);
  sub_100011064((_QWORD *)(v7 + 120), v56);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v56);
  v58 = AnyDimension.value(in:rounded:)(a1, v17, v56, v57);
  v22(v17, v14);
  v59 = *(_QWORD *)(v7 + 224);
  v60 = *(_QWORD *)(v7 + 232);
  sub_100011064((_QWORD *)(v7 + 200), v59);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v59);
  v61 = AnyDimension.value(in:rounded:)(a1, v17, v59, v60);
  v22(v17, v14);
  sub_100011020(v7 + 240, (uint64_t)v118);
  v104 = *(_OWORD *)(v7 + 280);
  v62 = *(_QWORD *)(v7 + 296);
  v63 = *(_QWORD *)(v7 + 304);
  LOBYTE(v60) = *(_BYTE *)(v7 + 312);
  sub_100011020(v7 + 320, (uint64_t)&v122);
  sub_100011020(v7 + 360, (uint64_t)&v123);
  *(double *)&v115 = v58;
  *((double *)&v115 + 1) = v55;
  v116 = v61;
  v117 = v55;
  *(_OWORD *)&v118[40] = v104;
  v119 = v62;
  v120 = v63;
  v121 = v60;
  sub_1003BA4BC((uint64_t)&v115, (uint64_t)v109);
  sub_100011020(v7 + 480, (uint64_t)&v112);
  sub_100011020(v7 + 520, (uint64_t)&v113);
  sub_100011020(v7 + 560, (uint64_t)&v114);
  v130.origin.x = a3;
  v64 = v108;
  v130.origin.y = v108;
  v130.size.width = a5;
  v130.size.height = a6;
  v99 = CGRectGetMinX(v130);
  v65 = a5;
  v66 = v96;
  v67 = v97;
  v131.origin.x = v96;
  v131.origin.y = v97;
  v68 = v95;
  v131.size.width = v95;
  v69 = v107;
  v131.size.height = v107;
  v98 = CGRectGetMaxY(v131);
  v132.origin.x = a3;
  v132.origin.y = v64;
  v132.size.width = v65;
  v132.size.height = a6;
  v70 = CGRectGetWidth(v132);
  v102 = a3;
  v133.origin.x = a3;
  v71 = v70;
  v133.size.height = a6;
  v72 = v99;
  v133.origin.y = v64;
  *(CGFloat *)&v104 = v65;
  v133.size.width = v65;
  height = v133.size.height;
  v73 = CGRectGetMaxY(v133);
  v134.origin.x = v66;
  v74 = v98;
  v134.origin.y = v67;
  v134.size.width = v68;
  v134.size.height = v69;
  v75 = v73 - CGRectGetMaxY(v134);
  sub_1003BA4F0(a1, (uint64_t)v109, v71, v75);
  v77 = v76;
  v135.origin.x = v72;
  v135.origin.y = v74;
  v135.size.width = v71;
  v135.size.height = v75;
  if (v77 <= CGRectGetHeight(v135))
  {
    v78 = v103;
    v79 = sub_1003B925C(a1, v103, v72, v74, v71, v75);
  }
  else
  {
    v78 = v103;
    v79 = sub_1003B9714(a1, v103, v72, v74, v71, v75);
  }
  v80 = LayoutRect.origin.getter(v79);
  v82 = v81;
  LayoutRect.size.getter(v80);
  v84 = v82 + v83;
  v85 = v102;
  v136.origin.x = v102;
  v86 = v108;
  v136.origin.y = v108;
  v87 = *(double *)&v104;
  *(_QWORD *)&v136.size.width = v104;
  v88 = height;
  v136.size.height = height;
  v89 = CGRectGetHeight(v136);
  if (v84 <= v89)
    v84 = v89;
  v137.origin.x = v85;
  v137.origin.y = v86;
  v137.size.width = v87;
  v137.size.height = v88;
  v90 = CGRectGetMinX(v137);
  v138.origin.x = v85;
  v138.origin.y = v86;
  v138.size.width = v87;
  v138.size.height = v88;
  v91 = CGRectGetMinY(v138);
  v139.origin.x = v85;
  v139.origin.y = v86;
  v139.size.width = v87;
  v139.size.height = v88;
  v92 = CGRectGetWidth(v139);
  LayoutRect.init(representing:)(v90, v91, v92, v84);
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v78, v52);
  sub_1003BA7E8(v109);
  return sub_1003BA814(&v115);
}

uint64_t sub_1003B925C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  double v23;
  double Height;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[4];
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v7 = (_QWORD *)v6;
  v47[3] = a2;
  v13 = type metadata accessor for FloatingPointRoundingRule(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(double *)(v6 + 8);
  v18 = *(double *)(v6 + 24);
  v19 = (_QWORD *)(v6 + 112);
  v20 = *(_QWORD *)(v6 + 136);
  v21 = v7[18];
  sub_100011064(v19, v20);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v20);
  v47[1] = AnyDimension.value(in:rounded:)(a1, v16, v20, v21);
  v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v16, v13);
  v48.origin.x = a3;
  v48.origin.y = a4;
  v48.size.width = a5;
  v48.size.height = a6;
  v23 = CGRectGetWidth(v48) - v17 - v18;
  v49.origin.x = a3;
  v49.origin.y = a4;
  v49.size.width = a5;
  v49.size.height = a6;
  Height = CGRectGetHeight(v49);
  v25 = v7[27];
  v26 = v7[28];
  sub_100011064(v7 + 24, v25);
  v27 = *(_QWORD *)(v26 + 8);
  *(double *)&v47[2] = v23;
  Measurable.measuredSize(fitting:in:)(a1, v25, v27, v23, Height);
  v50.origin.x = a3;
  v50.origin.y = a4;
  v50.size.width = a5;
  v50.size.height = a6;
  CGRectGetMidX(v50);
  v51.origin.x = a3;
  v51.origin.y = a4;
  v51.size.width = a5;
  v51.size.height = a6;
  CGRectGetMinY(v51);
  v28 = v7[27];
  v29 = v7[28];
  sub_100011064(v7 + 24, v28);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v28, v29);
  v52.origin.x = a3;
  v52.origin.y = a4;
  v52.size.width = a5;
  v52.size.height = a6;
  CGRectGetMaxY(v52);
  v30 = v7[22];
  v31 = v7[23];
  sub_100011064(v7 + 19, v30);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v30);
  AnyDimension.value(in:rounded:)(a1, v16, v30, v31);
  v22(v16, v13);
  v32 = v7[37];
  v33 = v7[38];
  sub_100011064(v7 + 34, v32);
  v34 = dispatch thunk of LayoutView.isHidden.getter(v32, v33);
  v35 = v7[37];
  v36 = v7[38];
  sub_100011064(v7 + 34, v35);
  if ((v34 & 1) == 0)
  {
    Measurable.measuredSize(fitting:in:)(a1, v35, *(_QWORD *)(v36 + 8), a5, a6);
    v53.origin.x = a3;
    v53.origin.y = a4;
    v53.size.width = a5;
    v53.size.height = a6;
    CGRectGetMidX(v53);
    v35 = v7[37];
    v36 = v7[38];
    sub_100011064(v7 + 34, v35);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
  }
  dispatch thunk of LayoutView.frame.setter(v35, v36);
  v37 = v7 + 29;
  v38 = v7[32];
  v39 = v7[33];
  sub_100011064(v7 + 29, v38);
  if ((dispatch thunk of LayoutView.isHidden.getter(v38, v39) & 1) != 0)
  {
    v40 = v7[32];
    v41 = v7[33];
    sub_100011064(v37, v40);
    v42 = v40;
  }
  else
  {
    v54.origin.x = a3;
    v54.origin.y = a4;
    v54.size.width = a5;
    v54.size.height = a6;
    CGRectGetWidth(v54);
    v43 = v7[7];
    v44 = v7[8];
    sub_100011064(v7 + 4, v43);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v43);
    AnyDimension.value(in:rounded:)(a1, v16, v43, v44);
    v22(v16, v13);
    v55.origin.x = a3;
    v55.origin.y = a4;
    v55.size.width = a5;
    v55.size.height = a6;
    CGRectGetMidX(v55);
    v45 = v7[32];
    v41 = v7[33];
    sub_100011064(v37, v45);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    v42 = v45;
  }
  dispatch thunk of LayoutView.frame.setter(v42, v41);
  return LayoutRect.init(representing:)(a3, a4, a5, a6);
}

uint64_t sub_1003B9714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t *v6;
  _QWORD *v7;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  double v70;
  double MinY;
  double Height;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  double v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *);
  void (*v100)(char *);
  unsigned int v101;
  unsigned int v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  void *v112;
  void *v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;

  v7 = v6;
  v104 = a1;
  v85 = a2;
  v96 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0);
  v97 = *(_QWORD *)(v96 - 8);
  v12 = __chkstk_darwin(v96);
  v90 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0, v12);
  v92 = *(_QWORD *)(v105 - 8);
  v14 = __chkstk_darwin(v105);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  v86 = v16;
  v74 = v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for _VerticalFlowLayout(0, v18);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FloatingPointRoundingRule(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v6;
  v80 = *((double *)v6 + 1);
  v26 = v80;
  v28 = v6[2];
  v29 = *((double *)v6 + 3);
  v114.origin.x = a3;
  v114.origin.y = a4;
  v114.size.width = a5;
  v114.size.height = a6;
  v30 = CGRectGetWidth(v114) - v26 - v29;
  v81 = v30;
  v115.origin.x = a3;
  v115.origin.y = a4;
  v115.size.width = a5;
  v115.size.height = a6;
  v31 = CGRectGetWidth(v115) - *((double *)v6 + 10) - *((double *)v6 + 12);
  if (!*((_BYTE *)v6 + 104))
    v30 = v31;
  v32 = v6 + 4;
  v33 = v6[7];
  v34 = v7[8];
  sub_100011064(v32, v33);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v33);
  v35 = AnyDimension.value(in:rounded:)(v104, v25, v33, v34);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v36 = sub_10000DF3C(&qword_1007FE260);
  v37 = *(_QWORD *)(type metadata accessor for _VerticalFlowLayout.Child(0) - 8);
  v75 = *(_QWORD *)(v37 + 72);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 + 32) & ~v38;
  v78 = 2 * v75;
  v40 = swift_allocObject(v36, v39 + 3 * v75, v38 | 7);
  v103 = xmmword_10066F860;
  v79 = v40;
  *(_OWORD *)(v40 + 16) = xmmword_10066F860;
  v88 = v40 + v39;
  v91 = (void (*)(char *, uint64_t))(v7 + 24);
  v102 = enum case for _VerticalFlowLayout.Child.Placement.top(_:);
  v99 = *(void (**)(char *))(v17 + 104);
  v99(v20);
  v101 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.center(_:);
  v41 = v92;
  v100 = *(void (**)(char *))(v92 + 104);
  v42 = v77;
  v43 = v105;
  v100(v77);
  v112 = &type metadata for CGFloat;
  v113 = &protocol witness table for CGFloat;
  v111 = v27;
  v109 = &type metadata for CGFloat;
  v110 = &protocol witness table for CGFloat;
  v108 = v28;
  v76 = sub_10000DF3C((uint64_t *)&unk_100803BE0);
  v44 = v97;
  v89 = *(_QWORD *)(v97 + 72);
  v45 = *(unsigned __int8 *)(v97 + 80);
  v87 = (v45 + 32) & ~v45;
  v98 = v45 | 7;
  v46 = swift_allocObject(v76, v87 + v89, v45 | 7);
  *(_OWORD *)(v46 + 16) = xmmword_10066FBA0;
  ((void (*)(void))static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter)();
  v107 = v46;
  v47 = sub_10030DDAC();
  v94 = v47;
  v48 = sub_10000DF3C((uint64_t *)&unk_100803BF0);
  v93 = v48;
  v95 = sub_100187310();
  v49 = v90;
  v50 = v96;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v107, v48, v95, v96, v47);
  v51 = v88;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(v91, v20, v42, &v111, &v108, v49);
  v91 = *(void (**)(char *, uint64_t))(v44 + 8);
  v91(v49, v50);
  v97 = *(_QWORD *)(v41 + 8);
  ((void (*)(char *, uint64_t))v97)(v42, v43);
  v92 = *(_QWORD *)(v74 + 8);
  v52 = v86;
  ((void (*)(char *, uint64_t))v92)(v20, v86);
  sub_100011088((uint64_t)&v108, (uint64_t *)&unk_100803C00);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v111);
  v74 = v51 + v75;
  v53 = v7[32];
  v54 = v7[33];
  sub_100011064(v7 + 29, v53);
  LayoutView.withMeasurements(representing:)(&v111, v53, v54, v30, v35);
  ((void (*)(char *, _QWORD, uint64_t))v99)(v20, v102, v52);
  ((void (*)(char *, _QWORD, uint64_t))v100)(v42, v101, v43);
  v75 = type metadata accessor for ZeroDimension(0);
  v109 = (void *)v75;
  v110 = &protocol witness table for ZeroDimension;
  v55 = sub_1000117C0(&v108);
  static ZeroDimension.zero.getter(v55);
  sub_100011020((uint64_t)(v7 + 14), (uint64_t)&v107);
  v56 = v87 + 3 * v89;
  v57 = v76;
  v58 = swift_allocObject(v76, v56, v98);
  *(_OWORD *)(v58 + 16) = v103;
  v59 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v60 = static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v59);
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v60);
  v106 = v58;
  v61 = v90;
  v62 = v96;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v106, v93, v95, v96, v94);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v111, v20, v42, &v108, &v107, v61);
  v91(v61, v62);
  sub_100011088((uint64_t)&v107, (uint64_t *)&unk_100803C00);
  v63 = v105;
  ((void (*)(char *, uint64_t))v97)(v42, v105);
  v64 = v86;
  ((void (*)(char *, uint64_t))v92)(v20, v86);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v111);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v108);
  v88 += v78;
  v78 = (uint64_t)(v7 + 34);
  ((void (*)(char *, _QWORD, uint64_t))v99)(v20, v102, v64);
  ((void (*)(char *, _QWORD, uint64_t))v100)(v42, v101, v63);
  v112 = (void *)v75;
  v113 = &protocol witness table for ZeroDimension;
  v65 = sub_1000117C0(&v111);
  static ZeroDimension.zero.getter(v65);
  sub_100011020((uint64_t)(v7 + 19), (uint64_t)&v108);
  v66 = swift_allocObject(v57, v56, v98);
  *(_OWORD *)(v66 + 16) = v103;
  v67 = static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v68 = static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v67);
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v68);
  v107 = v66;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v107, v93, v95, v62, v94);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(v78, v20, v42, &v111, &v108, v61);
  v91(v61, v62);
  sub_100011088((uint64_t)&v108, (uint64_t *)&unk_100803C00);
  ((void (*)(char *, uint64_t))v97)(v42, v105);
  ((void (*)(char *, uint64_t))v92)(v20, v64);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v111);
  v69 = v82;
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v79);
  v116.origin.x = a3;
  v116.origin.y = a4;
  v116.size.width = a5;
  v116.size.height = a6;
  v70 = v80 + CGRectGetMinX(v116);
  v117.origin.x = a3;
  v117.origin.y = a4;
  v117.size.width = a5;
  v117.size.height = a6;
  MinY = CGRectGetMinY(v117);
  v118.origin.x = a3;
  v118.origin.y = a4;
  v118.size.width = a5;
  v118.size.height = a6;
  Height = CGRectGetHeight(v118);
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(v104, v70, MinY, v81, Height);
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v69, v84);
}

uint64_t sub_1003BA078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  double v13;
  double v14;
  CGRect v16;

  swift_getObjectType();
  sub_1003BA4F0(a1, v6, a5, a6);
  v14 = v13;
  v16.origin.x = a3;
  v16.origin.y = a4;
  v16.size.width = a5;
  v16.size.height = a6;
  if (v14 <= CGRectGetHeight(v16))
    return sub_1003B925C(a1, a2, a3, a4, a5, a6);
  else
    return sub_1003B9714(a1, a2, a3, a4, a5, a6);
}

double sub_1003BA14C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  swift_getObjectType();
  return sub_1003BA4F0(a1, v3, a2, a3);
}

double sub_1003BA194(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[24];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];
  _BYTE v45[56];
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 184);
  v13 = *(_QWORD *)(a2 + 192);
  sub_100011064((_QWORD *)(a2 + 160), v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  v14 = AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v16 = *(_QWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  sub_100011064((_QWORD *)(a2 + 120), v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  v18 = AnyDimension.value(in:rounded:)(a1, v11, v16, v17);
  v15(v11, v8);
  v19 = *(_QWORD *)(a2 + 224);
  v20 = *(_QWORD *)(a2 + 232);
  sub_100011064((_QWORD *)(a2 + 200), v19);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19);
  v21 = AnyDimension.value(in:rounded:)(a1, v11, v19, v20);
  v15(v11, v8);
  sub_100011020(a2 + 240, (uint64_t)v45);
  v34 = *(_OWORD *)(a2 + 280);
  v22 = *(_QWORD *)(a2 + 296);
  v23 = *(_QWORD *)(a2 + 304);
  LOBYTE(v20) = *(_BYTE *)(a2 + 312);
  sub_100011020(a2 + 320, (uint64_t)&v49);
  sub_100011020(a2 + 360, (uint64_t)&v50);
  *(double *)v44 = v18;
  *(double *)&v44[1] = v14;
  *(double *)&v44[2] = v21;
  *(double *)&v44[3] = v14;
  *(_OWORD *)&v45[40] = v34;
  v46 = v22;
  v47 = v23;
  v48 = v20;
  sub_1003BA4BC((uint64_t)v44, (uint64_t)v40);
  sub_100011020(a2 + 480, (uint64_t)&v41);
  sub_100011020(a2 + 520, (uint64_t)&v42);
  sub_100011020(a2 + 560, (uint64_t)&v43);
  v24 = *(_QWORD *)(a2 + 104);
  v25 = *(_QWORD *)(a2 + 112);
  sub_100011064((_QWORD *)(a2 + 80), v24);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v24);
  v26 = AnyDimension.value(in:rounded:)(a1, v11, v24, v25);
  v15(v11, v8);
  sub_1003BA4F0(a1, (uint64_t)v40, a3, a4);
  v28 = a4 - v26 - v27;
  sub_1000B9BD4(a2 + 400, (uint64_t)&v35);
  if (v36)
  {
    sub_100010F3C(&v35, (uint64_t)v37);
    v29 = v38;
    v30 = v39;
    sub_100011064(v37, v38);
    Measurable.measuredSize(fitting:in:)(a1, v29, *(_QWORD *)(v30 + 8), a3, a4);
    v32 = v31;
    sub_1003BA7E8(v40);
    sub_1003BA814(v44);
    v28 = v28 - v32;
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
  }
  else
  {
    sub_1003BA7E8(v40);
    sub_1003BA814(v44);
    sub_100011088((uint64_t)&v35, &qword_1007FAF60);
  }
  return v28;
}

uint64_t sub_1003BA4BC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(a2, a1);
  return a2;
}

double sub_1003BA4F0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[34];
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 - *(double *)(a2 + 8) - *(double *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 216);
  v14 = *(_QWORD *)(a2 + 224);
  sub_100011064((_QWORD *)(a2 + 192), v13);
  Measurable.measuredSize(fitting:in:)(a1, v13, *(_QWORD *)(v14 + 8), v12, a4);
  v15 = *(_QWORD *)(a2 + 176);
  v16 = *(_QWORD *)(a2 + 184);
  sub_100011064((_QWORD *)(a2 + 152), v15);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15);
  AnyDimension.value(in:rounded:)(a1, v11, v15, v16);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v18 = *(_QWORD *)(a2 + 256);
  v19 = *(_QWORD *)(a2 + 264);
  sub_100011064((_QWORD *)(a2 + 232), v18);
  v20 = dispatch thunk of LayoutView.isHidden.getter(v18, v19);
  v40 = v8;
  if ((v20 & 1) != 0)
  {
    v21 = v17;
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 56);
    v23 = *(_QWORD *)(a2 + 64);
    sub_100011064((_QWORD *)(a2 + 32), v22);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    AnyDimension.value(in:rounded:)(a1, v11, v22, v23);
    v24 = v8;
    v21 = v17;
    v17(v11, v24);
  }
  v25 = *(_QWORD *)(a2 + 296);
  v26 = *(_QWORD *)(a2 + 304);
  sub_100011064((_QWORD *)(a2 + 272), v25);
  if ((dispatch thunk of LayoutView.isHidden.getter(v25, v26) & 1) == 0)
  {
    v27 = *(_QWORD *)(a2 + 296);
    v28 = *(_QWORD *)(a2 + 304);
    sub_100011064((_QWORD *)(a2 + 272), v27);
    Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  }
  v29 = *(_QWORD *)(a2 + 256);
  v30 = *(_QWORD *)(a2 + 264);
  sub_100011064((_QWORD *)(a2 + 232), v29);
  v31 = dispatch thunk of LayoutView.isHidden.getter(v29, v30);
  sub_1003BBB10(a2, (uint64_t)v41);
  if ((v31 & 1) != 0)
  {
    sub_1003BA7E8(v41);
  }
  else
  {
    v32 = v43;
    v33 = v44;
    sub_100011064(v42, v43);
    v34 = dispatch thunk of LayoutView.isHidden.getter(v32, v33);
    sub_1003BA7E8(v41);
    if ((v34 & 1) == 0)
    {
      v35 = (_QWORD *)(a2 + 112);
      v36 = *(_QWORD *)(a2 + 136);
      v37 = *(_QWORD *)(a2 + 144);
      sub_100011064(v35, v36);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v36);
      AnyDimension.value(in:rounded:)(a1, v11, v36, v37);
      v21(v11, v40);
    }
  }
  return a3;
}

_QWORD *sub_1003BA7E8(_QWORD *a1)
{
  destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(a1);
  return a1;
}

_QWORD *sub_1003BA814(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 14);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 19);
  return a1;
}

uint64_t destroy for AXArcadeSubscribePageLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 20);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 25);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 30);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 45);
  if (a1[53])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 50);
  if (a1[58])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 55);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 60);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 65);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 70);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  v10 = *(_QWORD *)(a2 + 264);
  v11 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v10;
  *(_QWORD *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  v12 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  v13 = *(_QWORD *)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v13;
  *(_QWORD *)(a1 + 352) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 320, a2 + 320);
  v15 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 384) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 360, a2 + 360);
  v16 = (_OWORD *)(a1 + 400);
  v17 = (_OWORD *)(a2 + 400);
  v18 = *(_QWORD *)(a2 + 424);
  if (v18)
  {
    v19 = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 424) = v18;
    *(_QWORD *)(a1 + 432) = v19;
    (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
  }
  else
  {
    v20 = *(_OWORD *)(a2 + 416);
    *v16 = *v17;
    *(_OWORD *)(a1 + 416) = v20;
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  }
  v21 = (_OWORD *)(a1 + 440);
  v22 = (_OWORD *)(a2 + 440);
  v23 = *(_QWORD *)(a2 + 464);
  if (v23)
  {
    v24 = *(_QWORD *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v23;
    *(_QWORD *)(a1 + 472) = v24;
    (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v21, v22);
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 456);
    *v21 = *v22;
    *(_OWORD *)(a1 + 456) = v25;
    *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  }
  v26 = *(_QWORD *)(a2 + 504);
  v27 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = v26;
  *(_QWORD *)(a1 + 512) = v27;
  (**(void (***)(uint64_t, uint64_t))(v26 - 8))(a1 + 480, a2 + 480);
  v28 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 544) = v28;
  (**(void (***)(uint64_t, uint64_t))(v28 - 8))(a1 + 520, a2 + 520);
  v29 = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 584) = v29;
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  (**(void (***)(uint64_t, uint64_t))(v29 - 8))(a1 + 560, a2 + 560);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  sub_10001216C((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  sub_10001216C((_QWORD *)(a1 + 120), (_QWORD *)(a2 + 120));
  sub_10001216C((_QWORD *)(a1 + 160), (_QWORD *)(a2 + 160));
  sub_10001216C((_QWORD *)(a1 + 200), (_QWORD *)(a2 + 200));
  sub_10001216C((_QWORD *)(a1 + 240), (_QWORD *)(a2 + 240));
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  sub_10001216C((_QWORD *)(a1 + 320), (_QWORD *)(a2 + 320));
  sub_10001216C((_QWORD *)(a1 + 360), (_QWORD *)(a2 + 360));
  v4 = *(_QWORD *)(a2 + 424);
  if (*(_QWORD *)(a1 + 424))
  {
    if (v4)
    {
      sub_10001216C((_QWORD *)(a1 + 400), (_QWORD *)(a2 + 400));
      goto LABEL_8;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 400));
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 424) = v4;
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 400, a2 + 400);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 400);
  v6 = *(_OWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 400) = v5;
  *(_OWORD *)(a1 + 416) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 464);
  if (!*(_QWORD *)(a1 + 464))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 464) = v7;
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 440, a2 + 440);
      goto LABEL_15;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 440);
    v9 = *(_OWORD *)(a2 + 456);
    *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 440) = v8;
    *(_OWORD *)(a1 + 456) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 440));
    goto LABEL_14;
  }
  sub_10001216C((_QWORD *)(a1 + 440), (_QWORD *)(a2 + 440));
LABEL_15:
  sub_10001216C((_QWORD *)(a1 + 480), (_QWORD *)(a2 + 480));
  sub_10001216C((_QWORD *)(a1 + 520), (_QWORD *)(a2 + 520));
  sub_10001216C((_QWORD *)(a1 + 560), (_QWORD *)(a2 + 560));
  return a1;
}

void *initializeWithTake for AXArcadeSubscribePageLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x258uLL);
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 200));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 240));
  v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  v8 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v8;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 320));
  v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 360));
  v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  if (*(_QWORD *)(a1 + 424))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 400));
  v11 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v11;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  if (*(_QWORD *)(a1 + 464))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 440));
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  v12 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v12;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 480));
  v13 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v13;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 520));
  v14 = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 536) = v14;
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 560));
  v15 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v15;
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 600))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 600) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 600) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout()
{
  return &type metadata for AXArcadeSubscribePageLayout;
}

uint64_t destroy for AXArcadeSubscribePageLayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 20);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 25);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 30);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 40);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 45);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  v10 = *(_QWORD *)(a2 + 264);
  v11 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v10;
  *(_QWORD *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  v12 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  v13 = *(_QWORD *)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v13;
  *(_QWORD *)(a1 + 352) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 320, a2 + 320);
  v15 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 384) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 360, a2 + 360);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  sub_10001216C((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  sub_10001216C((_QWORD *)(a1 + 120), (_QWORD *)(a2 + 120));
  sub_10001216C((_QWORD *)(a1 + 160), (_QWORD *)(a2 + 160));
  sub_10001216C((_QWORD *)(a1 + 200), (_QWORD *)(a2 + 200));
  sub_10001216C((_QWORD *)(a1 + 240), (_QWORD *)(a2 + 240));
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  sub_10001216C((_QWORD *)(a1 + 320), (_QWORD *)(a2 + 320));
  sub_10001216C((_QWORD *)(a1 + 360), (_QWORD *)(a2 + 360));
  return a1;
}

void *initializeWithTake for AXArcadeSubscribePageLayout.Metrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 200));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 240));
  v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  v8 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v8;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 320));
  v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 360));
  v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 400))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 400) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 400) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout.Metrics()
{
  return &type metadata for AXArcadeSubscribePageLayout.Metrics;
}

uint64_t destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 14);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 19);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 24);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 29);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 34);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 112, a2 + 112);
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 152, a2 + 152);
  v8 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 192, a2 + 192);
  v9 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 256) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 232, a2 + 232);
  v10 = *(_QWORD *)(a2 + 296);
  v11 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v10;
  *(_QWORD *)(a1 + 304) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 272, a2 + 272);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_10001216C((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  sub_10001216C((_QWORD *)(a1 + 112), (_QWORD *)(a2 + 112));
  sub_10001216C((_QWORD *)(a1 + 152), (_QWORD *)(a2 + 152));
  sub_10001216C((_QWORD *)(a1 + 192), (_QWORD *)(a2 + 192));
  sub_10001216C((_QWORD *)(a1 + 232), (_QWORD *)(a2 + 232));
  sub_10001216C((_QWORD *)(a1 + 272), (_QWORD *)(a2 + 272));
  return a1;
}

void *initializeWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 32));
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 112));
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 152));
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 192));
  v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 232));
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 272));
  v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 312))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 312) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 312) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout.OfferDetailsSublayout()
{
  return &type metadata for AXArcadeSubscribePageLayout.OfferDetailsSublayout;
}

uint64_t destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 14);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 19);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 112, a2 + 112);
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 152, a2 + 152);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_10001216C((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  sub_10001216C((_QWORD *)(a1 + 112), (_QWORD *)(a2 + 112));
  sub_10001216C((_QWORD *)(a1 + 152), (_QWORD *)(a2 + 152));
  return a1;
}

__n128 initializeWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 32));
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 112));
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 152));
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics()
{
  return &type metadata for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics;
}

uint64_t sub_1003BBB10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(a2, a1);
  return a2;
}

char *sub_1003BBB44(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t, __n128);
  void (*v47)(char *);
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v4 = v3;
  v47 = a1;
  v7 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v7);
  v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ItemLayoutContext(0);
  v49 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v45 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v37 = (char *)&v36 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v17);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    v43 = v16;
    v44 = a2;
    v48 = v9;
    v21 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v41 = *(_QWORD *)(v14 + 72);
    v46 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
    v36 = a3;
    v22 = swift_bridgeObjectRetain(a3);
    v50 = (char *)_swiftEmptyArrayStorage;
    v23 = (uint64_t)v38;
    v42 = v13;
    do
    {
      v46(v19, v21, v13, v22);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v40)(v19, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
      {
        a3 = v36;
        goto LABEL_17;
      }
      v24 = v43;
      v25 = v19;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v43, v19, v13);
      v47(v24);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
        swift_bridgeObjectRelease(v50);
        swift_bridgeObjectRelease(v36);
        return v50;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
      v27 = v48;
      v26 = v49;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v23, 1, v48) == 1)
      {
        sub_100011088(v23, &qword_1007F4A50);
        v19 = v25;
        v13 = v42;
      }
      else
      {
        v39 = 0;
        v28 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
        v29 = v37;
        v28(v37, v23, v27);
        v28(v45, (uint64_t)v29, v27);
        if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
          v50 = (char *)sub_100200720(0, *((_QWORD *)v50 + 2) + 1, 1, (unint64_t)v50);
        v19 = v25;
        v31 = *((_QWORD *)v50 + 2);
        v30 = *((_QWORD *)v50 + 3);
        if (v31 >= v30 >> 1)
          v50 = (char *)sub_100200720(v30 > 1, v31 + 1, 1, (unint64_t)v50);
        v13 = v42;
        v32 = v50;
        *((_QWORD *)v50 + 2) = v31 + 1;
        v28(&v32[((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v31], (uint64_t)v45, v48);
        v23 = (uint64_t)v38;
        v4 = v39;
      }
      v21 += v41;
      --v20;
    }
    while (v20);
    a3 = v36;
    v40(v19, 1, 1, v13, v22);
  }
  else
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
    v34 = swift_bridgeObjectRetain(a3);
    v50 = (char *)_swiftEmptyArrayStorage;
    v33(v19, 1, 1, v13, v34);
  }
LABEL_17:
  swift_bridgeObjectRelease(a3);
  return v50;
}

_QWORD *sub_1003BBF1C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v19;
  id v20;
  unint64_t v21;

  v4 = v3;
  v21 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    for (i = 4; ; ++i)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a3)
         : *(id *)(a3 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v20 = v9;
      a1(&v19, &v20);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return (_QWORD *)swift_bridgeObjectRelease(v21);
      }

      v13 = v19;
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v8);
      }
      if (v11 == v6)
      {
        swift_bridgeObjectRelease(a3);
        return (_QWORD *)v21;
      }
    }
    __break(1u);
LABEL_17:
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
  swift_bridgeObjectRelease(a3);
  return _swiftEmptyArrayStorage;
}

double *sub_1003BC0B4(void (*a1)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  double *v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *__return_ptr, uint64_t, __n128);

  v20 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(type metadata accessor for PageFacets.Facet.Option(0) - 8);
  v7 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v16 = a3;
  v17 = *(_QWORD *)(v6 + 72);
  v8 = swift_bridgeObjectRetain(a3);
  v9 = _swiftEmptyArrayStorage;
  do
  {
    v20(&v18, v7, v8);
    if (v3)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v16);
      return v9;
    }
    v11 = v19;
    if (v19)
    {
      v12 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = (double *)sub_100200A80(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v14 = *((_QWORD *)v9 + 2);
      v13 = *((_QWORD *)v9 + 3);
      if (v14 >= v13 >> 1)
        v9 = (double *)sub_100200A80((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v14 + 1;
      v10 = &v9[2 * v14];
      *((_QWORD *)v10 + 4) = v12;
      *((_QWORD *)v10 + 5) = v11;
    }
    v7 += v17;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease(v16);
  return v9;
}

uint64_t sub_1003BC210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);
  void *v9;
  uint64_t result;

  v0 = sub_10000DF3C(&qword_100803438);
  v1 = type metadata accessor for Shelf.ContentType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + 3 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_10066F860;
  v7 = v6 + v5;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v8(v7, enum case for Shelf.ContentType.productTopLockup(_:), v1);
  v8(v7 + v3, enum case for Shelf.ContentType.preorderDisclaimer(_:), v1);
  v8(v7 + 2 * v3, enum case for Shelf.ContentType.productBadge(_:), v1);
  v9 = sub_10017371C(v6);
  swift_setDeallocating(v6);
  swift_arrayDestroy(v7, 3, v1);
  result = swift_deallocClassInstance(v6, 32, 7);
  qword_1008543A8 = (uint64_t)v9;
  return result;
}

_QWORD *sub_1003BC31C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  double *v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  __n128 v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[7];
  _QWORD *v29;
  uint64_t v30;

  v5 = sub_1003D5E68(a1, (uint64_t)a2);
  v30 = (uint64_t)_swiftEmptyArrayStorage;
  v6 = sub_1003BF9AC(a1, a2);
  if (v6)
  {
    v7 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v9 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v8 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v9 >= v8 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
    v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
    specialized Array._endMutation()(v10);

  }
  v11 = (void *)sub_1003BEC00(a1);
  if (v11)
  {
    v13 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized Array._endMutation()(v16);

  }
  v17 = sub_1003C0840(a1, v12);
  if (v17)
  {
    v18 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);

  }
  v22 = v30;
  sub_100019574(0, &qword_1007F49A0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v23 = swift_bridgeObjectRetain(v30);
  v24 = Array<A>.totalTopSupplementaryHeight.getter(v23);
  swift_bridgeObjectRelease(v30);
  __chkstk_darwin(v25);
  v28[2] = v2;
  v28[3] = a1;
  *(double *)&v28[4] = v24;
  v26 = sub_1003BBF1C((void (*)(uint64_t *__return_ptr, id *))sub_1003C0B00, (uint64_t)v28, (uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  v29 = v26;
  sub_100019D24(v22);
  return v29;
}

void sub_1003BC534(void **a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>, double a4@<D0>)
{
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  id v14;

  v6 = *a1;
  if ((sub_1003C0B1C(*a1, a2) & 1) != 0)
  {
    if (objc_msgSend(v6, "alignment") == (id)1 && a4 > 0.0)
    {
      v7 = objc_msgSend(v6, "layoutSize");
      v8 = objc_msgSend(v6, "elementKind");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v10 = v9;

      v11 = objc_msgSend(v6, "alignment");
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
      v13 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v7, v12, v11, 0.0, -a4);

      *a3 = v13;
    }
    else
    {
      *a3 = v6;
      v14 = v6;
    }
  }
  else
  {
    *a3 = 0;
  }
}

double sub_1003BC67C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v55 = a4;
  v9 = type metadata accessor for ShelfLayoutContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SeparatorSupplementaryView(0);
  v14 = static UICollectionReusableView.elementKind.getter();
  v16 = v15;
  if (v14 == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease(a2);
LABEL_5:
    a5[3] = sub_10000DF3C((uint64_t *)&unk_100810B00);
    a5[4] = sub_100010F98((unint64_t *)&qword_100806270, (uint64_t *)&unk_100810B00, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_1000117C0(a5);
    v18 = swift_bridgeObjectRetain(a2);
    v19 = static UICollectionReusableView.defaultReuseIdentifier.getter(v18);
    v21 = v20;
    v22 = sub_1003BCF0C;
    v23 = a1;
    v24 = a2;
    v25 = 0;
LABEL_14:
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v23, v24, v19, v21, v22, v25, v13);
    return result;
  }
  v54 = a3;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
    goto LABEL_5;
  if (a1 == 0xD000000000000023 && a2 == 0x8000000100648540
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x8000000100648540, a1, a2, 0) & 1) != 0
    || a1 == 0xD000000000000026 && a2 == 0x8000000100648570
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000026, 0x8000000100648570, a1, a2, 0) & 1) != 0)
  {
    a5[3] = sub_10000DF3C(&qword_10080C000);
    a5[4] = sub_100010F98(&qword_10080C008, &qword_10080C000, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    v56 = sub_1000117C0(a5);
    v13 = type metadata accessor for PlatformSelectorView();
    v26 = swift_bridgeObjectRetain(a2);
    v27 = static UICollectionReusableView.defaultReuseIdentifier.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v9);
    v30 = *(unsigned __int8 *)(v10 + 80);
    v31 = v9;
    v32 = (v30 + 16) & ~v30;
    v33 = swift_allocObject(&unk_10073C8E0, v32 + v11, v30 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v32, v12, v31);
    v22 = sub_1003BDB3C;
LABEL_13:
    v23 = a1;
    v24 = a2;
    v19 = v27;
    v21 = v29;
    v25 = v33;
    goto LABEL_14;
  }
  v13 = type metadata accessor for InteractiveProductReviewsShelfHeaderView();
  v35 = static UICollectionReusableView.elementKind.getter();
  v37 = v36;
  if (v35 == a1 && v36 == a2)
  {
    swift_bridgeObjectRelease(a2);
LABEL_19:
    a5[3] = sub_10000DF3C(&qword_10080BFF0);
    a5[4] = sub_100010F98(&qword_10080BFF8, &qword_10080BFF0, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    v56 = sub_1000117C0(a5);
    v39 = swift_bridgeObjectRetain(a2);
    v27 = static UICollectionReusableView.defaultReuseIdentifier.getter(v39);
    v29 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v9);
    v41 = *(unsigned __int8 *)(v10 + 80);
    v42 = v9;
    v43 = (v41 + 16) & ~v41;
    v33 = swift_allocObject(&unk_10073C8B8, v43 + v11, v41 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v43, v12, v42);
    v22 = sub_1003BDA98;
    goto LABEL_13;
  }
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, a1, a2, 0);
  swift_bridgeObjectRelease(v37);
  if ((v38 & 1) != 0)
    goto LABEL_19;
  v13 = type metadata accessor for ProductReviewsShelfHeaderView();
  v44 = static UICollectionReusableView.elementKind.getter();
  v46 = v45;
  if (v44 == a1 && v45 == a2)
  {
    swift_bridgeObjectRelease(a2);
LABEL_24:
    a5[3] = sub_10000DF3C((uint64_t *)&unk_100810AF0);
    a5[4] = sub_100010F98(&qword_10080BFE8, (uint64_t *)&unk_100810AF0, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    v56 = sub_1000117C0(a5);
    v48 = swift_bridgeObjectRetain(a2);
    v27 = static UICollectionReusableView.defaultReuseIdentifier.getter(v48);
    v29 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v9);
    v50 = *(unsigned __int8 *)(v10 + 80);
    v51 = v9;
    v52 = (v50 + 16) & ~v50;
    v33 = swift_allocObject(&unk_10073C890, v52 + v11, v50 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v52, v12, v51);
    v22 = sub_1003BDA44;
    goto LABEL_13;
  }
  v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, a1, a2, 0);
  swift_bridgeObjectRelease(v46);
  if ((v47 & 1) != 0)
    goto LABEL_24;
  return sub_1003D25D8(a1, a2, v54, v55, a5);
}

_QWORD *sub_1003BCB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t KeyPath;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __n128 v42;
  __n128 v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v6 = type metadata accessor for ShelfLayoutContext(0);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  v7 = __chkstk_darwin(v6);
  v47 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Shelf.ContentsMetadata(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ProductReviewsMetadata(0, v15);
  v53 = *(_QWORD *)(v18 - 8);
  v54 = v18;
  __chkstk_darwin(v18);
  v52 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a2;
  v20 = sub_1003D3498(a1, a2, a3);
  v21 = type metadata accessor for ObjectGraph(0);
  v22 = swift_dynamicCastClass(a3, v21);
  if (v22)
  {
    v46 = v22;
    v51 = v20;
    v23 = swift_retain(a3);
    ShelfLayoutContext.shelf.getter(v23);
    KeyPath = swift_getKeyPath(&unk_100689408);
    ReadOnlyLens.subscript.getter(KeyPath, v13);
    v25 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v17, v13, v25);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) == enum case for Shelf.ContentsMetadata.productReviews(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
      v27 = v52;
      v26 = v53;
      v28 = v54;
      v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(v52, v12, v54);
      v30 = ProductReviewsMetadata.hasReviewSummary.getter(v29);
      v20 = v51;
      if ((v30 & 1) != 0)
      {
        v31 = v47;
        v32 = v48;
        v33 = v49;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, a1, v49);
        v34 = type metadata accessor for InteractiveProductReviewsShelfScrollObserver(0);
        v35 = swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
        v36 = v35
            + OBJC_IVAR____TtC22SubscribePageExtension44InteractiveProductReviewsShelfScrollObserver_collectionView;
        swift_unknownObjectWeakInit(v35 + OBJC_IVAR____TtC22SubscribePageExtension44InteractiveProductReviewsShelfScrollObserver_collectionView);
        v37 = v35 + OBJC_IVAR____TtC22SubscribePageExtension44InteractiveProductReviewsShelfScrollObserver_currentState;
        *(_OWORD *)v37 = 0u;
        *(_OWORD *)(v37 + 16) = 0u;
        *(_QWORD *)(v37 + 32) = 0;
        *(_BYTE *)(v37 + 40) = 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v35+ OBJC_IVAR____TtC22SubscribePageExtension44InteractiveProductReviewsShelfScrollObserver_shelfLayoutContext, v31, v33);
        swift_unknownObjectWeakAssign(v36, v50);
        *(_QWORD *)(v35
                  + OBJC_IVAR____TtC22SubscribePageExtension44InteractiveProductReviewsShelfScrollObserver_objectGraph) = v46;
        swift_retain(a3);
        if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
          v20 = sub_100202184(0, v20[2] + 1, 1, v20);
        v39 = v20[2];
        v38 = v20[3];
        if (v39 >= v38 >> 1)
          v20 = sub_100202184((_QWORD *)(v38 > 1), v39 + 1, 1, v20);
        v40 = sub_10000E99C(&qword_10080BFE0, type metadata accessor for InteractiveProductReviewsShelfScrollObserver, (uint64_t)&unk_10068CA68);
        v20[2] = v39 + 1;
        v41 = &v20[2 * v39];
        v41[4] = v35;
        v41[5] = v40;
        v42 = swift_release(a3);
        (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v27, v54, v42);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
        swift_release(a3);
      }
    }
    else
    {
      v43 = swift_release(a3);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v43);
      return v51;
    }
  }
  return v20;
}

uint64_t sub_1003BCF0C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  __n128 v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v18[24];

  v2 = type metadata accessor for ComponentSeparator.Position(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for ComponentSeparator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = &v18[-v11 - 8];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ComponentSeparator.Position.top(_:), v2);
  ComponentSeparator.init(position:leadingInset:trailingInset:)(v5, 0.0, 0.0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
  v13 = &a1[OBJC_IVAR____TtC22SubscribePageExtension26SeparatorSupplementaryView_separator];
  v14 = swift_beginAccess(&a1[OBJC_IVAR____TtC22SubscribePageExtension26SeparatorSupplementaryView_separator], v18, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v7 + 24))(v13, v10, v6, v14);
  swift_endAccess(v18);
  objc_msgSend(a1, "setNeedsLayout");
  v15 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v15(v10, v6);
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v12, v6);
}

unint64_t sub_1003BD080(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t KeyPath;
  __n128 v39;
  void (*v40)(_BYTE *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  int v54;
  uint64_t v55;
  _BYTE *v56;
  double (*v57)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v58;
  uint64_t v59;
  unint64_t result;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  __n128 v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  __n128 v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  char v88;
  void (*v89)(_BYTE *, uint64_t);
  char v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  objc_class *v97;
  char *v98;
  double *v99;
  id v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[4];
  int v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  objc_super v133;
  unint64_t v134;

  v119 = a1;
  v6 = type metadata accessor for PageGrid(0);
  v117 = *(_QWORD *)(v6 - 8);
  v118 = v6;
  __chkstk_darwin(v6);
  v116 = &v104[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v120 = type metadata accessor for Shelf.ContentType(0);
  v127 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v114 = &v104[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v125 = sub_10000DF3C((uint64_t *)&unk_100810B10);
  __chkstk_darwin(v125);
  v128 = &v104[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v10);
  v122 = &v104[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v121 = &v104[-v13];
  __chkstk_darwin(v14);
  v124 = &v104[-v15];
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v16);
  v115 = &v104[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v129 = &v104[-v19];
  v21 = __chkstk_darwin(v20);
  v126 = &v104[-v22];
  v23 = type metadata accessor for Shelf.ContentsMetadata(0, v21);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = &v104[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v123 = &v104[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = __chkstk_darwin(v30);
  v33 = &v104[-v32];
  v131 = type metadata accessor for ProductMediaMetadata(0, v31);
  v34 = *(_QWORD *)(v131 - 8);
  v35 = __chkstk_darwin(v131);
  v37 = &v104[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v130 = a5;
  ShelfLayoutContext.shelf.getter(v35);
  KeyPath = swift_getKeyPath(&unk_100689408);
  ReadOnlyLens.subscript.getter(KeyPath, v27);
  v39 = swift_release(KeyPath);
  v40 = *(void (**)(_BYTE *, uint64_t, __n128))(v28 + 8);
  v40(v33, v27, v39);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v24 + 88))(v26, v23) != enum case for Shelf.ContentsMetadata.productMedia(_:))
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 8))(v26, v23);
  (*(void (**)(_BYTE *, uint64_t))(v24 + 96))(v26, v23);
  v113 = v34;
  v41 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 32))(v37, v26, v131);
  v42 = ProductMediaMetadata.platform.getter(v41);
  v43 = ProductMediaMetadata.allPlatforms.getter();
  v108 = ProductMediaMetadata.platformDescription.getter();
  v110 = v44;
  v107 = ProductMediaMetadata.allPlatformsDescription.getter();
  v109 = v45;
  v46 = sub_10000DF3C(&qword_1007F5840);
  v47 = swift_allocObject(v46, 40, 7);
  *(_OWORD *)(v47 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v47 + 32) = v42;
  v134 = v47;
  specialized Array._endMutation()(v47);
  v48 = v134;
  v112 = v42;
  swift_retain(v42);
  v111 = v43;
  sub_1001068D0(v43, v48);
  v105 = v49;
  v50 = swift_bridgeObjectRelease(v48);
  v52 = (uint64_t)v121;
  v51 = (uint64_t)v122;
  ShelfLayoutContext.surroundingShelves.getter(v121, v122, v50);
  sub_100011088(v52, &qword_1007F4A68);
  v53 = v124;
  sub_10002955C(v51, (uint64_t)v124);
  v54 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48))(v53, 1, v27);
  v106 = v37;
  if (v54 == 1)
  {
    sub_100011088((uint64_t)v53, &qword_1007F4A68);
    v56 = v126;
    v55 = v127;
    v57 = *(double (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v127 + 56);
    v58 = v126;
    v59 = 1;
  }
  else
  {
    v61 = swift_getKeyPath(&unk_100689438);
    v56 = v126;
    ReadOnlyLens.subscript.getter(v61, v27);
    v62 = swift_release(v61);
    v40(v53, v27, v62);
    v55 = v127;
    v57 = *(double (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v127 + 56);
    v58 = v56;
    v59 = 0;
  }
  v63 = v120;
  v64.n128_f64[0] = v57(v58, v59, 1, v120);
  v65 = v123;
  ShelfLayoutContext.shelf.getter(v64);
  v66 = swift_getKeyPath(&unk_100689438);
  v67 = v129;
  ReadOnlyLens.subscript.getter(v66, v27);
  v68 = swift_release(v66);
  v40(v65, v27, v68);
  v57(v67, 0, 1, v63);
  v69 = v128;
  v70 = (uint64_t)&v128[*(int *)(v125 + 48)];
  sub_1000295A4((uint64_t)v56, (uint64_t)v128);
  sub_1000295A4((uint64_t)v67, v70);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v71((uint64_t)v69, 1, v63) == 1)
  {
    sub_100011088((uint64_t)v67, (uint64_t *)&unk_1007F53A0);
    v69 = v128;
    sub_100011088((uint64_t)v56, (uint64_t *)&unk_1007F53A0);
    v72 = v71(v70, 1, v63);
    v73 = v113;
    v74 = v112;
    v75 = v111;
    if (v72 == 1)
    {
      v76 = sub_100011088((uint64_t)v69, (uint64_t *)&unk_1007F53A0);
LABEL_23:
      v90 = 0;
LABEL_31:
      v92 = v116;
      v93 = ShelfLayoutContext.contentPageGrid.getter(v76);
      v94 = PageGrid.containerWidth.getter(v93);
      v95 = (*(uint64_t (**)(_BYTE *, uint64_t))(v117 + 8))(v92, v118);
      v96 = ShelfLayoutContext.traitCollection.getter(v95);
      v97 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
      v98 = (char *)objc_allocWithZone(v97);
      v99 = (double *)&v98[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
      *v99 = v94;
      v99[1] = 1.79769313e308;
      *(_QWORD *)&v98[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v96;
      v133.receiver = v98;
      v133.super_class = v97;
      v100 = objc_msgSendSuper2(&v133, "init");
      v101 = v90 & 1;
      v102 = v110;
      v103 = v109;
      sub_1003BE354(v74, v75, v108, v110, v107, v109, v101, v100, 0, v119);
      swift_release(v74);
      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease(v103);
      swift_bridgeObjectRelease(v102);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v106, v131);
    }
    goto LABEL_11;
  }
  v77 = v115;
  sub_1000295A4((uint64_t)v69, (uint64_t)v115);
  v78 = v71(v70, 1, v63);
  v73 = v113;
  v74 = v112;
  v75 = v111;
  if (v78 == 1)
  {
    sub_100011088((uint64_t)v129, (uint64_t *)&unk_1007F53A0);
    sub_100011088((uint64_t)v126, (uint64_t *)&unk_1007F53A0);
    (*(void (**)(_BYTE *, uint64_t))(v127 + 8))(v77, v63);
LABEL_11:
    sub_100011088((uint64_t)v69, (uint64_t *)&unk_100810B10);
    goto LABEL_12;
  }
  v85 = v127;
  v86 = v114;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v127 + 32))(v114, v70, v63);
  v87 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v88 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v86, v63, v87);
  v89 = *(void (**)(_BYTE *, uint64_t))(v85 + 8);
  v89(v86, v63);
  sub_100011088((uint64_t)v129, (uint64_t *)&unk_1007F53A0);
  sub_100011088((uint64_t)v126, (uint64_t *)&unk_1007F53A0);
  v89(v77, v63);
  v76 = sub_100011088((uint64_t)v69, (uint64_t *)&unk_1007F53A0);
  if ((v88 & 1) != 0)
    goto LABEL_23;
LABEL_12:
  if (!((unint64_t)v75 >> 62))
  {
    v79 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v74);
    swift_bridgeObjectRetain(v75);
    if (v79)
      goto LABEL_14;
LABEL_28:
    swift_bridgeObjectRelease(v75);
    goto LABEL_29;
  }
  if (v75 < 0)
    v91 = v75;
  else
    v91 = v75 & 0xFFFFFFFFFFFFFF8;
  swift_retain(v74);
  swift_bridgeObjectRetain(v75);
  v79 = _CocoaArrayWrapper.endIndex.getter(v91);
  if (!v79)
    goto LABEL_28;
LABEL_14:
  result = v79 - 1;
  if (__OFSUB__(v79, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v75 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v80 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v75);
LABEL_19:
    v81 = swift_bridgeObjectRelease(v75);
    v134 = v74;
    if (v80)
    {
      v132 = v80;
      v82 = type metadata accessor for MediaPlatform(0, v81);
      v83 = sub_10000E99C(&qword_1007FB9A0, (uint64_t (*)(uint64_t))&type metadata accessor for MediaPlatform, (uint64_t)&protocol conformance descriptor for MediaPlatform);
      swift_retain(v74);
      LOBYTE(v82) = dispatch thunk of static Equatable.== infix(_:_:)(&v134, &v132, v82, v83);
      swift_release(v80);
      v84 = v134;
      swift_release(v74);
      swift_release(v84);
      if ((v82 & 1) != 0)
        goto LABEL_23;
LABEL_30:
      v90 = v105 ^ 1;
      goto LABEL_31;
    }
LABEL_29:
    swift_release(v74);
    goto LABEL_30;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v80 = *(_QWORD *)(v75 + 8 * result + 32);
    swift_retain(v80);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ProductPageShelfSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension37ProductPageShelfSupplementaryProvider);
}

id sub_1003BDA44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  return sub_1001999F8(v0 + ((v1 + 16) & ~v1), 0, 0, 0, 0);
}

uint64_t sub_1003BDA98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  return sub_1001E07CC(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1003BDADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1003BDB3C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  return sub_1003BD080(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

double sub_1003BDBA4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7, void *a8, __n128 a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  void *v47;
  __n128 v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  objc_class *v55;
  id v56;
  void *v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  __n128 v68;
  char *v69;
  id v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  char *v97;
  id v98;
  _QWORD v99[5];
  _QWORD v100[3];
  objc_class *v101;
  void *v102;

  v98 = a8;
  v96 = a5;
  v90 = a4;
  v83 = a3;
  v13 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, a9);
  v89 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v87 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PlatformSelectorViewLayout(0);
  v94 = *(_QWORD *)(v15 - 8);
  v95 = v15;
  __chkstk_darwin(v15);
  v93 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = (_QWORD *)type metadata accessor for DirectionalTextAlignment(0);
  v85 = *(v86 - 1);
  __chkstk_darwin(v86);
  v84 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for BadgeDisplayStyle(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v88 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v97 = (char *)&v82 - v23;
  v24 = type metadata accessor for FloatingPointRoundingRule(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) != 0)
  {
    if (qword_1007F1D40 != -1)
      swift_once(&qword_1007F1D40, sub_10035774C);
    objc_msgSend((id)qword_100808FA8, "size");
    v29 = v26.n128_f64[0];
  }
  else
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v81 = a2;
      else
        v81 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v30 = _CocoaArrayWrapper.endIndex.getter(v81);
      v26 = swift_bridgeObjectRelease(a2);
    }
    else
    {
      v30 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v29 = 0.0;
    if (v30 > 1)
    {
      type metadata accessor for MediaPlatform(0, v26);
      v31 = sub_10000DF3C(&qword_1007F5840);
      v32 = swift_allocObject(v31, 40, 7);
      *(_OWORD *)(v32 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v32 + 32) = a1;
      v100[0] = v32;
      specialized Array._endMutation()(v32);
      v33 = v100[0];
      v34 = swift_retain(a1);
      v35 = static MediaPlatform.systemImages(platforms:)(v33, v34);
      swift_bridgeObjectRelease(v33);
      v96 = v83;
      a6 = v90;
      goto LABEL_10;
    }
  }
  type metadata accessor for MediaPlatform(0, v26);
  v35 = static MediaPlatform.systemImages(platforms:)(a2, v36);
LABEL_10:
  if (qword_1007F1D38 != -1)
    swift_once(&qword_1007F1D38, sub_100357360);
  v90 = v13;
  v37 = sub_1000117A8(v13, (uint64_t)qword_100808F90);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v100);
  v38 = (uint64_t)v101;
  v39 = v102;
  sub_100011064(v100, (uint64_t)v101);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v38);
  v40 = AnyDimension.value(in:rounded:)(v98, v28, v38, v39);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  sub_10035994C(v35, v40);
  v42 = v41;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v100);
  if ((unint64_t)v35 >> 62)
  {
    if (v35 < 0)
      v80 = v35;
    else
      v80 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v43 = _CocoaArrayWrapper.endIndex.getter(v80);
    swift_bridgeObjectRelease(v35);
  }
  else
  {
    v43 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v44 = v97;
  v45 = v43;
  v46 = v98;
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(v45, v98, v42, 0);
  v47 = (void *)sub_100358610(v35, v46);
  v48 = swift_bridgeObjectRelease(v35);
  v49 = v96;
  v96 = v47;
  v50 = (_QWORD *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v49, a6, v47, v37, v44, v46, v48);
  if (qword_1007F2300 != -1)
    swift_once(&qword_1007F2300, sub_1004147D0);
  v51 = type metadata accessor for FontUseCase(0);
  v52 = sub_1000117A8(v51, (uint64_t)qword_100854DE8);
  v53 = *(_QWORD *)(v51 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v20, v52, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v20, 0, 1, v51);
  v54 = v84;
  (*(void (**)(char *, _QWORD, _QWORD *))(v85 + 104))(v84, enum case for DirectionalTextAlignment.none(_:), v86);
  v55 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v56 = objc_allocWithZone(v55);
  v57 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v20, 0, 4, 0, 0, v54, 0, 0);
  objc_msgSend(v57, "setAttributedText:", v50);
  v86 = v50;
  if (qword_1007F1D40 != -1)
    swift_once(&qword_1007F1D40, sub_10035774C);
  objc_msgSend((id)qword_100808FA8, "size");
  v59 = v58;
  v60 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
  v61 = LayoutViewPlaceholder.init(representing:)(v29, v59);
  v62 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v87, v37, v90);
  v63 = v91;
  v64 = v88;
  v65 = v97;
  v66 = v92;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v97, v92);
  v101 = v55;
  v102 = &protocol witness table for UILabel;
  v100[0] = v57;
  v99[3] = v60;
  v99[4] = &protocol witness table for LayoutViewPlaceholder;
  v99[0] = v61;
  v67 = v57;
  v68 = swift_retain(v61);
  v69 = v93;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v62, v64, v100, v99, v68);
  v70 = v98;
  v71 = CGSize.subtracting(insets:)(objc_msgSend(v98, "pageMarginInsets"));
  v73 = v72;
  v74 = sub_10000E99C((unint64_t *)&qword_100809008, (uint64_t (*)(uint64_t))&type metadata accessor for PlatformSelectorViewLayout, (uint64_t)&protocol conformance descriptor for PlatformSelectorViewLayout);
  v75 = v70;
  v76 = v95;
  dispatch thunk of Measurable.measurements(fitting:in:)(v75, v95, v74, v71, v73);
  v78 = CGSize.adding(outsets:)(v77);

  swift_release(v61);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v69, v76);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v66);
  return v78;
}

uint64_t sub_1003BE354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, void *a8, unsigned __int8 a9, char *a10)
{
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(void);
  uint64_t v64;
  int v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  __n128 v72;
  void *v73;
  char *v74;
  int v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  char *v108;
  char *v109;
  uint64_t v110;
  _OWORD v111[2];
  __int128 v112;
  __int128 v113;
  uint64_t v114;

  v107 = a8;
  v105 = a5;
  v98 = type metadata accessor for AutomationSemantics(0);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v97 = (char *)&v91 - v19;
  v20 = type metadata accessor for BadgeDisplayStyle(0);
  v110 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v109 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v91 - v23;
  v25 = type metadata accessor for FloatingPointRoundingRule(0);
  v102 = *(_QWORD *)(v25 - 8);
  v103 = v25;
  v26 = __chkstk_darwin(v25);
  v101 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v106) = a7;
  if ((a7 & 1) == 0)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v33 = a2;
      else
        v33 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      v26 = swift_bridgeObjectRelease(a2);
      if (v34 > 1)
        goto LABEL_4;
    }
    else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
    {
LABEL_4:
      type metadata accessor for MediaPlatform(0, v26);
      v28 = sub_10000DF3C(&qword_1007F5840);
      v29 = swift_allocObject(v28, 40, 7);
      *(_OWORD *)(v29 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v29 + 32) = a1;
      *(_QWORD *)&v112 = v29;
      specialized Array._endMutation()(v29);
      v30 = v112;
      v31 = swift_retain(a1);
      v32 = static MediaPlatform.systemImages(platforms:)(v30, v31);
      swift_bridgeObjectRelease(v30);
      v105 = a3;
      a6 = a4;
      goto LABEL_10;
    }
  }
  type metadata accessor for MediaPlatform(0, v26);
  v32 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0)
      v89 = v32;
    else
      v89 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v36 = _CocoaArrayWrapper.endIndex.getter(v89);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v36 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v94 = a2;
  if (v36)
  {
    *(_QWORD *)&v112 = _swiftEmptyArrayStorage;
    v37 = &v112;
    specialized ContiguousArray.reserveCapacity(_:)(v36);
    if (v36 < 0)
    {
      __break(1u);
LABEL_52:
      swift_once(&qword_1007F1D40, sub_10035774C);
      goto LABEL_23;
    }
    v38 = 0;
    do
    {
      if ((v32 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v32);
      else
        v39 = *(id *)(v32 + 8 * v38 + 32);
      v40 = v39;
      ++v38;
      v41 = objc_msgSend(v39, "imageWithRenderingMode:", 2);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v43 = *(_QWORD *)(v112 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
      specialized ContiguousArray._endMutation()(v44);
    }
    while (v36 != v38);
    v10 = v112;
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    swift_bridgeObjectRelease(v32);
    v10 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v108 = a10;
  v37 = *(__int128 **)&a10[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_accessoryImageView];
  if ((v106 & 1) == 0)
  {
    v45 = 0;
    goto LABEL_25;
  }
  if (qword_1007F1D40 != -1)
    goto LABEL_52;
LABEL_23:
  v45 = (id)qword_100808FA8;
LABEL_25:
  objc_msgSend(v37, "setImage:", v45);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v90 = v10;
    else
      v90 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v46 = _CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v46 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v47 = v107;
  *(_QWORD *)&v108[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_numberOfBadges] = v46;
  v106 = (id)sub_100358610(v10, v47);
  if (qword_1007F1D38 != -1)
    swift_once(&qword_1007F1D38, sub_100357360);
  v93 = a9;
  v49 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v48);
  v104 = sub_1000117A8(v49, (uint64_t)qword_100808F90);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(&v112);
  v50 = *((_QWORD *)&v113 + 1);
  v51 = v114;
  sub_100011064(&v112, *((uint64_t *)&v113 + 1));
  v52 = v101;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v50);
  v53 = AnyDimension.value(in:rounded:)(v47, v52, v50, v51);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v52, v103);
  sub_10035994C(v10, v53);
  v55 = v54;
  swift_bridgeObjectRelease(v10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v112);
  v56 = sub_10000DF3C(&qword_100809010);
  v57 = v110;
  v58 = *(_QWORD *)(v110 + 72);
  v59 = *(unsigned __int8 *)(v110 + 80);
  v60 = (v59 + 32) & ~v59;
  v61 = swift_allocObject(v56, v60 + 3 * v58, v59 | 7);
  *(_OWORD *)(v61 + 16) = xmmword_10066F860;
  v92 = v61;
  v62 = v61 + v60;
  v63 = *(void (**)(void))(v57 + 104);
  LODWORD(v103) = enum case for BadgeDisplayStyle.above(_:);
  ((void (*)(uint64_t))v63)(v62);
  v100 = enum case for BadgeDisplayStyle.inline(_:);
  ((void (*)(uint64_t))v63)(v62 + v58);
  v64 = v62 + 2 * v58;
  *(_QWORD *)v64 = v55;
  *(_BYTE *)(v64 + 8) = 0;
  v65 = enum case for BadgeDisplayStyle.left(_:);
  v63();
  v66 = v57;
  v101 = (char *)OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
  v102 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel;
  v99 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel;
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v68 = 3;
  v91 = v62;
  v67(v24, v62, v20);
  while (1)
  {
    v74 = v109;
    v67(v109, (uint64_t)v24, v20);
    v75 = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v74, v20);
    if (v75 == v65)
    {
      v69 = v108;
      v70 = v102;
LABEL_31:
      v71 = *(id *)&v69[v70];
      goto LABEL_32;
    }
    if (v75 == (_DWORD)v103)
    {
      v69 = v108;
      v70 = (uint64_t)v101;
      goto LABEL_31;
    }
    if (v75 == v100)
    {
      v69 = v108;
      v70 = v99;
      goto LABEL_31;
    }
    v71 = *(id *)&v101[(_QWORD)v108];
    (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v20);
LABEL_32:
    v72 = swift_bridgeObjectRetain(a6);
    v73 = (void *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v105, a6, v106, v104, v24, v107, v72);
    objc_msgSend(v71, "setAttributedText:", v73, swift_bridgeObjectRelease(a6).n128_f64[0]);

    v66 = v110;
    (*(void (**)(char *, uint64_t))(v110 + 8))(v24, v20);
    v62 += v58;
    if (!--v68)
      break;
    v67(v24, v62, v20);
  }
  v76 = v92;
  swift_setDeallocating(v92);
  swift_arrayDestroy(v91, *(_QWORD *)(v76 + 16), v20);
  swift_deallocClassInstance(v76, 32, 7);
  if ((v93 & 1) != 0)
  {
    objc_msgSend(v107, "pageMarginInsets");
    objc_msgSend(v108, "setLayoutMargins:");
  }
  objc_msgSend(v108, "setNeedsLayout", v91);
  v112 = 0u;
  v113 = 0u;
  memset(v111, 0, sizeof(v111));
  v77 = v95;
  static AutomationSemantics.productPage(elementName:id:parentId:)(0xD000000000000010, 0x80000001006457A0, &v112, v111);
  sub_100011088((uint64_t)v111, &qword_1007F6E90);
  sub_100011088((uint64_t)&v112, &qword_1007F6E90);
  v78 = v94;
  *(_QWORD *)&v112 = v94;
  *((_QWORD *)&v112 + 1) = sub_10035842C;
  *(_QWORD *)&v113 = 0;
  swift_bridgeObjectRetain(v94);
  v79 = sub_10000DF3C(&qword_100809018);
  v80 = sub_100359A8C();
  v81 = BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v79, v80);
  v83 = v82;
  swift_bridgeObjectRelease(v78);
  *((_QWORD *)&v113 + 1) = &type metadata for String;
  *(_QWORD *)&v112 = v81;
  *((_QWORD *)&v112 + 1) = v83;
  v84 = v97;
  AutomationSemantics.attribute(key:value:)(0x6D726F6674616C70, 0xE900000000000073, &v112);
  v85 = *(void (**)(char *, uint64_t))(v96 + 8);
  v86 = v77;
  v87 = v98;
  v85(v86, v98);
  sub_100011088((uint64_t)&v112, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v84);

  return ((uint64_t (*)(char *, uint64_t))v85)(v84, v87);
}

uint64_t sub_1003BEC00(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t KeyPath;
  __n128 v36;
  void (*v37)(_BYTE *, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  int v51;
  uint64_t v52;
  double (*v53)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  __n128 v61;
  void (*v62)(_BYTE *, uint64_t, __n128);
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  __n128 v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  char v72;
  int v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE *v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  char v89;
  void (*v90)(_BYTE *, uint64_t);
  _BYTE *v91;
  int v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  double v98;
  __n128 (*v99)(_BYTE *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  objc_class *v103;
  char *v104;
  double *v105;
  id v106;
  double v107;
  double v108;
  double v109;
  __n128 v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double v115;
  double v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  NSString v121;
  id v122;
  _BYTE *v123;
  uint64_t v124;
  double v125;
  __n128 (*v126)(_BYTE *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  objc_class *v130;
  char *v131;
  double *v132;
  id v133;
  double v134;
  double v135;
  double v136;
  __n128 v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  double v142;
  double v143;
  void *v144;
  id v145;
  id v146;
  uint64_t result;
  _BYTE v148[12];
  int v149;
  void *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  unint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  uint64_t v172;
  _BYTE *v173;
  _BYTE *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  objc_super v178;
  objc_super v179;
  unint64_t v180;

  v164 = type metadata accessor for PageGrid(0);
  v162 = *(_QWORD *)(v164 - 8);
  v2 = __chkstk_darwin(v164);
  v163 = &v148[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v161 = type metadata accessor for ProductMedia.DescriptionPlacement(0, v2);
  v160 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v159 = &v148[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v172 = type metadata accessor for Shelf.ContentType(0);
  v170 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v156 = &v148[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v169 = sub_10000DF3C((uint64_t *)&unk_100810B10);
  __chkstk_darwin(v169);
  v171 = &v148[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v7);
  v166 = &v148[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v165 = &v148[-v10];
  __chkstk_darwin(v11);
  v168 = &v148[-v12];
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v13);
  v157 = &v148[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v173 = &v148[-v16];
  v18 = __chkstk_darwin(v17);
  v174 = &v148[-v19];
  v20 = type metadata accessor for Shelf.ContentsMetadata(0, v18);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v148[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v167 = &v148[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = __chkstk_darwin(v27);
  v30 = &v148[-v29];
  v175 = type metadata accessor for ProductMediaMetadata(0, v28);
  v31 = *(_QWORD *)(v175 - 8);
  v32 = __chkstk_darwin(v175);
  v34 = &v148[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v176 = a1;
  ShelfLayoutContext.shelf.getter(v32);
  KeyPath = swift_getKeyPath(&unk_100689408);
  ReadOnlyLens.subscript.getter(KeyPath, v24);
  v36 = swift_release(KeyPath);
  v37 = *(void (**)(_BYTE *, uint64_t, __n128))(v25 + 8);
  v37(v30, v24, v36);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v21 + 88))(v23, v20) != enum case for Shelf.ContentsMetadata.productMedia(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
    return 0;
  }
  (*(void (**)(_BYTE *, uint64_t))(v21 + 96))(v23, v20);
  v38 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v34, v23, v175);
  v39 = ProductMediaMetadata.platform.getter(v38);
  v40 = ProductMediaMetadata.allPlatforms.getter();
  v151 = (void *)ProductMediaMetadata.platformDescription.getter();
  v153 = v41;
  v150 = (void *)ProductMediaMetadata.allPlatformsDescription.getter();
  v152 = v42;
  v43 = sub_10000DF3C(&qword_1007F5840);
  v44 = swift_allocObject(v43, 40, 7);
  *(_OWORD *)(v44 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v44 + 32) = v39;
  v180 = v44;
  specialized Array._endMutation()(v44);
  v45 = v180;
  v155 = v39;
  swift_retain(v39);
  v158 = v40;
  sub_1001068D0(v40, v45);
  v149 = v46;
  v47 = swift_bridgeObjectRelease(v45);
  v49 = (uint64_t)v165;
  v48 = (uint64_t)v166;
  ShelfLayoutContext.surroundingShelves.getter(v165, v166, v47);
  sub_100011088(v49, &qword_1007F4A68);
  v50 = v168;
  sub_10002955C(v48, (uint64_t)v168);
  v51 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v50, 1, v24);
  v166 = v34;
  v154 = v31;
  if (v51 == 1)
  {
    sub_100011088((uint64_t)v50, &qword_1007F4A68);
    v52 = v170;
    v53 = *(double (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v170 + 56);
    v54 = v174;
    v55 = v174;
    v56 = 1;
  }
  else
  {
    v58 = swift_getKeyPath(&unk_100689438);
    v54 = v174;
    ReadOnlyLens.subscript.getter(v58, v24);
    v59 = swift_release(v58);
    v37(v50, v24, v59);
    v52 = v170;
    v53 = *(double (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v170 + 56);
    v55 = v54;
    v56 = 0;
  }
  v60 = v172;
  v61.n128_f64[0] = v53(v55, v56, 1, v172);
  v62 = v37;
  v63 = v167;
  ShelfLayoutContext.shelf.getter(v61);
  v64 = swift_getKeyPath(&unk_100689438);
  v65 = v173;
  ReadOnlyLens.subscript.getter(v64, v24);
  v66 = swift_release(v64);
  v62(v63, v24, v66);
  v53(v65, 0, 1, v60);
  v67 = v171;
  v68 = (uint64_t)&v171[*(int *)(v169 + 48)];
  sub_1000295A4((uint64_t)v54, (uint64_t)v171);
  sub_1000295A4((uint64_t)v65, v68);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v69((uint64_t)v67, 1, v60) != 1)
  {
    v76 = v52;
    v77 = v157;
    sub_1000295A4((uint64_t)v67, (uint64_t)v157);
    v78 = v69(v68, 1, v60);
    v71 = v155;
    if (v78 != 1)
    {
      v86 = v155;
      v87 = v156;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v76 + 32))(v156, v68, v60);
      v88 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
      v89 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v87, v60, v88);
      v90 = *(void (**)(_BYTE *, uint64_t))(v76 + 8);
      v91 = v87;
      v71 = v86;
      v90(v91, v60);
      sub_100011088((uint64_t)v173, (uint64_t *)&unk_1007F53A0);
      sub_100011088((uint64_t)v174, (uint64_t *)&unk_1007F53A0);
      v90(v77, v60);
      sub_100011088((uint64_t)v67, (uint64_t *)&unk_1007F53A0);
      v75 = v166;
      if ((v89 & 1) != 0)
      {
        v72 = 0;
        v73 = 1;
        v74 = v161;
        goto LABEL_24;
      }
LABEL_12:
      v79 = v158;
      if (v158 >> 62)
      {
        if ((v158 & 0x8000000000000000) != 0)
          v93 = v158;
        else
          v93 = v158 & 0xFFFFFFFFFFFFFF8;
        swift_retain(v71);
        swift_bridgeObjectRetain(v79);
        v74 = _CocoaArrayWrapper.endIndex.getter(v93);
        if (v74)
        {
LABEL_14:
          v80 = v74 - 1;
          if (__OFSUB__(v74, 1))
          {
            __break(1u);
          }
          else if ((v79 & 0xC000000000000001) == 0)
          {
            if ((v80 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v80 < *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v81 = *(_QWORD *)(v79 + 8 * v80 + 32);
              swift_retain(v81);
              goto LABEL_19;
            }
            __break(1u);
            goto LABEL_42;
          }
          v81 = specialized _ArrayBuffer._getElementSlowPath(_:)(v80, v79);
LABEL_19:
          v82 = swift_bridgeObjectRelease(v79);
          v180 = v71;
          if (v81)
          {
            v177 = v81;
            v83 = type metadata accessor for MediaPlatform(0, v82);
            v84 = sub_10000E99C(&qword_1007FB9A0, (uint64_t (*)(uint64_t))&type metadata accessor for MediaPlatform, (uint64_t)&protocol conformance descriptor for MediaPlatform);
            swift_retain(v71);
            LOBYTE(v83) = dispatch thunk of static Equatable.== infix(_:_:)(&v180, &v177, v83, v84);
            swift_release(v81);
            v85 = v180;
            swift_release(v71);
            swift_release(v85);
            v74 = v161;
            if ((v83 & 1) != 0)
            {
              v72 = 0;
              v73 = 1;
              goto LABEL_24;
            }
LABEL_31:
            v73 = 0;
            v92 = v149;
            v72 = v149 ^ 1;
            goto LABEL_32;
          }
LABEL_30:
          swift_release(v71);
          v74 = v161;
          goto LABEL_31;
        }
      }
      else
      {
        v74 = *(_QWORD *)((v158 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain(v71);
        swift_bridgeObjectRetain(v79);
        if (v74)
          goto LABEL_14;
      }
      swift_bridgeObjectRelease(v79);
      goto LABEL_30;
    }
    sub_100011088((uint64_t)v173, (uint64_t *)&unk_1007F53A0);
    sub_100011088((uint64_t)v174, (uint64_t *)&unk_1007F53A0);
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v77, v60);
LABEL_11:
    sub_100011088((uint64_t)v67, (uint64_t *)&unk_100810B10);
    v75 = v166;
    goto LABEL_12;
  }
  sub_100011088((uint64_t)v65, (uint64_t *)&unk_1007F53A0);
  sub_100011088((uint64_t)v54, (uint64_t *)&unk_1007F53A0);
  v70 = v69(v68, 1, v60);
  v71 = v155;
  if (v70 != 1)
    goto LABEL_11;
  sub_100011088((uint64_t)v67, (uint64_t *)&unk_1007F53A0);
  v72 = 0;
  v73 = 1;
  v74 = v161;
  v75 = v166;
LABEL_24:
  v92 = v149;
LABEL_32:
  v94 = v159;
  ProductMediaMetadata.descriptionPlacement(when:)(v73 & (v92 ^ 1u));
  v95 = (*(uint64_t (**)(_BYTE *, uint64_t))(v160 + 88))(v94, v74);
  if ((_DWORD)v95 == enum case for ProductMedia.DescriptionPlacement.top(_:))
  {
    v96 = v163;
    v97 = ShelfLayoutContext.contentPageGrid.getter(v95);
    v98 = PageGrid.containerWidth.getter(v97);
    v99 = *(__n128 (**)(_BYTE *, uint64_t))(v162 + 8);
    v100 = v164;
    v101 = ((uint64_t (*)(_BYTE *, uint64_t))v99)(v96, v164);
    v102 = ShelfLayoutContext.traitCollection.getter(v101);
    v103 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    v104 = (char *)objc_allocWithZone(v103);
    v105 = (double *)&v104[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
    *v105 = v98;
    v105[1] = 1.79769313e308;
    *(_QWORD *)&v104[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v102;
    v178.receiver = v104;
    v178.super_class = v103;
    v106 = objc_msgSendSuper2(&v178, "init");
    v107 = ShelfLayoutContext.supplementaryPageGrid.getter(v106);
    v108 = static CGFloat.allColumns.getter(v107);
    v109 = PageGrid.componentMeasuringSize(spanning:)(v108);
    v110 = v99(v96, v100);
    v111 = v72 & 1;
    v112 = v158;
    v113 = v153;
    v114 = v152;
    v110.n128_f64[0] = v109;
    sub_1003BDBA4(v71, v158, v151, v153, v150, v152, v111, v106, v110);
    v116 = v115;

    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v113);
    swift_bridgeObjectRelease(v112);
    v117 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v118 = objc_msgSend(v117, "fractionalWidthDimension:", 1.0);
    v119 = objc_msgSend(v117, "absoluteDimension:", v116);
    v120 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v118, v119);

    v121 = String._bridgeToObjectiveC()();
    v122 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v120, v121, 1);
LABEL_36:
    v57 = v122;
    swift_release(v71);

    (*(void (**)(_BYTE *, uint64_t))(v154 + 8))(v75, v175);
    return (uint64_t)v57;
  }
  if ((_DWORD)v95 == enum case for ProductMedia.DescriptionPlacement.bottom(_:))
  {
    v123 = v163;
    v124 = ShelfLayoutContext.contentPageGrid.getter(v95);
    v125 = PageGrid.containerWidth.getter(v124);
    v126 = *(__n128 (**)(_BYTE *, uint64_t))(v162 + 8);
    v127 = v164;
    v128 = ((uint64_t (*)(_BYTE *, uint64_t))v126)(v123, v164);
    v129 = ShelfLayoutContext.traitCollection.getter(v128);
    v130 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    v131 = (char *)objc_allocWithZone(v130);
    v132 = (double *)&v131[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
    *v132 = v125;
    v132[1] = 1.79769313e308;
    *(_QWORD *)&v131[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v129;
    v179.receiver = v131;
    v179.super_class = v130;
    v133 = objc_msgSendSuper2(&v179, "init");
    v134 = ShelfLayoutContext.supplementaryPageGrid.getter(v133);
    v135 = static CGFloat.allColumns.getter(v134);
    v136 = PageGrid.componentMeasuringSize(spanning:)(v135);
    v137 = v126(v123, v127);
    v138 = v72 & 1;
    v139 = v158;
    v140 = v153;
    v141 = v152;
    v137.n128_f64[0] = v136;
    sub_1003BDBA4(v71, v158, v151, v153, v150, v152, v138, v133, v137);
    v143 = v142;

    swift_bridgeObjectRelease(v141);
    swift_bridgeObjectRelease(v140);
    swift_bridgeObjectRelease(v139);
    v144 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v145 = objc_msgSend(v144, "fractionalWidthDimension:", 1.0);
    v146 = objc_msgSend(v144, "absoluteDimension:", v143);
    v120 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v145, v146);

    v121 = String._bridgeToObjectiveC()();
    v122 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v120, v121, 5);
    goto LABEL_36;
  }
LABEL_42:
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v74, v74);
  __break(1u);
  return result;
}

id sub_1003BF9AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  id v33;
  void *v34;
  __n128 v35;
  double v36;
  id v37;
  __n128 v38;
  uint64_t KeyPath;
  __n128 v40;
  double (*v41)(char *, uint64_t, __n128);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int v65;
  __n128 v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, __n128);
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  int v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  NSString v80;
  void *v81;
  char *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, _QWORD, uint64_t);
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v98;
  void *v99;
  void *v100;
  double v101;
  id v102;
  id v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  NSString v111;
  void *v112;
  id v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;

  v115 = a2;
  v123 = sub_10000DF3C(&qword_1008046B0);
  __chkstk_darwin(v123);
  v124 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v4);
  v121 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v120 = (char *)&v114 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v114 - v9;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v11);
  v118 = (uint64_t)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v119 = (uint64_t)&v114 - v14;
  __chkstk_darwin(v15);
  v129 = (uint64_t)&v114 - v16;
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v114 - v22;
  v126 = type metadata accessor for Shelf.ContentType(0);
  v128 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v116 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v117 = (char *)&v114 - v26;
  __chkstk_darwin(v27);
  v122 = (char *)&v114 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v114 - v30;
  v32 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v33 = objc_msgSend(v32, "fractionalWidthDimension:", 1.0);
  v34 = (void *)ShelfLayoutContext.traitCollection.getter(v33);
  v36 = static ComponentSeparator.thickness(compatibleWith:)(v34, v35);

  v37 = objc_msgSend(v32, "absoluteDimension:", v36);
  v125 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v33, v37);

  ShelfLayoutContext.shelf.getter(v38);
  KeyPath = swift_getKeyPath(&unk_100689438);
  v130 = v31;
  ReadOnlyLens.subscript.getter(KeyPath, v17);
  v40 = swift_release(KeyPath);
  v41 = *(double (**)(char *, uint64_t, __n128))(v18 + 8);
  v42.n128_f64[0] = v41(v23, v17, v40);
  v44 = (uint64_t)v120;
  v43 = (uint64_t)v121;
  v127 = a1;
  ShelfLayoutContext.surroundingShelves.getter(v120, v121, v42);
  sub_100011088(v43, &qword_1007F4A68);
  sub_10002955C(v44, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) == 1)
  {
    sub_100011088((uint64_t)v10, &qword_1007F4A68);
    v45 = 1;
    v46 = v129;
  }
  else
  {
    v47 = swift_getKeyPath(&unk_100689438);
    v46 = v129;
    ReadOnlyLens.subscript.getter(v47, v17);
    v48 = swift_release(v47);
    v41(v10, v17, v48);
    v45 = 0;
  }
  v49 = v128;
  v50 = v126;
  v51.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v46, v45, 1, v126);
  ShelfLayoutContext.shelf.getter(v51);
  v52 = swift_getKeyPath(&unk_100689468);
  ReadOnlyLens.subscript.getter(v52, v17);
  v53 = swift_release(v52);
  v41(v20, v17, v53);
  v54 = v134;
  v55 = v124;
  v56 = v122;
  if (v134)
  {
    v57 = v133;
    swift_bridgeObjectRelease(v134);
    v58 = HIBYTE(v54) & 0xF;
    if ((v54 & 0x2000000000000000) == 0)
      v58 = v57 & 0xFFFFFFFFFFFFLL;
    v59 = v58 != 0;
  }
  else
  {
    v59 = 0;
  }
  v60 = enum case for Shelf.ContentType.productMediaItem(_:);
  v61 = *(char **)(v49 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v61)(v56, enum case for Shelf.ContentType.productMediaItem(_:), v50);
  v62 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v133, v50, v62);
  dispatch thunk of RawRepresentable.rawValue.getter(&v131, v50, v62);
  v63 = v134;
  v64 = v132;
  v121 = v61;
  if (v133 == v131 && v134 == v132)
  {
    v65 = 1;
    v64 = v134;
  }
  else
  {
    v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v133, v134, v131, v132, 0);
  }
  swift_bridgeObjectRelease(v63);
  v66 = swift_bridgeObjectRelease(v64);
  v67 = v128;
  v68 = *(void (**)(char *, uint64_t, __n128))(v128 + 8);
  v68(v56, v50, v66);
  v69 = (uint64_t)&v55[*(int *)(v123 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v55, v130, v50);
  sub_1000295A4(v129, v69);
  v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v71 = v70(v69, 1, v50);
  v123 = v69;
  if (v71 == 1)
  {
    v72 = (*(uint64_t (**)(char *, uint64_t))(v67 + 88))(v55, v50);
  }
  else
  {
    v73 = v119;
    sub_1000295A4(v69, v119);
    v74 = *(unsigned int (**)(uint64_t, uint64_t))(v67 + 88);
    if (v74(v73, v50) == (_DWORD)v60)
    {
      if (((v59 | v65) & 1) == 0)
      {
        type metadata accessor for SeparatorSupplementaryView(0);
        static UICollectionReusableView.elementKind.getter();
        v76 = v75;
        v77 = v115[3];
        v78 = v115[4];
        sub_100011064(v115, v77);
        v79 = ShelfLayoutSpacingProvider.topPaddingValue(in:)(v127, v77, v78) * 0.5;
        v80 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v76);
        v81 = (void *)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem);
        v82 = v55;
        v83 = v125;
        v84 = objc_msgSend(v81, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v125, v80, 1, 0.0, v79);

        sub_100011088(v129, (uint64_t *)&unk_1007F53A0);
        ((void (*)(char *, uint64_t))v68)(v130, v50);
        sub_100011088(v123, (uint64_t *)&unk_1007F53A0);
        ((void (*)(char *, uint64_t))v68)(v82, v50);
        return v84;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v68)(v73, v50);
    }
    v72 = v74((uint64_t)v55, v50);
  }
  if (v72 != (_DWORD)v60)
  {

    sub_100011088(v129, (uint64_t *)&unk_1007F53A0);
    ((void (*)(char *, uint64_t))v68)(v130, v50);
    v88 = &qword_1008046B0;
    v89 = (uint64_t)v55;
LABEL_28:
    sub_100011088(v89, v88);
    return 0;
  }
  v85 = v129;
  v86 = v118;
  sub_1000295A4(v129, v118);
  if (v70(v86, 1, v50) == 1)
  {

    sub_100011088(v85, (uint64_t *)&unk_1007F53A0);
    ((void (*)(char *, uint64_t))v68)(v130, v50);
    sub_100011088(v86, (uint64_t *)&unk_1007F53A0);
    v87 = v123;
LABEL_27:
    v88 = (uint64_t *)&unk_1007F53A0;
    v89 = v87;
    goto LABEL_28;
  }
  v90 = v85;
  v91 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v117, v86, v50);
  v92 = v116;
  v93 = (void (*)(char *, _QWORD, uint64_t))v121;
  ((void (*)(char *, uint64_t, uint64_t))v121)(v116, v60, v50);
  v94 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v95 = dispatch thunk of static Equatable.== infix(_:_:)(v91, v92, v50, v94);
  ((void (*)(char *, uint64_t))v68)(v92, v50);
  v87 = v123;
  if ((v95 & 1) != 0)
    goto LABEL_26;
  v93(v92, enum case for Shelf.ContentType.productBadge(_:), v50);
  v96 = dispatch thunk of static Equatable.== infix(_:_:)(v91, v92, v50, v94);
  ((void (*)(char *, uint64_t))v68)(v92, v50);
  if ((v96 & 1) != 0)
    goto LABEL_26;
  v98 = v90;
  if (qword_1007F1ED0 != -1)
    swift_once(&qword_1007F1ED0, sub_1003BC210);
  if ((sub_1002467F0(v91, qword_1008543A8) & 1) == 0)
  {
LABEL_26:

    ((void (*)(uint64_t, uint64_t))v68)(v91, v50);
    sub_100011088(v90, (uint64_t *)&unk_1007F53A0);
    ((void (*)(char *, uint64_t))v68)(v130, v50);
    goto LABEL_27;
  }
  v99 = (void *)sub_1003BEC00(v127);
  if (v99)
  {
    v100 = v99;
    v101 = 0.0;
    if (objc_msgSend(v99, "alignment") == (id)1)
    {
      v102 = objc_msgSend(v100, "layoutSize");
      v103 = objc_msgSend(v102, "heightDimension");

      objc_msgSend(v103, "dimension");
      v101 = v104;

    }
    v105 = v87;

  }
  else
  {
    v105 = v87;
    v101 = 0.0;
  }
  type metadata accessor for SeparatorSupplementaryView(0);
  static UICollectionReusableView.elementKind.getter();
  v107 = v106;
  v108 = v115[3];
  v109 = v115[4];
  sub_100011064(v115, v108);
  v110 = -(v101 + ShelfLayoutSpacingProvider.topPaddingValue(in:)(v127, v108, v109));
  v111 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v107);
  v112 = (void *)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem);
  v113 = v125;
  v84 = objc_msgSend(v112, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v125, v111, 1, 0.0, v110);

  ((void (*)(uint64_t, uint64_t))v68)(v91, v50);
  sub_100011088(v98, (uint64_t *)&unk_1007F53A0);
  ((void (*)(char *, uint64_t))v68)(v130, v50);
  sub_100011088(v105, (uint64_t *)&unk_1007F53A0);
  return v84;
}

uint64_t sub_1003C042C(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t KeyPath;
  __n128 v23;
  void (*v24)(char *, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  __n128 v30;
  char v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t result;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;

  v3 = type metadata accessor for ProductReview.ReviewSource(0, a2);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Shelf.ContentType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - v10;
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v55 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v52 - v20;
  v56 = a1;
  ShelfLayoutContext.shelf.getter(v19);
  KeyPath = swift_getKeyPath(&unk_100689438);
  ReadOnlyLens.subscript.getter(KeyPath, v12);
  v23 = swift_release(KeyPath);
  v24 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
  v24(v21, v12, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Shelf.ContentType.productReview(_:), v5);
  v25 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v58, v5, v25);
  dispatch thunk of RawRepresentable.rawValue.getter(&v61, v5, v25);
  v26 = *((_QWORD *)&v58 + 1);
  v27 = v61;
  if (v58 == v61)
  {
    v28 = swift_bridgeObjectRelease_n(*((_QWORD *)&v58 + 1), 2);
    v29 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v29(v8, v5, v28);
    ((void (*)(char *, uint64_t))v29)(v11, v5);
  }
  else
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, *((_QWORD *)&v58 + 1), v61, *((_QWORD *)&v61 + 1), 0);
    swift_bridgeObjectRelease(v26);
    v32 = swift_bridgeObjectRelease(*((_QWORD *)&v27 + 1));
    v33 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v33(v8, v5, v32);
    ((void (*)(char *, uint64_t))v33)(v11, v5);
    result = 0;
    if ((v31 & 1) == 0)
      return result;
  }
  ShelfLayoutContext.shelf.getter(v30);
  v35 = swift_getKeyPath(&unk_100689468);
  ReadOnlyLens.subscript.getter(v35, v12);
  v36 = swift_release(v35);
  v24(v17, v12, v36);
  v37 = *((_QWORD *)&v58 + 1);
  v38 = swift_bridgeObjectRelease(*((_QWORD *)&v58 + 1));
  if (!v37)
    return 0;
  v39 = v55;
  ShelfLayoutContext.shelf.getter(v38);
  v40 = swift_getKeyPath(&unk_100689498);
  ReadOnlyLens.subscript.getter(v40, v12);
  v41 = swift_release(v40);
  v24(v39, v12, v41);
  v42 = v61;
  if (*(_QWORD *)(v61 + 16))
  {
    sub_100011020(v61 + 32, (uint64_t)&v58);
  }
  else
  {
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
  }
  v43 = v54;
  swift_bridgeObjectRelease(v42);
  if (*((_QWORD *)&v59 + 1))
  {
    v44 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v46 = type metadata accessor for ProductReview(0, v45);
    v47 = swift_dynamicCast(&v57, &v58, v44, v46, 6);
    if ((v47 & 1) != 0)
    {
      v48 = v57;
      ProductReview.source.getter(v47);
      v49 = swift_release(v48);
      v51 = v52;
      v50 = v53;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, __n128))(v52 + 88))(v43, v53, v49) == enum case for ProductReview.ReviewSource.editorsChoice(_:))
      {
        (*(void (**)(_QWORD *, uint64_t))(v51 + 96))(v43, v50);
        swift_release(*v43);
        return 0;
      }
      (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v43, v50);
    }
  }
  else
  {
    sub_100011088((uint64_t)&v58, (uint64_t *)&unk_1008027C0);
  }
  return 1;
}

id sub_1003C0840(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  __n128 v16;
  id v17;
  uint64_t KeyPath;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = type metadata accessor for Shelf.ContentsMetadata(0, a2);
  v3 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ProductReviewsMetadata(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (void (*)(char *, char *, uint64_t))((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = 0;
  if ((sub_1003C042C(a1, v13) & 1) != 0)
  {
    v34 = v15;
    v35 = v12;
    v36 = v11;
    ShelfLayoutContext.shelf.getter(v16);
    KeyPath = swift_getKeyPath(&unk_100689408);
    ReadOnlyLens.subscript.getter(KeyPath, v6);
    v19 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v19);
    v20 = v37;
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v37) == enum case for Shelf.ContentsMetadata.productReviews(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v20);
      v22 = v34;
      v21 = v35;
      v23 = v36;
      v24 = (*(uint64_t (**)(_QWORD, char *, uint64_t))(v35 + 32))(v34, v5, v36);
      if ((ProductReviewsMetadata.hasReviewSummary.getter(v24) & 1) != 0)
      {
        type metadata accessor for InteractiveProductReviewsShelfHeaderView();
        v25 = sub_1001E0DDC(v22);
        static UICollectionReusableView.elementKind.getter();
        v27 = v26;
        v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v27);
        v17 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v25, v28, 1);

        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v21 + 8))(v22, v23);
        return v17;
      }
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v21 + 8))(v22, v23);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
    }
    type metadata accessor for ProductReviewsShelfHeaderView();
    v29 = sub_10019A8DC(a1, 0, 0);
    static UICollectionReusableView.elementKind.getter();
    v31 = v30;
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v17 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v29, v32, 1);

  }
  return v17;
}

void sub_1003C0B00(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1003BC534(a1, *(_QWORD *)(v2 + 24), a2, *(double *)(v2 + 32));
}

uint64_t sub_1003C0B1C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  char v28;
  uint64_t KeyPath;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  void (*v37)(uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, __n128);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v65 = a1;
  v3 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v3);
  v64 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v63 = (char *)&v58 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - v8;
  v10 = type metadata accessor for Shelf.ContentType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v62 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - v20;
  v22 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1003C042C(a2, v24) & 1) != 0)
  {
    v28 = 0;
    return v28 & 1;
  }
  v60 = v15;
  v61 = v9;
  ShelfLayoutContext.shelf.getter(v27);
  KeyPath = swift_getKeyPath(&unk_100689438);
  ReadOnlyLens.subscript.getter(KeyPath, v22);
  v30 = swift_release(KeyPath);
  v59 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
  v59(v26, v22, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v18, enum case for Shelf.ContentType.productMediaItem(_:), v10);
  v31 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v68, v10, v31);
  dispatch thunk of RawRepresentable.rawValue.getter(&v66, v10, v31);
  v32 = v69;
  v33 = v67;
  if (v68 == v66 && v69 == v67)
  {
    v34 = 1;
    v33 = v69;
  }
  else
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v69, v66, v67, 0);
  }
  swift_bridgeObjectRelease(v32);
  v35 = swift_bridgeObjectRelease(v33);
  v36 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v36(v18, v10, v35);
  ((void (*)(char *, uint64_t))v36)(v21, v10);
  if ((v34 & 1) == 0)
    goto LABEL_14;
  v37 = (void (*)(uint64_t, uint64_t))v36;
  v38 = objc_msgSend(v65, "elementKind");
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v44 = v42;
  if (v39 == v43 && v41 == v42)
  {
    v45 = swift_bridgeObjectRelease_n(v41, 2);
    v46 = (uint64_t)v61;
    goto LABEL_12;
  }
  v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
  swift_bridgeObjectRelease(v41);
  v45 = swift_bridgeObjectRelease(v44);
  v46 = (uint64_t)v61;
  if ((v47 & 1) == 0)
  {
LABEL_14:
    v28 = 1;
    return v28 & 1;
  }
LABEL_12:
  v49 = (uint64_t)v63;
  v48 = (uint64_t)v64;
  ShelfLayoutContext.surroundingShelves.getter(v63, v64, v45);
  sub_100011088(v48, &qword_1007F4A68);
  sub_10002955C(v49, v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v46, 1, v22) == 1)
  {
    sub_100011088(v46, &qword_1007F4A68);
    goto LABEL_14;
  }
  v51 = swift_getKeyPath(&unk_100689438);
  v52 = v62;
  ReadOnlyLens.subscript.getter(v51, v22);
  v53 = swift_release(v51);
  v59((char *)v46, v22, v53);
  v54 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v52, v10);
  if (qword_1007F1ED0 != -1)
    swift_once(&qword_1007F1ED0, sub_1003BC210);
  v55 = sub_1002467F0(v54, qword_1008543A8);
  v56 = v54;
  v57 = v55;
  v37(v56, v10);
  v28 = v57 ^ 1;
  return v28 & 1;
}

uint64_t sub_1003C0F84(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

id (*sub_1003C1020(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_disableAdvertRotation, a1, 33, 0);
  return sub_1003C1068;
}

id sub_1003C1068(uint64_t a1, char a2)
{
  id result;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView);
    v7 = *(void **)(v6 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton);
    if (v7)
    {
      objc_msgSend(v7, "addTarget:action:forControlEvents:");
      v5 = *(_QWORD *)(a1 + 24);
    }
    return objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton), "addTarget:action:forControlEvents:", v5, "disableAdvertRotationTap", 64);
  }
  return result;
}

char *sub_1003C1104(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  double left;
  double bottom;
  double right;
  char *v19;
  objc_super v21;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_preferredImageSizes] = _swiftEmptyDictionarySingleton;
  v13 = &v11[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_disableAdvertRotation];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator] = 0;
  v14 = &v11[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for AdvertsSearchResultContentView();
  v15 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v19 = (char *)v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView]);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots]);

  return v19;
}

id sub_1003C1358()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  unint64_t v10;
  double v11;
  double v12;
  double v13;
  char *v14;
  __n128 v15;
  __n128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v42[24];
  objc_super v43;
  CGRect v44;
  CGRect v45;

  v1 = v0;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (objc_class *)type metadata accessor for AdvertsSearchResultContentView();
  v43.receiver = v1;
  v43.super_class = v6;
  objc_msgSendSuper2(&v43, "layoutSubviews");
  v7 = LayoutMarginsAware<>.layoutFrame.getter(v6);
  v9 = v8;
  v11 = *(double *)&v10;
  v13 = v12;
  v14 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView];
  v15.n128_u64[0] = v10;
  sub_10015329C(v15, v12);
  objc_msgSend(v14, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1));
  static StandardSearchResultContentViewMetrics.bottomMargin.getter(v16);
  v17 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v18 = sub_10000DF3C(&qword_1007F5840);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v19 + 32) = v17;
  v20 = v17;
  v21 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v19);
  v22 = sub_10024E2F8();
  dispatch thunk of AnyDimension.rawValue(in:)(v21, v2, v22);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v44.origin.x = v7;
  v44.origin.y = v9;
  v44.size.width = v11;
  v44.size.height = v13;
  CGRectGetMinX(v44);
  objc_msgSend(v14, "frame");
  CGRectGetMaxY(v45);
  v24 = *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_title];
  v23 = *(void (**)(_QWORD, _QWORD))&v14[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_title + 8];
  v25 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel], "text", swift_bridgeObjectRetain(v23).n128_f64[0]);
  if (v25)
  {
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0;
  }
  v30 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_descriptionLabel], "text");
  if (v30)
  {
    v31 = v30;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = (uint64_t *)(*(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_metadataRibbonView]
                  + OBJC_IVAR____TtC22SubscribePageExtension18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v35, v42, 0, 0);
  v36 = *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchTagsRibbonView];
  v37 = *v35;
  v38 = *(_QWORD *)(v36 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  swift_bridgeObjectRetain(v38);
  v39 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRetain(v37).n128_f64[0]);
  sub_1003C3B34(v24, v23, v27, v29, v32, v34, v37, v38, v11, v13, v39);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v38);

  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v29);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots], "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1));
}

void sub_1003C1780(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  id v47;
  uint64_t KeyPath;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  uint64_t (*v61)(char *, uint64_t, __n128);
  uint64_t v62;
  __n128 v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  void *v71;
  id v72;
  __n128 v73;
  _QWORD v74[2];
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t ObjectType;
  uint64_t v91;
  _QWORD v92[7];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v84 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LockupMediaLayout.DisplayType(0, v7);
  v86 = *(_QWORD *)(v10 - 8);
  v87 = v10;
  __chkstk_darwin(v10);
  v85 = (uint64_t)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v12);
  v14 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v15);
  v17 = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PageGrid(0);
  v88 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v89 = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AdvertRotationControllerProvider(0);
  BaseObjectGraph.optional<A>(_:)(v92, v20, v20);
  v21 = v92[0];
  if (!v92[0])
    return;
  v82 = type metadata accessor for ObjectGraph(0);
  v22 = swift_dynamicCastClassUnconditional(a2, v82, 0, 0, 0);
  v23 = AdvertRotationControllerProvider.advertController(for:asPartOf:)(a1, v22);
  if (!v23)
  {
LABEL_11:
    swift_release(v21);
    return;
  }
  v81 = v14;
  v25 = v23;
  dispatch thunk of AdvertRotationController.currentAdvert.getter(v92, v24);
  v26 = sub_10000DF3C(&qword_10080C0D0);
  v27 = type metadata accessor for MixedMediaLockup(0);
  if ((swift_dynamicCast(&v91, v92, v26, v27, 6) & 1) == 0)
  {
    swift_release(v25);
    goto LABEL_11;
  }
  v78 = v25;
  v79 = v6;
  v28 = v91;
  v29 = static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
  v30 = PageGrid.columnWidth.getter(v29);
  v31 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView];
  *(double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = v30;
  objc_msgSend(v31, "setNeedsLayout");
  v32 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
  v33 = swift_dynamicCastClassUnconditional(a2, v82, 0, 0, 0);
  sub_1000303E4(v28, (uint64_t)v17, v33);
  sub_100011088((uint64_t)v17, &qword_1007F4A50);
  v34 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v36 = (void *)static UIColor.defaultBackground.getter(v34, v35);
  objc_msgSend(v3, "setBackgroundColor:", v36);

  v83 = v28;
  v38 = MixedMediaLockup.screenshots.getter(v37);
  v39 = v38;
  if ((unint64_t)v38 >> 62)
  {
    if (v38 >= 0)
      v38 &= 0xFFFFFFFFFFFFFF8uLL;
    v42 = _CocoaArrayWrapper.endIndex.getter(v38);
    v40 = v79;
    if (v42)
      goto LABEL_6;
LABEL_15:
    swift_bridgeObjectRelease(v39);
    v80 = 0;
    goto LABEL_16;
  }
  v40 = v79;
  if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_6:
  if ((v39 & 0xC000000000000001) != 0)
  {
    v80 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v39);
  }
  else
  {
    if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    v80 = *(_QWORD *)(v39 + 32);
    swift_retain(v80);
  }
  swift_bridgeObjectRelease(v39);
LABEL_16:
  v43 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots];
  v44 = MixedMediaLockup.trailers.getter(v41);
  v39 = v44;
  if ((unint64_t)v44 >> 62)
  {
    if (v44 >= 0)
      v44 &= 0xFFFFFFFFFFFFFF8uLL;
    v45 = _CocoaArrayWrapper.endIndex.getter(v44);
  }
  else
  {
    v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v77 = v18;
  v76 = v43;
  if (v45)
  {
    if ((v39 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_56;
      }
      v75 = *(void **)(v39 + 32);
      swift_retain(v75);
      goto LABEL_22;
    }
LABEL_54:
    v75 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v39);
LABEL_22:
    v46 = swift_bridgeObjectRelease(v39);
    goto LABEL_24;
  }
  v46 = swift_bridgeObjectRelease(v39);
  v75 = 0;
LABEL_24:
  v47 = (id)ASKDeviceTypeGetCurrent(v46);
  KeyPath = swift_getKeyPath(&unk_100689728);
  ItemLayoutContext.subscript.getter(v92);
  swift_release(KeyPath);
  v49 = (void *)v92[0];
  sub_100477C3C((uint64_t)v47, (uint64_t)v81);

  v51 = MixedMediaLockup.screenshots.getter(v50);
  v39 = v51;
  if ((unint64_t)v51 >> 62)
  {
    if (v51 >= 0)
      v51 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v51))
    {
LABEL_26:
      if ((v39 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_58;
        }
        v47 = *(id *)(v39 + 32);
        swift_retain(v47);
        goto LABEL_29;
      }
LABEL_56:
      v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v39);
LABEL_29:
      swift_bridgeObjectRelease(v39);
      goto LABEL_37;
    }
  }
  else if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_26;
  }
  swift_bridgeObjectRelease(v39);
  v47 = 0;
LABEL_37:
  v53 = MixedMediaLockup.trailers.getter(v52);
  v39 = v53;
  if ((unint64_t)v53 >> 62)
  {
    if (v53 >= 0)
      v53 &= 0xFFFFFFFFFFFFFF8uLL;
    v54 = _CocoaArrayWrapper.endIndex.getter(v53);
  }
  else
  {
    v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v74[1] = v31;
  v74[0] = v3;
  if (!v54)
  {
    swift_bridgeObjectRelease(v39);
    v55 = 0;
    goto LABEL_45;
  }
  if ((v39 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v55 = *(_QWORD *)(v39 + 32);
    swift_retain(v55);
    goto LABEL_43;
  }
LABEL_58:
  v55 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v39);
LABEL_43:
  swift_bridgeObjectRelease(v39);
LABEL_45:
  v57 = v83;
  v58.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v56);
  v59 = v85;
  sub_10052C17C((uint64_t)v47, v55, (uint64_t)v9, v85, v58);
  swift_release(v55);
  v60 = swift_release(v47);
  v61 = *(uint64_t (**)(char *, uint64_t, __n128))(v84 + 8);
  v62 = v61(v9, v40, v60);
  v63.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v62);
  v64 = (id)ASKDeviceTypeGetCurrent(v63);
  ObjectType = a2;
  v65 = swift_dynamicCastClassUnconditional(a2, v82, 0, 0, 0);
  v66 = (uint64_t)v81;
  v67 = v75;
  sub_10058D7F8(v80, v75, (uint64_t)v81, v59, (uint64_t)v9, v65);

  v68 = swift_release(v67);
  v61(v9, v40, v68);
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v59, v87);
  sub_100011088(v66, (uint64_t *)&unk_1007FA760);
  v69 = swift_retain(v57);
  v70 = Lockup.searchAd.getter(v69);
  swift_release(v57);
  v71 = (void *)v74[0];
  if (v70)
  {
    v72 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v71, "setBackgroundColor:", v72);

  }
  objc_msgSend(v71, "setNeedsLayout", sub_10003151C(v70, ObjectType));
  objc_msgSend(v71, "setNeedsLayout", swift_release(v70).n128_f64[0]);
  swift_release(v83);
  swift_release(v78);
  swift_release(v21);
  v73 = swift_release(v80);
  (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v89, v77, v73);
}

void sub_1003C1EFC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  char *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  Swift::Bool v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t Strong;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  Swift::Bool v55;
  void *v56;
  uint64_t v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  __n128 v76;
  char *v77;
  uint64_t v78;
  double v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(_QWORD, _QWORD);
  void (*v84)(_QWORD, _QWORD);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  __n128 v117;
  __n128 v118;
  void (*v119)(uint64_t, uint64_t, __n128);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  id v134;
  _QWORD v135[3];
  _QWORD v136[7];
  UIImage_optional v137;
  UIImage_optional v138;

  v8 = v7;
  v14 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v121 - v19;
  v22 = type metadata accessor for Artwork.Style(0, v21);
  __chkstk_darwin(v22);
  v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for AdvertRotationControllerProvider(0);
  BaseObjectGraph.optional<A>(_:)(v136, v25, v25);
  v26 = v136[0];
  if (!v136[0])
    return;
  v132 = v24;
  v133 = a1;
  sub_100011020(a1, (uint64_t)v136);
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v28 = type metadata accessor for AdvertsSearchResult(0);
  if ((swift_dynamicCast(v135, v136, v27, v28, 6) & 1) == 0)
  {
    v47 = v26;
LABEL_31:
    swift_release(v47);
    return;
  }
  v29 = v135[0];
  v136[3] = v28;
  v136[4] = sub_10001F65C((unint64_t *)&unk_10080C0A0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v136[0] = v29;
  v30 = swift_retain(v29);
  v31 = AdvertRotationControllerProvider.advertController(for:asPartOf:createIfRequired:)(v136, a3, 0, v30);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v136);
  if (!v31)
  {
    swift_release(v26);
    v47 = v29;
    goto LABEL_31;
  }
  dispatch thunk of AdvertRotationController.currentAdvert.getter(v136, v32);
  v33 = sub_10000DF3C(&qword_10080C0D0);
  v34 = type metadata accessor for MixedMediaLockup(0);
  if ((swift_dynamicCast(v135, v136, v33, v34, 6) & 1) == 0)
  {
    swift_release(v29);
    swift_release(v31);
    v47 = v26;
    goto LABEL_31;
  }
  v123 = v31;
  v127 = v26;
  v122 = v17;
  v129 = v20;
  v125 = v15;
  v126 = v14;
  v130 = (char *)v135[0];
  v131 = v8;
  v128 = *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots];
  v35 = (uint64_t *)(v128 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v128 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews, v135, 0, 0);
  v36 = *v35;
  v37 = (unint64_t)*v35 >> 62;
  v124 = v29;
  if (v37)
  {
    if (v36 < 0)
      v48 = v36;
    else
      v48 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v38 = _CocoaArrayWrapper.endIndex.getter(v48);
    if (!v38)
      goto LABEL_20;
  }
  else
  {
    v38 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v36);
    if (!v38)
      goto LABEL_20;
  }
  if (v38 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  v39 = 0;
  do
  {
    if ((v36 & 0xC000000000000001) != 0)
      v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v36);
    else
      v40 = *(id *)(v36 + 8 * v39 + 32);
    v41 = v40;
    ++v39;
    v134 = v40;
    v42 = type metadata accessor for BorderedScreenshotView();
    v43 = sub_10001F65C(&qword_1007F4CB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v44 = v41;
    AnyHashable.init<A>(_:)(&v134, v42, v43);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v136, 1);
    sub_100019370((uint64_t)v136);
    v45 = *(id *)&v44[OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView];
    v137.value.super.isa = 0;
    v137.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v137, v46);

  }
  while (v38 != v39);
LABEL_20:
  swift_bridgeObjectRelease(v36);
  Strong = swift_unknownObjectWeakLoadStrong(v128 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
  v15 = a2;
  if (Strong)
  {
    v50 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_10080FD18), "setImage:", 0);
    v134 = v50;
    v51 = type metadata accessor for VideoView(0);
    v52 = sub_10001F65C((unint64_t *)&qword_1007F4CB8, 255, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v53 = v50;
    AnyHashable.init<A>(_:)(&v134, v51, v52);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v136, 1);

    sub_100019370((uint64_t)v136);
  }
  v14 = *(_QWORD *)&v131[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView];
  v29 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v54 = *(id *)(v14 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v138.value.super.isa = 0;
  v138.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v138, v55);

  v56 = *(void **)(v14 + v29);
  a2 = type metadata accessor for ArtworkView(0);
  v57 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v58 = v56;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v58, 1, a2, v57);

  v20 = v130;
  v59 = swift_retain(v130);
  v36 = Lockup.icon.getter(v59);
  swift_release(v20);
  if (v36)
  {
    v121 = v57;
    v60 = qword_1007F14D8;
    v38 = (uint64_t)*(id *)(v14 + v29);
    if (v60 == -1)
    {
LABEL_24:
      v61 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v62 = sub_1000117A8(v61, (uint64_t)qword_100852280);
      v63 = SmallLockupLayout.Metrics.artworkSize.getter(v62);
      v65 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend((id)v38, "contentMode"), 0, v63, v64);
      v66 = v132;
      Artwork.style.getter(v65);
      v67 = ArtworkView.style.setter(v66);
      *(_QWORD *)&v68 = Artwork.contentMode.getter(v67).n128_u64[0];
      v70 = ArtworkLoaderConfig.size.getter(objc_msgSend((id)v38, "setContentMode:", v69, v68));
      v72 = ArtworkView.imageSize.setter(v70, v71);
      v73 = Artwork.backgroundColor.getter(v72);
      if (!v73)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v73 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v73);
      v74 = *(id *)(v14 + v29);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2, 1, v74, a2, v121);
      swift_release(v36);

      swift_release(v65);
      goto LABEL_27;
    }
LABEL_49:
    swift_once(&qword_1007F14D8, sub_100190FCC);
    goto LABEL_24;
  }
LABEL_27:
  v75 = *(id *)(v14 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_metadataRibbonView);
  sub_1002121C8(v76, v133, v15);

  v77 = v129;
  v79 = MixedMediaLockup.screenshotsDisplayStyle.getter(v78);
  if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v79) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v125 + 8))(v77, v126);
    swift_release(v20);
    swift_release(v123);
    swift_release(v124);
    v47 = v127;
    goto LABEL_31;
  }
  v133 = v15;
  v80 = swift_retain(v20);
  Lockup.title.getter(v80);
  v82 = v81;
  v84 = v83;
  swift_release(v20);
  v85 = swift_retain(v20);
  v86 = Lockup.subtitle.getter(v85);
  v88 = v87;
  swift_release(v20);
  v89 = swift_retain(v20);
  v90 = Lockup.searchAd.getter(v89);
  v91 = swift_release(v20);
  if (v90)
  {
    v92 = SearchAd.advertisingText.getter(v91);
    v94 = v93;
    v91 = swift_release(v90);
  }
  else
  {
    v92 = 0;
    v94 = 0;
  }
  v95 = (uint64_t)v130;
  v96 = MixedMediaLockup.metadataRibbonItems.getter(v91);
  v97 = MixedMediaLockup.searchTagRibbonItems.getter(v96);
  v98 = objc_msgSend(v131, "traitCollection");
  v99 = v92;
  v100 = v95;
  v101 = sub_1003C3B34(v82, v84, v86, v88, v99, v94, v96, v97, a6, a7, v98);
  v103 = v102;

  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v96);
  swift_bridgeObjectRelease(v94);
  swift_bridgeObjectRelease(v88);
  swift_bridgeObjectRelease(v84);
  v105 = MixedMediaLockup.screenshots.getter(v104);
  v106 = v105;
  if ((unint64_t)v105 >> 62)
  {
    if (v105 >= 0)
      v105 &= 0xFFFFFFFFFFFFFF8uLL;
    v107 = _CocoaArrayWrapper.endIndex.getter(v105);
  }
  else
  {
    v107 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v108 = v133;
  v109 = v127;
  v110 = v131;
  if (v107)
  {
    if ((v106 & 0xC000000000000001) != 0)
    {
      v84 = (void (*)(_QWORD, _QWORD))specialized _ArrayBuffer._getElementSlowPath(_:)(0, v106);
    }
    else
    {
      if (!*(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_60;
      }
      v84 = *(void (**)(_QWORD, _QWORD))(v106 + 32);
      swift_retain(v84);
    }
    swift_bridgeObjectRelease(v106);
  }
  else
  {
    swift_bridgeObjectRelease(v106);
    v84 = 0;
  }
  v112 = MixedMediaLockup.trailers.getter(v111);
  v95 = v112;
  if (!((unint64_t)v112 >> 62))
  {
    if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_44;
LABEL_56:
    *(_QWORD *)&v114 = swift_bridgeObjectRelease(v95).n128_u64[0];
    v113 = 0;
    goto LABEL_57;
  }
  if (v112 >= 0)
    v112 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v112))
    goto LABEL_56;
LABEL_44:
  if ((v95 & 0xC000000000000001) != 0)
  {
LABEL_60:
    v113 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v95);
    goto LABEL_47;
  }
  if (*(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v113 = *(_QWORD *)(v95 + 32);
    swift_retain(v113);
LABEL_47:
    *(_QWORD *)&v114 = swift_bridgeObjectRelease(v95).n128_u64[0];
LABEL_57:
    v115 = objc_msgSend(v110, "traitCollection", v114);
    v116 = (uint64_t)v122;
    MixedMediaLockup.screenshotsDisplayStyle.getter(v115);
    v117.n128_f64[0] = v101;
    sub_10058CCC4((uint64_t)v84, v113, (uint64_t)v115, v108, v116, v117, v103);
    swift_release(v124);
    swift_release(v100);

    swift_release(v123);
    swift_release(v109);
    swift_release(v113);
    v118 = swift_release(v84);
    v119 = *(void (**)(uint64_t, uint64_t, __n128))(v125 + 8);
    v120 = v126;
    v119(v116, v126, v118);
    ((void (*)(char *, uint64_t))v119)(v129, v120);
    return;
  }
  __break(1u);
}

uint64_t sub_1003C28C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator, v23, 1, 0);
  v5 = *v4;
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v5);
    v6 = *v4;
  }
  else
  {
    v6 = 0;
  }
  *v4 = 0;
  swift_release(v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock, v22, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100019310(v8, v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView);
  v11 = (_QWORD *)(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsCalculator, v21, 1, 0);
  v12 = *v11;
  if (*v11)
  {
    swift_retain(*v11);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v12);
    v13 = *v11;
  }
  else
  {
    v13 = 0;
  }
  *v11 = 0;
  swift_release(v13);
  v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsUpdateBlock, &v20, 1, 0);
  v15 = *v14;
  v16 = v14[1];
  *v14 = 0;
  v14[1] = 0;
  sub_100019310(v15, v16);
  v17 = type metadata accessor for SearchTagsRibbonView(0);
  v18 = sub_10001F65C((unint64_t *)&unk_10080C0C0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006723D0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v17, v18);
}

id sub_1003C2A4C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdvertsSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AdvertsSearchResultContentView()
{
  return objc_opt_self(_TtC22SubscribePageExtension30AdvertsSearchResultContentView);
}

void sub_1003C2B1C(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  sub_1001537D4(a1, a2, a3);
  sub_10052DDD4();
}

uint64_t sub_1003C2B64()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots)+ OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
}

void sub_1003C2B84(void *a1)
{
  sub_100530448((uint64_t)a1);

}

void (*sub_1003C2BBC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots);
  a1[1] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
  return sub_10019BDC4;
}

uint64_t sub_1003C2C10(uint64_t a1, uint64_t a2)
{
  return sub_1003C2D7C(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_disableAdvertRotation);
}

uint64_t sub_1003C2C1C(uint64_t a1, uint64_t a2)
{
  sub_1003C3D1C(a1, a2);
  return sub_100019310(a1, a2);
}

uint64_t (*sub_1003C2C50(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1003C1020((uint64_t)v2);
  return sub_10001B55C;
}

uint64_t sub_1003C2C94()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1003C2CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1003C2D2C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1003C2D70(uint64_t a1, uint64_t a2)
{
  return sub_1003C2D7C(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock);
}

uint64_t sub_1003C2D7C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v3 + *a3);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  sub_100019320(*v4, v4[1]);
  return v5;
}

uint64_t sub_1003C2DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

uint64_t (*sub_1003C2E2C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1003C2E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_10001F65C((unint64_t *)&unk_10080C0C0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006723D0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

uint64_t sub_1003C2EFC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006896BC, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_1003C2F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006896BC, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_1003C2F7C(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_1006896BC, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001B55C;
}

uint64_t sub_1003C2FE4(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100803DF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_100689510);
}

uint64_t sub_1003C3010(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_10080C070, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_100689540);
}

uint64_t sub_1003C303C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C((unint64_t *)&unk_10080C078, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_10068955C);
}

uint64_t sub_1003C3068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10001F65C(&qword_10080C088, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_10068968C);
  result = sub_10001F65C((unint64_t *)&unk_10080C090, v3, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_1006895BC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1003C30C4(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  double v33;
  double v34;
  __n128 v35;
  uint64_t v36;
  void (*v37)(_QWORD, _QWORD);
  void (*v38)(_QWORD, _QWORD);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t KeyPath;
  __n128 v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  double v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  id v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  id v99;
  __n128 v100;
  __n128 v101;
  double v102;
  __n128 v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void *v123[2];

  v3 = v2;
  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, a2);
  v114 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v8);
  v10 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v116 = *(_QWORD *)(v11 - 8);
  v117 = v11;
  __chkstk_darwin(v11);
  v115 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_10080C0B0);
  __chkstk_darwin(v13);
  v15 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PageGrid(0);
  v118 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v120 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v119 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v121 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AdvertsSearchResult(0);
  v24 = sub_10001F65C((unint64_t *)&unk_10080C0A0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v122 = a1;
  v25 = ItemLayoutContext.typedModel<A>(as:)(v123, v23, v23, v24);
  v26 = v123[0];
  if (!v123[0])
    return;
  v107 = v3;
  v27 = AdvertsSearchResult.lockups.getter(v25);
  v28 = v27;
  if (!((unint64_t)v27 >> 62))
  {
    if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_35:
    swift_release(v26);
    swift_bridgeObjectRelease(v28);
    return;
  }
  if (v27 >= 0)
    v27 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v27))
    goto LABEL_35;
LABEL_4:
  v109 = v26;
  if ((v28 & 0xC000000000000001) != 0)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
LABEL_7:
    v108 = v21;
    v112 = v10;
    swift_bridgeObjectRelease(v28);
    v30.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v29);
    ItemLayoutContext.parentShelfLayoutContext.getter(v30);
    if (qword_1007F1DE8 == -1)
      goto LABEL_8;
    goto LABEL_38;
  }
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(_QWORD *)(v28 + 32);
    swift_retain(v23);
    goto LABEL_7;
  }
  __break(1u);
LABEL_38:
  swift_once(&qword_1007F1DE8, sub_1003852A0);
LABEL_8:
  v113 = v19;
  v106 = v5;
  v31 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  PageGrid.init(from:breakpointOverrides:)(v18, v31);
  v32 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v34 = v33;
  v35 = swift_retain(v23);
  Lockup.title.getter(v35);
  v111 = v36;
  v38 = v37;
  swift_release(v23);
  v39 = swift_retain(v23);
  v110 = Lockup.subtitle.getter(v39);
  v41 = v40;
  swift_release(v23);
  v42 = swift_retain(v23);
  v43 = Lockup.searchAd.getter(v42);
  v44 = swift_release(v23);
  v105 = v7;
  if (v43)
  {
    v45 = SearchAd.advertisingText.getter(v44);
    v47 = v46;
    v44 = swift_release(v43);
  }
  else
  {
    v45 = 0;
    v47 = 0;
  }
  v48 = MixedMediaLockup.metadataRibbonItems.getter(v44);
  v49 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v15, 1, 1, v49);
  v51 = MixedMediaLockup.searchTagRibbonItems.getter(v50);
  KeyPath = swift_getKeyPath(&unk_100689728);
  ItemLayoutContext.subscript.getter(v123);
  v53 = swift_release(KeyPath);
  v54 = v123[0];
  v53.n128_u64[0] = v32;
  sub_10015649C(v111, v38, v110, v41, v45, v47, v48, (uint64_t)v15, v53, v34, v51, v123[0]);

  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v38);
  v55 = sub_100011088((uint64_t)v15, (uint64_t *)&unk_10080C0B0);
  v56 = MixedMediaLockup.screenshots.getter(v55);
  v57 = v56;
  if ((unint64_t)v56 >> 62)
  {
    if (v56 >= 0)
      v56 &= 0xFFFFFFFFFFFFFF8uLL;
    v58 = _CocoaArrayWrapper.endIndex.getter(v56);
  }
  else
  {
    v58 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v60 = (uint64_t)v112;
  v59 = v113;
  v61 = v121;
  *(_QWORD *)&v63 = swift_bridgeObjectRelease(v57).n128_u64[0];
  if (!v58)
  {
    v78 = MixedMediaLockup.trailers.getter(v62);
    v75 = v78;
    if ((unint64_t)v78 >> 62)
    {
      if (v78 >= 0)
        v78 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v78))
      {
LABEL_24:
        if ((v75 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_86;
          }
          v79 = *(_QWORD *)(v75 + 32);
          swift_retain(v79);
          goto LABEL_27;
        }
        goto LABEL_84;
      }
    }
    else if (*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
    *(_QWORD *)&v102 = swift_bridgeObjectRelease(v75).n128_u64[0];
    ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v102);
    goto LABEL_81;
  }
  if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v63) & 1) == 0)
  {
LABEL_81:
    swift_release(v23);
    v103 = swift_release(v109);
    (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v120, v59, v103);
    (*(void (**)(id, uint64_t))(v119 + 8))(v61, v108);
    return;
  }
  while (1)
  {
    v65 = v115;
    static StandardSearchResultContentViewMetrics.bottomMargin.getter(v64);
    v66 = swift_getKeyPath(&unk_100689728);
    ItemLayoutContext.subscript.getter(v123);
    swift_release(v66);
    v67 = v123[0];
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v68 = sub_10000DF3C(&qword_1007F5840);
    v69 = swift_allocObject(v68, 40, 7);
    *(_OWORD *)(v69 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v69 + 32) = v67;
    v61 = v67;
    v70 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v69);
    v71 = sub_10024E2F8();
    v72 = v117;
    dispatch thunk of AnyDimension.rawValue(in:)(v70, v117, v71);

    v73 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v65, v72);
    v74 = MixedMediaLockup.screenshots.getter(v73);
    v75 = v74;
    if ((unint64_t)v74 >> 62)
      break;
    if (!*(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_45;
LABEL_18:
    if ((v75 & 0xC000000000000001) != 0)
    {
      v76 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v75);
      goto LABEL_21;
    }
    if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v76 = *(_QWORD *)(v75 + 32);
      swift_retain(v76);
LABEL_21:
      swift_bridgeObjectRelease(v75);
      goto LABEL_46;
    }
    __break(1u);
LABEL_84:
    v79 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v75);
LABEL_27:
    swift_bridgeObjectRelease(v75);
    v75 = Trailers.videos.getter(v80);
    swift_release(v79);
    if ((unint64_t)v75 >> 62)
    {
LABEL_86:
      if (v75 < 0)
        v104 = v75;
      else
        v104 = v75 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v75);
      v81 = _CocoaArrayWrapper.endIndex.getter(v104);
      swift_bridgeObjectRelease(v75);
    }
    else
    {
      v81 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v82 = swift_bridgeObjectRelease(v75).n128_u64[0];
    if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v82) & 1) == 0 || !v81)
      goto LABEL_81;
  }
  if (v74 >= 0)
    v74 &= 0xFFFFFFFFFFFFFF8uLL;
  if (_CocoaArrayWrapper.endIndex.getter(v74))
    goto LABEL_18;
LABEL_45:
  swift_bridgeObjectRelease(v75);
  v76 = 0;
LABEL_46:
  v83 = MixedMediaLockup.trailers.getter(v77);
  v84 = v83;
  if ((unint64_t)v83 >> 62)
  {
    if (v83 >= 0)
      v83 &= 0xFFFFFFFFFFFFFF8uLL;
    if (!_CocoaArrayWrapper.endIndex.getter(v83))
      goto LABEL_55;
LABEL_48:
    if ((v84 & 0xC000000000000001) != 0)
    {
      v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v84);
    }
    else
    {
      if (!*(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_92;
      }
      v41 = *(_QWORD *)(v84 + 32);
      swift_retain(v41);
    }
    v85 = swift_bridgeObjectRelease(v84);
    goto LABEL_56;
  }
  if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_55:
  v85 = swift_bridgeObjectRelease(v84);
  v41 = 0;
LABEL_56:
  v86 = (id)ASKDeviceTypeGetCurrent(v85);
  v87 = swift_getKeyPath(&unk_100689728);
  ItemLayoutContext.subscript.getter(v123);
  swift_release(v87);
  v88 = v123[0];
  sub_100477C3C((uint64_t)v86, v60);

  v90 = MixedMediaLockup.screenshots.getter(v89);
  v84 = v90;
  if ((unint64_t)v90 >> 62)
  {
    if (v90 >= 0)
      v90 &= 0xFFFFFFFFFFFFFF8uLL;
    if (!_CocoaArrayWrapper.endIndex.getter(v90))
      goto LABEL_65;
LABEL_58:
    if ((v84 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_94;
      }
      v86 = *(id *)(v84 + 32);
      swift_retain(v86);
LABEL_61:
      swift_bridgeObjectRelease(v84);
      goto LABEL_66;
    }
LABEL_92:
    v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v84);
    goto LABEL_61;
  }
  if (*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_58;
LABEL_65:
  swift_bridgeObjectRelease(v84);
  v86 = 0;
LABEL_66:
  v92 = MixedMediaLockup.trailers.getter(v91);
  v84 = v92;
  if ((unint64_t)v92 >> 62)
  {
    if (v92 >= 0)
      v92 &= 0xFFFFFFFFFFFFFF8uLL;
    if (!_CocoaArrayWrapper.endIndex.getter(v92))
      goto LABEL_75;
LABEL_68:
    if ((v84 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v93 = v76;
      v94 = *(_QWORD *)(v84 + 32);
      swift_retain(v94);
LABEL_71:
      v95 = v60;
      swift_bridgeObjectRelease(v84);
      goto LABEL_76;
    }
LABEL_94:
    v93 = v76;
    v94 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v84);
    goto LABEL_71;
  }
  if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_68;
LABEL_75:
  v93 = v76;
  v95 = v60;
  swift_bridgeObjectRelease(v84);
  v94 = 0;
LABEL_76:
  type metadata accessor for LockupMediaView(0);
  v96 = (uint64_t)v105;
  v97 = (uint64_t)v121;
  sub_10052C17C((uint64_t)v86, v94, (uint64_t)v121, (uint64_t)v105, v98);
  swift_release(v86);
  swift_release(v94);
  v99 = sub_1000826AC();
  swift_getObjectType();
  v100.n128_u64[0] = v32;
  sub_10058D638(v93, v41, v95, v100, v34, v96, (uint64_t)v99, v97);
  swift_release(v23);
  swift_unknownObjectRelease(v99);
  swift_release(v109);
  swift_release(v41);
  v101 = swift_release(v93);
  (*(void (**)(uint64_t, uint64_t, __n128))(v114 + 8))(v96, v106, v101);
  sub_100011088(v95, (uint64_t *)&unk_1007FA760);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v120, v113);
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v97, v108);
}

double sub_1003C3B34(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, void *a11)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a6;
  v36 = a7;
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v37 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C((uint64_t *)&unk_10080C0B0);
  __chkstk_darwin(v22);
  v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v26 = ((__n128 (*)(char *, uint64_t, uint64_t, uint64_t))*(_QWORD *)(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26.n128_f64[0] = a9;
  sub_10015649C(a1, a2, a3, a4, a5, v35, v36, (uint64_t)v24, v26, a10, a8, a11);
  sub_100011088((uint64_t)v24, (uint64_t *)&unk_10080C0B0);
  static StandardSearchResultContentViewMetrics.bottomMargin.getter(v27);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v28 = sub_10000DF3C(&qword_1007F5840);
  v29 = swift_allocObject(v28, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v29 + 32) = a11;
  v30 = a11;
  v31 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v29);
  v32 = sub_10024E2F8();
  dispatch thunk of AnyDimension.rawValue(in:)(v31, v19, v32);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v19);
  return a9;
}

id sub_1003C3D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE v11[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_disableAdvertRotation);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_disableAdvertRotation, v11, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  sub_100019320(a1, a2);
  sub_100019310(v6, v7);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView);
  v9 = *(void **)(v8 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton);
  if (v9)
    objc_msgSend(v9, "addTarget:action:forControlEvents:", v2, "disableAdvertRotationTap", 64);
  return objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton), "addTarget:action:forControlEvents:", v2, "disableAdvertRotationTap", 64);
}

void sub_1003C3DF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::Bool v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  Swift::Bool v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE v43[40];
  char v44[24];
  UIImage_optional v45;
  UIImage_optional v46;
  UIImage_optional v47;

  v38 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots);
  v1 = (uint64_t *)(v38 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v38 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews, v44, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v12 = *v1;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v3)
      goto LABEL_13;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (!v3)
      goto LABEL_13;
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    ++v4;
    v42 = v5;
    v7 = type metadata accessor for BorderedScreenshotView();
    v8 = sub_10001F65C(&qword_1007F4CB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v9 = v6;
    AnyHashable.init<A>(_:)(&v42, v7, v8);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v43, 1);
    sub_100019370((uint64_t)v43);
    v10 = *(id *)&v9[OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView];
    v45.value.super.isa = 0;
    v45.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v45, v11);

  }
  while (v3 != v4);
LABEL_13:
  swift_bridgeObjectRelease(v2);
  Strong = swift_unknownObjectWeakLoadStrong(v38 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v14 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_10080FD18), "setImage:", 0);
    v42 = v14;
    v15 = type metadata accessor for VideoView(0);
    v16 = sub_10001F65C((unint64_t *)&qword_1007F4CB8, 255, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v17 = v14;
    AnyHashable.init<A>(_:)(&v42, v15, v16);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v43, 1);

    sub_100019370((uint64_t)v43);
  }
  v18 = *(_QWORD *)(v40 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView);
  v19 = *(char **)(v18 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_metadataRibbonView);
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v41 = *(_QWORD *)(v40 + OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView);
    v22 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
    v39 = v19;
    swift_bridgeObjectRetain(v20);
    v23 = 32;
    do
    {
      v24 = *(void **)(v20 + v23);
      v25 = swift_dynamicCastClass(v24, v22);
      if (v25)
      {
        v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC22SubscribePageExtension31MetadataRibbonIconWithLabelView_artworkView);
        v27 = v24;
        v46.value.super.isa = 0;
        v46.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v46, v28);
        v29 = type metadata accessor for ArtworkView(0);
        v30 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v26, 1, v29, v30);

      }
      v23 += 16;
      --v21;
    }
    while (v21);

    swift_bridgeObjectRelease(v20);
    v18 = v41;
  }
  v31 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v32 = *(id *)(v18 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v47.value.super.isa = 0;
  v47.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v47, v33);

  v34 = *(void **)(v18 + v31);
  v35 = type metadata accessor for ArtworkView(0);
  v36 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v37 = v34;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v37, 1, v35, v36);

}

uint64_t sub_1003C41CC(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  __n128 v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  __n128 v53;
  uint64_t v54;
  _QWORD *v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  double *v85;
  __n128 v86;
  __n128 v87;
  double *v88;
  __n128 v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  double *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  void *v107;
  double *v108;

  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, a3);
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  __chkstk_darwin(v5);
  v97 = (uint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v100 = (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)type metadata accessor for PageGrid(0);
  v14 = *(v13 - 1);
  __chkstk_darwin(v13);
  v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AdvertsSearchResult(0);
  v18 = sub_10001F65C((unint64_t *)&unk_10080C0A0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = (uint64_t)ItemLayoutContext.typedModel<A>(as:)(&v108, v17, v17, v18);
  v94 = v108;
  if (!v108)
    return result;
  v108 = _swiftEmptyArrayStorage;
  ItemLayoutContext.parentShelfLayoutContext.getter(v20);
  if (qword_1007F1DE8 != -1)
    goto LABEL_78;
  while (2)
  {
    v21 = qword_100854230;
    swift_bridgeObjectRetain(qword_100854230);
    v22 = PageGrid.init(from:breakpointOverrides:)(v12, v21);
    v23.n128_f64[0] = PageGrid.columnWidth.getter(v22);
    v24 = v23.n128_f64[0];
    sub_1003C30C4(a1, v23);
    v26 = v25;
    v28 = AdvertsSearchResult.lockups.getter(v27);
    v29 = v28;
    if (!((unint64_t)v28 >> 62))
    {
      result = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!result)
        break;
      goto LABEL_5;
    }
    if (v28 >= 0)
      v28 &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(v28);
    if (result)
    {
LABEL_5:
      if (result < 1)
      {
        __break(1u);
        return result;
      }
      v90 = v16;
      v91 = v14;
      v92 = v13;
      v93 = a2;
      v16 = 0;
      v105 = v29;
      v106 = v29 & 0xC000000000000001;
      v95 = v8;
      v96 = v7;
      v30 = v100;
      v103 = a1;
      v104 = (char *)result;
      while (1)
      {
        if (v106)
        {
          v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v29);
        }
        else
        {
          v12 = *(char **)(v29 + 8 * (_QWORD)v16 + 32);
          swift_retain(v12);
        }
        v31 = swift_retain(v12);
        v32 = Lockup.icon.getter(v31);
        v33 = swift_release(v12);
        if (v32)
        {
          if (qword_1007F14D8 != -1)
            swift_once(&qword_1007F14D8, sub_100190FCC);
          v34 = type metadata accessor for SmallLockupLayout.Metrics(0);
          v35 = sub_1000117A8(v34, (uint64_t)qword_100852280);
          v36 = SmallLockupLayout.Metrics.artworkSize.getter(v35);
          v38 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v36, v37);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
          v40 = *(_QWORD *)(((unint64_t)v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v39 = *(_QWORD *)(((unint64_t)v108 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v40 >= v39 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
          v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
          specialized Array._endMutation()(v41);
          v33 = swift_release(v32);
        }
        v42 = MixedMediaLockup.metadataRibbonItems.getter(v33);
        KeyPath = swift_getKeyPath(&unk_100689728);
        ItemLayoutContext.subscript.getter(&v107);
        v44 = swift_release(KeyPath);
        v45 = v107;
        v46 = sub_100212570(v42, (uint64_t)v107, v44);

        swift_bridgeObjectRelease(v42);
        v47 = sub_10001988C((uint64_t)v46);
        MixedMediaLockup.screenshotsDisplayStyle.getter(v47);
        v49 = MixedMediaLockup.screenshots.getter(v48);
        v50 = v49;
        if ((unint64_t)v49 >> 62)
        {
          if (v49 >= 0)
            v49 &= 0xFFFFFFFFFFFFFF8uLL;
          v51 = _CocoaArrayWrapper.endIndex.getter(v49);
        }
        else
        {
          v51 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        *(_QWORD *)&v52 = swift_bridgeObjectRelease(v50).n128_u64[0];
        if (v51)
        {
          if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v52) & 1) != 0)
            break;
        }
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v30, v7);
        swift_release(v12);
LABEL_8:
        ++v16;
        v29 = v105;
        if (v104 == v16)
        {
          swift_bridgeObjectRelease(v105);
          v88 = v108;
          v13 = v92;
          v14 = v91;
          v16 = v90;
          goto LABEL_83;
        }
      }
      v53 = swift_retain(v12);
      Lockup.title.getter(v53);
      v102 = v54;
      v13 = v55;
      swift_release(v12);
      v56 = swift_retain(v12);
      v101 = Lockup.subtitle.getter(v56);
      v14 = v57;
      swift_release(v12);
      v58 = swift_retain(v12);
      v59 = Lockup.searchAd.getter(v58);
      v60 = swift_release(v12);
      if (v59)
      {
        a2 = SearchAd.advertisingText.getter(v60);
        v62 = v61;
        v60 = swift_release(v59);
      }
      else
      {
        a2 = 0;
        v62 = 0;
      }
      v8 = MixedMediaLockup.metadataRibbonItems.getter(v60);
      v7 = MixedMediaLockup.searchTagRibbonItems.getter(v8);
      a1 = swift_getKeyPath(&unk_100689728);
      ItemLayoutContext.subscript.getter(&v107);
      swift_release(a1);
      v63 = v107;
      v64 = sub_1003C3B34(v102, (void (*)(_QWORD, _QWORD))v13, v101, v14, a2, v62, v8, v7, v24, v26, v107);
      v66 = v65;

      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v62);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v13);
      v68 = MixedMediaLockup.screenshots.getter(v67);
      v69 = v68;
      if ((unint64_t)v68 >> 62)
      {
        if (v68 >= 0)
          v68 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v68))
          goto LABEL_27;
      }
      else if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_27:
        if ((v69 & 0xC000000000000001) != 0)
        {
          v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v69);
        }
        else
        {
          if (!*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            swift_once(&qword_1007F1DE8, sub_1003852A0);
            continue;
          }
          v7 = *(_QWORD *)(v69 + 32);
          swift_retain(v7);
        }
        swift_bridgeObjectRelease(v69);
LABEL_38:
        v71 = MixedMediaLockup.trailers.getter(v70);
        v72 = v71;
        if ((unint64_t)v71 >> 62)
        {
          if (v71 >= 0)
            v71 &= 0xFFFFFFFFFFFFFF8uLL;
          if (_CocoaArrayWrapper.endIndex.getter(v71))
            goto LABEL_40;
        }
        else if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_40:
          if ((v72 & 0xC000000000000001) != 0)
          {
            v13 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v72);
          }
          else
          {
            if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_75;
            v13 = *(_QWORD **)(v72 + 32);
            swift_retain(v13);
          }
          swift_bridgeObjectRelease(v72);
LABEL_48:
          v74 = MixedMediaLockup.screenshots.getter(v73);
          v75 = v74;
          if ((unint64_t)v74 >> 62)
          {
            if (v74 >= 0)
              v74 &= 0xFFFFFFFFFFFFFF8uLL;
            if (_CocoaArrayWrapper.endIndex.getter(v74))
              goto LABEL_50;
          }
          else if (*(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_50:
            if ((v75 & 0xC000000000000001) != 0)
            {
              v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v75);
            }
            else
            {
              if (!*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_76;
              v14 = *(_QWORD *)(v75 + 32);
              swift_retain(v14);
            }
            swift_bridgeObjectRelease(v75);
LABEL_58:
            v77 = MixedMediaLockup.trailers.getter(v76);
            v78 = v77;
            if ((unint64_t)v77 >> 62)
            {
              if (v77 >= 0)
                v77 &= 0xFFFFFFFFFFFFFF8uLL;
              if (_CocoaArrayWrapper.endIndex.getter(v77))
                goto LABEL_60;
            }
            else if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_60:
              if ((v78 & 0xC000000000000001) != 0)
              {
                v79 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v78);
              }
              else
              {
                if (!*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_77;
                v79 = *(_QWORD *)(v78 + 32);
                swift_retain(v79);
              }
              v80 = swift_bridgeObjectRelease(v78);
              goto LABEL_68;
            }
            v80 = swift_bridgeObjectRelease(v78);
            v79 = 0;
LABEL_68:
            v81 = v97;
            v82 = v100;
            sub_10052C17C(v14, v79, v100, v97, v80);
            v83 = v14;
            v30 = v82;
            swift_release(v83);
            swift_release(v79);
            v84 = sub_1000826AC();
            v85 = sub_10058E5E0(v7, (uint64_t)v13, v81, v84, v64, v66);
            swift_unknownObjectRelease(v84);
            swift_release(v13);
            v86 = swift_release(v7);
            (*(void (**)(uint64_t, uint64_t, __n128))(v98 + 8))(v81, v99, v86);
            sub_10001988C((uint64_t)v85);
            v87 = swift_release(v12);
            v8 = v95;
            v7 = v96;
            (*(void (**)(uint64_t, uint64_t, __n128))(v95 + 8))(v30, v96, v87);
            goto LABEL_8;
          }
          swift_bridgeObjectRelease(v75);
          v14 = 0;
          goto LABEL_58;
        }
        swift_bridgeObjectRelease(v72);
        v13 = 0;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease(v69);
      v7 = 0;
      goto LABEL_38;
    }
    break;
  }
  swift_bridgeObjectRelease(v29);
  v88 = _swiftEmptyArrayStorage;
LABEL_83:
  ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v88);
  swift_release(v94);
  v89 = swift_bridgeObjectRelease(v88);
  return (*(uint64_t (**)(char *, _QWORD *, __n128))(v14 + 8))(v16, v13, v89);
}

void sub_1003C4A50()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_preferredImageSizes] = _swiftEmptyDictionarySingleton;
  v3 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_disableAdvertRotation];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsCalculator] = 0;
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AdvertsSearchResultContentView.swift", 59, 2, 81, 0);
  __break(1u);
}

unint64_t sub_1003C4B4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080C0D8;
  if (!qword_10080C0D8)
  {
    v1 = type metadata accessor for SmallLockupCollectionViewCell(255);
    result = swift_getWitnessTable(byte_100689758, v1);
    atomic_store(result, (unint64_t *)&qword_10080C0D8);
  }
  return result;
}

double sub_1003C4B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v14;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SmallLockupView(0);
  v5 = (void *)ShelfLayoutContext.traitEnvironment.getter(v4);
  ShelfLayoutContext.contentPageGrid.getter(v5);
  v6 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100852280);
  swift_getObjectType();
  sub_100193710(v10, v5, v6, v8);
  v12 = v11;
  swift_unknownObjectRelease(v5);
  return v12;
}

id sub_1003C4CD8()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051260355;
  LODWORD(v2) = 1059816735;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v3, v2, v4);
  qword_10080C0E0 = (uint64_t)result;
  return result;
}

char *sub_1003C4D28(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  double v41;
  void *v42;
  _BYTE v44[24];
  _QWORD v45[5];
  objc_super v46;

  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = &v4[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_itemLayoutContext];
  v14 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView;
  v16 = type metadata accessor for HeroCarouselView(0);
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16));
  v18 = v4;
  *(_QWORD *)&v4[v15] = objc_msgSend(v17, "init");
  v19 = &v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_state];
  v20 = sub_10000DF3C((uint64_t *)&unk_100800670);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_tapGestureRecognizer;
  *(_QWORD *)&v18[v21] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v22 = &v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  swift_weakInit(&v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsCalculator]);
  v23 = &v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator]);
  v24 = &v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_currentTitleEffect];
  v25 = type metadata accessor for TitleEffect(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect;
  v27 = sub_10000DF3C(&qword_10080C170);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  *(_QWORD *)&v18[v26] = SyncEvent.init()();
  v29 = UUID.init()(v28);
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  v45[0] = v30;
  v45[1] = v32;
  AnyHashable.init<A>(_:)(v45, &type metadata for String, &protocol witness table for String);
  v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_allowsAutoPlay] = 1;
  v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_isPlaying] = 0;
  swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_visibilityTrackingView]);

  v33 = (objc_class *)type metadata accessor for HeroCarouselCollectionViewCell(0);
  v46.receiver = v18;
  v46.super_class = v33;
  v34 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  v35 = objc_msgSend(v34, "contentView");
  objc_msgSend(v35, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v36 = objc_msgSend(v34, "contentView");
  v37 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView;
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView]);

  v38 = *(_QWORD *)&v34[v37];
  v45[3] = v33;
  v45[4] = &off_10073CB30;
  v45[0] = v34;
  v39 = v38 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_carouselDelegate;
  swift_beginAccess(v38 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_carouselDelegate, v44, 33, 0);
  v40 = v34;
  sub_10006C214((uint64_t)v45, v39, &qword_1008010F8);
  *(_QWORD *)&v41 = swift_endAccess(v44).n128_u64[0];
  v42 = *(void **)&v40[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_tapGestureRecognizer];
  objc_msgSend(v42, "addTarget:action:", v40, "handleTap:", v41);
  objc_msgSend(v42, "setDelegate:", v40);
  objc_msgSend(v40, "addGestureRecognizer:", v42);

  return v40;
}

uint64_t sub_1003C513C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = type metadata accessor for TitleEffectUpdate(0);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_10080C150);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TitleEffect(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v20 - v14;
  v16 = v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_currentTitleEffect, v23, 33, 0);
  sub_1003C6A80(a1, v16);
  swift_endAccess(v23);
  sub_1000194E4(v16, (uint64_t)v8, (uint64_t *)&unk_10080C150);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100011088((uint64_t)v8, (uint64_t *)&unk_10080C150);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    if (qword_1007F1ED8 != -1)
      swift_once(&qword_1007F1ED8, sub_1003C4CD8);
    v17 = qword_10080C0E0;
    v18 = (id)qword_10080C0E0;
    TitleEffectUpdate.init(effect:isAnimated:animationDuration:timingFunction:)(v12, 1, 0x3FD0000000000000, 0, v17);
    SyncEvent.post(_:)(v5);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return sub_100011088(a1, (uint64_t *)&unk_10080C150);
}

void sub_1003C5378()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  void (*v13)(__n128);
  uint64_t v14;
  __n128 v15;
  char v16[24];
  objc_super v17;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0);
  objc_msgSendSuper2(&v17, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView];
  v3 = objc_msgSend(v0, "contentView");
  v4 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v5 = LayoutMarginsAware<>.layoutFrame.getter(v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  v12 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock], v16, 0, 0);
  v13 = *(void (**)(__n128))v12;
  if (*(_QWORD *)v12)
  {
    v14 = *((_QWORD *)v12 + 1);
    v15 = swift_retain(v14);
    v13(v15);
    sub_100019310((uint64_t)v13, v14);
  }
}

void sub_1003C54C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v16[24];
  objc_super v17;

  v1 = v0;
  v2 = sub_10000DF3C((uint64_t *)&unk_10080C160);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for HeroCarouselCollectionViewCell(0);
  v17.receiver = v0;
  v17.super_class = v5;
  objc_msgSendSuper2(&v17, "prepareForReuse");
  v6 = sub_10000DF3C((uint64_t *)&unk_100800670);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_state];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_state], v16, 33, 0);
  sub_10006C214((uint64_t)v4, v7, (uint64_t *)&unk_10080C160);
  swift_endAccess(v16);
  v8 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler + 8];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  sub_100019310(v9, v10);
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView];
  v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_scrollView);
  sub_100465104((uint64_t)_swiftEmptyArrayStorage, 0);
  v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension22HeroCarouselScrollView_focusedPageTracker);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension22HeroCarouselScrollView_focusedPageTracker) = 0;
  sub_100464B78(v13);
  swift_release(v13);
  *(_BYTE *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension22HeroCarouselScrollView_currentPagingDirection) = 1;
  sub_1004647E8();
  *(_BYTE *)(v11 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_isAutoScrollEnabled) = 0;
  v14 = *(void **)(v11 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_autoScrollTimer);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_autoScrollTimer) = 0;
  objc_msgSend(v14, "invalidate");

  v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_isPlaying] = 0;
}

void sub_1003C5694(__objc2_class **p_superclass)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __objc2_class **i;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  double v16;
  char *v17;
  double v18;
  uint64_t v19;
  __objc2_class **v20;
  uint64_t v21;
  __objc2_class **v22;
  objc_super v23;

  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0);
  objc_msgSendSuper2(&v23, "applyLayoutAttributes:", p_superclass);
  v3 = type metadata accessor for BaseCollectionViewLayoutAttributes();
  v4 = swift_dynamicCastClass(p_superclass, v3);
  if (v4)
  {
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView];
    v21 = v4;
    v6 = OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_parallaxY;
    *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_parallaxY) = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34BaseCollectionViewLayoutAttributes_parallaxY);
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_carouselItemViews);
    v22 = p_superclass;
    if ((unint64_t)v7 >> 62)
      goto LABEL_14;
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v7, 2);
    for (i = p_superclass; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v19))
    {
      v10 = 4;
      p_superclass = _TtC22SubscribePageExtension31ArcadeFooterRiverViewDataSource.superclass;
      v11 = 0;
      if ((v7 & 0xC000000000000001) != 0)
      {
LABEL_5:
        v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v7);
        goto LABEL_7;
      }
      while (1)
      {
        v12 = (char *)*(id *)(v7 + 8 * v10);
LABEL_7:
        v13 = v12;
        v14 = __OFADD__(v11, 1);
        v15 = v11 + 1;
        if (v14)
          break;
        v16 = *(double *)(v5 + v6);
        v17 = *(char **)(*(_QWORD *)(*(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_backgroundView]
                                   + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer)
                       + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
        v18 = *(double *)&v17[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_parallaxY];
        *(double *)&v17[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_parallaxY] = v16;
        if (v16 != v18)
          objc_msgSend(v17, "setNeedsLayout");

        if (v15 == v8)
          goto LABEL_18;
        v11 = ++v10 - 4;
        if ((v7 & 0xC000000000000001) != 0)
          goto LABEL_5;
      }
      __break(1u);
LABEL_14:
      if (v7 < 0)
        v19 = v7;
      else
        v19 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v7, 2);
      v20 = p_superclass;
    }
LABEL_18:
    swift_bridgeObjectRelease_n(v7, 2);
    sub_1001E6ED8(*(_BYTE *)(v21
                           + OBJC_IVAR____TtC22SubscribePageExtension34BaseCollectionViewLayoutAttributes_isRubberbanding));

  }
}

void sub_1003C58CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator);
  if (Strong)
  {
    v3 = (void *)Strong;
    dispatch thunk of VideoPlaybackCoordinator.resumeAutoPlayVideo()();

  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_isAutoScrollEnabled) = 1;
  if (!*(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_autoScrollTimer))
    sub_1001E7C0C(0.0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_isPlaying) = 1;
}

void sub_1003C5954()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_isAutoScrollEnabled) = 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_autoScrollTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_autoScrollTimer) = 0;
  objc_msgSend(v2, "invalidate");

  *(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_isPlaying) = 0;
}

void sub_1003C5B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t Strong;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t, __n128);
  __n128 v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  __n128 v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t, __n128);
  double (*v66)(char *, char *, uint64_t);
  char *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _QWORD *v80;
  __n128 v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  char *v87;
  __n128 v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  id v102;
  uint64_t v103;
  id v104;
  __n128 v105;
  __n128 v106;
  void (*v107)(char *, uint64_t, __n128);
  uint64_t v108;
  double (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char v121[24];
  char v122[32];

  v120 = type metadata accessor for ImpressionMetrics.ID(0);
  v118 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v117 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v119 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v108 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v108 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v108 - v14;
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD **)(v16 - 8);
  __chkstk_darwin(v16);
  v116 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v108 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v108 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v108 - v26;
  a1 += 16;
  swift_beginAccess(a1, v122, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v29 = (char *)Strong;
  v30 = a2 + 16;
  swift_beginAccess(v30, v121, 0, 0);
  v31 = swift_weakLoadStrong(v30);
  if (!v31)
  {

    return;
  }
  v115 = v31;
  v112 = v21;
  v32 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView;
  v33 = *(char **)&v29[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView];
  if ((v33[OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_previousIndex + 8] & 1) == 0)
  {
    v113 = v16;
    v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_previousIndex];
    v35 = v33;
    v114 = v17;
    v36 = v35;
    v37 = v34;
    v16 = v113;
    v38 = (char *)sub_100465984(v37, 0);

    v17 = v114;
    if (v38)
    {
      v39 = OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_heroCarouselItem;
      v111 = v38;
      v40 = *(_QWORD *)&v38[OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_heroCarouselItem];
      if (v40)
      {
        v41 = swift_retain(v40);
        HeroCarouselItem.impressionMetrics.getter(v41);
        v42 = swift_release(v40);
        v43 = v16;
        v44 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v114[6];
        if (v44(v15, 1, v43, v42) != 1)
        {
          v109 = (double (*)(char *, char *, uint64_t))v114[4];
          v45.n128_f64[0] = v109(v27, v15, v113);
          v46 = v117;
          ImpressionMetrics.id.getter(v45);
          v47 = ImpressionsCalculator.childCalculator(for:)(v46);
          (*(void (**)(char *, uint64_t))(v118 + 8))(v46, v120);
          if (v47)
          {
            v110 = v47;
            v49 = *(_QWORD *)&v111[v39];
            if (v49
              && (v50 = swift_retain(*(_QWORD *)&v111[v39]),
                  v51 = HeroCarouselItem.overlay.getter(v50),
                  v52 = swift_release(v49),
                  v51))
            {
              HeroCarouselItemOverlay.impressionMetrics.getter(v52);
              v53 = swift_release(v51);
              if (v44(v12, 1, v113, v53) != 1)
              {
                v54 = v12;
                v55 = v113;
                v56.n128_f64[0] = v109(v24, v54, v113);
                v57 = v110;
                ImpressionsCalculator.removeElement(_:)(v24, v56);
                v58 = swift_release(v57);
                ((void (*)(char *, uint64_t, __n128))v114[1])(v24, v55, v58);
                goto LABEL_17;
              }
            }
            else
            {
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v114[7])(v12, 1, 1, v113);
            }
            swift_release(v110);
            sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7740);
          }
LABEL_17:
          ImpressionsCalculator.removeElement(_:)(v27, v48);

          v16 = v113;
          v17 = v114;
          ((void (*)(char *, uint64_t))v114[1])(v27, v113);
          goto LABEL_18;
        }
      }
      else
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v114[7])(v15, 1, 1, v16);
      }

      sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007F7740);
      v16 = v113;
      v17 = v114;
    }
  }
LABEL_18:
  v59 = *(id *)&v29[v32];
  v60 = (char *)sub_1001E7118();

  if (!v60)
  {

    swift_release(v115);
    return;
  }
  v61 = OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_heroCarouselItem;
  v62 = *(_QWORD *)&v60[OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_heroCarouselItem];
  if (!v62)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17[7])(v9, 1, 1, v16);
    goto LABEL_29;
  }
  v63 = swift_retain(*(_QWORD *)&v60[OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_heroCarouselItem]);
  HeroCarouselItem.impressionMetrics.getter(v63);
  v64 = swift_release(v62);
  v65 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v17[6];
  if (v65(v9, 1, v16, v64) == 1)
  {
LABEL_29:

    swift_release(v115);
    v103 = (uint64_t)v9;
LABEL_30:
    sub_100011088(v103, (uint64_t *)&unk_1007F7740);
    return;
  }
  v66 = (double (*)(char *, char *, uint64_t))v17[4];
  v67 = v112;
  v66(v112, v9, v16);
  objc_msgSend(v60, "bounds");
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v76 = objc_msgSend(v29, "superview");
  objc_msgSend(v60, "convertRect:toView:", v76, v69, v71, v73, v75);

  v77 = v115;
  ImpressionsCalculator.addElement(_:at:)(v67);
  v78 = *(void **)&v60[OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_overlayView];
  if (!v78)
  {
    ((void (*)(char *, uint64_t))v17[1])(v67, v16);

    swift_release(v77);
    return;
  }
  v79 = *(_QWORD *)&v60[v61];
  if (!v79)
  {
    v104 = v78;
    goto LABEL_34;
  }
  v80 = v78;
  v81 = swift_retain(v79);
  v82 = HeroCarouselItem.overlay.getter(v81);
  v83 = swift_release(v79);
  if (!v82)
  {
LABEL_34:
    v84 = v119;
    v86 = v16;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v17[7])(v119, 1, 1, v16, v83);
    goto LABEL_35;
  }
  v114 = v80;
  v84 = v119;
  HeroCarouselItemOverlay.impressionMetrics.getter(v83);
  v85 = swift_release(v82);
  v86 = v16;
  if (v65(v84, 1, v16, v85) == 1)
  {
LABEL_35:

    v105 = swift_release(v115);
    ((void (*)(char *, uint64_t, __n128))v17[1])(v112, v86, v105);
    v103 = (uint64_t)v84;
    goto LABEL_30;
  }
  v87 = v116;
  v88.n128_f64[0] = v66(v116, v84, v16);
  v89 = v117;
  v90 = v112;
  ImpressionMetrics.id.getter(v88);
  v91 = v115;
  v92 = ImpressionsCalculator.childCalculator(for:)(v89);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v89, v120);
  if (v92)
  {
    v93 = v114;
    objc_msgSend(v93, "bounds");
    v95 = v94;
    v97 = v96;
    v99 = v98;
    v101 = v100;
    v102 = objc_msgSend(v29, "superview");
    objc_msgSend(v93, "convertRect:toView:", v102, v95, v97, v99, v101);

    ImpressionsCalculator.addElement(_:at:)(v87);
    swift_release(v92);
  }
  else
  {

  }
  v106 = swift_release(v91);
  v107 = (void (*)(char *, uint64_t, __n128))v17[1];
  v107(v87, v86, v106);
  ((void (*)(char *, uint64_t))v107)(v90, v86);
}

id sub_1003C6334()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003C6460()
{
  return type metadata accessor for HeroCarouselCollectionViewCell(0);
}

uint64_t type metadata accessor for HeroCarouselCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C118;
  if (!qword_10080C118)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroCarouselCollectionViewCell);
  return result;
}

void sub_1003C64A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[14];

  sub_10006A5F8(319, (unint64_t *)&qword_1007F52D0, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_1003C65AC(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v8[4] = &unk_1006897F0;
      v8[5] = &unk_100689808;
      v8[6] = &unk_1006897F0;
      v8[7] = &unk_100689808;
      sub_10006A5F8(319, (unint64_t *)&unk_10080C140, (uint64_t (*)(uint64_t))&type metadata accessor for TitleEffect);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        v8[9] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[10] = &unk_100689820;
        v8[11] = &unk_100689838;
        v8[12] = &unk_100689838;
        v8[13] = &unk_100689808;
        swift_updateClassMetadata2(a1, 256, 14, v8, a1 + 80);
      }
    }
  }
}

void sub_1003C65AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080C130)
  {
    v2 = sub_100010EF8((uint64_t *)&unk_100800670);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080C130);
  }
}

double sub_1003C6604()
{
  void *v0;
  CGRect v2;

  objc_msgSend(v0, "bounds");
  return CGRectGetMaxY(v2);
}

uint64_t sub_1003C6624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_playbackId;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10006BFD4(v3, a1);
}

uint64_t sub_1003C6674()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_isPlaying);
}

uint64_t sub_1003C668C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_visibilityTrackingView);
}

id sub_1003C669C(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "isDescendantOfView:", a1);
}

id sub_1003C66C0(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "convertRect:toView:", a1);
}

uint64_t sub_1003C66D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100019310(v4, v5);
}

uint64_t sub_1003C66F4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_1003C673C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_1003C6794(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_10008B024;
}

uint64_t sub_1003C6804()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_1003C685C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

uint64_t (*sub_1003C68B8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_1003C68FC())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject(&unk_10073CB58, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = swift_allocObject(&unk_10073CB80, 24, 7);
  swift_weakInit(v1 + 16);
  v2 = swift_allocObject(&unk_10073CBA8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1003C6A78;
}

uint64_t sub_1003C6994@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, (uint64_t *)&unk_10080C150);
}

uint64_t sub_1003C69F0()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0
                                + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect));
}

uint64_t sub_1003C6A04()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C6A28()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C6A4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003C6A78()
{
  uint64_t v0;

  sub_1003C5B64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003C6A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_10080C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1003C6AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(__n128);
  uint64_t v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t Strong;
  void *v27;
  _BYTE v28[16];
  _BYTE v29[24];
  _BYTE v30[24];

  v3 = v2;
  v6 = sub_10000DF3C((uint64_t *)&unk_100800670);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10000DF3C((uint64_t *)&unk_10080C160);
  __chkstk_darwin(v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v3 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_state;
  swift_beginAccess(v3 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_state, v30, 0, 0);
  sub_1000194E4(v13, (uint64_t)v12, (uint64_t *)&unk_10080C160);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_100011088((uint64_t)v12, (uint64_t *)&unk_10080C160);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
    v14 = sub_100011088((uint64_t)v12, (uint64_t *)&unk_10080C160);
    __chkstk_darwin(v14);
    *(_QWORD *)&v28[-16] = a1;
    sub_1001D0FB0();
    WritableStateLens<A>.updateValue(_:)(sub_1003C6FD4, v15);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  v16 = v3 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock;
  swift_beginAccess(v3 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock, v29, 0, 0);
  v17 = *(void (**)(__n128))v16;
  if (*(_QWORD *)v16)
  {
    v18 = *(_QWORD *)(v16 + 8);
    v19 = swift_retain(v18);
    v17(v19);
    sub_100019310((uint64_t)v17, v18);
  }
  if (a2)
  {
    v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2
                                                       + OBJC_IVAR____TtC22SubscribePageExtension20HeroCarouselItemView_backgroundView)
                                           + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer)
                               + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer)
                   + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
    if (v20)
    {
      v21 = type metadata accessor for VideoView(0);
      v22 = swift_dynamicCastClass(v20, v21);
      if (v22)
      {
        v23 = *(void **)(v22 + qword_10080FD38);
        if (v23)
        {
          v24 = v20;
          v25 = v23;
          dispatch thunk of VideoPlayer.restart()();

        }
      }
    }
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator);
  if (Strong)
  {
    v27 = (void *)Strong;
    dispatch thunk of VideoPlaybackCoordinator.resumeAutoPlayVideo()();

  }
}

void sub_1003C6D50()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_itemLayoutContext];
  v7 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_carouselView;
  v9 = type metadata accessor for HeroCarouselView(0);
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  v10 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_state];
  v11 = sub_10000DF3C((uint64_t *)&unk_100800670);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_tapGestureRecognizer;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v13 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  *v13 = 0;
  v13[1] = 0;
  swift_weakInit(&v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsCalculator]);
  v14 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  *v14 = 0;
  v14[1] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator]);
  v15 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_currentTitleEffect];
  v16 = type metadata accessor for TitleEffect(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect;
  v18 = sub_10000DF3C(&qword_10080C170);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)&v1[v17] = SyncEvent.init()();
  v20 = UUID.init()(v19);
  v21 = UUID.uuidString.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24[0] = v21;
  v24[1] = v23;
  AnyHashable.init<A>(_:)(v24, &type metadata for String, &protocol witness table for String);
  v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_allowsAutoPlay] = 1;
  v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_isPlaying] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselCollectionViewCell_visibilityTrackingView]);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/HeroCarouselCollectionViewCell.swift", 59, 2, 55, 0);
  __break(1u);
}

id sub_1003C6FD4(uint64_t a1)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC22SubscribePageExtension16HeroCarouselView_pageControl), "currentPage");
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

unint64_t CompoundActionImplementation.PerformError.localizedDescription.getter()
{
  __int128 *v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[5];
  __int128 v8;
  uint64_t v9;

  sub_1003C7114(v0, (uint64_t)&v8);
  if (!v9)
    return 0xD00000000000003ALL;
  sub_100010F3C(&v8, (uint64_t)v7);
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  v1._object = (void *)0x8000000100648760;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  v2 = sub_10000DF3C((uint64_t *)&unk_1007FD690);
  _print_unlocked<A, B>(_:_:)(v7, v6, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v3._countAndFlagsBits = 0xD000000000000019;
  v3._object = (void *)0x8000000100648780;
  String.append(_:)(v3);
  v4 = v6[0];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v7);
  return v4;
}

uint64_t sub_1003C7114(__int128 *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v3 = *((_QWORD *)a1 + 3);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *a1;
    v6 = a1[1];
    *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
  else
  {
    v4 = *((_QWORD *)a1 + 4);
    *(_QWORD *)(a2 + 24) = v3;
    *(_QWORD *)(a2 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a2);
  }
  return a2;
}

uint64_t CompoundActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  __n128 v22;
  __n128 v23;
  __int128 v25;
  unint64_t v26;
  void *v27;
  _QWORD v28[3];
  uint64_t v29;
  void *v30;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_1007F78F0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  BaseObjectGraph.optional<A>(_:)(v5, v10, v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100037038((uint64_t)v5);
    sub_10000DF3C(&qword_100803510);
    v11 = sub_1003C740C();
    v12 = swift_allocError(&type metadata for CompoundActionImplementation.PerformError, v11, 0, 0);
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    *(_QWORD *)(v13 + 32) = 0;
    return Promise.__allocating_init(error:)(v12);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v9, v5, v6);
    v15 = ActionDispatcher.targetQueue.getter(v6);
    if (v15)
    {
      v16 = v15;
      v26 = sub_1000C0EC4();
      v27 = &protocol witness table for OS_dispatch_queue;
      *(_QWORD *)&v25 = v16;
      sub_100010F3C(&v25, (uint64_t)v28);
    }
    else
    {
      v29 = type metadata accessor for SyncTaskScheduler();
      v30 = &protocol witness table for SyncTaskScheduler;
      sub_1000117C0(v28);
      SyncTaskScheduler.init()();
    }
    v17 = sub_10000DF3C(&qword_100803510);
    v14 = Promise.__allocating_init()(v17);
    v18 = swift_allocObject(&unk_10073CC98, 32, 7);
    *(_QWORD *)(v18 + 16) = CompoundAction.actions.getter();
    *(_QWORD *)(v18 + 24) = 0;
    v19 = v29;
    v20 = v30;
    sub_100011064(v28, v29);
    sub_100011020((uint64_t)v28, (uint64_t)&v25);
    v21 = (_QWORD *)swift_allocObject(&unk_10073CCC0, 80, 7);
    v21[2] = v18;
    v21[3] = v14;
    v21[4] = a2;
    sub_100010F3C(&v25, (uint64_t)(v21 + 5));
    swift_retain(v18);
    swift_retain(v14);
    v22 = swift_retain(a2);
    dispatch thunk of TaskScheduler.schedule(task:)(sub_1003C7820, v21, v19, v20, v22);
    v23 = swift_release(v21);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
    swift_release(v18);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v28);
  }
  return v14;
}

unint64_t sub_1003C740C()
{
  unint64_t result;

  result = qword_10080C178;
  if (!qword_10080C178)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CompoundActionImplementation.PerformError, &type metadata for CompoundActionImplementation.PerformError);
    atomic_store(result, (unint64_t *)&qword_10080C178);
  }
  return result;
}

uint64_t sub_1003C7450()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003C7474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38[2];

  v34 = a4;
  v36 = a3;
  v37 = a2;
  v5 = type metadata accessor for ActionOutcome(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v9);
  v11 = (char **)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DF3C(&qword_1007F78F0);
  v35 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v33 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v38, 33, 0);
  v16 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v18 = *(_QWORD *)(a1 + 16);
    else
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v16);
    if (v15 == v19)
      goto LABEL_3;
  }
  else if (v15 == *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v17 = swift_endAccess(v38);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v8, enum case for ActionOutcome.performed(_:), v5, v17);
    Promise.resolve(_:)(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return;
  }
  v20 = *v14;
  if ((*v14 & 0xC000000000000001) != 0)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v20);
    v21 = v35;
    v22 = v36;
    v24 = v15 + 1;
    if (!__OFADD__(v15, 1))
      goto LABEL_12;
    goto LABEL_19;
  }
  v21 = v35;
  v22 = v36;
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v15 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_21:
    __break(1u);
    return;
  }
  v23 = *(_QWORD *)(v20 + 8 * v15 + 32);
  swift_retain(v23);
  v24 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_12:
  *(_QWORD *)(a1 + 24) = v24;
  swift_endAccess(v38);
  BaseObjectGraph.optional<A>(_:)(v11, v12, v12);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v11, 1, v12) == 1)
  {
    sub_100037038((uint64_t)v11);
    sub_10000DF3C(&qword_100803510);
    v25 = sub_1000559B4();
    v26 = swift_allocError(&type metadata for GeneralActionImplementationError, v25, 0, 0);
    *v27 = 1;
    v28 = Promise.__allocating_init(error:)(v26);
  }
  else
  {
    v29 = (uint64_t)v33;
    (*(void (**)(char *, _QWORD *, uint64_t))(v21 + 32))(v33, v11, v12);
    v28 = sub_10008EB60(v23, v22, v29);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v12);
  }
  v30 = v34;
  sub_100011020(v34, (uint64_t)v38);
  v31 = (_QWORD *)swift_allocObject(&unk_10073CD98, 88, 7);
  v32 = v37;
  v31[2] = a1;
  v31[3] = v32;
  v31[4] = v22;
  sub_100010F3C(v38, (uint64_t)(v31 + 5));
  v31[10] = v23;
  swift_retain_n(v32, 2);
  swift_retain(a1);
  swift_retain(v22);
  swift_retain(v23);
  Promise.then(perform:orCatchError:on:)(sub_1003C7C70, v31, j___s9JetEngine7PromiseC6rejectyys5Error_pF, v32, v30);
  swift_release(v23);
  swift_release(v28);
  swift_release(v31);
  swift_release(v32);
}

uint64_t sub_1003C77E4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 5);
  return swift_deallocObject(v0, 80, 7);
}

void sub_1003C7820()
{
  uint64_t *v0;

  sub_1003C7474(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_1003C7834()
{
  return sub_1003C7C88((unint64_t *)&unk_1007F7920, (uint64_t (*)(uint64_t))&type metadata accessor for CompoundAction);
}

uint64_t sub_1003C7858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v12 = type metadata accessor for ActionOutcome(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == enum case for ActionOutcome.performed(_:))
    return sub_1003C7474(a2, a3, a4, a5);
  if (v17 == enum case for ActionOutcome.unsupported(_:))
  {
    v19 = sub_1003C740C();
    v20 = swift_allocError(&type metadata for CompoundActionImplementation.PerformError, v19, 0, 0);
    v22 = v21;
    v21[3] = type metadata accessor for Action(0);
    v22[4] = sub_1003C7C88((unint64_t *)&unk_1007F7908, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
    *v22 = a6;
    swift_retain(a6);
    Promise.reject(_:)(v20);
    return swift_errorRelease(v20);
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v12, v12);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C79BC(uint64_t *a1, uint64_t a2)
{
  return CompoundActionImplementation.perform(_:asPartOf:)(*a1, a2);
}

ValueMetadata *type metadata accessor for CompoundActionImplementation()
{
  return &type metadata for CompoundActionImplementation;
}

_QWORD *destroy for CompoundActionImplementation.PerformError(_QWORD *a1)
{
  if (a1[3] >= 0xFFFFFFFFuLL)
    return (_QWORD *)_s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  return a1;
}

uint64_t initializeWithCopy for CompoundActionImplementation.PerformError(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for CompoundActionImplementation.PerformError(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_10001216C((_QWORD *)a1, a2);
  return a1;
}

uint64_t assignWithTake for CompoundActionImplementation.PerformError(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompoundActionImplementation.PerformError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CompoundActionImplementation.PerformError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_1003C7BD8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1003C7BF0(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CompoundActionImplementation.PerformError()
{
  return &type metadata for CompoundActionImplementation.PerformError;
}

uint64_t sub_1003C7C2C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 5);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003C7C70(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003C7858(a1, v1[2], v1[3], v1[4], (uint64_t)(v1 + 5), v1[10]);
}

uint64_t sub_1003C7C88(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v4);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1003C7CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double result;
  _QWORD v13[3];
  uint64_t v14;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton);
  sub_100175D94(a1, (uint64_t)v13);
  v5 = v14;
  if (v14)
  {
    v6 = sub_100011064(v13, v14);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v13);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v4, "addTarget:action:forControlEvents:", v11, a2, 64);
  *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  return result;
}

char *sub_1003C7DC8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(_QWORD *, char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  __n128 v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(_QWORD *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  Class v45;
  _QWORD *v46;
  __n128 v47;
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(_QWORD *, char *, uint64_t);
  NSString *v51;
  void (*v52)(char *, uint64_t);
  _QWORD *v53;
  NSString *v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  objc_class *v64;
  id v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  id v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  double left;
  double bottom;
  double right;
  char *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t v95;
  void (*v96)(_QWORD *, char *, uint64_t);
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  objc_class *ObjectType;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *);
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  objc_class *v116;
  void (*v117)(char *, _QWORD, uint64_t, uint64_t);
  void (*v118)(char *, uint64_t, uint64_t);
  objc_super v119;
  _QWORD v120[5];
  _QWORD v121[3];
  uint64_t v122;
  void *v123;
  _QWORD v124[3];
  uint64_t v125;
  void *v126;
  _QWORD v127[3];
  uint64_t v128;
  void *v129;
  _QWORD v130[3];
  uint64_t v131;
  void *v132;
  _QWORD v133[3];
  uint64_t v134;
  void *v135;
  _QWORD v136[5];
  _QWORD v137[5];
  _QWORD v138[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v105 = type metadata accessor for DirectionalTextAlignment(0);
  v102 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v106 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v10);
  v104 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v12);
  v101 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C(&qword_1007F55F0);
  __chkstk_darwin(v14);
  v110 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v113 = (void (*)(char *))((char *)&v95 - v17);
  __chkstk_darwin(v18);
  v112 = (char *)&v95 - v19;
  v21 = __chkstk_darwin(v20);
  v111 = (char *)&v95 - v22;
  v23 = type metadata accessor for FontSource(0, v21);
  v24 = *(_QWORD **)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_metrics;
  v138[3] = &type metadata for Double;
  v138[4] = &protocol witness table for Double;
  v137[4] = &protocol witness table for Double;
  v138[0] = 0x4024000000000000;
  v137[3] = &type metadata for Double;
  v137[0] = 0x4000000000000000;
  v28 = qword_1007F2588;
  v103 = v4;
  if (v28 != -1)
    swift_once(&qword_1007F2588, sub_1004159E0);
  v100 = &v4[v27];
  v29 = type metadata accessor for FontUseCase(0);
  v114 = sub_1000117A8(v29, (uint64_t)qword_100855580);
  v109 = *(_QWORD **)(v29 - 8);
  v118 = (void (*)(char *, uint64_t, uint64_t))v109[2];
  v118(v26, v114, v29);
  LODWORD(v117) = enum case for FontSource.useCase(_:);
  v30 = (objc_class *)v24[13];
  ((void (*)(char *))v30)(v26);
  v31 = type metadata accessor for StaticDimension(0);
  v136[3] = v31;
  v136[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v136);
  v134 = v23;
  v135 = &protocol witness table for FontSource;
  v32 = sub_1000117C0(v133);
  v33 = (void (*)(_QWORD *, char *, uint64_t))v24[2];
  v33(v32, v26, v23);
  StaticDimension.init(_:scaledLike:)(v133, 30.0);
  v34 = (void (*)(char *, uint64_t))v24[1];
  v34(v26, v23);
  v133[0] = 0x405C000000000000;
  v130[0] = 0x4044000000000000;
  v35 = sub_10000DF3C(&qword_1007F5D10);
  v36 = Conditional<>.init(regularValue:compactValue:)(v133, v130, v35, &type metadata for CGFloat);
  v108 = v29;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v118)(v26, v114, v29, v36);
  v116 = v30;
  ((void (*)(char *, _QWORD, uint64_t))v30)(v26, v117, v23);
  v98 = v31;
  v134 = v31;
  v135 = &protocol witness table for StaticDimension;
  sub_1000117C0(v133);
  v131 = v23;
  v132 = &protocol witness table for FontSource;
  v37 = sub_1000117C0(v130);
  v33(v37, v26, v23);
  StaticDimension.init(_:scaledLike:)(v130, 26.0);
  v115 = v34;
  v34(v26, v23);
  v130[0] = 0x405C000000000000;
  v127[0] = 0x4044000000000000;
  Conditional<>.init(regularValue:compactValue:)(v130, v127, v35, &type metadata for CGFloat);
  if (qword_1007F2590 != -1)
    swift_once(&qword_1007F2590, sub_1004159F8);
  v38 = v108;
  v99 = sub_1000117A8(v108, (uint64_t)qword_100855598);
  v39 = v118;
  ((void (*)(char *))v118)(v26);
  ((void (*)(char *, _QWORD, uint64_t))v116)(v26, v117, v23);
  v40 = v98;
  v131 = v98;
  v132 = &protocol witness table for StaticDimension;
  sub_1000117C0(v130);
  v128 = v23;
  v129 = &protocol witness table for FontSource;
  v41 = sub_1000117C0(v127);
  v33(v41, v26, v23);
  StaticDimension.init(_:scaledLike:)(v127, 20.0);
  v115(v26, v23);
  v127[0] = 0x405C000000000000;
  v124[0] = 0x4044000000000000;
  Conditional<>.init(regularValue:compactValue:)(v127, v124, v35, &type metadata for CGFloat);
  v42 = v33;
  v97 = (void (*)(char *, uint64_t, uint64_t))v35;
  if (qword_1007F2578 != -1)
    swift_once(&qword_1007F2578, sub_1004159AC);
  v43 = sub_1000117A8(v38, (uint64_t)qword_100855550);
  v39(v26, v43, v38);
  v44 = v117;
  v45 = v116;
  ((void (*)(char *, _QWORD, uint64_t))v116)(v26, v117, v23);
  v128 = v40;
  v129 = &protocol witness table for StaticDimension;
  sub_1000117C0(v127);
  v125 = v23;
  v126 = &protocol witness table for FontSource;
  v46 = sub_1000117C0(v124);
  v96 = v42;
  v42(v46, v26, v23);
  StaticDimension.init(_:scaledLike:)(v124, 42.0);
  v115(v26, v23);
  v124[0] = 0x4052000000000000;
  v121[0] = 0x4034000000000000;
  v47 = Conditional<>.init(regularValue:compactValue:)(v124, v121, v97, &type metadata for CGFloat);
  *(_QWORD *)v26 = UIFontTextStyleBody;
  *((_DWORD *)v26 + 2) = 0;
  v48 = enum case for FontUseCase.preferredFont(_:);
  v97 = (void (*)(char *, uint64_t, uint64_t))v109[13];
  ((void (*)(char *, _QWORD, uint64_t, __n128))v97)(v26, enum case for FontUseCase.preferredFont(_:), v38, v47);
  ((void (*)(char *, uint64_t, uint64_t))v45)(v26, v44, v23);
  v125 = v40;
  v126 = &protocol witness table for StaticDimension;
  sub_1000117C0(v124);
  v122 = v23;
  v123 = &protocol witness table for FontSource;
  v49 = sub_1000117C0(v121);
  v50 = v96;
  v96(v49, v26, v23);
  v51 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v121, 50.0);
  v52 = v115;
  v115(v26, v23);
  *(_QWORD *)v26 = v51;
  *((_DWORD *)v26 + 2) = 0;
  v97(v26, v48, v38);
  ((void (*)(char *, _QWORD, uint64_t))v116)(v26, v117, v23);
  v122 = v40;
  v123 = &protocol witness table for StaticDimension;
  sub_1000117C0(v121);
  v120[3] = v23;
  v120[4] = &protocol witness table for FontSource;
  v53 = sub_1000117C0(v120);
  v50(v53, v26, v23);
  v54 = v51;
  StaticDimension.init(_:scaledLike:)(v120, 20.0);
  v52(v26, v23);
  InstallPagePreInstallFreeLayout.Metrics.init(iconSize:ageRatingMargin:ageRatingBaselineOffset:titleSpace:titleHorizontalMargin:parentTitleSpace:parentTitleHorizontalMargin:subtitleSpace:subtitleHorizontalMargin:descriptionSpace:descriptionHorizontalMargin:offerButtonMargin:bottomSpace:)(v138, v137, v136, v111, v133, v112, v130, v113, 144.0, 144.0, v127, v110, v124, v121);
  if (qword_1007F1BE8 != -1)
    swift_once(&qword_1007F1BE8, sub_1002F2A74);
  v55 = (uint64_t)v101;
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&qword_100853AB0);
  v56 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  v57 = sub_10021DFE0(v55, 1);
  v58 = v103;
  v59 = v104;
  *(_QWORD *)&v103[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_inAppPurchaseView] = v57;
  v60 = v114;
  v118(v59, v114, v38);
  v61 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v109[7];
  v61(v59, 0, 1, v38);
  v117 = v61;
  LODWORD(v115) = enum case for DirectionalTextAlignment.none(_:);
  v113 = *(void (**)(char *))(v102 + 104);
  v63 = v105;
  v62 = v106;
  v113(v106);
  v64 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v65 = objc_allocWithZone(v64);
  *(_QWORD *)&v58[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v59, 0, 0, 1, 0, v62, 0, 0);
  v66 = v60;
  v67 = v118;
  v118(v59, v66, v38);
  v61(v59, 0, 1, v38);
  v68 = v115;
  v69 = (void (*)(char *, uint64_t, uint64_t))v113;
  ((void (*)(char *, _QWORD, uint64_t))v113)(v62, v115, v63);
  v70 = objc_allocWithZone(v64);
  v71 = v58;
  *(_QWORD *)&v58[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v59, 0, 0, 1, 0, v62, 0, 0);
  v72 = v108;
  v67(v59, v99, v108);
  v117(v59, 0, 1, v72);
  v69(v62, v68, v63);
  v116 = v64;
  v73 = objc_allocWithZone(v64);
  *(_QWORD *)&v71[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v59, 0, 0, 1, 0, v62, 0, 0);
  if (qword_1007F2580 != -1)
    swift_once(&qword_1007F2580, sub_1004159C4);
  v74 = sub_1000117A8(v72, (uint64_t)qword_100855568);
  v67(v59, v74, v72);
  v117(v59, 0, 1, v72);
  v69(v62, v68, v63);
  v75 = objc_allocWithZone(v116);
  *(_QWORD *)&v71[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v59, 0, 0, 1, 0, v62, 0, 0);
  *(_QWORD *)&v71[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OfferButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v71[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AgeRatingBadgeView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v119.receiver = v71;
  v119.super_class = ObjectType;
  v76 = objc_msgSendSuper2(&v119, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v80 = (char *)v76;
  objc_msgSend(v80, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v80, "setScrollEnabled:", 1);
  objc_msgSend(v80, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v81 = OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel;
  v82 = *(void **)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel];
  objc_msgSend(v82, "setTextAlignment:", 1);
  v83 = OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel;
  objc_msgSend(*(id *)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel], "setTextAlignment:", 1);
  v84 = OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel;
  objc_msgSend(*(id *)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel], "setTextAlignment:", 1);
  v85 = OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel;
  objc_msgSend(*(id *)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel], "setTextAlignment:", 1);
  sub_1000117FC();
  v86 = v82;
  v87 = (void *)static UIColor.primaryText.getter(v86);
  objc_msgSend(v86, "setTextColor:", v87);

  v88 = *(id *)&v80[v83];
  v89 = (void *)static UIColor.secondaryText.getter(v88);
  objc_msgSend(v88, "setTextColor:", v89);

  v90 = *(id *)&v80[v84];
  v91 = (void *)static UIColor.tertiaryText.getter(v90);
  objc_msgSend(v90, "setTextColor:", v91);

  v92 = *(id *)&v80[v85];
  v93 = (void *)static UIColor.primaryText.getter(v92);
  objc_msgSend(v92, "setTextColor:", v93);

  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_inAppPurchaseView]);
  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[v81]);
  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[v83]);
  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[v84]);
  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[v85]);
  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton]);
  objc_msgSend(v80, "addSubview:", *(_QWORD *)&v80[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge]);

  return v80;
}

double sub_1003C8B0C(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  _QWORD v39[5];
  _QWORD v40[5];
  _QWORD v41[5];
  _QWORD v42[5];
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD v46[6];

  v7 = type metadata accessor for InstallPagePreInstallFreeLayout.Metrics(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v10;
  v11 = type metadata accessor for InstallPagePreInstallFreeLayout(0);
  v12 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  v37 = v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_metrics, v7, v13);
  v16 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_inAppPurchaseView);
  v46[3] = type metadata accessor for InAppPurchaseView(0);
  v46[4] = &protocol witness table for UIView;
  v46[0] = v16;
  v17 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel);
  v44 = type metadata accessor for DynamicTypeLabel(0);
  v45 = &protocol witness table for UILabel;
  v43 = v17;
  v18 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel);
  v42[3] = v44;
  v42[4] = &protocol witness table for UILabel;
  v41[4] = &protocol witness table for UILabel;
  v42[0] = v18;
  v19 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel);
  v41[3] = v44;
  v40[4] = &protocol witness table for UILabel;
  v41[0] = v19;
  v20 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel);
  v40[3] = v44;
  v40[0] = v20;
  v21 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge);
  v39[3] = type metadata accessor for AgeRatingBadgeView(0);
  v39[4] = &protocol witness table for UIView;
  v39[0] = v21;
  v22 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton);
  v38[3] = type metadata accessor for OfferButton();
  v38[4] = &protocol witness table for UIView;
  v38[0] = v22;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  v29 = v22;
  InstallPagePreInstallFreeLayout.init(metrics:iconView:titleText:parentTitleText:subtitleText:descriptionText:ageRatingView:offerButton:)(v35, v46, &v43, v42, v41, v40, v39, v38);
  v30 = sub_1003C9200();
  v31 = v36;
  v32 = dispatch thunk of Measurable.measurements(fitting:in:)(v4, v36, v30, a1, a2);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v31);
  return v32;
}

uint64_t sub_1003C8D94()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  char *v28;
  double Width;
  char *v31;
  char *v32;
  objc_class *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  _QWORD v40[5];
  _QWORD v41[5];
  _QWORD v42[5];
  _QWORD v43[5];
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD v47[5];
  objc_super v48;
  CGRect v49;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v33 = ObjectType;
  v3 = type metadata accessor for LayoutRect(0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  __chkstk_darwin(v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for InstallPagePreInstallFreeLayout.Metrics(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v9;
  v10 = type metadata accessor for InstallPagePreInstallFreeLayout(0);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v32 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48.receiver = v1;
  v48.super_class = ObjectType;
  objc_msgSendSuper2(&v48, "layoutSubviews", v11);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_metrics], v6);
  v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_inAppPurchaseView];
  v47[3] = type metadata accessor for InAppPurchaseView(0);
  v47[4] = &protocol witness table for UIView;
  v47[0] = v13;
  v14 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_titleLabel];
  v45 = type metadata accessor for DynamicTypeLabel(0);
  v46 = &protocol witness table for UILabel;
  v44 = v14;
  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel];
  v43[3] = v45;
  v43[4] = &protocol witness table for UILabel;
  v42[4] = &protocol witness table for UILabel;
  v43[0] = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel];
  v42[3] = v45;
  v41[4] = &protocol witness table for UILabel;
  v42[0] = v16;
  v17 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel];
  v41[3] = v45;
  v41[0] = v17;
  v18 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge];
  v40[3] = type metadata accessor for AgeRatingBadgeView(0);
  v40[4] = &protocol witness table for UIView;
  v40[0] = v18;
  v19 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_offerButton];
  v39[3] = type metadata accessor for OfferButton();
  v39[4] = &protocol witness table for UIView;
  v39[0] = v19;
  v20 = v13;
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v32;
  InstallPagePreInstallFreeLayout.init(metrics:iconView:titleText:parentTitleText:subtitleText:descriptionText:ageRatingView:offerButton:)(v31, v47, &v44, v43, v42, v41, v40, v39);
  LayoutMarginsAware<>.layoutFrame.getter(v33);
  v28 = v34;
  InstallPagePreInstallFreeLayout.placeChildren(relativeTo:in:)(v1, 0.0, 0.0);
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v49);
  LayoutRect.size.getter();
  objc_msgSend(v1, "setContentSize:", Width);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v27, v36);
}

uint64_t sub_1003C9138()
{
  return type metadata accessor for InstallPagePreInstallFreeOfferView(0);
}

uint64_t type metadata accessor for InstallPagePreInstallFreeOfferView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C1B0;
  if (!qword_10080C1B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstallPagePreInstallFreeOfferView);
  return result;
}

uint64_t sub_1003C917C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[8];

  result = type metadata accessor for InstallPagePreInstallFreeLayout.Metrics(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 8, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1003C9200()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080C1C8;
  if (!qword_10080C1C8)
  {
    v1 = type metadata accessor for InstallPagePreInstallFreeLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for InstallPagePreInstallFreeLayout, v1);
    atomic_store(result, (unint64_t *)&qword_10080C1C8);
  }
  return result;
}

void sub_1003C9248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(_QWORD *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, _QWORD, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_QWORD *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  NSString *v37;
  _QWORD *v38;
  NSString *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t);
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  void (*v46)(_QWORD *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];
  _QWORD v57[3];
  uint64_t v58;
  void *v59;
  _QWORD v60[3];
  uint64_t v61;
  void *v62;
  _QWORD v63[3];
  uint64_t v64;
  void *v65;
  _QWORD v66[3];
  uint64_t v67;
  void *v68;
  _QWORD v69[3];
  uint64_t v70;
  void *v71;
  _QWORD v72[5];
  _QWORD v73[5];
  _QWORD v74[6];

  v0 = sub_10000DF3C(&qword_1007F55F0);
  __chkstk_darwin(v0);
  v48 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v51 = (char *)&v40 - v3;
  __chkstk_darwin(v4);
  v50 = (char *)&v40 - v5;
  v7 = __chkstk_darwin(v6);
  v49 = (char *)&v40 - v8;
  v9 = type metadata accessor for FontSource(0, v7);
  v10 = *(_QWORD **)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = OBJC_IVAR____TtC22SubscribePageExtension34InstallPagePreInstallFreeOfferView_metrics;
  v74[3] = &type metadata for Double;
  v74[4] = &protocol witness table for Double;
  v73[4] = &protocol witness table for Double;
  v74[0] = 0x4024000000000000;
  v73[3] = &type metadata for Double;
  v73[0] = 0x4000000000000000;
  if (qword_1007F2588 != -1)
    swift_once(&qword_1007F2588, sub_1004159E0);
  v13 = type metadata accessor for FontUseCase(0);
  v55 = sub_1000117A8(v13, (uint64_t)qword_100855580);
  v44 = *(_QWORD *)(v13 - 8);
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  v42(v12, v55, v13);
  v14 = enum case for FontSource.useCase(_:);
  v41 = (void (*)(char *, _QWORD, uint64_t))v10[13];
  v41(v12, enum case for FontSource.useCase(_:), v9);
  v15 = type metadata accessor for StaticDimension(0);
  v72[3] = v15;
  v72[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v72);
  v70 = v9;
  v71 = &protocol witness table for FontSource;
  v16 = sub_1000117C0(v69);
  v17 = (void (*)(_QWORD *, char *, uint64_t))v10[2];
  v17(v16, v12, v9);
  StaticDimension.init(_:scaledLike:)(v69, 30.0);
  v18 = (void (*)(char *, uint64_t))v10[1];
  v18(v12, v9);
  v69[0] = 0x405C000000000000;
  v66[0] = 0x4044000000000000;
  v19 = sub_10000DF3C(&qword_1007F5D10);
  v20 = Conditional<>.init(regularValue:compactValue:)(v69, v66, v19, &type metadata for CGFloat);
  v53 = v13;
  v21 = v13;
  v22 = v42;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v42)(v12, v55, v21, v20);
  LODWORD(v55) = v14;
  v23 = v41;
  v41(v12, v14, v9);
  v54 = v15;
  v70 = v15;
  v71 = &protocol witness table for StaticDimension;
  sub_1000117C0(v69);
  v67 = v9;
  v68 = &protocol witness table for FontSource;
  v24 = sub_1000117C0(v66);
  v46 = v17;
  v17(v24, v12, v9);
  StaticDimension.init(_:scaledLike:)(v66, 26.0);
  v47 = v18;
  v18(v12, v9);
  v66[0] = 0x405C000000000000;
  v63[0] = 0x4044000000000000;
  v45 = (void (*)(char *, uint64_t, uint64_t))v19;
  Conditional<>.init(regularValue:compactValue:)(v66, v63, v19, &type metadata for CGFloat);
  if (qword_1007F2590 != -1)
    swift_once(&qword_1007F2590, sub_1004159F8);
  v25 = v53;
  v26 = sub_1000117A8(v53, (uint64_t)qword_100855598);
  v22(v12, v26, v25);
  v23(v12, v55, v9);
  v67 = v54;
  v68 = &protocol witness table for StaticDimension;
  sub_1000117C0(v66);
  v64 = v9;
  v65 = &protocol witness table for FontSource;
  v27 = sub_1000117C0(v63);
  v46(v27, v12, v9);
  StaticDimension.init(_:scaledLike:)(v63, 20.0);
  v47(v12, v9);
  v63[0] = 0x405C000000000000;
  v60[0] = 0x4044000000000000;
  Conditional<>.init(regularValue:compactValue:)(v63, v60, v45, &type metadata for CGFloat);
  if (qword_1007F2578 != -1)
    swift_once(&qword_1007F2578, sub_1004159AC);
  v28 = v53;
  v43 += (uint64_t)v52;
  v29 = sub_1000117A8(v53, (uint64_t)qword_100855550);
  v22(v12, v29, v28);
  v23(v12, v55, v9);
  v64 = v54;
  v65 = &protocol witness table for StaticDimension;
  sub_1000117C0(v63);
  v61 = v9;
  v62 = &protocol witness table for FontSource;
  v30 = sub_1000117C0(v60);
  v31 = v46;
  v46(v30, v12, v9);
  StaticDimension.init(_:scaledLike:)(v60, 42.0);
  v32 = v47;
  v47(v12, v9);
  v60[0] = 0x4052000000000000;
  v57[0] = 0x4034000000000000;
  v33 = Conditional<>.init(regularValue:compactValue:)(v60, v57, v45, &type metadata for CGFloat);
  *(_QWORD *)v12 = UIFontTextStyleBody;
  *((_DWORD *)v12 + 2) = 0;
  v34 = enum case for FontUseCase.preferredFont(_:);
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 104);
  ((void (*)(char *, _QWORD, uint64_t, __n128))v45)(v12, enum case for FontUseCase.preferredFont(_:), v28, v33);
  v23(v12, v55, v9);
  v35 = v54;
  v61 = v54;
  v62 = &protocol witness table for StaticDimension;
  sub_1000117C0(v60);
  v58 = v9;
  v59 = &protocol witness table for FontSource;
  v36 = sub_1000117C0(v57);
  v31(v36, v12, v9);
  v37 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v57, 50.0);
  v32(v12, v9);
  *(_QWORD *)v12 = v37;
  *((_DWORD *)v12 + 2) = 0;
  v45(v12, v34, v53);
  v23(v12, v55, v9);
  v58 = v35;
  v59 = &protocol witness table for StaticDimension;
  sub_1000117C0(v57);
  v56[3] = v9;
  v56[4] = &protocol witness table for FontSource;
  v38 = sub_1000117C0(v56);
  v31(v38, v12, v9);
  v39 = v37;
  StaticDimension.init(_:scaledLike:)(v56, 20.0);
  v32(v12, v9);
  InstallPagePreInstallFreeLayout.Metrics.init(iconSize:ageRatingMargin:ageRatingBaselineOffset:titleSpace:titleHorizontalMargin:parentTitleSpace:parentTitleHorizontalMargin:subtitleSpace:subtitleHorizontalMargin:descriptionSpace:descriptionHorizontalMargin:offerButtonMargin:bottomSpace:)(v74, v73, v72, v49, v69, v50, v66, v51, 144.0, 144.0, v63, v48, v60, v57);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/InstallPagePreInstallFreeOfferView.swift", 63, 2, 112, 0);
  __break(1u);
}

uint64_t sub_1003C994C()
{
  return sub_10000E99C(&qword_10080C1D0, type metadata accessor for ProductCapabilityCell, (uint64_t)"I3\v");
}

double sub_1003C997C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  double v8;
  double v9;
  double v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  double v19;
  double v20;
  uint64_t v22;
  uint64_t v23;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ProductCapability(0);
  v5 = sub_10000E99C(&qword_1007FEB58, (uint64_t (*)(uint64_t))&type metadata accessor for ProductCapability, (uint64_t)&protocol conformance descriptor for ProductCapability);
  ItemLayoutContext.typedModel<A>(as:)(&v23, v4, v4, v5);
  v6 = v23;
  if (!v23)
    return 0.0;
  KeyPath = swift_getKeyPath(&unk_100689B38);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  v8 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v10 = v9;
  v11.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v12 = ProductCapability.title.getter(v11);
  v14 = v13;
  v15 = ProductCapability.caption.getter();
  v16 = ProductCapability.artwork.getter();
  v17 = sub_1000826AC();
  swift_getObjectType();
  v18.n128_f64[0] = v8;
  sub_1001836B4(v12, v14, v15, v16, v17, v18, v10);
  v20 = v19;
  swift_bridgeObjectRelease(v14);
  swift_release(v15);
  swift_unknownObjectRelease(v17);
  swift_release(v6);
  swift_release(v16);
  return v20;
}

void sub_1003C9B24()
{
  qword_100854450 = 0x403B000000000000;
}

char *sub_1003C9B34(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = objc_allocWithZone((Class)type metadata accessor for BadgeView(0));
  v13 = v4;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_badgeView] = v14;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_verticalSeparatorView] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_topSeparatorView] = v16;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_bottomSeparatorView] = v17;

  v36.receiver = v13;
  v36.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", a1, a2, a3, a4);
  v19 = OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_verticalSeparatorView;
  v20 = *(void **)&v18[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_verticalSeparatorView];
  sub_1000117FC();
  v21 = v18;
  v22 = v20;
  v23 = (void *)static UIColor.defaultLine.getter();
  objc_msgSend(v22, "setBackgroundColor:", v23);

  v24 = OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_topSeparatorView;
  v25 = *(id *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_topSeparatorView];
  v26 = (void *)static UIColor.defaultLine.getter();
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_bottomSeparatorView;
  v28 = *(id *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_bottomSeparatorView];
  v29 = (void *)static UIColor.defaultLine.getter();
  objc_msgSend(v28, "setBackgroundColor:", v29);

  v30 = objc_msgSend(v21, "contentView");
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_badgeView]);

  v31 = objc_msgSend(v21, "contentView");
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v18[v19]);

  v32 = objc_msgSend(v21, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v21[v24]);

  v33 = objc_msgSend(v21, "contentView");
  v34 = *(id *)&v21[v27];
  objc_msgSend(v33, "addSubview:", v34);

  return v21;
}

id sub_1003C9EF4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  id v27;
  char v28;
  double v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  void *v40;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  id v50;
  double v51;
  double v52;
  void *v53;
  double v54;
  double MinX;
  void *v56;
  double v57;
  CGFloat v58;
  objc_super v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v1 = v0;
  v60.receiver = v0;
  v60.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v60, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_badgeView];
  v3 = objc_msgSend(v1, "contentView");
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "frame");
  v14 = v13;
  v16 = v15;

  if (qword_1007F1BF0 != -1)
    swift_once(&qword_1007F1BF0, sub_1002F3950);
  v18 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v17);
  v19 = sub_1000117A8(v18, (uint64_t)qword_100853AB8);
  v20 = objc_msgSend(v1, "traitCollection");
  v21 = static BadgeViewRibbonLayout.estimatedHeight(fitting:using:with:)(v19, v20, v14, v16);

  if (qword_1007F1EE0 != -1)
    swift_once(&qword_1007F1EE0, sub_1003C9B24);
  v22 = *(double *)&qword_100854450;
  v23 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  v26 = 1.0 / v25;
  v27 = objc_msgSend(v1, "traitCollection");
  v28 = UITraitCollection.prefersRightToLeftLayouts.getter();

  v29 = 0.0;
  if ((v28 & 1) == 0)
  {
    v30 = objc_msgSend(v1, "contentView");
    objc_msgSend(v30, "frame");
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;

    v61.origin.x = v32;
    v61.origin.y = v34;
    v61.size.width = v36;
    v61.size.height = v38;
    v29 = CGRectGetMaxX(v61) - v26;
  }
  v39 = v21 - (v22 + v22);
  v40 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_verticalSeparatorView];
  v41 = objc_msgSend(v1, "contentView");
  objc_msgSend(v41, "frame");
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;

  v62.origin.x = v43;
  v62.origin.y = v45;
  v62.size.width = v47;
  v62.size.height = v49;
  objc_msgSend(v40, "setFrame:", v29, floor((CGRectGetHeight(v62) - v39) * 0.5), v26, v39);
  v50 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v50, "displayScale");
  v52 = v51;

  v53 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_topSeparatorView];
  v54 = 1.0 / v52;
  objc_msgSend(v1, "bounds");
  MinX = CGRectGetMinX(v63);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v53, "setFrame:", MinX, 0.0, CGRectGetWidth(v64), v54);
  v56 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension23BadgeCollectionViewCell_bottomSeparatorView];
  objc_msgSend(v1, "bounds");
  v57 = CGRectGetMinX(v65);
  objc_msgSend(v1, "bounds");
  v58 = CGRectGetMaxY(v66) - v54;
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v56, "setFrame:", v57, v58, CGRectGetWidth(v67), v54);
}

uint64_t sub_1003CA3AC()
{
  return type metadata accessor for BadgeCollectionViewCell(0);
}

uint64_t type metadata accessor for BadgeCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C220;
  if (!qword_10080C220)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BadgeCollectionViewCell);
  return result;
}

void sub_1003CA3F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_1003CA470(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, uint64_t, uint64_t);
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  NSString *v27;
  void *v28;
  id v29;
  unint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  char *v36;
  void (*v37)(_QWORD *, _QWORD);
  void *v38;
  UIColor v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52[72];
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  v46 = a2;
  v47 = a3;
  v51 = a1;
  v3 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  v4 = __chkstk_darwin(v3);
  v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributeContainer(0, v4);
  __chkstk_darwin(v6);
  v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_100800DD0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration.Size(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Feature.iOS(0);
  v54 = v16;
  v17 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v55 = v17;
  v18 = sub_1000117C0(v53);
  v19 = enum case for Feature.iOS.review_summarization(_:);
  v20 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
  v20(v18, enum case for Feature.iOS.review_summarization(_:), v16);
  v21 = isFeatureEnabled(_:)(v53);
  v22 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v53);
  if ((v21 & 1) != 0)
    static UIButton.Configuration.gray()(v22);
  else
    static UIButton.Configuration.plain()(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for UIButton.Configuration.Size.large(_:), v12);
  UIButton.Configuration.buttonSize.setter(v15);
  v23 = v47;
  if (v47)
  {
    v24 = sub_10000DF3C(&qword_1007FC280);
    inited = swift_initStackObject(v24, v52);
    *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v26 = qword_1007F1F28;
    swift_bridgeObjectRetain(v23);
    v27 = NSFontAttributeName;
    if (v26 != -1)
      swift_once(&qword_1007F1F28, sub_1003CAC20);
    v28 = (void *)qword_10080C238;
    *(_QWORD *)(inited + 64) = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v28;
    v29 = v28;
    v30 = sub_1003699BC(inited);
    v31 = v45;
    AttributeContainer.init(_:)(v30);
    AttributedString.init(_:attributes:)(v46, v23, v31);
    v33 = type metadata accessor for AttributedString(0, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 0, 1, v33);
    UIButton.Configuration.attributedTitle.setter(v11);
  }
  v54 = v16;
  v55 = v17;
  v34 = sub_1000117C0(v53);
  v20(v34, v19, v16);
  v35 = isFeatureEnabled(_:)(v53);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v53);
  if ((v35 & 1) != 0)
    UIButton.Configuration.contentInsets.setter(16.0, 16.0, 16.0, 16.0);
  v36 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v50);
  UIButton.Configuration.cornerStyle.setter(v36);
  v37 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v53);
  UIBackgroundConfiguration.cornerRadius.setter(16.0);
  v37(v53, 0);
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v38 = (void *)objc_opt_self(UIColor);
  v39.super.isa = UIColor.init(light:dark:)((UIColor)objc_msgSend(v38, "systemGray6Color"), (UIColor)objc_msgSend(v38, "secondarySystemBackgroundColor")).super.isa;
  UIButton.Configuration.baseBackgroundColor.setter(v39.super.isa);
  if (qword_1007F1EF8 != -1)
    swift_once(&qword_1007F1EF8, sub_1003CAA00);
  UIButton.Configuration.imagePadding.setter(*(double *)&qword_1008544B0);
  if (qword_1007F1F30 != -1)
    swift_once(&qword_1007F1F30, sub_1003CAD4C);
  v40 = qword_10080C240;
  v41 = (id)qword_10080C240;
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v40);
  v42 = v51;
  v43 = v51;
  return UIButton.Configuration.image.setter(v42);
}

uint64_t sub_1003CA8D8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  UIFontTextStyle *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (UIFontTextStyle *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000DF3C(&qword_1007F55F0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v4 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for FontSource.textStyle(_:), v1, v7);
  v10 = UIFontTextStyleBody;
  v11 = Conditional<>.init(regularConstant:compactConstant:source:)(v4, 32.0, 32.0);
  Conditional<>.anyDimension.getter(qword_100854460, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1003CA9E8(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 26.0;
  return sub_1003CAAC8(a2, a1, &qword_1008544A0, &qword_1008544A8, qword_100854488);
}

uint64_t sub_1003CAA00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;
  double v3;
  _QWORD v4[5];

  v0 = type metadata accessor for Feature.iOS(0);
  v4[3] = v0;
  v4[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v1 = sub_1000117C0(v4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Feature.iOS.review_summarization(_:), v0);
  LOBYTE(v0) = isFeatureEnabled(_:)(v4);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v4);
  v3 = 7.0;
  if ((v0 & 1) != 0)
    v3 = 4.0;
  qword_1008544B0 = *(_QWORD *)&v3;
  return result;
}

void sub_1003CAAA0()
{
  qword_1008544B8 = 0x4028000000000000;
}

uint64_t sub_1003CAAB0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 24.0;
  return sub_1003CAAC8(a2, a1, &qword_1008544D8, &qword_1008544E0, qword_1008544C0);
}

uint64_t sub_1003CAAC8(__n128 a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  double v5;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  UIFontTextStyle *v13;
  _QWORD *v14;
  NSString *v15;
  _QWORD v18[5];

  v5 = a1.n128_f64[0];
  v9 = type metadata accessor for FontSource(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (UIFontTextStyle *)((char *)&v18[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v13 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for FontSource.textStyle(_:), v9, v11);
  *a3 = type metadata accessor for StaticDimension(0);
  *a4 = &protocol witness table for StaticDimension;
  sub_1000117C0(a5);
  v18[3] = v9;
  v18[4] = &protocol witness table for FontSource;
  v14 = sub_1000117C0(v18);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v10 + 16))(v14, v13, v9);
  v15 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v18, v5);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1003CABE8(uint64_t a1)
{
  return sub_1000B3184(a1, &enum case for SystemImage.squareAndPencil(_:), &qword_1008544E8);
}

uint64_t sub_1003CABFC(uint64_t a1)
{
  return sub_1000B3184(a1, &enum case for SystemImage.questionmarkCircle(_:), &qword_1008544F0);
}

void sub_1003CAC10()
{
  qword_10080C230 = 0x4020000000000000;
}

void sub_1003CAC20()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  id v3;
  _QWORD v4[5];

  v0 = type metadata accessor for Feature.iOS(0);
  v4[3] = v0;
  v4[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v1 = sub_1000117C0(v4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Feature.iOS.review_summarization(_:), v0);
  LOBYTE(v0) = isFeatureEnabled(_:)(v4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v4);
  if ((v0 & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleHeadline);
    v3 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v2, 0.0);

  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  }
  qword_10080C238 = (uint64_t)v3;
}

void sub_1003CAD4C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[5];

  v0 = type metadata accessor for Feature.iOS(0);
  v9[3] = v0;
  v9[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v1 = sub_1000117C0(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Feature.iOS.review_summarization(_:), v0);
  LOBYTE(v0) = isFeatureEnabled(_:)(v9);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
  if ((v0 & 1) != 0)
  {
    if (qword_1007F1F28 != -1)
      swift_once(&qword_1007F1F28, sub_1003CAC20);
    v2 = (void *)qword_10080C238;
    v3 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v4 = v2;
    v5 = objc_msgSend(v3, "configurationWithFont:scale:", v4, 1);
  }
  else
  {
    if (qword_1007F1F28 != -1)
      swift_once(&qword_1007F1F28, sub_1003CAC20);
    v6 = (void *)qword_10080C238;
    v7 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v4 = v6;
    v5 = objc_msgSend(v7, "configurationWithFont:", v4);
  }
  v8 = v5;

  qword_10080C240 = (uint64_t)v8;
}

char *sub_1003CAEA0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  id v15;
  char *v16;
  id v17;
  id v18;
  objc_class *v19;
  id v20;
  double left;
  double bottom;
  double right;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  objc_super v40;

  v9 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewAction];
  v13 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v4[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportAction], 1, 1, v13);
  v15 = objc_allocWithZone((Class)UIButton);
  v16 = v4;
  v17 = objc_msgSend(v15, "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton] = v17;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton] = v18;

  v19 = (objc_class *)type metadata accessor for ProductReviewActionsView(0);
  v40.receiver = v16;
  v40.super_class = v19;
  v20 = objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton;
  if (qword_1007F1F10 != -1)
    swift_once(&qword_1007F1F10, sub_1003CABE8);
  sub_1003CA470((void *)qword_1008544E8, 0, 0);
  v26 = type metadata accessor for UIButton.Configuration(0);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v11, 0, 1, v26);
  UIButton.configuration.setter(v11);
  v28 = objc_msgSend(*(id *)&v24[v25], "titleLabel");
  if (v28)
  {
    v29 = v28;
    if (qword_1007F1F28 != -1)
      swift_once(&qword_1007F1F28, sub_1003CAC20);
    objc_msgSend(v29, "setFont:", qword_10080C238);

  }
  v30 = *(void **)&v24[v25];
  objc_msgSend(v30, "addTarget:action:forControlEvents:", v24, "writeReviewWithSender:", 64);
  v31 = v30;
  v32 = objc_msgSend(v24, "tintColor");
  objc_msgSend(v31, "setTitleColor:forState:", v32, 0);

  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v25]);
  v33 = OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton;
  if (qword_1007F1F18 != -1)
    swift_once(&qword_1007F1F18, sub_1003CABFC);
  sub_1003CA470((void *)qword_1008544F0, 0, 0);
  v27(v11, 0, 1, v26);
  UIButton.configuration.setter(v11);
  v34 = objc_msgSend(*(id *)&v24[v33], "titleLabel");
  if (v34)
  {
    v35 = v34;
    if (qword_1007F1F28 != -1)
      swift_once(&qword_1007F1F28, sub_1003CAC20);
    objc_msgSend(v35, "setFont:", qword_10080C238);

  }
  v36 = *(void **)&v24[v33];
  objc_msgSend(v36, "addTarget:action:forControlEvents:", v24, "supportWithSender:", 64);
  v37 = v36;
  v38 = objc_msgSend(v24, "tintColor");
  objc_msgSend(v37, "setTitleColor:forState:", v38, 0);

  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v33]);
  return v24;
}

uint64_t sub_1003CB3C4(uint64_t a1)
{
  return sub_1003CB3E8(a1, &OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewAction);
}

uint64_t sub_1003CB3DC(uint64_t a1)
{
  return sub_1003CB3E8(a1, &OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportAction);
}

uint64_t sub_1003CB3E8(uint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  __n128 v23;
  _QWORD v24[4];
  uint64_t v25;
  _BYTE v26[24];

  v4 = v2;
  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  __chkstk_darwin(v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)v4 + *a2;
  swift_beginAccess(v16, v26, 0, 0);
  sub_1001AAE88(v16, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_100011088((uint64_t)v11, (uint64_t *)&unk_1008052E0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v18 = UIResponder.nearestActionRunner.getter();
  if (!v18)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v19 = v18;
  ObjectGraphPair.value.getter(&v25, v12);
  v20 = v25;
  v24[3] = type metadata accessor for ProductReviewActionsView(0);
  v24[0] = v4;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
  v21 = v4;
  v22 = ObjectGraphPair.objectGraph.getter(v12);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v20, v24, v8, v22);
  swift_release(v19);
  swift_release(v20);
  v23 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v23);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return sub_100011088((uint64_t)v24, &qword_1007F6E90);
}

uint64_t sub_1003CB628(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, __n128))
{
  id v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    v10 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v9 = a1;
  }
  a4(v9, v10);

  return sub_100011088((uint64_t)v12, &qword_1007F6E90);
}

uint64_t sub_1003CB6A4@<X0>(_QWORD *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  double v25;
  void (*v26)(char *);
  uint64_t v27;
  __n128 v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  double v34;
  double v35;
  _QWORD *v36;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD v47[3];
  uint64_t v48;
  void *v49;
  _QWORD v50[3];
  uint64_t v51;
  void *v52;

  v46 = a1;
  v3 = type metadata accessor for Resize.Rule(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  v45 = type metadata accessor for HorizontalStack(0);
  v42 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v44 = (char *)&v38 - v19;
  HorizontalStack.init(with:)(0, 0);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton);
  v48 = sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
  v49 = &protocol witness table for UIButton;
  v41 = v48;
  v47[0] = v20;
  v21 = type metadata accessor for ProductReviewActionsView(0);
  v22 = v20;
  v40 = v21;
  v43 = v2;
  LayoutMarginsAware<>.layoutFrame.getter(v21);
  v24 = v23;
  if (qword_1007F1F00 != -1)
    swift_once(&qword_1007F1F00, sub_1003CAAA0);
  v25 = v24 * 0.5 - *(double *)&qword_1008544B8 * 0.5;
  *((_QWORD *)v15 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v15 + 4) = &protocol witness table for CGFloat;
  *(double *)v15 = v25;
  v39 = enum case for Resize.Rule.replaced(_:);
  v26 = *(void (**)(char *))(v4 + 104);
  v26(v15);
  v27 = enum case for Resize.Rule.unchanged(_:);
  ((void (*)(char *, _QWORD, uint64_t))v26)(v12, enum case for Resize.Rule.unchanged(_:), v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v9, v27, v3);
  v28.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v26)(v6, v27, v3);
  v38 = type metadata accessor for Resize(0, v28);
  v51 = v38;
  v52 = &protocol witness table for Resize;
  sub_1000117C0(v50);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v47, v15, v12, v9, v6);
  v29 = v44;
  HorizontalStack.adding(_:with:)(v50, sub_1003CCED4, 0);
  v42 = *(_QWORD *)(v42 + 8);
  v30 = v17;
  v31 = v45;
  ((void (*)(char *, uint64_t))v42)(v30, v45);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
  v32 = *(void **)(v43 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton);
  v48 = v41;
  v49 = &protocol witness table for UIButton;
  v47[0] = v32;
  v33 = v32;
  LayoutMarginsAware<>.layoutFrame.getter(v40);
  v35 = v34 * 0.5 - *(double *)&qword_1008544B8 * 0.5;
  *((_QWORD *)v15 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v15 + 4) = &protocol witness table for CGFloat;
  *(double *)v15 = v35;
  ((void (*)(char *, _QWORD, uint64_t))v26)(v15, v39, v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v12, v27, v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v9, v27, v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v6, v27, v3);
  v51 = v38;
  v52 = &protocol witness table for Resize;
  sub_1000117C0(v50);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v47, v15, v12, v9, v6);
  v36 = v46;
  v46[3] = v31;
  v36[4] = &protocol witness table for HorizontalStack;
  sub_1000117C0(v36);
  HorizontalStack.adding(_:with:)(v50, 0, 0);
  ((void (*)(char *, uint64_t))v42)(v29, v31);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
}

uint64_t sub_1003CBA94@<X0>(_QWORD *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  CGFloat Width;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  __n128 v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  CGFloat v39;
  _QWORD *v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  _QWORD v52[3];
  uint64_t v53;
  void *v54;
  _QWORD v55[3];
  uint64_t v56;
  void *v57;
  CGRect v58;
  CGRect v59;

  v50 = a1;
  v3 = type metadata accessor for Resize.Rule(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - v14;
  v16 = type metadata accessor for VerticalStack(0);
  v48 = *(_QWORD *)(v16 - 8);
  v49 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v51 = (char *)&v43 - v21;
  VerticalStack.init(with:)(0, 0, v20);
  v44 = v2;
  v22 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton);
  v47 = sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
  v53 = v47;
  v54 = &protocol witness table for UIButton;
  v52[0] = v22;
  v23 = type metadata accessor for ProductReviewActionsView(0);
  v46 = v23;
  v24 = v22;
  v58.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v23);
  Width = CGRectGetWidth(v58);
  *((_QWORD *)v15 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v15 + 4) = &protocol witness table for CGFloat;
  *(CGFloat *)v15 = Width;
  v45 = enum case for Resize.Rule.replaced(_:);
  v26 = *(void (**)(char *))(v4 + 104);
  v26(v15);
  v27 = enum case for Resize.Rule.unchanged(_:);
  v28 = v12;
  ((void (*)(char *, _QWORD, uint64_t))v26)(v12, enum case for Resize.Rule.unchanged(_:), v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v9, v27, v3);
  v29.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v26)(v6, v27, v3);
  v43 = type metadata accessor for Resize(0, v29);
  v56 = v43;
  v57 = &protocol witness table for Resize;
  sub_1000117C0(v55);
  v30 = v12;
  v31 = v9;
  v32 = v9;
  v33 = v6;
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v52, v15, v30, v31, v6);
  VerticalStack.adding(_:with:)(v55, sub_1003CCEF8, 0);
  v34 = *(void (**)(char *, uint64_t))(v48 + 8);
  v35 = v18;
  v36 = v49;
  v34(v35, v49);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v55);
  v37 = *(void **)(v44 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton);
  v53 = v47;
  v54 = &protocol witness table for UIButton;
  v52[0] = v37;
  v38 = v37;
  v59.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v46);
  v39 = CGRectGetWidth(v59);
  *((_QWORD *)v15 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v15 + 4) = &protocol witness table for CGFloat;
  *(CGFloat *)v15 = v39;
  ((void (*)(char *, _QWORD, uint64_t))v26)(v15, v45, v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v28, v27, v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v32, v27, v3);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v33, v27, v3);
  v56 = v43;
  v57 = &protocol witness table for Resize;
  sub_1000117C0(v55);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v52, v15, v28, v32, v33);
  v40 = v50;
  v50[3] = v36;
  v40[4] = &protocol witness table for VerticalStack;
  sub_1000117C0(v40);
  v41 = v51;
  VerticalStack.adding(_:with:)(v55, 0, 0);
  v34(v41, v36);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v55);
}

uint64_t sub_1003CBE34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  __n128 v14;
  double v15;
  double v16;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton);
  v4 = type metadata accessor for ProductReviewActionsView(0);
  LayoutMarginsAware<>.layoutFrame.getter(v4);
  objc_msgSend(v3, "sizeThatFits:", v5, v6);
  v8 = v7;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton);
  LayoutMarginsAware<>.layoutFrame.getter(v4);
  objc_msgSend(v9, "sizeThatFits:", v10, v11);
  v13 = v12;
  LayoutMarginsAware<>.layoutFrame.getter(v4);
  v16 = v15 * 0.5;
  if (qword_1007F1F00 != -1)
    swift_once(&qword_1007F1F00, sub_1003CAAA0);
  v14.n128_f64[0] = v16 + *(double *)&qword_1008544B8 * -0.5;
  if (v14.n128_f64[0] < v8 || v14.n128_f64[0] < v13)
    return sub_1003CBA94(a1, v14);
  else
    return sub_1003CB6A4(a1, v14);
}

id sub_1003CBF50()
{
  char *v0;
  char *v1;
  objc_class *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  id v9;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  CGFloat v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat MinX;
  id v38;
  void *v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  objc_super v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for ProductReviewActionsView(0);
  v43.receiver = v0;
  v43.super_class = v2;
  objc_msgSendSuper2(&v43, "layoutSubviews");
  v3 = type metadata accessor for Feature.iOS(0);
  v41 = v3;
  v42 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v4 = sub_1000117C0(v40);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v4, enum case for Feature.iOS.review_summarization(_:), v3);
  LOBYTE(v3) = isFeatureEnabled(_:)(v40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v40);
  if ((v3 & 1) != 0)
  {
    sub_1003CBE34(v40);
    v5 = v41;
    v6 = v42;
    sub_100011064(v40, v41);
    objc_msgSend(v1, "bounds");
    v8 = v7;
    v9 = objc_msgSend(v1, "traitCollection");
    dispatch thunk of Placeable.place(at:with:)(v9, v5, v6, v8);

    return (id)_s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v40);
  }
  else
  {
    v11 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton];
    LayoutMarginsAware<>.layoutFrame.getter(v2);
    objc_msgSend(v11, "measurementsWithFitting:in:", v1, v12, v13);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;
    if (qword_1007F1EE8 != -1)
      swift_once(&qword_1007F1EE8, sub_1003CA8D8);
    v22 = qword_100854478;
    v23 = unk_100854480;
    sub_100011064(qword_100854460, qword_100854478);
    v24 = AnyDimension.topMargin(from:in:)(v1, v22, v23, v15, v17, v19, v21);
    LayoutMarginsAware<>.layoutFrame.getter(v2);
    objc_msgSend(v11, "sizeThatFits:", v25, v26);
    v28 = v27;
    v30 = v29;
    v31 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton];
    LayoutMarginsAware<>.layoutFrame.getter(v2);
    objc_msgSend(v31, "sizeThatFits:", v32, v33);
    v35 = v34;
    v44.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
    v36 = v24 + CGRectGetMinY(v44);
    v45.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
    MinX = CGRectGetMinX(v45);
    LayoutMarginsAware<>.layoutFrame.getter(v2);
    objc_msgSend(v11, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1));
    v46.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
    if (CGRectGetWidth(v46) >= v28 + v35)
    {
      v48.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
      CGRectGetMaxX(v48);
    }
    else
    {
      v47.origin.x = MinX;
      v47.origin.y = v36;
      v47.size.width = v28;
      v47.size.height = v30;
      CGRectGetMaxY(v47);
      v38 = objc_msgSend(v11, "titleLabel");
      if (v38)
      {
        v39 = v38;
        objc_msgSend(v38, "_baselineOffsetFromBottom");

      }
      v49.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
      CGRectGetMinX(v49);
      v50.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
      CGRectGetMidY(v50);
    }
    LayoutMarginsAware<>.layoutFrame.getter(v2);
    return objc_msgSend(v31, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1));
  }
}

double sub_1003CC328(double a1, double a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  double v16;
  id v18;
  id v19;

  ObjectType = swift_getObjectType();
  v6 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_writeReviewButton);
  v7 = objc_msgSend(v6, "titleForState:", 0);
  if (v7)
    goto LABEL_2;
  v18 = objc_msgSend(v6, "titleLabel");
  v10 = v18;
  if (!v18)
  {
    v8 = 0;
    goto LABEL_3;
  }
  v7 = objc_msgSend(v18, "text");

  if (v7)
  {
LABEL_2:
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
LABEL_3:
  v11 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension24ProductReviewActionsView_supportButton);
  v12 = objc_msgSend(v11, "titleForState:", 0);
  if (v12)
    goto LABEL_4;
  v19 = objc_msgSend(v11, "titleLabel");
  v15 = v19;
  if (!v19)
  {
    v13 = 0;
    goto LABEL_5;
  }
  v12 = objc_msgSend(v19, "text");

  if (v12)
  {
LABEL_4:
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
LABEL_5:
  v16 = sub_1000421BC(v8, v10, v13, v15, v2, ObjectType, a1, a2);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v15);
  return v16;
}

id sub_1003CC53C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductReviewActionsView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003CC5DC()
{
  return type metadata accessor for ProductReviewActionsView(0);
}

uint64_t type metadata accessor for ProductReviewActionsView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C278;
  if (!qword_10080C278)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductReviewActionsView);
  return result;
}

void sub_1003CC620(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1001A8AFC(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7 = v5;
    swift_updateClassMetadata2(a1, 256, 4, &v4, a1 + 80);
  }
}

double sub_1003CC6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  UIFontTextStyle *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  NSString *v32;
  id v33;
  UIFont v34;
  double v35;
  double v36;
  NSString v37;
  uint64_t v38;
  uint64_t inited;
  NSString *v40;
  objc_class *v41;
  unint64_t v42;
  Class isa;
  double v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  NSString *v49;
  unint64_t v50;
  Class v51;
  double v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  double v59;
  double v60;
  id v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[72];
  _BYTE v73[72];
  _QWORD v74[6];

  v71 = a3;
  v70 = type metadata accessor for FloatingPointRoundingRule(0);
  v69 = *(_QWORD *)(v70 - 8);
  v13 = __chkstk_darwin(v70);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FontSource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (UIFontTextStyle *)((char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Feature.iOS(0);
  v74[3] = v23;
  v74[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v24 = sub_1000117C0(v74);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v24, enum case for Feature.iOS.review_summarization(_:), v23);
  LOBYTE(v23) = isFeatureEnabled(_:)(v74);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v74);
  if ((v23 & 1) == 0)
  {
    *v19 = UIFontTextStyleBody;
    (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for FontSource.textStyle(_:), v16);
    v32 = UIFontTextStyleBody;
    v68 = a5;
    v33 = objc_msgSend(a5, "traitCollection");
    v34.super.isa = FontSource.font(compatibleWith:)((UITraitCollection)v33).super.isa;

    (*(void (**)(UIFontTextStyle *, uint64_t))(v17 + 8))(v19, v16);
    v35 = 0.0;
    v36 = 0.0;
    if (a2)
    {
      v37 = String._bridgeToObjectiveC()();
      v38 = sub_10000DF3C(&qword_1007FC280);
      inited = swift_initStackObject(v38, v72);
      *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 64) = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      *(UIFont *)(inited + 40) = v34;
      v40 = NSFontAttributeName;
      v41 = v34.super.isa;
      v42 = sub_1003699BC(inited);
      type metadata accessor for Key(0);
      sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v42);
      objc_msgSend(v37, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, a6, a7);
      v36 = v44;

    }
    if (a4)
    {
      v45 = String._bridgeToObjectiveC()();
      v46 = sub_10000DF3C(&qword_1007FC280);
      v47 = swift_initStackObject(v46, v73);
      *(_OWORD *)(v47 + 16) = xmmword_10066FBA0;
      *(_QWORD *)(v47 + 32) = NSFontAttributeName;
      *(_QWORD *)(v47 + 64) = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      *(UIFont *)(v47 + 40) = v34;
      v48 = v34.super.isa;
      v49 = NSFontAttributeName;
      v50 = sub_1003699BC(v47);
      type metadata accessor for Key(0);
      sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
      v51 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v50);
      objc_msgSend(v45, "boundingRectWithSize:options:attributes:context:", 1, v51, 0, a6, a7);
      v35 = v52;

    }
    v53 = v68;
    if (qword_1007F1EF0 != -1)
      swift_once(&qword_1007F1EF0, sub_1003CA9E8);
    v54 = qword_1008544A0;
    v55 = qword_1008544A8;
    sub_100011064(qword_100854488, qword_1008544A0);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v54);
    v56 = AnyDimension.value(in:rounded:)(v53, v15, v54, v55);
    v57 = *(void (**)(char *, uint64_t))(v69 + 8);
    v58 = v70;
    v57(v15, v70);
    v59 = v36 + v35;
    if (qword_1007F1EF8 != -1)
      swift_once(&qword_1007F1EF8, sub_1003CAA00);
    v60 = v59 + v56 + *(double *)&qword_1008544B0 + v56 + *(double *)&qword_1008544B0;
    v61 = objc_msgSend(v53, "traitCollection");
    v62 = UITraitCollection.isSizeClassRegular.getter(v61);

    if ((v62 & 1) != 0)
    {
      if (qword_1007F1F08 != -1)
        swift_once(&qword_1007F1F08, sub_1003CAAB0);
      v63 = qword_1008544D8;
      v64 = qword_1008544E0;
      sub_100011064(qword_1008544C0, qword_1008544D8);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v63);
      AnyDimension.value(in:rounded:)(v53, v15, v63, v64);
      v57(v15, v58);
    }
    if (v60 <= a6)
    {
      if (qword_1007F1EE8 == -1)
      {
LABEL_29:
        v65 = qword_100854478;
        v66 = unk_100854480;
        sub_100011064(qword_100854460, qword_100854478);
        j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v65);
        AnyDimension.value(in:rounded:)(v53, v15, v65, v66);

        v57(v15, v58);
        return a6;
      }
    }
    else if (qword_1007F1EE8 == -1)
    {
      goto LABEL_29;
    }
    swift_once(&qword_1007F1EE8, sub_1003CA8D8);
    goto LABEL_29;
  }
  sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
  if (qword_1007F1F10 != -1)
    swift_once(&qword_1007F1F10, sub_1003CABE8);
  sub_1003CA470((void *)qword_1008544E8, a1, a2);
  v25 = (void *)UIButton.init(configuration:primaryAction:)(v22, 0);
  objc_msgSend(v25, "sizeThatFits:", a6, a7);
  v27 = v26;
  if (qword_1007F1F18 != -1)
    swift_once(&qword_1007F1F18, sub_1003CABFC);
  sub_1003CA470((void *)qword_1008544F0, v71, a4);
  v28 = (void *)UIButton.init(configuration:primaryAction:)(v22, 0);
  objc_msgSend(v28, "sizeThatFits:", a6, a7);
  v30 = v29;
  if (qword_1007F1F00 != -1)
    swift_once(&qword_1007F1F00, sub_1003CAAA0);
  v31 = a6 * 0.5 + *(double *)&qword_1008544B8 * -0.5;
  if ((v31 < v27 || v31 < v30) && qword_1007F1F20 != -1)
    swift_once(&qword_1007F1F20, sub_1003CAC10);

  return a6;
}

uint64_t sub_1003CCED4(uint64_t a1)
{
  return sub_1003CCF1C(a1, &qword_1007F1F00, &qword_1008544B8, (uint64_t (*)(_QWORD *))&HorizontalStack.Properties.trailingSpacing.setter, (uint64_t)sub_1003CAAA0);
}

uint64_t sub_1003CCEF8(uint64_t a1)
{
  return sub_1003CCF1C(a1, &qword_1007F1F20, &qword_10080C230, (uint64_t (*)(_QWORD *))&VerticalStack.Properties.bottomSpacing.setter, (uint64_t)sub_1003CAC10);
}

uint64_t sub_1003CCF1C(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v7;
  _QWORD v9[5];

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  v9[3] = &type metadata for CGFloat;
  v9[4] = &protocol witness table for CGFloat;
  v9[0] = v7;
  return a4(v9);
}

UIColor sub_1003CCF90()
{
  UIColor result;

  sub_1000117FC();
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.75).super.isa;
  qword_10080C288 = (uint64_t)result.super.isa;
  return result;
}

char *sub_1003CCFD0()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  __n128 v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  objc_super v19;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_backgroundView;
  v2 = objc_allocWithZone((Class)AVBackgroundView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_glyphView;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v5 = &v3[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_tapActionBlock];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_tapGestureRecognizer] = 0;

  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for PlayButton();
  v6 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_glyphView;
  v8 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_glyphView];
  v9 = v6;
  v10 = v8;
  v12 = sub_1004853E8(0xD000000000000012, 0x8000000100648AC0, 0, v11);
  v13 = objc_msgSend(v12, "imageWithRenderingMode:", 2);

  objc_msgSend(v10, "setImage:", v13);
  v14 = qword_1007F1F38;
  v15 = *(id *)&v6[v7];
  if (v14 != -1)
    swift_once(&qword_1007F1F38, sub_1003CCF90);
  objc_msgSend(v15, "setTintColor:", qword_10080C288);

  v16 = *(void **)&v6[v7];
  if (ASKPerformanceProfileGetForCurrentDevice(objc_msgSend(v16, "setUserInteractionEnabled:", 0)) != 2)
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_backgroundView], "setPrefersLowQualityEffects:", 1);
  v17 = *(void **)&v9[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_backgroundView];
  objc_msgSend(v17, "addSubview:applyingMaterialStyle:tintEffectStyle:", v16, 0, 0);
  objc_msgSend(v17, "setUserInteractionEnabled:", 0);
  objc_msgSend(v17, "setCircular:", 1);
  objc_msgSend(v9, "addSubview:", v17);
  objc_msgSend(v9, "addTarget:action:forControlEvents:", v9, "didTap", 64);

  return v9;
}

id sub_1003CD2A4()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  objc_super v11;
  CGRect v12;
  CGRect v13;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for PlayButton();
  objc_msgSendSuper2(&v11, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_backgroundView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_glyphView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "sizeThatFits:", v3, v4);
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "bounds");
  v9 = CGRectGetMidX(v12) - v6 * 0.5;
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v2, "setFrame:", v9, CGRectGetMidY(v13) - v8 * 0.5, v6, v8);
}

id sub_1003CD474()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlayButton()
{
  return objc_opt_self(_TtC22SubscribePageExtension10PlayButton);
}

void sub_1003CD520()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_backgroundView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)AVBackgroundView), "init");
  v2 = OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_glyphView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = &v0[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_tapActionBlock];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension10PlayButton_tapGestureRecognizer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/PlayButton.swift", 39, 2, 56, 0);
  __break(1u);
}

uint64_t sub_1003CD5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  int v11;
  uint64_t *v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v17;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100689C70);
  ItemLayoutContext.subscript.getter(v7);
  swift_release(KeyPath);
  v9 = swift_getKeyPath(&unk_100689CA0);
  ReadOnlyLens.subscript.getter(v9, v4);
  v10 = swift_release(v9);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v5 + 8))(v7, v4, v10);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v11 == enum case for Shelf.ContentType.singleColumnList(_:)
    || v11 == enum case for Shelf.ContentType.twoColumnList(_:))
  {
    v13 = &qword_10080C3A8;
    v14 = sub_10000DF3C(&qword_10080C3A8);
    sub_100010F98(&qword_10080C3B0, &qword_10080C3A8, byte_100697300);
    sub_100010F98(&qword_10080C3B8, &qword_10080C3A8, byte_100687D50);
    v15 = (unint64_t *)&unk_10080C3C0;
  }
  else
  {
    if (v11 != enum case for Shelf.ContentType.scrollablePill(_:))
    {
      v14 = sub_10042A73C();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return v14;
    }
    v13 = &qword_10080C388;
    v14 = sub_10000DF3C(&qword_10080C388);
    sub_100010F98(&qword_10080C390, &qword_10080C388, byte_100697300);
    sub_100010F98(&qword_10080C398, &qword_10080C388, byte_100687D50);
    v15 = (unint64_t *)&unk_10080C3A0;
  }
  sub_100010F98(v15, v13, byte_100697330);
  return v14;
}

uint64_t sub_1003CD838()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for SearchFocusShelfComponentTypeMappingProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension44SearchFocusShelfComponentTypeMappingProvider);
}

id sub_1003CD884(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  id result;
  void *v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;

  v4 = v3;
  v8 = type metadata accessor for PageGrid.Direction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - v13;
  v15 = type metadata accessor for PageGrid(0);
  v38 = *(_QWORD *)(v15 - 8);
  v39 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v14, enum case for PageGrid.Direction.vertical(_:), v8, v16);
  if ((a3 & 1) != 0)
  {
    result = objc_msgSend(v4, "view");
    if (!result)
      goto LABEL_8;
    v22 = result;
    objc_msgSend(result, "bounds");
    v19 = v23;
    v20 = v24;

  }
  else
  {
    v19 = *(double *)&a1;
    v20 = *(double *)&a2;
  }
  result = objc_msgSend(v4, "view");
  if (result)
  {
    v25 = result;
    objc_msgSend(result, "safeAreaInsets");
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    v34 = objc_msgSend(v4, "traitCollection");
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v35 = sub_100418380(0.0);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v11, 0, v35, v19, v20, v27, v29, v31, v33);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v36 = objc_msgSend(v4, "navigationItem");
    PageGrid.horizontalDirectionalMargins.getter(v36);
    objc_msgSend(v36, "largeTitleInsets");
    objc_msgSend(v36, "setLargeTitleInsets:");

    v37 = objc_msgSend(v4, "navigationItem");
    PageGrid.horizontalDirectionalMargins.getter(v37);
    objc_msgSend(v37, "largeTitleInsets");
    objc_msgSend(v37, "setLargeTitleInsets:");

    return (id)(*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v18, v39);
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

double sub_1003CDB54(CGFloat *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  CGFloat v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  double v30;
  CGFloat MinX;
  CGFloat v32;
  CGFloat Width;
  CGFloat v34;
  void *v35;
  double v36;
  double v37;
  CGFloat v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  double result;
  double v47;
  double v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v2 = v1;
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1)
  {
    v10 = objc_msgSend(v1, "traitCollection", v6);
    v11 = sub_100046B3C(v10, v2);

  }
  else
  {
    if (qword_1007F0BF0 != -1)
      swift_once(&qword_1007F0BF0, sub_100046800);
    v12 = type metadata accessor for StaticDimension(0);
    v13 = sub_1000117A8(v12, (uint64_t)qword_1008507F0);
    static Dimensions.defaultRoundingRule.getter(v13);
    v11 = AnyDimension.value(in:rounded:)(v2, v8, v12, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  if (qword_1007F0C00 != -1)
    swift_once(&qword_1007F0C00, sub_100046958);
  v14 = type metadata accessor for StaticDimension(0);
  v15 = sub_1000117A8(v14, (uint64_t)qword_100850820);
  static Dimensions.defaultRoundingRule.getter(v15);
  v48 = AnyDimension.value(in:rounded:)(v2, v8, v14, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v17 = *a1;
  v16 = a1[1];
  v19 = a1[2];
  v18 = a1[3];
  if (v2[v9] == 1)
  {
    sub_1004F8D74();
    v21 = v20;
  }
  else
  {
    v22 = objc_msgSend(v2, "contentView");
    objc_msgSend(v22, "layoutMargins");
    v21 = v23;

  }
  v24 = v19 - v21;
  v25 = *(void **)&v2[qword_100852D30];
  objc_msgSend(v25, "measurementsWithFitting:in:", v2, v24, v18);
  v27 = v26;
  v29 = v28;
  v47 = v30;
  v49.origin.x = v17;
  v49.origin.y = v16;
  v49.size.width = v24;
  v49.size.height = v18;
  MinX = CGRectGetMinX(v49);
  v50.origin.x = v17;
  v50.origin.y = v16;
  v50.size.width = v24;
  v50.size.height = v18;
  v32 = CGRectGetMinY(v50) + v11 - v29;
  v51.origin.x = v17;
  v51.origin.y = v16;
  v51.size.width = v24;
  v51.size.height = v18;
  Width = CGRectGetWidth(v51);
  objc_msgSend(v2, "bounds");
  objc_msgSend(v25, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v2));
  v52.origin.x = MinX;
  v52.origin.y = v32;
  v52.size.width = Width;
  v52.size.height = v27;
  v34 = CGRectGetMaxY(v52) - v47;
  v35 = *(void **)&v2[qword_100852D38];
  v53.origin.x = v17;
  v53.origin.y = v16;
  v53.size.width = v24;
  v53.size.height = v18;
  v36 = CGRectGetWidth(v53);
  v54.origin.x = v17;
  v54.origin.y = v16;
  v54.size.width = v24;
  v54.size.height = v18;
  objc_msgSend(v35, "measurementsWithFitting:in:", v2, v36, CGRectGetHeight(v54) - v34);
  v38 = v37;
  v40 = v39;
  v47 = v41;
  v55.origin.x = v17;
  v55.origin.y = v16;
  v55.size.width = v24;
  v55.size.height = v18;
  v42 = CGRectGetMinX(v55);
  v43 = v34 + v48 - v40;
  v56.origin.x = v17;
  v56.origin.y = v16;
  v56.size.width = v24;
  v56.size.height = v18;
  v44 = CGRectGetWidth(v56);
  objc_msgSend(v2, "bounds");
  objc_msgSend(v35, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v2));
  v57.origin.x = v42;
  v57.origin.y = v43;
  v57.size.width = v44;
  v57.size.height = v38;
  v45 = CGRectGetMaxY(v57) - v47;
  a1[1] = v16 + v45;
  result = v18 - v45;
  a1[3] = result;
  return result;
}

uint64_t sub_1003CDF54(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100854510);
  sub_1000117A8(v5, (uint64_t)qword_100854510);
  if (qword_1007F2690 != -1)
    swift_once(&qword_1007F2690, sub_100416D98);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855898);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 32.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1003CE0A4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100854528);
  sub_1000117A8(v5, (uint64_t)qword_100854528);
  if (qword_1007F2650 != -1)
    swift_once(&qword_1007F2650, sub_100416A14);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_1008557D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 34.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

_QWORD *sub_1003CE1F4()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = type metadata accessor for SmallLockupLayout.Metrics(0);
  sub_100045464(v0, qword_100854540);
  v1 = (_QWORD *)sub_1000117A8(v0, (uint64_t)qword_100854540);
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  sub_1000117A8(v0, (uint64_t)qword_100852280);
  return Copyable.copyWithOverrides(in:)(v1, sub_1003CE298, 0, v0, &protocol witness table for SmallLockupLayout.Metrics);
}

uint64_t sub_1003CE298(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *);
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(_QWORD *, char *, uint64_t);
  _QWORD v25[3];
  uint64_t v26;
  void *v27;
  _QWORD v28[3];
  void *v29;
  void *v30;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  SmallLockupLayout.Metrics.artworkSize.setter(48.0, 48.0);
  v29 = &type metadata for Double;
  v30 = &protocol witness table for Double;
  v28[0] = 0x402E000000000000;
  SmallLockupLayout.Metrics.artworkMargin.setter(v28);
  if (qword_1007F21E8 != -1)
    swift_once(&qword_1007F21E8, sub_100413940);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_100854AB8);
  v7 = *(void (**)(char *))(*(_QWORD *)(v5 - 8) + 16);
  v23 = v6;
  v7(v4);
  v8 = enum case for FontSource.useCase(_:);
  v9 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v9(v4, enum case for FontSource.useCase(_:), v1);
  v10 = type metadata accessor for StaticDimension(0);
  v29 = (void *)v10;
  v30 = &protocol witness table for StaticDimension;
  sub_1000117C0(v28);
  v26 = v1;
  v27 = &protocol witness table for FontSource;
  v11 = sub_1000117C0(v25);
  v24 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v24(v11, v4, v1);
  StaticDimension.init(_:scaledLike:)(v25, 18.0);
  v22 = (void (*)(char *, uint64_t))v2[1];
  v22(v4, v1);
  SmallLockupLayout.Metrics.subtitleSpace.setter(v28);
  if (qword_1007F2208 != -1)
    swift_once(&qword_1007F2208, sub_1004139A0);
  v12 = sub_1000117A8(v5, (uint64_t)qword_100854B18);
  ((void (*)(char *, uint64_t, uint64_t))v7)(v4, v12, v5);
  v9(v4, v8, v1);
  v29 = (void *)v10;
  v30 = &protocol witness table for StaticDimension;
  sub_1000117C0(v28);
  v26 = v1;
  v27 = &protocol witness table for FontSource;
  v13 = sub_1000117C0(v25);
  v24(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(v25, 18.0);
  v14 = v22;
  v22(v4, v1);
  SmallLockupLayout.Metrics.tertiaryTitleSpace.setter(v28);
  v15 = v23;
  v23 = v5;
  ((void (*)(char *, uint64_t, uint64_t))v7)(v4, v15, v5);
  v9(v4, v8, v1);
  v29 = (void *)v10;
  v30 = &protocol witness table for StaticDimension;
  sub_1000117C0(v28);
  v26 = v1;
  v27 = &protocol witness table for FontSource;
  v16 = sub_1000117C0(v25);
  v24(v16, v4, v1);
  StaticDimension.init(_:scaledLike:)(v25, 18.0);
  v14(v4, v1);
  SmallLockupLayout.Metrics.offerTextSpace.setter(v28);
  if (qword_1007F21B0 != -1)
    swift_once(&qword_1007F21B0, sub_10041388C);
  v17 = v23;
  v18 = sub_1000117A8(v23, (uint64_t)qword_100854A10);
  ((void (*)(char *, uint64_t, uint64_t))v7)(v4, v18, v17);
  v9(v4, v8, v1);
  v29 = (void *)v10;
  v30 = &protocol witness table for StaticDimension;
  sub_1000117C0(v28);
  v26 = v1;
  v27 = &protocol witness table for FontSource;
  v19 = sub_1000117C0(v25);
  v24(v19, v4, v1);
  StaticDimension.init(_:scaledLike:)(v25, 19.0);
  v14(v4, v1);
  return SmallLockupLayout.Metrics.titleWithHeadingSpace.setter(v28);
}

char *sub_1003CE650(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  id v29;
  char *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  _BYTE *v37;
  int v38;
  int v39;
  id v40;
  _BYTE *v41;
  uint64_t v43;
  objc_class *ObjectType;
  objc_super v45;
  _OWORD v46[2];
  _OWORD v47[2];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v43 = type metadata accessor for AutomationSemantics(0);
  v10 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DirectionalTextAlignment(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = qword_10080C3D0;
  v21 = type metadata accessor for TodayListCardLockupContainer();
  v22 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21));
  v23 = v5;
  *(_QWORD *)&v5[v20] = objc_msgSend(v22, "init");
  *(_QWORD *)&v23[qword_100854558] = 0;
  *(_QWORD *)&v23[qword_100854560] = 0;
  if (qword_1007F2690 != -1)
    swift_once(&qword_1007F2690, sub_100416D98);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100855898);
  v26 = *(_QWORD *)(v24 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v19, v25, v24);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
  v28(v19, 0, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DirectionalTextAlignment.none(_:), v13);
  v29 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v23[qword_10080C3C8] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v19, 2, 0, 1, 0, v16, 0, 0);
  memset(v47, 0, sizeof(v47));
  memset(v46, 0, sizeof(v46));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6E6974656B72616DLL, 0xED00007478655467, v47, v46);
  sub_1000131E0((uint64_t)v46);
  sub_1000131E0((uint64_t)v47);
  UIView.setAutomationSemantics(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v43);

  v45.receiver = v23;
  v45.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", a1, a2, a3, a4);
  v31 = *(void **)&v30[qword_100852D38];
  v32 = v30;
  objc_msgSend(v31, "setNumberOfLines:", 2);
  v33 = qword_1007F2658;
  v34 = v31;
  if (v33 != -1)
    swift_once(&qword_1007F2658, sub_100416AD0);
  v35 = sub_1000117A8(v24, (uint64_t)qword_1008557F0);
  v27(v19, v35, v24);
  v28(v19, 0, 1, v24);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v19);

  v36 = objc_msgSend(v32, "contentView");
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v32[qword_10080C3C8]);

  v37 = *(_BYTE **)&v32[qword_10080C3D0];
  v38 = v32[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v39 = v37[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded];
  v37[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded] = v38;
  if (v38 != v39)
    objc_msgSend(v37, "setNeedsLayout");
  v40 = objc_msgSend(v32, "contentView", v43);
  v41 = v37;
  objc_msgSend(v40, "addSubview:", v41);

  return v32;
}

char *sub_1003CEA74(double a1, double a2, double a3, double a4)
{
  return sub_1003CE650(a1, a2, a3, a4);
}

id sub_1003CEA94(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "isDragging");
}

void sub_1003CEAD0(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  objc_super v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v9.receiver = a1;
  v9.super_class = ObjectType;
  v6 = a1;
  objc_msgSendSuper2(&v9, "setDragging:", a3);
  v7 = *(_QWORD *)&v6[qword_10080C3D0];
  v8.receiver = v6;
  v8.super_class = ObjectType;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isDragging) = objc_msgSendSuper2(&v8, "isDragging");

}

void sub_1003CEB60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  __n128 v31;
  double v32;
  double v33;
  double v34;
  double v35;
  __n128 v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(_QWORD);
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  char *v56;
  double v57;
  uint64_t (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  __n128 v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  __n128 v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char v85;
  __n128 v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  int v95;
  int v96;
  _QWORD v97[2];
  unint64_t v98;
  uint64_t v99;
  __int128 v100;
  void (*v101)(_QWORD *, _QWORD, uint64_t);
  unsigned int v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, __n128);
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t (*v108)(char *, uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t v111;
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;

  v111 = type metadata accessor for FloatingPointRoundingRule(0);
  v11 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v110 = (char *)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v17 = (char *)v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v18 = TodayCard.media.getter(v15);
    v19 = type metadata accessor for TodayCardMediaList(0);
    v20 = swift_dynamicCastClass(v18, v19);
    v109 = v20;
    if (v20)
    {
      v99 = v18;
      v21 = PageGrid.horizontalDirectionalMargins.getter(v20);
      v23 = 34.0;
      if (v22 <= 34.0)
        v24 = v22;
      else
        v24 = 34.0;
      PageGrid.horizontalDirectionalMargins.getter(v21);
      if (v25 <= 34.0)
        v23 = v25;
      NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(a5, "layoutDirection"), 0.0, v24, 0.0, v23);
      v27 = v26;
      v29 = v28;
      v31.n128_f64[0] = PageGrid.containerWidth.getter(v30);
      v32 = v31.n128_f64[0];
      v33 = PageGrid.containerHeight.getter(v31);
      sub_1005BF864(a2, a5);
      v35 = v32 - v27 - v29 - v34;
      v36.n128_f64[0] = sub_100046B3C(a5, a6);
      v37 = v36.n128_f64[0];
      v38 = TodayCard.heading.getter(v36);
      v40 = v39;
      if (qword_1007F2648 != -1)
        swift_once(&qword_1007F2648, sub_100416984);
      v41 = sub_1000117A8(v13, (uint64_t)qword_1008557C0);
      v106 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v106(v17, v41, v13);
      v42 = type metadata accessor for Feature(0);
      v113 = v42;
      v103 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v114 = v103;
      v43 = sub_1000117C0(v112);
      v44 = *(void (**)(_QWORD))(*(_QWORD *)(v42 - 8) + 104);
      v102 = enum case for Feature.measurement_with_labelplaceholder(_:);
      v101 = (void (*)(_QWORD *, _QWORD, uint64_t))v44;
      v44(v43);
      v45 = isFeatureEnabled(_:)(v112);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
      static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v38, v40, v17, 4, 4, 0, 0, 0, v35, v33, a5, v45 & 1);
      v47 = v46;
      v98 = v48;
      v49 = swift_bridgeObjectRelease(v40);
      v104 = *(void (**)(char *, uint64_t, __n128))(v14 + 8);
      v104(v17, v13, v49);
      v50 = type metadata accessor for TraitEnvironmentPlaceholder(0);
      v51 = sub_10000DF3C(&qword_1007F5840);
      v52 = swift_allocObject(v51, 40, 7);
      v100 = xmmword_10066FE60;
      *(_OWORD *)(v52 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v52 + 32) = a5;
      v53 = a5;
      v105 = v50;
      v54 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v52);
      CGFloat.rawValue(in:)(v37);

      if (qword_1007F0C00 != -1)
        swift_once(&qword_1007F0C00, sub_100046958);
      v97[1] = v47;
      v107 = type metadata accessor for StaticDimension(0);
      v55 = sub_1000117A8(v107, (uint64_t)qword_100850820);
      v56 = v110;
      static Dimensions.defaultRoundingRule.getter(v55);
      v57 = StaticDimension.value(compatibleWith:rounded:)(v53, v56);
      v58 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
      v59 = v111;
      v108 = v58;
      v60 = v58(v56, v111);
      v61 = TodayCard.title.getter(v60);
      v63 = v62;
      if (qword_1007F2658 != -1)
        swift_once(&qword_1007F2658, sub_100416AD0);
      v64 = sub_1000117A8(v13, (uint64_t)qword_1008557F0);
      v106(v17, v64, v13);
      v113 = v42;
      v114 = v103;
      v65 = sub_1000117C0(v112);
      v101(v65, v102, v42);
      v66 = isFeatureEnabled(_:)(v112);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
      LOBYTE(v95) = v66 & 1;
      static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v61, v63, v17, 4, 0, 0, 2, 0, v35, v33, v53, v95);
      v67 = swift_bridgeObjectRelease(v63);
      v104(v17, v13, v67);
      v68 = swift_allocObject(v51, 40, 7);
      *(_OWORD *)(v68 + 16) = v100;
      *(_QWORD *)(v68 + 32) = v53;
      v69 = v53;
      v70 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v68);
      CGFloat.rawValue(in:)(v57);

      v72 = TodayCardMediaList.marketingText.getter(v71);
      v74 = v73;
      v75 = static String.isNilOrEmpty(_:)(v72, v73);
      v76 = swift_bridgeObjectRelease(v74);
      if ((v75 & 1) == 0)
      {
        if (qword_1007F1F40 != -1)
          swift_once(&qword_1007F1F40, sub_1003CDF54);
        v77 = sub_1000117A8(v107, (uint64_t)qword_100854510);
        static Dimensions.defaultRoundingRule.getter(v77);
        v78 = StaticDimension.value(compatibleWith:rounded:)(v69, v56);
        v79 = v108(v56, v59);
        v80 = TodayCardMediaList.marketingText.getter(v79);
        v82 = v81;
        if (qword_1007F2690 != -1)
          swift_once(&qword_1007F2690, sub_100416D98);
        v83 = sub_1000117A8(v13, (uint64_t)qword_100855898);
        v106(v17, v83, v13);
        v113 = v42;
        v114 = v103;
        v84 = sub_1000117C0(v112);
        v101(v84, v102, v42);
        v85 = isFeatureEnabled(_:)(v112);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v112);
        LOBYTE(v96) = v85 & 1;
        static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v80, v82, v17, 4, 0, 0, 2, 0, v35, v33, v69, v96);
        v86 = swift_bridgeObjectRelease(v82);
        v104(v17, v13, v86);
        v87 = swift_allocObject(v51, 40, 7);
        *(_OWORD *)(v87 + 16) = v100;
        *(_QWORD *)(v87 + 32) = v69;
        v88 = v69;
        v89 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v87);
        CGFloat.rawValue(in:)(v78);

      }
      v76.n128_u64[0] = v98;
      v90 = TodayCardMediaList.lockups.getter(v76);
      v91 = v90;
      if ((unint64_t)v90 >> 62)
      {
        if (v90 >= 0)
          v90 &= 0xFFFFFFFFFFFFFF8uLL;
        v92 = _CocoaArrayWrapper.endIndex.getter(v90);
      }
      else
      {
        v92 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v91);
      type metadata accessor for TodayListCardLockupContainer();
      sub_1001249DC(v92, v69);
      if (qword_1007F1F48 != -1)
        swift_once(&qword_1007F1F48, sub_1003CE0A4);
      v93 = sub_1000117A8(v107, (uint64_t)qword_100854528);
      static Dimensions.defaultRoundingRule.getter(v93);
      StaticDimension.value(compatibleWith:rounded:)(v69, v56);
      v94 = swift_release(v99);
      ((void (*)(char *, uint64_t, __n128))v108)(v56, v59, v94);
    }
    else
    {
      swift_release(v18);
    }
  }
  else
  {
    sub_1004FAAD8(a2, a4, a5);
  }
}

_BYTE *sub_1003CF3B4()
{
  uint64_t v0;
  _BYTE *result;
  int v2;
  int v3;

  sub_1005A4450();
  result = *(_BYTE **)(v0 + qword_10080C3D0);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded);
  v3 = result[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded];
  result[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded] = v2;
  if (v2 != v3)
    return objc_msgSend(result, "setNeedsLayout");
  return result;
}

double sub_1003CF410(CGFloat *a1)
{
  uint64_t v1;
  double v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double result;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  double MinX;
  CGFloat v27;
  CGFloat v28;
  double v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v3 = sub_1003CDB54(a1);
  v4 = *(void **)(v1 + qword_10080C3C8);
  v5 = objc_msgSend(v4, "text", v3);
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = static String.isNilOrEmpty(_:)(v7, v9);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
    objc_msgSend(v4, "setFrame:", 0.0, 0.0, 0.0, 0.0);
  }
  else
  {
    objc_msgSend(v4, "measurementsWithFitting:in:", v1, a1[2], a1[3]);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    if (qword_1007F1F40 != -1)
      swift_once(&qword_1007F1F40, sub_1003CDF54);
    v20 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v20, (uint64_t)qword_100854510);
    v21 = AnyDimension.topMargin(from:in:)(v1, v20, &protocol witness table for StaticDimension, v13, v15, v17, v19);
    v22 = *a1;
    v23 = a1[1];
    v24 = a1[2];
    v25 = a1[3];
    v30.origin.x = *a1;
    v30.origin.y = v23;
    v30.size.width = v24;
    v30.size.height = v25;
    v29 = v19;
    MinX = CGRectGetMinX(v30);
    v31.origin.x = v22;
    v31.origin.y = v23;
    v31.size.width = v24;
    v31.size.height = v25;
    v27 = v21 + CGRectGetMinY(v31);
    objc_msgSend(v4, "setFrame:", MinX, v27, v13, v15);
    v32.origin.x = MinX;
    v32.origin.y = v27;
    v32.size.width = v13;
    v32.size.height = v15;
    v28 = CGRectGetHeight(v32) - v29;
    a1[1] = v23 + v28;
    result = v25 - v28;
    a1[3] = result;
  }
  return result;
}

id sub_1003CF630(CGRect *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  double v10;
  void *v11;
  uint64_t v12;
  double v13;
  void *v14;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v19;
  double v20;
  char v21;
  double MinX;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double MidY;
  double v28;
  double v29;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v2 = v1;
  if (qword_1007F1F48 != -1)
    swift_once(&qword_1007F1F48, sub_1003CE0A4);
  v4 = type metadata accessor for StaticDimension(0);
  sub_1000117A8(v4, (uint64_t)qword_100854528);
  v5 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v6 = sub_10000DF3C(&qword_1007F5840);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = v5;
  v9 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v7);
  v10 = dispatch thunk of AnyDimension.rawValue(in:)(v9, v4, &protocol witness table for StaticDimension);

  v11 = *(void **)&v2[qword_100852D38];
  objc_msgSend(v11, "frame");
  objc_msgSend(v11, "firstBaselineFromTop");
  objc_msgSend(v11, "lastBaselineFromBottom");
  v12 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if ((v2[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) != 0)
    v13 = 1.79769313e308;
  else
    v13 = CGRectGetHeight(*a1) - v10 + -10.0;
  v14 = *(void **)&v2[qword_10080C3D0];
  x = a1->origin.x;
  y = a1->origin.y;
  width = a1->size.width;
  height = a1->size.height;
  v31.origin.x = a1->origin.x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  objc_msgSend(v14, "sizeThatFits:", CGRectGetWidth(v31), v13);
  v20 = v19;
  v21 = v2[v12];
  v32.origin.x = x;
  v32.origin.y = y;
  v32.size.width = width;
  v32.size.height = height;
  MinX = CGRectGetMinX(v32);
  v23 = x;
  v24 = y;
  v25 = width;
  v26 = height;
  if ((v21 & 1) != 0)
  {
    MidY = CGRectGetMaxY(*(CGRect *)&v23) - v20;
    v28 = -10.0;
  }
  else
  {
    MidY = CGRectGetMidY(*(CGRect *)&v23);
    v28 = v20 * -0.5;
  }
  v29 = MidY + v28;
  v33.origin.x = x;
  v33.origin.y = y;
  v33.size.width = width;
  v33.size.height = height;
  return objc_msgSend(v14, "setFrame:", MinX, v29, CGRectGetWidth(v33), v20);
}

void sub_1003CF890(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_100125B90();

}

void sub_1003CF8EC(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char *v18;

  ObjectType = swift_getObjectType();
  sub_1005A3708(a1, a2, a3 & 1);
  v8 = swift_dynamicCastClass(a1, ObjectType);
  if (v8)
  {
    if ((a3 & 1) == 0)
    {
      v9 = v8;
      v10 = *(_QWORD *)(v8 + qword_100854560);
      v11 = *(_QWORD *)(v3 + qword_100854560);
      *(_QWORD *)(v3 + qword_100854560) = v10;
      v12 = a1;
      swift_retain(v10);
      *(_QWORD *)&v13 = swift_release(v11).n128_u64[0];
      v14 = *(void **)(v3 + qword_10080C3C8);
      v15 = *(void **)(v9 + qword_10080C3C8);
      v16 = objc_msgSend(v15, "text", v13);
      objc_msgSend(v14, "setText:", v16);

      v17 = objc_msgSend(v15, "textColor");
      objc_msgSend(v14, "setTextColor:", v17);

      v18 = (char *)*(id *)(v9 + qword_10080C3D0);
      sub_100127710(v18);

    }
  }
}

uint64_t sub_1003CFA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  NSString v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;

  v5 = v4;
  v10 = type metadata accessor for TodayCard.Style(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a1;
  v15 = TodayCard.media.getter(v14);
  v16 = type metadata accessor for TodayCardMediaList(0);
  if (!swift_dynamicCastClass(v15, v16))
  {
    v24 = swift_release(v15);
    return sub_1005C0808(v36, a2, a3, a4, v24);
  }
  v34 = a2;
  v35 = a3;
  v17 = *(_QWORD *)(v5 + qword_100854560);
  *(_QWORD *)(v5 + qword_100854560) = a4;
  swift_release(v17);
  v18 = *(void **)(v5 + qword_10080C3C8);
  swift_retain(a4);
  TodayCardMediaList.marketingText.getter(v19);
  if (v20)
  {
    v22 = v20;
    v23 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v18, "setText:", v23, v21);

  v26 = TodayCard.style.getter(v25);
  v27 = (void *)TodayCard.Style.cardTitleTextColor.getter(v26);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  objc_msgSend(v18, "setTextColor:", v27);

  v29 = TodayCardMediaList.lockups.getter(v28);
  v30 = type metadata accessor for ArtworkLoader(0);
  v31 = *(_QWORD *)(a4 + qword_100854050);
  a2 = v34;
  if (v31)
  {
    swift_retain(*(_QWORD *)(a4 + qword_100854050));
    sub_100127674(v29, v31, a4);
    swift_release(v15);
    swift_bridgeObjectRelease(v29);
    v24 = swift_release(v31);
    a3 = v35;
    return sub_1005C0808(v36, a2, a3, a4, v24);
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v30);
  __break(1u);
  return result;
}

double sub_1003CFC48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v0 = type metadata accessor for TodayCard(0);
  v1 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v2 = ItemLayoutContext.typedModel<A>(as:)(&v9, v0, v0, v1);
  v4 = v9;
  if (v9)
  {
    v5 = TodayCard.media.getter(v2);
    swift_release(v4);
    v6 = type metadata accessor for TodayCardMediaList(0);
    if (swift_dynamicCastClass(v5, v6))
    {
      v8 = TodayCardMediaList.lockups.getter(v7);
      sub_1001282B4(v8);
      swift_release(v5);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1003CFD14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_100854558));
  return swift_release(*(_QWORD *)(v0 + qword_100854560));
}

uint64_t sub_1003CFD60(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + qword_100854558));
  return swift_release(*(_QWORD *)(a1 + qword_100854560));
}

uint64_t type metadata accessor for LegacyListTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C400;
  if (!qword_10080C400)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LegacyListTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_1003CFDF4(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = "\b";
  v2[3] = "\b";
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 808);
}

uint64_t sub_1003CFE44()
{
  return type metadata accessor for LegacyListTodayCardCollectionViewCell(0);
}

char *sub_1003CFE4C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_condensedAdLockupWithIconBackgroundView;
  v13 = type metadata accessor for CondensedAdLockupWithIconBackgroundView();
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
  v15 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v14, "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator] = 0;
  v16 = &v15[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v18 = objc_msgSend(v17, "contentView");
  objc_msgSend(v18, "setClipsToBounds:", 1);

  v19 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_condensedAdLockupWithIconBackgroundView];
  objc_msgSend(v19, "setClipsToBounds:", 1);
  v20 = objc_msgSend(v17, "contentView");
  v21 = v19;
  objc_msgSend(v20, "addSubview:", v21);

  return v17;
}

double sub_1003D0148(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for CondensedAdLockupWithIconBackground(0, v6);
  v10 = sub_10000E99C((unint64_t *)&unk_10080C7D0, (uint64_t (*)(uint64_t))&type metadata accessor for CondensedAdLockupWithIconBackground, (uint64_t)&protocol conformance descriptor for CondensedAdLockupWithIconBackground);
  ItemLayoutContext.typedModel<A>(as:)(&v18, v9, v9, v10);
  v12 = v18;
  if (v18)
  {
    KeyPath = swift_getKeyPath(&unk_100689F28);
    ItemLayoutContext.subscript.getter(v8);
    swift_release(KeyPath);
    v14 = type metadata accessor for ObjectGraph(0);
    v15 = swift_dynamicCastClassUnconditional(a2, v14, 0, 0, 0);
    sub_100093DA8(v12, (uint64_t)v8, v15, v16);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v2, "setNeedsLayout");
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

void sub_1003D0298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _BYTE v27[40];
  _BYTE v28[24];
  _BYTE v29[24];

  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v28, 0, 0);
    v16 = swift_weakLoadStrong(v15);
    if (v16)
    {
      v17 = v16;
      sub_100011020(a3, (uint64_t)v27);
      v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v20 = type metadata accessor for CondensedAdLockupWithIconBackground(0, v19);
      v21 = swift_dynamicCast(&v26, v27, v18, v20, 6);
      if ((v21 & 1) != 0)
      {
        v22 = v26;
        v23 = CondensedAdLockupWithIconBackground.lockup.getter(v21);
        swift_release(v22);
        Lockup.impressionMetrics.getter(v24);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          swift_release(v23);
          swift_release(v17);

          sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F7740);
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
          objc_msgSend(v14, "bounds");
          ImpressionsCalculator.addElement(_:at:)(v12);

          swift_release(v23);
          v25 = swift_release(v17);
          (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
        }
      }
      else
      {

        swift_release(v17);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_1003D0510()
{
  return type metadata accessor for CondensedAdLockupWithIconBackgroundCollectionViewCell(0);
}

uint64_t type metadata accessor for CondensedAdLockupWithIconBackgroundCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C7B8;
  if (!qword_10080C7B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CondensedAdLockupWithIconBackgroundCollectionViewCell);
  return result;
}

void sub_1003D0554(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = &unk_100689DE0;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_1003D05E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E99C(&qword_10080C7C8, type metadata accessor for CondensedAdLockupWithIconBackgroundCollectionViewCell, (uint64_t)&unk_100689E90);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1003D064C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

double sub_1003D069C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1003D06F4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1003D0738()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char v4[24];
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  ArtworkView.image.setter(0);
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator], v4, 1, 0);
  v2 = *(_QWORD *)v1;
  *(_QWORD *)v1 = 0;
  return swift_release(v2);
}

uint64_t sub_1003D07CC()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0
                + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator);
  swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1003D0814(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1003D0864(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1003D08A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_1003D0900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

uint64_t (*sub_1003D095C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

void (*sub_1003D09A0(uint64_t a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  __int128 v7[2];

  v2 = swift_allocObject(&unk_10073CEE0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  sub_100011020(a1, (uint64_t)v7);
  v3 = swift_allocObject(&unk_10073CF08, 24, 7);
  swift_weakInit(v3 + 16);
  sub_100010F3C(v7, (uint64_t)v6);
  v4 = swift_allocObject(&unk_10073CF30, 72, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_100010F3C(v6, v4 + 32);
  return sub_1003D0B4C;
}

double sub_1003D0A64(uint64_t a1, uint64_t a2)
{
  return sub_10028BD34(a1, a2);
}

uint64_t sub_1003D0A9C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0
                                                    + OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_condensedAdLockupWithIconBackgroundView)
                                        + OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

uint64_t sub_1003D0AD0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D0AF4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D0B18()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 4);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1003D0B4C()
{
  uint64_t v0;

  sub_1003D0298(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void sub_1003D0B58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_itemLayoutContext];
  v2 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_condensedAdLockupWithIconBackgroundView;
  v4 = type metadata accessor for CondensedAdLockupWithIconBackgroundView();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsCalculator] = 0;
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension53CondensedAdLockupWithIconBackgroundCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CondensedAdLockupWithIconBackgroundCollectionViewCell.swift", 82, 2, 32, 0);
  __break(1u);
}

void sub_1003D0C2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _BYTE v18[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension11ArtworkGrid_artworkViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension11ArtworkGrid_artworkViews, v18, 0, 0);
  v2 = *v1;
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(v2);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v7)
      goto LABEL_21;
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        goto LABEL_21;
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          goto LABEL_21;
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_5:
    v11 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v10);
    v12 = type metadata accessor for ArtworkView(0);
    v13 = sub_100059C5C();
    v14 = v11;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v14, 1, v12, v13);

  }
  v17 = v15 + 3;
  if (v17 >= v7)
  {
LABEL_21:
    swift_release(v2);
    return;
  }
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      goto LABEL_21;
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1003D0DD0(uint64_t a1)
{
  return sub_1003D0E18(375.0, a1, qword_10080C7E0);
}

uint64_t sub_1003D0DF4(uint64_t a1)
{
  return sub_1003D0E18(620.0, a1, qword_10080C7F8);
}

uint64_t sub_1003D0E18(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[5];
  _QWORD v14[5];
  _QWORD v15[5];

  v5 = type metadata accessor for AspectRatio(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0, v6);
  sub_100045464(v9, a3);
  v10 = sub_1000117A8(v9, (uint64_t)a3);
  AspectRatio.init(_:_:)(v10);
  v15[3] = &type metadata for Double;
  v15[4] = &protocol witness table for Double;
  *(double *)v15 = a1;
  v14[3] = &type metadata for Double;
  v14[4] = &protocol witness table for Double;
  v13[4] = &protocol witness table for Double;
  v14[0] = 0;
  v13[3] = &type metadata for Double;
  v13[0] = 0;
  return ArcadeWelcomeItemViewLayout.Metrics.init(imageAspectRatio:imageWidth:headingTopSpace:bodyTopSpace:textInsets:)(v8, v15, v14, v13, 0.0, 0.0, 0.0, 0.0);
}

void sub_1003D0F0C(uint64_t a1)
{
  sub_1000467A4(a1, qword_10080C810);
}

void sub_1003D0F30(uint64_t a1)
{
  sub_1000467A4(a1, qword_10080C828);
}

double sub_1003D0F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for AspectRatio(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DF3C(&qword_10080C8B0);
  sub_100045464(v7, qword_10080C840);
  sub_1000117A8(v7, (uint64_t)qword_10080C840);
  if (qword_1007F1F70 != -1)
    swift_once(&qword_1007F1F70, sub_1003D0F30);
  v8 = sub_1000117A8(v0, (uint64_t)qword_10080C828);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_1007F1F68 != -1)
    swift_once(&qword_1007F1F68, sub_1003D0F0C);
  v10 = sub_1000117A8(v0, (uint64_t)qword_10080C810);
  v9(v3, v10, v0);
  v11 = sub_10000DF3C(&qword_1007F5D10);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0).n128_u64[0];
  return result;
}

char *sub_1003D10BC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v10;
  objc_class *ObjCClassFromMetadata;
  id v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artwork] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkLoader] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_shouldUpdateArtwork] = 0;
  v10 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v10);
  v12 = objc_allocWithZone(ObjCClassFromMetadata);
  v13 = v4;
  v14 = objc_msgSend(v12, "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_headlineLabel] = v14;
  v15 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_bodyLabel] = v15;
  v16 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");

  v23.receiver = v13;
  v23.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_headlineLabel];
  v19 = v17;
  objc_msgSend(v19, "addSubview:", v18);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_bodyLabel]);
  v20 = *(void **)&v19[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView];
  objc_msgSend(v19, "addSubview:", v20);
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v21 = v20;
  ArtworkView.backgroundColor.setter(0);

  sub_1003D1270();
  return v19;
}

id sub_1003D1270()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, "traitCollection");
  v7 = UITraitCollection.prefersAccessibilityLayouts.getter(v6);

  if ((v7 & 1) != 0)
  {
    v8 = enum case for DirectionalTextAlignment.leading(_:);
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v9(v5, enum case for DirectionalTextAlignment.leading(_:), v2);
    dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v5);
    v9(v5, v8, v2);
    return (id)dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v5);
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_headlineLabel], "setTextAlignment:", 1);
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_bodyLabel], "setTextAlignment:", 1);
  }
}

BOOL sub_1003D14E8(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *ObjectType;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  _BOOL8 result;
  BOOL v19;
  objc_super v20;
  objc_super v21;
  objc_super v22;
  objc_super v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v23.receiver = v4;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "frame");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v22.receiver = v4;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "setFrame:", a1, a2, a3, a4);
  v21.receiver = v4;
  v21.super_class = ObjectType;
  objc_msgSendSuper2(&v21, "frame");
  v26.origin.x = v11;
  v26.origin.y = v13;
  v26.size.width = v15;
  v26.size.height = v17;
  result = CGRectEqualToRect(v24, v26);
  if (result)
  {
    v19 = 0;
  }
  else
  {
    v20.receiver = v4;
    v20.super_class = ObjectType;
    objc_msgSendSuper2(&v20, "frame");
    v27.origin.x = 0.0;
    v27.origin.y = 0.0;
    v27.size.width = 0.0;
    v27.size.height = 0.0;
    result = CGRectEqualToRect(v25, v27);
    v19 = !result;
  }
  *((_BYTE *)v4 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_shouldUpdateArtwork) = v19;
  return result;
}

uint64_t sub_1003D15F8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  double v31;
  char *v32;
  uint64_t v34;
  objc_class *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[5];
  void *v42;
  uint64_t v43;
  void *v44;
  objc_super v45;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v4 = __chkstk_darwin(v3);
  v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for ArcadeWelcomeItemViewLayout(0, v4);
  v34 = *(_QWORD *)(v37 - 8);
  v6 = __chkstk_darwin(v37);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (uint64_t *)((char *)&v34 - v18);
  v45.receiver = v1;
  v45.super_class = ObjectType;
  v35 = ObjectType;
  objc_msgSendSuper2(&v45, "layoutSubviews", v17);
  if ((sub_1002ED25C() & 1) != 0)
  {
    if (qword_1007F1F60 != -1)
      swift_once(&qword_1007F1F60, sub_1003D0DF4);
    v20 = qword_10080C7F8;
  }
  else
  {
    if (qword_1007F1F58 != -1)
      swift_once(&qword_1007F1F58, sub_1003D0DD0);
    v20 = qword_10080C7E0;
  }
  v21 = sub_1000117A8(v9, (uint64_t)v20);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v23 = v22(v15, v21, v9);
  __chkstk_darwin(v23);
  *(&v34 - 2) = (uint64_t)v1;
  Copyable.copyWithOverrides(in:)(v19, sub_1003D2230, &v34 - 4, v9, &protocol witness table for ArcadeWelcomeItemViewLayout.Metrics);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  v22(v12, (uint64_t)v19, v9);
  v25 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_headlineLabel];
  v43 = type metadata accessor for DynamicTypeLabel(0);
  v44 = &protocol witness table for UILabel;
  v41[4] = &protocol witness table for UILabel;
  v42 = v25;
  v26 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_bodyLabel];
  v41[3] = v43;
  v41[0] = v26;
  v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView];
  v40[3] = type metadata accessor for ArtworkView(0);
  v40[4] = &protocol witness table for UIView;
  v40[0] = v27;
  v28 = v25;
  v29 = v26;
  v30 = v27;
  ArcadeWelcomeItemViewLayout.init(metrics:headingText:bodyText:image:)(v12, &v42, v41, v40);
  v31 = LayoutMarginsAware<>.layoutFrame.getter(v35);
  v32 = v36;
  ArcadeWelcomeItemViewLayout.placeChildren(relativeTo:in:)(v1, v31);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v39);
  sub_1003D1980();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v37);
  return ((uint64_t (*)(_QWORD *, uint64_t))v24)(v19, v9);
}

uint64_t sub_1003D1924()
{
  uint64_t ObjectType;
  _QWORD v2[5];
  CGRect v3;

  ObjectType = swift_getObjectType();
  v3.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v2[3] = &type metadata for CGFloat;
  v2[4] = &protocol witness table for CGFloat;
  v2[0] = CGRectGetWidth(v3);
  return ArcadeWelcomeItemViewLayout.Metrics.imageWidth.setter(v2);
}

void sub_1003D1980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[5];
  CGRect v27;
  CGRect v28;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for AspectRatio(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v28.origin.x = 0.0;
  v28.origin.y = 0.0;
  v28.size.width = 0.0;
  v28.size.height = 0.0;
  if (!CGRectEqualToRect(v27, v28))
  {
    v7 = OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_shouldUpdateArtwork;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_shouldUpdateArtwork) == 1)
    {
      v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artwork);
      if (v8)
      {
        v9 = qword_1007F1F78;
        swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artwork));
        if (v9 != -1)
          swift_once(&qword_1007F1F78, sub_1003D0F54);
        v10 = sub_10000DF3C(&qword_10080C8B0);
        sub_1000117A8(v10, (uint64_t)qword_10080C840);
        v26[0] = v1;
        Conditional.evaluate(with:)(v26, v10);
        LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
        v13 = AspectRatio.maxSize(fitting:)(v11, v12);
        v15 = v14;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v16 = Artwork.config(using:)(v13, v15);
        v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkLoader);
        if (v17)
        {
          v25 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView);
          v18 = v25;
          v19 = type metadata accessor for ArtworkView(0);
          v20 = sub_1003D2238();
          swift_retain(v17);
          v21 = v18;
          AnyHashable.init<A>(_:)(&v25, v19, v20);
          v22 = swift_allocObject(&unk_10073D018, 24, 7);
          swift_unknownObjectWeakInit(v22 + 16);
          v23 = swift_retain(v22);
          ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v16, 2, 0, v26, sub_1003D22A4, v22, v23);
          swift_release(v8);
          swift_release(v16);
          swift_release(v17);
          swift_release(v22);
          sub_100054E38((uint64_t)v26);
          v24 = v22;
        }
        else
        {
          swift_release(v8);
          v24 = v16;
        }
        swift_release(v24);
      }
      *(_BYTE *)(v1 + v7) = 0;
    }
  }
}

double sub_1003D1C14(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  double v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  _QWORD v38[5];
  void *v39;
  uint64_t v40;
  void *v41;

  v4 = v3;
  v35 = a1;
  v6 = a2.n128_f64[0];
  v36 = type metadata accessor for ArcadeWelcomeItemViewLayout(0, a2);
  v34 = *(_QWORD *)(v36 - 8);
  v7 = __chkstk_darwin(v36);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArcadeWelcomeItemViewLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v33 - v18;
  if ((sub_1002ED25C() & 1) != 0)
  {
    if (qword_1007F1F60 != -1)
      swift_once(&qword_1007F1F60, sub_1003D0DF4);
    v20 = qword_10080C7F8;
  }
  else
  {
    if (qword_1007F1F58 != -1)
      swift_once(&qword_1007F1F58, sub_1003D0DD0);
    v20 = qword_10080C7E0;
  }
  v21 = sub_1000117A8(v10, (uint64_t)v20);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23 = v22(v16, v21, v10);
  __chkstk_darwin(v23);
  *((double *)&v33 - 2) = v6;
  *((double *)&v33 - 1) = a3;
  Copyable.copyWithOverrides(in:)(v19, sub_1003D21E4, &v33 - 4, v10, &protocol witness table for ArcadeWelcomeItemViewLayout.Metrics);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v16, v10);
  v22(v13, (uint64_t)v19, v10);
  v25 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_headlineLabel);
  v40 = type metadata accessor for DynamicTypeLabel(0);
  v41 = &protocol witness table for UILabel;
  v38[4] = &protocol witness table for UILabel;
  v39 = v25;
  v26 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_bodyLabel);
  v38[3] = v40;
  v38[0] = v26;
  v27 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView);
  v37[3] = type metadata accessor for ArtworkView(0);
  v37[4] = &protocol witness table for UIView;
  v37[0] = v27;
  v28 = v25;
  v29 = v26;
  v30 = v27;
  ArcadeWelcomeItemViewLayout.init(metrics:headingText:bodyText:image:)(v13, &v39, v38, v37);
  v31 = ArcadeWelcomeItemViewLayout.measurements(fitting:in:)(v35, v6, a3);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v36);
  v24(v19, v10);
  return v31;
}

void sub_1003D1F70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  id v26;
  Swift::Bool v27;
  _BYTE v28[24];
  UIImage_optional v29;

  if (a1)
  {
    v6 = a5 + 16;
    swift_beginAccess(a5 + 16, v28, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (char *)Strong;
      v9 = OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView;
      v10 = *(void **)(Strong + OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkView);
      v11 = a1;
      v12 = v10;
      v13 = objc_msgSend(v11, "size");
      v15 = v14;
      v17 = v16;
      v18.n128_f64[0] = ArtworkView.imageSize.getter(v13);
      v19.n128_u64[0] = v15;
      v20.n128_u64[0] = v17;
      CGSize.fitting(_:mode:)(1, v18, v21, v19, v20);
      ArtworkView.imageSize.setter(v22, v23);

      v24 = *(void **)&v8[v9];
      v25 = v11;
      v26 = v24;
      v29.value.super.isa = (Class)a1;
      v29.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v29, v27);

    }
  }
}

id sub_1003D2058(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  char v5;
  uint64_t v6;
  objc_super v8;

  v2 = v1;
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  if (!a1 || (UITraitCollection.prefersAccessibilityLayouts.getter(v6) & 1) != (v5 & 1))
    sub_1003D1270();
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t type metadata accessor for ArcadeWelcomeItemView()
{
  return objc_opt_self(_TtC22SubscribePageExtension21ArcadeWelcomeItemView);
}

uint64_t sub_1003D21E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];

  v1 = *(_QWORD *)(v0 + 16);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return ArcadeWelcomeItemViewLayout.Metrics.imageWidth.setter(v3);
}

uint64_t sub_1003D2230()
{
  return sub_1003D1924();
}

unint64_t sub_1003D2238()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F8EB8;
  if (!qword_1007F8EB8)
  {
    v1 = type metadata accessor for ArtworkView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1007F8EB8);
  }
  return result;
}

uint64_t sub_1003D2280()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D22A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1003D1F70(a1, a2, a3, a4, v4);
}

uint64_t sub_1003D22AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.titleArtwork.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D22D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.eyebrowArtwork.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D22FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  __n128 v17;
  double (*v18)(char *, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double top;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double bottom;
  __n128 v30;
  double left;
  double right;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a2;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for ShelfBackground(0);
  v5 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v34 - v14;
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_10068A098);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  v17 = swift_release(KeyPath);
  v18 = *(double (**)(char *, uint64_t, __n128))(v9 + 8);
  v19.n128_f64[0] = v18(v15, v8, v17);
  ShelfLayoutContext.shelf.getter(v19);
  v20 = swift_getKeyPath(&unk_10068A0C8);
  ReadOnlyLens.subscript.getter(v20, v8);
  v21 = swift_release(v20);
  v22 = ((uint64_t (*)(char *, uint64_t, __n128))v18)(v11, v8, v21);
  v23 = v38;
  if (v38 && (ShelfHeader.hasTrailingArtwork.getter(v22) & 1) != 0)
  {
    if (qword_1007F1200 != -1)
      swift_once(&qword_1007F1200, sub_1000E59F4);
    v24 = *(double *)&qword_100851980;
    if (qword_1007F2A00 != -1)
      swift_once(&qword_1007F2A00, sub_10042D0F4);
    top = -v24;
    v26 = type metadata accessor for StaticDimension(0);
    v27 = sub_1000117A8(v26, (uint64_t)qword_100856150);
    v28 = ShelfLayoutContext.traitEnvironment.getter(v27);
    static Dimensions.defaultRoundingRule.getter(v28);
    bottom = AnyDimension.value(in:rounded:)(v28, v4, v26, &protocol witness table for StaticDimension);
    v30 = swift_unknownObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v4, v35, v30);
    swift_release(v23);
    left = 0.0;
    right = 0.0;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    swift_release(v23);
  }
  sub_1005AB81C((uint64_t)v7, v37, top, left, bottom, right);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v36);
}

double sub_1003D25D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  __n128 v41;
  uint64_t (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double result;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  __n128 v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  __n128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  __n128 v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  __n128 v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  _QWORD *v188;
  __n128 v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  __n128 v202;
  uint64_t v203;
  _QWORD *v204;
  _QWORD *v205;
  __n128 v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char v219;
  __n128 v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  _OWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;

  v233 = a4;
  v239 = a5;
  v240 = a3;
  v7 = type metadata accessor for ShelfBackground(0);
  v231 = *(_QWORD *)(v7 - 8);
  v232 = v7;
  __chkstk_darwin(v7);
  v241 = (uint64_t *)((char *)&v228 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v238 = type metadata accessor for ShelfLayoutContext(0);
  v236 = *(_QWORD *)(v238 - 8);
  __chkstk_darwin(v238);
  v234 = v9;
  v237 = (char *)&v228 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v228 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v228 - v18;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v20 == a1 && v21 == a2)
  {
    v26 = swift_bridgeObjectRelease(a2);
LABEL_15:
    v39 = v240;
    ShelfLayoutContext.shelf.getter(v26);
    KeyPath = swift_getKeyPath(&unk_10068A0C8);
    ReadOnlyLens.subscript.getter(KeyPath, v10);
    v41 = swift_release(KeyPath);
    v42 = *(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8);
    v43 = v42(v19, v10, v41);
    v45 = v242;
    if (v242)
    {
      v46 = ShelfHeader.shouldUseShelfHeader.getter(v43);
      v44 = swift_release(v45);
      v48 = v231;
      v47 = v232;
      v49 = v241;
      if ((v46 & 1) != 0)
      {
        v50 = sub_10000DF3C(&qword_100807A20);
        v51 = v239;
        v239[3] = v50;
        v51[4] = sub_100130F90(&qword_100807A28, &qword_100807A20);
        v241 = sub_1000117C0(v51);
        v239 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
        v232 = v52;
        v35 = type metadata accessor for ShelfHeaderView(0);
        v54 = static UICollectionReusableView.defaultReuseIdentifier.getter(v53);
        v56 = v55;
        v57 = swift_allocObject(&unk_10073D040, 24, 7);
        swift_weakInit(v57 + 16);
        v59 = v236;
        v58 = v237;
        v60 = v238;
        (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v39, v238);
        v61 = *(unsigned __int8 *)(v59 + 80);
        v62 = (v61 + 24) & ~v61;
        v63 = (v234 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
        v64 = swift_allocObject(&unk_10073D1F8, v63 + 8, v61 | 7);
        *(_QWORD *)(v64 + 16) = v57;
        (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v58, v60);
        v65 = v233;
        *(_QWORD *)(v64 + v63) = v233;
        swift_retain(v65);
        v66 = sub_1003D6B94;
LABEL_21:
        v82 = v239;
        v83 = (_QWORD *)v232;
        goto LABEL_22;
      }
    }
    else
    {
      v48 = v231;
      v47 = v232;
      v49 = v241;
    }
    ShelfLayoutContext.shelf.getter(v44);
    v67 = swift_getKeyPath(&unk_10068A098);
    ReadOnlyLens.subscript.getter(v67, v10);
    v68 = swift_release(v67);
    v42(v16, v10, v68);
    if ((*(unsigned int (**)(_QWORD *, uint64_t))(v48 + 88))(v49, v47) != enum case for ShelfBackground.interactive(_:))
    {
      v88 = sub_10000DF3C(&qword_1007FC1A8);
      v89 = v239;
      v239[3] = v88;
      v89[4] = sub_100130F90((unint64_t *)&unk_1007FC1B0, &qword_1007FC1A8);
      v239 = sub_1000117C0(v89);
      v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      v231 = v91;
      v232 = v90;
      v92 = type metadata accessor for TitleHeaderView(0);
      v94 = static UICollectionReusableView.defaultReuseIdentifier.getter(v93);
      v229 = v95;
      v230 = v94;
      v96 = swift_allocObject(&unk_10073D040, 24, 7);
      swift_weakInit(v96 + 16);
      v98 = v236;
      v97 = v237;
      v99 = v238;
      (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v39, v238);
      v100 = *(unsigned __int8 *)(v98 + 80);
      v101 = (v100 + 24) & ~v100;
      v102 = (v234 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
      v103 = swift_allocObject(&unk_10073D1A8, v102 + 8, v100 | 7);
      *(_QWORD *)(v103 + 16) = v96;
      (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v103 + v101, v97, v99);
      v104 = v233;
      *(_QWORD *)(v103 + v102) = v233;
      swift_retain(v104);
      ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v232, v231, v230, v229, sub_1003D6AE4, v103, v92);
      (*(void (**)(_QWORD *, uint64_t))(v48 + 8))(v241, v47);
      return result;
    }
    v69 = sub_10000DF3C(&qword_10080CAB0);
    v70 = v239;
    v239[3] = v69;
    v70[4] = sub_100130F90(&qword_10080CAB8, &qword_10080CAB0);
    v241 = sub_1000117C0(v70);
    v239 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v232 = v71;
    v35 = type metadata accessor for InteractiveTitleHeaderView(0);
    v54 = static UICollectionReusableView.defaultReuseIdentifier.getter(v72);
    v56 = v73;
    v74 = swift_allocObject(&unk_10073D040, 24, 7);
    swift_weakInit(v74 + 16);
    v76 = v236;
    v75 = v237;
    v77 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v39, v238);
    v78 = *(unsigned __int8 *)(v76 + 80);
    v79 = (v78 + 24) & ~v78;
    v80 = (v234 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = swift_allocObject(&unk_10073D1D0, v80 + 8, v78 | 7);
    *(_QWORD *)(v64 + 16) = v74;
    (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v64 + v79, v75, v77);
    v81 = v233;
    *(_QWORD *)(v64 + v80) = v233;
    swift_retain(v81);
    v66 = sub_1003D6AF4;
    goto LABEL_21;
  }
  v23 = v21;
  v24 = a2;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, a1, a2, 0);
  v26 = swift_bridgeObjectRelease(v23);
  if ((v25 & 1) != 0)
    goto LABEL_15;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v27 == a1 && v28 == v24)
  {
    v33 = swift_bridgeObjectRelease(v24);
    v34 = v240;
    goto LABEL_27;
  }
  v30 = v28;
  v31 = v24;
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, a1, v24, 0);
  v33 = swift_bridgeObjectRelease(v30);
  v34 = v240;
  if ((v32 & 1) != 0)
  {
LABEL_27:
    ShelfLayoutContext.shelf.getter(v33);
    v105 = swift_getKeyPath(&unk_10068A068);
    ReadOnlyLens.subscript.getter(v105, v10);
    v106 = swift_release(v105);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v106);
    v107 = v243;
    swift_bridgeObjectRelease(v243);
    if (!v107)
    {
      v122 = sub_10000DF3C(&qword_1008030E0);
      v123 = v239;
      v239[3] = v122;
      v123[4] = sub_100130F90(&qword_1008030E8, &qword_1008030E0);
      sub_1000117C0(v123);
      v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
      v126 = v125;
      v35 = type metadata accessor for InfiniteScrollFooterView();
      v84 = static UICollectionReusableView.defaultReuseIdentifier.getter(v127);
      v85 = v128;
      v66 = sub_100254DF8;
      v82 = (_QWORD *)v124;
      v83 = v126;
      v86 = 0;
      goto LABEL_23;
    }
    v108 = sub_10000DF3C(&qword_10080CAA0);
    v109 = v239;
    v239[3] = v108;
    v109[4] = sub_100130F90(&qword_10080CAA8, &qword_10080CAA0);
    v241 = sub_1000117C0(v109);
    v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
    v239 = v111;
    v240 = v110;
    v35 = type metadata accessor for ShelfFooterView();
    v54 = static UICollectionReusableView.defaultReuseIdentifier.getter(v112);
    v56 = v113;
    v114 = swift_allocObject(&unk_10073D040, 24, 7);
    swift_weakInit(v114 + 16);
    v116 = v236;
    v115 = v237;
    v117 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v34, v238);
    v118 = *(unsigned __int8 *)(v116 + 80);
    v119 = (v118 + 24) & ~v118;
    v120 = (v234 + v119 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = swift_allocObject(&unk_10073D180, v120 + 8, v118 | 7);
    *(_QWORD *)(v64 + 16) = v114;
    (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v64 + v119, v115, v117);
    v121 = v233;
    *(_QWORD *)(v64 + v120) = v233;
    swift_retain(v121);
    v66 = sub_1003D6AD4;
    v82 = (_QWORD *)v240;
    v83 = v239;
LABEL_22:
    v84 = v54;
    v85 = v56;
    v86 = v64;
LABEL_23:
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v82, v83, v84, v85, v66, v86, v35);
    return result;
  }
  v35 = type metadata accessor for GradientSectionBackgroundView();
  v36 = static UICollectionReusableView.elementKind.getter();
  v38 = v37;
  if (v36 == a1 && v37 == v31)
  {
    swift_bridgeObjectRelease(v31);
LABEL_31:
    v130 = sub_10000DF3C(&qword_10080CA90);
    v131 = v239;
    v239[3] = v130;
    v131[4] = sub_100130F90(&qword_10080CA98, &qword_10080CA90);
    v241 = sub_1000117C0(v131);
    v239 = (_QWORD *)static UICollectionReusableView.elementKind.getter();
    v133 = v132;
    v135 = static UICollectionReusableView.defaultReuseIdentifier.getter(v134);
    v137 = v136;
    v139 = v236;
    v138 = v237;
    v140 = v34;
    v141 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v140, v238);
    v142 = *(unsigned __int8 *)(v139 + 80);
    v143 = (v142 + 16) & ~v142;
    v144 = (v234 + v143 + 7) & 0xFFFFFFFFFFFFFFF8;
    v145 = swift_allocObject(&unk_10073D158, v144 + 8, v142 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v139 + 32))(v145 + v143, v138, v141);
    v146 = v235;
    *(_QWORD *)(v145 + v144) = v235;
    swift_retain(v146);
    v66 = sub_1003D6A74;
LABEL_32:
    v82 = v239;
    v83 = v133;
    v84 = v135;
    v85 = v137;
    v86 = v145;
    goto LABEL_23;
  }
  v129 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, a1, v31, 0);
  swift_bridgeObjectRelease(v38);
  if ((v129 & 1) != 0)
    goto LABEL_31;
  v35 = type metadata accessor for MaterialGradientSectionBackgroundView();
  v147 = static UICollectionReusableView.elementKind.getter();
  v149 = v148;
  if (v147 == a1 && v148 == v31)
  {
    swift_bridgeObjectRelease(v31);
LABEL_37:
    v151 = sub_10000DF3C(&qword_10080CA80);
    v152 = v239;
    v239[3] = v151;
    v152[4] = sub_100130F90(&qword_10080CA88, &qword_10080CA80);
    v241 = sub_1000117C0(v152);
    v239 = (_QWORD *)static UICollectionReusableView.elementKind.getter();
    v133 = v153;
    v135 = static UICollectionReusableView.defaultReuseIdentifier.getter(v154);
    v137 = v155;
    v157 = v236;
    v156 = v237;
    v158 = v34;
    v159 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v158, v238);
    v160 = *(unsigned __int8 *)(v157 + 80);
    v161 = (v160 + 16) & ~v160;
    v162 = (v234 + v161 + 7) & 0xFFFFFFFFFFFFFFF8;
    v145 = swift_allocObject(&unk_10073D130, v162 + 8, v160 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v157 + 32))(v145 + v161, v156, v159);
    v163 = v235;
    *(_QWORD *)(v145 + v162) = v235;
    swift_retain(v163);
    v66 = sub_1003D69F0;
    goto LABEL_32;
  }
  v150 = _stringCompareWithSmolCheck(_:_:expecting:)(v147, v148, a1, v31, 0);
  swift_bridgeObjectRelease(v149);
  if ((v150 & 1) != 0)
    goto LABEL_37;
  v35 = type metadata accessor for ArtworkSectionBackgroundView();
  v164 = static UICollectionReusableView.elementKind.getter();
  v166 = v165;
  if (v164 == a1 && v165 == v31)
  {
    swift_bridgeObjectRelease(v31);
LABEL_42:
    v168 = sub_10000DF3C(&qword_10080CA70);
    v169 = v239;
    v239[3] = v168;
    v169[4] = sub_100130F90(&qword_10080CA78, &qword_10080CA70);
    v241 = sub_1000117C0(v169);
    v239 = (_QWORD *)static UICollectionReusableView.elementKind.getter();
    v133 = v170;
    v135 = static UICollectionReusableView.defaultReuseIdentifier.getter(v171);
    v137 = v172;
    v174 = v236;
    v173 = v237;
    v175 = v34;
    v176 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v175, v238);
    v177 = *(unsigned __int8 *)(v174 + 80);
    v178 = (v177 + 16) & ~v177;
    v179 = (v234 + v178 + 7) & 0xFFFFFFFFFFFFFFF8;
    v145 = swift_allocObject(&unk_10073D108, v179 + 8, v177 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v174 + 32))(v145 + v178, v173, v176);
    v180 = v235;
    *(_QWORD *)(v145 + v179) = v235;
    swift_retain(v180);
    v66 = sub_1003D6994;
    goto LABEL_32;
  }
  v167 = _stringCompareWithSmolCheck(_:_:expecting:)(v164, v165, a1, v31, 0);
  swift_bridgeObjectRelease(v166);
  if ((v167 & 1) != 0)
    goto LABEL_42;
  v35 = type metadata accessor for InteractiveSectionBackgroundView(0);
  v181 = static UICollectionReusableView.elementKind.getter();
  v183 = v182;
  if (v181 == a1 && v182 == v31)
  {
    swift_bridgeObjectRelease(v31);
LABEL_47:
    v185 = sub_10000DF3C(&qword_10080CA60);
    v186 = v239;
    v239[3] = v185;
    v186[4] = sub_100130F90(&qword_10080CA68, &qword_10080CA60);
    v241 = sub_1000117C0(v186);
    v239 = (_QWORD *)static UICollectionReusableView.elementKind.getter();
    v188 = v187;
    v54 = static UICollectionReusableView.defaultReuseIdentifier.getter(v189);
    v56 = v190;
    v191 = swift_allocObject(&unk_10073D040, 24, 7);
    swift_weakInit(v191 + 16);
    v193 = v236;
    v192 = v237;
    v194 = v34;
    v195 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v194, v238);
    v196 = *(unsigned __int8 *)(v193 + 80);
    v197 = (v196 + 24) & ~v196;
    v64 = swift_allocObject(&unk_10073D0E0, v197 + v234, v196 | 7);
    *(_QWORD *)(v64 + 16) = v191;
    (*(void (**)(uint64_t, char *, uint64_t))(v193 + 32))(v64 + v197, v192, v195);
    v66 = sub_1003D6928;
    v82 = v239;
    v83 = v188;
    goto LABEL_22;
  }
  v184 = _stringCompareWithSmolCheck(_:_:expecting:)(v181, v182, a1, v31, 0);
  swift_bridgeObjectRelease(v183);
  if ((v184 & 1) != 0)
    goto LABEL_47;
  v35 = type metadata accessor for EditorsChoiceBackgroundView();
  v198 = static UICollectionReusableView.elementKind.getter();
  v200 = v199;
  if (v198 == a1 && v199 == v31)
  {
    swift_bridgeObjectRelease(v31);
LABEL_52:
    v203 = sub_10000DF3C(&qword_10080CA50);
    v204 = v239;
    v239[3] = v203;
    v204[4] = sub_100130F90(&qword_10080CA58, &qword_10080CA50);
    v241 = sub_1000117C0(v204);
    v239 = (_QWORD *)static UICollectionReusableView.elementKind.getter();
    v133 = v205;
    v135 = static UICollectionReusableView.defaultReuseIdentifier.getter(v206);
    v137 = v207;
    v209 = v236;
    v208 = v237;
    v210 = v34;
    v211 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v237, v210, v238);
    v212 = *(unsigned __int8 *)(v209 + 80);
    v213 = (v212 + 16) & ~v212;
    v214 = (v234 + v213 + 7) & 0xFFFFFFFFFFFFFFF8;
    v145 = swift_allocObject(&unk_10073D0B8, v214 + 8, v212 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v209 + 32))(v145 + v213, v208, v211);
    v215 = v235;
    *(_QWORD *)(v145 + v214) = v235;
    swift_retain(v215);
    v66 = sub_1003D68F8;
    goto LABEL_32;
  }
  v201 = _stringCompareWithSmolCheck(_:_:expecting:)(v198, v199, a1, v31, 0);
  v202 = swift_bridgeObjectRelease(v200);
  if ((v201 & 1) != 0)
    goto LABEL_52;
  type metadata accessor for SpacerSupplementary(0, v202);
  v216 = static SpacerSupplementary.topElementKind.getter();
  v218 = v217;
  if (v216 == a1 && v217 == v31)
    goto LABEL_55;
  v219 = _stringCompareWithSmolCheck(_:_:expecting:)(v216, v217, a1, v31, 0);
  v220 = swift_bridgeObjectRelease(v218);
  if ((v219 & 1) != 0)
    goto LABEL_57;
  v223 = static SpacerSupplementary.bottomElementKind.getter(v220);
  v225 = v224;
  if (v223 == a1 && v224 == v31)
  {
LABEL_55:
    swift_bridgeObjectRelease(v31);
LABEL_57:
    v221 = sub_10000DF3C(&qword_1007FC198);
    v222 = v239;
    v239[3] = v221;
    v222[4] = sub_100130F90(&qword_1007FC1A0, &qword_1007FC198);
    sub_1000117C0(v222);
    static SpacerSupplementary.makeSpacerRegistration(elementKind:)(a1, v31);
    return result;
  }
  v226 = _stringCompareWithSmolCheck(_:_:expecting:)(v223, v224, a1, v31, 0);
  swift_bridgeObjectRelease(v225);
  if ((v226 & 1) != 0)
    goto LABEL_57;
  v227 = v239;
  v239[4] = 0;
  result = 0.0;
  *v227 = 0u;
  v227[1] = 0u;
  return result;
}

double *sub_1003D3498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  __n128 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v5 = type metadata accessor for ShelfBackground(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v11);
  KeyPath = swift_getKeyPath(&unk_10068A098);
  ReadOnlyLens.subscript.getter(KeyPath, v9);
  v15 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  LODWORD(v10) = enum case for ShelfBackground.interactive(_:);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v16 != (_DWORD)v10)
    return _swiftEmptyArrayStorage;
  v17 = type metadata accessor for ObjectGraph(0);
  v18 = swift_dynamicCastClass(a3, v17);
  if (!v18)
  {
    a3 = *(_QWORD *)(v26[1] + 16);
    v18 = a3;
  }
  swift_retain(a3);
  v19 = type metadata accessor for InteractiveSectionBackgroundScrollObserverStore();
  inject<A, B>(_:from:)(&v28, v19, v18, v19, v17);
  v20 = v28;
  v21 = sub_1002A86C0(a1, v27, v18);
  v22 = sub_10000DF3C(&qword_100801918);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10066FBA0;
  v24 = sub_10000E99C(&qword_10080CA48, type metadata accessor for InteractiveSectionBackgroundScrollObserver, (uint64_t)&unk_1006715F0);
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)(v23 + 40) = v24;
  swift_release(v18);
  swift_release(v20);
  return (double *)v23;
}

uint64_t sub_1003D36A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, __n128);
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __n128 v52;
  char *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  __n128 v59;
  char *v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v66;
  double v67;
  double v68;
  double v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  __n128 v73;
  void (*v74)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v75;
  uint64_t v76;
  __n128 v77;
  __n128 v78;
  _OWORD *v79;
  char *v80;
  double (*v81)(char *, uint64_t, __n128);
  uint64_t v82;
  __n128 v83;
  __n128 v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  double left;
  double bottom;
  double right;
  void *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD *v126;
  uint64_t v127;
  void (*v128)(_QWORD, _QWORD, _QWORD, _QWORD);

  v114 = a2;
  v3 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v3);
  v111 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageGrid(0);
  v119 = *(_QWORD *)(v5 - 8);
  v120 = (int *)v5;
  __chkstk_darwin(v5);
  v118 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v121 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v109 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v116 = (char *)&v108 - v14;
  __chkstk_darwin(v15);
  v115 = (char *)&v108 - v16;
  __chkstk_darwin(v17);
  v113 = (char *)&v108 - v18;
  __chkstk_darwin(v19);
  v112 = (char *)&v108 - v20;
  __chkstk_darwin(v21);
  v117 = (char *)&v108 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v108 - v24;
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v108 - v28;
  v30 = a1;
  ShelfLayoutContext.shelf.getter(v27);
  KeyPath = swift_getKeyPath(&unk_10068A0F8);
  ReadOnlyLens.subscript.getter(KeyPath, v10);
  v32 = swift_release(KeyPath);
  v33 = v10;
  v34 = v10;
  v35 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v35(v29, v34, v32);
  v36 = (unint64_t)v128;
  if (v128)
  {
    v37 = v127;
    v38 = swift_bridgeObjectRelease(v128);
    if ((v36 & 0x2000000000000000) != 0)
      v39 = HIBYTE(v36) & 0xF;
    else
      v39 = v37 & 0xFFFFFFFFFFFFLL;
    v40 = v121;
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 16))(v121, v30, v7, v38);
    v42 = v30;
    v43 = v7;
    if (v39)
    {
      v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v40, v7);
      v45 = v33;
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v121, v30, v7);
    v42 = v30;
    v43 = v7;
  }
  v46 = v43;
  ShelfLayoutContext.shelf.getter(v41);
  v47 = swift_getKeyPath(&unk_10068A0C8);
  v45 = v33;
  ReadOnlyLens.subscript.getter(v47, v33);
  v48 = swift_release(v47);
  v49 = ((uint64_t (*)(char *, uint64_t, __n128))v35)(v25, v33, v48);
  v50 = v127;
  if (!v127)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v121, v46);
    return 0;
  }
  v51 = ShelfHeader.hasTrailingArtwork.getter(v49);
  v52 = swift_release(v50);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v121, v46, v52);
  if ((v51 & 1) == 0)
    return 0;
LABEL_10:
  v53 = v118;
  v54 = ShelfLayoutContext.supplementaryPageGrid.getter(v44);
  v55 = static CGFloat.allColumns.getter(v54);
  v56 = PageGrid.componentMeasuringSize(spanning:)(v55);
  v58 = v57;
  v59.n128_f64[0] = (*(double (**)(char *, int *))(v119 + 8))(v53, v120);
  v60 = v117;
  ShelfLayoutContext.shelf.getter(v59);
  v61 = swift_getKeyPath(&unk_10068A0C8);
  ReadOnlyLens.subscript.getter(v61, v45);
  v62 = swift_release(v61);
  v63 = ((uint64_t (*)(char *, uint64_t, __n128))v35)(v60, v45, v62);
  v64 = v127;
  if (!v127)
  {
LABEL_16:
    v66.n128_f64[0] = sub_1003D5AD0(v56, v58);
    v67 = v66.n128_f64[0];
    v69 = v68;
    v70 = v112;
    ShelfLayoutContext.shelf.getter(v66);
    v71 = swift_getKeyPath(&unk_10068A1B8);
    ReadOnlyLens.subscript.getter(v71, v45);
    v72 = swift_release(v71);
    v73.n128_f64[0] = ((double (*)(char *, uint64_t, __n128))v35)(v70, v45, v72);
    v74 = v128;
    v120 = (int *)v127;
    v75 = v113;
    ShelfLayoutContext.shelf.getter(v73);
    v76 = swift_getKeyPath(&unk_10068A188);
    ReadOnlyLens.subscript.getter(v76, v45);
    v77 = swift_release(v76);
    v78.n128_f64[0] = ((double (*)(char *, uint64_t, __n128))v35)(v75, v45, v77);
    v79 = v126;
    v80 = v115;
    ShelfLayoutContext.shelf.getter(v78);
    v81 = (double (*)(char *, uint64_t, __n128))v35;
    v82 = swift_getKeyPath(&unk_10068A0F8);
    ReadOnlyLens.subscript.getter(v82, v45);
    v83 = swift_release(v82);
    v84.n128_f64[0] = v81(v80, v45, v83);
    v85 = v125;
    v121 = v124;
    v86 = v116;
    ShelfLayoutContext.shelf.getter(v84);
    v87 = swift_getKeyPath(&unk_10068A1E8);
    ReadOnlyLens.subscript.getter(v87, v45);
    v88 = swift_release(v87);
    v89 = ((uint64_t (*)(char *, uint64_t, __n128))v81)(v86, v45, v88);
    v90 = v123;
    v91 = (void *)ShelfLayoutContext.traitCollection.getter(v89);
    v92 = v42;
    v93 = UITraitCollection.prefersAccessibilityLayouts.getter(v91);

    if ((v93 & 1) != 0)
    {
      v95 = 0;
    }
    else
    {
      v96 = v109;
      ShelfLayoutContext.shelf.getter(v94);
      v97 = swift_getKeyPath(&unk_10068A1E8);
      ReadOnlyLens.subscript.getter(v97, v45);
      v98 = swift_release(v97);
      v81(v96, v45, v98);
      v99 = v122;
      swift_release(v122);
      if (v99)
        v95 = 1;
      else
        v95 = 2;
    }
    v100 = (uint64_t)v111;
    v101 = v110;
    v102 = v120;
    type metadata accessor for TitleHeaderView(0);
    v103 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v101 + 192))(v92);
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v107 = (void *)ShelfLayoutContext.traitEnvironment.getter(v103);
    swift_getObjectType();
    sub_1000ED634(v102, v74, v79, v121, v85, v90, 0, 0, v56, v58, v67, v69, UIEdgeInsetsZero.top, left, bottom, right, 0, 0, v95,
      v100,
      1,
      v107);
    swift_unknownObjectRelease(v107);
    swift_release(v90);
    swift_bridgeObjectRelease(v85);
    swift_release(v79);
    swift_bridgeObjectRelease(v74);
    sub_10002F0D4(v100, type metadata accessor for TitleHeaderView.Style);
    return *(_QWORD *)&v56;
  }
  if ((ShelfHeader.shouldUseShelfHeader.getter(v63) & 1) == 0)
  {
    swift_release(v64);
    goto LABEL_16;
  }
  type metadata accessor for ShelfHeaderView(0);
  v56 = sub_10006859C(v64, v42, v56, v58);
  swift_release(v64);
  return *(_QWORD *)&v56;
}

uint64_t sub_1003D3DEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  __n128 v46;
  double v47;
  double v48;
  double v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSString v67;
  __n128 v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  double v74;
  double v75;
  double v76;
  char *v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (**v92)();
  uint64_t v93;
  uint64_t (*v94)();
  uint64_t (*v95)();
  __n128 v96;
  uint64_t v97;
  __n128 v98;
  char *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  unint64_t v105;
  uint64_t v106;
  NSString v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  double (*v123)(char *, uint64_t);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  __n128 v130;
  char *v131;
  uint64_t v132;
  char *v133;
  __n128 v134;
  void (*v135)(char *, uint64_t, __n128);
  __n128 v136;
  uint64_t result;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  _QWORD v169[4];

  v6 = type metadata accessor for ShelfBackground(0);
  v161 = *(_QWORD *)(v6 - 8);
  v162 = v6;
  __chkstk_darwin(v6);
  v160 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for Shelf.ContentType(0);
  v154 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v151 = (char *)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for AutomationSemantics(0);
  v155 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v152 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v157 = (char *)&v138 - v11;
  __chkstk_darwin(v12);
  v158 = (char *)&v138 - v13;
  v147 = type metadata accessor for ShelfLayoutContext(0);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v144 = v14;
  v145 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v15);
  v139 = (uint64_t)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for TitleHeaderView.Style(0);
  v17 = __chkstk_darwin(v138);
  v163 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for Artwork.Crop(0, v17);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v153 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v150 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v138 - v24;
  v165 = a2;
  ShelfLayoutContext.shelf.getter(v23);
  v26 = type metadata accessor for ArtworkLoader(0);
  v149 = a3;
  v27 = *(_QWORD *)(a3 + qword_100854050);
  if (v27)
  {
    KeyPath = swift_getKeyPath(&unk_10068A188);
    v164 = v27;
    swift_retain(v27);
    ReadOnlyLens.subscript.getter(KeyPath, v20);
    swift_release(KeyPath);
    v29 = v166;
    v30 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork;
    v31 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork);
    swift_retain(v31);
    sub_1000E6A44(v29);
    v32 = *(_QWORD *)((char *)a1 + v30);
    *(_QWORD *)((char *)a1 + v30) = v29;
    swift_retain(v29);
    swift_release(v32);
    sub_1000E6A58(v31, v33);
    swift_release(v31);
    swift_release(v29);
    v34 = swift_getKeyPath(&unk_10068A1B8);
    v35 = v20;
    v36 = v25;
    ReadOnlyLens.subscript.getter(v34, v20);
    swift_release(v34);
    v37 = v166;
    v38 = v167;
    v39 = (_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText);
    v41 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText);
    v40 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8);
    swift_bridgeObjectRetain(v40);
    sub_1000E6570(v37, v38);
    v42 = v39[1];
    *v39 = v37;
    v39[1] = v38;
    swift_bridgeObjectRelease(v42);
    sub_1000E65F0(v41, v40);
    swift_bridgeObjectRelease(v40);
    v43 = *(_QWORD *)((char *)a1 + v30);
    if (v43)
    {
      v44 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView);
      if (v44)
      {
        swift_retain(*(_QWORD *)((char *)a1 + v30));
        v45 = v44;
        v46.n128_f64[0] = Artwork.size.getter(v45);
        v47 = v46.n128_f64[0];
        v49 = v48;
        v50 = v140;
        v51 = Artwork.crop.getter(v46);
        v52 = Artwork.Crop.preferredContentMode.getter(v51);
        (*(void (**)(char *, uint64_t))(v141 + 8))(v50, v142);
        v53 = Artwork.config(_:mode:prefersLayeredImage:)(v52, 0, v47, v49);
        v54 = type metadata accessor for ArtworkView(0);
        v55 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v53, 2, 1, v45, v54, v55);
        swift_release(v43);

        swift_release(v53);
      }
    }
    v56 = swift_getKeyPath(&unk_10068A1E8);
    v57 = v36;
    ReadOnlyLens.subscript.getter(v56, v35);
    swift_release(v56);
    v58 = v166;
    v59 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork;
    v60 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork);
    swift_retain(v60);
    sub_1000E6BC4(v58);
    v61 = *(_QWORD *)((char *)a1 + v59);
    *(_QWORD *)((char *)a1 + v59) = v58;
    swift_retain(v58);
    swift_release(v61);
    sub_1000E6CC8(v60, v62);
    swift_release(v60);
    swift_release(v58);
    v63 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel);
    v64 = swift_getKeyPath(&unk_10068A0F8);
    ReadOnlyLens.subscript.getter(v64, v35);
    v65 = swift_release(v64).n128_u64[0];
    v66 = v167;
    if (v167)
    {
      v67 = String._bridgeToObjectiveC()();
      v65 = swift_bridgeObjectRelease(v66).n128_u64[0];
    }
    else
    {
      v67 = 0;
    }
    v143 = v35;
    objc_msgSend(v63, "setText:", v67, *(double *)&v65);

    v69 = *(_QWORD *)((char *)a1 + v59);
    if (v69)
    {
      v70 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView);
      if (v70)
      {
        v71 = (uint64_t)v163;
        (*(void (**)(void))((swift_isaMask & *a1) + 0x1C0))();
        v72 = v139;
        sub_10034CA4C(v71 + *(int *)(v138 + 20), v139);
        swift_retain(v69);
        v73 = v70;
        sub_10002F0D4(v71, type metadata accessor for TitleHeaderView.Style);
        v74 = sub_1004EFDE8(v69, v72, (uint64_t)a1);
        v76 = v75;
        sub_10002F0D4(v72, type metadata accessor for TitleHeaderView.TextConfiguration);
        v77 = v140;
        v79 = Artwork.crop.getter(v78);
        v80 = Artwork.Crop.preferredContentMode.getter(v79);
        (*(void (**)(char *, uint64_t))(v141 + 8))(v77, v142);
        v81 = Artwork.config(_:mode:prefersLayeredImage:)(v80, 0, v74, v76);
        v82 = type metadata accessor for ArtworkView(0);
        v83 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v81, 2, 1, v73, v82, v83);
        swift_release(v69);

        v68 = swift_release(v81);
      }
    }
    v84 = v146;
    v85 = v145;
    v86 = v165;
    v87 = v147;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v146 + 16))(v145, v165, v147, v68);
    v88 = *(unsigned __int8 *)(v84 + 80);
    v89 = (v88 + 24) & ~v88;
    v90 = swift_allocObject(&unk_10073D090, v89 + v144, v88 | 7);
    v91 = v148;
    *(_QWORD *)(v90 + 16) = v148;
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v90 + v89, v85, v87);
    v92 = (uint64_t (**)())((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines);
    v93 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines + 8);
    *v92 = sub_1003D68A8;
    v92[1] = (uint64_t (*)())v90;
    swift_retain(v91);
    swift_retain(v90);
    swift_release(v93);
    v95 = *v92;
    v94 = v92[1];
    v96 = swift_retain(v94);
    v97 = ((uint64_t (*)(_QWORD *, __n128))v95)(a1, v96);
    objc_msgSend(v63, "setNumberOfLines:", v97, swift_release(v94).n128_f64[0]);
    v98 = swift_release(v90);
    v99 = v163;
    v100 = v86;
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v91 + 192))(v86, v98);
    (*(void (**)(char *))((swift_isaMask & *a1) + 0x1C8))(v99);
    v101 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);
    v102 = v143;
    if (v101)
    {
      v103 = swift_getKeyPath(&unk_10068A278);
      v104 = v101;
      ReadOnlyLens.subscript.getter(v103, v102);
      v105 = swift_release(v103).n128_u64[0];
      v106 = v167;
      if (v167)
      {
        v107 = String._bridgeToObjectiveC()();
        v105 = swift_bridgeObjectRelease(v106).n128_u64[0];
      }
      else
      {
        v107 = 0;
      }
      objc_msgSend(v104, "setText:", v107, *(double *)&v105);

    }
    sub_1003D4A04(a1, v100, v149);
    v166 = ShelfLayoutContext.index.getter(v108);
    v109 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v169[3] = &type metadata for String;
    v169[0] = v109;
    v169[1] = v110;
    v111 = ShelfLayoutContext.id.getter(&v166);
    v112 = AnyHashable.description.getter(v111);
    v114 = v113;
    sub_100019370((uint64_t)&v166);
    v168 = &type metadata for String;
    v166 = v112;
    v167 = v114;
    v115 = v152;
    static AutomationSemantics.shelf(_:id:parentId:)(0x726564616568, 0xE600000000000000, v169, &v166);
    sub_100011088((uint64_t)&v166, &qword_1007F6E90);
    sub_100011088((uint64_t)v169, &qword_1007F6E90);
    v116 = swift_getKeyPath(&unk_10068A218);
    v117 = v151;
    ReadOnlyLens.subscript.getter(v116, v102);
    v118 = swift_release(v116);
    v119 = Shelf.ContentType.rawValue.getter(v118);
    v121 = v120;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v117, v156);
    v168 = &type metadata for String;
    v166 = v119;
    v167 = v121;
    v122 = v157;
    AutomationSemantics.attribute(key:value:)(0x646E694B6D657469, 0xE800000000000000, &v166);
    v123 = *(double (**)(char *, uint64_t))(v155 + 8);
    v124 = v115;
    v125 = v57;
    v126 = v159;
    v123(v124, v159);
    sub_100011088((uint64_t)&v166, &qword_1007F6E90);
    v127 = swift_getKeyPath(&unk_10068A248);
    ReadOnlyLens.subscript.getter(v127, v102);
    swift_release(v127);
    v128 = *(_QWORD *)(v169[0] + 16);
    swift_bridgeObjectRelease(v169[0]);
    v168 = &type metadata for Int;
    v166 = v128;
    v129 = v158;
    AutomationSemantics.attribute(key:value:)(0x6E756F436D657469, 0xE900000000000074, &v166);
    v123(v122, v126);
    sub_100011088((uint64_t)&v166, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v129);
    v130.n128_f64[0] = v123(v129, v126);
    v131 = v150;
    ShelfLayoutContext.shelf.getter(v130);
    v132 = swift_getKeyPath(&unk_10068A098);
    v133 = v160;
    ReadOnlyLens.subscript.getter(v132, v102);
    v134 = swift_release(v132);
    v135 = *(void (**)(char *, uint64_t, __n128))(v153 + 8);
    v135(v131, v102, v134);
    objc_msgSend(a1, "setOverrideUserInterfaceStyle:", sub_10028B9EC());
    (*(void (**)(char *, uint64_t))(v161 + 8))(v133, v162);
    objc_msgSend(a1, "setNeedsLayout");
    v136 = swift_release(v164);
    return ((uint64_t (*)(char *, uint64_t, __n128))v135)(v125, v102, v136);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v26);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003D4A04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v11);
  KeyPath = swift_getKeyPath(&unk_10068A128);
  ReadOnlyLens.subscript.getter(KeyPath, v9);
  swift_release(KeyPath);
  v15 = v28;
  if (v28)
  {
    sub_1003D4C74(a1, v28, a2, a3);
    v16 = swift_release(v15);
  }
  else
  {
    v17 = swift_getKeyPath(&unk_10068A158);
    ReadOnlyLens.subscript.getter(v17, v9);
    swift_release(v17);
    v18 = v28;
    if (v28)
    {
      *(_QWORD *)v8 = v28;
      *(_OWORD *)(v8 + 8) = xmmword_100689FA0;
      v19 = type metadata accessor for Accessory(0);
      swift_storeEnumTagMultiPayload(v8, v19, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
      v20 = *(void (**)(char *, uint64_t, __n128))((swift_isaMask & *a1) + 0x268);
      v21 = swift_retain(v18);
      v20(v8, a3, v21);
      swift_release(v18);
      sub_100011088((uint64_t)v8, &qword_1007FAFB0);
    }
    else
    {
      v22 = type metadata accessor for Accessory(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
      (*(void (**)(char *, uint64_t))((swift_isaMask & *a1) + 0x268))(v8, a3);
      sub_100011088((uint64_t)v8, &qword_1007FAFB0);
      v23 = (_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
      v24 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
      v25 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction + 8);
      *v23 = 0;
      v23[1] = 0;
      sub_100019310(v24, v25);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v16);
}

uint64_t sub_1003D4C74(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  _QWORD v38[4];

  v7 = type metadata accessor for AutomationSemantics(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  __chkstk_darwin(v7);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShelfLayoutContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003D4F48((uint64_t)v14);
  v15 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t))((swift_isaMask & *a1) + 0x268))(v14, a4);
  sub_100011088((uint64_t)v14, &qword_1007FAFB0);
  v16 = swift_allocObject(&unk_10073D040, 24, 7);
  swift_weakInit(v16 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = swift_allocObject(&unk_10073D068, v18 + v11, v17 | 7);
  *(_QWORD *)(v19 + 16) = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v20 = (void (**)(uint64_t))((char *)a1
                                      + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
  v21 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
  v22 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction + 8);
  *v20 = sub_1003D67F4;
  v20[1] = (void (*)(uint64_t))v19;
  result = sub_100019310(v21, v22);
  v24 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView);
  if (v24)
  {
    v25 = v24;
    v27 = ShelfLayoutContext.index.getter(v26);
    v38[3] = &type metadata for Int;
    v38[0] = v27;
    v28 = ShelfLayoutContext.id.getter(v37);
    v29 = AnyHashable.description.getter(v28);
    v31 = v30;
    sub_100019370((uint64_t)v37);
    v37[3] = &type metadata for String;
    v37[0] = v29;
    v37[1] = v31;
    v32 = v34;
    static AutomationSemantics.shelf(_:id:parentId:)(0x75426C6C41656573, 0xEC0000006E6F7474, v38, v37);
    sub_100011088((uint64_t)v37, &qword_1007F6E90);
    sub_100011088((uint64_t)v38, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v32);

    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v32, v36);
  }
  return result;
}

uint64_t sub_1003D4F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t KeyPath;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Shelf.PresentationHints(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v28 - v12;
  Action.title.getter(v11);
  v28 = v15;
  v29 = v14;
  v16 = ShelfLayoutContext.shelfPresentationHints.getter(v14);
  static Shelf.PresentationHints.accessoriesFollowBackground.getter(v16);
  v17 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v18 = dispatch thunk of SetAlgebra.isSuperset(of:)(v9, v6, v17);
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, v6);
  v19(v13, v6);
  v21 = 0;
  if ((v18 & 1) != 0)
  {
    v22 = sub_1000117FC();
    v21 = static UIColor.primaryText.getter(v22);
  }
  ShelfLayoutContext.shelf.getter(v20);
  KeyPath = swift_getKeyPath(&unk_10068A0F8);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v24 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v24);
  v25 = v28;
  *(_QWORD *)a1 = v29;
  *(_QWORD *)(a1 + 8) = v25;
  *(_QWORD *)(a1 + 16) = v21;
  *(_OWORD *)(a1 + 24) = v30;
  v26 = type metadata accessor for Accessory(0);
  return swift_storeEnumTagMultiPayload(a1, v26, 0);
}

uint64_t sub_1003D5120@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Shelf.footerTitle.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_1003D514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  __n128 v15;
  uint64_t v16;
  uint64_t KeyPath;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE v26[24];

  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a5 += 16;
  swift_beginAccess(a5, v26, 0, 0);
  Strong = swift_weakLoadStrong(a5);
  if (Strong)
  {
    v16 = Strong;
    ShelfLayoutContext.shelf.getter(v15);
    KeyPath = swift_getKeyPath(&unk_10068A0C8);
    ReadOnlyLens.subscript.getter(KeyPath, v10);
    v18 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v18);
    v19 = v25;
    if (v25)
    {
      v20 = swift_unknownObjectWeakLoadStrong(v16 + 24);
      v21 = *(_QWORD *)(v16 + 32);
      v22 = type metadata accessor for ObjectGraph(0);
      v23 = swift_dynamicCastClassUnconditional(a7, v22, 0, 0, 0);
      sub_1000670DC(v19, v20, v21, a6, v23);
      swift_release(v16);
      swift_release(v19);
      v15.n128_u64[0] = swift_unknownObjectRelease(v20).n128_u64[0];
    }
    else
    {
      v15.n128_u64[0] = swift_release(v16).n128_u64[0];
    }
  }
  return v15.n128_f64[0];
}

double sub_1003D52BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v10 = a5 + 16;
  swift_beginAccess(a5 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    v13 = Strong;
    v14 = type metadata accessor for ObjectGraph(0);
    v15 = swift_dynamicCastClass(a7, v14);
    if (!v15)
    {
      a7 = *(_QWORD *)(v13 + 16);
      v15 = a7;
    }
    swift_retain(a7);
    sub_1003D3DEC(a1, a6, v15);
    swift_release(v13);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

double sub_1003D5370(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  _BYTE v12[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  if (Strong)
  {
    v11 = Strong;
    sub_1003D7120(a1, a6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1003D53E0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  double result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t KeyPath;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char v34[24];
  _QWORD v35[5];
  char v36[24];

  v11 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a5 += 16;
  swift_beginAccess(a5, v36, 0, 0);
  Strong = swift_weakLoadStrong(a5);
  if (Strong)
  {
    v17 = Strong;
    v18 = *(_QWORD **)&a1[OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_titleView];
    v19 = type metadata accessor for ObjectGraph(0);
    v20 = swift_dynamicCastClass(a7, v19);
    v21 = a7;
    if (!v20)
    {
      v21 = *(_QWORD *)(v17 + 16);
      v20 = v21;
    }
    swift_retain(v21);
    sub_1003D3DEC(v18, a6, v20);
    swift_release(v20);
    v22 = type metadata accessor for InteractiveSectionBackgroundScrollObserverStore();
    v23 = type metadata accessor for BaseObjectGraph(0);
    inject<A, B>(_:from:)(v35, v22, a7, v22, v23);
    v24 = v35[0];
    ShelfLayoutContext.shelf.getter(v25);
    KeyPath = swift_getKeyPath(&unk_10068A2A8);
    ReadOnlyLens.subscript.getter(KeyPath, v11);
    v27 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v27);
    swift_beginAccess(v24 + 16, v34, 0, 0);
    v28 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v28 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v24 + 16));
      v29 = sub_10036C148((uint64_t)v35);
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
        swift_retain(v31);
        swift_bridgeObjectRelease(v28);
        sub_100019370((uint64_t)v35);
        v35[3] = type metadata accessor for InteractiveTitleHeaderView(0);
        v35[4] = &off_100728710;
        v35[0] = a1;
        v32 = a1;
        sub_10005BB60((uint64_t)v35);
        swift_release(v17);
        swift_release(v24);
        swift_release(v31);
        sub_100011088((uint64_t)v35, (uint64_t *)&unk_1007FFFB0);
        return result;
      }
      swift_bridgeObjectRelease(v28);
    }
    sub_100019370((uint64_t)v35);
    swift_release(v17);
    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  return result;
}

double sub_1003D5628(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t KeyPath;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  _QWORD v26[5];
  _BYTE v27[24];
  _QWORD v28[5];
  _BYTE v29[24];

  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v29, 0, 0);
  Strong = swift_weakLoadStrong(a5);
  if (Strong)
  {
    v13 = Strong;
    v14 = type metadata accessor for InteractiveSectionBackgroundScrollObserverStore();
    v15 = *(_QWORD *)(v13 + 16);
    v16 = type metadata accessor for ObjectGraph(0);
    swift_retain(v15);
    inject<A, B>(_:from:)(v28, v14, v15, v14, v16);
    v17 = swift_release(v15);
    v18 = v28[0];
    ShelfLayoutContext.shelf.getter(v17);
    KeyPath = swift_getKeyPath(&unk_10068A2A8);
    ReadOnlyLens.subscript.getter(KeyPath, v7);
    v20 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v20);
    swift_beginAccess(v18 + 16, v27, 0, 0);
    v21 = *(_QWORD *)(v18 + 16);
    if (*(_QWORD *)(v21 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v18 + 16));
      v22 = sub_10036C148((uint64_t)v28);
      if ((v23 & 1) != 0)
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_retain(v24);
        swift_bridgeObjectRelease(v21);
        sub_100019370((uint64_t)v28);
        v26[3] = type metadata accessor for InteractiveSectionBackgroundView(0);
        v26[4] = &off_10073B9C0;
        v26[0] = a1;
        v25 = a1;
        sub_10005BB60((uint64_t)v26);
        swift_release(v13);
        swift_release(v18);
        swift_release(v24);
        sub_100011088((uint64_t)v26, (uint64_t *)&unk_1007FFFB0);
        return result;
      }
      swift_bridgeObjectRelease(v21);
    }
    sub_100019370((uint64_t)v28);
    swift_release(v13);
    *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003D5828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char v6;
  __n128 v7;
  uint64_t KeyPath;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)ShelfLayoutContext.traitCollection.getter(v4);
  v6 = UITraitCollection.prefersAccessibilityLayouts.getter(v5);

  if ((v6 & 1) != 0)
    return 0;
  ShelfLayoutContext.shelf.getter(v7);
  KeyPath = swift_getKeyPath(&unk_10068A1E8);
  ReadOnlyLens.subscript.getter(KeyPath, v0);
  v10 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v10);
  v11 = v13;
  swift_release(v13);
  if (v11)
    return 1;
  else
    return 2;
}

void sub_1003D5918(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  __n128 v15;
  __n128 v16;
  _BYTE v18[24];

  v6 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    v12 = swift_unknownObjectWeakLoadStrong(Strong + 24);
    v13 = *(_QWORD *)(v11 + 32);
    swift_release(v11);
    if (v12)
    {
      ObjectType = swift_getObjectType();
      ShelfLayoutContext.shelf.getter(v15);
      a4(v9, ObjectType, v13);
      v16 = swift_unknownObjectRelease(v12);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
    }
  }
}

uint64_t type metadata accessor for GenericPageShelfSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension37GenericPageShelfSupplementaryProvider);
}

uint64_t sub_1003D5A3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1003D5A48()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1003D5A54()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_1003D5A60()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1003D5A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = type metadata accessor for GenericPageShelfSupplementaryProvider();
  v9 = swift_allocObject(v8, 40, 7);
  *(_QWORD *)(v9 + 32) = 0;
  swift_unknownObjectWeakInit(v9 + 24);
  *(_QWORD *)(v9 + 32) = a5;
  swift_unknownObjectWeakAssign(v10, a1);
  *(_QWORD *)(v9 + 16) = a2;
  return v9;
}

double sub_1003D5AD0(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  __n128 v13;
  uint64_t (*v14)(char *, uint64_t, __n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  __n128 v19;
  void *v20;
  void *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v30 - v10;
  ShelfLayoutContext.shelf.getter(v9);
  KeyPath = swift_getKeyPath(&unk_10068A128);
  ReadOnlyLens.subscript.getter(KeyPath, v4);
  v13 = swift_release(KeyPath);
  v14 = *(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8);
  v15 = v14(v11, v4, v13);
  v17 = v31;
  if (v31)
  {
    v18 = (void *)ShelfLayoutContext.traitCollection.getter(v15);
    Action.title.getter(v19);
    v21 = v20;
    v23 = sub_1000F1BCC(a1, a2, 0.0, v22, v20, 0, 0, (uint64_t)v18);

    swift_release(v17);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    ShelfLayoutContext.shelf.getter(v16);
    v24 = swift_getKeyPath(&unk_10068A0C8);
    ReadOnlyLens.subscript.getter(v24, v4);
    v25 = swift_release(v24);
    v26 = v14(v7, v4, v25);
    v27 = v31;
    if (v31 && (v28 = ShelfHeader.hasTrailingArtwork.getter(v26), swift_release(v27), (v28 & 1) != 0))
      return 156.0;
    else
      return 0.0;
  }
  return v23;
}

uint64_t sub_1003D5C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  unint64_t v26;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v6);
  KeyPath = swift_getKeyPath(&unk_10068A068);
  ReadOnlyLens.subscript.getter(KeyPath, v4);
  v10 = swift_release(KeyPath);
  v11 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v10);
  v12 = v26;
  if (!v26)
    return 0;
  v13 = v25;
  v14 = ShelfLayoutContext.supplementaryPageGrid.getter(v11);
  v15 = static CGFloat.allColumns.getter(v14);
  v16 = PageGrid.componentMeasuringSize(spanning:)(v15);
  v18 = v17;
  v19 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v20 = (void *)ShelfLayoutContext.traitCollection.getter(v19);
  if (qword_1007F2CF8 != -1)
    swift_once(&qword_1007F2CF8, sub_1004B5034);
  v21 = type metadata accessor for ShelfFooterView.Style(0);
  v22 = sub_1000117A8(v21, (uint64_t)qword_1008568E8);
  v23.n128_f64[0] = v16;
  sub_1004B5A0C(v13, v12, v22, v20, v23, v18);

  swift_bridgeObjectRelease(v12);
  return *(_QWORD *)&v16;
}

double *sub_1003D5E68(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  double v16;
  double v17;
  char v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v2 = COERCE_DOUBLE(sub_1003D36A0(a1, a2));
  if ((v4 & 1) != 0 || ((v5 = v2, v6 = v3, v3 >= v2) ? (v7 = v2) : (v7 = v3), v7 <= 0.0))
  {
    v15 = 0;
  }
  else
  {
    v8 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v9 = objc_msgSend(v8, "absoluteDimension:", v5);
    v10 = objc_msgSend(v8, "estimatedDimension:", v6);
    v11 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v9, v10);

    static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v15 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v11, v14, 1);

  }
  v16 = COERCE_DOUBLE(sub_1003D5C98());
  if ((v18 & 1) != 0 || ((v19 = v16, v20 = v17, v17 >= v16) ? (v21 = v16) : (v21 = v17), v21 <= 0.0))
  {
    v29 = 0;
  }
  else
  {
    v22 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v23 = objc_msgSend(v22, "absoluteDimension:", v19);
    v24 = objc_msgSend(v22, "absoluteDimension:", v20);
    v25 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v23, v24);

    static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v29 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v25, v28, 5);

  }
  if (!v15)
  {
    v35 = v29;
    if (!v29)
      goto LABEL_24;
    goto LABEL_21;
  }
  v30 = v29;
  v31 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  if (v29)
  {
LABEL_21:
    v36 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v39);
  }
LABEL_24:

  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003D61A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Shelf.footerTitle.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double *sub_1003D61CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  __n128 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v0 = type metadata accessor for ShelfBackground(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v6);
  KeyPath = swift_getKeyPath(&unk_10068A098);
  ReadOnlyLens.subscript.getter(KeyPath, v4);
  v10 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v10);
  v11 = (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 88))(v3, v0);
  if (v11 == enum case for ShelfBackground.artwork(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v1 + 96))(v3, v0);
    swift_release(*v3);
    v3 = (_QWORD *)((char *)v3 + *(int *)(sub_10000DF3C(&qword_1008042E0) + 48));
    v12 = sub_10000DF3C(&qword_1007F5840);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_10066FE60;
    v14 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
    type metadata accessor for ArtworkSectionBackgroundView();
    static UICollectionReusableView.elementKind.getter();
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v14, "backgroundDecorationItemWithElementKind:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

    *(_QWORD *)(v13 + 32) = v18;
    v71 = v13;
    specialized Array._endMutation()(v19);
    v20 = v71;
    v21 = type metadata accessor for ShelfBackgroundStyle(0);
LABEL_7:
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v3, v21);
    return (double *)v20;
  }
  v22 = v11;
  if (v11 == enum case for ShelfBackground.gradient(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v1 + 96))(v3, v0);
    swift_bridgeObjectRelease(*v3);
    v23 = (int *)sub_10000DF3C(&qword_1007F6338);
    v24 = (char *)v3 + v23[12];
    v25 = (char *)v3 + v23[16];
    v26 = (char *)v3 + v23[20];
    v27 = sub_10000DF3C(&qword_1007F5840);
    v28 = swift_allocObject(v27, 40, 7);
    *(_OWORD *)(v28 + 16) = xmmword_10066FE60;
    v29 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
    type metadata accessor for GradientSectionBackgroundView();
    static UICollectionReusableView.elementKind.getter();
    v31 = v30;
    v32 = String._bridgeToObjectiveC()();
    v33 = objc_msgSend(v29, "backgroundDecorationItemWithElementKind:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

    *(_QWORD *)(v28 + 32) = v33;
    v71 = v28;
    specialized Array._endMutation()(v34);
    v20 = v71;
    v35 = type metadata accessor for ShelfBackgroundStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v26, v35);
    v36 = type metadata accessor for ShelfBackgroundGradientLocation(0);
    v37 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8);
    v37(v25, v36);
    v37(v24, v36);
  }
  else
  {
    if (v11 == enum case for ShelfBackground.materialGradient(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v1 + 96))(v3, v0);
      v38 = (char *)v3 + *(int *)(sub_10000DF3C(&qword_1007F6340) + 48);
      v39 = sub_10000DF3C(&qword_1007F5840);
      v40 = swift_allocObject(v39, 40, 7);
      *(_OWORD *)(v40 + 16) = xmmword_10066FE60;
      v41 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
      type metadata accessor for MaterialGradientSectionBackgroundView();
      static UICollectionReusableView.elementKind.getter();
      v43 = v42;
      v44 = String._bridgeToObjectiveC()();
      v45 = objc_msgSend(v41, "backgroundDecorationItemWithElementKind:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

      *(_QWORD *)(v40 + 32) = v45;
      v71 = v40;
      specialized Array._endMutation()(v46);
      v20 = v71;
      v47 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v38, v47);
      v21 = type metadata accessor for ShelfBackgroundMaterialGradientColors(0);
      goto LABEL_7;
    }
    if (v11 == enum case for ShelfBackground.none(_:))
    {
      return _swiftEmptyArrayStorage;
    }
    else
    {
      if (v11 == enum case for ShelfBackground.interactive(_:))
      {
        v49 = sub_10000DF3C(&qword_1007F5840);
        v50 = swift_allocObject(v49, 40, 7);
        *(_OWORD *)(v50 + 16) = xmmword_10066FE60;
        v51 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
        type metadata accessor for InteractiveSectionBackgroundView(0);
        static UICollectionReusableView.elementKind.getter();
        v53 = v52;
        v54 = String._bridgeToObjectiveC()();
        v55 = objc_msgSend(v51, "backgroundDecorationItemWithElementKind:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

        *(_QWORD *)(v50 + 32) = v55;
        v71 = v50;
      }
      else
      {
        v57 = enum case for ShelfBackground.editorsChoice(_:);
        v58 = sub_10000DF3C(&qword_1007F5840);
        v59 = swift_allocObject(v58, 40, 7);
        *(_OWORD *)(v59 + 16) = xmmword_10066FE60;
        v60 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
        if (v22 != v57)
        {
          type metadata accessor for GradientSectionBackgroundView();
          static UICollectionReusableView.elementKind.getter();
          v66 = v65;
          v67 = String._bridgeToObjectiveC()();
          v68 = objc_msgSend(v60, "backgroundDecorationItemWithElementKind:", v67, swift_bridgeObjectRelease(v66).n128_f64[0]);

          *(_QWORD *)(v59 + 32) = v68;
          v71 = v59;
          specialized Array._endMutation()(v69);
          v20 = v71;
          (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
          return (double *)v20;
        }
        type metadata accessor for EditorsChoiceBackgroundView();
        static UICollectionReusableView.elementKind.getter();
        v62 = v61;
        v63 = String._bridgeToObjectiveC()();
        v64 = objc_msgSend(v60, "backgroundDecorationItemWithElementKind:", v63, swift_bridgeObjectRelease(v62).n128_f64[0]);

        *(_QWORD *)(v59 + 32) = v64;
        v71 = v59;
      }
      specialized Array._endMutation()(v56);
      return (double *)v71;
    }
  }
  return (double *)v20;
}

uint64_t sub_1003D67CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D67F4(uint64_t a1)
{
  sub_1003D73E0(a1, (void (*)(char *, uint64_t, uint64_t))&dispatch thunk of SelectablePagePresenter.didSelectAccessory(for:));
}

uint64_t sub_1003D6800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.accessoryAction.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D6828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.trailingArtwork.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D6850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.eyebrowArtwork.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D687C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.titleArtwork.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D68A8()
{
  type metadata accessor for ShelfLayoutContext(0);
  return sub_1003D5828();
}

uint64_t sub_1003D68F8()
{
  type metadata accessor for ShelfLayoutContext(0);
  return sub_1003D6EB0();
}

double sub_1003D6928(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ShelfLayoutContext(0);
  return sub_1003D5628(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1003D6994()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1003D22FC(v0 + v2, *(_QWORD *)(*(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)) + 16));
}

uint64_t sub_1003D69F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D6A80(a1, a2, a3, a4, (void (*)(char *, __n128))sub_10016CD78);
}

uint64_t sub_1003D6A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1003D6A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D6A80(a1, a2, a3, a4, (void (*)(char *, __n128))sub_100091718);
}

uint64_t sub_1003D6A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, __n128))
{
  uint64_t v5;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  return sub_1003D6C30(v5 + ((v7 + 16) & ~v7), a5);
}

uint64_t sub_1003D6AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D6BA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1003D5370);
}

uint64_t sub_1003D6AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D6BA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1003D52BC);
}

uint64_t sub_1003D6AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D6BA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1003D53E0);
}

uint64_t sub_1003D6B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1003D6B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D6BA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1003D514C);
}

uint64_t sub_1003D6BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v10;
  unint64_t v11;

  v10 = *(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return a5(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), v5 + v11, *(_QWORD *)(v5 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003D6C30(uint64_t a1, void (*a2)(char *, __n128))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  __n128 v17;
  double (*v18)(char *, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, __n128);
  uint64_t v34;

  v33 = a2;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ShelfBackground(0);
  v5 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v30 - v14;
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_10068A098);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  v17 = swift_release(KeyPath);
  v18 = *(double (**)(char *, uint64_t, __n128))(v9 + 8);
  v19.n128_f64[0] = v18(v15, v8, v17);
  ShelfLayoutContext.shelf.getter(v19);
  v20 = swift_getKeyPath(&unk_10068A0C8);
  ReadOnlyLens.subscript.getter(v20, v8);
  v21 = swift_release(v20);
  v22 = ((uint64_t (*)(char *, uint64_t, __n128))v18)(v11, v8, v21);
  v24 = v34;
  if (v34)
  {
    if ((ShelfHeader.hasTrailingArtwork.getter(v22) & 1) != 0)
    {
      if (qword_1007F1200 != -1)
        swift_once(&qword_1007F1200, sub_1000E59F4);
      if (qword_1007F2A00 != -1)
        swift_once(&qword_1007F2A00, sub_10042D0F4);
      v25 = type metadata accessor for StaticDimension(0);
      v26 = sub_1000117A8(v25, (uint64_t)qword_100856150);
      v27 = ShelfLayoutContext.traitEnvironment.getter(v26);
      static Dimensions.defaultRoundingRule.getter(v27);
      AnyDimension.value(in:rounded:)(v27, v4, v25, &protocol witness table for StaticDimension);
      v28 = swift_unknownObjectRelease(v27);
      (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v4, v31, v28);
    }
    v23 = swift_release(v24);
  }
  v33(v7, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v32);
}

uint64_t sub_1003D6EB0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  __n128 v15;
  double (*v16)(char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  v28 = *(_QWORD *)(v0 - 8);
  v29 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for ShelfBackground(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v28 - v12;
  ShelfLayoutContext.shelf.getter(v11);
  KeyPath = swift_getKeyPath(&unk_10068A098);
  ReadOnlyLens.subscript.getter(KeyPath, v6);
  v15 = swift_release(KeyPath);
  v16 = *(double (**)(char *, uint64_t, __n128))(v7 + 8);
  v17.n128_f64[0] = v16(v13, v6, v15);
  ShelfLayoutContext.shelf.getter(v17);
  v18 = swift_getKeyPath(&unk_10068A0C8);
  ReadOnlyLens.subscript.getter(v18, v6);
  v19 = swift_release(v18);
  v20 = ((uint64_t (*)(char *, uint64_t, __n128))v16)(v9, v6, v19);
  v22 = v31;
  if (v31)
  {
    if ((ShelfHeader.hasTrailingArtwork.getter(v20) & 1) != 0)
    {
      if (qword_1007F1200 != -1)
        swift_once(&qword_1007F1200, sub_1000E59F4);
      if (qword_1007F2A00 != -1)
        swift_once(&qword_1007F2A00, sub_10042D0F4);
      v23 = type metadata accessor for StaticDimension(0);
      v24 = sub_1000117A8(v23, (uint64_t)qword_100856150);
      v25 = ShelfLayoutContext.traitEnvironment.getter(v24);
      static Dimensions.defaultRoundingRule.getter(v25);
      AnyDimension.value(in:rounded:)(v25, v2, v23, &protocol witness table for StaticDimension);
      v26 = swift_unknownObjectRelease(v25);
      (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v2, v29, v26);
    }
    v21 = swift_release(v22);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v30, v21);
}

uint64_t sub_1003D7120(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  __n128 v15;
  void (*v16)(char *, uint64_t, __n128);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;

  v40 = a1;
  v39 = type metadata accessor for ShelfLayoutContext(0);
  v3 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v37 = v4;
  v38 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for ShelfBackground(0);
  v5 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2;
  ShelfLayoutContext.shelf.getter(v10);
  KeyPath = swift_getKeyPath(&unk_10068A068);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  v15 = swift_release(KeyPath);
  v16 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v16(v12, v8, v15);
  v18 = v41;
  v17 = v42;
  if (qword_1007F2CF8 != -1)
    swift_once(&qword_1007F2CF8, sub_1004B5034);
  v19 = type metadata accessor for ShelfFooterView.Style(0);
  v20 = sub_1000117A8(v19, (uint64_t)qword_1008568E8);
  v21 = v40;
  sub_1004B4EB4(v18, v17, v20);
  v22 = swift_bridgeObjectRelease(v17);
  ShelfLayoutContext.shelf.getter(v22);
  v23 = swift_getKeyPath(&unk_10068A098);
  ReadOnlyLens.subscript.getter(v23, v8);
  v24 = swift_release(v23);
  v16(v12, v8, v24);
  v25 = sub_10028B9EC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v36);
  objc_msgSend(v21, "setOverrideUserInterfaceStyle:", v25);
  v26 = swift_allocObject(&unk_10073D040, 24, 7);
  swift_weakInit(v26 + 16);
  v28 = v38;
  v27 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v38, v13, v39);
  v29 = *(unsigned __int8 *)(v3 + 80);
  v30 = (v29 + 24) & ~v29;
  v31 = swift_allocObject(&unk_10073D220, v30 + v37, v29 | 7);
  *(_QWORD *)(v31 + 16) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v31 + v30, v28, v27);
  v32 = (void (**)(uint64_t))&v21[OBJC_IVAR____TtC22SubscribePageExtension15ShelfFooterView_footerAction];
  v33 = *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension15ShelfFooterView_footerAction];
  v34 = *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension15ShelfFooterView_footerAction + 8];
  *v32 = sub_1003D73D4;
  v32[1] = (void (*)(uint64_t))v31;
  return sub_100019310(v33, v34);
}

void sub_1003D73D4(uint64_t a1)
{
  sub_1003D73E0(a1, (void (*)(char *, uint64_t, uint64_t))&dispatch thunk of SelectablePagePresenter.didSelectFooterAction(for:));
}

void sub_1003D73E0(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  sub_1003D5918(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t LinkableHeaderViewLayout.init(metrics:topSeparator:text:bottomSeparator:)@<X0>(_OWORD *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, _OWORD *a5@<X8>)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v8 = a1[7];
  a5[6] = a1[6];
  a5[7] = v8;
  v9 = a1[9];
  a5[8] = a1[8];
  a5[9] = v9;
  v10 = a1[3];
  a5[2] = a1[2];
  a5[3] = v10;
  v11 = a1[5];
  a5[4] = a1[4];
  a5[5] = v11;
  v12 = a1[1];
  *a5 = *a1;
  a5[1] = v12;
  sub_100010F3C(a2, (uint64_t)(a5 + 10));
  sub_100010F3C(a3, (uint64_t)a5 + 200);
  return sub_100010F3C(a4, (uint64_t)(a5 + 15));
}

uint64_t LinkableHeaderViewLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001058E4(v1 + 120, a1);
}

uint64_t LinkableHeaderViewLayout.Metrics.bottomSpace.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D74C0(a1, v1 + 120);
}

uint64_t sub_1003D74C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100803C00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t LinkableHeaderViewLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002E00AC(v1, a1);
}

double LinkableHeaderViewLayout.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;

  swift_getObjectType();
  return sub_1003D792C(a1, v3, a2, a3);
}

uint64_t LinkableHeaderViewLayout.placeChildren(relativeTo:in:)(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  CGFloat v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  CGFloat v23;
  double Width;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double Height;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  CGFloat v40;
  double MaxY;
  uint64_t v42;
  uint64_t v43;
  CGFloat v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  CGFloat v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v61;
  double v62;
  CGFloat v63;
  CGFloat MinY;
  CGFloat MinX;
  CGFloat v66;
  CGFloat v67;
  double v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;

  v6 = v5;
  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v5 + 20;
  v17 = v5[23];
  v18 = v6[24];
  sub_100011064(v16, v17);
  v19 = Measurable.measuredSize(fitting:in:)(a1, v17, *(_QWORD *)(v18 + 8), a4, a5);
  v66 = v20;
  v67 = v19;
  v69.origin.x = a2;
  v69.origin.y = a3;
  v69.size.width = a4;
  v69.size.height = a5;
  MinX = CGRectGetMinX(v69);
  v70.origin.x = a2;
  v70.origin.y = a3;
  v70.size.width = a4;
  v70.size.height = a5;
  MinY = CGRectGetMinY(v70);
  v21 = v6[23];
  v22 = v6[24];
  sub_100011064(v16, v21);
  dispatch thunk of LayoutView.frame.setter(v21, v22);
  v71.origin.x = a2;
  v71.origin.y = a3;
  v71.size.width = a4;
  v71.size.height = a5;
  v23 = a5;
  Width = CGRectGetWidth(v71);
  v25 = v6[3];
  v26 = v6[4];
  sub_100011064(v6, v25);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v25);
  v27 = AnyDimension.value(in:rounded:)(a1, v15, v25, v26);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v28 = Width - (v27 + v27);
  v63 = a2;
  v72.origin.x = a2;
  v72.origin.y = a3;
  v68 = a3;
  v72.size.width = a4;
  v72.size.height = a5;
  Height = CGRectGetHeight(v72);
  v30 = v6[28];
  v31 = v6[29];
  sub_100011064(v6 + 25, v30);
  v32 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v30, *(_QWORD *)(*(_QWORD *)(v31 + 8) + 8), v28, Height);
  v34 = v33;
  v36 = v35;
  v61 = v37;
  v62 = v35;
  v38 = v37;
  v73.origin.x = a2;
  v73.origin.y = a3;
  v73.size.width = a4;
  v39 = v23;
  v73.size.height = v23;
  v40 = CGRectGetMidX(v73) + v32 * -0.5;
  v74.origin.y = MinY;
  v74.origin.x = MinX;
  v74.size.height = v66;
  v74.size.width = v67;
  MaxY = CGRectGetMaxY(v74);
  v42 = v6[8];
  v43 = v6[9];
  sub_100011064(v6 + 5, v42);
  v44 = MaxY + AnyDimension.topMargin(from:in:)(a1, v42, v43, v32, v34, v36, v38);
  v46 = v6[28];
  v45 = v6[29];
  sub_100011064(v6 + 25, v46);
  dispatch thunk of LayoutView.frame.setter(v46, *(_QWORD *)(v45 + 8));
  v47 = v6 + 30;
  v48 = v6[33];
  v49 = v6[34];
  sub_100011064(v6 + 30, v48);
  v50 = a4;
  v51 = a4;
  v52 = v39;
  v53 = Measurable.measuredSize(fitting:in:)(a1, v48, *(_QWORD *)(v49 + 8), v51, v39);
  v66 = v54;
  v67 = v53;
  v55 = v63;
  v75.origin.x = v63;
  v75.origin.y = v68;
  v75.size.width = v50;
  v75.size.height = v52;
  CGRectGetMinX(v75);
  v76.origin.x = v40;
  v76.origin.y = v44;
  v76.size.width = v32;
  v76.size.height = v34;
  CGRectGetMaxY(v76);
  v56 = v6[13];
  v57 = v6[14];
  sub_100011064(v6 + 10, v56);
  AnyDimension.bottomMargin(from:in:)(a1, v56, v57, v32, v34, v62, v61);
  v59 = v6[33];
  v58 = v6[34];
  sub_100011064(v47, v59);
  dispatch thunk of LayoutView.frame.setter(v59, v58);
  return LayoutRect.init(representing:)(v55, v68, v50, v52);
}

double sub_1003D792C(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[3];
  v13 = a2[4];
  sub_100011064(a2, v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  v14 = AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v16 = a2[28];
  v17 = a2[29];
  sub_100011064(a2 + 25, v16);
  v18 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v16, *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8), a3 - (v14 + v14), a4);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_1001058E4((uint64_t)(a2 + 15), (uint64_t)v38);
  v25 = v39;
  if (v39)
  {
    v26 = v40;
    sub_100011064(v38, v39);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v25);
    AnyDimension.value(in:rounded:)(a1, v11, v25, v26);
    v15(v11, v8);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
  }
  else
  {
    sub_1000DC354((uint64_t)v38);
  }
  v27 = a2[33];
  v28 = a2[34];
  sub_100011064(a2 + 30, v27);
  Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  v29 = a2[23];
  v30 = a2[24];
  sub_100011064(a2 + 20, v29);
  Measurable.measuredSize(fitting:in:)(a1, v29, *(_QWORD *)(v30 + 8), a3, a4);
  v31 = a2[8];
  v32 = a2[9];
  sub_100011064(a2 + 5, v31);
  AnyDimension.topMargin(from:in:)(a1, v31, v32, v18, v20, v22, v24);
  v33 = a2 + 10;
  v34 = a2[13];
  v35 = a2[14];
  sub_100011064(v33, v34);
  AnyDimension.bottomMargin(from:in:)(a1, v34, v35, v18, v20, v22, v24);
  return a3;
}

uint64_t destroy for LinkableHeaderViewLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  if (a1[18])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 20);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 25);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 30);
}

uint64_t initializeWithCopy for LinkableHeaderViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = (_OWORD *)(a1 + 120);
  v8 = (_OWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 144);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v9;
    *(_QWORD *)(a1 + 152) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 136);
    *v7 = *v8;
    *(_OWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  }
  v12 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 160, a2 + 160);
  v13 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 200, a2 + 200);
  v14 = *(_QWORD *)(a2 + 264);
  v15 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v14;
  *(_QWORD *)(a1 + 272) = v15;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 240, a2 + 240);
  return a1;
}

uint64_t assignWithCopy for LinkableHeaderViewLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  sub_10001216C((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  v4 = *(_QWORD *)(a2 + 144);
  if (!*(_QWORD *)(a1 + 144))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 120, a2 + 120);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 120);
    v6 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v5;
    *(_OWORD *)(a1 + 136) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
    goto LABEL_7;
  }
  sub_10001216C((_QWORD *)(a1 + 120), (_QWORD *)(a2 + 120));
LABEL_8:
  sub_10001216C((_QWORD *)(a1 + 160), (_QWORD *)(a2 + 160));
  sub_10001216C((_QWORD *)(a1 + 200), (_QWORD *)(a2 + 200));
  sub_10001216C((_QWORD *)(a1 + 240), (_QWORD *)(a2 + 240));
  return a1;
}

void *initializeWithTake for LinkableHeaderViewLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for LinkableHeaderViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 144))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v6;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 200));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 240));
  v8 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v8;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkableHeaderViewLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 280))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkableHeaderViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkableHeaderViewLayout()
{
  return &type metadata for LinkableHeaderViewLayout;
}

uint64_t destroy for LinkableHeaderViewLayout.Metrics(_QWORD *a1)
{
  uint64_t result;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  if (a1[18])
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
  return result;
}

uint64_t initializeWithCopy for LinkableHeaderViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = (_OWORD *)(a1 + 120);
  v8 = (_OWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 144);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v9;
    *(_QWORD *)(a1 + 152) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 136);
    *v7 = *v8;
    *(_OWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  }
  return a1;
}

uint64_t assignWithCopy for LinkableHeaderViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  sub_10001216C((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  v4 = *(_QWORD *)(a2 + 144);
  if (!*(_QWORD *)(a1 + 144))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 120, a2 + 120);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 120);
    v6 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v5;
    *(_OWORD *)(a1 + 136) = v6;
    return a1;
  }
  if (!v4)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
    goto LABEL_7;
  }
  sub_10001216C((_QWORD *)(a1 + 120), (_QWORD *)(a2 + 120));
  return a1;
}

uint64_t assignWithTake for LinkableHeaderViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 144))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v6;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

ValueMetadata *type metadata accessor for LinkableHeaderViewLayout.Metrics()
{
  return &type metadata for LinkableHeaderViewLayout.Metrics;
}

void sub_1003D8244(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[6];

  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    v6[0] = 0x3FF0000000000000;
    v6[1] = 0;
    v6[2] = 0;
    v6[3] = 0x3FF0000000000000;
    v6[4] = 0;
    v6[5] = 0;
    objc_msgSend(v2, "setTransform:", v6);

    v4 = objc_msgSend(a1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setAlpha:", 1.0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for FadeInPresentationAnimator()
{
  return objc_opt_self(_TtC22SubscribePageExtension26FadeInPresentationAnimator);
}

void sub_1003D8390(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  CGFloat v12;
  void *v13;
  CGFloat ty;
  id v15;
  CGFloat v16;
  void *v17;
  CGFloat v18;
  CGAffineTransform v19;

  v2 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(a1, "containerView");
    v5 = objc_msgSend(v3, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v4, "addSubview:", v5);

      v7 = objc_msgSend(v3, "view");
      if (v7)
      {
        v8 = v7;
        CGAffineTransformMakeScale(&v19, 1.15, 1.15);
        objc_msgSend(v8, "setTransform:", &v19);

        v9 = objc_msgSend(v3, "view");
        if (v9)
        {
          v10 = v9;
          objc_msgSend(v9, "setAlpha:", 0.0);

          v11 = (void *)objc_opt_self(UIView);
          v12 = COERCE_DOUBLE(swift_allocObject(&unk_10073D410, 24, 7));
          *(_QWORD *)(*(_QWORD *)&v12 + 16) = v3;
          *(_QWORD *)&v19.tx = sub_1003D8620;
          v19.ty = v12;
          *(_QWORD *)&v19.a = _NSConcreteStackBlock;
          *(_QWORD *)&v19.b = 1107296256;
          *(_QWORD *)&v19.c = sub_1000BD6CC;
          *(_QWORD *)&v19.d = &unk_10073D428;
          v13 = _Block_copy(&v19);
          ty = v19.ty;
          v15 = v3;
          swift_release(*(_QWORD *)&ty);
          v16 = COERCE_DOUBLE(swift_allocObject(&unk_10073D460, 24, 7));
          *(_QWORD *)(*(_QWORD *)&v16 + 16) = a1;
          *(_QWORD *)&v19.tx = sub_1003D8664;
          v19.ty = v16;
          *(_QWORD *)&v19.a = _NSConcreteStackBlock;
          *(_QWORD *)&v19.b = 1107296256;
          *(_QWORD *)&v19.c = sub_100129140;
          *(_QWORD *)&v19.d = &unk_10073D478;
          v17 = _Block_copy(&v19);
          v18 = v19.ty;
          swift_unknownObjectRetain(a1);
          swift_release(*(_QWORD *)&v18);
          objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 0x20000, v13, v17, 0.25, 0.0);
          _Block_release(v17);
          _Block_release(v13);

          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_1003D85FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D8620()
{
  uint64_t v0;

  sub_1003D8244(*(void **)(v0 + 16));
}

uint64_t sub_1003D8628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003D8638(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003D8640()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_1003D8664(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "completeTransition:", a1 & 1);
}

uint64_t sub_1003D868C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  int v11;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSNumber v23;
  unint64_t v24;
  Class isa;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Class v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  Class v41;
  NSString v42;
  id v43;
  void *v44;
  _QWORD *v45;
  uint64_t inited;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  unint64_t v51;
  Class v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  unint64_t v57;
  Class v58;
  uint64_t result;
  uint64_t v60;
  Swift::String v61;
  void *object;
  uint64_t v63;
  id v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _BYTE v69[96];

  v2 = type metadata accessor for TodayCard.Style(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v63 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v63 - v8, a1, v2, v7);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v9, v2);
  if (v11 == enum case for TodayCard.Style.automatic(_:) || v11 == enum case for TodayCard.Style.white(_:))
  {
LABEL_8:
    v13 = 0;
    goto LABEL_9;
  }
  if (v11 != enum case for TodayCard.Style.dark(_:))
  {
    if (v11 != enum case for TodayCard.Style.light(_:))
    {
      ((void (*)(char *, uint64_t, uint64_t))v10)(v5, a1, v2);
      v66 = 0;
      v67 = 0xE000000000000000;
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease(v67);
      v66 = 0xD00000000000002ALL;
      v67 = 0x80000001006337F0;
      v61._countAndFlagsBits = TodayCard.Style.rawValue.getter(v60);
      object = v61._object;
      String.append(_:)(v61);
      swift_bridgeObjectRelease(object);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v66, v67, "SubscribePageExtension/TodayCardTitleBackingGradient.swift", 58, 2, 73, 0);
      __break(1u);
      return result;
    }
    goto LABEL_8;
  }
  v13 = 1;
LABEL_9:
  v14 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  if ((v13 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterMultiplyBlendMode);
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.32);

  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterScreenBlendMode);
    v16 = v19;
    v18 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.32);
  }
  v20 = objc_msgSend(v18, "CGColor");

  v21 = sub_10000DF3C(&qword_1007F5840);
  v22 = swift_allocObject(v21, 64, 7);
  *(_OWORD *)(v22 + 16) = xmmword_10066F9C0;
  sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
  *(NSNumber *)(v22 + 32) = NSNumber.init(integerLiteral:)(0);
  *(NSNumber *)(v22 + 40) = NSNumber.init(floatLiteral:)(0.3);
  *(NSNumber *)(v22 + 48) = NSNumber.init(floatLiteral:)(0.7);
  v23.super.super.isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
  *(NSNumber *)(v22 + 56) = v23;
  v66 = v22;
  specialized Array._endMutation()(v23.super.super.isa);
  v24 = v66;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setLocations:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

  objc_msgSend(v14, "setStartPoint:", 0.5, 0.0);
  objc_msgSend(v14, "setEndPoint:", 0.5, 1.0);
  objc_msgSend(v14, "setType:", kCAGradientLayerAxial);
  v26 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v27 = objc_msgSend(v26, "CGColor");

  v28 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1006725D0;
  type metadata accessor for CGColor(0);
  *(_QWORD *)(v29 + 32) = v27;
  *(_QWORD *)(v29 + 56) = v30;
  *(_QWORD *)(v29 + 64) = v20;
  *(_QWORD *)(v29 + 88) = v30;
  *(_QWORD *)(v29 + 96) = v20;
  *(_QWORD *)(v29 + 152) = v30;
  *(_QWORD *)(v29 + 120) = v30;
  *(_QWORD *)(v29 + 128) = v27;
  v31 = v27;
  v65 = v20;
  v64 = v31;
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setColors:", v32, swift_bridgeObjectRelease(v29).n128_f64[0]);

  v33 = objc_allocWithZone((Class)CAFilter);
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "initWithType:", v34, swift_bridgeObjectRelease(v16).n128_f64[0]);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v37 = v36;
  v38 = objc_allocWithZone((Class)CAFilter);
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v38, "initWithType:", v39, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v41 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v40, "setValue:forKey:", v41, v42);

  v43 = objc_msgSend(v14, "filters");
  if (v43)
  {
    v44 = v43;
    v45 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, (char *)&type metadata for Any + 8);

  }
  else
  {
    v45 = _swiftEmptyArrayStorage;
  }
  inited = swift_initStackObject(v28, v69);
  *(_OWORD *)(inited + 16) = xmmword_10066F870;
  v47 = sub_100019574(0, &qword_10080B018, CAFilter_ptr);
  *(_QWORD *)(inited + 32) = v35;
  *(_QWORD *)(inited + 88) = v47;
  *(_QWORD *)(inited + 56) = v47;
  *(_QWORD *)(inited + 64) = v40;
  v66 = (unint64_t)v45;
  v48 = v14;
  v49 = v35;
  v50 = v40;
  sub_100019BCC(inited);
  v51 = v66;
  v52 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v48, "setFilters:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

  v53 = sub_10000DF3C((uint64_t *)&unk_100819F70);
  v54 = swift_initStackObject(v53, &v68);
  *(_OWORD *)(v54 + 16) = xmmword_1006717F0;
  *(_QWORD *)(v54 + 32) = 0x6E6F697469736F70;
  *(_QWORD *)(v54 + 40) = 0xE800000000000000;
  v55 = objc_allocWithZone((Class)NSNull);
  v56 = v48;
  *(_QWORD *)(v54 + 48) = objc_msgSend(v55, "init");
  *(_QWORD *)(v54 + 56) = 0x6E6564646968;
  *(_QWORD *)(v54 + 64) = 0xE600000000000000;
  *(_QWORD *)(v54 + 72) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(v54 + 80) = 0x49726564724F6E6FLL;
  *(_QWORD *)(v54 + 88) = 0xE90000000000006ELL;
  *(_QWORD *)(v54 + 96) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(v54 + 104) = 0x4F726564724F6E6FLL;
  *(_QWORD *)(v54 + 112) = 0xEA00000000007475;
  *(_QWORD *)(v54 + 120) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(v54 + 128) = 0x726579616C627573;
  *(_QWORD *)(v54 + 136) = 0xE900000000000073;
  *(_QWORD *)(v54 + 144) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(v54 + 152) = 0x73746E65746E6F63;
  *(_QWORD *)(v54 + 160) = 0xE800000000000000;
  *(_QWORD *)(v54 + 168) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  *(_QWORD *)(v54 + 176) = 0x73646E756F62;
  *(_QWORD *)(v54 + 184) = 0xE600000000000000;
  *(_QWORD *)(v54 + 192) = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
  v57 = sub_1003699D0(v54);
  sub_10000DF3C((uint64_t *)&unk_100819F60);
  v58 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v56, "setActions:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

  return (uint64_t)v56;
}

id _s22SubscribePageExtension29TodayCardTitleBackingGradientO4make4fromSo15CAGradientLayerCAG_tFZ_0(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v3 = objc_msgSend(a1, "locations");
  objc_msgSend(v2, "setLocations:", v3);

  objc_msgSend(a1, "startPoint");
  objc_msgSend(v2, "setStartPoint:");
  objc_msgSend(a1, "endPoint");
  objc_msgSend(v2, "setEndPoint:");
  v4 = objc_msgSend(a1, "type");
  objc_msgSend(v2, "setType:", v4);

  v5 = objc_msgSend(a1, "colors");
  objc_msgSend(v2, "setColors:", v5);

  v6 = v2;
  v7 = objc_msgSend(a1, "filters");
  objc_msgSend(v6, "setFilters:", v7);

  return v6;
}

unint64_t sub_1003D904C()
{
  unint64_t result;

  result = qword_10080CAE8;
  if (!qword_10080CAE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCardTitleBackingGradient.Style, &type metadata for TodayCardTitleBackingGradient.Style);
    atomic_store(result, (unint64_t *)&qword_10080CAE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayCardTitleBackingGradient()
{
  return &type metadata for TodayCardTitleBackingGradient;
}

uint64_t storeEnumTagSinglePayload for TodayCardTitleBackingGradient.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003D90EC + 4 * byte_10068A3D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003D9120 + 4 * asc_10068A3D0[v4]))();
}

uint64_t sub_1003D9120(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D9128(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D9130);
  return result;
}

uint64_t sub_1003D913C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D9144);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003D9148(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D9150(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayCardTitleBackingGradient.Style()
{
  return &type metadata for TodayCardTitleBackingGradient.Style;
}

void sub_1003D921C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  objc_super v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;

  v1 = v0;
  v63.receiver = v0;
  v63.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v63, "viewDidLoad");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30LocalizationTestViewController_objectGraph];
  v3 = qword_1007F1F80;
  swift_retain(v2);
  if (v3 != -1)
    swift_once(&qword_1007F1F80, sub_1003DB280);
  v4 = qword_10080CAF0;
  swift_retain(v2);
  swift_bridgeObjectRetain(v4);
  sub_1003DBA1C(v2, (uint64_t)&v64);
  v5 = v65;
  v6 = v70;
  v7 = v72;
  v53[0] = v2;
  v53[1] = v64;
  v53[2] = v65;
  v54 = v66;
  v55 = v67;
  v56 = v68;
  v57 = v69;
  v58 = v70;
  v59 = v71;
  v60 = v72;
  v61 = v73;
  v62 = v4;
  v8 = objc_allocWithZone((Class)sub_10000DF3C(&qword_10080CB28));
  swift_retain(v2);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v4);
  v9 = (void *)UIHostingController.init(rootView:)(v53);
  objc_msgSend(v1, "addChildViewController:", v9);
  v10 = objc_msgSend(v9, "view");
  if (!v10)
  {
    __break(1u);
    goto LABEL_16;
  }
  v11 = v10;
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v13 = v12;
  v52 = v7;
  v14 = objc_msgSend(v9, "view");
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v15 = v14;
  objc_msgSend(v13, "addSubview:", v14);

  v16 = sub_10000DF3C(&qword_1007F5840);
  v17 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10066F9C0;
  v18 = objc_msgSend(v9, "view");
  if (!v18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v19 = v18;
  v51 = v6;
  v20 = objc_msgSend(v18, "topAnchor");

  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "topAnchor");

  v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);
  *(_QWORD *)(v17 + 32) = v24;
  v25 = objc_msgSend(v9, "view");
  if (!v25)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "leadingAnchor");

  v28 = objc_msgSend(v1, "view");
  if (!v28)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "leadingAnchor");

  v31 = objc_msgSend(v27, "constraintEqualToAnchor:", v30);
  *(_QWORD *)(v17 + 40) = v31;
  v32 = objc_msgSend(v9, "view");
  if (!v32)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "bottomAnchor");

  v35 = objc_msgSend(v1, "view");
  if (!v35)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v36 = v35;
  v50 = v4;
  v37 = objc_msgSend(v35, "bottomAnchor");

  v38 = objc_msgSend(v34, "constraintEqualToAnchor:", v37);
  *(_QWORD *)(v17 + 48) = v38;
  v39 = objc_msgSend(v9, "view");
  if (!v39)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "trailingAnchor");

  v42 = objc_msgSend(v1, "view");
  if (v42)
  {
    v43 = v42;
    v44 = (void *)objc_opt_self(NSLayoutConstraint);
    v45 = objc_msgSend(v43, "trailingAnchor");

    v46 = objc_msgSend(v41, "constraintEqualToAnchor:", v45);
    *(_QWORD *)(v17 + 56) = v46;
    v53[0] = v17;
    specialized Array._endMutation()(v47);
    v48 = v53[0];
    sub_100019574(0, (unint64_t *)&qword_1007F45C0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v44, "activateConstraints:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

    objc_msgSend(v9, "didMoveToParentViewController:", v1);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v5);
    swift_release(v2);

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t type metadata accessor for LocalizationTestViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension30LocalizationTestViewController);
}

double sub_1003D9800@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, __n128);
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  double result;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  int v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  __int128 v130;
  char v131;
  double *v132;
  __int128 v133;
  __int128 v134;
  _BYTE v135[25];

  v103 = a2;
  v107 = (_QWORD *)sub_10000DF3C(&qword_10080CB78);
  v106 = *(v107 - 1);
  __chkstk_darwin(v107);
  v105 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_10000DF3C(&qword_10080CB80);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v112 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v110 = (char *)&v99 - v7;
  v104 = type metadata accessor for Prominence(0, v6);
  v100 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10000DF3C(&qword_10080CB88);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10000DF3C(&qword_10080CB90);
  v124 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v121 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v123 = (char *)&v99 - v14;
  v15 = *(_OWORD *)(a1 + 24);
  v133 = *(_OWORD *)(a1 + 8);
  v134 = v15;
  *(_OWORD *)v135 = *(_OWORD *)(a1 + 40);
  v16 = a1;
  *(_OWORD *)&v135[9] = *(_OWORD *)(a1 + 49);
  v17 = sub_1003DA1D4();
  v19 = v18;
  v21 = static Font.footnote.getter(v20);
  v109 = Text.font(_:)(v21, v17, v19, 0, _swiftEmptyArrayStorage);
  v125 = v22;
  v24 = v23;
  v126 = v25;
  swift_bridgeObjectRelease(v19);
  v26 = swift_release(v21);
  if ((v134 & 1) != 0)
  {
    *(_QWORD *)&v130 = 0;
    *((_QWORD *)&v130 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease(*((_QWORD *)&v130 + 1));
    *(_QWORD *)&v130 = 0x100000000000002ELL;
    *((_QWORD *)&v130 + 1) = 0x8000000100649420;
    v30 = (void *)*((_QWORD *)&v133 + 1);
    v29 = v133;
    swift_bridgeObjectRetain(*((_QWORD *)&v133 + 1));
    v31._countAndFlagsBits = v29;
    v31._object = v30;
    String.append(_:)(v31);
    v26 = swift_bridgeObjectRelease(v30);
    v28 = *((_QWORD *)&v130 + 1);
    v27 = v130;
  }
  else
  {
    v27 = 0x1000000000000041;
    v28 = 0x8000000100649330;
  }
  v116 = v24 & 1;
  v32 = static Font.footnote.getter(v26);
  v118 = Text.font(_:)(v32, v27, v28, 0, _swiftEmptyArrayStorage);
  v117 = v33;
  v35 = v34;
  v119 = v36;
  swift_bridgeObjectRelease(v28);
  v37 = swift_release(v32);
  v115 = v35 & 1;
  if ((BYTE1(v134) & 1) != 0)
    v38 = 0x1000000000000032;
  else
    v38 = 0x1000000000000036;
  if ((BYTE1(v134) & 1) != 0)
    v39 = 0x80000001006493E0;
  else
    v39 = 0x8000000100649380;
  v40 = static Font.footnote.getter(v37);
  v120 = Text.font(_:)(v40, v38, v39, 0, _swiftEmptyArrayStorage);
  v114 = v41;
  v43 = v42;
  v122 = v44;
  swift_bridgeObjectRelease(v39);
  swift_release(v40);
  *(_QWORD *)&v130 = 0xD000000000000017;
  *((_QWORD *)&v130 + 1) = 0x80000001006493C0;
  v108 = v43 & 1;
  v131 = 0;
  v132 = _swiftEmptyArrayStorage;
  __chkstk_darwin(v45);
  v46 = v16;
  *(&v99 - 2) = v16;
  v47 = sub_10000DF3C(&qword_10080CB98);
  v48 = sub_1003DC588();
  Section<>.init(header:content:)(&v130, sub_1003DC580, &v99 - 4, &type metadata for Text, v47, &protocol witness table for Text, v48);
  v49 = enum case for Prominence.increased(_:);
  v50 = v100;
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 104);
  v52 = v104;
  v51(v9, enum case for Prominence.increased(_:), v104);
  v53 = sub_1003DC6BC(&qword_10080CBB0, &qword_10080CB88, (uint64_t (*)(void))sub_1003DC588);
  v54 = v121;
  v55 = v102;
  View.headerProminence(_:)(v9, v102, v53);
  v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v9, v52);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v11, v55);
  v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v124 + 32))(v123, v54, v127);
  v130 = xmmword_10068A4A0;
  v131 = 0;
  v132 = _swiftEmptyArrayStorage;
  __chkstk_darwin(v57);
  *(&v99 - 2) = v46;
  v58 = sub_10000DF3C(&qword_10080CBB8);
  v59 = sub_1003DC638();
  v60 = v105;
  Section<>.init(header:content:)(&v130, sub_1003DC630, &v99 - 4, &type metadata for Text, v58, &protocol witness table for Text, v59);
  v51(v9, v49, v52);
  v61 = sub_1003DC6BC(&qword_10080CBD8, &qword_10080CB78, (uint64_t (*)(void))sub_1003DC638);
  v62 = v112;
  v63 = v107;
  View.headerProminence(_:)(v9, v107, v61);
  v56(v9, v52);
  (*(void (**)(char *, _QWORD *))(v106 + 8))(v60, v63);
  v64 = v111;
  v65 = v110;
  v66 = v113;
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v62, v113);
  LOBYTE(v63) = v116;
  LOBYTE(v130) = v116;
  LOBYTE(v54) = v115;
  v129 = v115;
  LOBYTE(v49) = v108;
  v128 = v108;
  v106 = *(_QWORD *)(v124 + 16);
  v67 = v121;
  v68 = v127;
  ((void (*)(char *, char *, uint64_t))v106)(v121, v123, v127);
  v107 = *(_QWORD **)(v64 + 16);
  v69 = v62;
  ((void (*)(char *, char *, uint64_t))v107)(v62, v65, v66);
  v70 = v109;
  v71 = v103;
  v72 = v125;
  *v103 = v109;
  v71[1] = v72;
  *((_BYTE *)v71 + 16) = (_BYTE)v63;
  v73 = v118;
  v71[3] = v126;
  v71[4] = v73;
  v71[5] = v117;
  *((_BYTE *)v71 + 48) = (_BYTE)v54;
  v74 = v120;
  v71[7] = v119;
  v71[8] = v74;
  v75 = v114;
  v71[9] = v114;
  *((_BYTE *)v71 + 80) = v49;
  v71[11] = v122;
  v76 = sub_10000DF3C(&qword_10080CBE0);
  ((void (*)(char *, char *, uint64_t))v106)((char *)v71 + *(int *)(v76 + 80), v67, v68);
  ((void (*)(char *, char *, uint64_t))v107)((char *)v71 + *(int *)(v76 + 96), v69, v66);
  v77 = v125;
  LOBYTE(v67) = v116;
  sub_1003DC734(v70, v125, v116);
  swift_bridgeObjectRetain(v126);
  v78 = v118;
  v79 = v117;
  LOBYTE(v69) = v115;
  sub_1003DC734(v118, v117, v115);
  v80 = v119;
  swift_bridgeObjectRetain(v119);
  v81 = v120;
  LOBYTE(v71) = v108;
  sub_1003DC734(v120, v75, v108);
  v82 = v122;
  swift_bridgeObjectRetain(v122);
  v83 = v109;
  sub_1003DC734(v109, v77, (char)v67);
  v84 = v126;
  swift_bridgeObjectRetain(v126);
  sub_1003DC734(v78, v79, (char)v69);
  swift_bridgeObjectRetain(v80);
  v85 = v81;
  v86 = v114;
  sub_1003DC734(v81, v114, (char)v71);
  v87 = *(void (**)(char *, uint64_t, __n128))(v111 + 8);
  v88 = v82;
  v89 = swift_bridgeObjectRetain(v82);
  v90 = v113;
  v87(v110, v113, v89);
  v91 = *(void (**)(char *, uint64_t))(v124 + 8);
  v92 = v127;
  v91(v123, v127);
  sub_1003DC744(v85, v86, (char)v71);
  swift_bridgeObjectRelease(v88);
  v93 = v118;
  v94 = v117;
  sub_1003DC744(v118, v117, v115);
  v95 = v119;
  swift_bridgeObjectRelease(v119);
  v96 = v125;
  sub_1003DC744(v83, v125, v116);
  v97 = swift_bridgeObjectRelease(v84);
  v87(v112, v90, v97);
  v91(v121, v92);
  sub_1003DC744(v120, v114, v128);
  swift_bridgeObjectRelease(v122);
  sub_1003DC744(v93, v94, v129);
  swift_bridgeObjectRelease(v95);
  sub_1003DC744(v83, v96, v130);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v84).n128_u64[0];
  return result;
}

uint64_t sub_1003DA1D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 18) & 1) != 0)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0x1000000000000012;
  }
  else
  {
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0x1000000000000027;
  }
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain(v1);
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v1);
  return v5;
}

uint64_t sub_1003DA2A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain(v6);
  v1 = sub_10000DF3C(&qword_10080CC18);
  v2 = sub_100010F98(&qword_10080CC20, &qword_10080CC18, (const char *)&protocol conformance descriptor for [A]);
  v3 = sub_1003DC5EC();
  v4 = sub_1003DC798();
  return ((uint64_t (*)(uint64_t *, uint64_t (*)@<X0>(uint64_t *@<X0>, _QWORD *@<X8>), _QWORD, uint64_t, _QWORD *, ValueMetadata *, uint64_t, unint64_t, unint64_t))ForEach<>.init(_:content:))(&v6, sub_1003DA34C, 0, v1, &type metadata for String, &type metadata for LocalizationTestResultView, v2, v3, v4);
}

uint64_t sub_1003DA350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  char v42;

  v40 = sub_10000DF3C(&qword_10080CBE8);
  v4 = __chkstk_darwin(v40);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentViewConfiguration(0, v4);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_10080CBD0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
  {
    v41[0] = 0xD000000000000016;
    v41[1] = 0x800000010068A5D0;
    v42 = 1;
    v38 = static Transaction._loading.getter(v12);
    IntentViewConfiguration.init()();
    v37 = sub_10000DF3C(&qword_10080CB98);
    v36 = sub_10000DF3C(&qword_10080CBF0);
    v28 = sub_10000DF3C(&qword_10080CBF8);
    v29 = sub_1003DC754();
    v30 = sub_1003DC588();
    v39 = a2;
    v31 = v30;
    v32 = sub_100010F98(&qword_10080CC08, &qword_10080CBF0, (const char *)&protocol conformance descriptor for LoadingView<A>);
    v33 = sub_100010F98(&qword_10080CC10, &qword_10080CBF8, (const char *)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    IntentView.init(what:transaction:configuration:working:failed:content:)(v41, v38, v9, &j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, sub_1003DA68C, 0, sub_1003DA6D8, 0, &type metadata for LocalizationTestIntent, v37, v36, v28, v29, v31, v32, v33);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v14, v10);
    swift_storeEnumTagMultiPayload(v6, v40, 0);
    v34 = sub_100010F98(&qword_10080CBC8, &qword_10080CBD0, (const char *)&protocol conformance descriptor for IntentView<A, B, C, D>);
    _ConditionalContent<>.init(storage:)(v6, v10, &type metadata for Text, v34, &protocol witness table for Text);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56);
    v17 = swift_bridgeObjectRetain(v15);
    v18 = static Font.footnote.getter(v17);
    v19 = Text.font(_:)(v18, v16, v15, 0, _swiftEmptyArrayStorage);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    swift_bridgeObjectRelease(v15);
    swift_release(v18);
    *(_QWORD *)v6 = v19;
    *((_QWORD *)v6 + 1) = v21;
    v6[16] = v23 & 1;
    *((_QWORD *)v6 + 3) = v25;
    swift_storeEnumTagMultiPayload(v6, v40, 1);
    v26 = sub_100010F98(&qword_10080CBC8, &qword_10080CBD0, (const char *)&protocol conformance descriptor for IntentView<A, B, C, D>);
    return _ConditionalContent<>.init(storage:)(v6, v10, &type metadata for Text, v26, &protocol witness table for Text);
  }
}

uint64_t sub_1003DA68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_errorRetain(a1);
  swift_retain(a3);
  return ContentUnavailableView.init<>(error:retry:)(a1, a2, a3);
}

uint64_t sub_1003DA6D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v6 = *a1;
  swift_bridgeObjectRetain(v6);
  v1 = sub_10000DF3C(&qword_10080CC18);
  v2 = sub_100010F98(&qword_10080CC20, &qword_10080CC18, (const char *)&protocol conformance descriptor for [A]);
  v3 = sub_1003DC5EC();
  v4 = sub_1003DC798();
  return ((uint64_t (*)(uint64_t *, uint64_t (*)@<X0>(uint64_t *@<X0>, _QWORD *@<X8>), _QWORD, uint64_t, _QWORD *, ValueMetadata *, uint64_t, unint64_t, unint64_t))ForEach<>.init(_:content:))(&v6, sub_1003DA34C, 0, v1, &type metadata for String, &type metadata for LocalizationTestResultView, v2, v3, v4);
}

uint64_t sub_1003DA784@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v11 = a1[8];
  v10 = a1[9];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v6;
  a2[5] = v7;
  a2[6] = v8;
  a2[7] = v9;
  a2[8] = v11;
  a2[9] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  return swift_bridgeObjectRetain(v9);
}

uint64_t sub_1003DA7F4()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  _OWORD *v15;
  _QWORD v16[5];
  _OWORD v17[5];

  v1 = sub_10000DF3C(&qword_10080CB50);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0[3];
  v17[2] = v0[2];
  v17[3] = v5;
  v17[4] = v0[4];
  v6 = v0[1];
  v17[0] = *v0;
  v17[1] = v6;
  v15 = v17;
  v7 = sub_10000DF3C(&qword_10080CB58);
  v8 = sub_100010F98(&qword_10080CB60, &qword_10080CB58, (const char *)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_1003DC578, v14, v7, v8);
  v9 = type metadata accessor for JSIntentDispatcher(0);
  v10 = *(_QWORD *)&v17[0];
  v16[3] = v9;
  v16[4] = sub_10000E99C(&qword_10080CB68, (uint64_t (*)(uint64_t))&type metadata accessor for JSIntentDispatcher, (uint64_t)&protocol conformance descriptor for JSIntentDispatcher);
  v11 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v16, v9, v10, v9, v11);
  v12 = sub_100010F98(&qword_10080CB70, &qword_10080CB50, (const char *)&protocol conformance descriptor for List<A, B>);
  View.intentDispatcher(_:with:)(v16, v10, v1, v12);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
}

double sub_1003DA978@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  double result;
  _OWORD v33[8];
  _BYTE v34[135];
  char v35;
  __int128 v36;
  _BYTE v37[136];
  char v38;
  _QWORD v39[2];
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[23];

  v5 = 8756450;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = v8 == v6 && v9 == v7;
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0) & 1) == 0)
    v5 = 9215458;
  v11 = static Font.title3.getter(a3);
  v12 = Text.font(_:)(v11, v5, 0xA300000000000000, 0, _swiftEmptyArrayStorage);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease(0xA300000000000000);
  v19 = swift_release(v11);
  LOBYTE(v11) = v16 & 1;
  v20 = static HorizontalAlignment.leading.getter(v19);
  sub_1003DAB98((_OWORD *)a1, (uint64_t)v33);
  *(_OWORD *)&v34[71] = v33[4];
  *(_OWORD *)&v34[87] = v33[5];
  *(_OWORD *)&v34[103] = v33[6];
  *(_OWORD *)&v34[119] = v33[7];
  *(_OWORD *)&v34[7] = v33[0];
  *(_OWORD *)&v34[23] = v33[1];
  *(_OWORD *)&v34[39] = v33[2];
  *(_OWORD *)&v34[55] = v33[3];
  *(_QWORD *)&v36 = v20;
  *((_QWORD *)&v36 + 1) = 0x4020000000000000;
  v37[0] = 0;
  v21 = *(_OWORD *)&v34[16];
  *(_OWORD *)&v37[33] = *(_OWORD *)&v34[32];
  v22 = *(_OWORD *)v34;
  *(_OWORD *)&v37[17] = *(_OWORD *)&v34[16];
  v23 = *(_OWORD *)&v34[64];
  *(_OWORD *)&v37[81] = *(_OWORD *)&v34[80];
  v24 = *(_OWORD *)&v34[80];
  *(_OWORD *)&v37[97] = *(_OWORD *)&v34[96];
  v25 = *(_OWORD *)&v34[96];
  *(_OWORD *)&v37[113] = *(_OWORD *)&v34[112];
  v26 = *(_OWORD *)&v34[32];
  *(_OWORD *)&v37[49] = *(_OWORD *)&v34[48];
  v27 = *(_OWORD *)&v34[48];
  *(_OWORD *)&v37[65] = *(_OWORD *)&v34[64];
  *(_OWORD *)&v37[1] = *(_OWORD *)v34;
  v28 = *(_OWORD *)&v37[96];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v37[80];
  *(_OWORD *)(a2 + 144) = v28;
  *(_OWORD *)(a2 + 160) = *(_OWORD *)&v37[112];
  v29 = *(_OWORD *)&v37[32];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v37[16];
  *(_OWORD *)(a2 + 80) = v29;
  v30 = *(_OWORD *)&v37[64];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v37[48];
  *(_OWORD *)(a2 + 112) = v30;
  v31 = *(_OWORD *)v37;
  *(_OWORD *)(a2 + 32) = v36;
  *(_OWORD *)(a2 + 48) = v31;
  v46 = v24;
  v47 = v25;
  *(_OWORD *)v48 = *(_OWORD *)&v34[112];
  v42 = v21;
  v43 = v26;
  v44 = v27;
  v45 = v23;
  v35 = 0;
  *(_QWORD *)&v37[128] = *(_QWORD *)&v34[127];
  v38 = v11;
  *(_QWORD *)(a2 + 176) = *(_QWORD *)&v34[127];
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v18;
  v39[0] = v20;
  v39[1] = 0x4020000000000000;
  v40 = 0;
  *(_QWORD *)&v48[15] = *(_QWORD *)&v34[127];
  v41 = v22;
  sub_1003DC734(v12, v14, v11);
  swift_bridgeObjectRetain(v18);
  sub_1003DCF88((uint64_t)&v36);
  sub_1003DD0D8((uint64_t)v39);
  sub_1003DC744(v12, v14, v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

double sub_1003DAB98@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;
  __int128 v58;
  _BYTE v59[16];
  uint64_t v60;
  unint64_t v61;

  v56 = (Swift::String)a1[2];
  v57 = (Swift::String)a1[3];
  v58 = a1[4];
  v2 = a1[1];
  v3 = swift_bridgeObjectRetain(*((_QWORD *)&v2 + 1));
  v4 = static Font.title3.getter(v3);
  v5 = Text.font(_:)(v4, v2, *((_QWORD *)&v2 + 1), 0, _swiftEmptyArrayStorage);
  v7 = v6;
  v49 = v8;
  v53 = v9;
  swift_bridgeObjectRelease(*((_QWORD *)&v2 + 1));
  swift_release(v4);
  v51 = v7;
  v52 = v5;
  if (v57 == v56
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v57._countAndFlagsBits, v57._object, v56._countAndFlagsBits, v56._object, 0) & 1) != 0)
  {
    v10 = 0;
    v54 = 0;
    v55 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v50 = 0;
  }
  else
  {
    swift_bridgeObjectRetain(v56._object);
    String.append(_:)(v56);
    v15 = swift_bridgeObjectRelease(v56._object);
    v16 = static Font.footnote.getter(v15);
    v17 = Text.font(_:)(v16, 0x6465746365707845, 0xEA0000000000203ALL, 0, _swiftEmptyArrayStorage);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease(0xEA0000000000203ALL);
    swift_release(v16);
    v60 = 0x203A6C6175746341;
    v61 = 0xE800000000000000;
    swift_bridgeObjectRetain(v57._object);
    String.append(_:)(v57);
    v24 = swift_bridgeObjectRelease(v57._object);
    v25 = static Font.footnote.getter(v24);
    v12 = Text.font(_:)(v25, 0x203A6C6175746341, 0xE800000000000000, 0, _swiftEmptyArrayStorage);
    v13 = v26;
    v28 = v27;
    v30 = v29;
    swift_bridgeObjectRelease(0xE800000000000000);
    v31 = v25;
    v10 = v17;
    swift_release(v31);
    v14 = v28 & 1;
    sub_1003DC734(v10, v19, v21 & 1);
    swift_bridgeObjectRetain(v23);
    sub_1003DC734(v12, v13, v28 & 1);
    swift_bridgeObjectRetain(v30);
    sub_1003DC744(v12, v13, v28 & 1);
    v50 = v30;
    swift_bridgeObjectRelease(v30);
    v55 = v19;
    v5 = v52;
    v11 = v21 & 1;
    sub_1003DC744(v10, v19, v21 & 1);
    v54 = v23;
    v32 = v23;
    v7 = v51;
    swift_bridgeObjectRelease(v32);
  }
  sub_1003DD228((uint64_t)&v58, (uint64_t)v59);
  sub_1003DD228((uint64_t)v59, (uint64_t)&v60);
  v33 = v61;
  v34 = v12;
  v35 = v5;
  if (v61)
  {
    v36 = v60;
    String.append(_:)(*(Swift::String *)(&v33 - 1));
    v37 = static Font.caption2.getter();
    v38 = Text.font(_:)(v37, 0x203A65746F4ELL, 0xE600000000000000, 0, _swiftEmptyArrayStorage);
    v46 = v39;
    v47 = v38;
    v41 = v40;
    v45 = v42;
    swift_bridgeObjectRelease(0xE600000000000000);
    swift_release(v37);
    v43 = v41 & 1;
  }
  else
  {
    v46 = 0;
    v47 = 0;
    v43 = 0;
    v45 = 0;
  }
  *(_QWORD *)a2 = v35;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v49 & 1;
  *(_QWORD *)(a2 + 24) = v53;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v55;
  *(_QWORD *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v54;
  *(_QWORD *)(a2 + 64) = v34;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v50;
  *(_QWORD *)(a2 + 96) = v47;
  *(_QWORD *)(a2 + 104) = v46;
  *(_QWORD *)(a2 + 112) = v43;
  *(_QWORD *)(a2 + 120) = v45;
  sub_1003DC734(v35, v7, v49 & 1);
  swift_bridgeObjectRetain(v53);
  sub_1003DD040(v10, v55, v11, v54, v34, v13, v14, v50);
  sub_1003DD0A8(v47, v46, v43, v45);
  sub_1003DD1F8(v47, v46, v43, v45);
  sub_1003DD190(v10, v55, v11, v54, v34, v13, v14, v50);
  sub_1003DC744(v52, v51, v49 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v53).n128_u64[0];
  return result;
}

double sub_1003DAFC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  _OWORD *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __n128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  double result;
  __int128 v20;
  _OWORD v21[5];
  _OWORD v22[11];
  uint64_t v23;
  _OWORD v24[12];

  v11 = v9[3];
  v21[2] = v9[2];
  v21[3] = v11;
  v21[4] = v9[4];
  v12 = v9[1];
  v21[0] = *v9;
  v21[1] = v12;
  v13 = static VerticalAlignment.top.getter(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)&v21[0], *((_QWORD *)&v21[0] + 1));
  sub_1003DA978((uint64_t)v21, (uint64_t)v22, v14);
  *(_OWORD *)((char *)&v24[8] + 7) = v22[8];
  *(_OWORD *)((char *)&v24[9] + 7) = v22[9];
  *(_OWORD *)((char *)&v24[10] + 7) = v22[10];
  *(_QWORD *)((char *)&v24[11] + 7) = v23;
  *(_OWORD *)((char *)&v24[4] + 7) = v22[4];
  *(_OWORD *)((char *)&v24[5] + 7) = v22[5];
  *(_OWORD *)((char *)&v24[6] + 7) = v22[6];
  *(_OWORD *)((char *)&v24[7] + 7) = v22[7];
  *(_OWORD *)((char *)v24 + 7) = v22[0];
  *(_OWORD *)((char *)&v24[1] + 7) = v22[1];
  *(_OWORD *)((char *)&v24[2] + 7) = v22[2];
  *(_OWORD *)((char *)&v24[3] + 7) = v22[3];
  v15 = v24[9];
  *(_OWORD *)(a9 + 145) = v24[8];
  *(_OWORD *)(a9 + 161) = v15;
  *(_OWORD *)(a9 + 177) = v24[10];
  *(_OWORD *)(a9 + 192) = *(_OWORD *)((char *)&v24[10] + 15);
  v16 = v24[5];
  *(_OWORD *)(a9 + 81) = v24[4];
  *(_OWORD *)(a9 + 97) = v16;
  v17 = v24[7];
  *(_OWORD *)(a9 + 113) = v24[6];
  *(_OWORD *)(a9 + 129) = v17;
  v18 = v24[1];
  *(_OWORD *)(a9 + 17) = v24[0];
  *(_OWORD *)(a9 + 33) = v18;
  result = *(double *)&v24[2];
  v20 = v24[3];
  *(_OWORD *)(a9 + 49) = v24[2];
  *(_QWORD *)a9 = v13;
  *(_QWORD *)(a9 + 8) = 0x4038000000000000;
  *(_BYTE *)(a9 + 16) = 0;
  *(_OWORD *)(a9 + 65) = v20;
  return result;
}

uint64_t sub_1003DB0CC()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v11;

  v0 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  v1 = objc_msgSend(v0, "ams_activeiTunesAccount");
  if (!v1)
  {
    v2 = objc_msgSend(v0, "ams_fetchLocaliTunesAccount");
    v11 = 0;
    v1 = objc_msgSend(v2, "resultWithError:", &v11);

    v3 = v11;
    if (!v1)
    {
      v8 = v11;
      v9 = _convertNSErrorToError(_:)(v3);

      swift_willThrow();
      swift_errorRelease(v9);
      v1 = 0;
      goto LABEL_7;
    }
    v4 = v11;
  }
  v5 = objc_msgSend(v1, "ams_storefront");
  if (!v5)
  {
LABEL_7:

    return 0;
  }
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

  return v7;
}

__n128 sub_1003DB234@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v6;
  _OWORD v7[5];

  sub_1003DC124(a1, a2, (uint64_t *)v7);
  if (!v3)
  {
    v6 = v7[3];
    *(_OWORD *)(a3 + 32) = v7[2];
    *(_OWORD *)(a3 + 48) = v6;
    *(_OWORD *)(a3 + 64) = v7[4];
    result = (__n128)v7[1];
    *(_OWORD *)a3 = v7[0];
    *(__n128 *)(a3 + 16) = result;
  }
  return result;
}

uint64_t sub_1003DB280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_10080CB40);
  v5 = swift_allocObject(v4, 752, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10068A4B0;
  v6._countAndFlagsBits = 0xD000000000000016;
  v6._object = (void *)0x8000000100648F20;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = localizedString(_:comment:)(v6, v7);
  v10 = UUID.init()(v9);
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v3, v0);
  *(_QWORD *)(v5 + 32) = v11;
  *(_QWORD *)(v5 + 40) = v13;
  *(_QWORD *)(v5 + 48) = 0xD000000000000025;
  *(_QWORD *)(v5 + 56) = 0x8000000100648EF0;
  *(_QWORD *)(v5 + 64) = 1852141647;
  *(_QWORD *)(v5 + 72) = 0xE400000000000000;
  *(Swift::String *)(v5 + 80) = v8;
  *(_OWORD *)(v5 + 96) = 0u;
  v15._countAndFlagsBits = 0x525F5245544F4F46;
  v15._object = (void *)0xED00004D45454445;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = localizedString(_:comment:)(v15, v16);
  v19 = UUID.init()(v18);
  v20 = UUID.uuidString.getter(v19);
  v22 = v21;
  v14(v3, v0);
  *(_QWORD *)(v5 + 112) = v20;
  *(_QWORD *)(v5 + 120) = v22;
  *(_QWORD *)(v5 + 128) = 0xD000000000000025;
  *(_QWORD *)(v5 + 136) = 0x8000000100648F40;
  *(_QWORD *)(v5 + 144) = 0x6D6565646552;
  *(_QWORD *)(v5 + 152) = 0xE600000000000000;
  *(Swift::String *)(v5 + 160) = v17;
  *(_OWORD *)(v5 + 176) = 0u;
  v23._countAndFlagsBits = 0xD000000000000013;
  v23._object = (void *)0x80000001006302F0;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25 = localizedStringWithCount(_:count:comment:)(v23, 2, v24);
  v27 = UUID.init()(v26);
  v28 = UUID.uuidString.getter(v27);
  v30 = v29;
  v14(v3, v0);
  *(_QWORD *)(v5 + 192) = v28;
  *(_QWORD *)(v5 + 200) = v30;
  *(_QWORD *)(v5 + 208) = 0xD000000000000041;
  *(_QWORD *)(v5 + 216) = 0x8000000100648F70;
  *(_QWORD *)(v5 + 224) = 0x676E697461522032;
  *(_QWORD *)(v5 + 232) = 0xE900000000000073;
  *(Swift::String *)(v5 + 240) = v25;
  *(_OWORD *)(v5 + 256) = 0u;
  v31._countAndFlagsBits = 0xD000000000000013;
  v31._object = (void *)0x80000001006302F0;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v33 = localizedStringWithCount(_:count:comment:)(v31, 1, v32);
  v35 = UUID.init()(v34);
  v36 = UUID.uuidString.getter(v35);
  v38 = v37;
  v14(v3, v0);
  *(_QWORD *)(v5 + 272) = v36;
  *(_QWORD *)(v5 + 280) = v38;
  *(_QWORD *)(v5 + 288) = 0xD000000000000041;
  *(_QWORD *)(v5 + 296) = 0x8000000100648FC0;
  *(_QWORD *)(v5 + 304) = 0x676E697461522031;
  *(_QWORD *)(v5 + 312) = 0xE800000000000000;
  *(Swift::String *)(v5 + 320) = v33;
  *(_OWORD *)(v5 + 336) = 0u;
  v39._countAndFlagsBits = 0xD000000000000028;
  v39._object = (void *)0x8000000100649070;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v41 = localizedStringWithCount(_:count:comment:)(v39, 3, v40);
  v43 = UUID.init()(v42);
  v44 = UUID.uuidString.getter(v43);
  v46 = v45;
  v14(v3, v0);
  *(_QWORD *)(v5 + 352) = v44;
  *(_QWORD *)(v5 + 360) = v46;
  *(_QWORD *)(v5 + 368) = 0xD000000000000036;
  *(_QWORD *)(v5 + 376) = 0x8000000100649010;
  *(_QWORD *)(v5 + 384) = 0xD000000000000017;
  *(_QWORD *)(v5 + 392) = 0x8000000100649050;
  *(Swift::String *)(v5 + 400) = v41;
  *(_OWORD *)(v5 + 416) = 0u;
  v47._countAndFlagsBits = 0xD00000000000002FLL;
  v47._object = (void *)0x8000000100649110;
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v49 = localizedStringWithCount(_:count:comment:)(v47, 1, v48);
  v51 = UUID.init()(v50);
  v52 = UUID.uuidString.getter(v51);
  v54 = v53;
  v14(v3, v0);
  *(_QWORD *)(v5 + 432) = v52;
  *(_QWORD *)(v5 + 440) = v54;
  *(_QWORD *)(v5 + 448) = 0xD000000000000045;
  *(_QWORD *)(v5 + 456) = 0x80000001006490A0;
  *(_QWORD *)(v5 + 464) = 0xD000000000000014;
  *(_QWORD *)(v5 + 472) = 0x80000001006490F0;
  *(Swift::String *)(v5 + 480) = v49;
  *(_OWORD *)(v5 + 496) = 0u;
  v55._countAndFlagsBits = 0xD00000000000002FLL;
  v55._object = (void *)0x8000000100649110;
  v56._countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  v57 = localizedStringWithCount(_:count:comment:)(v55, 2, v56);
  v59 = UUID.init()(v58);
  v60 = UUID.uuidString.getter(v59);
  v62 = v61;
  v14(v3, v0);
  *(_QWORD *)(v5 + 512) = v60;
  *(_QWORD *)(v5 + 520) = v62;
  *(_QWORD *)(v5 + 528) = 0xD000000000000045;
  *(_QWORD *)(v5 + 536) = 0x8000000100649140;
  *(_QWORD *)(v5 + 544) = 0xD000000000000015;
  *(_QWORD *)(v5 + 552) = 0x8000000100649190;
  *(Swift::String *)(v5 + 560) = v57;
  *(_OWORD *)(v5 + 576) = 0u;
  v63._countAndFlagsBits = 0xD00000000000002CLL;
  v63._object = (void *)0x8000000100649210;
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v65 = localizedStringWithCount(_:count:comment:)(v63, 2, v64);
  v67 = UUID.init()(v66);
  v68 = UUID.uuidString.getter(v67);
  v70 = v69;
  v14(v3, v0);
  *(_QWORD *)(v5 + 592) = v68;
  *(_QWORD *)(v5 + 600) = v70;
  *(_QWORD *)(v5 + 608) = 0xD000000000000050;
  *(_QWORD *)(v5 + 616) = 0x80000001006491B0;
  *(_QWORD *)(v5 + 624) = 0xD000000000000015;
  *(_QWORD *)(v5 + 632) = 0x8000000100649190;
  *(Swift::String *)(v5 + 640) = v65;
  *(_OWORD *)(v5 + 656) = 0u;
  v71._countAndFlagsBits = 0xD000000000000011;
  v71._object = (void *)0x8000000100649270;
  v72 = localizedStringForAdsLanguage(_:)(v71);
  v74 = UUID.init()(v73);
  v75 = UUID.uuidString.getter(v74);
  v77 = v76;
  result = ((uint64_t (*)(char *, uint64_t))v14)(v3, v0);
  *(_QWORD *)(v5 + 672) = v75;
  *(_QWORD *)(v5 + 680) = v77;
  *(_QWORD *)(v5 + 688) = 0xD000000000000023;
  *(_QWORD *)(v5 + 696) = 0x8000000100649240;
  *(_QWORD *)(v5 + 704) = 0xB9B4E88D85E5;
  *(_QWORD *)(v5 + 712) = 0xA600000000000000;
  *(Swift::String *)(v5 + 720) = v72;
  *(_QWORD *)(v5 + 736) = 0xD00000000000002FLL;
  *(_QWORD *)(v5 + 744) = 0x8000000100649290;
  qword_10080CAF0 = v5;
  return result;
}

void sub_1003DB858(void *a1@<X0>, char a2@<W3>, _QWORD *a3@<X8>)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  char v13;

  v6 = (void *)objc_opt_self(JSValue);
  v7 = objc_msgSend(v6, "valueWithNewObjectInContext:", a1);
  if (v7)
  {
    v8 = v7;
    v13 = a2 & 1;
    v9 = a1;
    v10 = v8;
    v11 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v13, &type metadata for Bool);
    v12 = objc_msgSend(v6, "valueWithObject:inContext:", v11, v9);
    swift_unknownObjectRelease(v11);

    if (v12)
    {
      JSValue.subscript.setter(v12, 0xD000000000000012, 0x80000001006494A0);
      a3[3] = sub_100019574(0, &qword_10080CC50, JSValue_ptr);
      a3[4] = &protocol witness table for JSValue;

      *a3 = v10;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003DB980()
{
  static IntentModel<>.kind.getter();
  __break(1u);
}

uint64_t sub_1003DB990()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

void sub_1003DB9C4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1003DB858(a1, *(_BYTE *)(v2 + 16), a2);
}

JSValue sub_1003DB9DC(JSContext a1)
{
  return CustomJSValueConvertible._jsValue(in:)(a1);
}

uint64_t sub_1003DB9F4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1003DD270(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_1003DBA1C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  BOOL v25;
  id v26;
  Swift::String v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  void *object;
  uint64_t countAndFlagsBits;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  Swift::String v45;

  v4 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1003DB0CC();
  v40 = v9;
  v41 = v8;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  swift_bridgeObjectRetain(v9);
  _StringGuts.grow(_:)(64);
  v10._object = (void *)0x8000000100648EB0;
  v10._countAndFlagsBits = 0x1000000000000032;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0xD000000000000013;
  v11._object = (void *)0x8000000100630880;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x206562206F742022;
  v12._object = (void *)0xEC00000065757274;
  String.append(_:)(v12);
  object = v45._object;
  countAndFlagsBits = v45._countAndFlagsBits;
  PreferenceKey.init(_:)(0xD000000000000013, 0x8000000100630880, &type metadata for Bool);
  v13 = type metadata accessor for LocalPreferences(0);
  v15 = static LocalPreferences.currentApplication.getter(v14);
  Preferences.subscript.getter(&v45, v7, v13, &type metadata for Bool, &protocol witness table for LocalPreferences);
  v16 = swift_release(v15);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  v17 = v45._countAndFlagsBits;
  v18 = type metadata accessor for ASKBagContract(0);
  v19 = *(_QWORD *)(a1 + qword_100854070);
  if (v19)
  {
    v20 = swift_retain(*(_QWORD *)(a1 + qword_100854070));
    v21 = ASKBagContract.adsOverrideLanguage.getter(v20);
    if (v22)
      v23 = v21;
    else
      v23 = 0;
    if (v22)
      v24 = v22;
    else
      v24 = 0xE000000000000000;
    v25 = v23 == 0x2D736E61482D687ALL && v24 == 0xEA00000000004E43;
    v42 = a1;
    v37 = v23;
    if (v25)
      v35 = 1;
    else
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, 0x2D736E61482D687ALL, 0xEA00000000004E43, 0);
    v36 = v17 & 1;
    v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v27 = NSBundle.preferredLocalization(fromLanguageCodes:)((Swift::OpaquePointer)&off_1007212E0);

    v45 = v27;
    v43 = 26746;
    v44 = 0xE200000000000000;
    v28 = sub_1003DBD74();
    v29 = sub_1003DBDB8();
    v30 = BidirectionalCollection<>.starts<A>(with:)(&v43, &type metadata for String, &type metadata for String, v28, v29);
    swift_bridgeObjectRelease(v27._object);
    v32 = v40;
    v31 = v41;
    v45._countAndFlagsBits = v41;
    v45._object = v40;
    v43 = 0x312D313434333431;
    v44 = 0xE800000000000000;
    LOBYTE(v26) = BidirectionalCollection<>.starts<A>(with:)(&v43, &type metadata for String, &type metadata for String, v28, v29);
    swift_bridgeObjectRelease(v32);
    swift_release(v42);
    swift_release(v19);
    *(_QWORD *)a2 = v37;
    *(_QWORD *)(a2 + 8) = v24;
    *(_BYTE *)(a2 + 16) = v35 & 1;
    *(_BYTE *)(a2 + 17) = v30 & 1;
    *(_BYTE *)(a2 + 18) = v26 & 1;
    *(_QWORD *)(a2 + 24) = v31;
    *(_QWORD *)(a2 + 32) = v32;
    v33 = object;
    *(_QWORD *)(a2 + 40) = countAndFlagsBits;
    *(_QWORD *)(a2 + 48) = v33;
    *(_BYTE *)(a2 + 56) = v36;
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v18);
    __break(1u);
  }
}

unint64_t sub_1003DBD74()
{
  unint64_t result;

  result = qword_10080CB30;
  if (!qword_10080CB30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10080CB30);
  }
  return result;
}

unint64_t sub_1003DBDB8()
{
  unint64_t result;

  result = qword_10080CB38;
  if (!qword_10080CB38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10080CB38);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestCase()
{
  return &type metadata for LocalizationTestCase;
}

uint64_t destroy for LocalizationTestView(_QWORD *a1)
{
  swift_release(*a1);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

uint64_t initializeWithCopy for LocalizationTestView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
  v6 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v6;
  v7 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v8 = a2[9];
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t *assignWithCopy for LocalizationTestView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t *assignWithTake for LocalizationTestView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  v7 = a2[5];
  v8 = a1[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease(v8);
  v9 = a2[7];
  v10 = a1[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease(v10);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v11 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationTestView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationTestView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestView()
{
  return &type metadata for LocalizationTestView;
}

uint64_t sub_1003DC114(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BC800, 1);
}

uint64_t sub_1003DC124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  double (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;

  v72 = a3;
  v73 = a2;
  v4 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = __chkstk_darwin(v4);
  v69 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONObject(0, v5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v64 - v19;
  v21 = JSONObject.subscript.getter(1701667182, 0xE400000000000000, v18);
  v22 = JSONObject.string.getter(v21);
  v24 = v23;
  v25 = *(double (**)(char *, uint64_t))(v8 + 8);
  v25(v20, v7);
  if (v24)
  {
    v68 = v22;
    v27 = JSONObject.subscript.getter(0x6465746365707865, 0xE800000000000000, v26);
    v28 = JSONObject.string.getter(v27);
    v30 = v29;
    v25(v16, v7);
    v32 = v25;
    v33 = a1;
    if (v30)
    {
      v67 = v28;
      v34 = JSONObject.subscript.getter(0x6C6175746361, 0xE600000000000000, v31);
      v35 = JSONObject.string.getter(v34);
      v37 = v36;
      v32(v13, v7);
      v66 = v37;
      if (v37)
      {
        v65 = v35;
        v39 = JSONObject.subscript.getter(1702129518, 0xE400000000000000, v38);
        v64 = JSONObject.string.getter(v39);
        v41 = v40;
        v42.n128_f64[0] = v32(v10, v7);
        v43 = v69;
        v44 = UUID.init()(v42);
        v45 = UUID.uuidString.getter(v44);
        v47 = v46;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v71);
        v48 = type metadata accessor for JSONContext(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v73, v48);
        result = ((uint64_t (*)(uint64_t, uint64_t))v32)(v33, v7);
        v50 = v72;
        *v72 = v45;
        v50[1] = v47;
        v50[2] = v68;
        v50[3] = v24;
        v50[4] = v67;
        v50[5] = v30;
        v51 = v66;
        v50[6] = v65;
        v50[7] = v51;
        v50[8] = v64;
        v50[9] = v41;
        return result;
      }
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v24);
      v56 = type metadata accessor for JSONError(0);
      v61 = sub_10000E99C(&qword_10080CB48, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      swift_allocError(v56, v61, 0, 0);
      v59 = v58;
      *v58 = 0x6C6175746361;
      v60 = 0xE600000000000000;
    }
    else
    {
      swift_bridgeObjectRelease(v24);
      v56 = type metadata accessor for JSONError(0);
      v57 = sub_10000E99C(&qword_10080CB48, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      swift_allocError(v56, v57, 0, 0);
      v59 = v58;
      *v58 = 0x6465746365707865;
      v60 = 0xE800000000000000;
    }
    v58[1] = v60;
    v58[2] = &type metadata for LocalizationTestCase;
    v55 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v59, enum case for JSONError.missingProperty(_:), v56);
  }
  else
  {
    v32 = v25;
    v52 = type metadata accessor for JSONError(0);
    v53 = sub_10000E99C(&qword_10080CB48, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v52, v53, 0, 0);
    *v54 = 1701667182;
    v54[1] = 0xE400000000000000;
    v54[2] = &type metadata for LocalizationTestCase;
    v55 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v54, enum case for JSONError.missingProperty(_:), v52);
    v33 = a1;
  }
  v62 = v73;
  swift_willThrow(v55);
  v63 = type metadata accessor for JSONContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v33, v7);
}

double sub_1003DC578@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1003D9800(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003DC580()
{
  uint64_t v0;

  return sub_1003DA2A0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1003DC588()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10080CBA0;
  if (!qword_10080CBA0)
  {
    v1 = sub_100010EF8(&qword_10080CB98);
    v2 = sub_1003DC5EC();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10080CBA0);
  }
  return result;
}

unint64_t sub_1003DC5EC()
{
  unint64_t result;

  result = qword_10080CBA8;
  if (!qword_10080CBA8)
  {
    result = swift_getWitnessTable(&unk_10068A744, &type metadata for LocalizationTestResultView);
    atomic_store(result, (unint64_t *)&qword_10080CBA8);
  }
  return result;
}

uint64_t sub_1003DC630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003DA350(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003DC638()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10080CBC0;
  if (!qword_10080CBC0)
  {
    v1 = sub_100010EF8(&qword_10080CBB8);
    v2[0] = sub_100010F98(&qword_10080CBC8, &qword_10080CBD0, (const char *)&protocol conformance descriptor for IntentView<A, B, C, D>);
    v2[1] = &protocol witness table for Text;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10080CBC0);
  }
  return result;
}

uint64_t sub_1003DC6BC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[3];

  result = *a1;
  if (!result)
  {
    v6 = sub_100010EF8(a2);
    v7[0] = &protocol witness table for Text;
    v7[1] = a3();
    v7[2] = &protocol witness table for EmptyView;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003DC734(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1003DC744(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

unint64_t sub_1003DC754()
{
  unint64_t result;

  result = qword_10080CC00;
  if (!qword_10080CC00)
  {
    result = swift_getWitnessTable(&unk_10068A6F4, &type metadata for LocalizationTestIntent);
    atomic_store(result, (unint64_t *)&qword_10080CC00);
  }
  return result;
}

unint64_t sub_1003DC798()
{
  unint64_t result;

  result = qword_10080CC28;
  if (!qword_10080CC28)
  {
    result = swift_getWitnessTable(&unk_10068A588, &type metadata for LocalizationTestCase);
    atomic_store(result, (unint64_t *)&qword_10080CC28);
  }
  return result;
}

uint64_t destroy for LocalizationTestIntent(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t _s22SubscribePageExtension22LocalizationTestIntentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for LocalizationTestIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for AnimatedTransitionWithTasks.TransitionTaskAction(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizationTestIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationTestIntent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationTestIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestIntent()
{
  return &type metadata for LocalizationTestIntent;
}

uint64_t _s22SubscribePageExtension20LocalizationTestCaseVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

_QWORD *_s22SubscribePageExtension20LocalizationTestCaseVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *_s22SubscribePageExtension20LocalizationTestCaseVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

_QWORD *_s22SubscribePageExtension20LocalizationTestCaseVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t _s22SubscribePageExtension20LocalizationTestCaseVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1003DCB9C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestResultView()
{
  return &type metadata for LocalizationTestResultView;
}

uint64_t destroy for LocalizationTestPrerequisiteChecker(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationTestPrerequisiteChecker(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationTestPrerequisiteChecker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestPrerequisiteChecker()
{
  return &type metadata for LocalizationTestPrerequisiteChecker;
}

uint64_t sub_1003DCE80()
{
  _QWORD v1[2];

  v1[0] = sub_100010EF8(&qword_10080CB50);
  v1[1] = sub_100010F98(&qword_10080CB70, &qword_10080CB50, (const char *)&protocol conformance descriptor for List<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.intentDispatcher(_:with:)>>, 1);
}

unint64_t sub_1003DCEE8()
{
  unint64_t result;

  result = qword_10080CC30;
  if (!qword_10080CC30)
  {
    result = swift_getWitnessTable("}2\v", &type metadata for LocalizationTestIntent);
    atomic_store(result, (unint64_t *)&qword_10080CC30);
  }
  return result;
}

unint64_t sub_1003DCF34()
{
  unint64_t result;

  result = qword_10080CC38;
  if (!qword_10080CC38)
  {
    result = swift_getWitnessTable(&unk_10068A6C4, &type metadata for LocalizationTestResponse);
    atomic_store(result, (unint64_t *)&qword_10080CC38);
  }
  return result;
}

uint64_t sub_1003DCF78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BC844, 1);
}

uint64_t sub_1003DCF88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 136);
  sub_1003DC734(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_1003DD040(v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1003DD0A8(v15, v14, v13, v12);
  return a1;
}

double sub_1003DD040(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v12;
  double result;

  if (a4)
  {
    v12 = a7 & 1;
    sub_1003DC734(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    sub_1003DC734(a5, a6, v12);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a8).n128_u64[0];
  }
  return result;
}

double sub_1003DD0A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1003DC734(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003DD0D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 136);
  sub_1003DC744(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_1003DD190(v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1003DD1F8(v15, v14, v13, v12);
  return a1;
}

double sub_1003DD190(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v12;
  double result;

  if (a4)
  {
    v12 = a7 & 1;
    sub_1003DC744(a1, a2, a3 & 1);
    swift_bridgeObjectRelease(a4);
    sub_1003DC744(a5, a6, v12);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a8).n128_u64[0];
  }
  return result;
}

double sub_1003DD1F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1003DC744(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003DD228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_10080E240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DD270(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  unint64_t v33;
  void (*v35)(uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v39 = a2;
  v3 = type metadata accessor for JSONContext(0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  __chkstk_darwin(v3);
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_10080CC40);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONObject(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for JSONArray(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v35 - v20;
  v40 = a1;
  v22 = JSONObject.subscript.getter(0x6573614374736574, 0xE900000000000073, v19);
  JSONObject.array.getter(v22);
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    sub_1003DD57C((uint64_t)v8);
    v24 = type metadata accessor for JSONError(0);
    v25 = sub_10000E99C(&qword_10080CB48, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v24, v25, 0, 0);
    *v26 = 0x6573614374736574;
    v26[1] = 0xE900000000000073;
    v26[2] = &type metadata for LocalizationTestResponse;
    v27 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, enum case for JSONError.missingProperty(_:), v24);
    swift_willThrow(v27);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
    v23(v40, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v8, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v21, v14);
    v29 = v37;
    v28 = v38;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v35 = (void (*)(uint64_t, uint64_t))v23;
    v31 = v36;
    v32 = v39;
    v30(v36, v39, v38);
    v33 = sub_1003DD5BC();
    v24 = Array<A>.init(tryDeserializing:using:)(v17, v31, &type metadata for LocalizationTestCase, v33);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
    v35((uint64_t)v40, v9);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
  }
  return v24;
}

uint64_t sub_1003DD57C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_10080CC40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003DD5BC()
{
  unint64_t result;

  result = qword_10080CC48;
  if (!qword_10080CC48)
  {
    result = swift_getWitnessTable(&unk_10068A5C0, &type metadata for LocalizationTestCase);
    atomic_store(result, (unint64_t *)&qword_10080CC48);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestResponse()
{
  return &type metadata for LocalizationTestResponse;
}

uint64_t sub_1003DD610()
{
  return sub_100010F98(&qword_10080CC58, &qword_10080CC60, (const char *)&protocol conformance descriptor for HStack<A>);
}

void sub_1003DD640(void *a1, uint64_t a2, __n128 a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _UNKNOWN **v21;
  SEL *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  __n128 v28;
  Swift::String v29;
  __n128 v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  double *v35;
  id v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  char *v51;
  BOOL v52;
  void *v53;
  char *v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  char *v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  SEL *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t i;
  id v76;
  void *v77;
  unint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  Swift::String v88;
  __n128 v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  NSString v94;
  id v95;
  Class isa;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[2];
  uint64_t v106;
  char **v107;
  id v108;
  id v109;
  uint64_t v110;
  _UNKNOWN **v111;
  uint64_t v112;
  unint64_t v113;
  id v114;
  _UNKNOWN **v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  void **updated;
  unint64_t v120;
  void **aBlock;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, void *);
  _QWORD *v124;
  uint64_t (*v125)(char, uint64_t);
  uint64_t v126;
  _QWORD v127[3];
  char v128[16];

  v108 = a5;
  v11 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char **)type metadata accessor for OSLogger(0, v12);
  v16 = (uint64_t)*(v15 - 1);
  __chkstk_darwin(v15);
  v18 = (char *)v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (a2)
    {
      v61 = a2;
    }
    else
    {
      v78 = sub_1003DEC0C();
      v61 = swift_allocError(&type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError, v78, 0, 0);
      *v79 = 1;
    }
    swift_errorRetain(a2);
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v80 = sub_1000117A8((uint64_t)v15, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, char **))(v16 + 16))(v18, v80, v15);
    v81 = sub_10000DF3C(&qword_1007FD430);
    v82 = type metadata accessor for LogMessage(0);
    v83 = swift_allocObject(v81, ((*(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v82 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80) | 7);
    *(_OWORD *)(v83 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 1);
    v84._countAndFlagsBits = 0xD000000000000030;
    v84._object = (void *)0x8000000100649580;
    LogMessage.StringInterpolation.appendLiteral(_:)(v84);
    swift_getErrorValue(v61, v128, v127);
    v85 = Error.localizedDescription.getter(v127[1], v127[2]);
    v124 = &type metadata for String;
    aBlock = (void **)v85;
    v122 = v86;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v87);
    sub_1000131E0((uint64_t)&aBlock);
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v88);
    LogMessage.init(stringInterpolation:)(v14);
    Logger.info(_:)(v83, v15, &protocol witness table for OSLogger);
    v89 = swift_bridgeObjectRelease(v83);
    (*(void (**)(char *, char **, __n128))(v16 + 8))(v18, v15, v89);
    Promise.reject(_:)(v61);
    swift_errorRelease(v61);
    return;
  }
  v105[1] = a6;
  v105[0] = a7;
  v19 = (char *)0xD000000000000012;
  v20 = swift_allocObject(&unk_10073D9A8, 24, 7);
  v106 = v20;
  *(_QWORD *)(v20 + 16) = _swiftEmptyArrayStorage;
  v116 = (uint64_t *)(v20 + 16);
  v109 = a1;
  v21 = (_UNKNOWN **)&unk_10066F000;
  v22 = (SEL *)&selRef_setInterGroupSpacing_;
  updated = (void **)UpdateGranularNotificationSettingsAction.settingIDs.getter();
  if (!updated)
  {
    if (qword_1007F3450 != -1)
      goto LABEL_94;
    goto LABEL_58;
  }
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v23 = sub_1000117A8((uint64_t)v15, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, char **))(v16 + 16))(v18, v23, v15);
  v24 = sub_10000DF3C(&qword_1007FD430);
  v25 = type metadata accessor for LogMessage(0);
  v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) | 7);
  *(_OWORD *)(v26 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(77, 1);
  v27._countAndFlagsBits = 0xD00000000000004DLL;
  v27._object = (void *)0x8000000100649610;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  v124 = (_QWORD *)sub_10000DF3C(&qword_100802220);
  aBlock = updated;
  v28 = swift_bridgeObjectRetain(updated);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v28);
  sub_1000131E0((uint64_t)&aBlock);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  LogMessage.init(stringInterpolation:)(v14);
  Logger.info(_:)(v26, v15, &protocol witness table for OSLogger);
  v30 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, char **, __n128))(v16 + 8))(v18, v15, v30);
  v31 = objc_msgSend(v109, "sections");
  v32 = sub_100019574(0, &qword_10080CC78, AMSNotificationSettingsSection_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v103 = v33;
    else
      v103 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v21 = (_UNKNOWN **)_CocoaArrayWrapper.endIndex.getter(v103);
  }
  else
  {
    v21 = *(_UNKNOWN ***)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
  }
  if (v21)
  {
    v34 = 0;
    v113 = v33 & 0xC000000000000001;
    v110 = v33 + 32;
    v107 = (char **)(updated + 9);
    v111 = v21;
    v112 = v33;
    while (1)
    {
      if (v113)
      {
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v33);
        v37 = __OFADD__(v34, 1);
        v38 = (uint64_t)v34 + 1;
        if (v37)
          goto LABEL_81;
      }
      else
      {
        v36 = *(id *)(v110 + 8 * (_QWORD)v34);
        v37 = __OFADD__(v34, 1);
        v38 = (uint64_t)v34 + 1;
        if (v37)
          goto LABEL_81;
      }
      v114 = v36;
      v115 = (_UNKNOWN **)v38;
      v39 = objc_msgSend(v36, "items");
      v40 = sub_100019574(0, &qword_1007F49E0, AMSNotificationSettingsItem_ptr);
      v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);

      aBlock = (void **)_swiftEmptyArrayStorage;
      if (!((unint64_t)v41 >> 62))
      {
        v22 = *(SEL **)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v22)
          break;
        goto LABEL_53;
      }
      v60 = v41 < 0 ? v41 : v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v41);
      v22 = (SEL *)_CocoaArrayWrapper.endIndex.getter(v60);
      swift_bridgeObjectRelease(v41);
      if (v22)
        break;
LABEL_53:
      swift_bridgeObjectRelease(v41);
      v35 = _swiftEmptyArrayStorage;
LABEL_10:
      sub_100019ED8((uint64_t)v35);

      v34 = v115;
      if (v115 == v21)
        goto LABEL_56;
    }
    v38 = 0;
    v21 = (_UNKNOWN **)updated[2];
    v120 = v41 & 0xC000000000000001;
    v117 = v41 + 32;
    v118 = v41 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      while (1)
      {
        if (v120)
        {
          v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v41);
        }
        else
        {
          if ((unint64_t)v38 >= *(_QWORD *)(v118 + 16))
            goto LABEL_79;
          v45 = (char *)*(id *)(v117 + 8 * v38);
        }
        v19 = v45;
        v37 = __OFADD__(v38++, 1);
        if (v37)
        {
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        v15 = (char **)objc_msgSend(v45, "identifier");
        v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v48 = v47;

        if (v21)
          break;

        swift_bridgeObjectRelease(v48);
        if ((SEL *)v38 == v22)
          goto LABEL_9;
      }
      v49 = v41;
      v50 = updated[4];
      v51 = (char *)updated[5];
      v52 = v50 == (void *)v46 && v51 == v48;
      if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v46, v48, 0) & 1) == 0)
      {
        if (v21 == (_UNKNOWN **)1)
          goto LABEL_35;
        v53 = updated[6];
        v54 = (char *)updated[7];
        if ((v53 != (void *)v46 || v54 != v48)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, v46, v48, 0) & 1) == 0)
        {
          break;
        }
      }
LABEL_21:
      swift_bridgeObjectRelease(v48);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v43 = aBlock[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v19);
      specialized ContiguousArray._endMutation()(v44);
LABEL_22:
      v41 = v49;
      if ((SEL *)v38 == v22)
      {
LABEL_9:
        swift_bridgeObjectRelease(v41);
        v35 = (double *)aBlock;
        v21 = v111;
        v33 = v112;
        goto LABEL_10;
      }
    }
    if (v21 != (_UNKNOWN **)2)
    {
      v15 = v107;
      v55 = 2;
      do
      {
        v56 = (_UNKNOWN **)(v55 + 1);
        if (__OFADD__(v55, 1))
          goto LABEL_80;
        v57 = (uint64_t)*(v15 - 1);
        v58 = *v15;
        v59 = v57 == v46 && v58 == v48;
        if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v46, v48, 0) & 1) != 0)
          goto LABEL_21;
        v15 += 2;
        ++v55;
      }
      while (v56 != v21);
    }
LABEL_35:

    swift_bridgeObjectRelease(v48);
    goto LABEL_22;
  }
LABEL_56:
  swift_bridgeObjectRelease(updated);
  while (1)
  {
    swift_bridgeObjectRelease_n(v33, 2);
    v38 = *v116;
    if ((unint64_t)*v116 >> 62)
    {
LABEL_82:
      if (v38 < 0)
        v90 = v38;
      else
        v90 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v38, 2);
      v74 = _CocoaArrayWrapper.endIndex.getter(v90);
      if (!v74)
        goto LABEL_86;
    }
    else
    {
      v74 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*v116, 2);
      if (!v74)
        goto LABEL_86;
    }
    if (v74 >= 1)
      break;
    __break(1u);
LABEL_94:
    swift_once(&qword_1007F3450, sub_10060243C);
LABEL_58:
    sub_1000117A8((uint64_t)v15, (uint64_t)qword_100857618);
    v62 = sub_10000DF3C(&qword_1007FD430);
    v63 = type metadata accessor for LogMessage(0);
    v64 = swift_allocObject(v62, ((*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) | 7);
    *(_OWORD *)(v64 + 16) = *((_OWORD *)v21 + 186);
    LogMessage.init(stringLiteral:)(v19 + 58, 0x80000001006495C0);
    Logger.info(_:)(v64, v15, &protocol witness table for OSLogger);
    *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
    v66 = objc_msgSend(v109, v22[289], v65);
    v67 = sub_100019574(0, &qword_10080CC78, AMSNotificationSettingsSection_ptr);
    v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v67);

    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v104 = v33;
      else
        v104 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      v68 = _CocoaArrayWrapper.endIndex.getter(v104);
      if (v68)
      {
LABEL_60:
        if (v68 < 1)
        {
          __break(1u);
          return;
        }
        v69 = 0;
        v19 = (char *)v33;
        v15 = &selRef_setInterGroupSpacing_;
        v21 = AMSNotificationSettingsItem_ptr;
        do
        {
          if ((v33 & 0xC000000000000001) != 0)
            v70 = (SEL *)specialized _ArrayBuffer._getElementSlowPath(_:)(v69, v33);
          else
            v70 = (SEL *)*(id *)(v33 + 8 * v69 + 32);
          v22 = v70;
          ++v69;
          v71 = -[SEL items](v70, "items");
          v72 = sub_100019574(0, &qword_1007F49E0, AMSNotificationSettingsItem_ptr);
          v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v71, v72);

          sub_100019ED8(v73);
        }
        while (v68 != v69);
      }
    }
    else
    {
      v68 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v33);
      if (v68)
        goto LABEL_60;
    }
  }
  for (i = 0; i != v74; ++i)
  {
    if ((v38 & 0xC000000000000001) != 0)
      v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
    else
      v76 = *(id *)(v38 + 8 * i + 32);
    v77 = v76;
    objc_msgSend(v76, "setEnabled:", 1);

  }
LABEL_86:
  swift_bridgeObjectRelease_n(v38, 2);
  v91 = v108;
  v92 = ASKBagContract.amsBag.getter(v91);
  v93 = objc_allocWithZone((Class)AMSNotificationSettingsTask);
  v94 = String._bridgeToObjectiveC()();
  v95 = objc_msgSend(v93, "initWithIdentifier:account:bag:", v94, v91, v92);

  swift_unknownObjectRelease(v92);
  sub_100019574(0, &qword_1007F49E0, AMSNotificationSettingsItem_ptr);
  swift_bridgeObjectRetain(v38);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v97 = objc_msgSend(v95, "updateSettings:", isa, swift_bridgeObjectRelease(v38).n128_f64[0]);

  if (v97)
  {
    v98 = swift_allocObject(&unk_10073D9D0, 32, 7);
    v99 = v106;
    v100 = v105[0];
    *(_QWORD *)(v98 + 16) = v106;
    *(_QWORD *)(v98 + 24) = v100;
    v125 = sub_1003DED00;
    v126 = v98;
    aBlock = _NSConcreteStackBlock;
    v122 = 1107296256;
    v123 = sub_100442B30;
    v124 = &unk_10073D9E8;
    v101 = _Block_copy(&aBlock);
    v102 = v126;
    swift_retain(v99);
    swift_retain(v100);
    objc_msgSend(v97, "addFinishBlock:", v101, swift_release(v102).n128_f64[0]);

    _Block_release(v101);
    swift_release(v99);

  }
  else
  {
    swift_release(v106);

  }
}

uint64_t sub_1003DE254(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  __n128 v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  _BYTE v52[8];
  _BYTE v53[24];
  _QWORD v54[3];
  _QWORD *v55;

  v49 = type metadata accessor for ActionOutcome(0);
  v8 = *(_QWORD *)(v49 - 8);
  v9 = __chkstk_darwin(v49);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LogMessage.StringInterpolation(0, v9);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OSLogger(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)(a3 + 16);
  v50 = a4;
  if ((a1 & 1) != 0)
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v21 = sub_1000117A8(v16, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v21, v16);
    v22 = sub_10000DF3C(&qword_1007FD430);
    v23 = type metadata accessor for LogMessage(0);
    v24 = swift_allocObject(v22, ((*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) | 7);
    *(_OWORD *)(v24 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(55, 1);
    v25._countAndFlagsBits = 0xD000000000000037;
    v25._object = (void *)0x8000000100649690;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    swift_beginAccess(v20, v53, 0, 0);
    v26 = *v20;
    v55 = (_QWORD *)sub_10000DF3C(&qword_1007F49E8);
    v54[0] = v26;
    v27 = swift_bridgeObjectRetain(v26);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v54, v27);
    sub_1000131E0((uint64_t)v54);
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)(v15);
    Logger.info(_:)(v24, v16, &protocol witness table for OSLogger);
    v29 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v29);
    v30 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for ActionOutcome.performed(_:), v49);
    Promise.resolve(_:)(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v30);
  }
  else
  {
    if (a2)
    {
      v32 = a2;
    }
    else
    {
      v33 = sub_1003DEC0C();
      v32 = swift_allocError(&type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError, v33, 0, 0);
      *v34 = 2;
    }
    swift_errorRetain(a2);
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v35 = sub_1000117A8(v16, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v35, v16);
    v36 = sub_10000DF3C(&qword_1007FD430);
    v37 = type metadata accessor for LogMessage(0);
    v38 = swift_allocObject(v36, ((*(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80) | 7);
    *(_OWORD *)(v38 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(54, 2);
    v39._object = (void *)0x8000000100649660;
    v39._countAndFlagsBits = 0xD00000000000002DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    swift_beginAccess(v20, v53, 0, 0);
    v40 = *v20;
    v55 = (_QWORD *)sub_10000DF3C(&qword_1007F49E8);
    v54[0] = v40;
    v41 = swift_bridgeObjectRetain(v40);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v54, v41);
    sub_1000131E0((uint64_t)v54);
    v42._countAndFlagsBits = 0x3A726F727245202ELL;
    v42._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    swift_getErrorValue(v32, v52, v51);
    v43 = Error.localizedDescription.getter(v51[1], v51[2]);
    v55 = &type metadata for String;
    v54[0] = v43;
    v54[1] = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v54, v45);
    sub_1000131E0((uint64_t)v54);
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    LogMessage.init(stringInterpolation:)(v15);
    Logger.info(_:)(v38, v16, &protocol witness table for OSLogger);
    v47 = swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v47);
    Promise.reject(_:)(v32);
    return swift_errorRelease(v32);
  }
}

uint64_t sub_1003DE704(uint64_t *a1, uint64_t a2, __n128 a3)
{
  return sub_1003DE70C(*a1, a2, a3);
}

uint64_t sub_1003DE70C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  id v24;
  __n128 v25;
  Swift::String v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  id aBlock[3];
  void *v52;
  void (*v53)(void *, uint64_t, __n128);
  _QWORD *v54;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_100803510);
  v14 = Promise.__allocating_init()(v13);
  v15 = sub_100019574(0, (unint64_t *)&qword_100800130, ACAccountStore_ptr);
  v16 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(aBlock, v15, a2, v15, v16);
  v17 = aBlock[0];
  v18 = objc_msgSend(aBlock[0], "ams_activeiTunesAccount");

  if (!v18)
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    sub_1000117A8(v9, (uint64_t)qword_100857618);
    v42 = sub_10000DF3C(&qword_1007FD430);
    v43 = type metadata accessor for LogMessage(0);
    v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
    *(_OWORD *)(v44 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000043, 0x80000001006494C0);
    Logger.info(_:)(v44, v9, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v44);
    v45 = sub_1003DEC0C();
    v46 = swift_allocError(&type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError, v45, 0, 0);
    *v47 = 0;
    Promise.reject(_:)(v46);
    swift_errorRelease(v46);
    return v14;
  }
  v49 = a1;
  v50 = v14;
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v19 = sub_1000117A8(v9, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v19, v9);
  v20 = sub_10000DF3C(&qword_1007FD430);
  v21 = type metadata accessor for LogMessage(0);
  v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
  *(_OWORD *)(v22 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 1);
  v23._countAndFlagsBits = 0xD00000000000002DLL;
  v23._object = (void *)0x8000000100649510;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  v52 = (void *)sub_100019574(0, &qword_10080CC70, ACAccount_ptr);
  aBlock[0] = v18;
  v24 = v18;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock, v25);
  sub_1000131E0((uint64_t)aBlock);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.info(_:)(v22, v9, &protocol witness table for OSLogger);
  v27 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
  v28 = type metadata accessor for ASKBagContract(0);
  v29 = *(_QWORD *)(a2 + qword_100854070);
  if (v29)
  {
    v30 = v24;
    swift_retain(v29);
    v32 = ASKBagContract.amsBag.getter(v31);
    v33 = objc_allocWithZone((Class)AMSNotificationSettingsTask);
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "initWithIdentifier:account:bag:", v34, v30, v32);

    v36 = objc_msgSend(v35, "fetchAllSettings", swift_unknownObjectRelease(v32).n128_f64[0]);
    v37 = (_QWORD *)swift_allocObject(&unk_10073D958, 48, 7);
    v38 = v49;
    v14 = v50;
    v37[2] = v49;
    v37[3] = v30;
    v37[4] = v29;
    v37[5] = v14;
    v53 = sub_1003DEC8C;
    v54 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1000D1840;
    v52 = &unk_10073D970;
    v39 = _Block_copy(aBlock);
    v40 = v54;
    v41 = v30;
    swift_retain(v29);
    swift_retain(v38);
    swift_retain(v14);
    objc_msgSend(v36, "addFinishBlock:", v39, swift_release(v40).n128_f64[0]);
    _Block_release(v39);

    swift_release(v29);
    return v14;
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v28);
  __break(1u);
  return result;
}

unint64_t sub_1003DEC0C()
{
  unint64_t result;

  result = qword_10080CC68;
  if (!qword_10080CC68)
  {
    result = swift_getWitnessTable(&unk_10068A8B0, &type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080CC68);
  }
  return result;
}

uint64_t sub_1003DEC50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003DEC8C(void *a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  sub_1003DD640(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1003DEC98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003DECA8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003DECB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DECD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DED00(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003DE254(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t storeEnumTagSinglePayload for UpdateGranularNotificationSettingsActionImplementation.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003DED54 + 4 * byte_10068A7C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003DED88 + 4 * asc_10068A7C0[v4]))();
}

uint64_t sub_1003DED88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DED90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DED98);
  return result;
}

uint64_t sub_1003DEDA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DEDACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003DEDB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DEDB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateGranularNotificationSettingsActionImplementation.ImplementationError()
{
  return &type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError;
}

ValueMetadata *type metadata accessor for UpdateGranularNotificationSettingsActionImplementation()
{
  return &type metadata for UpdateGranularNotificationSettingsActionImplementation;
}

unint64_t sub_1003DEDE8()
{
  unint64_t result;

  result = qword_10080CC80;
  if (!qword_10080CC80)
  {
    result = swift_getWitnessTable(&unk_10068A888, &type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080CC80);
  }
  return result;
}

unint64_t sub_1003DEE30()
{
  unint64_t result;
  uint64_t updated;

  result = qword_10080CC88;
  if (!qword_10080CC88)
  {
    updated = type metadata accessor for UpdateGranularNotificationSettingsAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, updated);
    atomic_store(result, (unint64_t *)&qword_10080CC88);
  }
  return result;
}

char *sub_1003DEE80(char *a1, uint64_t *a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  Class isa;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[16];

  v9 = a2[2];
  v47 = a2[1];
  v48 = *a2;
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  v45 = a2[7];
  v46 = a2[6];
  v43 = a2[9];
  v44 = a2[8];
  v41 = a2[11];
  v42 = a2[10];
  v13 = a2[14];
  v39 = a2[13];
  v40 = a2[12];
  v14 = &v4[OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView];
  v15 = a2[15];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView], 0);
  v16 = OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_videoLayer;
  v17 = objc_allocWithZone((Class)AVPlayerLayer);
  v18 = v4;
  *(_QWORD *)&v4[v16] = objc_msgSend(v17, "init");
  swift_unknownObjectWeakAssign(v14, a1);

  if (a1)
  {
    v19 = *(void **)&a1[qword_10080FD18];
    v20 = v19;
  }
  else
  {
    v19 = 0;
  }
  v21 = sub_1001DF320(v19, a2, a3, a4);
  objc_msgSend(v21, "setClipsToBounds:", 1);
  objc_msgSend(v21, "setUserInteractionEnabled:", 0);
  v22 = OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_videoLayer;
  v23 = *(void **)&v21[OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_videoLayer];
  objc_msgSend(v23, "setAnchorPoint:", 0.5, 0.5);
  v24 = qword_1007F1678;
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_1007F1678, sub_1001DF0F0);
  sub_10000DF3C((uint64_t *)&unk_100819F60);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "setActions:", isa);

  v27 = *(void **)&v21[v22];
  v28 = (void *)objc_opt_self(UIScreen);
  v29 = v27;
  v30 = objc_msgSend(v28, "mainScreen");
  objc_msgSend(v30, "scale");
  v32 = v31;

  objc_msgSend(v29, "setContentsScale:", v32);
  v33 = *(void **)&v21[v22];
  objc_msgSend(v33, "setMasksToBounds:", 1);
  objc_msgSend(v33, "setContentsGravity:", kCAGravityResizeAspectFill);
  v49[0] = v48;
  v49[1] = v47;
  v49[2] = v9;
  v49[3] = v10;
  v49[4] = v11;
  v49[5] = v12;
  v49[6] = v46;
  v49[7] = v45;
  v49[8] = v44;
  v49[9] = v43;
  v49[10] = v42;
  v49[11] = v41;
  v49[12] = v40;
  v49[13] = v39;
  v49[14] = v13;
  v49[15] = v15;
  objc_msgSend(v33, "setTransform:", v49);
  sub_1003DF884();
  v34 = objc_msgSend(v21, "layer");
  v35 = *(void **)&v21[OBJC_IVAR____TtC22SubscribePageExtension10MirrorView_artworkLayer];
  v36 = v33;
  v37 = v35;
  objc_msgSend(v34, "insertSublayer:below:", v36, v37);

  return v21;
}

void sub_1003DF1F8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + qword_10080FD10);

    if (v6)
    {
      swift_unknownObjectRelease(v6);
      if (v6 == v1)
      {
        v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
        if (v7)
        {
          v8 = v7;

          if (a1 && v8 == a1)
            return;
        }
        else if (!a1)
        {
          return;
        }
        v9 = swift_unknownObjectWeakLoadStrong(v3);
        if (v9)
        {
          v17 = (char *)v9;
          v10 = v9 + qword_10080FD10;
          *(_QWORD *)(v10 + 8) = 0;
          v11 = swift_unknownObjectWeakAssign(v10, 0);
          v12 = *(void **)&v17[qword_10080FD38];
          if (v12 && (v13 = swift_unknownObjectWeakLoadStrong(v11)) != 0)
          {
            v14 = v13;
            v15 = *(void **)(v13 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_videoLayer);
            v16 = v12;
            objc_msgSend(v15, "setPlayer:", v16);

            swift_unknownObjectRelease(v14);
          }
          else
          {

          }
        }
      }
    }
  }
}

void sub_1003DF36C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  v2 = v1 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView);
  sub_1003DF1F8(a1);
  v4 = swift_unknownObjectWeakAssign(v2, a1);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (v5)
  {
    v6 = v5;
    if (Strong)
    {
      type metadata accessor for VideoView(0);
      v7 = Strong;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
    else
    {

    }
  }
  else if (!Strong)
  {
    goto LABEL_10;
  }
  sub_1003DF884();
  v7 = Strong;
LABEL_9:

LABEL_10:
}

double sub_1003DF608(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  void *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char *v31;
  char v32[24];

  v5 = v4;
  v8 = type metadata accessor for VideoConfiguration(0, a4);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v12);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v31 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v18);
  v20 = &v32[-v19 - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView);
  if (Strong)
  {
    v22 = (void *)Strong;
    v23 = Strong + qword_100856360;
    v24 = swift_beginAccess(Strong + qword_100856360, v32, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v23, v8, v24);

    VideoConfiguration.aspectRatio.getter(v25);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v14, v15);
      a1 = AspectRatio.maxSize(filling:)(a1, a2);
LABEL_8:
      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
      return a1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_100098884((uint64_t)v14);
  v26 = (void *)swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC22SubscribePageExtension10MirrorView_sourceImageView);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, "image");

    if (v28)
    {
      v29 = objc_msgSend(v28, "size");
      v20 = v31;
      AspectRatio.init(_:_:)(v29);
      a1 = AspectRatio.maxSize(filling:)(a1, a2);

      goto LABEL_8;
    }
  }
  return a1;
}

void sub_1003DF884()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  NSString *v27;
  NSString *v28;
  NSString *v29;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView]);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + qword_10080FD18);

  }
  else
  {
    v4 = 0;
  }
  v5 = v4;
  sub_1001DF8D0(v4);

  v6 = swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = v6 + qword_10080FD10;
    *(_QWORD *)(v8 + 8) = &off_10073DB48;
    v9 = swift_unknownObjectWeakAssign(v8, v0);
    v10 = *(void **)&v7[qword_10080FD38];
    if (v10 && (v11 = swift_unknownObjectWeakLoadStrong(v9)) != 0)
    {
      v12 = v11;
      v13 = *(void **)(v11 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_videoLayer);
      v14 = v0;
      v15 = v10;
      objc_msgSend(v13, "setPlayer:", v15);

      swift_unknownObjectRelease(v12);
    }
    else
    {

    }
  }
  v16 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_videoLayer];
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  v18 = v17;
  if (v17)
  {
    v19 = objc_msgSend(v17, "backgroundColor");

    if (v19)
    {
      v18 = objc_msgSend(v19, "CGColor");

    }
    else
    {
      v18 = 0;
    }
  }
  objc_msgSend(v16, "setBackgroundColor:", v18);

  v20 = swift_unknownObjectWeakLoadStrong(v1);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = *(id *)(v20 + qword_10080FD38);

  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v16, "setPlayer:", v22);

  v23 = swift_unknownObjectWeakLoadStrong(v1);
  if (v23
    && (v24 = (void *)v23, v25 = *(void **)(v23 + qword_10080FD40), v26 = v25, v24, v25))
  {
    v28 = (NSString *)objc_msgSend(v26, "videoGravity");

    v27 = v28;
  }
  else
  {
    v27 = AVLayerVideoGravityResizeAspectFill;
  }
  v29 = v27;
  objc_msgSend(v16, "setVideoGravity:");

}

void sub_1003DFAF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC22SubscribePageExtension15VideoMirrorView_sourceVideoView);

}

id sub_1003DFB24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMirrorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoMirrorView()
{
  return objc_opt_self(_TtC22SubscribePageExtension15VideoMirrorView);
}

uint64_t type metadata accessor for ShelfBasedAdPageScrollActionRunner(uint64_t a1)
{
  uint64_t result;

  result = qword_10080CCD0;
  if (!qword_10080CCD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShelfBasedAdPageScrollActionRunner);
  return result;
}

uint64_t sub_1003DFBE8(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_100854580);
}

uint64_t sub_1003DFC34(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + qword_100854060);
  if (v4)
  {
    v32 = *(_QWORD *)(a1 + qword_100854060 + 8);
    v5 = type metadata accessor for UnimplementedAdvertInteractionMetricsReporter(0);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    swift_retain(v2);
    v6 = swift_unknownObjectRetain(v4);
    v30 = UnimplementedAdvertInteractionMetricsReporter.init()(v6);
    v7 = sub_10000DF3C(&qword_1007F7D28);
    v8 = sub_10000DF3C(&qword_1007F7D30);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(unsigned __int8 *)(v9 + 80);
    v31 = v4;
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(v7, v12 + 2 * v10, v11 | 7);
    *(_OWORD *)(v13 + 16) = xmmword_10066F870;
    v14 = (uint64_t *)(v13 + v12 + *(int *)(v8 + 48));
    v15 = enum case for AdvertActionMetrics.ReportingDestination.promotedContent(_:);
    v16 = type metadata accessor for AdvertActionMetrics.ReportingDestination(0);
    v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v13 + v12, v15, v16);
    v14[3] = v5;
    v14[4] = (uint64_t)&protocol witness table for UnimplementedAdvertInteractionMetricsReporter;
    *v14 = v30;
    v18 = (uint64_t *)(v13 + v12 + v10 + *(int *)(v8 + 48));
    v17();
    v19 = type metadata accessor for SearchAdsAdvertInteractionMetricsReporter();
    v20 = swift_allocObject(v19, 32, 7);
    v21 = (void *)objc_opt_self(ADMetricManager);
    swift_unknownObjectRetain(v31);
    *(_QWORD *)(v20 + 16) = objc_msgSend(v21, "sharedInstance", swift_retain(v30).n128_f64[0]);
    v22 = type metadata accessor for SearchAdsButtonStateProvider();
    v23 = swift_allocObject(v22, 32, 7);
    *(_QWORD *)(v23 + 16) = v31;
    *(_QWORD *)(v23 + 24) = v32;
    *(_QWORD *)(v20 + 24) = v23;
    v18[3] = v19;
    v18[4] = sub_1001BB370();
    *v18 = v20;
    v24 = sub_10036981C(v13);
    v25 = type metadata accessor for AdvertActionMetricsHandler(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    *(_QWORD *)(v3 + qword_10080CCC8) = AdvertActionMetricsHandler.init(reporters:)(v24);
    swift_release(v3);
    v26 = swift_unknownObjectUnownedInit(v3 + qword_100813CA8, a2);
    v27 = ActionRunner.init()(v26);
    swift_unknownObjectRelease(v31);
    swift_release(v30);
    swift_release(a1);

    return v27;
  }
  else
  {
    v29 = sub_10000DF3C(&qword_1007FDEA0);
    swift_retain(v2);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v29);
    __break(1u);
  }
  return result;
}

double sub_1003DFEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double result;
  uint64_t v19;
  __int128 v20[2];
  uint64_t v21;
  uint64_t Strong;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for ShelfBasedPageScrollAction(0);
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = v8;
    Strong = swift_unknownObjectUnownedLoadStrong(v3 + qword_100813CA8);
    v10 = sub_1001BB3B8();
    swift_retain(a1);
    v11 = sub_10000DF3C(&qword_1008054B8);
    if (swift_dynamicCast(v20, &Strong, v10, v11, 6))
    {
      sub_100010F3C(v20, (uint64_t)v23);
      v12 = v24;
      v13 = v25;
      sub_100011064(v23, v24);
      v14 = type metadata accessor for ObjectGraph(0);
      v15 = swift_dynamicCastClassUnconditional(a3, v14, 0, 0, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v9, a2, v15, v12, v13);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v23);
    }
    else
    {
      v21 = 0;
      memset(v20, 0, sizeof(v20));
      sub_1003E00F8((uint64_t)v20);
    }
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  else
  {
    v16 = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100813CA8);
    v17 = objc_msgSend(v16, "nextResponder");

    if (v17)
    {
      v19 = UIResponder.nearestActionRunner.getter();

      if (v19)
      {
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a1, a2, a3);
        *(_QWORD *)&result = swift_release(v19).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_1003E0090()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_10080CCC8));
}

uint64_t sub_1003E00A0()
{
  uint64_t v0;

  v0 = ActionRunner.deinit();
  swift_unknownObjectUnownedDestroy(v0 + qword_100813CA8);
  swift_release(*(_QWORD *)(v0 + qword_10080CCC8));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1003E00F0()
{
  return type metadata accessor for ShelfBasedAdPageScrollActionRunner(0);
}

uint64_t sub_1003E00F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1008054C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003E0138()
{
  qword_10080CD20 = 0x4034000000000000;
}

uint64_t sub_1003E0148(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_10080CD28);
  sub_1000117A8(v5, (uint64_t)qword_10080CD28);
  if (qword_1007F26E8 != -1)
    swift_once(&qword_1007F26E8, sub_100416F28);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_1008559A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 20.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_1003E0294()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100045464(v0, qword_10080CD40);
  v1 = sub_1000117A8(v0, (uint64_t)qword_10080CD40);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

void sub_1003E02E4()
{
  qword_10080CD58 = 0x4070000000000000;
}

void sub_1003E02F4()
{
  qword_10080CD60 = 0x4067800000000000;
}

char *sub_1003E0308(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_lockupView;
  v13 = objc_allocWithZone((Class)type metadata accessor for AppShowcaseLockupView(0));
  v14 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit(&v14[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView]);
  v15 = &v14[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_showcaseType];
  v16 = enum case for AppShowcaseType.large(_:);
  v17 = type metadata accessor for AppShowcaseType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);

  v23.receiver = v14;
  v23.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v20 = objc_msgSend(v18, "contentView");
  v21 = *(id *)&v18[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_lockupView];
  objc_msgSend(v20, "addSubview:", v21);

  return v18;
}

uint64_t sub_1003E0624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  char v20;
  _BYTE v23[24];

  v3 = type metadata accessor for VideoConfiguration(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for AspectRatio(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_5;
  }
  v15 = (void *)Strong;
  v16 = Strong + qword_100856360;
  v17 = swift_beginAccess(Strong + qword_100856360, v23, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v16, v3, v17);

  VideoConfiguration.aspectRatio.getter(v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_5:
    sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007FA760);
    v20 = 0;
    return v20 & 1;
  }
  v19.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v20 = AspectRatio.isLandscape.getter(v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20 & 1;
}

void sub_1003E07FC()
{
  char *v0;
  char *v1;
  id v2;
  Swift::Bool v3;
  void *Strong;
  void *v5;
  objc_super v6;
  UIImage_optional v7;

  v1 = v0;
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, "prepareForReuse");
  v2 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_lockupView]
                         + OBJC_IVAR____TtC22SubscribePageExtension21AppShowcaseLockupView_iconView));
  v7.value.super.isa = 0;
  v7.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v7, v3);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView]);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "setHidden:", 1);

  }
  objc_msgSend(v1, "setNeedsLayout");
  sub_1003E23D8(0);
}

void sub_1003E08EC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  char *v39;
  __n128 v40;
  void (*v41)(char *, char *, uint64_t, __n128);
  void (*v42)(char *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __n128 v47;
  void (*v48)(char *, uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t (*v56)(char *, uint64_t);
  int v57;
  char *v58;
  double v59;
  uint64_t v60;
  void *Strong;
  double v62;
  void *v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  double Width;
  void *v70;
  uint64_t v71;
  void *v72;
  char v73;
  char v74;
  double v75;
  char v76;
  double v77;
  double v78;
  void *v79;
  double Height;
  double v81;
  double v82;
  double v83;
  CGFloat v84;
  double MinX;
  char *v86;
  int v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  CGFloat v92;
  double v93;
  CGFloat v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  unsigned __int8 v106;
  uint64_t v107;
  void *v108;
  void *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  _QWORD v114[2];
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  CGFloat v123;
  double v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  char *v129;
  int v130;
  char *v131;
  int v132;
  double v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138[24];
  objc_super v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v117 = type metadata accessor for FloatingPointRoundingRule(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for VideoConfiguration(0, v4);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v6);
  v125 = (char *)v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for AspectRatio(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v122 = (char *)v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppShowcaseType(0);
  v10 = *(_QWORD **)(v9 - 8);
  __chkstk_darwin(v9);
  v131 = (char *)v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v129 = (char *)v114 - v13;
  __chkstk_darwin(v14);
  *(_QWORD *)&v133 = (char *)v114 - v15;
  __chkstk_darwin(v16);
  v118 = (char *)v114 - v17;
  __chkstk_darwin(v18);
  *(_QWORD *)&v124 = (char *)v114 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)v114 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)v114 - v24;
  *(_QWORD *)&v27 = __chkstk_darwin(v26).n128_u64[0];
  v29 = (char *)v114 - v28;
  v139.receiver = v1;
  v139.super_class = ObjectType;
  objc_msgSendSuper2(&v139, "layoutSubviews", v27);
  v30 = objc_msgSend(v1, "contentView");
  v31 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v32 = LayoutMarginsAware<>.layoutFrame.getter(v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v128 = *(double *)&v1;
  v39 = &v1[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_showcaseType];
  v40 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_showcaseType], v138, 0, 0);
  v41 = (void (*)(char *, char *, uint64_t, __n128))v10[2];
  v41(v29, v39, v9, v40);
  v42 = (void (*)(char *))v10[13];
  v132 = enum case for AppShowcaseType.large(_:);
  v42(v25);
  v43 = sub_10000E99C(&qword_100802CA0, (uint64_t (*)(uint64_t))&type metadata accessor for AppShowcaseType, (uint64_t)&protocol conformance descriptor for AppShowcaseType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v134, v9, v43);
  dispatch thunk of RawRepresentable.rawValue.getter(&v136, v9, v43);
  v44 = v135;
  v45 = v137;
  if (v134 == v136 && v135 == v137)
  {
    v46 = 1;
    v45 = v135;
  }
  else
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v135, v136, v137, 0);
  }
  swift_bridgeObjectRelease(v44);
  v47 = swift_bridgeObjectRelease(v45);
  v48 = (void (*)(char *, uint64_t, __n128))v10[1];
  v48(v25, v9, v47);
  v49 = ((uint64_t (*)(char *, uint64_t))v48)(v29, v9);
  if ((v46 & 1) != 0)
  {
    v51 = v128;
    v130 = sub_1003E0624(v49, v50);
  }
  else
  {
    v130 = 0;
    v51 = v128;
  }
  v52 = v124;
  v53 = ((uint64_t (*)(char *, char *, uint64_t))v41)(v22, v39, v9);
  v55 = sub_1003E0624(v53, v54);
  ((void (*)(_QWORD, char *, uint64_t))v41)(*(_QWORD *)&v52, v22, v9);
  v56 = (uint64_t (*)(char *, uint64_t))v10[11];
  v57 = v56(*(char **)&v52, v9);
  v58 = v129;
  if (v57 == v132)
  {
    v59 = 25.0;
    if ((v55 & 1) != 0)
      v59 = 0.0;
  }
  else
  {
    v59 = 25.0;
    if (v57 != enum case for AppShowcaseType.small(_:) && v57 != enum case for AppShowcaseType.smallAlignedLeft(_:))
    {
      ((void (*)(_QWORD, uint64_t, double))v48)(*(_QWORD *)&v52, v9, 25.0);
      v59 = 0.0;
    }
  }
  *(double *)&v114[1] = v59;
  ((void (*)(char *, uint64_t))v48)(v22, v9);
  v60 = *(_QWORD *)&v51 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v51 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView);
  v62 = 0.0;
  if (Strong)
  {
    v63 = Strong;
    v64 = objc_msgSend(Strong, "isHidden");

    if ((v64 & 1) == 0)
    {
      v65 = (uint64_t)v118;
      v66 = ((uint64_t (*)(char *, char *, uint64_t))v41)(v118, v39, v9);
      v68 = sub_1003E0624(v66, v67);
      v140.origin.x = v32;
      v140.origin.y = v34;
      v140.size.width = v36;
      v140.size.height = v38;
      Width = CGRectGetWidth(v140);
      v62 = sub_1003E1AA0(v65, v68 & 1, Width);
      ((void (*)(uint64_t, uint64_t))v48)(v65, v9);
    }
  }
  ((void (*)(_QWORD, char *, uint64_t))v41)(*(_QWORD *)&v133, v39, v9);
  v70 = (void *)swift_unknownObjectWeakLoadStrong(v60);
  if (v70)
  {
    v72 = v70;
    v73 = objc_msgSend(v70, "isHidden");

  }
  else
  {
    v73 = 1;
  }
  v74 = sub_1003E0624((uint64_t)v70, v71);
  v141.origin.x = v32;
  v141.origin.y = v34;
  v141.size.width = v36;
  v141.size.height = v38;
  v75 = CGRectGetWidth(v141);
  v76 = v74 & 1;
  v77 = v133;
  v78 = sub_1003E17A0(*(uint64_t *)&v133, v73, v76, v75);
  ((void (*)(_QWORD, uint64_t))v48)(*(_QWORD *)&v77, v9);
  v79 = *(void **)(*(_QWORD *)&v51 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_lockupView);
  v142.origin.x = v32;
  v142.origin.y = v34;
  v142.size.width = v36;
  v142.size.height = v38;
  Height = CGRectGetHeight(v142);
  v81 = sub_1002493E8(v78, Height);
  v143.size.width = v36;
  v143.size.height = v38;
  v82 = v81;
  v128 = v83;
  v84 = v32;
  v143.origin.x = v32;
  v143.origin.y = v34;
  MinX = CGRectGetMinX(v143);
  ((void (*)(char *, char *, uint64_t))v41)(v58, v39, v9);
  v86 = v131;
  ((void (*)(char *, char *, uint64_t))v41)(v131, v58, v9);
  v87 = v56(v86, v9);
  v88 = 0.0;
  v124 = v62;
  if (v87 == v132)
  {
    v89 = v127;
    v90 = v126;
    v91 = (uint64_t)v125;
  }
  else
  {
    v88 = 30.0;
    v89 = v127;
    v90 = v126;
    v91 = (uint64_t)v125;
    if (v87 != enum case for AppShowcaseType.small(_:))
    {
      v88 = 25.0;
      if (v87 != enum case for AppShowcaseType.smallAlignedLeft(_:))
      {
        ((void (*)(char *, uint64_t))v48)(v131, v9);
        v88 = 0.0;
      }
    }
  }
  ((void (*)(char *, uint64_t))v48)(v58, v9);
  v133 = MinX + v88;
  if ((v130 & 1) != 0)
  {
    v92 = v82;
    if (qword_1007F1F88 != -1)
      swift_once(&qword_1007F1F88, sub_1003E0138);
    v93 = *(double *)&qword_10080CD20;
    v94 = v128;
  }
  else
  {
    v144.origin.x = v84;
    v144.origin.y = v34;
    v144.size.width = v36;
    v144.size.height = v38;
    v93 = CGRectGetMidY(v144) + v128 * -0.5;
    v92 = v82;
    v94 = v128;
  }
  objc_msgSend(v79, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(*(_QWORD *)&v51));
  v95 = swift_unknownObjectWeakLoadStrong(v60);
  v123 = v84;
  if (!v95)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56))(v91, 1, 1, v89);
    goto LABEL_37;
  }
  v96 = (void *)v95;
  v97 = v95 + qword_100856360;
  v98 = swift_beginAccess(v95 + qword_100856360, &v134, 0, 0);
  v99 = v120;
  v100 = v119;
  v101 = v97;
  v102 = v121;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v120 + 16))(v119, v101, v121, v98);

  VideoConfiguration.aspectRatio.getter(v103);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v102);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v91, 1, v89) == 1)
  {
LABEL_37:
    sub_100011088(v91, (uint64_t *)&unk_1007FA760);
    goto LABEL_38;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v122, v91, v89);
  v104 = (void *)swift_unknownObjectWeakLoadStrong(v60);
  if (v104
    && (v105 = v104, v106 = objc_msgSend(v104, "isHidden"), v105, (v106 & 1) == 0))
  {
    v110 = v122;
    AspectRatio.height(fromWidth:)(v107, v124);
    if ((v130 & 1) != 0)
    {
      v145.origin.x = v123;
      v145.origin.y = v34;
      v145.size.width = v36;
      v145.size.height = v38;
      CGRectGetMinX(v145);
      v146.size.width = v92;
      v146.origin.x = v133;
      v146.origin.y = v93;
      v146.size.height = v94;
      CGRectGetMaxY(v146);
      if (qword_1007F1F90 != -1)
        swift_once(&qword_1007F1F90, sub_1003E0148);
      v111 = type metadata accessor for StaticDimension(0);
      v112 = sub_1000117A8(v111, (uint64_t)qword_10080CD28);
      v113 = v115;
      static Dimensions.defaultRoundingRule.getter(v112);
      AnyDimension.value(in:rounded:)(*(_QWORD *)&v51, v113, v111, &protocol witness table for StaticDimension);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v113, v117);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v110, v89);
    }
    else
    {
      v147.origin.x = v133;
      v147.origin.y = v93;
      v147.size.width = v92;
      v147.size.height = v94;
      CGRectGetMaxX(v147);
      v148.origin.x = v123;
      v148.origin.y = v34;
      v148.size.width = v36;
      v148.size.height = v38;
      CGRectGetHeight(v148);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v110, v89);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v90 + 8))(v122, v89);
  }
LABEL_38:
  v108 = (void *)swift_unknownObjectWeakLoadStrong(v60);
  if (v108)
  {
    v109 = v108;
    objc_msgSend(v108, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(*(_QWORD *)&v51));

  }
}

uint64_t sub_1003E146C()
{
  return type metadata accessor for AppShowcaseCollectionViewCell(0);
}

uint64_t type metadata accessor for AppShowcaseCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080CD90;
  if (!qword_10080CD90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppShowcaseCollectionViewCell);
  return result;
}

void sub_1003E14B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = "\b";
    v4 = type metadata accessor for AppShowcaseType(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_1003E1554(uint64_t a1, uint64_t a2, char a3)
{
  sub_1003E2B88(a1, a3);
}

uint64_t sub_1003E155C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView);
}

void sub_1003E156C(void *a1)
{
  sub_1003E23D8((uint64_t)a1);

}

void (*sub_1003E1590(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView);
  return sub_1003E15D0;
}

void sub_1003E15D0(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_1003E23D8((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_1003E23D8(*a1);
    v3 = v4;
  }

}

uint64_t sub_1003E1628()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E99C(&qword_10080CDB0, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_10068AA98);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_1003E1670(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C(&qword_10080CDB0, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_10068AA98);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_1003E16D0(_QWORD *a1))(_QWORD *a1)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E99C(&qword_10080CDB0, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_10068AA98);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001DF34;
}

uint64_t sub_1003E1748()
{
  return sub_10000E99C(&qword_10080CDA0, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_10068AA28);
}

uint64_t sub_1003E1774()
{
  return sub_10000E99C(&qword_10080CDA8, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_10068AA58);
}

double sub_1003E17A0(uint64_t a1, char a2, char a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char *v19;
  uint64_t (*v20)(char *, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  double v27;
  int v28;
  double v29;
  double v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, __n128);

  v8 = type metadata accessor for AspectRatio(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppShowcaseType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v19 = (char *)&v32 - v17;
  if ((a2 & 1) != 0 || (a3 & 1) != 0)
    return a4;
  v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v33((char *)&v32 - v17, a1, v12, v18);
  v20 = *(uint64_t (**)(char *, uint64_t))(v13 + 88);
  v21 = v20(v19, v12);
  v22 = enum case for AppShowcaseType.large(_:);
  if (v21 == enum case for AppShowcaseType.large(_:))
  {
    if (qword_1007F1F98 != -1)
      swift_once(&qword_1007F1F98, sub_1003E0294);
    v23 = sub_1000117A8(v8, (uint64_t)qword_10080CD40);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v23, v8);
    if (qword_1007F1FA0 != -1)
      swift_once(&qword_1007F1FA0, sub_1003E02E4);
    v24 = qword_10080CD58;
  }
  else
  {
    if (v21 != enum case for AppShowcaseType.small(_:) && v21 != enum case for AppShowcaseType.smallAlignedLeft(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
      v27 = 0.0;
      goto LABEL_20;
    }
    if (qword_1007F1F98 != -1)
      swift_once(&qword_1007F1F98, sub_1003E0294);
    v26 = sub_1000117A8(v8, (uint64_t)qword_10080CD40);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
    if (qword_1007F1FA8 != -1)
      swift_once(&qword_1007F1FA8, sub_1003E02F4);
    v24 = qword_10080CD60;
  }
  v27 = AspectRatio.width(fromHeight:)(*(double *)&v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_20:
  ((void (*)(char *, uint64_t, uint64_t))v33)(v15, a1, v12);
  v28 = v20(v15, v12);
  v29 = 0.0;
  v30 = 25.0;
  if (v28 != v22)
  {
    v29 = 30.0;
    if (v28 != enum case for AppShowcaseType.small(_:))
    {
      v29 = 25.0;
      if (v28 != enum case for AppShowcaseType.smallAlignedLeft(_:))
      {
        (*(void (**)(char *, uint64_t, double, double))(v13 + 8))(v15, v12, 25.0, 25.0);
        v30 = 0.0;
        v29 = 0.0;
      }
    }
  }
  return a4 - (v27 + v30 + v29);
}

double sub_1003E1AA0(uint64_t a1, char a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v21;

  v6 = type metadata accessor for AspectRatio(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AppShowcaseType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == enum case for AppShowcaseType.large(_:))
  {
    if ((a2 & 1) == 0)
    {
      if (qword_1007F1F98 != -1)
        swift_once(&qword_1007F1F98, sub_1003E0294);
      v16 = sub_1000117A8(v6, (uint64_t)qword_10080CD40);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
      if (qword_1007F1FA0 != -1)
        swift_once(&qword_1007F1FA0, sub_1003E02E4);
      v17 = qword_10080CD58;
LABEL_18:
      a3 = AspectRatio.width(fromHeight:)(*(double *)&v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    if (v15 == enum case for AppShowcaseType.small(_:) || v15 == enum case for AppShowcaseType.smallAlignedLeft(_:))
    {
      if (qword_1007F1F98 != -1)
        swift_once(&qword_1007F1F98, sub_1003E0294);
      v19 = sub_1000117A8(v6, (uint64_t)qword_10080CD40);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
      if (qword_1007F1FA8 != -1)
        swift_once(&qword_1007F1FA8, sub_1003E02F4);
      v17 = qword_10080CD60;
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0.0;
  }
  return a3;
}

uint64_t sub_1003E1CE8(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  __n128 v44;
  void (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  void (*v50)(char *, uint64_t);
  __n128 v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t result;
  uint64_t v58;
  char v59;
  __n128 v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  __n128 v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  char v77;
  __n128 v78;
  char *v79;
  char *v80;
  unsigned int v81;
  void (*v82)(char *, _QWORD, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void (*v88)(uint64_t, uint64_t);
  char *v89;
  void *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v90 = a2;
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  __chkstk_darwin(v7);
  v83 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppShowcaseType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v86 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v87 = (char *)&v79 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v79 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - v18;
  __chkstk_darwin(v20);
  v89 = (char *)&v79 - v21;
  v22 = type metadata accessor for AspectRatio(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v79 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v80 = (char *)&v79 - v26;
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v79 - v29;
  v31 = AppShowcase.video.getter(v28);
  if (v31)
  {
    v33 = v31;
    v34 = Video.preview.getter(v31);
    swift_release(v33);
    Artwork.size.getter(v35);
    swift_release(v34);
    v37 = AspectRatio.init(_:_:)(v36);
    v91 = AspectRatio.isLandscape.getter(v37);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v22);
  }
  else
  {
    v91 = 0;
  }
  v38 = AppShowcase.video.getter(v32);
  v40 = v38;
  if (v38)
    v39 = swift_release(v38);
  v41 = (uint64_t)v89;
  AppShowcase.type.getter(v39);
  v42 = sub_1003E17A0(v41, v40 == 0, v91 & 1, a3);
  v88 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v88(v41, v9);
  type metadata accessor for AppShowcaseLockupView(0);
  v43.n128_f64[0] = v42;
  v44.n128_f64[0] = sub_100249774(a1, v90, v43, a4);
  AppShowcase.type.getter(v44);
  v45 = *(void (**)(_QWORD))(v10 + 104);
  v81 = enum case for AppShowcaseType.large(_:);
  v82 = (void (*)(char *, _QWORD, uint64_t))v45;
  v45(v16);
  v46 = sub_10000E99C(&qword_100802CA0, (uint64_t (*)(uint64_t))&type metadata accessor for AppShowcaseType, (uint64_t)&protocol conformance descriptor for AppShowcaseType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v94, v9, v46);
  dispatch thunk of RawRepresentable.rawValue.getter(&v92, v9, v46);
  v47 = v95;
  v48 = v93;
  if (v94 == v92 && v95 == v93)
  {
    v49 = swift_bridgeObjectRelease_n(v95, 2);
    v50 = (void (*)(char *, uint64_t))v88;
    ((void (*)(char *, uint64_t, __n128))v88)(v16, v9, v49);
    v50(v19, v9);
    if ((v91 & 1) == 0)
    {
LABEL_9:
      v52 = v87;
      AppShowcase.type.getter(v51);
      v53 = v86;
      v82(v86, v81, v9);
      dispatch thunk of RawRepresentable.rawValue.getter(&v94, v9, v46);
      dispatch thunk of RawRepresentable.rawValue.getter(&v92, v9, v46);
      v54 = v95;
      v55 = v93;
      if (v94 == v92 && v95 == v93)
      {
        v56 = swift_bridgeObjectRelease_n(v95, 2);
        ((void (*)(char *, uint64_t, __n128))v50)(v53, v9, v56);
        result = ((uint64_t (*)(char *, uint64_t))v50)(v52, v9);
      }
      else
      {
        v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v95, v92, v93, 0);
        swift_bridgeObjectRelease(v54);
        v78 = swift_bridgeObjectRelease(v55);
        ((void (*)(char *, uint64_t, __n128))v50)(v53, v9, v78);
        result = ((uint64_t (*)(char *, uint64_t))v50)(v52, v9);
        if ((v77 & 1) == 0)
        {
          if (qword_1007F1FA8 != -1)
            result = swift_once(&qword_1007F1FA8, sub_1003E02F4);
LABEL_24:
          if (qword_1007F1F88 == -1)
            return result;
          return swift_once(&qword_1007F1F88, sub_1003E0138);
        }
      }
      if (qword_1007F1FA0 != -1)
        result = swift_once(&qword_1007F1FA0, sub_1003E02E4);
      goto LABEL_24;
    }
  }
  else
  {
    v58 = v22;
    v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v95, v92, v93, 0);
    swift_bridgeObjectRelease(v47);
    v60 = swift_bridgeObjectRelease(v48);
    v50 = (void (*)(char *, uint64_t))v88;
    ((void (*)(char *, uint64_t, __n128))v88)(v16, v9, v60);
    v50(v19, v9);
    v61 = v59 & v91;
    v22 = v58;
    if ((v61 & 1) == 0)
      goto LABEL_9;
  }
  if (qword_1007F1F90 != -1)
    swift_once(&qword_1007F1F90, sub_1003E0148);
  v62 = type metadata accessor for StaticDimension(0);
  v63 = sub_1000117A8(v62, (uint64_t)qword_10080CD28);
  v64 = v83;
  static Dimensions.defaultRoundingRule.getter(v63);
  AnyDimension.value(in:rounded:)(v90, v64, v62, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v85);
  result = AppShowcase.video.getter(v65);
  if (result)
  {
    v66 = result;
    v67 = Video.preview.getter(result);
    swift_release(v66);
    Artwork.size.getter(v68);
    swift_release(v67);
    v69 = v79;
    v71 = AspectRatio.init(_:_:)(v70);
    v72 = v80;
    v73.n128_f64[0] = (*(double (**)(char *, char *, uint64_t, __n128))(v23 + 32))(v80, v69, v22, v71);
    v74 = (uint64_t)v89;
    AppShowcase.type.getter(v73);
    v75 = sub_1003E1AA0(v74, v91 & 1, a3);
    v76 = ((uint64_t (*)(uint64_t, uint64_t))v50)(v74, v9);
    AspectRatio.height(fromWidth:)(v76, v75);
    result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v72, v22);
  }
  if (qword_1007F1F88 != -1)
    return swift_once(&qword_1007F1F88, sub_1003E0138);
  return result;
}

void sub_1003E23D8(uint64_t a1)
{
  char *v1;
  char *v3;
  void *Strong;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = &v1[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView]);
  v5 = Strong;
  if (Strong)
  {
    sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    Strong = v5;
  }
  v6 = sub_10038DFA4(Strong);

  if ((v6 & 1) != 0)
  {
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
  }
  v9 = swift_unknownObjectWeakAssign(v3, a1);
  v10 = swift_unknownObjectWeakLoadStrong(v9);
  if (v10)
  {
    v12 = (id)v10;
    v11 = objc_msgSend(v1, "contentView");
    objc_msgSend(v11, "addSubview:", v12);

    objc_msgSend(v1, "setNeedsLayout");
  }
}

uint64_t sub_1003E24EC(uint64_t a1, void *a2, void *a3, uint64_t a4, double a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  double v37;
  char *v38;
  BOOL v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  __n128 v66;
  char v67;
  double v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;

  v84 = a4;
  v82 = a3;
  v80 = a2;
  v7 = type metadata accessor for AspectRatio(0);
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  __chkstk_darwin(v7);
  v83 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.Style(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v77 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v77 - v18;
  v20 = type metadata accessor for AppShowcaseType(0);
  v21 = *(_QWORD *)(v20 - 8);
  v85 = v20;
  v86 = v21;
  __chkstk_darwin(v20);
  v81 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v77 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v77 - v27;
  v30 = AppShowcase.lockup.getter(v29);
  v32 = Lockup.icon.getter(v31);
  v33 = swift_release(v30);
  if (v32)
  {
    v77 = a1;
    AppShowcase.type.getter(v33);
    v34 = v85;
    v35 = v86;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v25, v28, v85);
    v36 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v25, v34);
    if (v36 == enum case for AppShowcaseType.large(_:))
    {
      v37 = 88.0;
      v38 = v19;
    }
    else
    {
      v39 = v36 == enum case for AppShowcaseType.small(_:) || v36 == enum case for AppShowcaseType.smallAlignedLeft(_:);
      v38 = v19;
      if (!v39)
        (*(void (**)(char *, uint64_t))(v86 + 8))(v25, v34);
      v37 = 47.0;
    }
    v40 = v80;
    v41 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v28, v34);
    Artwork.style.getter(v41);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Artwork.Style.roundedRect(_:), v10);
    Artwork.Style.orIfUnspecified(_:)(v13);
    v42 = *(void (**)(char *, uint64_t))(v11 + 8);
    v42(v13, v10);
    v43 = ((uint64_t (*)(char *, uint64_t))v42)(v16, v10);
    v44 = Artwork.Style.iconWidth(fromHeight:)(v43, v37);
    v45 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v44, v37);
    v46 = v45;
    if (v40)
    {
      v47 = v40;
      Artwork.style.getter(v47);
      v48 = ArtworkView.style.setter(v16);
      *(_QWORD *)&v49 = Artwork.contentMode.getter(v48).n128_u64[0];
      v51 = ArtworkLoaderConfig.size.getter(objc_msgSend(v47, "setContentMode:", v50, v49));
      v53 = ArtworkView.imageSize.setter(v51, v52);
      v54 = Artwork.backgroundColor.getter(v53);
      if (!v54)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v54 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v54);
      v55 = type metadata accessor for ArtworkView(0);
      v56 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v46, 2, 1, v47, v55, v56);
      swift_release(v32);
      swift_release(v46);

    }
    else
    {
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
      ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v45, 0, 1, &v87, 0, 0, (__n128)0);
      swift_release(v32);
      swift_release(v46);
      sub_100011088((uint64_t)&v87, (uint64_t *)&unk_1007F9850);
    }
    v42(v38, v10);
  }
  result = AppShowcase.video.getter(v33);
  if (result)
  {
    v58 = result;
    v59 = Video.preview.getter(result);
    swift_release(v58);
    Artwork.size.getter(v60);
    Artwork.size.getter(v61);
    v62 = v83;
    v64 = AspectRatio.init(_:_:)(v63);
    v65 = (uint64_t)v81;
    AppShowcase.type.getter(v64);
    v67 = AspectRatio.isLandscape.getter(v66);
    v68 = sub_1003E1AA0(v65, v67 & 1, a5);
    v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v65, v85);
    v70 = AspectRatio.height(fromWidth:)(v69, v68);
    v71 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v68, v70);
    v72 = v71;
    v73 = v82;
    if (v82)
    {
      v74 = type metadata accessor for VideoView(0);
      v75 = sub_10000E99C((unint64_t *)&unk_1007F4810, type metadata accessor for VideoView, (uint64_t)"\t,\v");
      v76 = v73;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v72, 2, 1, v76, v74, v75);
      swift_release(v59);
      swift_release(v72);

    }
    else
    {
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
      ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v71, 0, 1, &v87, 0, 0, (__n128)0);
      swift_release(v59);
      swift_release(v72);
      sub_100011088((uint64_t)&v87, (uint64_t *)&unk_1007F9850);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v62, v79);
  }
  return result;
}

void sub_1003E2A6C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *Strong;
  id v9;
  id v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  _BYTE v15[40];

  sub_100011020(a1, (uint64_t)v15);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v5 = type metadata accessor for AppShowcase(0);
  if (swift_dynamicCast(&v14, v15, v4, v5, 6))
  {
    v6 = v14;
    v7 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_lockupView]
                  + OBJC_IVAR____TtC22SubscribePageExtension21AppShowcaseLockupView_iconView);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView]);
    v9 = v7;
    v10 = objc_msgSend(v2, "contentView");
    v11 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v11);
    v13 = v12;

    sub_1003E24EC(v6, v7, Strong, a2, v13);
    swift_release(v6);

  }
}

void sub_1003E2B88(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Swift::Bool v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t Strong;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  UIImage_optional v19;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_lockupView);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension21AppShowcaseLockupView_iconView;
  v7 = *(id *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension21AppShowcaseLockupView_iconView);
  v19.value.super.isa = 0;
  v19.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v19, v8);

  v9 = *(void **)(v5 + v6);
  v10 = type metadata accessor for ArtworkView(0);
  v11 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v12 = v9;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v12, 1, v10, v11);

  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC22SubscribePageExtension29AppShowcaseCollectionViewCell_videoView);
  if (Strong)
  {
    v14 = *(void **)(Strong + qword_10080FD18);
    v18 = (id)Strong;
    v15 = objc_msgSend(v14, "layer");
    objc_msgSend(v15, "removeAllAnimations");

    objc_msgSend(v14, "setImage:", 0);
    v16 = type metadata accessor for VideoView(0);
    v17 = sub_10000E99C((unint64_t *)&unk_1007F4810, type metadata accessor for VideoView, (uint64_t)"\t,\v");
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v18, a2 & 1, v16, v17);

  }
}

Swift::Void __swiftcall UIImageView.show(image:isAnimationPermitted:)(UIImage_optional image, Swift::Bool isAnimationPermitted)
{
  void *v2;
  void *v3;
  Class isa;
  id v5;
  BOOL v6;
  id v7;
  objc_class *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v3 = v2;
  isa = image.value.super.isa;
  if (image.is_nil)
  {
    v5 = objc_msgSend(v3, "image", isAnimationPermitted);

    v6 = v5 == 0;
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(v3, "layer", isAnimationPermitted);
  objc_msgSend(v7, "removeAllAnimations");

  if (isa)
  {
    if (v6)
    {
      v8 = isa;
      objc_msgSend(v3, "setAlpha:", 0.0);
      objc_msgSend(v3, "setImage:", v8);
      type metadata accessor for Animation(0);
      v9 = (void *)static Animation.fadeInPropertyAnimator.getter();
      v10 = swift_allocObject(&unk_10073DC40, 24, 7);
      *(_QWORD *)(v10 + 16) = v3;
      v14[4] = sub_10026AE9C;
      v15 = v10;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 1107296256;
      v14[2] = sub_1000BD6CC;
      v14[3] = &unk_10073DC58;
      v11 = _Block_copy(v14);
      v12 = v15;
      v13 = v3;
      objc_msgSend(v9, "addAnimations:", v11, swift_release(v12).n128_f64[0]);
      _Block_release(v11);
      objc_msgSend(v9, "startAnimation");

    }
    else
    {
      objc_msgSend(v3, "setImage:", isa);
    }
  }
  else
  {
    objc_msgSend(v3, "setImage:", 0);
  }
}

uint64_t sub_1003E2ECC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E2EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003E2F00(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1003E2F0C()
{
  void *v0;

  return objc_msgSend(v0, "image");
}

void sub_1003E2F30(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setImage:", a1);

}

void (*sub_1003E2F64(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, "image");
  return sub_1002CC5C8;
}

uint64_t CrossLinkLockupLayout.Metrics.init(artworkSize:artworkMargin:subtitleSpace:numberOfLines:offerButtonSize:offerButtonMargin:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(double *)a5 = a6;
  *(double *)(a5 + 8) = a7;
  sub_100010F3C(a1, a5 + 16);
  sub_100010F3C(a2, a5 + 56);
  *(_QWORD *)(a5 + 96) = a3;
  *(double *)(a5 + 104) = a8;
  *(double *)(a5 + 112) = a9;
  return sub_100010F3C(a4, a5 + 120);
}

uint64_t CrossLinkLockupLayout.init(metrics:artworkView:lockupView:crossLinkTitleText:crossLinkSubtitleText:)@<X0>(double *a1@<X0>, _QWORD *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, void *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  _BYTE __src[320];

  sub_1001B8E40((uint64_t)a1, (uint64_t)&__src[160]);
  v12 = a2[3];
  v13 = a2[4];
  sub_100011064(a2, v12);
  LayoutView.withMeasurements(representing:)(v15, v12, v13, *a1, a1[1]);
  sub_1001B8E7C(a1);
  sub_100010F3C(v15, (uint64_t)__src);
  sub_100010F3C(a3, (uint64_t)&__src[40]);
  sub_100010F3C(a4, (uint64_t)&__src[80]);
  sub_100010F3C(a5, (uint64_t)&__src[120]);
  memcpy(a6, __src, 0x140uLL);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a2);
}

uint64_t CrossLinkLockupLayout.placeChildren(relativeTo:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  id v12;
  char v13;

  v12 = objc_msgSend(a1, "traitCollection");
  v13 = UITraitCollection.prefersAccessibilityLayouts.getter(v12);

  if ((v13 & 1) != 0)
    return sub_1003E3214((uint64_t)a1, a2, a3, a4, a5, a6);
  else
    return sub_1003E3678((uint64_t)a1, a2, a3, a4, a5, a6);
}

uint64_t CrossLinkLockupLayout.Metrics.numberOfLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t CrossLinkLockupLayout.Metrics.numberOfLines.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

double CrossLinkLockupLayout.Metrics.offerButtonSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void CrossLinkLockupLayout.Metrics.offerButtonSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 104) = a1;
  *(double *)(v2 + 112) = a2;
}

uint64_t (*CrossLinkLockupLayout.Metrics.offerButtonSize.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

__n128 CrossLinkLockupLayout.Metrics.init(byCopying:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_OWORD *)(a1 + 112);
  a2[6] = *(_OWORD *)(a1 + 96);
  a2[7] = v2;
  v3 = *(_OWORD *)(a1 + 144);
  a2[8] = *(_OWORD *)(a1 + 128);
  a2[9] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v5;
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v7;
  return result;
}

uint64_t CrossLinkLockupLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001B8E40(v1 + 160, a1);
}

uint64_t sub_1003E3214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  _QWORD *v6;
  _QWORD *v7;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  CGFloat MinY;
  uint64_t v23;
  uint64_t v24;
  CGFloat MinX;
  CGFloat v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  _BYTE v51[40];
  _BYTE v52[48];
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;

  v7 = v6;
  v49 = a2;
  v48 = type metadata accessor for LayoutRect(0);
  v47 = *(_QWORD *)(v48 - 8);
  v13 = __chkstk_darwin(v48);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for AppStore.CenteredThreeLineTextLayout(0, v13);
  v45 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FloatingPointRoundingRule(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53.origin.x = a3;
  v53.origin.y = a4;
  v53.size.width = a5;
  v53.size.height = a6;
  MinY = CGRectGetMinY(v53);
  v23 = v6[3];
  v24 = v6[4];
  sub_100011064(v6, v23);
  if ((dispatch thunk of LayoutView.isHidden.getter(v23, v24) & 1) == 0)
  {
    v54.origin.x = a3;
    v54.origin.y = a4;
    v54.size.width = a5;
    v54.size.height = a6;
    MinX = CGRectGetMinX(v54);
    v26 = *((double *)v6 + 20);
    v27 = *((double *)v6 + 21);
    v28 = v6[3];
    v29 = v6[4];
    sub_100011064(v6, v28);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v28, v29);
    v55.origin.x = MinX;
    v55.origin.y = MinY;
    v55.size.width = v26;
    v55.size.height = v27;
    CGRectGetMaxY(v55);
    v30 = v6[25];
    v31 = v6[26];
    sub_100011064(v7 + 22, v7[25]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v30);
    AnyDimension.value(in:rounded:)(a1, v21, v30, v31);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  v56.origin.x = a3;
  v56.origin.y = a4;
  v56.size.width = a5;
  v56.size.height = a6;
  CGRectGetMinX(v56);
  v57.origin.x = a3;
  v57.origin.y = a4;
  v57.size.width = a5;
  v57.size.height = a6;
  CGRectGetWidth(v57);
  v58.origin.x = a3;
  v58.origin.y = a4;
  v58.size.width = a5;
  v58.size.height = a6;
  CGRectGetMaxY(v58);
  v32 = v7[8];
  v33 = v7[9];
  sub_100011064(v7 + 5, v32);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v32, v33);
  v59.origin.x = a3;
  v59.origin.y = a4;
  v59.size.width = a5;
  v59.size.height = a6;
  CGRectGetMaxY(v59);
  v34 = v7[38];
  v35 = v7[39];
  sub_100011064(v7 + 35, v34);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v34);
  AnyDimension.value(in:rounded:)(a1, v21, v34, v35);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v60.origin.x = a3;
  v60.origin.y = a4;
  v60.size.width = a5;
  v60.size.height = a6;
  CGRectGetMinX(v60);
  v61.origin.x = a3;
  v61.origin.y = a4;
  v61.size.width = a5;
  v61.size.height = a6;
  CGRectGetWidth(v61);
  v36 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_100011020((uint64_t)(v7 + 10), (uint64_t)v52);
  sub_100011020((uint64_t)(v7 + 15), (uint64_t)v51);
  sub_100011020((uint64_t)(v7 + 27), (uint64_t)v50);
  AppStore.CenteredThreeLineTextLayout.init(primaryText:secondaryText:secondarySpace:numberOfLines:)(v52, v51, v50, v7[32]);
  AppStore.CenteredThreeLineTextLayout.placeChildren(relativeTo:in:)(a1, v36, v38, v40, v42);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
  LayoutRect.init(representing:)(a3, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v46);
}

uint64_t sub_1003E3678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v6;
  _QWORD *v7;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  CGFloat MinX;
  CGFloat MidY;
  double v26;
  CGFloat v27;
  CGFloat v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[40];
  _BYTE v52[40];
  _BYTE v53[48];
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v7 = (_QWORD *)v6;
  v50 = a2;
  v49 = type metadata accessor for LayoutRect(0);
  v48 = *(_QWORD *)(v49 - 8);
  v13 = __chkstk_darwin(v49);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for AppStore.CenteredThreeLineTextLayout(0, v13);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FloatingPointRoundingRule(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54.origin.x = a3;
  v54.origin.y = a4;
  v54.size.width = a5;
  v54.size.height = a6;
  CGRectGetMinX(v54);
  v22 = *(_QWORD *)(v6 + 24);
  v23 = *(_QWORD *)(v6 + 32);
  sub_100011064((_QWORD *)v6, v22);
  if ((dispatch thunk of LayoutView.isHidden.getter(v22, v23) & 1) == 0)
  {
    v55.origin.x = a3;
    v55.origin.y = a4;
    v55.size.width = a5;
    v55.size.height = a6;
    MinX = CGRectGetMinX(v55);
    v56.origin.x = a3;
    v56.origin.y = a4;
    v56.size.width = a5;
    v56.size.height = a6;
    MidY = CGRectGetMidY(v56);
    v27 = *(double *)(v6 + 160);
    v26 = *(double *)(v6 + 168);
    v28 = floor(MidY + v26 * -0.5);
    v29 = *(_QWORD *)(v6 + 24);
    v30 = *(_QWORD *)(v6 + 32);
    sub_100011064((_QWORD *)v6, v29);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v29, v30);
    v57.origin.x = MinX;
    v57.origin.y = v28;
    v57.size.width = v27;
    v57.size.height = v26;
    CGRectGetMaxX(v57);
    v31 = *(_QWORD *)(v6 + 200);
    v32 = *(_QWORD *)(v6 + 208);
    sub_100011064(v7 + 22, v7[25]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v31);
    AnyDimension.value(in:rounded:)(a1, v21, v31, v32);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  v58.origin.x = a3;
  v58.origin.y = a4;
  v58.size.width = a5;
  v58.size.height = a6;
  CGRectGetMaxX(v58);
  v59.origin.x = a3;
  v59.origin.y = a4;
  v59.size.width = a5;
  v59.size.height = a6;
  CGRectGetMinY(v59);
  v60.origin.x = a3;
  v60.origin.y = a4;
  v60.size.width = a5;
  v60.size.height = a6;
  CGRectGetHeight(v60);
  v33 = v7[8];
  v34 = v7[9];
  sub_100011064(v7 + 5, v33);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v33, v34);
  v35 = v7[38];
  v36 = v7[39];
  sub_100011064(v7 + 35, v35);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v35);
  AnyDimension.value(in:rounded:)(a1, v21, v35, v36);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v61.origin.x = a3;
  v61.origin.y = a4;
  v61.size.width = a5;
  v61.size.height = a6;
  CGRectGetMinY(v61);
  v62.origin.x = a3;
  v62.origin.y = a4;
  v62.size.width = a5;
  v62.size.height = a6;
  CGRectGetHeight(v62);
  v37 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_100011020((uint64_t)(v7 + 10), (uint64_t)v53);
  sub_100011020((uint64_t)(v7 + 15), (uint64_t)v52);
  sub_100011020((uint64_t)(v7 + 27), (uint64_t)v51);
  AppStore.CenteredThreeLineTextLayout.init(primaryText:secondaryText:secondarySpace:numberOfLines:)(v53, v52, v51, v7[32]);
  AppStore.CenteredThreeLineTextLayout.placeChildren(relativeTo:in:)(a1, v37, v39, v41, v43);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v49);
  LayoutRect.init(representing:)(a3, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v17, v47);
}

uint64_t sub_1003E3AE8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  unint64_t v10;

  v10 = sub_1003E4204();
  return EstimatedMeasurable<>.measurements(fitting:in:)(a1, a2, v10, a3, a4, a5);
}

unint64_t sub_1003E3B44()
{
  unint64_t result;

  result = qword_10080CDB8;
  if (!qword_10080CDB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CrossLinkLockupLayout, &type metadata for CrossLinkLockupLayout);
    atomic_store(result, (unint64_t *)&qword_10080CDB8);
  }
  return result;
}

uint64_t destroy for CrossLinkLockupLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 27);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 35);
}

uint64_t initializeWithCopy for CrossLinkLockupLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v8 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 200) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 176, a2 + 176);
  v9 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 240) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 216, a2 + 216);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  v10 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 280, a2 + 280);
  return a1;
}

_QWORD *assignWithCopy for CrossLinkLockupLayout(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  sub_10001216C(a1 + 5, a2 + 5);
  sub_10001216C(a1 + 10, a2 + 10);
  sub_10001216C(a1 + 15, a2 + 15);
  a1[20] = a2[20];
  a1[21] = a2[21];
  sub_10001216C(a1 + 22, a2 + 22);
  sub_10001216C(a1 + 27, a2 + 27);
  a1[32] = a2[32];
  a1[33] = a2[33];
  a1[34] = a2[34];
  sub_10001216C(a1 + 35, a2 + 35);
  return a1;
}

void *initializeWithTake for CrossLinkLockupLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x140uLL);
}

uint64_t assignWithTake for CrossLinkLockupLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  v6 = *(_OWORD *)(a2 + 160);
  a2 += 160;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 - 40);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 - 24);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 - 8);
  *(_OWORD *)(a1 + 160) = v6;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 176));
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 48);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 216));
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 256) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 272) = v9;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 280));
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for CrossLinkLockupLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 320))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CrossLinkLockupLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 320) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 320) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossLinkLockupLayout()
{
  return &type metadata for CrossLinkLockupLayout;
}

uint64_t destroy for CrossLinkLockupLayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 2);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 7);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
}

uint64_t initializeWithCopy for CrossLinkLockupLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 120, a2 + 120);
  return a1;
}

_QWORD *assignWithCopy for CrossLinkLockupLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_10001216C(a1 + 2, a2 + 2);
  sub_10001216C(a1 + 7, a2 + 7);
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  sub_10001216C(a1 + 15, a2 + 15);
  return a1;
}

uint64_t assignWithTake for CrossLinkLockupLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 16));
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for CrossLinkLockupLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CrossLinkLockupLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossLinkLockupLayout.Metrics()
{
  return &type metadata for CrossLinkLockupLayout.Metrics;
}

unint64_t sub_1003E4204()
{
  unint64_t result;

  result = qword_10080CDC0;
  if (!qword_10080CDC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CrossLinkLockupLayout, &type metadata for CrossLinkLockupLayout);
    atomic_store(result, (unint64_t *)&qword_10080CDC0);
  }
  return result;
}

char *sub_1003E4248(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  objc_class *v45;
  id v46;
  double left;
  double bottom;
  double right;
  char *v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  char *v59;
  void *v60;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  objc_super v72[2];
  objc_super v73;
  _OWORD v74[3];

  v65 = a1;
  v12 = type metadata accessor for AutomationSemantics(0);
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  __chkstk_darwin(v12);
  v69 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for DirectionalTextAlignment(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v62 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for WordmarkView.Alignment(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v23);
  v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerButton;
  v27 = objc_allocWithZone((Class)type metadata accessor for OfferButton());
  v28 = v6;
  *(_QWORD *)&v6[v26] = objc_msgSend(v27, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v29 = &v28[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerLabelPresenter];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  v30 = &v28[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerButtonTapHandler];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v31 = &v28[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_metrics];
  v32 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  v33 = *(_QWORD *)(v32 - 8);
  v67 = v32;
  v68 = v33;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v66 = a2;
  v34(v31, a2, v32);
  v35 = enum case for Wordmark.arcade(_:);
  v36 = type metadata accessor for Wordmark(0);
  v37 = *(_QWORD *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v25, v35, v36);
  v38 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v25, 0, 1, v36);
  ArcadeLockupLayout.Metrics.wordmarkSpace.getter(v74, v38);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for WordmarkView.Alignment.leading(_:), v19);
  v39 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  *(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_wordmarkView] = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v25, v74, v22, 0.0, 0.0, 0.0, 0.0);
  v40 = type metadata accessor for FontUseCase(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v18, v65, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v18, 0, 1, v40);
  v43 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, enum case for DirectionalTextAlignment.leading(_:), v64);
  v44 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_subtitleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v18, 0, 0, 1, 0, v43, 0, 0);

  v45 = (objc_class *)type metadata accessor for ArcadeLockupView(0);
  v73.receiver = v28;
  v73.super_class = v45;
  v46 = objc_msgSendSuper2(&v73, "initWithFrame:", a3, a4, a5, a6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v50 = (char *)v46;
  objc_msgSend(v50, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v50, "setEdgesInsettingLayoutMarginsFromSafeArea:", 0);
  v51 = OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_wordmarkView;
  v52 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_wordmarkView];
  sub_1000117FC();
  v53 = v52;
  v54 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v53, "setTintColor:", v54);

  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[v51]);
  v55 = OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_subtitleLabel;
  v56 = *(id *)&v50[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_subtitleLabel];
  v57 = (void *)static UIColor.secondaryText.getter(v56);
  objc_msgSend(v56, "setTextColor:", v57);

  v58 = *(id *)&v50[v55];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  memset(v74, 0, 32);
  memset(v72, 0, sizeof(v72));
  v59 = v69;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974627573, 0xE800000000000000, v74, v72);
  sub_1000131E0((uint64_t)v72);
  sub_1000131E0((uint64_t)v74);
  UIView.setAutomationSemantics(_:)(v59);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v71);
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[v55]);
  v60 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerButton];
  objc_msgSend(v60, "addTarget:action:forControlEvents:", v50, "offerButtonWasTapped", 64);
  objc_msgSend(v50, "addSubview:", v60);

  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
  return v50;
}

void sub_1003E495C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _QWORD v22[5];
  _QWORD v23[5];

  v1 = v0;
  v2 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArcadeLockupLayout(0);
  v20 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = CGSize.subtracting(insets:)(objc_msgSend(v1, "layoutMargins", v7));
  v12 = v11;
  v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_wordmarkView];
  v23[3] = type metadata accessor for WordmarkView(0);
  v23[4] = &protocol witness table for UIView;
  v23[0] = v13;
  v14 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_subtitleLabel];
  v22[3] = type metadata accessor for DynamicTypeLabel(0);
  v22[4] = &protocol witness table for UILabel;
  v22[0] = v14;
  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerButton];
  v21[3] = type metadata accessor for OfferButton();
  v21[4] = &protocol witness table for UIView;
  v21[0] = v15;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v1[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_metrics], v2);
  v16 = v13;
  v17 = v14;
  v18 = v15;
  ArcadeLockupLayout.init(wordmarkView:subtitleText:offerButton:metrics:)(v23, v22, v21, v5);
  v19 = sub_1003E5180();
  dispatch thunk of Measurable.measurements(fitting:in:)(v1, v6, v19, v10, v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
  CGSize.adding(outsets:)(objc_msgSend(v1, "layoutMargins"));
}

uint64_t sub_1003E4B90()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  double v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[5];
  objc_super v28;

  v1 = type metadata accessor for LayoutRect(0);
  v23 = *(_QWORD *)(v1 - 8);
  v24 = v1;
  __chkstk_darwin(v1);
  v22 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ArcadeLockupLayout(0);
  v20 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for ArcadeLockupView(0);
  v28.receiver = v0;
  v28.super_class = v9;
  objc_msgSendSuper2(&v28, "layoutSubviews");
  v10 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_wordmarkView];
  v27[3] = type metadata accessor for WordmarkView(0);
  v27[4] = &protocol witness table for UIView;
  v27[0] = v10;
  v11 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_subtitleLabel];
  v26[3] = type metadata accessor for DynamicTypeLabel(0);
  v26[4] = &protocol witness table for UILabel;
  v26[0] = v11;
  v12 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerButton];
  v25[3] = type metadata accessor for OfferButton();
  v25[4] = &protocol witness table for UIView;
  v25[0] = v12;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v0[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_metrics], v3);
  v13 = v10;
  v14 = v11;
  v15 = v12;
  ArcadeLockupLayout.init(wordmarkView:subtitleText:offerButton:metrics:)(v27, v26, v25, v6);
  v16 = LayoutMarginsAware<>.layoutFrame.getter(v9);
  v17 = v22;
  ArcadeLockupLayout.placeChildren(relativeTo:in:)(v0, v16);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v8, v21);
}

id sub_1003E4F9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArcadeLockupView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003E5064()
{
  return type metadata accessor for ArcadeLockupView(0);
}

uint64_t type metadata accessor for ArcadeLockupView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080CE10;
  if (!qword_10080CE10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeLockupView);
  return result;
}

uint64_t sub_1003E50A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = " ";
  result = type metadata accessor for ArcadeLockupLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = &unk_10068AD10;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003E5138@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_metrics;
  v4 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1003E5180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080CE20;
  if (!qword_10080CE20)
  {
    v1 = type metadata accessor for ArcadeLockupLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ArcadeLockupLayout, v1);
    atomic_store(result, (unint64_t *)&qword_10080CE20);
  }
  return result;
}

id WebViewController.protocolDelegate.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension17WebViewController_protocolDelegate);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension17WebViewController_protocolDelegate, v3, 0, 0);
  return *v1;
}

void WebViewController.protocolDelegate.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension17WebViewController_protocolDelegate);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*WebViewController.protocolDelegate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension17WebViewController_protocolDelegate, a1, 33, 0);
  return j__swift_endAccess;
}

id WebViewController.__allocating_init(bag:account:clientInfo:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v3), "initWithBag:account:clientInfo:", a1, a2, a3);
  swift_unknownObjectRelease(a1);

  return v7;
}

void WebViewController.init(bag:account:clientInfo:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100649950, "SubscribePageExtension/WebViewController.swift", 46, 2, 37, 0);
  __break(1u);
}

Swift::Void __swiftcall WebViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  sub_1003E5468(a1, (SEL *)&selRef_viewWillAppear_, (SEL *)&selRef_beginDelayingNotifications);
}

uint64_t type metadata accessor for WebViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension17WebViewController);
}

Swift::Void __swiftcall WebViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_1003E5468(a1, (SEL *)&selRef_viewDidDisappear_, (SEL *)&selRef_endDelayingNotifications);
}

void sub_1003E5468(char a1, SEL *a2, SEL *a3)
{
  void *v3;
  id v7;
  objc_super v8;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for WebViewController();
  objc_msgSendSuper2(&v8, *a2, a1 & 1);
  v7 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v7, *a3);

}

void sub_1003E54F8(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  const char *v8;
  id v9;
  void *v10;
  id v11;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)type metadata accessor for WebViewController();
  v8 = *a4;
  v9 = v12.receiver;
  objc_msgSendSuper2(&v12, v8, a3);
  v10 = (void *)objc_opt_self(ASKRebootstrapCoordinator);
  v11 = objc_msgSend(v10, "sharedCoordinator", v12.receiver, v12.super_class);
  objc_msgSend(v11, *a5);

}

void WebViewController.webViewController(_:handle:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003E5A28(a2, a3, a4, (uint64_t (*)(uint64_t))&URLProtocolDelegate.performAuthentication(for:), (uint64_t)sub_1003E55C4, (uint64_t)&unk_10073DEC0);
}

{
  sub_1003E5A28(a2, a3, a4, (uint64_t (*)(uint64_t))&URLProtocolDelegate.presentDialog(for:), (uint64_t)sub_1003E55C4, (uint64_t)&unk_10073DE98);
}

void sub_1003E5678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id WebViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WebViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003E581C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  NSURL *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t result;
  objc_super v26;
  void *v27;

  v5 = type metadata accessor for URLProtocolDelegate(0);
  v6 = type metadata accessor for ObjectGraph(0);
  v7 = v2;
  inject<A, B>(_:from:)(&v27, v5, a2, v5, v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension17WebViewController_protocolDelegate] = v27;

  v8 = sub_1001BEEC8();
  inject<A, B>(_:from:)(&v27, v8, a2, v8, v6);
  v9 = v27;
  v10 = type metadata accessor for ASKBagContract(0);
  v11 = *(_QWORD *)(a2 + qword_100854070);
  if (v11)
  {
    swift_retain(*(_QWORD *)(a2 + qword_100854070));
    v13 = ASKBagContract.amsBag.getter(v12);
    v14 = objc_msgSend(v9, "ams_activeiTunesAccount");
    v26.receiver = v7;
    v26.super_class = (Class)type metadata accessor for WebViewController();
    v15 = objc_msgSendSuper2(&v26, "initWithBag:account:clientInfo:", v13, v14, 0);
    swift_unknownObjectRelease(v13);

    v16 = (void *)objc_opt_self(AMSUIWebAppearance);
    v17 = v15;
    v18 = objc_msgSend(v16, "tableViewAppearance");
    objc_msgSend(v17, "setAppearance:", v18);

    objc_msgSend(v17, "setDelegate:", v17);
    v19 = v17;
    URL._bridgeToObjectiveC()(v20);
    v22 = v21;
    v23 = objc_msgSend(v19, "loadURL:", v21);

    swift_release(v11);
    v24 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
    return (uint64_t)v19;
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v10);
    __break(1u);
  }
  return result;
}

void sub_1003E5A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD aBlock[5];
  uint64_t v19;
  _BYTE v20[24];

  v13 = (id *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension17WebViewController_protocolDelegate);
  swift_beginAccess(v13, v20, 0, 0);
  v14 = *v13;
  v15 = (void *)a4(a1);

  aBlock[4] = a2;
  v19 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = a5;
  aBlock[3] = a6;
  v16 = _Block_copy(aBlock);
  v17 = v19;
  swift_retain(a3);
  swift_release(v17);
  objc_msgSend(v15, "addFinishBlock:", v16);
  _Block_release(v16);

}

uint64_t sub_1003E5B14()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E5B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E5678(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1003E5B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003E5B60(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003E5B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  v11 = sub_10000DF3C(&qword_1007F5840);
  v12 = swift_allocObject(v11, 40, 7);
  v31 = xmmword_10066FE60;
  *(_OWORD *)(v12 + 16) = xmmword_10066FE60;
  type metadata accessor for LocalPreferences(0);
  v13 = static LocalPreferences.placeholderDisableShelfHydration.getter();
  v14 = static LocalPreferences.AppStoreKitInternal.getter(v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v15 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v17 = sub_1003E5E0C(0xD000000000000017, 0x8000000100649A80, 0, 0, 0, (uint64_t)v7, v14, v16);
  v18 = swift_release(v14);
  v19 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v18);
  *(_QWORD *)(v12 + 32) = v17;
  v32 = v12;
  specialized Array._endMutation()(v19);
  v20 = v32;
  v21 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v21 + 16) = v31;
  v22 = type metadata accessor for DebugSection();
  v23 = (_QWORD *)swift_allocObject(v22, 56, 7);
  v25 = UUID.init()(v24);
  v26 = UUID.uuidString.getter(v25);
  v28 = v27;
  v29 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v23[2] = v26;
  v23[3] = v28;
  v23[4] = 0xD000000000000012;
  v23[5] = 0x8000000100649AA0;
  v23[6] = v20;
  *(_QWORD *)(v21 + 32) = v23;
  v32 = v21;
  specialized Array._endMutation()(v29);
  return v32;
}

id sub_1003E5DBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPlaceholderSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPlaceholderSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension24ShelfPlaceholderSettings);
}

uint64_t sub_1003E5E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v31;
  _QWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v31 = a6;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v32[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a8 + 56) = a1;
  *(_QWORD *)(a8 + 64) = a2;
  *(_QWORD *)(a8 + 72) = a3;
  *(_QWORD *)(a8 + 80) = a4;
  *(_BYTE *)(a8 + 88) = a5;
  v19 = a8 + OBJC_IVAR____TtC22SubscribePageExtension27BoolPreferencesDebugSetting_key;
  v20 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v31, v20);
  v23 = (_QWORD *)(a8 + OBJC_IVAR____TtC22SubscribePageExtension27BoolPreferencesDebugSetting_preferences);
  *v23 = a7;
  v23[1] = &protocol witness table for LocalPreferences;
  v24 = swift_unknownObjectRetain(a7);
  v25 = UUID.init()(v24);
  v26 = UUID.uuidString.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v32[0] = v26;
  v32[1] = v28;
  AnyHashable.init<A>(_:)(v32, &type metadata for String, &protocol witness table for String);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  v29 = v34;
  *(_OWORD *)(a8 + 16) = v33;
  *(_OWORD *)(a8 + 32) = v29;
  *(_QWORD *)(a8 + 48) = v35;
  return a8;
}

uint64_t sub_1003E5F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  _UNKNOWN ***v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN ***v39;
  void *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  id v50;
  __n128 v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t ObjectType;
  id v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD aBlock[5];
  uint64_t v77;

  v5 = v4;
  v75 = a2;
  ObjectType = swift_getObjectType();
  v10 = type metadata accessor for Artwork.Style(0, v9);
  __chkstk_darwin(v10);
  v73 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v71 = *(_QWORD *)(v12 - 8);
  v72 = v12;
  v13 = __chkstk_darwin(v12);
  v70 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0, v13);
  v68 = *(_QWORD *)(v15 - 8);
  v69 = v15;
  __chkstk_darwin(v15);
  v67 = (char *)&ObjectType - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a4);
  v17 = sub_1003E7870(a1, a3, a4);
  swift_release(a4);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews;
  v19 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews];
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews] = v17;
  v20 = objc_msgSend(v5, "traitCollection", swift_bridgeObjectRelease(v19).n128_f64[0]);
  v21 = objc_msgSend(v20, "preferredContentSizeCategory");

  LOBYTE(v20) = UIContentSizeCategory.isAccessibilityCategory.getter(v21);
  sub_1003E6FC0(v20 & 1);
  v66 = v5;
  v22 = *(_QWORD *)&v5[v18];
  if (!((unint64_t)v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(v22, 2);
    if (v23)
      goto LABEL_3;
LABEL_19:
    *(_QWORD *)&v49 = swift_bridgeObjectRelease_n(v22, 2).n128_u64[0];
    v50 = v66;
    objc_msgSend(v66, "setNeedsLayout", v49);
    objc_msgSend(v50, "layoutIfNeeded");
    sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v52 = (void *)static OS_dispatch_queue.main.getter(v51);
    v53 = swift_allocObject(&unk_10073DF10, 32, 7);
    v54 = ObjectType;
    *(_QWORD *)(v53 + 16) = v50;
    *(_QWORD *)(v53 + 24) = v54;
    aBlock[4] = sub_1003E7A04;
    v77 = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_10073DF28;
    v55 = _Block_copy(aBlock);
    v56 = v77;
    v57 = v50;
    v58 = swift_release(v56);
    v59 = v67;
    static DispatchQoS.unspecified.getter(v58);
    aBlock[0] = _swiftEmptyArrayStorage;
    v60 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v61 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
    v62 = sub_100033D68();
    v63 = v70;
    v64 = v72;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v61, v62, v72, v60);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v63, v55);
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v64);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v59, v69);
  }
  if (v22 < 0)
    v48 = v22;
  else
    v48 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v22, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v48);
  v23 = result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v23 >= 1)
  {
    v25 = 0;
    v74 = v22 & 0xC000000000000001;
    v26 = &off_100800000;
    v27 = v73;
    do
    {
      if (v74)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22);
      else
        v31 = *(id *)(v22 + 8 * v25 + 32);
      v32 = v31;
      v33 = ((uint64_t (*)(void))ArcadeDownloadPackCategory.artwork.getter)();
      if (qword_1007F15A0 != -1)
        swift_once(&qword_1007F15A0, sub_1001C0A60);
      v34 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_100800190, *((double *)&xmmword_100800190 + 1));
      v35 = swift_release(v33);
      v36 = ArcadeDownloadPackCategory.artwork.getter(v35);
      v37 = Artwork.artwork.getter();
      swift_release(v36);
      if (v37)
      {
        v39 = v26;
        v40 = *(_UNKNOWN **)((char *)v26[60] + (_QWORD)v32);
        Artwork.style.getter(v38);
        v41 = ArtworkView.style.setter(v27);
        *(_QWORD *)&v42 = Artwork.contentMode.getter(v41).n128_u64[0];
        v44 = ArtworkLoaderConfig.size.getter(objc_msgSend(v40, "setContentMode:", v43, v42));
        v46 = ArtworkView.imageSize.setter(v44, v45);
        v47 = Artwork.backgroundColor.getter(v46);
        if (!v47)
        {
          sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
          v47 = static UIColor.placeholderBackground.getter();
        }
        ArtworkView.backgroundColor.setter(v47);
        swift_release(v37);
        v26 = v39;
      }
      ++v25;
      v28 = *(uint64_t *)((char *)v26[60] + (_QWORD)v32);
      v29 = type metadata accessor for ArtworkView(0);
      v30 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2, 1, v28, v29, v30);

      swift_release(v34);
    }
    while (v23 != v25);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_1003E64BC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  char *v6;
  char *v7;
  objc_class *v8;
  unsigned __int8 v9;
  void *v10;
  double v11;
  void *v12;
  double v13;
  uint64_t v14;
  objc_super v15;
  objc_super v16;
  objc_super v17;
  objc_super v18;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews), 2);
    if (v4)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease_n(v3, 2);
    return;
  }
  if (v3 < 0)
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews);
  else
    v14 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v3, 2);
  v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v4)
    goto LABEL_19;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = (char *)*(id *)(v3 + 8 * i + 32);
      v7 = v6;
      v8 = (objc_class *)type metadata accessor for ArcadeDownloadPackCategoryButton();
      v18.receiver = v7;
      v18.super_class = v8;
      v9 = objc_msgSendSuper2(&v18, "isSelected");
      v17.receiver = v7;
      v17.super_class = v8;
      objc_msgSendSuper2(&v17, "setEnabled:", (v9 | a1) & 1);
      v10 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension32ArcadeDownloadPackCategoryButton_titleLabel];
      v16.receiver = v7;
      v16.super_class = v8;
      if (objc_msgSendSuper2(&v16, "isEnabled"))
        v11 = 1.0;
      else
        v11 = 0.4;
      objc_msgSend(v10, "setAlpha:", v11);
      v12 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension32ArcadeDownloadPackCategoryButton_artworkView];
      v15.receiver = v7;
      v15.super_class = v8;
      if (objc_msgSendSuper2(&v15, "isEnabled"))
        v13 = 1.0;
      else
        v13 = 0.4;
      objc_msgSend(v12, "setAlpha:", v13);

    }
    goto LABEL_19;
  }
  __break(1u);
}

double sub_1003E6664(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  BOOL v18;
  uint64_t v19;
  double result;
  _QWORD v21[2];
  id v22;
  uint64_t v23;

  v21[1] = a1;
  v22 = a2;
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews);
  if ((unint64_t)v10 >> 62)
    goto LABEL_14;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews), 2);
  for (; v11; v11 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v23 = v11;
    v12 = v10 & 0xC000000000000001;
    v13 = 4;
    v14 = v10;
    v15 = 0;
    if ((v10 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v10);
      goto LABEL_6;
    }
    while (1)
    {
      v16 = *(id *)(v10 + 8 * v13);
LABEL_6:
      v17 = v16;
      v10 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      ArcadeDownloadPackCategory.impressionMetrics.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1003A5990((uint64_t)v5);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
        objc_msgSend(v17, "bounds");
        objc_msgSend(v22, "convertRect:fromCoordinateSpace:", v17);
        ImpressionsCalculator.addElement(_:at:)(v9);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }

      v18 = v10 == v23;
      v10 = v14;
      if (v18)
        goto LABEL_18;
      v15 = ++v13 - 4;
      if (v12)
        goto LABEL_4;
    }
    __break(1u);
LABEL_14:
    if (v10 < 0)
      v19 = v10;
    else
      v19 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v10, 2);
  }
LABEL_18:
  *(_QWORD *)&result = swift_bridgeObjectRelease_n(v10, 2).n128_u64[0];
  return result;
}

void sub_1003E6870()
{
  qword_10080CEE8 = 0x4049000000000000;
}

void sub_1003E6880()
{
  qword_10080CEF0 = 0x4020000000000000;
}

void sub_1003E6890()
{
  qword_10080CEF8 = 0x4062C00000000000;
}

void sub_1003E68A4()
{
  qword_10080CF00 = 0;
}

char *sub_1003E68B0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  Class isa;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v56;
  uint64_t v57;
  objc_class *v58;
  _QWORD v59[3];
  objc_class *v60;
  objc_super v61;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_firstColumn;
  v11 = objc_allocWithZone((Class)UIStackView);
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  *(_QWORD *)&v4[v10] = v13;
  v14 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_secondColumn;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v12[v14] = v15;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView____lazy_storage___topContentConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews] = _swiftEmptyArrayStorage;
  v16 = sub_10000DF3C(&qword_1007F5840);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100671250;
  *(_QWORD *)(v17 + 32) = v13;
  *(_QWORD *)(v17 + 40) = v15;
  v59[0] = v17;
  specialized Array._endMutation()(v17);
  v18 = objc_allocWithZone((Class)UIStackView);
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v19 = v13;
  v20 = v15;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v18, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v59[0]).n128_f64[0]);

  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_contentView] = v22;
  v61.receiver = v12;
  v61.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v61, "initWithFrame:", a1, a2, a3, a4);
  v57 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v24 = swift_allocObject(v57, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_10066FBA0;
  v25 = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v58 = ObjectType;
  v59[0] = v23;
  v60 = ObjectType;
  v26 = (char *)v23;
  v27 = UIView.registerForTraitChanges(_:target:action:)(v24, v59, "setNeedsLayout");
  swift_unknownObjectRelease(v27);

  swift_bridgeObjectRelease(v24);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  v28 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_firstColumn;
  v29 = *(void **)&v26[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_firstColumn];
  objc_msgSend(v29, "setAxis:", 1);
  v30 = qword_1007F1FB0;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_1007F1FB0, sub_1003E6870);
  objc_msgSend(v31, "setSpacing:", *(double *)&qword_10080CEE8, 1, 2);

  objc_msgSend(*(id *)&v26[v28], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = *(void **)&v26[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_secondColumn];
  objc_msgSend(v32, "setAxis:", 1);
  objc_msgSend(v32, "setSpacing:", *(double *)&qword_10080CEE8);
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v33 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_contentView;
  v34 = *(void **)&v26[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_contentView];
  objc_msgSend(v34, "setDistribution:", 1);
  objc_msgSend(v34, "setAlignment:", 1);
  objc_msgSend(v34, "setAxis:", 0);
  v35 = qword_1007F1FB8;
  v36 = v34;
  if (v35 != -1)
    swift_once(&qword_1007F1FB8, sub_1003E6880);
  objc_msgSend(v36, "setSpacing:", *(double *)&qword_10080CEF0);

  v37 = *(void **)&v26[v33];
  objc_msgSend(v26, "addSubview:", v37);
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38 = (void *)objc_opt_self(NSLayoutConstraint);
  v39 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v39 + 16) = xmmword_10066F9C0;
  v40 = objc_msgSend(v37, "leftAnchor");
  v41 = objc_msgSend(v26, "leftAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v39 + 32) = v42;
  v43 = objc_msgSend(*(id *)&v26[v33], "rightAnchor");
  v44 = objc_msgSend(v26, "rightAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v39 + 40) = v45;
  *(_QWORD *)(v39 + 48) = sub_1003E6E88();
  v46 = objc_msgSend(*(id *)&v26[v33], "bottomAnchor");
  v47 = objc_msgSend(v26, "bottomAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v39 + 56) = v48;
  v59[0] = v39;
  specialized Array._endMutation()(v49);
  v50 = v59[0];
  sub_100019574(0, (unint64_t *)&qword_1007F45C0, NSLayoutConstraint_ptr);
  v51 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "activateConstraints:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  v52 = swift_allocObject(v57, 48, 7);
  *(_OWORD *)(v52 + 16) = v56;
  *(_QWORD *)(v52 + 32) = v25;
  *(_QWORD *)(v52 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v60 = v58;
  v59[0] = v26;
  v53 = v26;
  v54 = UIView.registerForTraitChanges(_:target:action:)(v52, v59, "preferredContentSizeCategoryDidChange");
  swift_unknownObjectRelease(v54);

  swift_bridgeObjectRelease(v52);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  return v53;
}

id sub_1003E6E88()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView____lazy_storage___topContentConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView____lazy_storage___topContentConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView____lazy_storage___topContentConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_contentView], "topAnchor");
    v5 = objc_msgSend(v0, "topAnchor");
    if (qword_1007F1FC0 != -1)
      swift_once(&qword_1007F1FC0, sub_1003E6890);
    v6 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v5, *(double *)&qword_10080CEF8);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1003E6FC0(char a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t m;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id k;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_secondColumn);
  objc_msgSend(v2, "setHidden:", a1 & 1);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_firstColumn);
  v4 = objc_msgSend(v3, "arrangedSubviews");
  v5 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v11 = v6;
    else
      v11 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (!v7)
      goto LABEL_13;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (!v7)
      goto LABEL_13;
  }
  if (v7 < 1)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    else
      v9 = *(id *)(v6 + 8 * i + 32);
    v10 = v9;
    objc_msgSend(v9, "removeFromSuperview");

  }
LABEL_13:
  v12 = objc_msgSend(v2, "arrangedSubviews", swift_bridgeObjectRelease_n(v6, 2).n128_f64[0]);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v5);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v18 = v13;
    else
      v18 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (!v14)
      goto LABEL_25;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (!v14)
      goto LABEL_25;
  }
  if (v14 < 1)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  for (j = 0; j != v14; ++j)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v13);
    else
      v16 = *(id *)(v13 + 8 * j + 32);
    v17 = v16;
    objc_msgSend(v16, "removeFromSuperview");

  }
LABEL_25:
  swift_bridgeObjectRelease_n(v13, 2);
  v1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews);
  if ((a1 & 1) == 0)
  {
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v31 = v1;
      else
        v31 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v1, 2);
      v24 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (v24)
      {
LABEL_36:
        v25 = 0;
        if ((v1 & 0xC000000000000001) == 0)
          goto LABEL_38;
LABEL_37:
        for (k = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v1);
              ;
              k = *(id *)(v1 + 8 * v25 + 32))
        {
          v27 = k;
          if (__OFADD__(v25, 1))
            break;
          if ((v25 & 1) != 0)
            v28 = v2;
          else
            v28 = v3;
          objc_msgSend(v28, "addArrangedSubview:", v27);

          if (v25 + 1 == v24)
            goto LABEL_58;
          ++v25;
          if ((v1 & 0xC000000000000001) != 0)
            goto LABEL_37;
LABEL_38:
          ;
        }
        __break(1u);
        goto LABEL_47;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v1, 2);
      if (v24)
        goto LABEL_36;
    }
LABEL_58:
    swift_bridgeObjectRelease(v1);
    goto LABEL_59;
  }
  if (!((unint64_t)v1 >> 62))
  {
    v19 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v1, 2);
    v20 = v3;
    if (v19)
      goto LABEL_28;
LABEL_53:
    swift_bridgeObjectRelease(v1);

LABEL_59:
    swift_bridgeObjectRelease(v1);
    return;
  }
LABEL_49:
  if (v1 < 0)
    v29 = v1;
  else
    v29 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v1, 2);
  v30 = v3;
  v19 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v19)
    goto LABEL_53;
LABEL_28:
  if (v19 >= 1)
  {
    for (m = 0; m != v19; ++m)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(m, v1);
      else
        v22 = *(id *)(v1 + 8 * m + 32);
      v23 = v22;
      objc_msgSend(v3, "addArrangedSubview:", v22);

    }
    goto LABEL_53;
  }
  __break(1u);
}

void sub_1003E7394(char *a1)
{
  id v2;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[4];

  v2 = sub_1003E6E88();
  if (qword_1007F1FC8 != -1)
    swift_once(&qword_1007F1FC8, sub_1003E68A4);
  objc_msgSend(v2, "setConstant:", *(double *)&qword_10080CF00);

  v3 = *(void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_firstColumn];
  if (qword_1007F1FB8 != -1)
    swift_once(&qword_1007F1FB8, sub_1003E6880);
  v4 = *(double *)&qword_10080CEF0;
  objc_msgSend(v3, "setSpacing:", *(double *)&qword_10080CEF0);
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_secondColumn], "setSpacing:", v4);
  v5 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  __chkstk_darwin(v5);
  v8[2] = a1;
  v6 = swift_allocObject(&unk_10073DF60, 24, 7);
  *(_QWORD *)(v6 + 16) = a1;
  v7 = a1;
  static UIView.animate(springDuration:bounce:initialSpringVelocity:delay:options:animations:completion:)(0, sub_1000D93BC, v8, sub_1003E7A48, v6, 0.5, 0.0, 0.0, 0.0);
  swift_release(v6);
}

void sub_1003E75BC()
{
  char *v0;
  id v1;
  id v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2) & 1;
  if (v3 != objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_secondColumn], "isHidden"))
  {
    sub_1003E6FC0(v3);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_contentView], "layoutIfNeeded");
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews];
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews];
      else
        v9 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v4, 2);
      v5 = _CocoaArrayWrapper.endIndex.getter(v9);
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v4, 2);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        v6 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
            v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
          else
            v7 = *(id *)(v4 + 8 * v6 + 32);
          v8 = v7;
          ++v6;
          objc_msgSend(v7, "setNeedsLayout");
          objc_msgSend(v8, "invalidateIntrinsicContentSize");

        }
        while (v5 != v6);
      }
    }
    swift_bridgeObjectRelease_n(v4, 2);
  }
}

uint64_t type metadata accessor for ArcadeDownloadPackCategoryListView()
{
  return objc_opt_self(_TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView);
}

double sub_1003E77F8()
{
  _QWORD *v0;
  double v1;
  double v2;
  id v3;

  objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_contentView), "systemLayoutSizeFittingSize:");
  v2 = v1;
  v3 = sub_1003E6E88();
  objc_msgSend(v3, "constant");

  return v2;
}

_QWORD *sub_1003E7870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v6)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v6);
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
      }
      else
      {
        v9 = *(_QWORD *)(a1 + 8 * v8 + 32);
        swift_retain(v9);
      }
      ++v8;
      objc_allocWithZone((Class)type metadata accessor for ArcadeDownloadPackCategoryButton());
      swift_retain(a3);
      sub_1001C0B28(v9, a2, a3);
      v11 = v10;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (v6 == v8)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_1003E79E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003E7A04()
{
  uint64_t v0;

  sub_1003E7394(*(char **)(v0 + 16));
}

uint64_t sub_1003E7A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003E7A1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003E7A24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E7A48()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), "superview");
  objc_msgSend(v1, "invalidateIntrinsicContentSize");

}

void sub_1003E7A8C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_firstColumn;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v2 = OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_secondColumn;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView____lazy_storage___topContentConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension34ArcadeDownloadPackCategoryListView_categoryViews] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ArcadeDownloadPackCategoryListView.swift", 63, 2, 74, 0);
  __break(1u);
}

uint64_t sub_1003E7B50(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_1008545C0);
  sub_1000117A8(v5, (uint64_t)qword_1008545C0);
  if (qword_1007F23F8 != -1)
    swift_once(&qword_1007F23F8, sub_100414D74);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_1008550D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 27.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1003E7C9C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_1008545D8);
  sub_1000117A8(v5, (uint64_t)qword_1008545D8);
  if (qword_1007F22C8 != -1)
    swift_once(&qword_1007F22C8, sub_100413D94);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100854D40);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 22.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1003E7DE8()
{
  qword_1008545F0 = 0x4020000000000000;
}

id sub_1003E7DF8()
{
  uint64_t v0;
  _QWORD *v1;
  id result;
  uint64_t v3;
  _QWORD v4[5];

  v0 = type metadata accessor for Feature.iOS(0);
  v4[3] = v0;
  v4[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v1 = sub_1000117C0(v4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Feature.iOS.review_summarization(_:), v0);
  LOBYTE(v0) = isFeatureEnabled(_:)(v4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v4);
  if ((v0 & 1) != 0)
  {
    result = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  else
  {
    v3 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    result = (id)static UIColor.reviewBackground.getter(v3);
  }
  qword_10080CF60 = (uint64_t)result;
  return result;
}

uint64_t sub_1003E7ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DF3C(&qword_100806718);
  sub_100045464(v0, qword_10080CF68);
  sub_1000117A8(v0, (uint64_t)qword_10080CF68);
  v5 = 10;
  v4 = 9;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for ContentMode(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

char *sub_1003E7F60(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD *, uint64_t, uint64_t);
  char *v30;
  char v31;
  _QWORD *v32;
  char v33;
  char v34;
  unsigned __int8 v35;
  _QWORD *v36;
  char v37;
  __n128 v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  Class isa;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  objc_class *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62;
  NSString *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  NSString *v79;
  uint64_t v80;
  char *v81;
  objc_class *v82;
  id v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  char v87;
  id v88;
  void *v89;
  id v90;
  char v91;
  char *v92;
  id v93;
  char v94;
  _QWORD *v95;
  char v96;
  double v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double left;
  double bottom;
  double right;
  id v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  double v113;
  double v114;
  double v115;
  void *v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  double v124;
  uint64_t v125;
  void *v126;
  _QWORD *v127;
  id v128;
  uint64_t v129;
  id v130;
  void *v131;
  _QWORD *v132;
  char v133;
  void *v134;
  char *v135;
  id v136;
  _QWORD *v137;
  char v138;
  id v139;
  void *v140;
  void *v141;
  void *v142;
  id v143;
  id v144;
  void *v145;
  id v146;
  id v147;
  id v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  void (*v167)(char *, uint64_t, uint64_t);
  char *v168;
  UIFontTextStyle *v169;
  uint64_t v170;
  uint64_t ObjectType;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(_QWORD *, _QWORD, uint64_t);
  unsigned int v178;
  uint64_t v179;
  char *v180;
  objc_super v181;
  _QWORD v182[3];
  uint64_t v183;
  uint64_t v184;

  ObjectType = swift_getObjectType();
  v163 = type metadata accessor for PageGrid.Direction(0);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v160 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v161 = (char *)&v157 - v11;
  v159 = type metadata accessor for PageGrid(0);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v164 = (char *)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FontUseCase(0);
  v176 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v169 = (UIFontTextStyle *)((char *)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for DirectionalTextAlignment(0);
  v172 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v166 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v173 = (char *)&v157 - v18;
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v19);
  v165 = (uint64_t)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v157 - v22;
  v4[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_isExpanded] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_pageTraits] = 0;
  v24 = &v4[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler];
  *v24 = 0;
  v24[1] = 0;
  v25 = type metadata accessor for Feature.iOS(0);
  v183 = v25;
  v26 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v184 = v26;
  v27 = sub_1000117C0(v182);
  v28 = enum case for Feature.iOS.review_summarization(_:);
  v29 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v29(v27, enum case for Feature.iOS.review_summarization(_:), v25);
  v30 = v4;
  v31 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  v183 = v25;
  v184 = v26;
  v32 = sub_1000117C0(v182);
  v29(v32, v28, v25);
  v33 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
  if ((v31 & 1) != 0)
    v34 = 3;
  else
    v34 = 4;
  if ((v33 & 1) != 0)
    v35 = 1;
  else
    v35 = 2;
  *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView] = sub_100599FB4(v34, 0, 0, 0, v35);
  v183 = v25;
  v184 = v26;
  v179 = v26;
  v36 = sub_1000117C0(v182);
  v178 = v28;
  v177 = v29;
  v29(v36, v28, v25);
  v37 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  if ((v37 & 1) != 0)
  {
    v39 = sub_1004853E8(0xD000000000000017, 0x8000000100642C90, 0, v38);
    v40 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v39);

  }
  else
  {
    v40 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }
  v174 = v25;
  v175 = v15;
  *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_backgroundImageView] = v40;
  objc_msgSend(v40, "setHidden:", 1);
  v41 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v42 = objc_allocWithZone((Class)UIColor);
  v43 = v40;
  v44 = objc_msgSend(v42, "initWithRed:green:blue:alpha:", 0.968627451, 0.968627451, 0.968627451, 1.0);
  v45 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.109803922, 0.109803922, 0.117647059, 1.0);
  v170 = v41;
  isa = UIColor.init(light:dark:)((UIColor)v44, (UIColor)v45).super.isa;
  objc_msgSend(v43, "setBackgroundColor:", isa);

  v47 = v30;
  if (qword_1007F23F8 != -1)
    swift_once(&qword_1007F23F8, sub_100414D74);
  v48 = sub_1000117A8(v13, (uint64_t)qword_1008550D0);
  v49 = v176;
  v167 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
  v167(v23, v48, v13);
  v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56);
  v50(v23, 0, 1, v13);
  v51 = enum case for DirectionalTextAlignment.none(_:);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v172 + 104);
  v53 = v173;
  v52(v173, enum case for DirectionalTextAlignment.none(_:), v175);
  v54 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v55 = objc_allocWithZone(v54);
  v56 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v23, 1, 0, 1, 0, v53, 0, 0);
  v168 = v47;
  *(_QWORD *)&v47[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_titleLabel] = v56;
  v57 = v174;
  v183 = v174;
  v184 = v179;
  v58 = sub_1000117C0(v182);
  v177(v58, v178, v57);
  LOBYTE(v57) = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  if ((v57 & 1) != 0)
  {
    *(_QWORD *)v23 = UIFontTextStyleBody;
    *((_DWORD *)v23 + 2) = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v23, enum case for FontUseCase.preferredFont(_:), v13);
    v50(v23, 0, 1, v13);
    v59 = v175;
    v52(v53, v51, v175);
    v60 = (char *)objc_allocWithZone((Class)type metadata accessor for FadeOutDynamicTypeLabel(0));
    v61 = qword_1007FF1A0;
    v62 = objc_allocWithZone((Class)type metadata accessor for InvertedGradientLayer());
    v63 = UIFontTextStyleBody;
    v64 = v60;
    *(_QWORD *)&v60[v61] = objc_msgSend(v62, "init");
    v65 = &v64[qword_1007FF1A8];
    *(_QWORD *)v65 = 0;
    v65[8] = 1;

    v66 = v165;
    sub_100072A20((uint64_t)v23, v165);
    v67 = v172;
    v68 = v166;
    (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v166, v53, v59);
    v69 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v66, 2, 0, 1, 0, v68, 0, 0);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v59);
    sub_100072A68((uint64_t)v23);
  }
  else
  {
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v70 = sub_1000117A8(v13, (uint64_t)qword_100854D40);
    v167(v23, v70, v13);
    v50(v23, 0, 1, v13);
    v71 = v173;
    v52(v173, v51, v175);
    v72 = objc_allocWithZone(v54);
    v69 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v23, 2, 0, 1, 0, v71, 0, 0);
  }
  v73 = v168;
  v74 = v174;
  *(_QWORD *)&v168[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel] = v69;
  v183 = v74;
  v184 = v179;
  v75 = sub_1000117C0(v182);
  v177(v75, v178, v74);
  v76 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  v77 = (uint64_t)v169;
  if ((v76 & 1) != 0)
  {
    *v169 = UIFontTextStyleBody;
    *(_DWORD *)(v77 + 8) = 0;
    v78 = v176;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v176 + 104))(v77, enum case for FontUseCase.preferredFont(_:), v13);
    v79 = UIFontTextStyleBody;
  }
  else
  {
    v78 = v176;
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v80 = sub_1000117A8(v13, (uint64_t)qword_100854D40);
    v167((char *)v77, v80, v13);
  }
  if (qword_1007F1FE8 != -1)
    swift_once(&qword_1007F1FE8, sub_1003E7DF8);
  v81 = sub_10039D6A4(v77, (void *)qword_10080CF60);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v13);
  *(_QWORD *)&v73[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton] = v81;

  v82 = (objc_class *)type metadata accessor for EditorsChoiceReviewView();
  v181.receiver = v73;
  v181.super_class = v82;
  v83 = objc_msgSendSuper2(&v181, "initWithFrame:", a1, a2, a3, a4);
  v84 = qword_10080CF60;
  v85 = (char *)v83;
  objc_msgSend(v85, "setBackgroundColor:", v84);
  v183 = v74;
  v184 = v179;
  v86 = sub_1000117C0(v182);
  v177(v86, v178, v74);
  v87 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  v88 = objc_msgSend(v85, "layer");
  v89 = v88;
  if ((v87 & 1) != 0)
  {
    objc_msgSend(v88, "setCornerRadius:", 0.0);

    v90 = objc_msgSend(v85, "traitCollection");
    v91 = UITraitCollection.isSizeClassRegular.getter(v90);

    if ((v91 & 1) != 0)
    {
      v92 = v85;
      v93 = objc_msgSend(v92, "traitCollection");
      v94 = UITraitCollection.prefersAccessibilityLayouts.getter(v93);

      if ((v94 & 1) != 0
        && (v183 = v74,
            v184 = v179,
            v95 = sub_1000117C0(v182),
            v177(v95, v178, v74),
            v96 = isFeatureEnabled(_:)(v182),
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182),
            (v96 & 1) != 0))
      {
        v97 = 52.0;
      }
      else
      {
        v97 = 242.0;
      }
      objc_msgSend(v92, "setLayoutMargins:", 0.0, 52.0, 0.0, v97);

    }
    else
    {
      v98 = v162;
      v99 = v161;
      v100 = v163;
      (*(void (**)(char *, _QWORD, uint64_t))(v162 + 104))(v161, enum case for PageGrid.Direction.vertical(_:), v163);
      objc_msgSend(v85, "bounds");
      v102 = v101;
      v104 = v103;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v108 = objc_msgSend(v85, "traitCollection");
      v109 = v160;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v160, v99, v100);
      v110 = sub_100418380(0.0);
      v111 = v164;
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v109, 0, v110, v102, v104, UIEdgeInsetsZero.top, left, bottom, right);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
      v112 = v85;
      v113 = PageGrid.horizontalMargins.getter(v112);
      v115 = v114;
      v116 = *(void **)&v112[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_pageTraits];
      if (v116)
        objc_msgSend(v116, "pageMarginInsets", v113);
      else
        v117 = 20.0;
      v118 = v159;
      v119 = v158;
      objc_msgSend(v112, "setLayoutMargins:", 0.0, v115, 0.0, v117);

      (*(void (**)(char *, uint64_t))(v119 + 8))(v111, v118);
    }
  }
  else
  {
    if (qword_1007F1FE0 != -1)
      swift_once(&qword_1007F1FE0, sub_1003E7DE8);
    objc_msgSend(v89, "setCornerRadius:", *(double *)&qword_1008545F0);

    objc_msgSend(v85, "setLayoutMargins:", 0.0, 20.0, 0.0, 20.0);
  }
  v120 = OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel;
  objc_msgSend(*(id *)&v85[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel], "setBackgroundColor:", qword_10080CF60);
  v121 = OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_backgroundImageView;
  v122 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_backgroundImageView];
  if (qword_1007F1FF0 != -1)
    swift_once(&qword_1007F1FF0, sub_1003E7ED0);
  v123 = sub_10000DF3C(&qword_100806718);
  sub_1000117A8(v123, (uint64_t)qword_10080CF68);
  v180 = v85;
  *(_QWORD *)&v124 = Conditional.evaluate(with:)(&v180, v123).n128_u64[0];
  objc_msgSend(v122, "setContentMode:", v182[0], v124);
  objc_msgSend(v85, "addSubview:", *(_QWORD *)&v85[v121]);
  v125 = OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView;
  v126 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView];
  v183 = v74;
  v184 = v179;
  v127 = sub_1000117C0(v182);
  v177(v127, v178, v74);
  v128 = v126;
  LOBYTE(v123) = isFeatureEnabled(_:)(v182);
  v129 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  if ((v123 & 1) != 0)
    v130 = (id)static UIColor.primaryText.getter(v129);
  else
    v130 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  v131 = v130;
  objc_msgSend(v128, "setTintColor:", v130);

  objc_msgSend(v85, "addSubview:", *(_QWORD *)&v85[v125]);
  objc_msgSend(v85, "addSubview:", *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_titleLabel]);
  v183 = v74;
  v184 = v179;
  v132 = sub_1000117C0(v182);
  v177(v132, v178, v74);
  v133 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  if ((v133 & 1) != 0 && (v85[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge] & 1) == 0)
  {
    v134 = (void *)objc_opt_self(UIColor);
    v135 = v85;
    v136 = objc_msgSend(v134, "systemBackgroundColor");
    objc_msgSend(v135, "setBackgroundColor:", v136);

  }
  v183 = v74;
  v184 = v179;
  v137 = sub_1000117C0(v182);
  v177(v137, v178, v74);
  v138 = isFeatureEnabled(_:)(v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v182);
  if ((v138 & 1) != 0)
  {
    objc_msgSend(v85, "setClipsToBounds:", 1);
    v139 = *(id *)&v85[v120];
    v140 = (void *)static UIColor.secondaryText.getter(v139);
    objc_msgSend(v139, "setTextColor:", v140);

    v141 = *(void **)&v85[v120];
    v142 = (void *)objc_opt_self(UIFont);
    v143 = v141;
    v144 = objc_msgSend(v142, "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v143, "setFont:", v144);

  }
  v145 = *(void **)&v85[v120];
  objc_msgSend(v145, "setLineBreakMode:", 0);
  objc_msgSend(v145, "setUserInteractionEnabled:", 0);
  v146 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v147 = v145;
  v148 = objc_msgSend(v146, "initWithTarget:action:", v85, "moreFrom:");
  objc_msgSend(v147, "addGestureRecognizer:", v148);

  objc_msgSend(v85, "addSubview:", *(_QWORD *)&v85[v120]);
  v149 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton];
  objc_msgSend(v149, "setUserInteractionEnabled:", 0);
  objc_msgSend(v149, "addTarget:action:forControlEvents:", v85, "moreFrom:", 64);
  objc_msgSend(v85, "addSubview:", v149);
  v150 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v151 = swift_allocObject(v150, 48, 7);
  *(_OWORD *)(v151 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v151 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v151 + 40) = &protocol witness table for UITraitLayoutDirection;
  v152 = swift_allocObject(&unk_10073DFF0, 24, 7);
  v153 = ObjectType;
  *(_QWORD *)(v152 + 16) = ObjectType;
  v154 = v85;
  v155 = UIView.registerForTraitChanges<A>(_:handler:)(v151, sub_1003EB6C4, v152, v153);
  swift_unknownObjectRelease(v155);
  swift_bridgeObjectRelease(v151);
  swift_release(v152);

  return v154;
}

id sub_1003E9070(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  double v4;
  _QWORD v6[2];

  v2 = *(void **)(a1 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_backgroundImageView);
  if (qword_1007F1FF0 != -1)
    swift_once(&qword_1007F1FF0, sub_1003E7ED0);
  v3 = sub_10000DF3C(&qword_100806718);
  sub_1000117A8(v3, (uint64_t)qword_10080CF68);
  v6[0] = a1;
  *(_QWORD *)&v4 = Conditional.evaluate(with:)(v6, v3).n128_u64[0];
  return objc_msgSend(v2, "setContentMode:", v6[1], v4);
}

id sub_1003E91D8(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(_QWORD);
  id v22;
  char v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double left;
  double bottom;
  double right;
  id v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  double v41;
  id v42;
  char v43;
  id v44;
  _QWORD *v45;
  double v46;
  objc_class *v47;
  void *v48;
  double v49;
  double v50;
  id v51;
  _QWORD *v52;
  char v53;
  double v54;
  __objc2_meth_list **p_base_meths;
  id v59;
  _QWORD *v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  void *v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  id v79;
  void (*v80)(char *, uint64_t);
  id v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  void *v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  id v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  id v105;
  id v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  id v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  NSString v119;
  uint64_t v120;
  uint64_t inited;
  NSString *v122;
  id result;
  id v124;
  uint64_t v125;
  uint64_t v126;
  NSString *v127;
  void *v128;
  id v129;
  unint64_t v130;
  Class isa;
  double v132;
  double v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)();
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)();
  __objc2_meth_list **v144;
  id v145;
  double v146;
  double v147;
  double v148;
  double v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  id v153;
  _QWORD *v154;
  id v155;
  UIFontTextStyle *v156;
  uint64_t v157;
  void *v158;
  NSString *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  char *v163;
  double Width;
  double v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  void *v170;
  uint64_t v171;
  double v172;
  double *v173;
  char *v174;
  id v175;
  double v176;
  double v177;
  double v178;
  double v179;
  double v180;
  double v181;
  double v182;
  double v183;
  void *v184;
  UIFontTextStyle *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(_QWORD *, _QWORD, id);
  unsigned int v196;
  uint64_t v197;
  id v198;
  char v199[112];
  objc_super v200;
  _QWORD v201[2];
  uint64_t v202;
  void *v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;
  CGRect v213;

  v2 = v1;
  v187 = type metadata accessor for FontSource(0, a1);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v185 = (UIFontTextStyle *)((char *)&v185 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v192 = (_QWORD *)type metadata accessor for FloatingPointRoundingRule(0);
  v191 = *(v192 - 1);
  __chkstk_darwin(v192);
  v190 = (char *)&v185 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for StaticDimension(0);
  v193 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v188 = (char *)&v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v189 = (char *)&v185 - v7;
  v8 = type metadata accessor for PageGrid.Direction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v185 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v185 - v13;
  v15 = type metadata accessor for PageGrid(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v185 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Feature.iOS(0);
  v202 = v19;
  v197 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v203 = (void *)v197;
  v20 = sub_1000117C0(v201);
  v21 = *(void (**)(_QWORD))(*(_QWORD *)(v19 - 8) + 104);
  v196 = enum case for Feature.iOS.review_summarization(_:);
  v198 = (id)v19;
  v195 = (void (*)(_QWORD *, _QWORD, id))v21;
  v21(v20);
  LOBYTE(v19) = isFeatureEnabled(_:)(v201);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v201);
  if ((v19 & 1) != 0)
  {
    v22 = objc_msgSend(v2, "traitCollection");
    v23 = UITraitCollection.isSizeClassRegular.getter(v22);

    if ((v23 & 1) != 0)
    {
      v24 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_pageTraits];
      if (v24)
      {
        objc_msgSend(v24, "pageMarginInsets");
        v26 = v25;
      }
      else
      {
        v26 = 52.0;
      }
      v42 = objc_msgSend(v2, "traitCollection");
      v43 = UITraitCollection.prefersAccessibilityLayouts.getter(v42);

      if ((v43 & 1) != 0
        && (v44 = v198,
            v202 = (uint64_t)v198,
            v203 = (void *)v197,
            v45 = sub_1000117C0(v201),
            v195(v45, v196, v44),
            LOBYTE(v44) = isFeatureEnabled(_:)(v201),
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v201),
            (v44 & 1) != 0))
      {
        v46 = 52.0;
      }
      else
      {
        v46 = 242.0;
      }
      objc_msgSend(v2, "setLayoutMargins:", 0.0, v26, 0.0, v46);
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v14, enum case for PageGrid.Direction.vertical(_:), v8);
      objc_msgSend(v2, "bounds");
      v28 = v27;
      v30 = v29;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v34 = objc_msgSend(v2, "traitCollection");
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      v35 = sub_100418380(0.0);
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v11, 0, v35, v28, v30, UIEdgeInsetsZero.top, left, bottom, right);

      v36 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      v37 = PageGrid.horizontalMargins.getter(v36);
      v39 = v38;
      v40 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_pageTraits];
      if (v40)
        objc_msgSend(v40, "pageMarginInsets", v37);
      else
        v41 = 20.0;
      objc_msgSend(v2, "setLayoutMargins:", 0.0, v39, 0.0, v41);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  v47 = (objc_class *)type metadata accessor for EditorsChoiceReviewView();
  v204.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
  CGRectGetMinY(v204);
  v48 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView];
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge] == 1)
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView], "setHidden:", 0);
    LayoutMarginsAware<>.layoutFrame.getter(v47);
    objc_msgSend(v48, "sizeThatFits:", v49, v50);
    v205.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
    CGRectGetWidth(v205);
    v51 = v198;
    v202 = (uint64_t)v198;
    v203 = (void *)v197;
    v52 = sub_1000117C0(v201);
    v195(v52, v196, v51);
    v53 = isFeatureEnabled(_:)(v201);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v201);
    v54 = LayoutMarginsAware<>.layoutFrame.getter(v47);
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    if ((v53 & 1) != 0)
      CGRectGetMinX(*(CGRect *)&v54);
    else
      CGRectGetMidX(*(CGRect *)&v54);
    v59 = v198;
    v202 = (uint64_t)v198;
    v203 = (void *)v197;
    v60 = sub_1000117C0(v201);
    v195(v60, v196, v59);
    isFeatureEnabled(_:)(v201);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v201);
    v61 = objc_msgSend(v2, "traitCollection");
    v62 = LayoutMarginsAware<>.layoutFrame.getter(v47);
    v63 = CGRect.withLayoutDirection(using:relativeTo:)(v61, v62);
    v65 = v64;
    v67 = v66;
    v69 = v68;

    objc_msgSend(v48, "setFrame:", v63, v65, v67, v69);
    objc_msgSend(v48, "frame");
    CGRectGetMaxY(v206);
  }
  else
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView], "setHidden:", 1);
    p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  }
  if ((sub_1003EA6B4() & 1) != 0)
  {
    v70 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_titleLabel];
    LayoutMarginsAware<>.layoutFrame.getter(v47);
    objc_msgSend(v70, "sizeThatFits:", v71, v72);
    v207.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
    CGRectGetWidth(v207);
    v208.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
    CGRectGetMinX(v208);
    if (qword_1007F1FD0 != -1)
      swift_once(&qword_1007F1FD0, sub_1003E7B50);
    v73 = v194;
    v74 = sub_1000117A8(v194, (uint64_t)qword_1008545C0);
    v75 = v193;
    v76 = v189;
    v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v193 + 16))(v189, v74, v73);
    v78 = v190;
    static Dimensions.defaultRoundingRule.getter(v77);
    v79 = objc_msgSend(v70, "traitCollection");
    StaticDimension.value(compatibleWith:rounded:)(v79, v78);

    objc_msgSend(v70, "firstBaselineFromTop");
    (*(void (**)(char *, _QWORD *))(v191 + 8))(v78, v192);
    v80 = *(void (**)(char *, uint64_t))(v75 + 8);
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    v80(v76, v73);
    v81 = objc_msgSend(v2, "traitCollection");
    v82 = LayoutMarginsAware<>.layoutFrame.getter(v47);
    v83 = CGRect.withLayoutDirection(using:relativeTo:)(v81, v82);
    v85 = v84;
    v87 = v86;
    v89 = v88;

    objc_msgSend(v70, "setFrame:", v83, v85, v87, v89);
    objc_msgSend(v70, "lastBaselineMaxY");
  }
  v90 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v47);
  objc_msgSend(v90, "sizeThatFits:", v91, v92);
  v94 = v93;
  v96 = v95;
  v97 = v198;
  v202 = (uint64_t)v198;
  v203 = (void *)v197;
  v98 = sub_1000117C0(v201);
  v195(v98, v196, v97);
  LOBYTE(v97) = isFeatureEnabled(_:)(v201);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v201);
  if ((v97 & 1) == 0)
  {
    if (qword_1007F1FD8 != -1)
      swift_once(&qword_1007F1FD8, sub_1003E7C9C);
    v99 = v194;
    v100 = sub_1000117A8(v194, (uint64_t)qword_1008545D8);
    v101 = v193;
    v102 = v189;
    v103 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v193 + 16))(v189, v100, v99);
    v104 = v190;
    static Dimensions.defaultRoundingRule.getter(v103);
    v105 = objc_msgSend(v90, (SEL)p_base_meths[471]);
    StaticDimension.value(compatibleWith:rounded:)(v105, v104);

    objc_msgSend(v90, "firstBaselineFromTop");
    (*(void (**)(char *, _QWORD *))(v191 + 8))(v104, v192);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v99);
  }
  v209.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
  CGRectGetMinX(v209);
  v106 = objc_msgSend(v2, (SEL)p_base_meths[471]);
  v107 = LayoutMarginsAware<>.layoutFrame.getter(v47);
  v108 = CGRect.withLayoutDirection(using:relativeTo:)(v106, v107);
  v110 = v109;
  v112 = v111;
  v114 = v113;

  objc_msgSend(v90, "setFrame:", v108, v110, v112, v114);
  v115 = objc_msgSend(v90, "text");
  if (!v115)
    goto LABEL_36;
  v116 = v115;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
  v118 = v117;

  v119 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v118);
  v120 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v120, v199);
  *(_OWORD *)(inited + 16) = xmmword_10066F870;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v122 = NSFontAttributeName;
  result = objc_msgSend(v90, "font");
  if (result)
  {
    v124 = result;
    v125 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v124;
    *(_QWORD *)(inited + 64) = v125;
    *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
    v126 = qword_1007F1020;
    v127 = NSParagraphStyleAttributeName;
    if (v126 != -1)
      swift_once(&qword_1007F1020, sub_100083BB8);
    v128 = (void *)qword_1008510A0;
    *(_QWORD *)(inited + 104) = sub_100019574(0, &qword_1007F67F8, NSParagraphStyle_ptr);
    *(_QWORD *)(inited + 80) = v128;
    v129 = v128;
    v130 = sub_1003699BC(inited);
    type metadata accessor for Key(0);
    sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v130);
    objc_msgSend(v119, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, v94, 1.79769313e308);
    v133 = v132;

    if (v96 < v133)
    {
      v192 = *(_QWORD **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton];
      objc_msgSend(v192, "setHidden:", 0);
      v134 = (uint64_t *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler];
      v135 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler];
      v136 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler + 8];
      if (v135)
      {
        v137 = swift_allocObject(&unk_10073DFC8, 32, 7);
        *(_QWORD *)(v137 + 16) = v135;
        *(_QWORD *)(v137 + 24) = v136;
        v138 = sub_10006C410;
      }
      else
      {
        v138 = 0;
        v137 = 0;
      }
      sub_100019320(v135, v136);
      sub_100019310((uint64_t)v138, v137);
      objc_msgSend(v90, "setUserInteractionEnabled:", v135 != 0);
      v140 = *v134;
      v141 = v134[1];
      if (*v134)
      {
        v142 = swift_allocObject(&unk_10073DFA0, 32, 7);
        *(_QWORD *)(v142 + 16) = v140;
        *(_QWORD *)(v142 + 24) = v141;
        v143 = sub_100030368;
      }
      else
      {
        v143 = 0;
        v142 = 0;
      }
      v144 = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
      sub_100019320(v140, v141);
      sub_100019310((uint64_t)v143, v142);
      v145 = v192;
      objc_msgSend(v192, "setUserInteractionEnabled:", v140 != 0);
      LayoutMarginsAware<>.layoutFrame.getter(v47);
      objc_msgSend(v145, "sizeThatFits:", v146, v147);
      v149 = v148;
      v150 = type metadata accessor for FadeOutDynamicTypeLabel(0);
      v151 = swift_dynamicCastClass(v90, v150);
      if (v151)
      {
        v152 = (char *)v151;
        v153 = v198;
        v202 = (uint64_t)v198;
        v203 = (void *)v197;
        v154 = sub_1000117C0(v201);
        v195(v154, v196, v153);
        v155 = v90;
        LOBYTE(v153) = isFeatureEnabled(_:)(v201);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v201);
        v198 = v155;
        if ((v153 & 1) != 0)
        {
          v156 = v185;
          *v185 = UIFontTextStyleBody;
          v157 = v186;
          v158 = (void *)v187;
          (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v186 + 104))(v156, enum case for FontSource.textStyle(_:), v187);
          v159 = UIFontTextStyleBody;
        }
        else
        {
          v158 = (void *)v187;
          v157 = v186;
          v156 = v185;
          if (qword_1007F22C8 != -1)
            swift_once(&qword_1007F22C8, sub_100413D94);
          v160 = type metadata accessor for FontUseCase(0);
          v161 = sub_1000117A8(v160, (uint64_t)qword_100854D40);
          (*(void (**)(UIFontTextStyle *, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v156, v161, v160);
          (*(void (**)(UIFontTextStyle *, _QWORD, void *))(v157 + 104))(v156, enum case for FontSource.useCase(_:), v158);
        }
        v202 = (uint64_t)v158;
        v203 = &protocol witness table for FontSource;
        v162 = sub_1000117C0(v201);
        (*(void (**)(_QWORD *, UIFontTextStyle *, void *))(v157 + 16))(v162, v156, v158);
        v163 = v188;
        StaticDimension.init(_:scaledLike:)(v201, 8.0);
        (*(void (**)(UIFontTextStyle *, void *))(v157 + 8))(v156, v158);
        v210.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
        Width = CGRectGetWidth(v210);
        objc_msgSend(v152, "frame");
        v165 = v149 - (Width - CGRectGetWidth(v211));
        v166 = objc_msgSend(v2, "traitCollection");
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v167 = sub_10000DF3C(&qword_1007F5840);
        v168 = swift_allocObject(v167, 40, 7);
        *(_OWORD *)(v168 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v168 + 32) = v166;
        v169 = v166;
        v170 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v168);
        v171 = v194;
        v172 = dispatch thunk of AnyDimension.rawValue(in:)(v170, v194, &protocol witness table for StaticDimension);

        v173 = (double *)&v152[qword_1007FF1A8];
        *v173 = v165 + v172;
        *((_BYTE *)v173 + 8) = 0;
        objc_msgSend(v152, "setNeedsLayout");

        v174 = v163;
        v144 = &TodayCardChinLockupListView.base_meths;
        (*(void (**)(char *, uint64_t))(v193 + 8))(v174, v171);
      }
      v212.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v47);
      CGRectGetMaxX(v212);
      objc_msgSend(v90, "frame");
      CGRectGetMaxY(v213);
      v175 = objc_msgSend(v2, (SEL)v144[471]);
      v176 = LayoutMarginsAware<>.layoutFrame.getter(v47);
      v177 = CGRect.withLayoutDirection(using:relativeTo:)(v175, v176);
      v179 = v178;
      v181 = v180;
      v183 = v182;

      objc_msgSend(v192, "setFrame:", v177, v179, v181, v183);
      goto LABEL_49;
    }
LABEL_36:
    v139 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton];
    objc_msgSend(v139, "setHidden:", 1);
    objc_msgSend(v90, "setUserInteractionEnabled:", 0);
    objc_msgSend(v139, "setUserInteractionEnabled:", 0);
LABEL_49:
    v184 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_backgroundImageView];
    objc_msgSend(v2, "bounds");
    objc_msgSend(v184, "setFrame:");
    v200.receiver = v2;
    v200.super_class = v47;
    return objc_msgSendSuper2(&v200, "layoutSubviews");
  }
  __break(1u);
  return result;
}

id sub_1003EA35C()
{
  _BYTE *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id result;
  _QWORD v12[5];

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_pageTraits];
  if (v1)
  {
    v2 = objc_msgSend(v1, "traitCollection");
    v3 = (uint64_t)objc_msgSend(v2, "horizontalSizeClass");

  }
  else
  {
    v3 = 1;
  }
  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_isExpanded] & 1) != 0)
  {
    v4 = 9999;
  }
  else
  {
    v5 = v0[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge];
    if (v3 == 1)
    {
      if ((v5 & 1) != 0)
      {
        v8 = type metadata accessor for Feature.iOS(0);
        v12[3] = v8;
        v12[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
        v9 = sub_1000117C0(v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.iOS.review_summarization(_:), v8);
        LOBYTE(v8) = isFeatureEnabled(_:)(v12);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
        if ((v8 & 1) != 0)
          v4 = 6;
        else
          v4 = 3;
      }
      else
      {
        v4 = 5;
      }
    }
    else
    {
      v6 = v5 == 0;
      v7 = 8;
      if (!v6)
        v7 = 6;
      if (v3 == 2)
        v4 = v7;
      else
        v4 = 9999;
    }
  }
  v10 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel];
  result = objc_msgSend(v10, "numberOfLines");
  if (result != (id)v4)
  {
    objc_msgSend(v10, "setNumberOfLines:", v4);
    return objc_msgSend(v0, "setNeedsLayout");
  }
  return result;
}

double sub_1003EA4E0(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  int v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  swift_getObjectType();
  v5 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_pageTraits);
  if (!v5)
    return 0.0;
  v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge);
  v7 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_titleLabel), "text", swift_unknownObjectRetain(v5).n128_f64[0]);
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v13 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel), "text");
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v18 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_isExpanded);
  swift_getObjectType();
  v12 = sub_1003EAB88(v6, v9, v11, v15, v17, v18, v5, a1, a2);
  swift_unknownObjectRelease(v5);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v11);
  return v12;
}

id sub_1003EA6B4()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v9[5];

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_titleLabel), "text");
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6 = type metadata accessor for Feature.iOS(0);
    v9[3] = v6;
    v9[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
    v7 = sub_1000117C0(v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v7, enum case for Feature.iOS.review_summarization(_:), v6);
    LOBYTE(v6) = isFeatureEnabled(_:)(v9);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
    if ((v6 & 1) != 0)
    {
      swift_bridgeObjectRelease(v5);
      return 0;
    }
    else
    {
      v8 = String.count.getter(v3, v5);
      swift_bridgeObjectRelease(v5);
      return (id)(v8 > 0);
    }
  }
  return result;
}

id sub_1003EA7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  UIColor v9;
  Class isa;
  _QWORD v12[5];

  v1 = v0;
  v2 = type metadata accessor for Feature.iOS(0);
  v12[3] = v2;
  v12[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v3 = sub_1000117C0(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, enum case for Feature.iOS.review_summarization(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v12);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
  if ((v2 & 1) != 0)
    v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge) ^ 1;
  else
    v4 = 1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_backgroundImageView), "setHidden:", v4 & 1);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge;
  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_showsBadge);
  v8 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  if (v7 == 1)
    v9.super.isa = UIColor.init(light:lightHighContrast:dark:darkHighContrast:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.388235294, 0.388235294, 0.4, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.282352941, 0.282352941, 0.290196078, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.682352941, 0.682352941,
                                0.698039216,
                                1.0),
                     (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.780392157, 0.780392157, 0.8, 1.0)).super.isa;
  else
    v9.super.isa = (Class)static UIColor.secondaryText.getter(v8);
  isa = v9.super.isa;
  objc_msgSend(v5, "setTextColor:", v9.super.isa);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_badgeView), "setHidden:", *(unsigned __int8 *)(v1 + v6));
  return sub_1003EA35C();
}

id sub_1003EAAAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorsChoiceReviewView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EditorsChoiceReviewView()
{
  return objc_opt_self(_TtC22SubscribePageExtension23EditorsChoiceReviewView);
}

double sub_1003EAB88(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7, double a8, double a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  double v34;
  double v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  double v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  void (*v47)(_QWORD *, uint64_t, uint64_t);
  uint64_t v48;
  char v49;
  _QWORD *v50;
  char v51;
  char v52;
  unsigned __int8 v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(_QWORD *, uint64_t, uint64_t);
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  char v63;
  NSString *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  void (*v68)(_QWORD *, _QWORD, uint64_t);
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  double left;
  double bottom;
  double right;
  uint64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  double v91;
  _QWORD *v92;
  char v93;
  uint64_t v94;
  _QWORD *v95;
  double v96;
  _QWORD *v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  char *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  void (*v116)(_QWORD *);
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[3];
  uint64_t v122;
  uint64_t v123;

  v111 = a6;
  v112 = a4;
  v113 = a5;
  v110 = a3;
  v101 = a2;
  v117 = a1;
  v107 = type metadata accessor for FloatingPointRoundingRule(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for StaticDimension(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FontUseCase(0);
  v118 = *(_QWORD *)(v14 - 8);
  v119 = v14;
  __chkstk_darwin(v14);
  v109 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PageGrid.Direction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v99 - v21;
  v100 = type metadata accessor for PageGrid(0);
  v23 = *(_QWORD *)(v100 - 8);
  *(_QWORD *)&v24 = __chkstk_darwin(v100).n128_u64[0];
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = a7;
  v27 = objc_msgSend(a7, "traitCollection", v24);
  v28 = type metadata accessor for Feature.iOS(0);
  v122 = v28;
  v120 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v123 = v120;
  v29 = sub_1000117C0(v121);
  v30 = enum case for Feature.iOS.review_summarization(_:);
  v116 = *(void (**)(_QWORD *))(*(_QWORD *)(v28 - 8) + 104);
  v116(v29);
  LOBYTE(a7) = isFeatureEnabled(_:)(v121);
  v31 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
  v114 = v27;
  if ((a7 & 1) == 0)
  {
    v40 = a8 + -20.0 + -20.0;
    v41 = v117;
    v43 = v118;
    v42 = v119;
    v32 = v115;
    v44 = v109;
    v36 = v30;
    if ((v117 & 1) == 0)
      goto LABEL_14;
    goto LABEL_7;
  }
  if ((UITraitCollection.isSizeClassRegular.getter(v31) & 1) != 0)
  {
    v32 = v115;
    v33 = objc_msgSend(v115, "pageMarginInsets");
    v35 = v34;
    v36 = v30;
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v33) & 1) != 0
      && (v122 = v28,
          v123 = v120,
          v37 = sub_1000117C0(v121),
          ((void (*)(_QWORD *, uint64_t, uint64_t))v116)(v37, v30, v28),
          v38 = isFeatureEnabled(_:)(v121),
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121),
          (v38 & 1) != 0))
    {
      *(double *)&v39 = 52.0;
    }
    else
    {
      *(double *)&v39 = 242.0;
    }
    v91 = *(double *)&v39;
    v41 = v117;
    v43 = v118;
    v42 = v119;
    v44 = v109;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v22, enum case for PageGrid.Direction.vertical(_:), v16);
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v16);
    v87 = sub_100418380(0.0);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v19, 0, v87, a8, a9, UIEdgeInsetsZero.top, left, bottom, right);
    v88 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    PageGrid.horizontalMargins.getter(v88);
    v35 = v89;
    v32 = v115;
    objc_msgSend(v115, "pageMarginInsets");
    v91 = v90;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v100);
    v41 = v117;
    v43 = v118;
    v42 = v119;
    v44 = v109;
    v36 = v30;
  }
  v40 = a8 - v35 - v91;
  if ((v41 & 1) != 0)
  {
LABEL_7:
    v45 = v120;
    v122 = v28;
    v123 = v120;
    v46 = sub_1000117C0(v121);
    v47 = (void (*)(_QWORD *, uint64_t, uint64_t))v116;
    ((void (*)(_QWORD *, uint64_t, uint64_t))v116)(v46, v30, v28);
    v48 = v42;
    v49 = isFeatureEnabled(_:)(v121);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
    v122 = v28;
    v123 = v45;
    v50 = sub_1000117C0(v121);
    v47(v50, v30, v28);
    v51 = isFeatureEnabled(_:)(v121);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
    type metadata accessor for EditorsChoiceView();
    v81 = (v49 & 1) == 0;
    v42 = v48;
    if (v81)
      v52 = 4;
    else
      v52 = 3;
    if ((v51 & 1) != 0)
      v53 = 1;
    else
      v53 = 2;
    sub_10059B994(v52, 0, 1, v32, v40, 0, v53);
    v122 = v28;
    v123 = v45;
    v36 = v30;
    v54 = sub_1000117C0(v121);
    v47(v54, v30, v28);
    v43 = v118;
    v41 = v117;
    isFeatureEnabled(_:)(v121);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
  }
LABEL_14:
  v55 = v110;
  v108 = v36;
  if (v110)
  {
    v122 = v28;
    v123 = v120;
    v56 = sub_1000117C0(v121);
    v57 = (void (*)(_QWORD *, uint64_t, uint64_t))v116;
    ((void (*)(_QWORD *, uint64_t, uint64_t))v116)(v56, v36, v28);
    v58 = isFeatureEnabled(_:)(v121);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
    if ((v58 & 1) == 0 && String.count.getter(v101, v55) > 0)
    {
      if (qword_1007F1FD0 != -1)
        swift_once(&qword_1007F1FD0, sub_1003E7B50);
      v59 = v104;
      v60 = sub_1000117A8(v104, (uint64_t)qword_1008545C0);
      v61 = v105;
      static Dimensions.defaultRoundingRule.getter(v60);
      AnyDimension.value(in:rounded:)(v32, v61, v59, &protocol witness table for StaticDimension);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v61, v107);
      v36 = v108;
    }
  }
  else
  {
    v57 = (void (*)(_QWORD *, uint64_t, uint64_t))v116;
  }
  v122 = v28;
  v123 = v120;
  v62 = sub_1000117C0(v121);
  v57(v62, v36, v28);
  v63 = isFeatureEnabled(_:)(v121);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
  if ((v63 & 1) != 0)
  {
    *(_QWORD *)v44 = UIFontTextStyleBody;
    *((_DWORD *)v44 + 2) = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v44, enum case for FontUseCase.preferredFont(_:), v42);
    v64 = UIFontTextStyleBody;
  }
  else
  {
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v65 = sub_1000117A8(v42, (uint64_t)qword_100854D40);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v44, v65, v42);
  }
  v122 = v28;
  v123 = v120;
  v66 = sub_1000117C0(v121);
  v67 = v36;
  v68 = v57;
  v57(v66, v67, v28);
  v69 = isFeatureEnabled(_:)(v121);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
  v70 = v44;
  if ((v69 & 1) == 0)
  {
    if (qword_1007F1FD8 != -1)
      swift_once(&qword_1007F1FD8, sub_1003E7C9C);
    v71 = v104;
    v72 = sub_1000117A8(v104, (uint64_t)qword_1008545D8);
    v73 = v103;
    v74 = v102;
    v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v72, v71);
    v76 = v105;
    static Dimensions.defaultRoundingRule.getter(v75);
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    v77 = v114;
    v78 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v70, v114);
    StaticDimension.value(compatibleWith:rounded:)(v77, v76);
    UIFont.estimatedFirstBaseline.getter();

    (*(void (**)(char *, uint64_t))(v106 + 8))(v76, v107);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v71);
    v32 = v115;
    v43 = v118;
    v41 = v117;
  }
  v79 = objc_msgSend(v32, "traitCollection");
  v80 = objc_msgSend(v79, "horizontalSizeClass");

  if ((v111 & 1) != 0)
  {
LABEL_34:
    v83 = 9999;
    goto LABEL_46;
  }
  if (v80 != (id)1)
  {
    if (v80 == (id)2)
    {
      v81 = (v41 & 1) == 0;
      v82 = 8;
      goto LABEL_42;
    }
    goto LABEL_34;
  }
  if ((v41 & 1) != 0)
  {
    v122 = v28;
    v123 = v120;
    v92 = sub_1000117C0(v121);
    v68(v92, v108, v28);
    v93 = isFeatureEnabled(_:)(v121);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
    v81 = (v93 & 1) == 0;
    v82 = 3;
LABEL_42:
    if (v81)
      v83 = v82;
    else
      v83 = 6;
    goto LABEL_46;
  }
  v83 = 5;
LABEL_46:
  v94 = type metadata accessor for Feature(0);
  v122 = v94;
  v123 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v95 = sub_1000117C0(v121);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v94 - 8) + 104))(v95, enum case for Feature.measurement_with_labelplaceholder(_:), v94);
  LOBYTE(v94) = isFeatureEnabled(_:)(v121);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
  v96 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v112, v113, v70, 4, 0, 0, v83, 0, v40, 1.79769313e308, v32, v94 & 1);
  if ((v41 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, double))(v43 + 8))(v70, v119, v96);

  }
  else
  {
    v122 = v28;
    v123 = v120;
    v97 = sub_1000117C0(v121);
    v68(v97, v108, v28);
    isFeatureEnabled(_:)(v121);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v70, v119);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
  }
  return a8;
}

id sub_1003EB5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreTapHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_100019320(a1, a2);
  sub_100019310(v4, v5);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_textLabel);
  if (*v3)
    v7 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton), "isHidden") ^ 1;
  else
    v7 = 0;
  objc_msgSend(v6, "setUserInteractionEnabled:", v7);
  v8 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton);
  if (*v3)
    v9 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23EditorsChoiceReviewView_moreButton), "isHidden") ^ 1;
  else
    v9 = 0;
  return objc_msgSend(v8, "setUserInteractionEnabled:", v9);
}

uint64_t sub_1003EB690()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003EB6B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003EB6C4(uint64_t a1)
{
  return sub_1003E9070(a1);
}

BOOL sub_1003EB6D0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v4;
  uint64_t v6;
  char v7;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (v2 == 0.0)
    {
      if (v3 == 0.0)
        v6 = *(unsigned __int8 *)(a2 + 8);
      else
        LOBYTE(v6) = 0;
      if ((v6 & 1) != 0)
        return 1;
    }
    else if (*(_QWORD *)&v2 == 1)
    {
      if (*(_QWORD *)&v3 == 1)
        v4 = *(_BYTE *)(a2 + 8);
      else
        v4 = 0;
      if ((v4 & 1) != 0)
        return 1;
    }
    else
    {
      if (*(_QWORD *)&v3 > 1uLL)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      if ((v7 & 1) != 0)
        return 1;
    }
  }
  else if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    return v2 == v3;
  }
  return 0;
}

id sub_1003EB750(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v9 = &v4[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_state];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer] = 0;
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_completionHandler];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progress] = 0;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for InstallProgressView();
  v11 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v11;
  v14 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  return v13;
}

void sub_1003EB9F8(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  double v23;
  void (*v24)(__n128);
  uint64_t v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  NSString v35;
  id v36;
  NSString v37;
  id v38;
  NSString v39;
  char v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  void *v47;
  __n128 v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void **aBlock;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  void *v60;
  id (*v61)();
  uint64_t v62;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v6);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - v18;
  v20 = &v1[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_state];
  v21 = *(_QWORD *)v20;
  if (v20[8] != 1 || v21 <= 1)
  {
    if (a1 != 0.0)
      goto LABEL_15;
    v23 = *(double *)&v2[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progress];
    if (v23 == 1.0)
    {
      v24 = *(void (**)(__n128))&v2[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_completionHandler];
      if (v24)
      {
        v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_completionHandler + 8];
        v26 = swift_retain(v25);
        v24(v26);
        sub_100019310((uint64_t)v24, v25);
      }
      return;
    }
    if (v23 > 0.0)
    {
      v27 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v27, "begin");
      v28 = swift_allocObject(&unk_10073E0F8, 24, 7);
      *(_QWORD *)(v28 + 16) = v2;
      v61 = sub_1003EC2EC;
      v62 = v28;
      aBlock = _NSConcreteStackBlock;
      v58 = 1107296256;
      v59 = sub_1000BD6CC;
      v60 = &unk_10073E110;
      v29 = _Block_copy(&aBlock);
      v30 = v62;
      v31 = v2;
      objc_msgSend(v27, "setCompletionBlock:", v29, swift_release(v30).n128_f64[0]);
      _Block_release(v29);
      *(_QWORD *)v20 = 1;
      v20[8] = 1;
      v32 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InstallProgressLayer()), "init");
      sub_1003EC320(v32);

      v33 = *(void **)&v31[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer];
      if (v33)
      {
        v34 = v33;
        v35 = String._bridgeToObjectiveC()();
        v36 = objc_msgSend(v34, "animationForKey:", v35);

        if (v36)
        {

          v37 = String._bridgeToObjectiveC()();
          objc_msgSend(v34, "removeAnimationForKey:", v37);

        }
        v38 = sub_1001FAF3C();
        v39 = String._bridgeToObjectiveC()();
        objc_msgSend(v34, "addAnimation:forKey:", v38, v39);

      }
      objc_msgSend(v27, "commit");
    }
    else
    {
LABEL_15:
      if (v21 == 1)
        v40 = v20[8];
      else
        v40 = 0;
      if ((v40 & 1) == 0)
      {
        v54 = v5;
        v41 = OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progress;
        *(_QWORD *)v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progress];
        v20[8] = 0;
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer], "setProgress:");
        v42 = *(double *)&v2[v41];
        v43 = v54;
        if (v42 >= 1.0)
        {
          sub_1000C0EC4();
          v53 = static OS_dispatch_queue.main.getter(v44);
          static DispatchTime.now()(v53);
          + infix(_:_:)(v16, 0.4);
          v45 = *(void (**)(char *, uint64_t))(v14 + 8);
          v45(v16, v13);
          v46 = swift_allocObject(&unk_10073E0A8, 24, 7);
          swift_unknownObjectWeakInit(v46 + 16);
          v61 = sub_1003EC2A8;
          v62 = v46;
          aBlock = _NSConcreteStackBlock;
          v58 = 1107296256;
          v59 = sub_1000BD6CC;
          v60 = &unk_10073E0C0;
          v47 = _Block_copy(&aBlock);
          v48 = swift_release(v62);
          static DispatchQoS.unspecified.getter(v48);
          aBlock = (void **)_swiftEmptyArrayStorage;
          v49 = sub_100033D20();
          v50 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
          v51 = sub_100033D68();
          dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v50, v51, v4, v49);
          v52 = (void *)v53;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v12, v8, v47);
          _Block_release(v47);

          (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v4);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v56);
          v45(v19, v13);
        }
      }
    }
  }
}

id sub_1003EBF34(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v13;
  _BYTE v14[24];

  v1 = a1 + 16;
  v2 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v2, "begin");
  v3 = swift_allocObject(&unk_10073E0A8, 24, 7);
  swift_beginAccess(v1, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  swift_unknownObjectWeakInit(v3 + 16);

  aBlock[4] = sub_1003EC4B0;
  v13 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_10073E138;
  v5 = _Block_copy(aBlock);
  objc_msgSend(v2, "setCompletionBlock:", v5, swift_release(v13).n128_f64[0]);
  _Block_release(v5);
  swift_beginAccess(v1, aBlock, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = v6 + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_state;
    *(_QWORD *)v8 = 2;
    *(_BYTE *)(v8 + 8) = 1;
    v9 = *(void **)(v6 + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer);
    if (v9)
    {
      v10 = v9;
      sub_1001F9E9C();

      v7 = v10;
    }

  }
  return objc_msgSend(v2, "commit");
}

void sub_1003EC0B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v5 = *(void (**)(void))(Strong + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_completionHandler);
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_completionHandler + 8);
    sub_100019320((uint64_t)v5, v4);

    if (v5)
    {
      v5();
      sub_100019310((uint64_t)v5, v4);
    }
  }
  swift_beginAccess(v1, &v9, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = v6 + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_state;
    *(_QWORD *)v8 = 0;
    *(_BYTE *)(v8 + 8) = 1;
    sub_1003EC320(0);

  }
}

id sub_1003EC17C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstallProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for InstallProgressView()
{
  return objc_opt_self(_TtC22SubscribePageExtension19InstallProgressView);
}

uint64_t storeEnumTagSinglePayload for InstallProgressView.ProgressState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1003EC238(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1003EC254(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallProgressView.ProgressState()
{
  return &type metadata for InstallProgressView.ProgressState;
}

uint64_t sub_1003EC284()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_1003EC2A8()
{
  uint64_t v0;

  return sub_1003EBF34(v0);
}

uint64_t sub_1003EC2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003EC2C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003EC2C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003EC2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_state;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer), "setProgress:", 0.0);
}

void sub_1003EC320(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension19InstallProgressView_progressLayer];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperlayer");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = (void *)objc_opt_self(UIScreen);
    v9 = v7;
    v10 = objc_msgSend(v8, "mainScreen");
    objc_msgSend(v10, "scale");
    v12 = v11;

    objc_msgSend(v9, "setContentsScale:", v12);
    v13 = v9;
    v14 = objc_msgSend(v1, "layer");
    objc_msgSend(v14, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    objc_msgSend(v13, "setFrame:", v16, v18, v20, v22);
    v23 = objc_msgSend(v1, "layer");
    objc_msgSend(v23, "addSublayer:", v13);

  }
}

void sub_1003EC4B0()
{
  uint64_t v0;

  sub_1003EC0B0(v0);
}

uint64_t sub_1003EC4C8()
{
  return sub_10000E99C(&qword_10080D038, type metadata accessor for ProductDescriptionCollectionViewCell, (uint64_t)&unk_10068AF20);
}

double sub_1003EC4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  double v18;
  id v19;
  uint64_t KeyPath;
  double v21;
  double v22;
  double v23;
  double v24;
  __n128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for PageGrid(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_100802E18);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ProductDescription(0);
  v11 = sub_10000E99C((unint64_t *)&qword_100802DA8, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDescription, (uint64_t)&protocol conformance descriptor for ProductDescription);
  ItemLayoutContext.typedModel<A>(as:)(&v32, v10, v10, v11);
  v12 = v32;
  if (!v32)
    return 0.0;
  v28 = v3;
  v29 = v7;
  v13 = sub_10024EFD4();
  ItemLayoutContext.typedState<A>(as:)(&_s5StateVN_3, &_s5StateVN_3, v13);
  StateLens<A>.currentValue.getter(&v31, v6, v13);
  v30 = v1;
  v15 = v2;
  if (v31 == 2)
  {
    v16 = ProductDescription.paragraph.getter(v14);
    v17 = Paragraph.isCollapsed.getter(v16);
    swift_release(v16);
  }
  else
  {
    v17 = v31 & 1;
  }
  v19 = sub_1000826AC();
  KeyPath = swift_getKeyPath(&unk_10068AF70);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  v21 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v23 = v22;
  (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v5, v15);
  sub_1005E2288(v12, v17 & 1, v19, v21, v23);
  v18 = v24;
  swift_unknownObjectRelease(v19);
  v25 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v9, v6, v25);
  return v18;
}

uint64_t sub_1003EC720()
{
  return sub_10000E99C(&qword_10080D040, type metadata accessor for RoundedButtonCollectionViewCell, (uint64_t)&unk_10068AF9C);
}

double sub_1003EC74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  uint64_t v6;

  v0 = type metadata accessor for RoundedButton(0);
  v1 = sub_10000E99C(&qword_10080D048, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedButton, (uint64_t)&protocol conformance descriptor for RoundedButton);
  ItemLayoutContext.typedModel<A>(as:)(&v6, v0, v0, v1);
  v2 = v6;
  if (!v6)
    return 0.0;
  v3 = sub_1000826AC();
  v4 = sub_1005EC63C(v2, (uint64_t)v3);
  swift_release(v2);
  swift_unknownObjectRelease(v3);
  return v4;
}

void sub_1003EC93C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  void *v7;
  double Width;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension9StackView_distribution + 8] & 1) != 0
    || *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9StackView_distribution] != 3)
  {
    return;
  }
  sub_1003ECB08();
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v3)
      goto LABEL_5;
LABEL_14:
    v5 = 0.0;
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_14;
LABEL_5:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = 0;
  v5 = 0.0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6;
    ++v4;
    objc_msgSend(v6, "frame");
    Width = CGRectGetWidth(v16);

    v5 = v5 + Width;
  }
  while (v3 != v4);
LABEL_15:
  objc_msgSend(v0, "frame", swift_bridgeObjectRelease(v2).n128_f64[0]);
  if (v5 >= CGRectGetWidth(v17))
    return;
  sub_1003ECB08();
  v2 = v9;
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_18;
  }
LABEL_25:
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  v10 = _CocoaArrayWrapper.endIndex.getter(v15);
LABEL_18:
  swift_bridgeObjectRelease(v2);
  if (v10 >= 2)
  {
    sub_1003ECB08();
    v12 = v11;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 >= 0)
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
    if (__OFSUB__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v0, "frame", v14);
      CGRectGetWidth(v18);
    }
  }
}

void sub_1003ECB08()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  double v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_10000EF74();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_17;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v8 = *(id *)(v3 + 8 * i + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "isHidden");
      if ((v10 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v6 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v6);
        v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v6, v9);
        specialized ContiguousArray._endMutation()(v7);
      }
    }
    swift_bridgeObjectRelease(v3);
  }
}

void sub_1003ECCD8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9StackView_axis];
  sub_1003ECB08();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (!v4)
      goto LABEL_17;
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
    {
LABEL_17:
      swift_bridgeObjectRelease(v3);
      return;
    }
  }
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v0, "frame");
      objc_msgSend(v7, "sizeThatFits:", v8, v9);
      v11 = v10;
      v13 = v12;
      objc_msgSend(v0, "frame");
      if (v1)
      {
        if (v14 < v11)
        {
          objc_msgSend(v0, "frame");
          v11 = v16;
        }
      }
      else if (v15 < v13)
      {
        objc_msgSend(v0, "frame");
        v13 = v17;
      }
      objc_msgSend(v7, "setFrame:", 0.0, 0.0, v11, v13);

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1003ECE40()
{
  char *v0;
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  double MaxX;
  id v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  id v30;
  char v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  double MinX;
  uint64_t v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9StackView_axis];
  sub_1003EC93C();
  v4 = v3;
  sub_1003ECB08();
  v6 = v5;
  if (v5 >> 62)
    goto LABEL_25;
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_29:
    swift_bridgeObjectRelease(v6);
    return;
  }
LABEL_3:
  if (v7 >= 1)
  {
    v8 = 0;
    while (1)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v11 = *(id *)(v6 + 8 * v8 + 32);
      v12 = v11;
      v13 = objc_msgSend(v1, "traitCollection");
      v14 = UITraitCollection.prefersRightToLeftLayouts.getter();

      v9 = 0.0;
      if ((v14 & 1) != 0)
      {
        objc_msgSend(v1, "bounds");
        MaxX = CGRectGetMaxX(v38);
        objc_msgSend(v12, "frame");
        v9 = MaxX - CGRectGetWidth(v39);
      }
      if (v8)
      {
        v16 = objc_msgSend(v1, "subviews");
        v17 = sub_10000EF74();
        v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

        v19 = v8 - 1;
        if ((v18 & 0xC000000000000001) != 0)
        {
          v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v18);
        }
        else
        {
          if (v19 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_25:
            if (v6 < 0)
              v37 = v6;
            else
              v37 = v6 & 0xFFFFFFFFFFFFFF8;
            v7 = _CocoaArrayWrapper.endIndex.getter(v37);
            if (!v7)
              goto LABEL_29;
            goto LABEL_3;
          }
          v20 = *(id *)(v18 + 8 * v8 + 24);
        }
        v21 = v20;
        objc_msgSend(v20, "frame", swift_bridgeObjectRelease(v18).n128_f64[0]);
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        if (v2)
        {
          v40.origin.x = v23;
          v40.origin.y = v25;
          v40.size.width = v27;
          v40.size.height = v29;
          v9 = v4 + CGRectGetMaxY(v40);
          v10 = 0.0;
          goto LABEL_7;
        }
        v30 = objc_msgSend(v1, "traitCollection");
        v31 = UITraitCollection.prefersRightToLeftLayouts.getter();

        v32 = v23;
        v33 = v25;
        v34 = v27;
        v35 = v29;
        if ((v31 & 1) != 0)
        {
          MinX = CGRectGetMinX(*(CGRect *)&v32);
          objc_msgSend(v12, "frame");
          v9 = MinX - (v4 + CGRectGetWidth(v41));
        }
        else
        {
          v9 = v4 + CGRectGetMaxX(*(CGRect *)&v32);
        }
      }
      else
      {
        v10 = 0.0;
        if (v2)
          goto LABEL_7;
      }
      v10 = v9;
      v9 = 0.0;
LABEL_7:
      ++v8;
      objc_msgSend(v12, "frame");
      objc_msgSend(v12, "setFrame:", v10, v9);

      if (v7 == v8)
        goto LABEL_29;
    }
  }
  __break(1u);
}

double sub_1003ED0F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v14;
  char v15;
  double v16;
  double Width;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGFloat v24;
  id v25;
  char v26;
  double result;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9StackView_axis];
  sub_1003ECB08();
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
    v5 = _CocoaArrayWrapper.endIndex.getter(v3);
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        v6 = 0;
        v7 = OBJC_IVAR____TtC22SubscribePageExtension9StackView_alignment;
        while (2)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
          else
            v8 = *(id *)(v4 + 8 * v6 + 32);
          v9 = v8;
          switch(*(_QWORD *)&v1[v7])
          {
            case 0:
              objc_msgSend(v1, "bounds");
              if (v2)
                CGRectGetWidth(*(CGRect *)&v10);
              else
                CGRectGetHeight(*(CGRect *)&v10);
              goto LABEL_6;
            case 1:
              if (!v2)
              {
                objc_msgSend(v8, "frame");
                objc_msgSend(v9, "setFrame:");
                goto LABEL_7;
              }
              v14 = objc_msgSend(v1, "traitCollection");
              v15 = UITraitCollection.prefersRightToLeftLayouts.getter();

              v16 = 0.0;
              if ((v15 & 1) == 0)
                goto LABEL_17;
              goto LABEL_16;
            case 2:
              v18 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
              v19 = swift_allocObject(v18, 64, 7);
              *(_OWORD *)(v19 + 16) = xmmword_10066FBA0;
              *(_QWORD *)(v19 + 56) = &type metadata for String;
              *(_QWORD *)(v19 + 32) = 0xD00000000000002CLL;
              *(_QWORD *)(v19 + 40) = 0x8000000100649DA0;
              print(_:separator:terminator:)(v19, 32, 0xE100000000000000, 10, 0xE100000000000000);
              swift_bridgeObjectRelease(v19);
              goto LABEL_7;
            case 3:
              objc_msgSend(v1, "bounds");
              if (v2)
              {
                v24 = CGRectGetWidth(*(CGRect *)&v20) * 0.5;
                objc_msgSend(v9, "center");
                objc_msgSend(v9, "setCenter:", v24);
              }
              else
              {
                CGRectGetHeight(*(CGRect *)&v20);
                objc_msgSend(v9, "center");
                objc_msgSend(v9, "setCenter:");
              }
              goto LABEL_7;
            case 4:
              if (v2)
              {
                v25 = objc_msgSend(v1, "traitCollection");
                v26 = UITraitCollection.prefersRightToLeftLayouts.getter();

                v16 = 0.0;
                if ((v26 & 1) == 0)
                {
LABEL_16:
                  objc_msgSend(v1, "bounds");
                  Width = CGRectGetWidth(v30);
                  objc_msgSend(v9, "frame");
                  v16 = Width - CGRectGetWidth(v31);
                }
LABEL_17:
                objc_msgSend(v9, "frame");
                objc_msgSend(v9, "setFrame:", v16);
              }
              else
              {
                objc_msgSend(v1, "bounds");
                CGRectGetHeight(v28);
                objc_msgSend(v9, "frame");
                CGRectGetHeight(v29);
LABEL_6:
                objc_msgSend(v9, "frame");
                objc_msgSend(v9, "setFrame:");
              }
LABEL_7:
              ++v6;

              if (v5 != v6)
                continue;
              goto LABEL_32;
            case 5:
              if (v2)
                goto LABEL_7;
              objc_msgSend(v1, "bounds");
              CGRectGetHeight(v32);
              objc_msgSend(v9, "frame");
              CGRectGetHeight(v33);
              objc_msgSend(v9, "lastBaselineFromBottom");
              goto LABEL_6;
            default:
              goto LABEL_7;
          }
        }
      }
      __break(1u);
      JUMPOUT(0x1003ED4F4);
    }
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
  }
LABEL_32:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_1003ED50C(double a1, double a2, double a3)
{
  char *v3;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  BOOL v38;
  double v39;
  id v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;

  v7 = objc_msgSend(v3, "subviews");
  v8 = sub_10000EF74();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v50 = v9;
    else
      v50 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v9);
  if (v10)
  {
    v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension9StackView_axis];
    sub_1003ECB08();
    v13 = v12;
    if ((unint64_t)v12 >> 62)
    {
      if (v12 >= 0)
        v12 &= 0xFFFFFFFFFFFFFF8uLL;
      v14 = _CocoaArrayWrapper.endIndex.getter(v12);
    }
    else
    {
      v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v15 = 0.0;
    if (!v14)
      goto LABEL_36;
    if (v14 >= 1)
    {
      v16 = OBJC_IVAR____TtC22SubscribePageExtension9StackView_alignment;
      if ((v13 & 0xC000000000000001) != 0)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
      else
        v17 = *(id *)(v13 + 32);
      v18 = v17;
      objc_msgSend(v17, "sizeThatFits:", a1, a2);
      v21 = v20;
      if (v19 > a2 && v11 == 0)
        v23 = a2;
      else
        v23 = v19;
      v51 = a1;
      if (*(_QWORD *)&v3[v16] == 5)
      {
        objc_msgSend(v18, "lastBaselineFromBottom");
        v24 = a3;
        v26 = v25;

        v27 = v23 - v26;
        a3 = v24;
        a1 = v51;
      }
      else
      {

        if (v21 <= a1)
          v28 = v21;
        else
          v28 = a1;
        if (!v11)
          v28 = v21;
        if (v28 < 0.0)
          v15 = 0.0;
        else
          v15 = v28;
        v27 = v23;
      }
      if (v27 < 0.0)
        v29 = 0.0;
      else
        v29 = v27;
      if (v11)
        v30 = v23;
      else
        v30 = v21;
      v31 = v30 + 0.0;
      v32 = v14 - 1;
      if (v14 != 1)
      {
        v33 = 0;
        do
        {
          if ((v13 & 0xC000000000000001) != 0)
            v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33 + 1, v13);
          else
            v40 = *(id *)(v13 + 8 * v33 + 40);
          v41 = v40;
          objc_msgSend(v40, "sizeThatFits:", a1, a2);
          v44 = v43;
          if (v42 > a2 && v11 == 0)
            v46 = a2;
          else
            v46 = v42;
          if (*(_QWORD *)&v3[v16] == 5)
          {
            objc_msgSend(v41, "lastBaselineFromBottom");
            v47 = a3;
            v49 = v48;

            v35 = v46 - v49;
            a3 = v47;
            a1 = v51;
          }
          else
          {

            if (v44 <= a1)
              v34 = v44;
            else
              v34 = a1;
            if (!v11)
              v34 = v44;
            if (v15 <= v34)
              v15 = v34;
            v35 = v46;
          }
          if (v29 <= v35)
            v29 = v35;
          if (v11)
            v36 = v46;
          else
            v36 = v44;
          v37 = v31 + v36;
          v38 = v36 <= 0.0;
          v39 = -0.0;
          if (!v38)
            v39 = a3;
          v31 = v37 + v39;
          ++v33;
        }
        while (v32 != v33);
      }
LABEL_36:
      swift_bridgeObjectRelease(v13);
      return;
    }
    __break(1u);
  }
}

id sub_1003ED904()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StackView()
{
  return objc_opt_self(_TtC22SubscribePageExtension9StackView);
}

id sub_1003ED954()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = sub_1003EDF64(1u, 1u);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1003ED9B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = sub_1003EDF64(0, 1u);
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_1003EDA0C(double a1, double a2)
{
  Swift::UInt64 v3;
  Swift::UInt64 v4;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *(_QWORD *)&a1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)&a2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
}

Swift::Int sub_1003EDA54()
{
  double *v0;
  double v1;
  double v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  sub_1003EDA0C(v1, v2);
  return Hasher._finalize()();
}

void sub_1003EDAA4()
{
  double *v0;

  sub_1003EDA0C(*v0, v0[1]);
}

Swift::Int sub_1003EDAAC(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  sub_1003EDA0C(v2, v3);
  return Hasher._finalize()();
}

BOOL sub_1003EDAF8(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1003EDB24()
{
  uint64_t v0;
  uint64_t v1;
  int64x2_t v2;
  void *v8;
  uint64_t result;

  v0 = sub_10000DF3C(&qword_10080D148);
  v1 = swift_allocObject(v0, 1760, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10068B020;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = xmmword_10068B030;
  *(_OWORD *)(v1 + 96) = xmmword_10068B030;
  *(_OWORD *)(v1 + 112) = xmmword_10068B030;
  *(_OWORD *)(v1 + 128) = xmmword_10068B040;
  *(_OWORD *)(v1 + 144) = xmmword_10068B040;
  *(_OWORD *)(v1 + 160) = xmmword_10068B040;
  *(_OWORD *)(v1 + 176) = xmmword_10068B050;
  *(_OWORD *)(v1 + 192) = xmmword_10068B050;
  *(_OWORD *)(v1 + 208) = xmmword_10068B050;
  *(_OWORD *)(v1 + 224) = xmmword_10068B060;
  *(_OWORD *)(v1 + 240) = xmmword_10068B060;
  *(_OWORD *)(v1 + 256) = xmmword_10068B070;
  *(_OWORD *)(v1 + 272) = xmmword_100671230;
  *(_OWORD *)(v1 + 288) = xmmword_100671230;
  *(_QWORD *)(v1 + 304) = 0x3FF0000000000000;
  *(_QWORD *)(v1 + 312) = 0;
  *(_QWORD *)(v1 + 320) = 0;
  *(_QWORD *)(v1 + 328) = 0x3FC999999999999ALL;
  *(_OWORD *)(v1 + 336) = xmmword_10068B080;
  *(_OWORD *)(v1 + 352) = xmmword_10068B090;
  *(int64x2_t *)(v1 + 368) = vdupq_n_s64(0x3FC999999999999AuLL);
  *(_OWORD *)(v1 + 384) = xmmword_10068B0A0;
  *(_OWORD *)(v1 + 400) = xmmword_10068B0B0;
  *(_OWORD *)(v1 + 416) = xmmword_10068B0C0;
  *(_OWORD *)(v1 + 432) = xmmword_10068B0D0;
  *(_OWORD *)(v1 + 448) = xmmword_10068B0E0;
  *(_OWORD *)(v1 + 464) = xmmword_10068B0F0;
  *(_OWORD *)(v1 + 480) = xmmword_10068B0C0;
  *(_OWORD *)(v1 + 496) = xmmword_10068B0F0;
  *(_OWORD *)(v1 + 512) = xmmword_10068B100;
  *(_OWORD *)(v1 + 528) = xmmword_10068B110;
  *(_OWORD *)(v1 + 544) = xmmword_10068B120;
  *(_OWORD *)(v1 + 560) = xmmword_10068B130;
  *(_OWORD *)(v1 + 576) = xmmword_10068B130;
  *(_OWORD *)(v1 + 592) = xmmword_10068B130;
  *(_OWORD *)(v1 + 608) = xmmword_10068B140;
  *(_OWORD *)(v1 + 624) = xmmword_10068B150;
  *(_OWORD *)(v1 + 640) = xmmword_10068B160;
  *(_OWORD *)(v1 + 656) = xmmword_10068B170;
  *(_OWORD *)(v1 + 672) = xmmword_10068B180;
  *(_OWORD *)(v1 + 688) = xmmword_10068B190;
  *(int64x2_t *)(v1 + 704) = vdupq_n_s64(0x3FD999999999999AuLL);
  *(_OWORD *)(v1 + 720) = xmmword_10068B1A0;
  *(_OWORD *)(v1 + 736) = xmmword_10068B1B0;
  *(_OWORD *)(v1 + 752) = xmmword_10068B1C0;
  *(_OWORD *)(v1 + 768) = xmmword_10068B1C0;
  *(_OWORD *)(v1 + 784) = xmmword_10068B1D0;
  *(_OWORD *)(v1 + 800) = xmmword_10068B1E0;
  *(_OWORD *)(v1 + 816) = xmmword_10068B1F0;
  *(_OWORD *)(v1 + 832) = xmmword_10068B200;
  *(_OWORD *)(v1 + 848) = xmmword_10068B210;
  *(_OWORD *)(v1 + 864) = xmmword_10068B210;
  *(_OWORD *)(v1 + 880) = xmmword_10068B210;
  *(_OWORD *)(v1 + 896) = xmmword_10068B220;
  *(_OWORD *)(v1 + 912) = xmmword_10068B220;
  *(_OWORD *)(v1 + 928) = xmmword_10068B220;
  *(_OWORD *)(v1 + 944) = xmmword_10068B230;
  *(_OWORD *)(v1 + 960) = xmmword_10068B230;
  *(_OWORD *)(v1 + 976) = xmmword_10068B240;
  *(_OWORD *)(v1 + 992) = xmmword_10068B250;
  *(_OWORD *)(v1 + 1008) = xmmword_10068B260;
  *(_OWORD *)(v1 + 1024) = xmmword_10068B260;
  *(int64x2_t *)(v1 + 1040) = vdupq_n_s64(0x3FE3333333333333uLL);
  *(_OWORD *)(v1 + 1056) = xmmword_10068B270;
  *(_OWORD *)(v1 + 1072) = xmmword_10068B280;
  *(_OWORD *)(v1 + 1088) = xmmword_10068B290;
  *(_OWORD *)(v1 + 1104) = xmmword_10068B2A0;
  *(_OWORD *)(v1 + 1120) = xmmword_10068B2B0;
  *(_OWORD *)(v1 + 1136) = xmmword_10068B2C0;
  *(_OWORD *)(v1 + 1152) = xmmword_10068B2C0;
  *(_OWORD *)(v1 + 1168) = xmmword_10068B2C0;
  *(_OWORD *)(v1 + 1184) = xmmword_10068B2D0;
  *(_OWORD *)(v1 + 1200) = xmmword_10068B2E0;
  *(_OWORD *)(v1 + 1216) = xmmword_10068B2D0;
  *(_OWORD *)(v1 + 1232) = xmmword_10068B2F0;
  *(_OWORD *)(v1 + 1248) = xmmword_10068B300;
  *(_OWORD *)(v1 + 1264) = xmmword_10068B310;
  *(_OWORD *)(v1 + 1280) = xmmword_10068B320;
  *(_OWORD *)(v1 + 1296) = xmmword_10068B330;
  *(_OWORD *)(v1 + 1312) = xmmword_10068B340;
  *(_OWORD *)(v1 + 1328) = xmmword_10068B350;
  *(_OWORD *)(v1 + 1344) = xmmword_10068B360;
  *(_OWORD *)(v1 + 1360) = xmmword_10068B370;
  v2 = vdupq_n_s64(0x3FE999999999999AuLL);
  *(int64x2_t *)(v1 + 1376) = v2;
  *(int64x2_t *)(v1 + 1392) = v2;
  *(int64x2_t *)(v1 + 1408) = v2;
  *(_OWORD *)(v1 + 1424) = xmmword_10068B380;
  *(_OWORD *)(v1 + 1440) = xmmword_10068B380;
  *(_OWORD *)(v1 + 1456) = xmmword_10068B380;
  *(_OWORD *)(v1 + 1472) = xmmword_100671240;
  *(_OWORD *)(v1 + 1488) = xmmword_100671240;
  *(_OWORD *)(v1 + 1504) = xmmword_100671240;
  *(_OWORD *)(v1 + 1520) = xmmword_10068B390;
  *(_OWORD *)(v1 + 1536) = xmmword_10068B3A0;
  *(_OWORD *)(v1 + 1552) = xmmword_10068B3B0;
  *(_OWORD *)(v1 + 1568) = xmmword_10068B3C0;
  *(_OWORD *)(v1 + 1584) = xmmword_10068B3D0;
  *(_OWORD *)(v1 + 1600) = xmmword_10068B3C0;
  *(_OWORD *)(v1 + 1616) = xmmword_10068B3E0;
  *(_OWORD *)(v1 + 1632) = xmmword_10068B3F0;
  *(_OWORD *)(v1 + 1648) = xmmword_10068B400;
  *(_OWORD *)(v1 + 1664) = xmmword_10068B3F0;
  *(_OWORD *)(v1 + 1680) = xmmword_10068B410;
  *(_OWORD *)(v1 + 1696) = xmmword_10068B420;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v1 + 1712) = _Q0;
  *(_OWORD *)(v1 + 1728) = _Q0;
  *(_OWORD *)(v1 + 1744) = _Q0;
  v8 = (void *)sub_10036D7E4(v1);
  swift_setDeallocating(v1);
  result = swift_deallocClassInstance(v1, 32, 7);
  off_10080D098 = v8;
  return result;
}

uint64_t sub_1003EDF18()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TodayCardMeshTransforms()
{
  return objc_opt_self(_TtC22SubscribePageExtension23TodayCardMeshTransforms);
}

id sub_1003EDF64(unsigned int a1, unsigned int a2)
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  int32x2_t v7;
  int32x2_t v8;
  int64x2_t v9;
  double v15;
  unint64_t v16;
  char v17;
  float64x2_t v18;
  unint64_t v19;
  char v20;
  float64x2_t v21;
  unint64_t v22;
  char v23;
  float64x2_t v24;
  unint64_t v25;
  char v26;
  float64x2_t v27;
  unint64_t v28;
  char v29;
  float64x2_t v30;
  unint64_t v31;
  char v32;
  float64x2_t v33;
  uint64_t v34;
  int32x2_t v35;
  int8x16_t v37;
  float64x2_t v38;
  int8x16_t v39;
  __int32 v40;
  uint64_t v41;
  double v42;
  int8x16_t v43;
  uint64_t v44;

  v4 = objc_msgSend(objc_allocWithZone((Class)CAMutableMeshTransform), "init");
  objc_msgSend(v4, "setDepthNormalization:", kCADepthNormalizationMax);
  if (qword_1007F1FF8 != -1)
    swift_once(&qword_1007F1FF8, sub_1003EDB24);
  v5 = 0;
  v6 = off_10080D098;
  v7 = vdup_n_s32(a2);
  v8 = vdup_n_s32(a1);
  v9.i64[0] = v8.u32[0];
  v9.i64[1] = v8.u32[1];
  __asm { FMOV            V1.2D, #1.0 }
  v38 = _Q1;
  v39 = (int8x16_t)vcltzq_s64(vshlq_n_s64(v9, 0x3FuLL));
  v9.i64[0] = v7.u32[0];
  v9.i64[1] = v7.u32[1];
  v37 = (int8x16_t)vcltzq_s64(vshlq_n_s64(v9, 0x3FuLL));
  while (1)
  {
    if (v6[2])
    {
      v15 = *((double *)&off_100720D08 + v5 + 4);
      v16 = sub_10036C5BC(0.0, v15);
      if ((v17 & 1) != 0)
      {
        v18 = (float64x2_t)vbslq_s8(v39, *(int8x16_t *)(v6[7] + 32 * v16), *(int8x16_t *)(v6[7] + 32 * v16 + 16));
        v41 = 0;
        v42 = v15;
        v43 = vbslq_s8(v37, (int8x16_t)vsubq_f64(v38, v18), (int8x16_t)v18);
        v44 = 0;
        objc_msgSend(v4, "addVertex:", &v41);
      }
      if (v6[2])
      {
        v19 = sub_10036C5BC(0.2, v15);
        if ((v20 & 1) != 0)
        {
          v21 = (float64x2_t)vbslq_s8(v39, *(int8x16_t *)(v6[7] + 32 * v19), *(int8x16_t *)(v6[7] + 32 * v19 + 16));
          v41 = 0x3FC999999999999ALL;
          v42 = v15;
          v43 = vbslq_s8(v37, (int8x16_t)vsubq_f64(v38, v21), (int8x16_t)v21);
          v44 = 0;
          objc_msgSend(v4, "addVertex:", &v41);
        }
        if (v6[2])
        {
          v22 = sub_10036C5BC(0.4, v15);
          if ((v23 & 1) != 0)
          {
            v24 = (float64x2_t)vbslq_s8(v39, *(int8x16_t *)(v6[7] + 32 * v22), *(int8x16_t *)(v6[7] + 32 * v22 + 16));
            v41 = 0x3FD999999999999ALL;
            v42 = v15;
            v43 = vbslq_s8(v37, (int8x16_t)vsubq_f64(v38, v24), (int8x16_t)v24);
            v44 = 0;
            objc_msgSend(v4, "addVertex:", &v41);
          }
          if (v6[2])
          {
            v25 = sub_10036C5BC(0.6, v15);
            if ((v26 & 1) != 0)
            {
              v27 = (float64x2_t)vbslq_s8(v39, *(int8x16_t *)(v6[7] + 32 * v25), *(int8x16_t *)(v6[7] + 32 * v25 + 16));
              v41 = 0x3FE3333333333333;
              v42 = v15;
              v43 = vbslq_s8(v37, (int8x16_t)vsubq_f64(v38, v27), (int8x16_t)v27);
              v44 = 0;
              objc_msgSend(v4, "addVertex:", &v41);
            }
            if (v6[2])
            {
              v28 = sub_10036C5BC(0.8, v15);
              if ((v29 & 1) != 0)
              {
                v30 = (float64x2_t)vbslq_s8(v39, *(int8x16_t *)(v6[7] + 32 * v28), *(int8x16_t *)(v6[7] + 32 * v28 + 16));
                v41 = 0x3FE999999999999ALL;
                v42 = v15;
                v43 = vbslq_s8(v37, (int8x16_t)vsubq_f64(v38, v30), (int8x16_t)v30);
                v44 = 0;
                objc_msgSend(v4, "addVertex:", &v41);
              }
              if (v6[2])
              {
                v31 = sub_10036C5BC(1.0, v15);
                if ((v32 & 1) != 0)
                {
                  v33 = (float64x2_t)vbslq_s8(v39, *(int8x16_t *)(v6[7] + 32 * v31), *(int8x16_t *)(v6[7] + 32 * v31 + 16));
                  v41 = 0x3FF0000000000000;
                  v42 = v15;
                  v43 = vbslq_s8(v37, (int8x16_t)vsubq_f64(v38, v33), (int8x16_t)v33);
                  v44 = 0;
                  objc_msgSend(v4, "addVertex:", &v41);
                }
              }
            }
          }
        }
      }
    }
    if (v5 == 5)
      break;
    if ((unint64_t)++v5 >= 6)
    {
      __break(1u);
      break;
    }
  }
  v34 = -30;
  do
  {
    LODWORD(v41) = v34 + 30;
    HIDWORD(v41) = v34 + 31;
    v35 = vadd_s32(vdup_n_s32((int)v34 + 30), (int32x2_t)0x600000007);
    v40 = v35.i32[0];
    v42 = *(double *)&v35;
    v43 = 0uLL;
    objc_msgSend(v4, "addFace:", &v41, *(_OWORD *)&v37, *(_OWORD *)&v38);
    LODWORD(v41) = v34 + 31;
    HIDWORD(v41) = v34 + 32;
    LODWORD(v42) = v34 + 38;
    HIDWORD(v42) = v40;
    v43 = 0uLL;
    objc_msgSend(v4, "addFace:", &v41);
    LODWORD(v41) = v34 + 32;
    HIDWORD(v41) = v34 + 33;
    LODWORD(v42) = v34 + 39;
    HIDWORD(v42) = v34 + 38;
    v43 = 0uLL;
    objc_msgSend(v4, "addFace:", &v41);
    LODWORD(v41) = v34 + 33;
    HIDWORD(v41) = v34 + 34;
    LODWORD(v42) = v34 + 40;
    HIDWORD(v42) = v34 + 39;
    v43 = 0uLL;
    objc_msgSend(v4, "addFace:", &v41);
    LODWORD(v41) = v34 + 34;
    HIDWORD(v41) = v34 + 35;
    LODWORD(v42) = v34 + 41;
    HIDWORD(v42) = v34 + 40;
    v43 = 0uLL;
    objc_msgSend(v4, "addFace:", &v41);
    v34 += 6;
  }
  while (v34);
  return v4;
}

ValueMetadata *type metadata accessor for TodayCardMeshTransforms.MeshPoint()
{
  return &type metadata for TodayCardMeshTransforms.MeshPoint;
}

unint64_t sub_1003EE3AC()
{
  unint64_t result;

  result = qword_10080D150;
  if (!qword_10080D150)
  {
    result = swift_getWitnessTable(&unk_10068B494, &type metadata for TodayCardMeshTransforms.MeshPoint);
    atomic_store(result, (unint64_t *)&qword_10080D150);
  }
  return result;
}

void sub_1003EE3F0()
{
  qword_10080D158 = 0x4024000000000000;
}

char *sub_1003EE400(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  double left;
  double bottom;
  double right;
  char *v16;
  id v17;
  objc_super v19;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension31TodayDebugSectionBackgroundView_sectionTypeIndicator;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for TodayDebugSectionBackgroundView();
  v12 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v16 = (char *)v12;
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension31TodayDebugSectionBackgroundView_sectionTypeIndicator]);
  v17 = objc_msgSend(v16, "layer");
  objc_msgSend(v17, "setZPosition:", 1000.0);

  return v16;
}

void sub_1003EE6EC(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  __n128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  __n128 v27;
  __n128 v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v3 = type metadata accessor for Shelf.ContentsMetadata(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for TodaySectionDisplayOptions(0, v9);
  v12 = *(_QWORD *)(v32 - 8);
  v13 = __chkstk_darwin(v32);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_10068B540);
  ReadOnlyLens.subscript.getter(KeyPath, v7);
  v17 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v17);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == enum case for Shelf.ContentsMetadata.todaySection(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v18 = v6;
    v19 = v32;
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v15, v18, v32);
    v21 = v34;
    v22 = *(void **)&v34[OBJC_IVAR____TtC22SubscribePageExtension31TodayDebugSectionBackgroundView_sectionTypeIndicator];
    v23 = (void *)TodaySectionDisplayOptions.debugSectionTypeIndicatorColor.getter(v20);
    objc_msgSend(v22, "setBackgroundColor:", v23);

    v24 = sub_1003235C8();
    v25 = v33;
    v26 = ShelfLayoutSpacingProvider.topPaddingValue(in:)(v33, &type metadata for TodayPageShelfLayoutSpacingProvider, v24);
    v27.n128_u64[0] = ShelfLayoutSpacingProvider.bottomPaddingValue(in:)(v25, &type metadata for TodayPageShelfLayoutSpacingProvider, v24);
    v28.n128_f64[0] = v26;
    objc_msgSend(v21, "setLayoutMargins:", static UIEdgeInsets.vertical(top:bottom:)(v28, v27));
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v29 = *(void **)&v34[OBJC_IVAR____TtC22SubscribePageExtension31TodayDebugSectionBackgroundView_sectionTypeIndicator];
    v30 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v29, "setBackgroundColor:", v30);

  }
}

id sub_1003EEA0C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayDebugSectionBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TodayDebugSectionBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension31TodayDebugSectionBackgroundView);
}

char *sub_1003EEA70(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  NSString v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id (**v23)();
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  objc_super v41;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = OBJC_IVAR___ExtensionViewController_presentationGate;
  sub_1000C0EC4();
  v9 = v3;
  v11 = static OS_dispatch_queue.main.getter(v10);
  v12 = type metadata accessor for Gate(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_QWORD *)&v4[v8] = Gate.init(queue:passingDelay:)(v11, 0.0);
  v13 = OBJC_IVAR___ExtensionViewController_viewAppeared;
  v14 = type metadata accessor for Gate.Condition(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)&v9[v13] = Gate.Condition.init(initialValue:)(0);
  v15 = OBJC_IVAR___ExtensionViewController_viewControllerConfigured;
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)&v9[v15] = Gate.Condition.init(initialValue:)(0);
  v16 = OBJC_IVAR___ExtensionViewController_didPresentRootViewController;
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)&v9[v16] = Gate.Condition.init(initialValue:)(0);
  v17 = type metadata accessor for RootViewController();
  *(_QWORD *)&v9[OBJC_IVAR___ExtensionViewController_rootViewController] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");

  if (a2)
  {
    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  v41.receiver = v9;
  v41.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v41, "initWithNibName:bundle:", v19, a3, v18);

  v21 = *(_QWORD *)&v20[OBJC_IVAR___ExtensionViewController_rootViewController];
  v22 = swift_allocObject(&unk_10073E2D8, 24, 7);
  *(_QWORD *)(v22 + 16) = v20;
  v23 = (id (**)())(v21 + OBJC_IVAR____TtC22SubscribePageExtension18RootViewController_dismissalCompletionHandler);
  v24 = *(_QWORD *)(v21 + OBJC_IVAR____TtC22SubscribePageExtension18RootViewController_dismissalCompletionHandler);
  v25 = (uint64_t)v23[1];
  *v23 = sub_1003EF4EC;
  v23[1] = (id (*)())v22;
  v26 = v20;
  sub_100019310(v24, v25);
  v27 = OBJC_IVAR___ExtensionViewController_presentationGate;
  v28 = *(_QWORD *)&v26[OBJC_IVAR___ExtensionViewController_presentationGate];
  v29 = *(_QWORD *)&v26[OBJC_IVAR___ExtensionViewController_viewAppeared];
  swift_retain(v28);
  v30 = swift_retain(v29);
  Gate.add(condition:)(v30);
  swift_release(v28);
  swift_release(v29);
  v31 = *(_QWORD *)&v26[v27];
  v32 = *(_QWORD *)&v26[OBJC_IVAR___ExtensionViewController_viewControllerConfigured];
  swift_retain(v31);
  v33 = swift_retain(v32);
  Gate.add(condition:)(v33);
  swift_release(v31);
  swift_release(v32);
  v34 = *(_QWORD *)&v26[v27];
  v35 = *(_QWORD *)&v26[OBJC_IVAR___ExtensionViewController_didPresentRootViewController];
  swift_retain(v34);
  v36 = swift_retain(v35);
  Gate.add(condition:)(v36);
  swift_release(v34);
  swift_release(v35);
  v37 = *(_QWORD *)&v26[v27];
  v38 = swift_allocObject(&unk_10073E300, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16);
  swift_retain(v37);
  v39 = swift_retain(v38);
  Gate.observer.setter(sub_1003EF558, v38, v39);
  swift_release(v37);
  swift_release(v38);

  return v26;
}

void sub_1003EED68(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char *v4;
  void *v5;
  char *v6;
  char v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = (char *)*(id *)(Strong + OBJC_IVAR___ExtensionViewController_rootViewController);

    v5 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension18RootViewController_childViewController];
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v6, "setTransitioningDelegate:", v4);
      objc_msgSend(v6, "setModalPresentationStyle:", 4);
      objc_msgSend(v4, "presentViewController:animated:completion:", v6, 1, 0);

      v4 = v6;
    }

  }
}

void sub_1003EEFD4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[5];
  uint64_t v6;

  v1 = v0;
  if ((dispatch thunk of Gate.Condition.isSatisfied.getter() & 1) == 0)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR___ExtensionViewController_rootViewController];
    objc_msgSend(*(id *)&v1[OBJC_IVAR___ExtensionViewController_rootViewController], "setModalPresentationStyle:", 0);
    v3 = swift_allocObject(&unk_10073E288, 24, 7);
    *(_QWORD *)(v3 + 16) = v1;
    v5[4] = sub_1003EF4A4;
    v6 = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_1000BD6CC;
    v5[3] = &unk_10073E2A0;
    v4 = _Block_copy(v5);
    objc_msgSend(v1, "presentViewController:animated:completion:", v2, 0, v4, swift_release(v6).n128_f64[0]);
    _Block_release(v4);
  }
}

void sub_1003EF128(uint64_t a1)
{
  unint64_t v2;
  char v3;
  int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[2];
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  *(_QWORD *)&v12 = 0x44496D657469;
  *((_QWORD *)&v12 + 1) = 0xE600000000000000;
  AnyHashable.init<A>(_:)(&v12, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_10036C148((uint64_t)v11), (v3 & 1) != 0))
  {
    sub_100010E9C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_100019370((uint64_t)v11);
  if (*((_QWORD *)&v13 + 1))
  {
    v4 = swift_dynamicCast(v10, &v12, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v5 = v4 == 0;
    if (v4)
      v6 = v10[0];
    else
      v6 = 0;
    if (v5)
      v7 = 0;
    else
      v7 = v10[1];
  }
  else
  {
    sub_1000131E0((uint64_t)&v12);
    v6 = 0;
    v7 = 0;
  }
  v8 = (void *)sub_1004CF1D4(v6, v7);
  v9 = v8;
  swift_bridgeObjectRelease(v7);
  dispatch thunk of Gate.Condition.isSatisfied.setter(v8 != 0);

}

uint64_t type metadata accessor for ExtensionViewController()
{
  return objc_opt_self(ExtensionViewController);
}

void sub_1003EF350()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = OBJC_IVAR___ExtensionViewController_presentationGate;
  sub_1000C0EC4();
  v4 = static OS_dispatch_queue.main.getter(v3);
  v5 = type metadata accessor for Gate(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  *(_QWORD *)&v1[v2] = Gate.init(queue:passingDelay:)(v4, 0.0);
  v6 = OBJC_IVAR___ExtensionViewController_viewAppeared;
  v7 = type metadata accessor for Gate.Condition(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)&v1[v6] = Gate.Condition.init(initialValue:)(0);
  v8 = OBJC_IVAR___ExtensionViewController_viewControllerConfigured;
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)&v1[v8] = Gate.Condition.init(initialValue:)(0);
  v9 = OBJC_IVAR___ExtensionViewController_didPresentRootViewController;
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)&v1[v9] = Gate.Condition.init(initialValue:)(0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ExtensionViewController.swift", 52, 2, 41, 0);
  __break(1u);
}

uint64_t sub_1003EF480()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EF4A4()
{
  return dispatch thunk of Gate.Condition.isSatisfied.setter(1);
}

uint64_t sub_1003EF4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003EF4E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1003EF4EC()
{
  uint64_t v0;
  objc_super v2;

  v2.receiver = *(id *)(v0 + 16);
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dismissViewControllerAnimated:completion:", 0, 0);
}

uint64_t sub_1003EF534()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003EF558()
{
  uint64_t v0;

  sub_1003EED68(v0);
}

id sub_1003EF564()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0156862745, 0.0156862745, 0.0588235294, 0.4);
  qword_10080D1E0 = (uint64_t)result;
  return result;
}

char *sub_1003EF5B8(void *a1, void *a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  char *result;
  char *v25;
  char *v26;
  objc_super v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_10000DF3C(&qword_100804490);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v2;
  v11 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView] = v11;
  v12 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_shadowView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");

  v27.receiver = v10;
  v27.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v27, "initWithPresentedViewController:presentingViewController:", a1, a2);
  v14 = *(void **)&v13[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView];
  v15 = v13;
  objc_msgSend(v14, "setAlpha:", 0.0);
  v16 = qword_1007F2008;
  v17 = v14;
  if (v16 != -1)
    swift_once(&qword_1007F2008, sub_1003EF564);
  objc_msgSend(v17, "setBackgroundColor:", qword_10080D1E0);

  v18 = OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_shadowView;
  if (qword_1007F1428 != -1)
    swift_once(&qword_1007F1428, sub_10015E450);
  v19 = type metadata accessor for Shadow(0);
  v20 = sub_1000117A8(v19, (uint64_t)qword_100852078);
  v21 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v8, v20, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v8, 0, 1, v19);
  dispatch thunk of ShadowView.shadow.setter(v8);
  v22 = objc_msgSend(*(id *)&v15[v18], "layer");
  objc_msgSend(v22, "setMaskedCorners:", 15);

  v23 = *(void **)&v15[v18];
  objc_msgSend(v23, "_setContinuousCornerRadius:", 16.0);
  objc_msgSend(v23, "setAutoresizingMask:", 18);
  result = (char *)objc_msgSend(a1, "view");
  if (result)
  {
    v25 = result;
    objc_msgSend(result, "_setContinuousCornerRadius:", 16.0);

    result = (char *)objc_msgSend(a1, "view");
    if (result)
    {
      v26 = result;
      objc_msgSend(result, "setClipsToBounds:", 1);

      return v15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1003EF924()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  CGFloat v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v1 = objc_msgSend(v0, "containerView");
  if (!v1)
    return 0.0;
  v2 = v1;
  objc_msgSend(v1, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  objc_msgSend(v2, "safeAreaInsets");
  v32 = CGRect.subtracting(insets:)(v11, v12, v13, v14, v4, v6, v8, v10);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = objc_msgSend(v0, "presentedViewController");
  objc_msgSend(v2, "bounds");
  v23 = v22;
  v25 = v24;
  v26 = objc_msgSend(v0, "traitCollection");
  v27 = objc_msgSend(v26, "userInterfaceIdiom");

  if (v27)
    v28 = 540.0;
  else
    v28 = 295.0;
  v33.origin.x = 0.0;
  v33.origin.y = 0.0;
  v33.size.width = v23;
  v33.size.height = v25;
  v29 = CGRectGetWidth(v33) + -80.0;
  if (v29 < v28)
    v28 = v29;
  v34.origin.x = 0.0;
  v34.origin.y = 0.0;
  v34.size.width = v23;
  v34.size.height = v25;
  CGRectGetHeight(v34);

  v35.origin.x = v32;
  v35.origin.y = v16;
  v35.size.width = v18;
  v35.size.height = v20;
  v30 = CGRectGetMidX(v35) - v28 * 0.5;
  v36.origin.x = v32;
  v36.origin.y = v16;
  v36.size.width = v18;
  v36.size.height = v20;
  CGRectGetMidY(v36);

  return v30;
}

void sub_1003EFC4C()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;

  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v10 = v1;
    objc_msgSend(v1, "bounds");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView], "setFrame:");
    v2 = sub_1003EF924();
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v9 = objc_msgSend(v0, "presentedView");
    objc_msgSend(v9, "setFrame:", v2, v4, v6, v8);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_shadowView], "setFrame:", v2, v4, v6, v8);
  }
}

void sub_1003EFD8C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v11 = v1;
    objc_msgSend(v1, "bounds");
    v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView];
    objc_msgSend(v2, "setFrame:");
    objc_msgSend(v11, "insertSubview:atIndex:", v2, 0);
    v3 = objc_msgSend(v0, "presentedViewController");
    v4 = objc_msgSend(v3, "view");

    if (v4)
    {
      objc_msgSend(v11, "insertSubview:belowSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_shadowView], v4);

    }
    v5 = objc_msgSend(v0, "presentingViewController");
    v6 = objc_msgSend(v5, "transitionCoordinator");

    objc_msgSend(v2, "setAlpha:", 0.0);
    if (v6)
    {
      v7 = swift_allocObject(&unk_10073E378, 24, 7);
      *(_QWORD *)(v7 + 16) = v0;
      aBlock[4] = sub_1003F020C;
      v13 = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10033F618;
      aBlock[3] = &unk_10073E390;
      v8 = _Block_copy(aBlock);
      v9 = v13;
      swift_unknownObjectRetain(v6);
      v10 = v0;
      objc_msgSend(v6, "animateAlongsideTransition:completion:", v8, 0, swift_release(v9).n128_f64[0]);

      swift_unknownObjectRelease(v6);
      _Block_release(v8);
      swift_unknownObjectRelease(v6);
    }
    else
    {

    }
  }
}

void sub_1003EFFBC()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[5];
  uint64_t v8;

  v1 = objc_msgSend(v0, "presentedViewController");
  v2 = objc_msgSend(v1, "transitionCoordinator");

  if (v2)
  {
    v3 = swift_allocObject(&unk_10073E328, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v7[4] = sub_1003F01A8;
    v8 = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_10033F618;
    v7[3] = &unk_10073E340;
    v4 = _Block_copy(v7);
    v5 = v8;
    v6 = v0;
    objc_msgSend(v2, "animateAlongsideTransition:completion:", v4, 0, swift_release(v5).n128_f64[0]);
    _Block_release(v4);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_shadowView], "setAlpha:", 0.0);
  }
}

uint64_t type metadata accessor for SubscribePagePresentationController()
{
  return objc_opt_self(_TtC22SubscribePageExtension35SubscribePagePresentationController);
}

uint64_t sub_1003F0184()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003F01A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_shadowView), "setAlpha:", 0.0);
}

uint64_t sub_1003F01F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003F0204(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1003F020C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC22SubscribePageExtension35SubscribePagePresentationController_dimmingView), "setAlpha:", 1.0);
}

uint64_t sub_1003F0238()
{
  return sub_10000E99C(&qword_10080D220, type metadata accessor for PrivacyCategoryCollectionViewCell, (uint64_t)&unk_10068B5F8);
}

double sub_1003F0268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t KeyPath;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v17;
  void *v18;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for PrivacyCategory(0);
  v5 = sub_10000E99C(&qword_10080D228, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyCategory, (uint64_t)&protocol conformance descriptor for PrivacyCategory);
  ItemLayoutContext.typedModel<A>(as:)(&v18, v4, v4, v5);
  v6 = v18;
  if (!v18)
    return 0.0;
  KeyPath = swift_getKeyPath(&unk_10068B648);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  v8 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v10 = v9;
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v11 = sub_1000826AC();
  type metadata accessor for PrivacyCategoryView();
  swift_getObjectType();
  v12 = sub_100287950(v6, (uint64_t)v11);
  v18 = (void *)v12;
  v13 = type metadata accessor for LayoutViewPlaceholder(0);
  dispatch thunk of Measurable.measurements(fitting:in:)(v11, v13, &protocol witness table for LayoutViewPlaceholder, v8, v10);
  v15 = v14;
  swift_unknownObjectRelease(v11);
  swift_release(v6);
  swift_release(v12);
  return v15;
}

char *sub_1003F0404(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_QWORD *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  double left;
  double bottom;
  double right;
  id v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  void *v57;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  objc_class *ObjectType;
  void (*v69)(char *, uint64_t);
  char *v70;
  objc_super v71;
  _QWORD v72[3];
  uint64_t v73;
  void *v74;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  __chkstk_darwin(v9);
  v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v12 = __chkstk_darwin(v11);
  v64 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FontSource(0, v12);
  v15 = *(_QWORD **)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = qword_1007F2458;
  v19 = v4;
  if (v18 != -1)
    swift_once(&qword_1007F2458, sub_100414E94);
  v20 = type metadata accessor for FontUseCase(0);
  v21 = sub_1000117A8(v20, (uint64_t)qword_1008551F0);
  v63 = *(_QWORD *)(v20 - 8);
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  v62(v17, v21, v20);
  v22 = enum case for FontSource.useCase(_:);
  v23 = (void (*)(char *, uint64_t, uint64_t))v15[13];
  v23(v17, enum case for FontSource.useCase(_:), v14);
  v60 = v23;
  v73 = v14;
  v74 = &protocol witness table for FontSource;
  v24 = sub_1000117C0(v72);
  v70 = v19;
  v25 = (void (*)(_QWORD *, char *, uint64_t))v15[2];
  v25(v24, v17, v14);
  StaticDimension.init(_:scaledLike:)(v72, 5.0);
  v69 = (void (*)(char *, uint64_t))v15[1];
  v69(v17, v14);
  v26 = v21;
  v27 = v21;
  v61 = v21;
  v28 = v62;
  v62(v17, v26, v20);
  v29 = v22;
  v23(v17, v22, v14);
  v73 = v14;
  v74 = &protocol witness table for FontSource;
  v30 = sub_1000117C0(v72);
  v25(v30, v17, v14);
  v31 = v25;
  StaticDimension.init(_:scaledLike:)(v72, 17.0);
  v32 = v69;
  v69(v17, v14);
  v59 = &v70[OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_scalableHorizontalPadding];
  v28(v17, v27, v20);
  v33 = v28;
  v34 = v60;
  v60(v17, v29, v14);
  v73 = v14;
  v74 = &protocol witness table for FontSource;
  v35 = sub_1000117C0(v72);
  v31(v35, v17, v14);
  StaticDimension.init(_:scaledLike:)(v72, 3.0);
  v32(v17, v14);
  v36 = v61;
  v33(v17, v61, v20);
  v34(v17, v29, v14);
  v73 = v14;
  v74 = &protocol witness table for FontSource;
  v37 = sub_1000117C0(v72);
  v31(v37, v17, v14);
  StaticDimension.init(_:scaledLike:)(v72, 1.0);
  v69(v17, v14);
  v38 = OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_ageLabel;
  v39 = v64;
  v33(v64, v36, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v39, 0, 1, v20);
  v40 = v67;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v67, enum case for DirectionalTextAlignment.none(_:), v66);
  v41 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v42 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v39, 2, 0, 1, 0, v40, 0, 0);
  v43 = v70;
  *(_QWORD *)&v70[v38] = v42;

  v71.receiver = v43;
  v71.super_class = ObjectType;
  v44 = objc_msgSendSuper2(&v71, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v48 = v44;
  objc_msgSend(v48, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v49 = (void *)objc_opt_self(UIColor);
  v50 = v48;
  v51 = objc_msgSend(v49, "clearColor");
  objc_msgSend(v50, "setBackgroundColor:", v51);

  v52 = (char *)v50;
  v53 = objc_msgSend(v49, "systemGrayColor");
  objc_msgSend(v52, "setTintColor:", v53);

  v54 = OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_ageLabel;
  v55 = *(id *)&v52[OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_ageLabel];
  v56 = objc_msgSend(v52, "tintColor");
  objc_msgSend(v55, "setTextColor:", v56);

  v57 = *(void **)&v52[v54];
  objc_msgSend(v57, "setTextAlignment:", 1);
  objc_msgSend(v52, "addSubview:", v57);

  return v52;
}

void sub_1003F0A58(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  double v17;
  void (*v18)(char *, uint64_t);
  double x;
  double y;
  double width;
  double height;
  void *v23;
  double v24;
  id v25;
  id v26;
  void *v27;
  objc_super v28;
  CGRect v29;
  CGRect v30;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for FloatingPointRoundingRule(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28.receiver = v5;
  v28.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v28, "drawRect:", a1, a2, a3, a4);
  static Dimensions.defaultRoundingRule.getter(v15);
  v16 = type metadata accessor for StaticDimension(0);
  v17 = AnyDimension.value(in:rounded:)(v5, v14, v16, &protocol witness table for StaticDimension);
  v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  v29.origin.x = a1;
  v29.origin.y = a2;
  v29.size.width = a3;
  v29.size.height = a4;
  v30 = CGRectInset(v29, v17 * 0.5, v17 * 0.5);
  x = v30.origin.x;
  y = v30.origin.y;
  width = v30.size.width;
  height = v30.size.height;
  v23 = (void *)objc_opt_self(UIBezierPath);
  static Dimensions.defaultRoundingRule.getter(v23);
  v24 = AnyDimension.value(in:rounded:)(v5, v14, v16, &protocol witness table for StaticDimension);
  v18(v14, v11);
  v25 = objc_msgSend(v23, "_bezierPathWithArcRoundedRect:cornerRadius:", x, y, width, height, v24);
  objc_msgSend(v25, "setLineWidth:", v17);
  v26 = objc_msgSend(v5, "tintColor");
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, "setStroke");

    objc_msgSend(v25, "stroke");
  }
  else
  {
    __break(1u);
  }
}

double sub_1003F0CD8(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v27;

  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Dimensions.defaultRoundingRule.getter(v7);
  v8 = type metadata accessor for StaticDimension(0);
  v9 = AnyDimension.value(in:rounded:)(v1, v6, v8, &protocol witness table for StaticDimension);
  v10 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  v11 = v10(v6, v3);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_ageLabel);
  static Dimensions.defaultRoundingRule.getter(v11);
  v13 = AnyDimension.value(in:rounded:)(v1, v6, v8, &protocol witness table for StaticDimension);
  v14 = v10(v6, v3);
  static Dimensions.defaultRoundingRule.getter(v14);
  v15 = AnyDimension.value(in:rounded:)(v1, v6, v8, &protocol witness table for StaticDimension);
  v10(v6, v3);
  v16 = v15 + v15;
  if (v13 < 1.0)
    v17 = 2.0;
  else
    v17 = v13 + v13;
  v18 = a1 - v17;
  if (v15 < 1.0)
    v16 = 2.0;
  v19 = objc_msgSend(v12, "sizeThatFits:", v18, v9 - v16);
  v21 = v20;
  static Dimensions.defaultRoundingRule.getter(v19);
  v22 = AnyDimension.value(in:rounded:)(v1, v6, v8, &protocol witness table for StaticDimension);
  v23 = v10(v6, v3);
  static Dimensions.defaultRoundingRule.getter(v23);
  v24 = AnyDimension.value(in:rounded:)(v1, v6, v8, &protocol witness table for StaticDimension);
  v10(v6, v3);
  v25 = 4.0;
  if (v24 >= 1.0)
    v25 = v24 * 4.0;
  return v21 + v22 + v22 + v25;
}

uint64_t sub_1003F10B8()
{
  return type metadata accessor for AgeRatingBadgeView(0);
}

uint64_t type metadata accessor for AgeRatingBadgeView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080D280;
  if (!qword_10080D280)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AgeRatingBadgeView);
  return result;
}

uint64_t sub_1003F10FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = v4[0];
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1003F117C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *);
  _QWORD *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t);
  _QWORD *v22;
  void (*v23)(_QWORD *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD *, char *, uint64_t);
  unsigned int v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD v46[3];
  uint64_t v47;
  void *v48;

  v1 = type metadata accessor for DirectionalTextAlignment(0);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v1;
  __chkstk_darwin(v1);
  v45 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v4 = __chkstk_darwin(v3);
  v42 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontSource(0, v4);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2458 != -1)
    swift_once(&qword_1007F2458, sub_100414E94);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_1008551F0);
  v41 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  v37 = v10;
  v12(v9, v11, v10);
  v39 = enum case for FontSource.useCase(_:);
  v13 = (void (*)(char *))v7[13];
  v13(v9);
  v47 = v6;
  v48 = &protocol witness table for FontSource;
  v14 = sub_1000117C0(v46);
  v38 = (void (*)(_QWORD *, char *, uint64_t))v7[2];
  v38(v14, v9, v6);
  StaticDimension.init(_:scaledLike:)(v46, 5.0);
  v15 = (void (*)(char *, uint64_t))v7[1];
  v15(v9, v6);
  v34 = &v0[OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_scalableHeight];
  v35 = v15;
  v36 = v11;
  v12(v9, v11, v10);
  v16 = v39;
  ((void (*)(char *, _QWORD, uint64_t))v13)(v9, v39, v6);
  v47 = v6;
  v48 = &protocol witness table for FontSource;
  v17 = sub_1000117C0(v46);
  v18 = v38;
  v38(v17, v9, v6);
  StaticDimension.init(_:scaledLike:)(v46, 17.0);
  v15(v9, v6);
  v34 = &v0[OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_scalableHorizontalPadding];
  v40 = v0;
  v19 = v37;
  v20 = v12;
  v12(v9, v11, v37);
  v21 = (void (*)(char *, uint64_t, uint64_t))v13;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v9, v16, v6);
  v47 = v6;
  v48 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(v46);
  v23 = v18;
  v18(v22, v9, v6);
  StaticDimension.init(_:scaledLike:)(v46, 3.0);
  v24 = v35;
  v35(v9, v6);
  v25 = v36;
  v20(v9, v36, v19);
  v21(v9, v16, v6);
  v47 = v6;
  v48 = &protocol witness table for FontSource;
  v26 = sub_1000117C0(v46);
  v23(v26, v9, v6);
  StaticDimension.init(_:scaledLike:)(v46, 1.0);
  v24(v9, v6);
  v27 = OBJC_IVAR____TtC22SubscribePageExtension18AgeRatingBadgeView_ageLabel;
  v28 = v42;
  v20(v42, v25, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v28, 0, 1, v19);
  v29 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v45, enum case for DirectionalTextAlignment.none(_:), v44);
  v30 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v31 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v28, 2, 0, 1, 0, v29, 0, 0);
  v32 = v40;
  *(_QWORD *)&v40[v27] = v31;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AgeRatingBadgeView.swift", 47, 2, 72, 0);
  __break(1u);
}

uint64_t sub_1003F1588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MixedMediaLockupLayout.LockupPosition.top(_:);
  v3 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1003F15CC()
{
  return Lockup.shortEditorialDescription.getter();
}

uint64_t sub_1003F1658()
{
  return type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for ScreenshotsLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080D2B8;
  if (!qword_10080D2B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ScreenshotsLockupCollectionViewCell);
  return result;
}

uint64_t sub_1003F169C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 496);
}

uint64_t sub_1003F16D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = sub_10000DF3C(&qword_1007F8410);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_100802FE8);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000194E4(a1, (uint64_t)v8, &qword_100802FE8);
  v9 = sub_10000DF3C(&qword_100802FF0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100011088((uint64_t)v8, &qword_100802FE8);
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
  }
  else
  {
    SnapshotUpdate.contentSnapshot.getter(v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = ModelMappedDiffableDataSourceContentSnapshot.reloadedItems.getter(v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *((_QWORD *)&v14 + 1) = sub_10000DF3C(&qword_100803100);
    v15 = sub_100010F98(&qword_100803108, &qword_100803100, (const char *)&protocol conformance descriptor for Set<A>);
    *(_QWORD *)&v13 = v11;
  }
  result = ComponentHeightCache.invalidate(items:)(&v13);
  if (*((_QWORD *)&v14 + 1))
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v13);
  return result;
}

void sub_1003F1888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *Strong;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  __n128 v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  double v39;
  char v40;
  double v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  double *v51;
  Swift::String v52;
  Class isa;
  NSString v54;
  id v55;
  __n128 v56;
  char *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  id v65;
  Swift::OpaquePointer v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  id v79;
  _QWORD aBlock[5];
  uint64_t v81;
  UIImage_optional v82;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  __chkstk_darwin(v2);
  v75 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v67 - v9;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v12 = Strong;
    v13 = objc_msgSend(Strong, "view");

    v74 = v13;
    if (v13)
    {
      if ((sub_1002D533C() & 1) != 0 && !*(_QWORD *)(v1 + 24))
      {
        v69 = v7;
        v24 = objc_msgSend(v74, "window");
        if (v24
          && (v25 = v24,
              v26 = objc_msgSend(v24, "windowScene"),
              v25,
              v26))
        {
          v27 = objc_msgSend(v26, "screen");

          objc_msgSend(v27, "bounds");
          v29 = v28;
          v31 = v30;

          if (v29 <= v31)
            v29 = v31;
        }
        else
        {
          objc_msgSend(v74, "bounds");
          if (v32 > v33)
            v29 = v32;
          else
            v29 = v33;
        }
        v71 = v5;
        if (qword_1007F2010 != -1)
          swift_once(&qword_1007F2010, sub_1003F26C4);
        v70 = v10;
        v34 = off_10080D2C8;
        aBlock[0] = _swiftEmptyArrayStorage;
        v35 = *((_QWORD *)off_10080D2C8 + 2);
        if (v35)
        {
          v68 = v4;
          v73 = v1;
          swift_bridgeObjectRetain_n(off_10080D2C8, 2);
          v36 = 0;
          v72 = v34;
          do
          {
            v38 = &v34[v36];
            v39 = *(double *)&v34[v36 + 48];
            v40 = v34[v36 + 64];
            v41 = v39;
            if (v40)
              v41 = v29;
            if (v41 <= v29)
            {
              v78 = v38[66];
              v42 = v38[65];
              v43 = *((_QWORD *)v38 + 7);
              v45 = *((_QWORD *)v38 + 4);
              v44 = *((_QWORD *)v38 + 5);
              v79 = (id)sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
              v46 = swift_allocObject(&unk_10073E410, 24, 7);
              swift_weakInit(v46 + 16);
              v47 = swift_allocObject(&unk_10073E460, 59, 7);
              *(_QWORD *)(v47 + 16) = v46;
              *(_QWORD *)(v47 + 24) = v45;
              *(_QWORD *)(v47 + 32) = v44;
              *(double *)(v47 + 40) = v39;
              *(_QWORD *)(v47 + 48) = v43;
              *(_BYTE *)(v47 + 56) = v40;
              *(_BYTE *)(v47 + 57) = v42;
              *(_BYTE *)(v47 + 58) = v78;
              swift_bridgeObjectRetain_n(v44, 2);
              v48 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v45, v44, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003F38B4, v47);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
              v50 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              v49 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v50 >= v49 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
              v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
              specialized Array._endMutation()(v37);
              v34 = v72;
            }
            v36 += 40;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease(v34);
          v51 = (double *)aBlock[0];
          v1 = v73;
          v4 = v68;
        }
        else
        {
          swift_bridgeObjectRetain(off_10080D2C8);
          v51 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v34);
        sub_100019574(0, &qword_1007F7A18, UIMenu_ptr);
        v52._countAndFlagsBits = 0xD000000000000011;
        v52._object = (void *)0x800000010064A220;
        v82.value.super.isa = 0;
        v82.is_nil = 0;
        isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v52, (Swift::String_optional)0, v82, (UIMenuIdentifier_optional)32, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v51, v66).super.super.isa;
        v79 = isa;
        v10 = v70;
        static UIButton.Configuration.filled()();
        UIButton.Configuration.title.setter(0xD000000000000011, 0x800000010064A220);
        v54 = String._bridgeToObjectiveC()();
        v55 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v54);

        UIButton.Configuration.image.setter(v55);
        UIButton.Configuration.imagePadding.setter(8.0);
        v56 = UIButton.Configuration.imagePlacement.setter(2);
        v57 = v75;
        (*(void (**)(char *, _QWORD, uint64_t, __n128))(v76 + 104))(v75, enum case for UIButton.Configuration.CornerStyle.large(_:), v77, v56);
        UIButton.Configuration.cornerStyle.setter(v57);
        v58 = (void *)objc_opt_self(UIColor);
        v59 = objc_msgSend(v58, "whiteColor", UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v58, "systemBlueColor")).n128_f64[0]);
        UIButton.Configuration.baseForegroundColor.setter(v59);
        v60 = swift_allocObject(&unk_10073E410, 24, 7);
        swift_weakInit(v60 + 16);
        sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
        v5 = v71;
        v7 = v69;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v10, v4);
        v61 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
        objc_msgSend(v61, "setMenu:", isa);
        objc_msgSend(v61, "setShowsMenuAsPrimaryAction:", 1);
        aBlock[4] = sub_1003F3868;
        v81 = v60;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10005553C;
        aBlock[3] = &unk_10073E428;
        v62 = _Block_copy(aBlock);
        v63 = v81;
        swift_retain(v60);
        objc_msgSend(v61, "setConfigurationUpdateHandler:", v62, swift_release(v63).n128_f64[0]);
        _Block_release(v62);
        v64 = *(void **)(v1 + 24);
        *(_QWORD *)(v1 + 24) = v61;
        v65 = v61;

        sub_1003F2BA8();
        swift_release(v60);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        if ((sub_1002D5358() & 1) != 0)
        {
LABEL_6:
          if (!*(_QWORD *)(v1 + 32))
          {
            static UIButton.Configuration.filled()();
            UIButton.Configuration.title.setter(0x6143207261656C43, 0xEC00000073656863);
            v14 = String._bridgeToObjectiveC()();
            v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

            UIButton.Configuration.image.setter(v15);
            UIButton.Configuration.imagePadding.setter(8.0);
            v16 = UIButton.Configuration.imagePlacement.setter(2);
            v17 = v75;
            (*(void (**)(char *, _QWORD, uint64_t, __n128))(v76 + 104))(v75, enum case for UIButton.Configuration.CornerStyle.large(_:), v77, v16);
            UIButton.Configuration.cornerStyle.setter(v17);
            v18 = (void *)objc_opt_self(UIColor);
            v19 = objc_msgSend(v18, "whiteColor", UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v18, "systemRedColor")).n128_f64[0]);
            UIButton.Configuration.baseForegroundColor.setter(v19);
            sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
            sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
            v20 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100052F7C, 0);
            v21 = (void *)UIButton.init(configuration:primaryAction:)(v7, v20);
            v22 = *(void **)(v1 + 32);
            *(_QWORD *)(v1 + 32) = v21;
            v23 = v21;

            sub_1003F2D70();
            (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
            return;
          }
        }
      }
      else if ((sub_1002D5358() & 1) != 0)
      {
        goto LABEL_6;
      }

    }
  }
}

void sub_1003F20D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  __objc2_meth_list **p_base_meths;
  void *v9;
  __objc2_meth_list **v10;
  char **v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double MaxY;
  double v29;
  double v30;
  uint64_t v31;
  id v32;
  void *v33;
  double v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  void *v43;
  __objc2_meth_list **v44;
  id v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  void *v54;
  id v55;
  double MinY;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  double v72;
  __int128 v73;
  id v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;

  v1 = v0;
  v2 = v0 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v4 = Strong;
    v74 = objc_msgSend(Strong, "view");

    if (v74)
    {
      v5 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      if (!v5)
        goto LABEL_24;
      v6 = v5;
      v7 = objc_msgSend(v5, "traitCollection");

      if (!v7)
        goto LABEL_24;
      p_base_meths = &TodayCardChinLockupListView.base_meths;
      v9 = *(void **)(v1 + 24);
      v10 = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
      v11 = &selRef_textAlignment;
      if (v9)
      {
        v12 = v9;
        objc_msgSend(v74, "bounds");
        objc_msgSend(v12, "sizeThatFits:", v13, v14);
        v16 = v15;
        v18 = v17;
        v19 = v12;
        objc_msgSend(v74, "bounds");
        v20 = CGRectGetMaxX(v75) - v16;
        if (qword_1007F2A28 != -1)
          swift_once(&qword_1007F2A28, sub_10042D148);
        v21 = type metadata accessor for StaticDimension(0);
        sub_1000117A8(v21, (uint64_t)qword_1008561C8);
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v22 = sub_10000DF3C(&qword_1007F5840);
        v23 = swift_allocObject(v22, 40, 7);
        v73 = xmmword_10066FE60;
        *(_OWORD *)(v23 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v23 + 32) = v7;
        v24 = v7;
        v25 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v23);
        v26 = dispatch thunk of AnyDimension.rawValue(in:)(v25, v21, &protocol witness table for StaticDimension);

        v27 = v20 - v26;
        p_base_meths = &TodayCardChinLockupListView.base_meths;
        objc_msgSend(v74, "bounds");
        MaxY = CGRectGetMaxY(v76);
        objc_msgSend(v74, "safeAreaInsets");
        v30 = MaxY - v29 - v18;
        v31 = swift_allocObject(v22, 40, 7);
        *(_OWORD *)(v31 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v31 + 32) = v24;
        v32 = v24;
        v33 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v31);
        v34 = dispatch thunk of AnyDimension.rawValue(in:)(v33, v21, &protocol witness table for StaticDimension);

        v10 = &TodayCardChinLockupListView.base_meths;
        objc_msgSend(v19, "setFrame:", v27, v30 - v34, v16, v18);

        v11 = &selRef_textAlignment;
        objc_msgSend(v74, "bringSubviewToFront:", v19);

      }
      v35 = *(void **)(v1 + 32);
      if (!v35)
      {
LABEL_23:

LABEL_24:
        return;
      }
      v36 = v35;
      objc_msgSend(v74, "bounds");
      objc_msgSend(v36, "sizeThatFits:", v37, v38);
      v40 = v39;
      v42 = v41;
      v43 = *(void **)(v1 + 24);
      if (v43)
      {
        v44 = v10;
        v45 = v43;
        objc_msgSend(v45, "frame");
        v46 = CGRectGetMinX(v77) - v40;
        if (qword_1007F2A18 != -1)
          swift_once(&qword_1007F2A18, sub_10042D128);
        v47 = type metadata accessor for StaticDimension(0);
        sub_1000117A8(v47, (uint64_t)qword_100856198);
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v48 = sub_10000DF3C(&qword_1007F5840);
        v49 = swift_allocObject(v48, 40, 7);
        *(_OWORD *)(v49 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v49 + 32) = v7;
        v50 = v7;
        v51 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v49);
        v52 = dispatch thunk of AnyDimension.rawValue(in:)(v51, v47, &protocol witness table for StaticDimension);

        v53 = v46 - v52;
        v10 = v44;
        p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
        v54 = *(void **)(v1 + 24);
        if (v54)
        {
LABEL_14:
          v55 = v54;
          objc_msgSend(v55, "frame");
          MinY = CGRectGetMinY(v78);

LABEL_22:
          objc_msgSend(v36, (SEL)v10[390], v53, MinY, v40, v42, v73);
          objc_msgSend(v74, v11[164], v36);

          goto LABEL_23;
        }
      }
      else
      {
        objc_msgSend(v74, "bounds");
        v57 = CGRectGetMaxX(v79) - v40;
        if (qword_1007F2A28 != -1)
          swift_once(&qword_1007F2A28, sub_10042D148);
        v58 = type metadata accessor for StaticDimension(0);
        sub_1000117A8(v58, (uint64_t)qword_1008561C8);
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v59 = sub_10000DF3C(&qword_1007F5840);
        v60 = swift_allocObject(v59, 40, 7);
        *(_OWORD *)(v60 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v60 + 32) = v7;
        v61 = v7;
        v62 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v60);
        v63 = dispatch thunk of AnyDimension.rawValue(in:)(v62, v58, &protocol witness table for StaticDimension);

        v53 = v57 - v63;
        v54 = *(void **)(v1 + 24);
        if (v54)
          goto LABEL_14;
      }
      objc_msgSend(v74, (SEL)p_base_meths[226], v73);
      v64 = CGRectGetMaxY(v80);
      objc_msgSend(v74, "safeAreaInsets");
      v66 = v64 - v65 - v42;
      if (qword_1007F2A28 != -1)
        swift_once(&qword_1007F2A28, sub_10042D148);
      v67 = type metadata accessor for StaticDimension(0);
      sub_1000117A8(v67, (uint64_t)qword_1008561C8);
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v68 = sub_10000DF3C(&qword_1007F5840);
      v69 = swift_allocObject(v68, 40, 7);
      *(_OWORD *)(v69 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v69 + 32) = v7;
      v70 = v7;
      v71 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v69);
      v72 = dispatch thunk of AnyDimension.rawValue(in:)(v71, v67, &protocol witness table for StaticDimension);

      MinY = v66 - v72;
      goto LABEL_22;
    }
  }
}

