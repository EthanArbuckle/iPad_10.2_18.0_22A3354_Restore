uint64_t sub_1002CCB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *);
  uint64_t v27;
  uint64_t updated;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100803090);
  __chkstk_darwin(v2);
  v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_100803098);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_100806058);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_100802FF8);
  v50 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1008030A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v12);
  v16 = sub_10000DF3C(&qword_1007F83E8);
  v17 = sub_100010F98(&qword_1008030B0, &qword_1007F83E8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v16, v17);
  v18 = sub_10000DF3C(&qword_100806060);
  EventEmitter.addObserver<A>(on:target:method:)(v51, v1, sub_1002CEB0C, 0, v16, v18, v17);
  swift_release(v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v19 = (char *)v8;
  v20 = v1;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v22 = DiffablePagePresenter.onPerformAction.getter(v21);
  v23 = sub_10000DF3C(&qword_100803008);
  v24 = sub_100010F98((unint64_t *)&qword_100803010, &qword_100803008, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
  v25 = v43;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE6F8, 0, v23, v18, v24);
  swift_release(v22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v26 = *(uint64_t (**)(char *, char *))(v50 + 8);
  v43 = v19;
  v27 = v26(v25, v19);
  updated = TimedMetricsPagePresenter.onUpdatePhaseChanged.getter(v27);
  v29 = sub_10000DF3C(&qword_100806068);
  v30 = sub_100010F98(&qword_100806070, &qword_100806068, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v29, v30);
  v31 = v42;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CECB0, 0, v29, v18, v30);
  swift_release(updated);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  v33 = DiffablePagePresenter.onPaginationStateChanged.getter(v32);
  v34 = sub_10000DF3C(&qword_1008030B8);
  v35 = sub_100010F98(&qword_1008030C0, &qword_1008030B8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v34, v35);
  v36 = v46;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CEEF8, 0, v34, v18, v35);
  swift_release(v33);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
  v37 = *(_QWORD *)(v20 + qword_100802E58);
  if (v37)
  {
    v38 = *(_QWORD *)(v37 + 24);
    swift_retain(v38);
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
    v39 = (uint64_t)v49;
    EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE770, 0, v23, v18, v24);
    swift_release(v38);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
    v40 = 0;
  }
  else
  {
    v40 = 1;
    v39 = (uint64_t)v49;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v50 + 56))(v39, v40, 1, v43);
  return sub_100011088(v39, &qword_100803090);
}

uint64_t sub_1002CD00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *);
  uint64_t v27;
  uint64_t updated;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100803090);
  __chkstk_darwin(v2);
  v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_100803098);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_100806040);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_100802FF8);
  v50 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1008030A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v12);
  v16 = sub_10000DF3C(&qword_1007F83E8);
  v17 = sub_100010F98(&qword_1008030B0, &qword_1007F83E8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v16, v17);
  v18 = sub_10000DF3C(&qword_1007F9EC8);
  EventEmitter.addObserver<A>(on:target:method:)(v51, v1, sub_1002CEB60, 0, v16, v18, v17);
  swift_release(v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v19 = (char *)v8;
  v20 = v1;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v22 = DiffablePagePresenter.onPerformAction.getter(v21);
  v23 = sub_10000DF3C(&qword_100803008);
  v24 = sub_100010F98((unint64_t *)&qword_100803010, &qword_100803008, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
  v25 = v43;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE7E8, 0, v23, v18, v24);
  swift_release(v22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v26 = *(uint64_t (**)(char *, char *))(v50 + 8);
  v43 = v19;
  v27 = v26(v25, v19);
  updated = TimedMetricsPagePresenter.onUpdatePhaseChanged.getter(v27);
  v29 = sub_10000DF3C(&qword_100806048);
  v30 = sub_100010F98(&qword_100806050, &qword_100806048, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v29, v30);
  v31 = v42;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CED04, 0, v29, v18, v30);
  swift_release(updated);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  v33 = DiffablePagePresenter.onPaginationStateChanged.getter(v32);
  v34 = sub_10000DF3C(&qword_1008030B8);
  v35 = sub_100010F98(&qword_1008030C0, &qword_1008030B8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v34, v35);
  v36 = v46;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CEF4C, 0, v34, v18, v35);
  swift_release(v33);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
  v37 = *(_QWORD *)(v20 + qword_100802E58);
  if (v37)
  {
    v38 = *(_QWORD *)(v37 + 24);
    swift_retain(v38);
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
    v39 = (uint64_t)v49;
    EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE860, 0, v23, v18, v24);
    swift_release(v38);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
    v40 = 0;
  }
  else
  {
    v40 = 1;
    v39 = (uint64_t)v49;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v50 + 56))(v39, v40, 1, v43);
  return sub_100011088(v39, &qword_100803090);
}

uint64_t sub_1002CD4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *);
  uint64_t v27;
  uint64_t updated;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100803090);
  __chkstk_darwin(v2);
  v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_100803098);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_100805FE8);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_100802FF8);
  v50 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1008030A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v12);
  v16 = sub_10000DF3C(&qword_1007F83E8);
  v17 = sub_100010F98(&qword_1008030B0, &qword_1007F83E8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v16, v17);
  v18 = sub_10000DF3C(&qword_100805FF0);
  EventEmitter.addObserver<A>(on:target:method:)(v51, v1, sub_1002CEBB4, 0, v16, v18, v17);
  swift_release(v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v19 = (char *)v8;
  v20 = v1;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v22 = DiffablePagePresenter.onPerformAction.getter(v21);
  v23 = sub_10000DF3C(&qword_100803008);
  v24 = sub_100010F98((unint64_t *)&qword_100803010, &qword_100803008, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
  v25 = v43;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE8D8, 0, v23, v18, v24);
  swift_release(v22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v26 = *(uint64_t (**)(char *, char *))(v50 + 8);
  v43 = v19;
  v27 = v26(v25, v19);
  updated = TimedMetricsPagePresenter.onUpdatePhaseChanged.getter(v27);
  v29 = sub_10000DF3C(&qword_100805FF8);
  v30 = sub_100010F98(&qword_100806000, &qword_100805FF8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v29, v30);
  v31 = v42;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CED58, 0, v29, v18, v30);
  swift_release(updated);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  v33 = DiffablePagePresenter.onPaginationStateChanged.getter(v32);
  v34 = sub_10000DF3C(&qword_1008030B8);
  v35 = sub_100010F98(&qword_1008030C0, &qword_1008030B8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v34, v35);
  v36 = v46;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CEFA0, 0, v34, v18, v35);
  swift_release(v33);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
  v37 = *(_QWORD *)(v20 + qword_100802E58);
  if (v37)
  {
    v38 = *(_QWORD *)(v37 + 24);
    swift_retain(v38);
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
    v39 = (uint64_t)v49;
    EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE950, 0, v23, v18, v24);
    swift_release(v38);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
    v40 = 0;
  }
  else
  {
    v40 = 1;
    v39 = (uint64_t)v49;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v50 + 56))(v39, v40, 1, v43);
  return sub_100011088(v39, &qword_100803090);
}

uint64_t sub_1002CD9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *);
  uint64_t v27;
  uint64_t updated;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100803090);
  __chkstk_darwin(v2);
  v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_100803098);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_100806018);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_100802FF8);
  v50 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1008030A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v12);
  v16 = sub_10000DF3C(&qword_1007F83E8);
  v17 = sub_100010F98(&qword_1008030B0, &qword_1007F83E8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v16, v17);
  v18 = sub_10000DF3C(&qword_100806020);
  EventEmitter.addObserver<A>(on:target:method:)(v51, v1, sub_1002CEC08, 0, v16, v18, v17);
  swift_release(v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v19 = (char *)v8;
  v20 = v1;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v22 = DiffablePagePresenter.onPerformAction.getter(v21);
  v23 = sub_10000DF3C(&qword_100803008);
  v24 = sub_100010F98((unint64_t *)&qword_100803010, &qword_100803008, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
  v25 = v43;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CE9C8, 0, v23, v18, v24);
  swift_release(v22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v26 = *(uint64_t (**)(char *, char *))(v50 + 8);
  v43 = v19;
  v27 = v26(v25, v19);
  updated = TimedMetricsPagePresenter.onUpdatePhaseChanged.getter(v27);
  v29 = sub_10000DF3C(&qword_100806028);
  v30 = sub_100010F98(&qword_100806030, &qword_100806028, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v29, v30);
  v31 = v42;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CEDAC, 0, v29, v18, v30);
  swift_release(updated);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  v33 = DiffablePagePresenter.onPaginationStateChanged.getter(v32);
  v34 = sub_10000DF3C(&qword_1008030B8);
  v35 = sub_100010F98(&qword_1008030C0, &qword_1008030B8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v34, v35);
  v36 = v46;
  EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CEFF4, 0, v34, v18, v35);
  swift_release(v33);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
  v37 = *(_QWORD *)(v20 + qword_100802E58);
  if (v37)
  {
    v38 = *(_QWORD *)(v37 + 24);
    swift_retain(v38);
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v51, v23, v24);
    v39 = (uint64_t)v49;
    EventEmitter.addObserver<A>(on:target:method:)(v51, v20, sub_1002CEA40, 0, v23, v18, v24);
    swift_release(v38);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
    v40 = 0;
  }
  else
  {
    v40 = 1;
    v39 = (uint64_t)v49;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v50 + 56))(v39, v40, 1, v43);
  return sub_100011088(v39, &qword_100803090);
}

id sub_1002CDE7C(uint64_t a1, void (*a2)(char *), uint64_t *a3, unint64_t *a4)
{
  char *v4;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id *v19;
  uint64_t *v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id result;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];

  v8 = v4;
  v10 = sub_10000DF3C(&qword_1007F8410);
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_100802FE8);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_100802FF0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  a2(v15);
  sub_100011088((uint64_t)v15, &qword_100802FE8);
  v18 = SnapshotUpdate.useReloadData.getter(v16);
  v19 = (id *)&v8[qword_100802E50];
  if ((v18 & 1) != 0)
  {
    swift_beginAccess(&v8[qword_100802E50], v38, 0, 0);
    v20 = a3;
    if (!*v19)
      goto LABEL_7;
    v21 = *v19;
    SnapshotUpdate.contentSnapshot.getter(v16);
    dispatch thunk of ModelMappedDiffableDataSource.applySnapshotUsingReloadData(_:animatingDifferences:completion:)(v12, 1, 0, 0);
  }
  else
  {
    swift_beginAccess(&v8[qword_100802E50], v38, 0, 0);
    v20 = a3;
    if (!*v19)
      goto LABEL_7;
    v21 = *v19;
    SnapshotUpdate.contentSnapshot.getter(v16);
    v22 = SnapshotUpdate.animated.getter(v16);
    dispatch thunk of ModelMappedDiffableDataSource.apply(_:animatingDifferences:completion:)(v12, v22 & 1, 0, 0);
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
LABEL_7:
  v23 = *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  v24 = sub_10000DF3C(v20);
  v25 = sub_100010F98(a4, v20, byte_10067F0C0);
  dispatch thunk of VisibleShelfSupplementaryCollectionElementsObserver.reconfigureVisibleShelfSupplementaries<A>(in:asPartOf:)(v8, v23, v24, v25);
  result = objc_msgSend(v8, "collectionView");
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v27 = result;
  v28 = objc_msgSend(result, "window");

  if (!v28)
  {
LABEL_11:
    result = objc_msgSend(v8, "view");
    if (result)
    {
      v30 = result;
      objc_msgSend(result, "bounds");
      v32 = v31;
      v34 = v33;

      return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(v24, v25, v32, v34);
    }
    goto LABEL_14;
  }
  result = objc_msgSend(v8, "collectionView");
  if (result)
  {
    v29 = result;
    dispatch thunk of CompoundScrollObserver.didScroll(in:)();

    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1002CE1AC(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, id *), void (*a4)(uint64_t *__return_ptr, id *))
{
  void (*v4)(uint64_t *__return_ptr, id *);
  void (*v6)(uint64_t *__return_ptr, id *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v31)(uint64_t *__return_ptr, id *);
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  id v42;
  void *v43;
  Class isa;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v53)(uint64_t *__return_ptr, id *);
  void (*v54)(uint64_t *__return_ptr, id *);
  __n128 v55;
  void (*v56)(uint64_t *__return_ptr, id *);
  void (*v57)(uint64_t *__return_ptr, id *);
  uint64_t v58;
  id v59[2];
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v56 = a4;
  v57 = a1;
  v6 = v4;
  v8 = type metadata accessor for ActionRunner.Origin(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a2;
  sub_1000194E4(a2, (uint64_t)&v60, &qword_1007F6E90);
  if (v63)
  {
    v19 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    if ((swift_dynamicCast(v59, &v60, (char *)&type metadata for Any + 8, v19, 6) & 1) != 0)
    {
      v20 = v59[0];
      v21 = objc_msgSend(v20, "bounds", v56);
      v65 = 1;
      v68 = 15;
      v60 = v20;
      v61 = v22;
      v62 = v23;
      v63 = v24;
      v64 = v25;
      __asm { FMOV            V0.2D, #10.0 }
      v66 = _Q0;
      v67 = _Q0;
      __chkstk_darwin(v21);
      v31 = v57;
      *(&v56 - 4) = v6;
      *(&v56 - 3) = v31;
      *(&v56 - 2) = (void (*)(uint64_t *__return_ptr, id *))v58;
      sub_10025D244((uint64_t)&v60, a3, (uint64_t)(&v56 - 6));

      return;
    }
  }
  else
  {
    sub_100011088((uint64_t)&v60, &qword_1007F6E90);
  }
  v32 = objc_msgSend(v6, "collectionView", v56);
  if (!v32)
  {
    __break(1u);
    goto LABEL_21;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "indexPathsForSelectedItems");

  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_12:
    sub_100011088((uint64_t)v14, &qword_1007F5520);
    goto LABEL_13;
  }
  v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v15);

  if (*(_QWORD *)(v35 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, v35 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    v36 = 0;
  }
  else
  {
    v36 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v36, 1, v15);
  v37 = swift_bridgeObjectRelease(v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v37) == 1)
    goto LABEL_12;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v42 = objc_msgSend(v6, "collectionView");
  if (!v42)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v43 = v42;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v45 = objc_msgSend(v43, "cellForItemAtIndexPath:", isa);

  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v46, "bounds");
    v60 = v45;
    v65 = 1;
    v68 = 15;
    v61 = v48;
    v62 = v49;
    v63 = v50;
    v64 = v51;
    __asm { FMOV            V0.2D, #10.0 }
    v66 = _Q0;
    v67 = _Q0;
    __chkstk_darwin(v47);
    v53 = v56;
    v54 = v57;
    *(&v56 - 4) = v6;
    *(&v56 - 3) = v54;
    *(&v56 - 2) = (void (*)(uint64_t *__return_ptr, id *))v58;
    sub_10025D244((uint64_t)&v60, v53, (uint64_t)(&v56 - 6));

    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v55);
    return;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_13:
  v38 = UIResponder.nearestActionRunner.getter();
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for ActionRunner.Origin.userInitiated(_:), v8);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v57, v58, v11, v40);
    v41 = swift_release(v39);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v41);
  }
}

uint64_t (*sub_1002CE608(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735C48, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735C70, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D4458;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE680(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735BA8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735BD0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D46E0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE6F8(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735B30, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735B58, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D4458;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE770(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735A90, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735AB8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D46E0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE7E8(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735A18, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735A40, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D45C0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE860(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735978, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_1007359A0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D46E4;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE8D8(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_1007356D0, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_1007356F8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D4458;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CE950(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735630, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735658, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D46E0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_100257BDC;
}

uint64_t (*sub_1002CE9C8(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735900, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735928, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D4458;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

uint64_t (*sub_1002CEA40(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735860, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100735888, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D46E0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1002D47C8;
}

id (*sub_1002CEAB8(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735C98, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D46A8;
}

id (*sub_1002CEB0C(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735B80, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4648;
}

id (*sub_1002CEB60(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735A68, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D45E8;
}

id (*sub_1002CEBB4(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735720, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4480;
}

id (*sub_1002CEC08(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735950, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4518;
}

uint64_t (*sub_1002CEC5C(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735C20, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4454;
}

uint64_t (*sub_1002CECB0(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735B08, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4454;
}

uint64_t (*sub_1002CED04(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007359F0, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4454;
}

uint64_t (*sub_1002CED58(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007356A8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4454;
}

uint64_t (*sub_1002CEDAC(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007358D8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4454;
}

id sub_1002CEE00(int a1, id a2, uint64_t *a3, unint64_t *a4)
{
  id result;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  result = objc_msgSend(a2, "view");
  if (result)
  {
    v7 = result;
    objc_msgSend(result, "bounds");
    v9 = v8;
    v11 = v10;

    v12 = sub_10000DF3C(a3);
    v13 = sub_100010F98(a4, a3, byte_10067F0C0);
    return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(v12, v13, v9, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id (*sub_1002CEEA4(void *a1))(int a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735BF8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4680;
}

id (*sub_1002CEEF8(void *a1))(int a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735AE0, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4620;
}

id (*sub_1002CEF4C(void *a1))(int a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007359C8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4598;
}

id (*sub_1002CEFA0(void *a1))(int a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735680, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D442C;
}

id (*sub_1002CEFF4(void *a1))(int a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007358B0, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D44F0;
}

uint64_t sub_1002CF048(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, id *), void (*a5)(uint64_t *__return_ptr, id *))
{
  void (*v8)(uint64_t *__return_ptr, id *);
  uint64_t v10;
  _QWORD v11[5];
  _BYTE v12[32];
  uint64_t v13;
  _BYTE v14[32];

  v13 = a1;
  sub_1000194E4(a2, (uint64_t)v14, &qword_1007F6E90);
  v11[4] = a1;
  sub_1000194E4((uint64_t)v14, (uint64_t)v12, &qword_1007F6E90);
  v10 = a1;
  sub_1000194E4((uint64_t)v12, (uint64_t)v11, &qword_1007F6E90);
  v8 = (void (*)(uint64_t *__return_ptr, id *))swift_retain_n(a1, 2);
  sub_1002CE1AC(v8, (uint64_t)v11, a4, a5);
  sub_100011088((uint64_t)&v10, (uint64_t *)&unk_100803030);
  sub_100011088((uint64_t)&v13, (uint64_t *)&unk_100803030);
  return sub_100011088((uint64_t)v12, &qword_1007F6E90);
}

char *sub_1002CF134(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v25;

  *(_QWORD *)&v2[qword_100805920] = 0x4034000000000000;
  v2[qword_100805928] = 0;
  *(_QWORD *)&v2[qword_100805930] = 0;
  v2[qword_100853928] = 0;
  v2[qword_100853930] = 0;
  v2[qword_100853938] = 0;
  v2[qword_100853940] = 0;
  v2[qword_100853948] = 0;
  v5 = qword_100853950;
  v6 = type metadata accessor for ProductTitleView();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[qword_100853958] = 0;
  v8[qword_100805940] = 0;
  *(_QWORD *)&v8[qword_100805950] = 0;
  *(_QWORD *)&v8[qword_100805958] = &_swiftEmptySetSingleton;
  v9 = type metadata accessor for ASKBagContract(0);
  v10 = BaseObjectGraph.inject<A>(_:)(&v25, v9, v9);
  v11 = v25;
  v8[qword_100805938] = ASKBagContract.refreshArcadeEntitlementsOnLoadingArcadeView.getter(v10) & 1;
  v12 = type metadata accessor for AdvertRotationControllerProvider(0);
  BaseObjectGraph.inject<A>(_:)(&v25, v12, v12);
  *(_QWORD *)&v8[qword_100805948] = v25;

  swift_retain(a1);
  swift_retain(a2);
  v13 = (char *)sub_1005CA674(a1, a2);
  v14 = qword_100852E90;
  v15 = *(void **)&v13[qword_100852E90];
  v16 = v13;
  v17 = v15;
  v18 = sub_1002CF38C();
  v19 = sub_10000E99C(&qword_100805F30, (uint64_t (*)(uint64_t))type metadata accessor for ProductTopLockupCollectionElementsObserver, (uint64_t)&unk_10069DF94);
  CompoundScrollObserver.addChild(_:)(v18, v19);

  swift_release(v18);
  v20 = *(void **)&v13[v14];
  v21 = *(_QWORD *)&v16[qword_100805948];
  v22 = v20;
  swift_retain(v21);
  CompoundScrollObserver.addChild(_:)(v23, &protocol witness table for AdvertRotationControllerProvider);
  swift_release(v11);

  swift_release(v21);
  swift_release(a1);
  swift_release(a2);
  return v16;
}

uint64_t sub_1002CF38C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;

  v1 = qword_100805950;
  v2 = *(_QWORD *)&v0[qword_100805950];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[qword_100805950];
  }
  else
  {
    v4 = v0;
    v5 = *(_QWORD *)&v0[qword_100852E58];
    v6 = *(_QWORD *)&v0[qword_100852E68];
    v7 = type metadata accessor for ProductTopLockupCollectionElementsObserver();
    v3 = swift_allocObject(v7, 72, 7);
    swift_weakInit(v3 + 16, 0);
    swift_unknownObjectWeakInit(v3 + 24, 0);
    swift_unknownObjectWeakInit(v3 + 32, 0);
    *(_BYTE *)(v3 + 48) = 0;
    swift_unknownObjectWeakInit(v3 + 56, 0);
    *(_QWORD *)(v3 + 64) = 0;
    swift_weakAssign(v3 + 16, v5);
    swift_unknownObjectWeakAssign(v3 + 24, v4);
    v8 = type metadata accessor for ProductTopLockupIconFetcher(0);
    swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    swift_retain(v5);
    v9 = v4;
    v10 = swift_retain(v6);
    *(_QWORD *)(v3 + 40) = ProductTopLockupIconFetcher.init(artworkLoader:)(v10);
    swift_release(v5);

    v11 = *(_QWORD *)&v4[v1];
    *(_QWORD *)&v4[v1] = v3;
    swift_retain(v3);
    swift_release(v11);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_1002CF4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = qword_100805930;
  v2 = *(_QWORD *)(v0 + qword_100805930);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + qword_100805930);
  }
  else
  {
    v3 = sub_1002CF530();
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v4);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_1002CF530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for UberedPageScrollObserver();
  v2 = swift_allocObject(v1, 89, 7);
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16);
  *(_QWORD *)(v2 + 80) = 0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_BYTE *)(v2 + 88) = 1;
  *(_QWORD *)(v2 + 24) = &off_100735418;
  swift_unknownObjectWeakAssign(v3, v0);
  v4 = swift_allocObject(&unk_100735478, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = sub_1002D4244;
  *(_QWORD *)(v2 + 48) = v4;
  sub_100019310(v5, v6);
  v7 = swift_allocObject(&unk_100735478, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = *(_QWORD *)(v2 + 56);
  v9 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 56) = sub_1002D424C;
  *(_QWORD *)(v2 + 64) = v7;
  sub_100019310(v8, v9);
  v10 = swift_allocObject(&unk_100735478, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = *(_QWORD *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 72) = sub_1002D4254;
  *(_QWORD *)(v2 + 80) = v10;
  sub_100019310(v11, v12);
  return v2;
}

void sub_1002CF64C(char a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  id v22;

  v2 = v1;
  v4 = objc_msgSend(v1, "navigationItem");
  v22 = objc_msgSend(v4, "titleView");

  if (!v22)
    return;
  v5 = type metadata accessor for UberNavigationBarTitleView();
  if (!swift_dynamicCastClass(v22, v5))
  {
    v17 = v22;
LABEL_19:

    return;
  }
  v6 = objc_msgSend(v2, "navigationController");
  if (!v6)
  {
LABEL_17:
    v16 = 1;
    goto LABEL_18;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "viewControllers");

  v9 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v18 = v10;
    else
      v18 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v10);
    if (v19)
      goto LABEL_6;
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    swift_bridgeObjectRelease(v10);
    goto LABEL_17;
  }
LABEL_6:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_9:
    v12 = v11;
    swift_bridgeObjectRelease(v10);
    v13 = v2;
    v14 = v12;
    v15 = static NSObject.== infix(_:_:)(v14, v13);

    v16 = v15 ^ 1;
LABEL_18:
    v20 = *((_BYTE *)v2 + qword_100853930) & v16;
    v21 = objc_msgSend(v2, "navigationController");
    sub_1002D93A4(v21, v20 & 1, a1 & 1);

    v17 = v21;
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_1002CF878(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_100852E78) = result;
  if ((result & 1) != 0)
    *(_BYTE *)(v1 + qword_100853938) = 1;
  return result;
}

void sub_1002CF8A0()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25[2];
  objc_super v26;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26.receiver = v1;
  v26.super_class = ObjectType;
  objc_msgSendSuper2(&v26, "viewDidLoad", v5);
  v8 = objc_msgSend(v1, "navigationItem");
  v9 = objc_msgSend(v8, "rightBarButtonItems");

  if (v9)
  {
    v10 = sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  }
  else
  {
    v11 = 0;
  }
  v12 = *(_QWORD *)&v1[qword_100853958];
  *(_QWORD *)&v1[qword_100853958] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(id *)&v1[qword_100852E90];
  v14 = sub_1002CF4D0();
  v15 = sub_10000E99C((unint64_t *)&qword_100806010, (uint64_t (*)(uint64_t))type metadata accessor for UberedPageScrollObserver, (uint64_t)"%1\v");
  CompoundScrollObserver.addChild(_:)(v14, v15);

  v16 = objc_msgSend(v1, "navigationItem", swift_release(v14).n128_f64[0]);
  objc_msgSend(v16, "setTitleView:", *(_QWORD *)&v1[qword_100853950]);

  v17 = objc_msgSend(v1, "collectionView");
  if (v17)
  {
    v18 = v17;
    memset(v25, 0, sizeof(v25));
    static AutomationSemantics.page(name:id:)(0x50746375646F7270, 0xEB00000000656761, v25);
    sub_100011088((uint64_t)v25, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v7);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v19 = objc_msgSend(v1, "collectionView");
    if (v19)
    {
      v20 = v19;
      v21 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
      v22 = swift_allocObject(v21, 48, 7);
      *(_OWORD *)(v22 + 16) = xmmword_10066FBA0;
      *(_QWORD *)(v22 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
      *(_QWORD *)(v22 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
      v23 = sub_100019574(0, &qword_100800840, UICollectionView_ptr);
      v24 = UIView.registerForTraitChanges<A>(_:handler:)(v22, sub_1002CFB68, 0, v23);

      swift_bridgeObjectRelease(v22);
      swift_unknownObjectRelease(v24);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1002CFB68(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, "collectionViewLayout");
  objc_msgSend(v2, "invalidateLayout");

  return objc_msgSend(a1, "reloadData");
}

void sub_1002CFBB8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1002CF8A0();

}

void sub_1002CFBEC(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for EntitlementRefeshCondition(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "viewWillAppear:", a1 & 1, v7);
  sub_1002CFD3C();
  if (v2[qword_100805938] == 1)
  {
    v10 = qword_100805940;
    if ((v2[qword_100805940] & 1) == 0)
    {
      v11 = type metadata accessor for ArcadeSubscriptionManager(0);
      v12 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph]
                     + qword_100854068);
      if (v12)
      {
        *v9 = 1;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for EntitlementRefeshCondition.ifCacheIsExpired(_:), v5);
        v13 = v12;
        v14 = ArcadeSubscriptionManager.updateStateFromEntitlements(refreshingCache:)(v9);
        swift_release(v14);

        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
        v2[v10] = 1;
      }
      else
      {
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v11);
        __break(1u);
      }
    }
  }
}

void sub_1002CFD3C()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void **aBlock;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  void *v22;
  uint64_t v23;

  if ((v0[qword_100853928] & 1) == 0)
  {
    v1 = objc_msgSend(v0, "navigationItem");
    v2 = objc_msgSend(v1, "titleView");

    if (v2)
    {
      v3 = type metadata accessor for UberNavigationBarTitleView();
      v4 = swift_dynamicCastClass(v2, v3);
      if (v4)
        *(_BYTE *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) = 0;

    }
  }
  sub_1002CF64C(0);
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController])
  {
    v5 = objc_msgSend(v0, "navigationController");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "navigationBar");

      if (v7)
      {

        v8 = sub_1002CF4D0();
        *(_BYTE *)(v8 + 88) = 1;
        v9 = objc_msgSend(v0, "transitionCoordinator", swift_release(v8).n128_f64[0]);
        if (v9)
        {
          v10 = v9;
          v11 = swift_allocObject(&unk_100735478, 24, 7);
          swift_unknownObjectWeakInit(v11 + 16);
          v22 = sub_1002D44B8;
          v23 = v11;
          aBlock = _NSConcreteStackBlock;
          v19 = 1107296256;
          v20 = sub_10033F618;
          v21 = &unk_100735800;
          v12 = _Block_copy(&aBlock);
          swift_release(v23);
          v13 = swift_allocObject(&unk_100735478, 24, 7);
          swift_unknownObjectWeakInit(v13 + 16);
          v22 = sub_1002D44E8;
          v23 = v13;
          aBlock = _NSConcreteStackBlock;
          v19 = 1107296256;
          v20 = sub_10033F618;
          v21 = &unk_100735828;
          v14 = _Block_copy(&aBlock);
          objc_msgSend(v10, "animateAlongsideTransition:completion:", v12, v14, swift_release(v23).n128_f64[0]);
          _Block_release(v14);
          _Block_release(v12);
          swift_unknownObjectRelease(v10);
        }
        else
        {
          v15 = sub_1002CF4D0();
          v16 = objc_msgSend(v0, "collectionView");
          if (v16)
          {
            v17 = v16;
            sub_100319094(v16);
            swift_release(v15);

          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
}

void sub_1002CFFD4(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1002CFBEC(a3);

}

void sub_1002D0014(void *a1, uint64_t a2)
{
  sub_1002D0550(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1002D0028(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "viewDidAppear:", a1 & 1);
  *((_BYTE *)v1 + qword_100853940) = 1;
  sub_1002D0114();
  v3 = objc_msgSend(v1, "navigationItem");
  v4 = objc_msgSend(v3, "titleView");

  if (v4)
  {
    v5 = type metadata accessor for UberNavigationBarTitleView();
    v6 = swift_dynamicCastClass(v4, v5);
    if (v6
      && (*(_BYTE *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) & 1) == 0)
    {
      *(_BYTE *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) = 1;
      sub_1002CF64C(1);
    }

  }
  AdvertRotationControllerProvider.viewControllerDidAppear()();
}

void sub_1002D0114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _BYTE v19[24];

  v1 = v0;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10000DF3C(&qword_1007F78F0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_BYTE *)(v0 + qword_100853940) == 1)
  {
    v10 = qword_100853948;
    if ((*(_BYTE *)(v0 + qword_100853948) & 1) == 0)
    {
      v11 = ProductDiffablePagePresenter.appPromotionDetailPageAction.getter(v7);
      if (v11)
      {
        v12 = v11;
        *(_BYTE *)(v1 + v10) = 1;
        v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
        v14 = v13 + qword_100854048;
        swift_beginAccess(v13 + qword_100854048, v19, 0, 0);
        sub_1000194E4(v14, (uint64_t)v4, (uint64_t *)&unk_1007F5140);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_100011088((uint64_t)v4, (uint64_t *)&unk_1007F5140);
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v5);
          __break(1u);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
          swift_retain(v12);
          v16 = sub_10008EB60(v15, v13, (uint64_t)v9);
          swift_release(v12);
          v17 = swift_release(v16);
          (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v17);
          swift_release(v12);
        }
      }
    }
  }
}

void sub_1002D02E8(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1002D0028(a3);

}

double sub_1002D0328()
{
  void *v0;
  id v1;
  double result;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;
  uint64_t v15;

  sub_1002CF64C(0);
  v1 = objc_msgSend(v0, "presentedViewController");

  if (!v1)
  {
    if (*((_BYTE *)v0 + qword_100853938) == 1)
    {
      v3 = sub_1002CF4D0();
      sub_100318FD8();
      *(_QWORD *)&result = swift_release(v3).n128_u64[0];
    }
    else
    {
      v4 = objc_msgSend(v0, "transitionCoordinator");
      v5 = sub_1002CF4D0();
      v6 = v5;
      if (v4)
      {
        v14 = sub_1002D44D8;
        v15 = v5;
        v10 = _NSConcreteStackBlock;
        v11 = 1107296256;
        v12 = sub_10033F618;
        v13 = &unk_1007357B0;
        v7 = _Block_copy(&v10);
        swift_release(v15);
        v8 = swift_allocObject(&unk_100735478, 24, 7);
        swift_unknownObjectWeakInit(v8 + 16);
        v14 = sub_1002D44E0;
        v15 = v8;
        v10 = _NSConcreteStackBlock;
        v11 = 1107296256;
        v12 = sub_10033F618;
        v13 = &unk_1007357D8;
        v9 = _Block_copy(&v10);
        objc_msgSend(v4, "animateAlongsideTransition:completion:", v7, v9, swift_release(v15).n128_f64[0]);
        _Block_release(v9);
        _Block_release(v7);
        *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
      }
      else
      {
        sub_100318FD8();
        *(_QWORD *)&result = swift_release(v6).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_1002D04DC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewWillDisappear:", a3);
  sub_1002D0328();

}

void sub_1002D053C(void *a1, uint64_t a2)
{
  sub_1002D0550(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_1002D0550(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

double sub_1002D05B8()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  _QWORD v16[4];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = ProductDiffablePagePresenter.pageDisappearedAction.getter(v5);
  if (v8)
  {
    v10 = v8;
    v11 = UIResponder.nearestActionRunner.getter();
    if (v11)
    {
      v12 = v11;
      v16[3] = ObjectType;
      v16[0] = v1;
      v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v3);
      v14 = v1;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v10, v16, v7, v13);
      swift_release(v10);
      v15 = swift_release(v12);
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v15);
      sub_100011088((uint64_t)v16, &qword_1007F6E90);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
  }
  return result;
}

void sub_1002D0700(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a3);
  AdvertRotationControllerProvider.viewControllerWillDisappear()();
  if (objc_msgSend(v4, "isMovingFromParentViewController", v5.receiver, v5.super_class))
    AdvertRotationControllerProvider.viewControllerWillBeDiscarded()();
  sub_1002D05B8();

}

void sub_1002D078C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  unsigned int *v15;
  id v16;
  objc_super v17;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v6 = type metadata accessor for ProductDiffablePagePresenter.PageWidth(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = v3;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v10 = a1 ? objc_msgSend(a1, "horizontalSizeClass") : 0;
    v11 = objc_msgSend(v3, "traitCollection");
    v12 = objc_msgSend(v11, "horizontalSizeClass");

    if (!a1 || v10 != v12)
    {
      v13 = objc_msgSend(v3, "traitCollection");
      v14 = UITraitCollection.isSizeClassCompact.getter(v13);

      v15 = (unsigned int *)&enum case for ProductDiffablePagePresenter.PageWidth.compact(_:);
      if ((v14 & 1) == 0)
        v15 = (unsigned int *)&enum case for ProductDiffablePagePresenter.PageWidth.regular(_:);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v15, v6);
      ProductDiffablePagePresenter.didChangePageWidth(_:)(v9);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v16 = objc_msgSend(v3, "collectionView");
      objc_msgSend(v16, "reloadData");

    }
  }
}

void sub_1002D0944(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1002D078C(a3, (uint64_t)v6);

}

void sub_1002D099C(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void *v16;
  void *v17;
  uint64_t v18;
  objc_super v19;

  v19.receiver = v3;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    sub_1002CF64C(0);
    v7 = swift_allocObject(&unk_100735478, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v17 = sub_1002D44B8;
    v18 = v7;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_10033F618;
    v16 = &unk_100735738;
    v8 = _Block_copy(&v13);
    objc_msgSend(a1, "animateAlongsideTransition:completion:", v8, 0, swift_release(v18).n128_f64[0]);
    _Block_release(v8);
    v9 = swift_allocObject(&unk_100735770, 24, 7);
    *(_QWORD *)(v9 + 16) = v3;
    v17 = sub_1002D44D0;
    v18 = v9;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_10033F618;
    v16 = &unk_100735788;
    v10 = _Block_copy(&v13);
    v11 = v18;
    v12 = v3;
    objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
  }
}

uint64_t sub_1002D0B24(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  unsigned int *v8;
  uint64_t v10;

  v3 = type metadata accessor for ProductDiffablePagePresenter.PageWidth(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProductDiffablePagePresenter.reloadProductReviewsSection()();
  v7 = objc_msgSend(a2, "traitCollection");
  LOBYTE(a2) = UITraitCollection.isSizeClassCompact.getter(v7);

  v8 = (unsigned int *)&enum case for ProductDiffablePagePresenter.PageWidth.compact(_:);
  if ((a2 & 1) == 0)
    v8 = (unsigned int *)&enum case for ProductDiffablePagePresenter.PageWidth.regular(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *v8, v3);
  ProductDiffablePagePresenter.didChangePageWidth(_:)(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1002D0C14(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1002D099C(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

uint64_t sub_1002D0C80()
{
  return sub_1002D0CEC((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_1002D0C9C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1002D0C80();

}

uint64_t sub_1002D0CD0()
{
  return sub_1002D0CEC((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_1002D0CEC(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_1000194E4(v11, (uint64_t)v22, (uint64_t *)&unk_100802A10);
  if (v23)
  {
    sub_100011020((uint64_t)v22, (uint64_t)v18);
    sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
    v12 = v19;
    v13 = v20;
    sub_100011064(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  else
  {
    v14 = sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_1002D0E58(void *a1)
{
  id v1;

  v1 = a1;
  sub_1002D0CD0();

}

uint64_t sub_1002D0E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  void *v45;

  ObjectType = swift_getObjectType();
  v1 = sub_10000DF3C(&qword_100805FA8);
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  __chkstk_darwin(v1);
  v40 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DF3C(&qword_100805FB0);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1008030A0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CD4DC();
  v11 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v10);
  v12 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v14 = static OS_dispatch_queue.main.getter(v13);
  v44 = v12;
  v45 = &protocol witness table for OS_dispatch_queue;
  v43[0] = v14;
  v15 = sub_10000DF3C(&qword_1007F83E8);
  v16 = sub_100010F98(&qword_1008030B0, &qword_1007F83E8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  v17 = v15;
  v18 = ObjectType;
  EventEmitter.addObserver<A>(on:target:method:)(v43, v0, sub_1002D1974, 0, v17, ObjectType, v16);
  v19 = swift_release(v11);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v19);
  v20 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
  v21 = ProductDiffablePagePresenter.onScrollToPosition.getter(v20);
  v23 = static OS_dispatch_queue.main.getter(v22);
  v44 = v12;
  v45 = &protocol witness table for OS_dispatch_queue;
  v43[0] = v23;
  v24 = sub_10000DF3C(&qword_100805FB8);
  v25 = sub_100010F98(&qword_100805FC0, &qword_100805FB8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  EventEmitter.addObserver<A>(on:target:method:)(v43, v0, sub_1002D1EE4, 0, v24, v18, v25);
  v26 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v5, v39, v26);
  v27 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
  v28 = ProductDiffablePagePresenter.onDownloadingOrderingItemsRemoved.getter(v27);
  v30 = static OS_dispatch_queue.main.getter(v29);
  v44 = v12;
  v45 = &protocol witness table for OS_dispatch_queue;
  v43[0] = v30;
  v31 = sub_10000DF3C(&qword_100805FC8);
  v32 = sub_100010F98(&qword_100805FD0, &qword_100805FC8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  v33 = v40;
  EventEmitter.addObserver<A>(on:target:method:)(v43, v0, sub_1002D1F38, 0, v31, v18, v32);
  v34 = swift_release(v28);
  (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v33, v42, v34);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
}

void sub_1002D1198(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t KeyPath;
  char *v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id *v41;
  __n128 v42;
  id v43;
  char *v44;
  __n128 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  __n128 v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  __n128 v78;
  _QWORD v79[2];
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[5];
  char v100[32];

  v2 = sub_10000DF3C(&qword_1007F9670);
  __chkstk_darwin(v2);
  v83 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v82 = (char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v88 = *(_QWORD *)(v5 - 8);
  v89 = v5;
  __chkstk_darwin(v5);
  v87 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_100805FE0);
  v8 = __chkstk_darwin(v7);
  v90 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for DiffablePageContentIdentifier(0, v8);
  v94 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v84 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v11);
  v13 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for Shelf.ContentType(0);
  v95 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v81 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v92 = (char *)v79 - v16;
  __chkstk_darwin(v17);
  v96 = (char *)v79 - v18;
  v19 = sub_10000DF3C((uint64_t *)&unk_1008030F0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C(&qword_1007F8410);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DF3C(&qword_100802FF0);
  v28 = a1;
  SnapshotUpdate.contentSnapshot.getter(v27);
  ModelMappedDiffableDataSourceContentSnapshot.identifierSnapshot.getter(v23);
  v29 = *(void (**)(char *, uint64_t))(v24 + 8);
  v29(v26, v23);
  v30 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v19);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (v30 < 1)
    goto LABEL_11;
  v80 = v27;
  SnapshotUpdate.contentSnapshot.getter(v27);
  ModelMappedDiffableDataSourceContentSnapshot.sectionModel(at:)(0, v23);
  v29(v26, v23);
  v31 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, v31) == 1)
  {
    v33 = &qword_1007F4A68;
    v34 = (uint64_t)v13;
LABEL_10:
    sub_100011088(v34, v33);
    goto LABEL_11;
  }
  v79[1] = v28;
  KeyPath = swift_getKeyPath(&unk_100682888);
  v36 = v92;
  ReadOnlyLens.subscript.getter(KeyPath, v31);
  v37 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v13, v31, v37);
  v38 = v95;
  v39 = v96;
  v40 = v93;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v96, v36, v93);
  v41 = (id *)(v97 + qword_100802E50);
  v42 = swift_beginAccess(v97 + qword_100802E50, v100, 0, 0);
  if (!*v41)
  {
    v47 = v90;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v94 + 56))(v90, 1, 1, v91, v42);
    goto LABEL_9;
  }
  v43 = *v41;
  v44 = v87;
  IndexPath.init(item:section:)(0, 0, v45);
  v46 = v90;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v44);

  v47 = v46;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v44, v89);
  v48 = v94;
  v49 = v46;
  v50 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v49, 1, v91) == 1)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
    v33 = &qword_100805FE0;
    v34 = (uint64_t)v47;
    goto LABEL_10;
  }
  v51 = v84;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v84, v47, v50);
  SnapshotUpdate.contentSnapshot.getter(v80);
  v52 = v83;
  ModelMappedDiffableDataSourceContentSnapshot.itemModel(for:)(v51, v23);
  v53 = v26;
  v54 = (uint64_t)v52;
  v29(v53, v23);
  v55 = v85;
  v56 = v52;
  v57 = v86;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v56, 1, v86) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v50);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v96, v40);
    v33 = &qword_1007F9670;
    v34 = v54;
    goto LABEL_10;
  }
  v59 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v82, v54, v57);
  v60 = v81;
  v61 = v96;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v81, v96, v40);
  if ((*(unsigned int (**)(char *, uint64_t))(v38 + 88))(v60, v40) != enum case for Shelf.ContentType.productTopLockup(_:))
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v57);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v50);
    v75 = v60;
    v76 = *(void (**)(char *, uint64_t))(v38 + 8);
    v76(v61, v40);
    v77 = *(_QWORD *)(v97 + qword_100805958);
    *(_QWORD *)(v97 + qword_100805958) = &_swiftEmptySetSingleton;
    v78 = swift_bridgeObjectRelease(v77);
    ((void (*)(char *, uint64_t, __n128))v76)(v75, v40, v78);
    return;
  }
  ReadOnlyLens.value.getter(v99, v57);
  v62 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v64 = type metadata accessor for ProductTopLockup(0, v63);
  v65 = swift_dynamicCast(&v98, v99, v62, v64, 6);
  if ((v65 & 1) != 0)
  {
    v67 = v98;
    v68 = ProductTopLockup.uber.getter(v65);
    swift_release(v68);
    if (v68)
    {
      v69 = sub_10000DF3C(&qword_100803400);
      v70 = *(unsigned __int8 *)(v88 + 80);
      v71 = (v70 + 32) & ~v70;
      v72 = swift_allocObject(v69, v71 + *(_QWORD *)(v88 + 72), v70 | 7);
      *(_OWORD *)(v72 + 16) = xmmword_10066FBA0;
      IndexPath.init(item:section:)(0, 0, (__n128)xmmword_10066FBA0);
      v73 = sub_100172FB8(v72);
      swift_setDeallocating(v72);
      swift_arrayDestroy(v72 + v71, 1, v89);
      swift_deallocClassInstance(v72, 32, 7);
      v74 = swift_release(v67);
      (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v59, v57, v74);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v51, v50);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v40);
      v58 = *(_QWORD *)(v97 + qword_100805958);
      *(_QWORD *)(v97 + qword_100805958) = v73;
      goto LABEL_12;
    }
    v66 = swift_release(v67);
  }
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v59, v57, v66);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v50);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v96, v40);
LABEL_11:
  v58 = *(_QWORD *)(v97 + qword_100805958);
  *(_QWORD *)(v97 + qword_100805958) = &_swiftEmptySetSingleton;
LABEL_12:
  swift_bridgeObjectRelease(v58);
}

void (*sub_1002D1974(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100735608, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D4408;
}

void sub_1002D19C8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  void *v24;
  Class isa;
  id v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  id v31;
  void *v32;
  Class v33;
  id v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  void *v53;
  Class v54;
  id v55;
  void *v56;
  id v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  double MaxY;
  double MinY;
  id v68;
  void *v69;
  char *v70;
  uint64_t v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v2 = v1;
  v71 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v70 - v9;
  v11 = type metadata accessor for ProductPageScrollPosition(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char **)((char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, v11, v13);
  v16 = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 88))(v15, v11);
  if (v16 == enum case for ProductPageScrollPosition.topOfPage(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v12 + 96))(v15, v11);
    v17 = *v15;
    v18 = *(_QWORD *)(*v15 + 16);
    if (!v18)
    {
LABEL_7:
      v26 = objc_msgSend(v2, "collectionView", swift_bridgeObjectRelease(v17).n128_f64[0]);
      if (v26)
      {
        v27 = v26;
        objc_msgSend(v26, "setContentOffset:animated:", 1, 0.0, 0.0);

        return;
      }
      goto LABEL_29;
    }
    *(_QWORD *)&v19 = swift_bridgeObjectRetain(*v15).n128_u64[0];
    v20 = 0;
    while (1)
    {
      v21 = *(_QWORD *)(v17 + 8 * v20 + 32);
      v22 = objc_msgSend(v2, "collectionView", v19);
      if (!v22)
        break;
      v24 = v22;
      ++v20;
      IndexPath.init(item:section:)(0, v21, v23);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v71);
      objc_msgSend(v24, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 0, 1);

      if (v18 == v20)
      {
        swift_bridgeObjectRelease(v17);
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v16 != enum case for ProductPageScrollPosition.topOfIndexPath(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
    return;
  }
  (*(void (**)(_QWORD *, uint64_t))(v12 + 96))(v15, v11);
  v28 = sub_10000DF3C(&qword_100805FD8);
  v29 = *((_BYTE *)v15 + *(int *)(v28 + 48));
  v30 = *(_QWORD *)((char *)v15 + *(int *)(v28 + 64));
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 32))(v6, v15, v71);
  v31 = objc_msgSend(v2, "collectionView");
  if (!v31)
    goto LABEL_30;
  v32 = v31;
  v33 = IndexPath._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v32, "layoutAttributesForItemAtIndexPath:", v33);

  if (!v34)
    goto LABEL_23;
  objc_msgSend(v34, "frame");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;

  if ((v29 & 1) != 0)
  {
LABEL_15:
    v47 = *(_QWORD *)(v30 + 16);
    if (!v47)
    {
LABEL_20:
      v55 = objc_msgSend(v2, "navigationController", swift_bridgeObjectRelease(v30).n128_f64[0]);
      if (v55)
      {
        v56 = v55;
        v57 = objc_msgSend(v55, "navigationBar");

        objc_msgSend(v57, "frame");
        v59 = v58;
        v61 = v60;
        v63 = v62;
        v65 = v64;

        v73.origin.x = v59;
        v73.origin.y = v61;
        v73.size.width = v63;
        v73.size.height = v65;
        MaxY = CGRectGetMaxY(v73);
      }
      else
      {
        MaxY = 0.0;
      }
      v74.origin.x = v36;
      v74.origin.y = v38;
      v74.size.width = v40;
      v74.size.height = v42;
      MinY = CGRectGetMinY(v74);
      v68 = objc_msgSend(v2, "collectionView");
      if (v68)
      {
        v69 = v68;
        objc_msgSend(v68, "setContentOffset:animated:", 1, 0.0, MinY - MaxY);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v71);
        return;
      }
      goto LABEL_31;
    }
    v70 = v6;
    *(_QWORD *)&v48 = swift_bridgeObjectRetain(v30).n128_u64[0];
    v49 = 0;
    while (1)
    {
      v50 = *(_QWORD *)(v30 + 8 * v49 + 32);
      v51 = objc_msgSend(v2, "collectionView", v48);
      if (!v51)
        goto LABEL_28;
      v53 = v51;
      ++v49;
      IndexPath.init(item:section:)(0, v50, v52);
      v54 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v71);
      objc_msgSend(v53, "scrollToItemAtIndexPath:atScrollPosition:animated:", v54, 0, 1);

      if (v47 == v49)
      {
        swift_bridgeObjectRelease(v30);
        v6 = v70;
        goto LABEL_20;
      }
    }
  }
  v43 = objc_msgSend(v2, "collectionView");
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v43, "contentOffset");
    v46 = v45;

    v72.origin.x = v36;
    v72.origin.y = v38;
    v72.size.width = v40;
    v72.size.height = v42;
    if (CGRectGetMinY(v72) < v46)
      goto LABEL_15;
LABEL_23:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v71);
    swift_bridgeObjectRelease(v30);
    return;
  }
LABEL_32:
  __break(1u);
}

void (*sub_1002D1EE4(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007355E0, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1002D43E8;
}

uint64_t (*sub_1002D1F38(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100735590, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_1007355B8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D43AC;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000ADE74;
}

unint64_t sub_1002D1FB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = PageGridCache.init()(v3);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v6 = PageGridCache.init()(v5);
  a1[3] = (uint64_t)&type metadata for ProductPageGridProvider;
  result = sub_1002D4368();
  a1[4] = result;
  *a1 = v4;
  a1[1] = v6;
  return result;
}

uint64_t sub_1002D202C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  double *v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[3];
  _QWORD v25[5];
  _QWORD v26[5];
  __int128 v27;
  _QWORD v28[4];
  _QWORD v29[4];

  ObjectType = swift_getObjectType();
  v27 = xmmword_10066F870;
  v4 = sub_10000E99C(&qword_100805F60, type metadata accessor for ProductDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v28[3] = swift_getObjectType();
  v28[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v29[3] = swift_getObjectType();
  v29[0] = v6;
  sub_100010E9C((uint64_t)v28, (uint64_t)v26);
  sub_100010E9C((uint64_t)v26, (uint64_t)v25);
  v7 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v8 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v24, v25, v7, v8, 6) & 1) == 0)
    v24[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  if (*(_QWORD *)&v24[0])
  {
    v22 = v24[0];
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = (double *)sub_10020070C(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = *((_QWORD *)v9 + 2);
    v10 = *((_QWORD *)v9 + 3);
    if (v11 >= v10 >> 1)
      v9 = (double *)sub_10020070C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v22;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100010E9C((uint64_t)v29, (uint64_t)v26);
  sub_100010E9C((uint64_t)v26, (uint64_t)v25);
  v12 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v13 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v24, v25, v12, v13, 6) & 1) == 0)
    v24[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  if (*(_QWORD *)&v24[0])
  {
    v23 = v24[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = (double *)sub_10020070C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v15 = *((_QWORD *)v9 + 2);
    v14 = *((_QWORD *)v9 + 3);
    v16 = v23;
    if (v15 >= v14 >> 1)
    {
      v21 = (double *)sub_10020070C((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v23;
      v9 = v21;
    }
    *((_QWORD *)v9 + 2) = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v28, v27, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v26, ObjectType, v4);
  v17 = *(_QWORD *)(v1 + qword_100852EA8);
  v18 = type metadata accessor for ProductPageLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  sub_100011020((uint64_t)v26, (uint64_t)v25);
  sub_100011020((uint64_t)v25, (uint64_t)v24);
  swift_retain(v17);
  v19 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v24, v9, v17, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v19;
  return result;
}

unint64_t sub_1002D2364@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for ProductPageShelfLayoutSpacingProvider;
  result = sub_1002D4324();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1002D2394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_100852E58);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
  v3 = type metadata accessor for ProductPageShelfSupplementaryProvider();
  v4 = swift_allocObject(v3, 40, 7);
  v5 = sub_10000E99C(&qword_100805F70, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  *(_QWORD *)(v4 + 32) = 0;
  swift_unknownObjectWeakInit(v4 + 24);
  *(_QWORD *)(v4 + 32) = v5;
  swift_unknownObjectWeakAssign(v6, v1);
  *(_QWORD *)(v4 + 16) = v2;
  sub_10000E99C(&qword_100805F90, (uint64_t (*)(uint64_t))type metadata accessor for ProductPageShelfSupplementaryProvider, (uint64_t)&unk_10068A030);
  swift_retain(v2);
  return v4;
}

uint64_t sub_1002D2468()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];

  ObjectType = swift_getObjectType();
  v1 = sub_10000DF3C(&qword_1007F43E8);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10066FBA0;
  v3 = sub_10000E99C(&qword_100805F60, type metadata accessor for ProductDiffablePageViewController, (uint64_t)byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v15, ObjectType, v3);
  v4 = type metadata accessor for ProductPageItemSupplementaryViewProvider();
  v5 = swift_allocObject(v4, 64, 7);
  sub_100011020((uint64_t)v15, v5 + 16);
  v6 = type metadata accessor for ProductPageSeparatorItemSupplementaryProvider();
  v7 = swift_allocObject(v6, 56, 7);
  sub_100010F3C(v15, v7 + 16);
  *(_QWORD *)(v5 + 56) = v7;
  v8 = sub_10000E99C(&qword_100805F88, (uint64_t (*)(uint64_t))type metadata accessor for ProductPageItemSupplementaryViewProvider, (uint64_t)&unk_100682AAC);
  *(_QWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 40) = v8;
  v9 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v10 = swift_allocObject(v9, 17, 7);
  *(_BYTE *)(v10 + 16) = 3;
  v11 = sub_100202148((_QWORD *)1, 2, 1, (_QWORD *)v2);
  v12 = sub_10000E99C(&qword_1007F43F0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_100687814);
  v11[2] = 2;
  v11[6] = v10;
  v11[7] = v12;
  v13 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v11);
}

id sub_1002D25EC()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::OpaquePointer v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::OpaquePointer v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  id result;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10037259C();
  v4 = type metadata accessor for CompoundCollectionElementsObserver(0);
  if (swift_dynamicCastClass(v3, v4))
  {
    v41 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_1002D2AD0, 0);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    swift_unknownObjectRelease(v3);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v41 = CompoundCollectionElementsObserver.init(children:)(_swiftEmptyArrayStorage);
  }
  v5 = sub_10000DF3C(&qword_1007F4420);
  v6._rawValue = (void *)swift_allocObject(v5, 96, 7);
  *((_OWORD *)v6._rawValue + 1) = xmmword_1006725D0;
  v7 = sub_1002CF4D0();
  v8 = type metadata accessor for UberedCollectionElementsObserver();
  v9 = swift_allocObject(v8, 24, 7);
  v10 = swift_weakInit(v9 + 16);
  swift_weakAssign(v10, v7);
  swift_release(v7);
  v11 = sub_10000E99C(&qword_100805F48, (uint64_t (*)(uint64_t))type metadata accessor for UberedCollectionElementsObserver, (uint64_t)"]-\v");
  *((_QWORD *)v6._rawValue + 4) = v9;
  *((_QWORD *)v6._rawValue + 5) = v11;
  v12 = sub_1002CF38C();
  v13 = sub_10000E99C(&qword_100805F50, (uint64_t (*)(uint64_t))type metadata accessor for ProductTopLockupCollectionElementsObserver, (uint64_t)&unk_10069DFEC);
  v14 = *(_QWORD *)&v1[qword_100852E58];
  *((_QWORD *)v6._rawValue + 6) = v12;
  *((_QWORD *)v6._rawValue + 7) = v13;
  v15 = *(_QWORD *)&v1[qword_100852E68];
  v16 = type metadata accessor for ProductMediaCollectionElementsObserver();
  v17 = swift_allocObject(v16, 40, 7);
  swift_weakInit(v17 + 16);
  swift_unknownObjectWeakInit(v17 + 24);
  swift_weakAssign(v17 + 16, v14);
  swift_unknownObjectWeakAssign(v17 + 24, v1);
  *(_QWORD *)(v17 + 32) = v15;
  v18 = sub_10000E99C(&qword_100805F58, (uint64_t (*)(uint64_t))type metadata accessor for ProductMediaCollectionElementsObserver, (uint64_t)"y1\v");
  *((_QWORD *)v6._rawValue + 8) = v17;
  *((_QWORD *)v6._rawValue + 9) = v18;
  v19 = sub_10000E99C(&qword_100805F60, type metadata accessor for ProductDiffablePageViewController, (uint64_t)byte_10067F0C0);
  swift_retain(v15);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v42, ObjectType, v19);
  v20 = *(_QWORD *)&v1[qword_100852EA8];
  v21 = sub_10000E99C(&qword_100805F68, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v22 = sub_10000E99C(&qword_100805F70, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v23 = type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver(0);
  v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  swift_unknownObjectWeakInit(v24 + qword_1008035C0);
  *(_QWORD *)(v24 + qword_1008035D0) = 0;
  swift_unknownObjectWeakAssign(v25, v1);
  sub_100011020((uint64_t)v42, v24 + qword_1008035C8);
  swift_retain(v14);
  swift_retain(v20);
  v26 = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v14, v21, v22, v20);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v42);
  *((_QWORD *)v6._rawValue + 10) = v26;
  *((_QWORD *)v6._rawValue + 11) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  CompoundCollectionElementsObserver.addChildren(_:)(v6);
  swift_bridgeObjectRelease(v6._rawValue);
  v27._rawValue = (void *)swift_allocObject(v5, 80, 7);
  *((_OWORD *)v27._rawValue + 1) = xmmword_10066F860;
  v28 = *(_QWORD *)&v1[qword_100805948];
  v29 = sub_10000DF3C(&qword_100805F78);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  swift_retain(v14);
  swift_retain(v28);
  v30 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v14, v28);
  v31 = sub_100010F98(&qword_100805F80, &qword_100805F78, (const char *)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *((_QWORD *)v27._rawValue + 4) = v30;
  *((_QWORD *)v27._rawValue + 5) = v31;
  v32 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v33 = swift_allocObject(v32, 17, 7);
  *(_BYTE *)(v33 + 16) = 3;
  v34 = sub_10000E99C(&qword_1007F4438, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10069C8D0);
  *((_QWORD *)v27._rawValue + 6) = v33;
  *((_QWORD *)v27._rawValue + 7) = v34;
  v35 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v42, ObjectType, v19);
  v36 = TimedMetricsPagePresenter.impressionsCalculator.getter(v35);
  v37 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v28);
  result = objc_msgSend(v1, "collectionView", swift_retain(v37).n128_f64[0]);
  if (result)
  {
    v39 = result;
    v40 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
    *((_QWORD *)v27._rawValue + 8) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v42, v36, v28, v37, v39);
    *((_QWORD *)v27._rawValue + 9) = &protocol witness table for ImpressionsCollectionElementsObserver;
    CompoundCollectionElementsObserver.addChildren(_:)(v27);
    swift_bridgeObjectRelease(v27._rawValue);
    return (id)v41;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1002D2AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  if (swift_dynamicCastClass(a1, v2))
    return 1;
  v4 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  return swift_dynamicCastClass(a1, v4) != 0;
}

void sub_1002D2B24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_10000DF3C(&qword_100805F38);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100375340(a1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    v7 = *v5;
    v8 = DynamicPage.presentationOptions.getter(v6);
    sub_1002D3078(v8);
    v9 = sub_1002CF38C();
    sub_100601230();
    swift_release(v9);
    sub_1002D331C();
    sub_1002D0114();
    sub_1002D2C38();
    swift_release(v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1002D2C38()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  unint64_t v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  _QWORD v62[4];

  v60 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v60);
  v61 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v2);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AdamId(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShareSheetData.Metadata(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = ProductDiffablePagePresenter.shareAction.getter(v11);
  if (v14)
  {
    v15 = v14;
    v59 = v0;
    v16 = type metadata accessor for ShareSheetAction(0);
    v17 = swift_dynamicCastClass(v15, v16);
    if (v17)
    {
      v18 = ShareSheetAction.data.getter(v17);
      ShareSheetData.metadata.getter(v19);
      v20 = swift_release(v18);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, __n128))(v10 + 88))(v13, v9, v20) == enum case for ShareSheetData.Metadata.product(_:))
      {
        v58 = v15;
        v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 96))(v13, v9);
        v22 = *v13;
        v23 = ShareSheetProductMetadata.notesMetadata.getter(v21);
        if (v23
          && (v25 = v23, v26 = ShareSheetNotesMetadata.mediaType.getter(), v28 = v27, v24 = swift_release(v25), v28))
        {
          if (v26 == 0x656C646E7562 && v28 == 0xE600000000000000)
            v30 = 1;
          else
            v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0x656C646E7562, 0xE600000000000000, 0);
          v24 = swift_bridgeObjectRelease(v28);
        }
        else
        {
          v30 = 0;
        }
        v32 = ShareSheetProductMetadata.adamId.getter(v24);
        v33 = AdamId.stringValue.getter(v32);
        v35 = v34;
        v36 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v37 = ShareSheetAction.data.getter(v36);
        ShareSheetData.url.getter();
        swift_release(v37);
        v38 = type metadata accessor for URL(0);
        v39 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v4, 0, 1, v38);
        v40 = ShareSheetProductMetadata.name.getter(v39);
        v42 = sub_1005321E4(v33, v35, (uint64_t)v4, v40, v41, v30 & 1);
        v44 = v43;
        v46 = v45;
        v48 = v47;
        v62[0] = _swiftEmptyArrayStorage;
        v49 = sub_10000E99C(&qword_1007F8D68, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
        swift_bridgeObjectRetain(v44);
        swift_retain(v46);
        swift_retain(v48);
        v50 = sub_10000DF3C(&qword_1007F8D70);
        v51 = sub_100010F98(&qword_1007F8D78, &qword_1007F8D70, (const char *)&protocol conformance descriptor for [A]);
        v52 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(v62, v50, v51, v60, v49);
        v62[0] = v42;
        v62[1] = v44;
        v62[2] = v46;
        v62[3] = v48;
        v53 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
        v54 = sub_1002D42E0();
        v55 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v62, v52, &type metadata for ProductPageAppEntity, v54);
        v56 = objc_msgSend(v59, "view");
        if (v56)
        {
          v57 = v56;
          UIView.annotate(with:)(v55);
          swift_release(v58);
          swift_release(v22);
          swift_release(v48);
          swift_release(v46);
          swift_bridgeObjectRelease(v44);

        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        v31 = swift_release(v15);
        (*(void (**)(uint64_t *, uint64_t, __n128))(v10 + 8))(v13, v9, v31);
      }
    }
    else
    {
      swift_release(v15);
    }
  }
}

void sub_1002D3078(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  _BYTE *v13;
  id v14;
  char v15;
  _BYTE *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v2 = v1;
  v1[qword_100853930] = (a1 & 0x20) != 0;
  sub_1002CF64C(0);
  v1[qword_100853928] = 1;
  v4 = objc_msgSend(v1, "view");
  if (!v4)
    goto LABEL_27;
  v1 = v4;
  v5 = type metadata accessor for InsetCollectionViewControllerContentView();
  v6 = swift_dynamicCastClass(v1, v5);
  if (!v6)
  {
LABEL_26:

LABEL_27:
    __break(1u);
LABEL_28:

    goto LABEL_29;
  }
  *(_BYTE *)(v6
           + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = (a1 & 8) == 0;

  if ((a1 & 1) != 0)
    goto LABEL_12;
  if ((a1 & 2) == 0 || (v7 = objc_msgSend(v2, "navigationController")) == 0)
  {
LABEL_21:
    v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle] = 0;
    goto LABEL_22;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "viewControllers");

  v1 = (_BYTE *)sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v1);

  if (!((unint64_t)v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_20:
    swift_bridgeObjectRelease(v10);
    goto LABEL_21;
  }
  if (v10 < 0)
    v19 = v10;
  else
    v19 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v10);
  if (!v20)
    goto LABEL_20;
LABEL_8:
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v11 = *(id *)(v10 + 32);
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_26;
  }
  v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
LABEL_11:
  v12 = v11;
  swift_bridgeObjectRelease(v10);
  v13 = v2;
  v14 = v12;
  v15 = static NSObject.== infix(_:_:)(v14, v13);

  if ((v15 & 1) == 0)
    goto LABEL_21;
LABEL_12:
  v16 = objc_msgSend(v2, "view");
  if (v16)
  {
    v1 = v16;
    v17 = swift_dynamicCastClass(v16, v5);
    if (v17)
    {
      v18 = *(_BYTE *)(v17
                     + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

      v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle] = v18;
      if ((v18 & 1) != 0)
      {
        v21 = objc_msgSend(v2, "navigationItem");
        objc_msgSend(v21, "setLargeTitleDisplayMode:", 3);
LABEL_23:

        return;
      }
LABEL_22:
      v21 = objc_msgSend(v2, "navigationItem");
      objc_msgSend(v21, "setLargeTitleDisplayMode:", 2);
      goto LABEL_23;
    }
    goto LABEL_28;
  }
LABEL_29:
  __break(1u);
}

void sub_1002D331C()
{
  _BYTE *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;

  if (v0[qword_100805928] != 1)
    goto LABEL_7;
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v2 = v1;
  v3 = type metadata accessor for InsetCollectionViewControllerContentView();
  v4 = swift_dynamicCastClass(v2, v3);
  if (!v4)
  {

    goto LABEL_11;
  }
  v5 = *(_BYTE *)(v4
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(v0, "collectionView");
    if (v6)
      goto LABEL_8;
    return;
  }
LABEL_7:
  v6 = objc_msgSend(v0, "collectionView");
  if (v6)
  {
LABEL_8:
    v7 = v6;
    objc_msgSend(v6, "frame");
    objc_msgSend(v7, "setFrame:");

  }
}

uint64_t sub_1002D3440()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  v2 = type metadata accessor for ShelfBasedAdPageScrollActionRunner(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  swift_retain(v1);
  return sub_1003DFC34(v1, v0);
}

void sub_1002D34A4()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = qword_100805958;
  if (*(_QWORD *)(*(_QWORD *)&v0[qword_100805958] + 16))
  {
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      v4 = type metadata accessor for InsetCollectionViewControllerContentView();
      v5 = swift_dynamicCastClass(v3, v4);
      if (v5)
      {
        v6 = *(_BYTE *)(v5
                      + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

        if ((v6 & 1) == 0)
          swift_bridgeObjectRetain(*(_QWORD *)&v0[v1]);
        return;
      }

    }
    __break(1u);
  }
}

void sub_1002D3540()
{
  uint64_t v0;

  *(_BYTE *)(v0 + qword_100805928) = 1;
  sub_1002D331C();
}

void sub_1002D3554()
{
  uint64_t v0;

  *(_BYTE *)(v0 + qword_100805928) = 0;
  sub_1002D331C();
}

uint64_t sub_1002D3564()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_100805930));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100853958));
  swift_release(*(_QWORD *)(v0 + qword_100805948));
  swift_release(*(_QWORD *)(v0 + qword_100805950));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100805958));
}

uint64_t sub_1002D35D0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_100805930));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100853958));
  swift_release(*(_QWORD *)(a1 + qword_100805948));
  swift_release(*(_QWORD *)(a1 + qword_100805950));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100805958));
}

uint64_t type metadata accessor for ProductDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100805988;
  if (!qword_100805988)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductDiffablePageViewController);
  return result;
}

uint64_t sub_1002D3684(uint64_t a1)
{
  _QWORD v2[15];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = &unk_100682828;
  v2[2] = &unk_100682840;
  v2[3] = &unk_100682828;
  v2[4] = &unk_100682828;
  v2[5] = &unk_100682828;
  v2[6] = &unk_100682828;
  v2[7] = &unk_100682828;
  v2[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[9] = &unk_100682840;
  v2[10] = &unk_100682828;
  v2[11] = &unk_100682828;
  v2[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[13] = &unk_100682840;
  v2[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 256, 15, v2, a1 + 1264);
}

uint64_t sub_1002D3718()
{
  return type metadata accessor for ProductDiffablePageViewController(0);
}

id sub_1002D3720()
{
  uint64_t v0;

  return *(id *)(v0 + qword_100853950);
}

uint64_t sub_1002D3734()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_100853938);
}

uint64_t sub_1002D3744()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_100853930);
}

void sub_1002D3754(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_100853930) = a1;
  sub_1002CF64C(0);
  *(_BYTE *)(v1 + qword_100853928) = 1;
}

uint64_t sub_1002D3788()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_100853928);
}

void sub_1002D3798(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_1002D3800(a2, a3);

  }
}

void sub_1002D3800(double a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  _QWORD aBlock[5];
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = type metadata accessor for TimingCurve(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F9398);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 < 0.5;
  if (*(_QWORD *)&v3[qword_100852E88] != v14)
  {
    v15 = fabs(a2);
    if (v15 >= 5.0)
      v16 = 1.0;
    else
      v16 = v15 / 5.0;
    aBlock[0] = 0x3FC999999999999ALL;
    v26 = 0x3FA999999999999ALL;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for TimingCurve.linear(_:), v6);
    Interpolator.init(fromValue:toValue:curve:)(aBlock, &v26, v9, &type metadata for CGFloat, &protocol witness table for CGFloat);
    Interpolator.value(forInput:)(aBlock, v10, v16);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v17 = *(double *)aBlock;
    v18 = (void *)objc_opt_self(UIView);
    v19 = swift_allocObject(&unk_100735540, 32, 7);
    *(_QWORD *)(v19 + 16) = v3;
    *(_QWORD *)(v19 + 24) = v14;
    aBlock[4] = sub_1002D42C8;
    v25 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100735558;
    v20 = _Block_copy(aBlock);
    v21 = v25;
    v22 = v3;
    swift_release(v21);
    objc_msgSend(v18, "animateWithDuration:animations:", v20, v17);
    _Block_release(v20);
  }
}

void sub_1002D3A20(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD aBlock[5];
  uint64_t v15;
  char v16[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a2 < 0.5;
    if (*(_QWORD *)(Strong + qword_100852E88) != v8)
    {
      v9 = (void *)objc_opt_self(UIView);
      v10 = swift_allocObject(&unk_1007354F0, 32, 7);
      *(_QWORD *)(v10 + 16) = v7;
      *(_QWORD *)(v10 + 24) = v8;
      aBlock[4] = sub_1002D46E8;
      v15 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BD6CC;
      aBlock[3] = &unk_100735508;
      v11 = _Block_copy(aBlock);
      v12 = v15;
      v13 = v7;
      swift_release(v12);
      objc_msgSend(v9, "animateWithDuration:animations:", v11, a3);
      _Block_release(v11);
    }

  }
}

void sub_1002D3B44(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _BYTE *Strong;
  double v14;
  char v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  _QWORD aBlock[5];
  uint64_t v33;
  char v34[24];

  v6 = type metadata accessor for TimingCurve(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&aBlock[-1] - v11;
  swift_beginAccess(a1 + 16, v34, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong
    || (v14 = *(double *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_navigationBarAppearanceProgress],
        v15 = Strong[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_navigationBarAppearanceProgress
                   + 8],
        Strong,
        (v15 & 1) != 0))
  {
    if (a2 == 1.79769313e308)
      return;
    goto LABEL_4;
  }
  if (v14 != a2)
  {
LABEL_4:
    v16 = static TimingCurve.easingCurve1.getter(Strong);
    v17 = TimingCurve.controlPoint1.getter(v16);
    v19 = v18;
    v20 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v21 = v20(v12, v6);
    v22 = static TimingCurve.easingCurve1.getter(v21);
    v23 = TimingCurve.controlPoint2.getter(v22);
    v25 = v24;
    v20(v9, v6);
    v26 = swift_allocObject(&unk_1007354A0, 32, 7);
    *(_QWORD *)(v26 + 16) = a1;
    *(double *)(v26 + 24) = a2;
    v27 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    aBlock[4] = sub_1002D4280;
    v33 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_1007354B8;
    v28 = _Block_copy(aBlock);
    v29 = v33;
    swift_retain(a1);
    swift_release(v29);
    v30 = objc_msgSend(v27, "initWithDuration:controlPoint1:controlPoint2:animations:", v28, a3, v17, v19, v23, v25);
    _Block_release(v28);
    objc_msgSend(v30, "startAnimation");

  }
}

void sub_1002D3D64(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = Strong
       + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_navigationBarAppearanceProgress;
    *(double *)v6 = a2;
    *(_BYTE *)(v6 + 8) = 0;
    sub_100529370();

  }
}

void sub_1002D3DD8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(double, double);
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  _BYTE v18[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (v6)
    {
      v7 = v6;
      sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
      v8 = v5;
      v9 = v7;
      LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

      if ((v7 & 1) != 0)
      {
        if (objc_msgSend(a1, "isCancelled"))
        {
          v10 = sub_1002CF4D0();
          v11 = v10;
          v12 = *(void (**)(double, double))(v10 + 40);
          if (v12)
          {
            v13 = *(_QWORD *)(v10 + 48);
            swift_retain(v13);
            v12(1.0, 0.0);
            sub_100019310((uint64_t)v12, v13);
          }
          v14 = (void *)swift_unknownObjectWeakLoadStrong(v11 + 16);
          if (v14)
          {
            v15 = v14;
            v16 = objc_msgSend(v14, "navigationController");

            if (v16)
            {
              v17 = objc_msgSend(v16, "navigationBar");

              objc_msgSend(v17, "_setTitleOpacity:", 1.0);
            }
          }
          *(_BYTE *)(v11 + 88) = 0;
          swift_release(v11);
        }
      }
    }

  }
}

void sub_1002D3F70(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  _BYTE v16[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (objc_msgSend(a1, "isCancelled"))
    {
      v6 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
      if (v6)
      {
        v7 = v6;
        sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
        v8 = v5;
        v9 = v7;
        LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

        if ((v7 & 1) != 0
          && !*(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController])
        {
          v10 = objc_msgSend(v8, "navigationController");
          if (v10)
          {
            v11 = v10;
            v12 = objc_msgSend(v10, "navigationBar");

            if (v12)
            {

              v13 = sub_1002CF4D0();
              v14 = objc_msgSend(v8, "collectionView");
              if (!v14)
              {
                __break(1u);
                return;
              }
              v15 = v14;
              sub_100319094(v14);
              swift_release(v13);

            }
          }
        }
      }
    }

  }
}

void sub_1002D40F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_1002CF4D0();
    v6 = objc_msgSend(v4, "collectionView");
    if (v6)
    {
      v7 = v6;
      sub_100319094(v6);

      swift_release(v5);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002D418C(char *a1, uint64_t a2)
{
  id v3;

  if (*(_QWORD *)&a1[qword_100852E88] != a2)
  {
    *(_QWORD *)&a1[qword_100852E88] = a2;
    v3 = objc_msgSend(objc_allocWithZone((Class)UIStatusBarAnimationParameters), "init");
    objc_msgSend(v3, "setSkipFencing:", 1);
    objc_msgSend(a1, "_setNeedsStatusBarAppearanceUpdateWithAnimationParameters:", v3);

  }
}

uint64_t sub_1002D4220()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002D4244(double a1, double a2)
{
  uint64_t v2;

  sub_1002D3798(v2, a1, a2);
}

void sub_1002D424C(double a1, double a2)
{
  uint64_t v2;

  sub_1002D3A20(v2, a1, a2);
}

void sub_1002D4254(double a1, double a2)
{
  uint64_t v2;

  sub_1002D3B44(v2, a1, a2);
}

uint64_t sub_1002D425C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002D4280()
{
  uint64_t v0;

  sub_1002D3D64(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1002D428C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002D429C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002D42A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002D42C8()
{
  uint64_t v0;

  sub_1002D418C(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1002D42E0()
{
  unint64_t result;

  result = qword_100805F40;
  if (!qword_100805F40)
  {
    result = swift_getWitnessTable(&unk_100694FEC, &type metadata for ProductPageAppEntity);
    atomic_store(result, (unint64_t *)&qword_100805F40);
  }
  return result;
}

unint64_t sub_1002D4324()
{
  unint64_t result;

  result = qword_100805F98;
  if (!qword_100805F98)
  {
    result = swift_getWitnessTable(&unk_1006811C8, &type metadata for ProductPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_100805F98);
  }
  return result;
}

unint64_t sub_1002D4368()
{
  unint64_t result;

  result = qword_100805FA0;
  if (!qword_100805FA0)
  {
    result = swift_getWitnessTable(&unk_1006863E0, &type metadata for ProductPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_100805FA0);
  }
  return result;
}

uint64_t sub_1002D43AC(uint64_t a1)
{
  uint64_t v1;

  return AdvertRotationControllerProvider.viewControllerWillRemoveItems(_:asPartOf:)(a1, *(_QWORD *)(*(_QWORD *)(v1 + 16)+ OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph));
}

void sub_1002D43E8(uint64_t a1)
{
  sub_1002D19C8(a1);
}

void sub_1002D4408(uint64_t a1)
{
  sub_1002D1198(a1);
}

id sub_1002D442C(int a1)
{
  uint64_t v1;

  return sub_1002CEE00(a1, *(id *)(v1 + 16), &qword_100805FF0, &qword_100806008);
}

uint64_t sub_1002D4458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002CF048(a1, a2, *(_QWORD *)(v2 + 16), (void (*)(uint64_t *__return_ptr, id *))sub_100257FA8, (void (*)(uint64_t *__return_ptr, id *))sub_100257FA8);
}

id sub_1002D4480(uint64_t a1)
{
  return sub_1002CDE7C(a1, (void (*)(char *))sub_1003F16D0, &qword_100805FF0, &qword_100806008);
}

void sub_1002D44B8(uint64_t a1)
{
  uint64_t v1;

  sub_1002D40F8(a1, v1);
}

uint64_t sub_1002D44D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D0B24(a1, *(void **)(v1 + 16));
}

void sub_1002D44D8(uint64_t a1)
{
  uint64_t v1;

  sub_100340B18(a1, v1);
}

void sub_1002D44E0(void *a1)
{
  uint64_t v1;

  sub_1002D3F70(a1, v1);
}

void sub_1002D44E8(void *a1)
{
  uint64_t v1;

  sub_1002D3DD8(a1, v1);
}

id sub_1002D44F0(int a1)
{
  uint64_t v1;

  return sub_1002CEE00(a1, *(id *)(v1 + 16), &qword_100806020, &qword_100806038);
}

id sub_1002D4518(uint64_t a1)
{
  return sub_1002CDE7C(a1, (void (*)(char *))sub_1003F16D0, &qword_100806020, &qword_100806038);
}

uint64_t sub_1002D4550()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D4574()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1002D4598(int a1)
{
  uint64_t v1;

  return sub_1002CEE00(a1, *(id *)(v1 + 16), &qword_1007F9EC8, &qword_1007F9ED0);
}

uint64_t sub_1002D45C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002CF048(a1, a2, *(_QWORD *)(v2 + 16), (void (*)(uint64_t *__return_ptr, id *))sub_100257FA8, (void (*)(uint64_t *__return_ptr, id *))sub_100257C64);
}

id sub_1002D45E8(uint64_t a1)
{
  return sub_1002CDE7C(a1, (void (*)(char *))sub_1003F16D0, &qword_1007F9EC8, &qword_1007F9ED0);
}

id sub_1002D4620(int a1)
{
  uint64_t v1;

  return sub_1002CEE00(a1, *(id *)(v1 + 16), &qword_100806060, &qword_100806078);
}

id sub_1002D4648(uint64_t a1)
{
  return sub_1002CDE7C(a1, (void (*)(char *))sub_1003F16D0, &qword_100806060, &qword_100806078);
}

id sub_1002D4680(int a1)
{
  uint64_t v1;

  return sub_1002CEE00(a1, *(id *)(v1 + 16), &qword_100806088, &qword_1008060A0);
}

id sub_1002D46A8(uint64_t a1)
{
  return sub_1002CDE7C(a1, (void (*)(char *))sub_1003F16D0, &qword_100806088, &qword_1008060A0);
}

ValueMetadata *type metadata accessor for GameCenterPlayerProfileActionImplementation()
{
  return &type metadata for GameCenterPlayerProfileActionImplementation;
}

unint64_t sub_1002D47E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008060A8;
  if (!qword_1008060A8)
  {
    v1 = type metadata accessor for GameCenterPlayerProfileAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1008060A8);
  }
  return result;
}

uint64_t sub_1002D4828(uint64_t *a1, uint64_t a2)
{
  return sub_1002D4830(*a1, a2);
}

uint64_t sub_1002D4830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];
  uint64_t v65;

  v61 = a2;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v2);
  v60 = (uint64_t *)((char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DF3C(&qword_1007F78F0);
  v59 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v53 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowOrigin(0, v5);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  __chkstk_darwin(v7);
  v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowAnimationBehavior(0);
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowPresentationContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ActionMetrics(0, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for FlowPage(0, v24);
  __chkstk_darwin(v27);
  v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  (*(void (**)(char *, _QWORD))(v30 + 104))(v29, enum case for FlowPage.gameCenterPlayerProfile(_:));
  v31 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v26, 1, 1, v31);
  v32 = type metadata accessor for ReferrerData(0);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 1, 1, v32);
  v34 = GameCenterPlayerProfileAction.playerId.getter(v33);
  if (v35)
  {
    *((_QWORD *)&v63 + 1) = &type metadata for String;
    *(_QWORD *)&v62 = v34;
    *((_QWORD *)&v62 + 1) = v35;
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  static ActionMetrics.notInstrumented.getter(v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for FlowPresentationContext.infer(_:), v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v11, enum case for FlowAnimationBehavior.infer(_:), v55);
  v36 = v58;
  v37 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v56 + 104))(v58, enum case for FlowOrigin.inapp(_:), v57);
  v38 = static FlowActionPresentation.stackPush.getter(v37);
  v40 = v39;
  v41 = type metadata accessor for FlowAction(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(v64, 0, 0, 0, v29, v26, 0, 0, v22, &v62, v19, v15, v11, v36, 0, v38, v40);
  v44 = v60;
  v43 = v61;
  BaseObjectGraph.optional<A>(_:)(v60, v4, v4);
  v45 = v59;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48))(v44, 1, v4) == 1)
  {
    sub_100037038((uint64_t)v44);
    sub_10000DF3C(&qword_100803510);
    v46 = sub_1000559B4();
    v47 = swift_allocError(&type metadata for GeneralActionImplementationError, v46, 0, 0);
    *v48 = 1;
    v49 = Promise.__allocating_init(error:)(v47);
  }
  else
  {
    v50 = (uint64_t)v53;
    (*(void (**)(char *, _QWORD *, uint64_t))(v45 + 32))(v53, v44, v4);
    v49 = sub_10008EB74(v42, v43, v50);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v50, v4);
  }
  swift_release(v42);
  return v49;
}

uint64_t sub_1002D4CA4(uint64_t a1)
{
  return sub_1002D4D34(a1, qword_100853960, 0xD000000000000020, 0x8000000100642050);
}

uint64_t sub_1002D4CC8(uint64_t a1)
{
  return sub_1002D4D34(a1, qword_100853978, 0xD00000000000002CLL, 0x8000000100642080);
}

uint64_t sub_1002D4CEC(uint64_t a1)
{
  return sub_1002D4D34(a1, qword_100853990, 0xD00000000000001FLL, 0x8000000100642030);
}

uint64_t sub_1002D4D10(uint64_t a1)
{
  return sub_1002D4D34(a1, qword_1008539A8, 0xD00000000000001FLL, 0x8000000100642010);
}

uint64_t sub_1002D4D34(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  sub_100045464(v7, a2);
  sub_1000117A8(v7, (uint64_t)a2);
  return PreferenceKey.init(_:)(a3, a4, &type metadata for Bool);
}

uint64_t sub_1002D4D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(char *, uint64_t, __n128);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v0 = type metadata accessor for UUID(0);
  v53 = *(_QWORD *)(v0 - 8);
  v54 = v0;
  __chkstk_darwin(v0);
  v52 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - v7;
  if (qword_1007F1AD0 != -1)
    swift_once(&qword_1007F1AD0, sub_1002D4CA4);
  v9 = sub_1000117A8(v2, (uint64_t)qword_100853960);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, v9, v2);
  type metadata accessor for LocalPreferences(0);
  v11 = ((uint64_t (*)(void))static LocalPreferences.AppStoreKitInternal.getter)();
  v10(v5, (uint64_t)v8, v2);
  v12 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v51 = sub_1003E5E0C(0x6572502064656546, 0xED00007377656976, 0xD000000000000041, 0x80000001006420B0, 0, (uint64_t)v5, v11, v13);
  v14 = swift_release(v11);
  v15 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v15(v8, v2, v14);
  if (qword_1007F1AD8 != -1)
    swift_once(&qword_1007F1AD8, sub_1002D4CC8);
  v16 = sub_1000117A8(v2, (uint64_t)qword_100853978);
  v17 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v8, v16, v2);
  v18 = static LocalPreferences.AppStoreKitInternal.getter(v17);
  v10(v5, (uint64_t)v8, v2);
  v19 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v20 = sub_1003E5E0C(0xD000000000000017, 0x8000000100642100, 0xD000000000000030, 0x8000000100642120, 0, (uint64_t)v5, v18, v19);
  v21 = swift_release(v18);
  v15(v8, v2, v21);
  if (qword_1007F1AE0 != -1)
    swift_once(&qword_1007F1AE0, sub_1002D4CEC);
  v22 = sub_1000117A8(v2, (uint64_t)qword_100853990);
  v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v8, v22, v2);
  v24 = static LocalPreferences.AppStoreKitInternal.getter(v23);
  v10(v5, (uint64_t)v8, v2);
  v25 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v26 = sub_1003E5E0C(0xD000000000000011, 0x8000000100642160, 0xD000000000000067, 0x8000000100642180, 0, (uint64_t)v5, v24, v25);
  v27 = swift_release(v24);
  v15(v8, v2, v27);
  if (qword_1007F1AE8 != -1)
    swift_once(&qword_1007F1AE8, sub_1002D4D10);
  v28 = sub_1000117A8(v2, (uint64_t)qword_1008539A8);
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v8, v28, v2);
  v30 = static LocalPreferences.AppStoreKitInternal.getter(v29);
  v10(v5, (uint64_t)v8, v2);
  v31 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v32 = sub_1003E5E0C(0xD00000000000001DLL, 0x80000001006421F0, 0xD00000000000003DLL, 0x8000000100642210, 0, (uint64_t)v5, v30, v31);
  v33 = swift_release(v30);
  v15(v8, v2, v33);
  v34 = sub_10000DF3C(&qword_1007F5840);
  v35 = swift_allocObject(v34, 40, 7);
  *(_OWORD *)(v35 + 16) = xmmword_10066FE60;
  v36 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v36 + 16) = xmmword_10066F9C0;
  v37 = v51;
  *(_QWORD *)(v36 + 32) = v51;
  *(_QWORD *)(v36 + 40) = v20;
  *(_QWORD *)(v36 + 48) = v26;
  *(_QWORD *)(v36 + 56) = v32;
  v55 = v36;
  specialized Array._endMutation()(v36);
  v38 = v55;
  v39 = type metadata accessor for DebugSection();
  v40 = (_QWORD *)swift_allocObject(v39, 56, 7);
  swift_retain(v37);
  swift_retain(v20);
  swift_retain(v26);
  v41 = swift_retain(v32);
  v42 = v52;
  v43 = UUID.init()(v41);
  v44 = UUID.uuidString.getter(v43);
  v46 = v45;
  v47 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v42, v54);
  v40[2] = v44;
  v40[3] = v46;
  v40[4] = 0x7961646F54;
  v40[5] = 0xE500000000000000;
  v40[6] = v38;
  *(_QWORD *)(v35 + 32) = v40;
  v55 = v35;
  specialized Array._endMutation()(v47);
  v48 = v55;
  swift_release(v37);
  swift_release(v20);
  swift_release(v26);
  swift_release(v32);
  return v48;
}

id sub_1002D52E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodaySettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TodaySettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension13TodaySettings);
}

uint64_t sub_1002D533C()
{
  return sub_1002D5374(&qword_1007F1AE0, (uint64_t)qword_100853990, (uint64_t)sub_1002D4CEC);
}

uint64_t sub_1002D5358()
{
  return sub_1002D5374(&qword_1007F1AE8, (uint64_t)qword_1008539A8, (uint64_t)sub_1002D4D10);
}

uint64_t sub_1002D5374(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = (id)ASKBuildTypeGetCurrent(a1);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeDebug);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
    goto LABEL_14;
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_15:

    goto LABEL_16;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeConvergence);
  v9 = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v17 && v9 == v18)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_15;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v9, v17, v18, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
    goto LABEL_15;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeInternal);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
  {

    swift_bridgeObjectRelease_n(v24, 2);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);

    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v27);
    result = 0;
    if ((v33 & 1) == 0)
      return result;
  }
  v34 = type metadata accessor for LocalPreferences(0);
  v36 = static LocalPreferences.currentApplication.getter(v35);
  if (qword_1007F3498 != -1)
    swift_once(&qword_1007F3498, sub_10060B650);
  v37 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v38 = sub_1000117A8(v37, (uint64_t)qword_100857750);
  Preferences.subscript.getter((uint64_t *)((char *)&v39 + 1), v38, v34, &type metadata for Bool, &protocol witness table for LocalPreferences);
  swift_release(v36);
  if (BYTE1(v39) == 2 || (v39 & 0x100) == 0)
    return 0;
LABEL_16:
  v28 = type metadata accessor for LocalPreferences(0);
  v29 = static LocalPreferences.AppStoreKitInternal.getter();
  if (*a1 != -1)
    swift_once(a1, a3);
  v30 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v31 = sub_1000117A8(v30, a2);
  Preferences.subscript.getter(&v39, v31, v28, &type metadata for Bool, &protocol witness table for LocalPreferences);
  swift_release(v29);
  return v39 & 1;
}

uint64_t sub_1002D5620()
{
  return sub_1002D5374(&qword_1007F1AD8, (uint64_t)qword_100853978, (uint64_t)sub_1002D4CC8);
}

uint64_t sub_1002D563C()
{
  return sub_1002D5374(&qword_1007F1AD0, (uint64_t)qword_100853960, (uint64_t)sub_1002D4CA4);
}

uint64_t sub_1002D5658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  __chkstk_darwin(v4);
  v61 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter(v6);
  v62 = sub_10000DF3C(&qword_1007F5840);
  v7 = swift_allocObject(v62, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100680D30;
  v8 = Locale.identifier.getter((__n128)xmmword_100680D30);
  v10 = v9;
  v11 = type metadata accessor for InfoDebugSetting();
  v12 = (_QWORD *)swift_allocObject(v11, 88, 7);
  v12[7] = 0x696669746E656449;
  v12[8] = 0xEA00000000007265;
  v12[9] = v8;
  v12[10] = v10;
  v13 = swift_bridgeObjectRetain(v10);
  v14 = UUID.init()(v13);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19 = v0;
  v18(v3, v0);
  v65 = v15;
  v66 = v17;
  AnyHashable.init<A>(_:)(&v65, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(v7 + 32) = v12;
  v20 = swift_allocObject(v11, 88, 7);
  *(_QWORD *)(v20 + 56) = 0xD000000000000013;
  *(_QWORD *)(v20 + 64) = 0x8000000100642280;
  *(_OWORD *)(v20 + 72) = xmmword_100682980;
  v21 = UUID.init()((__n128)xmmword_100682980);
  v22 = UUID.uuidString.getter(v21);
  v24 = v23;
  v18(v3, v0);
  v65 = v22;
  v66 = v24;
  AnyHashable.init<A>(_:)(&v65, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v7 + 40) = v20;
  v25 = v61;
  v27 = Locale.paragraphLineHeightMultiple.getter(v26);
  v28 = Double.description.getter(v27);
  v30 = v29;
  v31 = (_QWORD *)swift_allocObject(v11, 88, 7);
  v31[7] = 0xD000000000000014;
  v31[8] = 0x80000001006422A0;
  v31[9] = v28;
  v31[10] = v30;
  v32 = swift_bridgeObjectRetain(v30);
  v33 = UUID.init()(v32);
  v34 = UUID.uuidString.getter(v33);
  v36 = v35;
  v18(v3, v19);
  v65 = v34;
  v66 = v36;
  AnyHashable.init<A>(_:)(&v65, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v30);
  *(_QWORD *)(v7 + 48) = v31;
  v38 = Locale.prefersSmallerText.getter(v37);
  if ((v38 & 1) != 0)
    v39 = 1702195828;
  else
    v39 = 0x65736C6166;
  if ((v38 & 1) != 0)
    v40 = 0xE400000000000000;
  else
    v40 = 0xE500000000000000;
  v41 = (_QWORD *)swift_allocObject(v11, 88, 7);
  v41[7] = 0xD000000000000014;
  v41[8] = 0x80000001006422C0;
  v41[9] = v39;
  v41[10] = v40;
  v42 = swift_bridgeObjectRetain(v40);
  v43 = UUID.init()(v42);
  v44 = UUID.uuidString.getter(v43);
  v46 = v45;
  v18(v3, v19);
  v65 = v44;
  v66 = v46;
  AnyHashable.init<A>(_:)(&v65, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v40);
  *(_QWORD *)(v7 + 56) = v41;
  v47 = type metadata accessor for BoolUserDefaultsDebugSetting();
  swift_allocObject(v47, 97, 7);
  v48 = sub_1005FC4AC(0xD000000000000012, 0x80000001006422E0, 0, 0xD00000000000001DLL, 0x8000000100642300, 0);
  *(_QWORD *)(v7 + 64) = v48;
  v65 = v7;
  specialized Array._endMutation()(v48);
  v49 = v65;
  v50 = swift_allocObject(v62, 40, 7);
  *(_OWORD *)(v50 + 16) = xmmword_10066FE60;
  v51 = type metadata accessor for DebugSection();
  v52 = (_QWORD *)swift_allocObject(v51, 56, 7);
  v54 = UUID.init()(v53);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  v58 = ((uint64_t (*)(char *, uint64_t))v18)(v3, v19);
  v52[2] = v55;
  v52[3] = v57;
  v52[4] = 0x6F726665726F7453;
  v52[5] = 0xEB0000000073746ELL;
  v52[6] = v49;
  *(_QWORD *)(v50 + 32) = v52;
  v65 = v50;
  specialized Array._endMutation()(v58);
  v59 = v65;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v25, v64);
  return v59;
}

id sub_1002D5AE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocaleSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LocaleSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension14LocaleSettings);
}

id sub_1002D5C4C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUIViewHostingCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SwiftUIViewHostingCell()
{
  return objc_opt_self(_TtC22SubscribePageExtension22SwiftUIViewHostingCell);
}

uint64_t sub_1002D5C9C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  _QWORD v20[3];

  v4 = sub_10000DF3C(&qword_1007FAAC0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MediumLockupLayout.Metrics(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, "traitCollection", v11);
  sub_1001FB110((uint64_t)v13, v15);

  MediumLockupLayout.Metrics.artworkSize.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v20[0] = a1;
  v16 = Conditional.evaluate(with:)(v20, v4);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v16);
  ComponentPrefetchSizing.init(size:contentMode:)(*(double *)&v20[1], *(double *)&v20[2]);
  v17 = type metadata accessor for ComponentPrefetchSizing(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 1, v17);
}

uint64_t sub_1002D5DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  char *v7;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  double v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  void *v50;
  id v51;
  NSString v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSString v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  double v106;
  __n128 v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  char v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  char v135;
  uint64_t v136;
  id v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  __n128 v141;
  uint64_t v142;
  char v143;
  char v144;
  void *v145;
  id v146;
  NSString v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  void *v151;
  void *v152;
  void *v153;
  uint64_t v154;
  double v155;
  uint64_t v156;
  NSString v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  unsigned __int8 v163;
  uint64_t v164;
  unint64_t v165;
  _BOOL8 v166;
  uint64_t v167;
  unint64_t v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  unsigned int (*v173)(uint64_t, uint64_t, uint64_t);
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  __n128 v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  id v181;
  id v182;
  uint64_t v183;
  _BOOL8 v184;
  uint64_t result;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  __int128 v218;
  __int128 v219;
  uint64_t v220;
  char v221[8];
  CGRect v222;
  CGRect v223;

  v7 = v6;
  v216 = a6;
  v197 = a4;
  v212 = a3;
  ObjectType = swift_getObjectType();
  v10 = sub_10000DF3C((uint64_t *)&unk_1007FBA60);
  __chkstk_darwin(v10);
  v211 = (char *)&v188 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v210 = (char *)&v188 - v13;
  v14 = type metadata accessor for AdamId(0);
  v15 = __chkstk_darwin(v14);
  v192 = (char *)&v188 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for OfferLabelStyle(0, v15);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v194 = (char *)&v188 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v193 = (char *)&v188 - v19;
  v20 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v20);
  v207 = (char *)&v188 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v203 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v204 = (char *)&v188 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v208 = *(_QWORD *)(v23 - 8);
  v209 = v23;
  __chkstk_darwin(v23);
  v206 = (char *)&v188 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v26 = __chkstk_darwin(v25);
  v201 = (char *)&v188 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v26);
  v198 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v199 = (char *)&v188 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v29);
  v202 = (char *)&v188 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for FloatingPointRoundingRule(0);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v189 = (char *)&v188 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DF3C(&qword_100806180);
  __chkstk_darwin(v32);
  v34 = (char *)&v188 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for ComponentLayoutOptions(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v188 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Separator(0);
  v214 = *(_QWORD *)(v39 - 8);
  v215 = v39;
  v40 = __chkstk_darwin(v39);
  v42 = (char *)&v188 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = a1;
  v43 = Lockup.heading.getter(v40);
  v213 = v42;
  if (v44)
  {
    v46 = v44;
    v47 = HIBYTE(v44) & 0xF;
    if ((v44 & 0x2000000000000000) == 0)
      v47 = v43 & 0xFFFFFFFFFFFFLL;
    if (v47)
    {
      v188 = ObjectType;
      v48 = sub_1000117FC();
      v49 = (void *)static UIColor.primaryText.getter(v48);
      sub_1001FCB50(1, (uint64_t)v49);

      v50 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_headingLabel];
      if (v50)
      {
        v51 = v50;
        v52 = String._bridgeToObjectiveC()();
        objc_msgSend(v51, "setText:", v52, swift_bridgeObjectRelease(v46).n128_f64[0]);

      }
      else
      {
        swift_bridgeObjectRelease(v46);
      }
      v42 = v213;
      goto LABEL_12;
    }
    *(_QWORD *)&v45 = swift_bridgeObjectRelease(v44).n128_u64[0];
  }
  v53 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_headingLabel];
  if (v53)
    objc_msgSend(v53, "setHidden:", 1, v45);
LABEL_12:
  v54 = sub_1001FC030(v216, (uint64_t)v42);
  static ComponentLayoutOptions.separatorHidden.getter(v54);
  v55 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v56 = dispatch thunk of SetAlgebra.isSuperset(of:)(v38, v35, v55);
  v57 = *(void (**)(char *, uint64_t))(v36 + 8);
  v57(v38, v35);
  if ((v56 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v214 + 56))(v34, 1, 1, v215);
    v58 = (uint64_t)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_separator];
    swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_separator], &v218, 33, 0);
    sub_100244B10((uint64_t)v34, v58);
    swift_endAccess(&v218);
    sub_1001FC320();
    v59 = sub_100011088((uint64_t)v34, &qword_100806180);
    static ComponentLayoutOptions.fixedHeightContainer.getter(v59);
    LOBYTE(v58) = dispatch thunk of SetAlgebra.isSuperset(of:)(v38, v35, v55);
    v57(v38, v35);
    v60 = objc_msgSend(v7, "contentView");
    v61 = v60;
    if ((v58 & 1) != 0)
    {
      objc_msgSend(v60, "layoutMargins");
      objc_msgSend(v61, "setLayoutMargins:");

    }
    else
    {
      Separator.verticalOutset.getter(&v218, v60);
      v67 = *((_QWORD *)&v219 + 1);
      v68 = v220;
      sub_100011064(&v218, *((uint64_t *)&v219 + 1));
      v69 = v189;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v67);
      AnyDimension.value(in:rounded:)(v216, v69, v67, v68);
      (*(void (**)(char *, uint64_t))(v190 + 8))(v69, v191);
      objc_msgSend(v61, "layoutMargins");
      objc_msgSend(v61, "setLayoutMargins:");

      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v218);
    }
  }
  else
  {
    v64 = v214;
    v63 = v215;
    (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v34, v42, v215);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v34, 0, 1, v63);
    v65 = (uint64_t)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_separator];
    swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_separator], &v218, 33, 0);
    sub_100244B10((uint64_t)v34, v65);
    swift_endAccess(&v218);
    sub_1001FC320();
    sub_100011088((uint64_t)v34, &qword_100806180);
    v66 = objc_msgSend(v7, "contentView");
    objc_msgSend(v66, "layoutMargins");
    objc_msgSend(v66, "setLayoutMargins:");

  }
  v70 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_titleLabel];
  v72 = Lockup.title.getter(v62).n128_u64[0];
  if (v71)
  {
    v73 = v71;
    v74 = String._bridgeToObjectiveC()();
    v72 = swift_bridgeObjectRelease(v73).n128_u64[0];
  }
  else
  {
    v74 = 0;
  }
  objc_msgSend(v70, "setText:", v74, *(double *)&v72);

  v76 = Lockup.offerDisplayProperties.getter(v75);
  v78 = Lockup.buttonAction.getter(v77);
  v79 = v198;
  v80 = v199;
  v81 = v200;
  (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v199, enum case for OfferButtonPresenterViewAlignment.left(_:), v200);
  v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
  v83 = v201;
  v82(v201, 1, 1, v81);
  v84 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  v85 = (uint64_t)v202;
  AccessibilityConditional.init(value:axValue:)(v80, v83, v81, v84);
  v86 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 0, 1, v86);
  v87 = v203;
  v88 = v204;
  v89 = v205;
  (*(void (**)(char *, _QWORD, uint64_t))(v203 + 104))(v204, enum case for OfferButtonSubtitlePosition.right(_:), v205);
  v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
  v91 = v207;
  v90(v207, 1, 1, v89);
  v92 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  v93 = (uint64_t)v206;
  AccessibilityConditional.init(value:axValue:)(v88, v91, v89, v92);
  sub_10013AB60(v76, v78, 0, v85, v93, v212, 0, 0);
  swift_release(v78);
  v94 = swift_release(v76);
  (*(void (**)(uint64_t, uint64_t, __n128))(v208 + 8))(v93, v209, v94);
  v95 = sub_100011088(v85, (uint64_t *)&unk_1007F7710);
  v96 = Lockup.offerDisplayProperties.getter(v95);
  if (!v96)
    goto LABEL_23;
  v97 = v96;
  v98 = v193;
  OfferDisplayProperties.offerLabelStyle.getter(v96);
  v99 = v195;
  v100 = v194;
  v101 = v196;
  (*(void (**)(char *, _QWORD, uint64_t))(v195 + 104))(v194, enum case for OfferLabelStyle.none(_:), v196);
  v102 = sub_10000E99C(&qword_1007F4E80, (uint64_t (*)(uint64_t))&type metadata accessor for OfferLabelStyle, (uint64_t)&protocol conformance descriptor for OfferLabelStyle);
  v103 = dispatch thunk of static Equatable.== infix(_:_:)(v98, v100, v101, v102);
  v104 = *(void (**)(char *, uint64_t))(v99 + 8);
  v104(v100, v101);
  v104(v98, v101);
  if ((v103 & 1) != 0)
  {
    swift_release(v97);
LABEL_23:
    v218 = 0u;
    v219 = 0u;
    v105 = (uint64_t)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabelPresenter];
    swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabelPresenter], v221, 33, 0);
    sub_1000FECDC((uint64_t)&v218, v105);
    swift_endAccess(v221);
    sub_1002D7000(0, 0);
LABEL_30:
    v127 = OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_headingLabel;
    v128 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_headingLabel];
    if (v128 && (objc_msgSend(v128, "isHidden", v106) & 1) == 0 && (v129 = *(void **)&v7[v127]) != 0)
      v130 = objc_msgSend(v129, "hasContent");
    else
      v130 = 0;
    v131 = (uint64_t)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabelPresenter];
    swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabelPresenter], v221, 0, 0);
    sub_100175D94(v131, (uint64_t)&v218);
    v132 = *((_QWORD *)&v219 + 1);
    sub_100011088((uint64_t)&v218, &qword_1007F6E90);
    v133 = v216;
    v134 = objc_msgSend(v216, "traitCollection");
    v135 = UITraitCollection.isSizeClassCompact.getter(v134);

    if ((v135 & 1) != 0)
    {
      v137 = objc_msgSend(v133, "traitCollection");
      v138 = UITraitCollection.prefersAccessibilityLayouts.getter(v137);

      Lockup.tertiaryTitle.getter(v139);
      if (!v140)
      {
        v144 = v138 ^ 1;
        goto LABEL_53;
      }
      v142 = v140;
      if ((v138 & 1) == 0)
      {
        if (v132)
          v143 = 1;
        else
          v143 = v130;
        v144 = 1;
        if ((v143 & 1) == 0)
        {
LABEL_42:
          sub_1001FCD88();
          v145 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_tertiaryTitleLabel];
          if (v145)
          {
            v146 = v145;
            v147 = String._bridgeToObjectiveC()();
            objc_msgSend(v146, "setText:", v147, swift_bridgeObjectRelease(v142).n128_f64[0]);

          }
          else
          {
            v141 = swift_bridgeObjectRelease(v142);
          }
          goto LABEL_57;
        }
        goto LABEL_50;
      }
    }
    else
    {
      Lockup.tertiaryTitle.getter(v136);
      if (!v148)
      {
        v144 = 0;
        goto LABEL_53;
      }
      v142 = v148;
    }
    v144 = 0;
    if (v132)
      v149 = v130;
    else
      v149 = 0;
    if ((v149 & 1) == 0)
      goto LABEL_42;
LABEL_50:
    v141 = swift_bridgeObjectRelease(v142);
LABEL_53:
    v150 = OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_tertiaryTitleLabel;
    v151 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_tertiaryTitleLabel];
    if (v151)
    {
      objc_msgSend(v151, "setHidden:", 1, v141.n128_f64[0]);
      v152 = *(void **)&v7[v150];
      if (v152)
        objc_msgSend(v152, "setText:", 0);
    }
LABEL_57:
    v153 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_subtitleLabel];
    Lockup.subtitle.getter(v141);
    if (v154)
    {
      v156 = v154;
      v157 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v155 = swift_bridgeObjectRelease(v156).n128_u64[0];
    }
    else
    {
      v157 = 0;
    }
    objc_msgSend(v153, "setText:", v157, v155);

    v158 = OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_tertiaryTitleLabel;
    v159 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_tertiaryTitleLabel];
    if (!v159 || (objc_msgSend(v159, "isHidden") & 1) != 0)
    {
      if (v130)
      {
        v160 = (uint64_t)v210;
        if (v132)
        {
LABEL_64:
          v161 = 2;
LABEL_80:
          v164 = 0;
          goto LABEL_81;
        }
LABEL_66:
        v161 = 1;
        goto LABEL_80;
      }
      v160 = (uint64_t)v210;
      if (v132)
        goto LABEL_66;
      goto LABEL_79;
    }
    v162 = *(void **)&v7[v158];
    if (!v162)
    {
      v160 = (uint64_t)v210;
      if (v130)
      {
        if (v132)
          goto LABEL_64;
        goto LABEL_66;
      }
      if (v132)
        goto LABEL_66;
LABEL_79:
      v161 = 0;
      goto LABEL_80;
    }
    v163 = objc_msgSend(v162, "hasContent");
    v160 = (uint64_t)v210;
    if ((v130 & 1) != 0)
    {
      if (!v132)
      {
        v161 = 1;
        v164 = 1;
        if ((v163 & 1) == 0)
          goto LABEL_80;
LABEL_81:
        if (objc_msgSend(v153, "hasContent"))
        {
          v165 = v161 + v164;
          if ((v144 & 1) != 0)
          {
            if (v165)
              goto LABEL_84;
            v166 = 0;
          }
          else
          {
            v166 = v165 > 1;
          }
LABEL_87:
          v167 = Lockup.subtitleTextColor.getter(objc_msgSend(v153, "setHidden:", v166));
          if (!v167)
          {
            v168 = sub_1000117FC();
            v167 = static UIColor.secondaryText.getter(v168);
          }
          v169 = (void *)v167;
          objc_msgSend(v153, "setTextColor:", v167);

          v170 = objc_msgSend(v153, "layer");
          Lockup.subtitleTextFilter.getter();
          v171 = type metadata accessor for TitleEffectFilterType(0);
          v172 = *(_QWORD *)(v171 - 8);
          v173 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48);
          if (v173(v160, 1, v171) == 1)
          {
            sub_100011088(v160, (uint64_t *)&unk_1007FBA60);
          }
          else
          {
            TitleEffectFilterType.compositingFilter.getter(&v218);
            (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v160, v171);
            v174 = *((_QWORD *)&v219 + 1);
            if (*((_QWORD *)&v219 + 1))
            {
              v175 = sub_100011064(&v218, *((uint64_t *)&v219 + 1));
              v176 = *(_QWORD *)(v174 - 8);
              v177 = __chkstk_darwin(v175);
              v179 = (char *)&v188 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *, __n128))(v176 + 16))(v179, v177);
              v180 = _bridgeAnythingToObjectiveC<A>(_:)(v179, v174);
              (*(void (**)(char *, uint64_t))(v176 + 8))(v179, v174);
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v218);
LABEL_94:
              objc_msgSend(v170, "setCompositingFilter:", v180);

              v181 = objc_msgSend(v7, "contentView", swift_unknownObjectRelease(v180).n128_f64[0]);
              v182 = objc_msgSend(v181, "layer");

              v183 = (uint64_t)v211;
              Lockup.subtitleTextFilter.getter();
              v184 = v173(v183, 1, v171) == 1;
              sub_100011088(v183, (uint64_t *)&unk_1007FBA60);
              objc_msgSend(v182, "setAllowsGroupBlending:", v184);

              objc_msgSend(v7, "setNeedsLayout");
              return (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v213, v215);
            }
          }
          v180 = 0;
          goto LABEL_94;
        }
LABEL_84:
        v166 = 1;
        goto LABEL_87;
      }
      if ((v163 & 1) == 0)
        goto LABEL_64;
      v161 = 2;
    }
    else
    {
      if (v132)
      {
        if ((v163 & 1) != 0)
        {
          v164 = 1;
          v161 = 1;
          goto LABEL_81;
        }
        goto LABEL_66;
      }
      v161 = 0;
      if ((v163 & 1) == 0)
        goto LABEL_80;
    }
    v164 = 1;
    goto LABEL_81;
  }
  v107 = swift_retain(v97);
  v108 = v192;
  OfferDisplayProperties.adamId.getter(v107);
  v109 = v212;
  v110 = v212 + qword_100854060;
  v111 = *(_QWORD *)(v212 + qword_100854060);
  if (v111)
  {
    v112 = type metadata accessor for ASKBagContract(0);
    v113 = *(_QWORD *)(v109 + qword_100854070);
    if (v113)
    {
      v114 = *(_QWORD *)(v110 + 8);
      swift_unknownObjectRetain(v111);
      v115 = swift_retain(v113);
      v116 = ASKBagContract.arePreordersCancellable.getter(v115);
      v117 = swift_release(v113);
      v118 = type metadata accessor for OfferLabelPresenter(0, v117);
      swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
      v119 = OfferLabelPresenter.init(offerDisplayProperties:adamId:appStateController:arePreordersCancellable:)(v97, v108, v111, v114, v116 & 1);
      *((_QWORD *)&v219 + 1) = v118;
      *(_QWORD *)&v218 = v119;
      v120 = (uint64_t)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabelPresenter];
      swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabelPresenter], v221, 33, 0);
      swift_retain(v119);
      sub_1000FECDC((uint64_t)&v218, v120);
      swift_endAccess(v221);
      objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabel], "frame");
      v223.origin.x = 0.0;
      v223.origin.y = 0.0;
      v223.size.width = 0.0;
      v223.size.height = 0.0;
      if (CGRectEqualToRect(v222, v223))
      {
        v121 = (void *)objc_opt_self(UIView);
        v122 = objc_msgSend(v121, "areAnimationsEnabled");
        objc_msgSend(v121, "setAnimationsEnabled:", 0);
        v123 = sub_10000E99C(&qword_100806188, type metadata accessor for MediumLockupCollectionViewCell, (uint64_t)"a4\v");
        swift_unknownObjectRetain(v7);
        OfferLabelPresenter.view.setter(v124, v123);
        objc_msgSend(v7, "layoutIfNeeded");
        objc_msgSend(v121, "setAnimationsEnabled:", v122);
      }
      else
      {
        v125 = sub_10000E99C(&qword_100806188, type metadata accessor for MediumLockupCollectionViewCell, (uint64_t)"a4\v");
        swift_unknownObjectRetain(v7);
        OfferLabelPresenter.view.setter(v126, v125);
      }
      swift_release(v119);
      *(_QWORD *)&v106 = swift_release(v97).n128_u64[0];
      goto LABEL_30;
    }
  }
  else
  {
    v186 = sub_10000DF3C(&qword_1007FDEA0);
    v112 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v186);
    __break(1u);
  }
  v187 = v112;
  swift_unknownObjectRetain(v111);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v187);
  __break(1u);
  return result;
}

id sub_1002D7000(uint64_t a1, NSString a2)
{
  char *v2;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  char v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_offerLabel];
  result = objc_msgSend(v5, "text");
  if (!result)
  {
    if (!a2)
      return result;
    goto LABEL_10;
  }
  v7 = result;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v10 = v9;

  if (!a2)
  {
    swift_bridgeObjectRelease(v10);
    goto LABEL_12;
  }
  if (v8 == a1 && v10 == a2)
    return (id)swift_bridgeObjectRelease(v10);
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, a1, a2, 0);
  result = (id)swift_bridgeObjectRelease(v10);
  if ((v12 & 1) == 0)
  {
LABEL_10:
    a2 = String._bridgeToObjectiveC()();
LABEL_12:
    objc_msgSend(v5, "setText:", a2);

    v13 = objc_msgSend(v5, "text");
    if (v13)
    {
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = static String.isNilOrEmpty(_:)(v15, v17);
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v5, "setHidden:", v18 & 1);
    return objc_msgSend(v2, "setNeedsLayout");
  }
  return result;
}

double sub_1002D718C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1002D72EC(a1, a2, a5, a7, a8);
}

uint64_t sub_1002D719C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1002D5DF8(*a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1002D71A8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  __n128 v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;

  v9 = type metadata accessor for Separator(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1001FC030(a7, (uint64_t)v12);
  v13 = Separator.height(in:)(a7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  PageTraitEnvironment.pageColumnWidth.getter();
  sub_1001FD300(a7, v14, a2);
  v16 = v15;
  v17 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  PageTraitEnvironment.pageColumnWidth.getter();
  v18 = objc_msgSend(v17, "absoluteDimension:");
  v19 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(v13, v16);

  return v19;
}

double sub_1002D72EC(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  double v23;
  __n128 v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v32 = a4;
  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ComponentLayoutOptions(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Separator(0);
  v15 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v18 = sub_1001FC030(a5, (uint64_t)v17);
  static ComponentLayoutOptions.separatorHidden.getter(v18);
  v19 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v20 = dispatch thunk of SetAlgebra.isSuperset(of:)(v14, v11, v19);
  v21 = ((__n128 (*)(char *, uint64_t))*(_QWORD *)(v12 + 8))(v14, v11);
  v21.n128_f64[0] = a1;
  v23 = sub_1001FD300(a5, v21, a2);
  v25 = v23;
  if ((v20 & 1) != 0)
  {
    Separator.verticalOutset.getter(v34, v22);
    v26 = v35;
    v27 = v36;
    sub_100011064(v34, v35);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v26);
    AnyDimension.value(in:rounded:)(a5, v10, v26, v27);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v33);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v34);
  }
  else
  {
    v25 = CGSize.adding(separator:in:)(v17, a5, v23, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v33);
  }
  return v25;
}

double *sub_1002D7540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  double *v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double *v25;

  v23 = a2;
  v3 = type metadata accessor for Shelf.ContentType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = _swiftEmptyArrayStorage;
  v25 = _swiftEmptyArrayStorage;
  KeyPath = swift_getKeyPath(&unk_100682AE0);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v13 = swift_getKeyPath(&unk_100682B10);
  ReadOnlyLens.subscript.getter(v13, v7);
  v14 = swift_release(v13);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == enum case for Shelf.ContentType.productBadge(_:))
  {
    v15 = sub_1002D772C(a1, v23);
    sub_100019D30(v15);
  }
  else
  {
    v24 = _swiftEmptyArrayStorage;
    v16 = sub_100481C8C(a1, v23);
    if (v16)
    {
      v17 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized Array._endMutation()(v20);

      v11 = v24;
    }
    sub_100019D30((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v25;
}

unint64_t sub_1002D772C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  int v88;
  uint64_t *v89;
  int v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  void *v96;
  id v97;
  uint64_t v98;
  __n128 v99;
  void *v100;
  double v101;
  id v102;
  id v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  double v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  id v112;
  Swift::String v113;
  Swift::String v114;
  void *object;
  __n128 v116;
  uint64_t v117;
  id v118;
  NSString v119;
  id v120;
  id v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  double v128;
  id v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  id v133;
  Swift::String v134;
  Swift::String v135;
  void *v136;
  __n128 v137;
  uint64_t v138;
  id v139;
  NSString v140;
  id v141;
  id v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  double *v146;
  id v147;
  id v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (*v160)(char *, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  unint64_t v185;

  v177 = a2;
  v3 = type metadata accessor for ComponentSeparator.Position(0);
  v175 = *(_QWORD *)(v3 - 8);
  v176 = v3;
  __chkstk_darwin(v3);
  v174 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageGrid(0);
  v172 = *(_QWORD *)(v5 - 8);
  v173 = v5;
  __chkstk_darwin(v5);
  v171 = (char **)((char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v169 = type metadata accessor for Shelf.ContentType(0);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v154 = (char *)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_10000DF3C((uint64_t *)&unk_100810B10);
  __chkstk_darwin(v165);
  v170 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v9);
  v157 = (uint64_t)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v166 = (char *)&v153 - v12;
  __chkstk_darwin(v13);
  v167 = (char *)&v153 - v14;
  v15 = type metadata accessor for Uber.Style(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v153 = (char *)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_10000DF3C(&qword_100806280);
  __chkstk_darwin(v161);
  v178 = (uint64_t)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C(&qword_100806288);
  __chkstk_darwin(v19);
  v155 = (uint64_t)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v153 - v22;
  __chkstk_darwin(v24);
  v179 = (uint64_t)&v153 - v25;
  v26 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v26);
  v164 = (char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char **)((char *)&v153 - v29);
  v31 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v31);
  v163 = (uint64_t)&v153 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v153 - v34;
  v185 = (unint64_t)_swiftEmptyArrayStorage;
  KeyPath = swift_getKeyPath(&unk_100682B40);
  v180 = a1;
  ItemLayoutContext.subscript.getter(v30);
  swift_release(KeyPath);
  v162 = v26;
  v37 = (uint64_t)v30 + *(int *)(v26 + 48);
  sub_10006C29C((uint64_t)v30, (uint64_t)v35, &qword_1007F4A68);
  v38 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v39 = *(_QWORD *)(v38 - 8);
  v160 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v40 = v160(v35, 1, v38);
  v159 = v38;
  if (v40 == 1)
  {
    sub_100011088(v37, &qword_1007F4A68);
    sub_100011088((uint64_t)v35, &qword_1007F4A68);
    v182 = 0u;
    v183 = 0u;
    v184 = 0;
    v41 = v179;
    v42 = v180;
LABEL_10:
    sub_100011088((uint64_t)&v182, (uint64_t *)&unk_1008027C0);
    goto LABEL_11;
  }
  v43 = swift_getKeyPath(&unk_100682BD0);
  ReadOnlyLens.subscript.getter(v43, v38);
  v44 = swift_release(v43);
  v45 = v181;
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v35, v38, v44);
  if (*(_QWORD *)(v45 + 16))
  {
    sub_100011020(v45 + 32, (uint64_t)&v182);
  }
  else
  {
    v184 = 0;
    v182 = 0u;
    v183 = 0u;
  }
  v41 = v179;
  v42 = v180;
  swift_bridgeObjectRelease(v45);
  sub_100011088(v37, &qword_1007F4A68);
  if (!*((_QWORD *)&v183 + 1))
    goto LABEL_10;
  v46 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v48 = type metadata accessor for ProductTopLockup(0, v47);
  v49 = swift_dynamicCast(&v181, &v182, v46, v48, 6);
  if ((v49 & 1) != 0)
  {
    v50 = v181;
    v51 = ProductTopLockup.uber.getter(v49);
    swift_release(v50);
    if (v51)
    {
      v52 = v39;
      v53 = swift_retain(v51);
      Uber.style.getter(v53);
      v158 = v51;
      v54 = swift_release(v51);
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v55)(v41, 0, 1, v15, v54);
      goto LABEL_12;
    }
  }
LABEL_11:
  v52 = v39;
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v55(v41, 1, 1, v15);
  v158 = 0;
LABEL_12:
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v23, enum case for Uber.Style.inline(_:), v15);
  v55((uint64_t)v23, 0, 1, v15);
  v56 = v178;
  v57 = v178 + *(int *)(v161 + 48);
  sub_1000194E4(v41, v178, &qword_100806288);
  sub_1000194E4((uint64_t)v23, v57, &qword_100806288);
  v58 = v16;
  v59 = v41;
  v60 = v58;
  v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  v62 = v61(v56, 1, v15);
  v156 = v52;
  if (v62 == 1)
  {
    sub_100011088((uint64_t)v23, &qword_100806288);
    sub_100011088(v59, &qword_100806288);
    v63 = v61(v57, 1, v15);
    if (v63 == 1)
      v64 = &qword_100806288;
    else
      v64 = &qword_100806280;
    if (v63 == 1)
      v65 = -1;
    else
      v65 = 0;
    LODWORD(v161) = v65;
  }
  else
  {
    v66 = v155;
    sub_1000194E4(v56, v155, &qword_100806288);
    if (v61(v57, 1, v15) == 1)
    {
      sub_100011088((uint64_t)v23, &qword_100806288);
      sub_100011088(v179, &qword_100806288);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v66, v15);
      LODWORD(v161) = 0;
      v64 = &qword_100806280;
    }
    else
    {
      v67 = v60;
      v68 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
      v69 = v153;
      v68(v153, v57, v15);
      v70 = sub_10000E99C((unint64_t *)&qword_100806290, (uint64_t (*)(uint64_t))&type metadata accessor for Uber.Style, (uint64_t)&protocol conformance descriptor for Uber.Style);
      LODWORD(v161) = dispatch thunk of static Equatable.== infix(_:_:)(v66, v69, v15, v70);
      v71 = v66;
      v72 = *(void (**)(char *, uint64_t))(v67 + 8);
      v56 = v178;
      v72(v69, v15);
      v64 = &qword_100806288;
      sub_100011088((uint64_t)v23, &qword_100806288);
      sub_100011088(v179, &qword_100806288);
      v72((char *)v71, v15);
    }
  }
  v73 = (uint64_t)v170;
  v74 = v164;
  sub_100011088(v56, v64);
  v75 = swift_getKeyPath(&unk_100682B40);
  ItemLayoutContext.subscript.getter(v74);
  swift_release(v75);
  v76 = v163;
  sub_10006C29C((uint64_t)v74 + *(int *)(v162 + 48), v163, &qword_1007F4A68);
  v77 = v159;
  v78 = v160((char *)v76, 1, v159);
  v79 = v169;
  v80 = v168;
  v81 = (uint64_t)v167;
  if (v78 == 1)
  {
    sub_100011088((uint64_t)v74, &qword_1007F4A68);
    sub_100011088(v76, &qword_1007F4A68);
    v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
    v82(v81, 1, 1, v79);
  }
  else
  {
    v83 = swift_getKeyPath(&unk_100682B10);
    ReadOnlyLens.subscript.getter(v83, v77);
    v84 = swift_release(v83);
    (*(void (**)(uint64_t, uint64_t, __n128))(v156 + 8))(v76, v77, v84);
    v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
    v82(v81, 0, 1, v79);
    sub_100011088((uint64_t)v74, &qword_1007F4A68);
  }
  v85 = (uint64_t)v166;
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v166, enum case for Shelf.ContentType.productMediaItem(_:), v79);
  v82(v85, 0, 1, v79);
  v86 = v73 + *(int *)(v165 + 48);
  sub_1000194E4(v81, v73, (uint64_t *)&unk_1007F53A0);
  sub_1000194E4(v85, v86, (uint64_t *)&unk_1007F53A0);
  v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  if (v87(v73, 1, v79) == 1)
  {
    sub_100011088(v85, (uint64_t *)&unk_1007F53A0);
    sub_100011088(v81, (uint64_t *)&unk_1007F53A0);
    v88 = v87(v86, 1, v79);
    if (v88 == 1)
      v89 = (uint64_t *)&unk_1007F53A0;
    else
      v89 = (uint64_t *)&unk_100810B10;
    if (v88 == 1)
      v90 = -1;
    else
      v90 = 0;
    LODWORD(v179) = v90;
  }
  else
  {
    v91 = v157;
    sub_1000194E4(v73, v157, (uint64_t *)&unk_1007F53A0);
    if (v87(v86, 1, v79) == 1)
    {
      sub_100011088(v85, (uint64_t *)&unk_1007F53A0);
      sub_100011088(v81, (uint64_t *)&unk_1007F53A0);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v91, v79);
      LODWORD(v179) = 0;
      v89 = (uint64_t *)&unk_100810B10;
    }
    else
    {
      v92 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v154, v86, v79);
      v93 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
      v94 = v91;
      LODWORD(v179) = dispatch thunk of static Equatable.== infix(_:_:)(v91, v92, v79, v93);
      v95 = *(void (**)(char *, uint64_t))(v80 + 8);
      v95(v92, v79);
      v89 = (uint64_t *)&unk_1007F53A0;
      sub_100011088(v85, (uint64_t *)&unk_1007F53A0);
      sub_100011088(v81, (uint64_t *)&unk_1007F53A0);
      v95((char *)v94, v79);
    }
  }
  sub_100011088(v73, v89);
  v96 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v97 = objc_msgSend(v96, "fractionalWidthDimension:", 1.0);
  v98 = swift_getKeyPath(&unk_100682B70);
  ItemLayoutContext.subscript.getter(&v182);
  v99 = swift_release(v98);
  v100 = (void *)v182;
  v101 = static ComponentSeparator.thickness(compatibleWith:)(v182, v99);

  v102 = objc_msgSend(v96, "absoluteDimension:", v101);
  v103 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v97, v102);

  if ((v161 & 1) == 0)
  {
    v104 = swift_getKeyPath(&unk_100682BA0);
    v105 = v171;
    ItemLayoutContext.subscript.getter(v171);
    swift_release(v104);
    v107 = PageGrid.interRowSpace.getter(v106);
    (*(void (**)(_QWORD *, uint64_t))(v172 + 8))(v105, v173);
    v108 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 1, 0.0, v107 * -0.5);
    type metadata accessor for SeparatorSupplementaryView(0);
    v110 = v175;
    v109 = v176;
    v111 = v174;
    (*(void (**)(char *, _QWORD, uint64_t))(v175 + 104))(v174, enum case for ComponentSeparator.Position.top(_:), v176);
    *(_QWORD *)&v182 = 0;
    *((_QWORD *)&v182 + 1) = 0xE000000000000000;
    v112 = v103;
    _print_unlocked<A, B>(_:_:)(v111, &v182, v109, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v113._countAndFlagsBits = 95;
    v113._object = (void *)0xE100000000000000;
    String.append(_:)(v113);
    v114._countAndFlagsBits = static UICollectionReusableView.makeItemScopedElementKind(in:uniquify:)(v42, 0);
    object = v114._object;
    String.append(_:)(v114);
    v116 = swift_bridgeObjectRelease(object);
    v117 = *((_QWORD *)&v182 + 1);
    (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v111, v109, v116);
    v118 = v108;
    v119 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v117);
    v120 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v112, v119, v118);

    v121 = v120;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v121);
    v123 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v122 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v123 >= v122 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v122 > 1, v123 + 1, 1);
    v124 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v121);
    specialized Array._endMutation()(v124);

    v42 = v180;
  }
  if ((v179 & 1) == 0)
  {
    v125 = swift_getKeyPath(&unk_100682BA0);
    v126 = v171;
    ItemLayoutContext.subscript.getter(v171);
    swift_release(v125);
    v128 = PageGrid.interRowSpace.getter(v127);
    (*(void (**)(_QWORD *, uint64_t))(v172 + 8))(v126, v173);
    v129 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 4, 0.0, v128 * 0.5);
    type metadata accessor for SeparatorSupplementaryView(0);
    v131 = v174;
    v130 = v175;
    v132 = v176;
    (*(void (**)(char *, _QWORD, uint64_t))(v175 + 104))(v174, enum case for ComponentSeparator.Position.bottom(_:), v176);
    *(_QWORD *)&v182 = 0;
    *((_QWORD *)&v182 + 1) = 0xE000000000000000;
    v133 = v103;
    _print_unlocked<A, B>(_:_:)(v131, &v182, v132, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v134._countAndFlagsBits = 95;
    v134._object = (void *)0xE100000000000000;
    String.append(_:)(v134);
    v135._countAndFlagsBits = static UICollectionReusableView.makeItemScopedElementKind(in:uniquify:)(v42, 0);
    v136 = v135._object;
    String.append(_:)(v135);
    v137 = swift_bridgeObjectRelease(v136);
    v138 = *((_QWORD *)&v182 + 1);
    (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v131, v132, v137);
    v139 = v129;
    v140 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v138);
    v141 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v133, v140, v139);

    v142 = v141;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
    v144 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v143 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v144 >= v143 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v143 > 1, v144 + 1, 1);
    v145 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v144, v142);
    specialized Array._endMutation()(v145);

  }
  v146 = _swiftEmptyArrayStorage;
  *(_QWORD *)&v182 = _swiftEmptyArrayStorage;
  v147 = sub_100481C8C(v42, v177);
  if (v147)
  {
    v148 = v147;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v148);
    v150 = *(_QWORD *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v149 = *(_QWORD *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v150 >= v149 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v149 > 1, v150 + 1, 1);
    v151 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v150, v148);
    specialized Array._endMutation()(v151);

    v146 = (double *)v182;
  }
  sub_100019D30((uint64_t)v146);

  swift_release(v158);
  return v185;
}

uint64_t sub_1002D8714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t KeyPath;
  uint64_t v16;
  __n128 v17;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a4;
  v20 = a1;
  v21 = a2;
  v7 = type metadata accessor for Shelf.ContentType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100682AE0);
  ItemLayoutContext.subscript.getter(v14);
  swift_release(KeyPath);
  v16 = swift_getKeyPath(&unk_100682B10);
  ReadOnlyLens.subscript.getter(v16, v11);
  v17 = swift_release(v16);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v12 + 8))(v14, v11, v17);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == enum case for Shelf.ContentType.productBadge(_:))
    return sub_1002D889C(v20, v21, a3, v22, a5);
  v19 = sub_100481AE0(v20, v21, a3, v22, a5);
  return (*(uint64_t (**)(char *, uint64_t, double))(v8 + 8))(v10, v7, v19);
}

uint64_t sub_1002D889C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  double v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v58[2];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v68 = (_QWORD *)a5;
  v71 = a3;
  v72 = a4;
  v7 = type metadata accessor for ComponentSeparator.Position(0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v59 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10000DF3C(&qword_100806258);
  __chkstk_darwin(v61);
  v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_100806260);
  __chkstk_darwin(v11);
  v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentSeparator(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_100806268);
  v64 = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(v64 + 64);
  __chkstk_darwin(v18);
  v65 = (uint64_t)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v60 = (uint64_t)v58 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)v58 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)v58 - v26;
  v28 = type metadata accessor for SeparatorSupplementaryView(0);
  v69 = a1;
  v70 = a2;
  v66 = v28;
  sub_10043C320((uint64_t)v27);
  v29 = *(_QWORD *)(v67 + 56);
  sub_100482538(v71, v72, (uint64_t)v13);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v67 = v14;
  if (v30(v13, 1, v14) == 1)
  {
    sub_100011088((uint64_t)v13, &qword_100806260);
    v31 = (uint64_t)v27;
LABEL_12:
    v45 = v70;
    v46 = swift_bridgeObjectRetain(v70);
    v47 = v66;
    v48 = static UICollectionReusableView.defaultReuseIdentifier.getter(v46);
    v50 = v49;
    v51 = v65;
    sub_1000194E4(v31, v65, &qword_100806268);
    v52 = *(unsigned __int8 *)(v64 + 80);
    v53 = (v52 + 16) & ~v52;
    v54 = swift_allocObject(&unk_100735E88, v53 + v19, v52 | 7);
    sub_10006C29C(v51, v54 + v53, &qword_100806268);
    v55 = sub_10000DF3C((uint64_t *)&unk_100810B00);
    v56 = v68;
    v68[3] = v55;
    v56[4] = sub_1002D9150();
    sub_1000117C0(v56);
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v69, v45, v48, v50, sub_1002D90E8, v54, v47);
    return sub_100011088(v31, &qword_100806268);
  }
  v58[1] = v29;
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v67);
  ComponentSeparator.position.getter(v32);
  v34 = v62;
  v33 = v63;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v24, 0, 1, v63);
  v35 = (uint64_t)&v10[*(int *)(v61 + 48)];
  sub_1000194E4((uint64_t)v24, (uint64_t)v10, &qword_100806268);
  v61 = (uint64_t)v27;
  sub_1000194E4((uint64_t)v27, v35, &qword_100806268);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v36((uint64_t)v10, 1, v33) != 1)
  {
    v37 = v34;
    v38 = v60;
    sub_1000194E4((uint64_t)v10, v60, &qword_100806268);
    if (v36(v35, 1, v33) != 1)
    {
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
      v58[0] = (uint64_t)v10;
      v40 = v59;
      v39(v59, v35, v33);
      v41 = sub_10000E99C(&qword_100806278, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentSeparator.Position, (uint64_t)&protocol conformance descriptor for ComponentSeparator.Position);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v40, v33, v41);
      v43 = *(void (**)(char *, uint64_t))(v37 + 8);
      v43(v40, v33);
      sub_100011088((uint64_t)v24, &qword_100806268);
      v43((char *)v38, v33);
      sub_100011088(v58[0], &qword_100806268);
      if ((v42 & 1) != 0)
        goto LABEL_10;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v67);
      v31 = v61;
      goto LABEL_12;
    }
    sub_100011088((uint64_t)v24, &qword_100806268);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v33);
LABEL_8:
    sub_100011088((uint64_t)v10, &qword_100806258);
    goto LABEL_11;
  }
  sub_100011088((uint64_t)v24, &qword_100806268);
  if (v36(v35, 1, v33) != 1)
    goto LABEL_8;
  sub_100011088((uint64_t)v10, &qword_100806268);
LABEL_10:
  v44 = sub_100481AE0(v69, v70, v71, v72, (uint64_t)v68);
  (*(void (**)(char *, uint64_t, double))(v15 + 8))(v17, v67, v44);
  v31 = v61;
  return sub_100011088(v31, &qword_100806268);
}

uint64_t sub_1002D8DBC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  void *v24;
  char *v25;
  __n128 v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[24];

  v30 = a1;
  v6 = type metadata accessor for ComponentSeparator(0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - v10;
  v12 = sub_10000DF3C(&qword_100806268);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ComponentSeparator.Position(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  sub_1000194E4(a5, (uint64_t)v14, &qword_100806268);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_100011088((uint64_t)v14, &qword_100806268);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
  ComponentSeparator.init(position:leadingInset:trailingInset:)(v18, 0.0, 0.0);
  v23 = v29;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v8, v11, v6);
  v24 = v30;
  v25 = &v30[OBJC_IVAR____TtC22SubscribePageExtension26SeparatorSupplementaryView_separator];
  v26 = swift_beginAccess(&v30[OBJC_IVAR____TtC22SubscribePageExtension26SeparatorSupplementaryView_separator], v31, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v23 + 24))(v25, v8, v6, v26);
  objc_msgSend(v24, "setNeedsLayout", swift_endAccess(v31).n128_f64[0]);
  v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v8, v6);
  v27(v11, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

uint64_t sub_1002D8FFC()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for ProductPageItemSupplementaryViewProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension40ProductPageItemSupplementaryViewProvider);
}

uint64_t sub_1002D9050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10000DF3C(&qword_100806268) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for ComponentSeparator.Position(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002D90E8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DF3C(&qword_100806268) - 8) + 80);
  return sub_1002D8DBC(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

unint64_t sub_1002D9150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806270;
  if (!qword_100806270)
  {
    v1 = sub_100010EF8((uint64_t *)&unk_100810B00);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100806270);
  }
  return result;
}

char *sub_1002D91B4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  _QWORD *v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  objc_super v19;

  v4[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_backButtonStyle] = 0;
  v9 = OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton;
  v10 = objc_allocWithZone((Class)type metadata accessor for RoundChevronButton());
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v11[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle] = 1;
  v12 = &v11[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissHandler];
  *v12 = 0;
  v12[1] = 0;
  v11[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_hasBackButton] = 1;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for UberNavigationBarTitleView();
  v13 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = (char *)v13;
  v16 = objc_msgSend(v14, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  v17 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton];
  objc_msgSend(v17, "addTarget:action:forControlEvents:", v15, "didTapNonStandardDismissButton", 64);
  objc_msgSend(v17, "setAlpha:", 0.0);
  objc_msgSend(v15, "addSubview:", v17);
  objc_msgSend(v15, "setHeightShouldBeIncreasedByTabBarHeight:", 1);

  return v15;
}

void sub_1002D93A4(void *a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (**v15)();
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  if (!a1)
    goto LABEL_8;
  v8 = objc_msgSend(a1, "viewControllers");
  v9 = sub_1000531A4();
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    v21 = v10 < 0 ? v10 : v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v10);
  if (v11 >= 2)
  {
    *(_BYTE *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_hasBackButton) = 1;
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton);
    v13 = *(unsigned __int8 *)(v12
                             + OBJC_IVAR____TtC22SubscribePageExtension18RoundChevronButton_shouldUseDirectionalChevron);
    *(_BYTE *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension18RoundChevronButton_shouldUseDirectionalChevron) = 1;
    if (v13 != 1)
    {
      *(_BYTE *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension18RoundChevronButton_chevronDirection) = 1;
      sub_100509F28();
    }
    v14 = swift_allocObject(&unk_100736028, 24, 7);
    *(_QWORD *)(v14 + 16) = a1;
    v15 = (void (**)())(v4
                      + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissHandler);
    v16 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissHandler);
    v17 = *(_QWORD *)(v4
                    + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissHandler
                    + 8);
    *v15 = sub_1002D9DA8;
    v15[1] = (void (*)())v14;
    v18 = a1;
    sub_100019310(v16, v17);
  }
  else
  {
LABEL_8:
    *(_BYTE *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_hasBackButton) = 0;
  }
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_hasBackButton) == 1)
  {
    v19 = a2 & 1;
    v20 = OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_backButtonStyle;
    if ((((v19 == 0) ^ *(unsigned __int8 *)(v4
                                           + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_backButtonStyle)) & 1) == 0
      && (*(_BYTE *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) & 1) != 0)
    {
      sub_1002D9584(v19, a3 & 1);
      *(_BYTE *)(v4 + v20) = v19;
    }
  }
}

void sub_1002D9554(void *a1)
{
  if (a1)

}

double sub_1002D9584(char a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  char v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  double result;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v3 = v2;
  v6 = type metadata accessor for TimingCurve(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)aBlock - v12;
  if ((a1 & 1) != 0)
  {
    v18 = 1.0;
    v16 = 0.0;
    v19 = 0.35;
    v17 = 0.0;
  }
  else
  {
    v14 = objc_msgSend(v3, "traitCollection", v11);
    v15 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v15 & 1) != 0)
      v16 = 20.0;
    else
      v16 = -20.0;
    v17 = 1.0;
    v18 = 0.0;
    v19 = 0.2;
  }
  v20 = swift_allocObject(&unk_100735F88, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v21 = swift_allocObject(&unk_100735FB0, 48, 7);
  *(_QWORD *)(v21 + 16) = v20;
  *(double *)(v21 + 24) = v17;
  *(double *)(v21 + 32) = v18;
  *(double *)(v21 + 40) = v16;
  if ((a2 & 1) != 0)
  {
    v22 = ((uint64_t (*)(void))static TimingCurve.easingCurve1.getter)();
    v23 = TimingCurve.controlPoint1.getter(v22);
    v25 = v24;
    v26 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v27 = v26(v13, v6);
    v28 = static TimingCurve.easingCurve1.getter(v27);
    v29 = TimingCurve.controlPoint2.getter(v28);
    v31 = v30;
    v26(v9, v6);
    v32 = swift_allocObject(&unk_100735FD8, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_1002D9D38;
    *(_QWORD *)(v32 + 24) = v21;
    v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    aBlock[4] = sub_1000283D0;
    v40 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100735FF0;
    v34 = _Block_copy(aBlock);
    v35 = v40;
    swift_retain(v21);
    swift_release(v35);
    v36 = objc_msgSend(v33, "initWithDuration:controlPoint1:controlPoint2:animations:", v34, v19, v23, v25, v29, v31);
    _Block_release(v34);
    objc_msgSend(v36, "startAnimation");

    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  else
  {
    swift_retain(v20);
    sub_1002D985C(v38, v17, v18, v16);
    swift_release(v21);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

void sub_1002D985C(uint64_t a1, double a2, double a3, CGFloat a4)
{
  uint64_t v7;
  void *Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  CGAffineTransform v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    objc_msgSend(Strong, "setBackButtonAlpha:", a2);

  }
  swift_beginAccess(v7, v18, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(v7);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = objc_retain(*(id *)(v10
                            + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton));

    objc_msgSend(v12, "setAlpha:", a3);
  }
  swift_beginAccess(v7, v17, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v7);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = objc_retain(*(id *)(v13
                            + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton));

    CGAffineTransformMakeTranslation(&v16, a4, 0.0);
    objc_msgSend(v15, "setTransform:", &v16);

  }
}

id sub_1002D99A0()
{
  char *v0;
  void *v1;
  double MidX;
  double MinY;
  double Height;
  double v5;
  objc_super v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for UberNavigationBarTitleView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v0, "bounds");
  v8.origin.x = CGRect.withLayoutDirection(in:relativeTo:)(v0);
  MidX = CGRectGetMidX(v8);
  objc_msgSend(v0, "bounds");
  MinY = CGRectGetMinY(v9);
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v10);
  objc_msgSend(v0, "floatingTabBarHeight");
  return objc_msgSend(v1, "setCenter:", MidX, MinY + (Height - v5) * 0.5);
}

id sub_1002D9B50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UberNavigationBarTitleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UberNavigationBarTitleView()
{
  return objc_opt_self(_TtC22SubscribePageExtension26UberNavigationBarTitleView);
}

uint64_t storeEnumTagSinglePayload for UberNavigationBarTitleView.BackButtonStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002D9C28 + 4 * byte_100682C05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002D9C5C + 4 * byte_100682C00[v4]))();
}

uint64_t sub_1002D9C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D9C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002D9C6CLL);
  return result;
}

uint64_t sub_1002D9C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002D9C80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002D9C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D9C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UberNavigationBarTitleView.BackButtonStyle()
{
  return &type metadata for UberNavigationBarTitleView.BackButtonStyle;
}

unint64_t sub_1002D9CAC()
{
  unint64_t result;

  result = qword_1008062E8;
  if (!qword_1008062E8)
  {
    result = swift_getWitnessTable(&unk_100682C9C, &type metadata for UberNavigationBarTitleView.BackButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1008062E8);
  }
  return result;
}

uint64_t sub_1002D9CF0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D9D14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002D9D38()
{
  uint64_t v0;

  sub_1002D985C(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

uint64_t sub_1002D9D48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D9D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002D9D7C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002D9D84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002D9DA8()
{
  uint64_t v0;

  sub_1002D9554(*(void **)(v0 + 16));
}

void sub_1002D9DB0()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_backButtonStyle] = 0;
  v1 = OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissButton;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RoundChevronButton()), "init");
  v0[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle] = 1;
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_nonStandardDismissHandler];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_hasBackButton] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/UberNavigationBarTitleView.swift", 55, 2, 47, 0);
  __break(1u);
}

uint64_t sub_1002D9E6C()
{
  uint64_t result;

  sub_1000117FC();
  result = static UIColor.primaryText.getter();
  qword_1008539C0 = result;
  return result;
}

uint64_t sub_1002D9E9C()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_1000117FC();
  result = static UIColor.secondaryText.getter(v0);
  qword_1008539C8 = result;
  return result;
}

id sub_1002D9ECC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemGray5Color");
  qword_1008539D0 = (uint64_t)result;
  return result;
}

uint64_t sub_1002D9F04()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_1000117FC();
  result = static UIColor.secondaryText.getter(v0);
  qword_1008539D8 = result;
  return result;
}

UIFontTextStyle sub_1002D9F34()
{
  qword_1008539E0 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontTextStyle sub_1002D9F4C()
{
  qword_1008539E8 = (uint64_t)UIFontTextStyleSubheadline;
  return UIFontTextStyleSubheadline;
}

void sub_1002D9F64()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  if (qword_1007F1B10 != -1)
    swift_once(&qword_1007F1B10, sub_1002D9F34);
  v0 = (void *)qword_1008539E0;
  v1 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v2 = v0;
  v3 = objc_msgSend(v1, "configurationWithTextStyle:scale:", v2, 2);

  qword_1008539F0 = (uint64_t)v3;
}

void sub_1002D9FF4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t KeyPath;
  id v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v39 = a2;
  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ProductReviewAction.ReviewAction(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for ProductReviewAction(0);
  v14 = sub_1002DA46C();
  v15 = ItemLayoutContext.typedModel<A>(as:)(&v40, v13, v13, v14);
  v16 = v40;
  if (v40)
  {
    ProductReviewAction.action.getter(v15);
    v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
    if (v17 == enum case for ProductReviewAction.ReviewAction.tapToRate(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
      v18 = *v12;
      v19 = type metadata accessor for ProductTapToRateView(0);
      v20 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
      sub_100245730(v20);
      v21 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension44GenericProductReviewActionCollectionViewCell_productTapToRateView];
      if (v21)
      {
        KeyPath = swift_getKeyPath(&unk_100682D40);
        v23 = v21;
        ItemLayoutContext.subscript.getter(v8);
        swift_release(KeyPath);
        v25 = PageGrid.columnCount.getter(v24);
        (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
        v26 = type metadata accessor for ObjectGraph(0);
        v27 = swift_dynamicCastClassUnconditional(v39, v26, 0, 0, 0);
        sub_1002AE60C(v18, v25 == 1.0, v27);

      }
    }
    else
    {
      if (v17 != enum case for ProductReviewAction.ReviewAction.writeAReview(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
        goto LABEL_11;
      }
      (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
      v28 = *v12;
      v29 = type metadata accessor for ProductReviewActionsView(0);
      v30 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v29)), "init");
      sub_10024573C(v30);
      v31 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension44GenericProductReviewActionCollectionViewCell_productReviewActionsView];
      if (!v31)
      {
        v37 = v28;
        goto LABEL_9;
      }
      v32 = v31;
      v18 = ProductWriteAReview.writeReviewAction.getter();
      v33 = ProductWriteAReview.supportAction.getter();
      v34 = sub_1000826AC();
      v35 = type metadata accessor for ObjectGraph(0);
      v36 = swift_dynamicCastClassUnconditional(v39, v35, 0, 0, 0);
      sub_1003921F8(v18, v33, v36);

      swift_unknownObjectRelease(v34);
      swift_release(v28);
      swift_release(v33);
    }
    v37 = v18;
LABEL_9:
    *(_QWORD *)&v38 = swift_release(v37).n128_u64[0];
LABEL_11:
    objc_msgSend(v3, "setNeedsLayout", v38, v39);
    swift_release(v16);
  }
}

uint64_t sub_1002DA30C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension44GenericProductReviewActionCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

double sub_1002DA360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension44GenericProductReviewActionCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1002DA3BC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension44GenericProductReviewActionCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1002DA408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100682CF8, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

unint64_t sub_1002DA46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008062F0;
  if (!qword_1008062F0)
  {
    v1 = type metadata accessor for ProductReviewAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ProductReviewAction, v1);
    atomic_store(result, (unint64_t *)&qword_1008062F0);
  }
  return result;
}

void sub_1002DA4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, _QWORD, __n128);
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[32];
  uint64_t v27;
  _QWORD *v28;

  v1 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GuidedSearchTokenCollection(0);
  v5 = sub_1002DA6B0();
  v6 = dispatch thunk of Collection.count.getter(v4, v5);
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
  {
LABEL_7:
    sub_100547FE8((uint64_t)v7);
    swift_bridgeObjectRelease(v7);
    return;
  }
  v8 = v6;
  v28 = _swiftEmptyArrayStorage;
  sub_100021CE4(0, v6 & ~(v6 >> 63), 0);
  v7 = v28;
  dispatch thunk of Collection.startIndex.getter(&v27, v4, v5);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v23[1] = v0;
    do
    {
      v9 = (uint64_t (*)(_BYTE *, _QWORD, __n128))dispatch thunk of Collection.subscript.read(v26, &v27, v4, v5);
      v11 = *v10;
      v12 = swift_retain(*v10);
      v13 = v9(v26, 0, v12);
      v14 = GuidedSearchToken.leadingIcon.getter(v13);
      v15 = GuidedSearchToken.displayName.getter(v14);
      v17 = v16;
      v18 = GuidedSearchToken.isSelected.getter();
      swift_release(v11);
      v19 = v25;
      v20 = (uint64_t *)&v3[*(int *)(v25 + 20)];
      *v20 = v15;
      v20[1] = v17;
      v3[*(int *)(v19 + 24)] = v18 & 1;
      v28 = v7;
      v22 = v7[2];
      v21 = v7[3];
      if (v22 >= v21 >> 1)
      {
        sub_100021CE4(v21 > 1, v22 + 1, 1);
        v7 = v28;
      }
      v7[2] = v22 + 1;
      sub_1000DE004((uint64_t)v3, (uint64_t)v7+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v22);
      dispatch thunk of Collection.formIndex(after:)(&v27, v4, v5);
      --v8;
    }
    while (v8);
    goto LABEL_7;
  }
  __break(1u);
}

unint64_t sub_1002DA6B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008123A0;
  if (!qword_1008123A0)
  {
    v1 = type metadata accessor for GuidedSearchTokenCollection(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for GuidedSearchTokenCollection, v1);
    atomic_store(result, (unint64_t *)&qword_1008123A0);
  }
  return result;
}

uint64_t sub_1002DA6F8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F5840);
  v6 = swift_allocObject(v5, 40, 7);
  v23 = xmmword_10066FE60;
  *(_OWORD *)(v6 + 16) = xmmword_10066FE60;
  v7 = swift_allocObject(&unk_1007360D8, 24, 7);
  *(_QWORD *)(v7 + 16) = v0;
  v8 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v8, 120, 7);
  v9 = v0;
  v10 = sub_1004804B8(0xD000000000000016, 0x80000001006425A0, 0xD000000000000019, 0x80000001006425C0, 0, 0, (uint64_t)sub_1002DAA88, v7);
  swift_release(v7);
  *(_QWORD *)(v6 + 32) = v10;
  v24 = v6;
  specialized Array._endMutation()(v11);
  v12 = v24;
  v13 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v13 + 16) = v23;
  v14 = type metadata accessor for DebugSection();
  v15 = swift_allocObject(v14, 56, 7);
  v17 = UUID.init()(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = v20;
  strcpy((char *)(v15 + 32), "Product Page");
  *(_BYTE *)(v15 + 45) = 0;
  *(_WORD *)(v15 + 46) = -5120;
  *(_QWORD *)(v15 + 48) = v12;
  *(_QWORD *)(v13 + 32) = v15;
  v24 = v13;
  specialized Array._endMutation()(v21);
  return v24;
}

void sub_1002DA8D8(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  Class isa;
  _QWORD v11[2];
  _BYTE v12[104];

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = (void *)static AskToBuyRequestNotificationDetails.notificationName.getter();
  v4 = sub_10000DF3C(&qword_1007F98D0);
  inited = swift_initStackObject(v4, v12);
  *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
  v11[0] = static AskToBuyRequestNotificationDetails.adamIdKey.getter();
  v11[1] = v6;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  v7 = type metadata accessor for AdamId(0);
  *(_QWORD *)(inited + 96) = v7;
  v8 = sub_1000117C0((_QWORD *)(inited + 72));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v8, a1, v7);
  v9 = sub_100369F50(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v3, 0, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

}

id sub_1002DAA14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductPageSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductPageSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension19ProductPageSettings);
}

uint64_t sub_1002DAA64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002DAA88()
{
  sub_1002DAAA8();
}

void sub_1002DAAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  void (*v30)(char *, char *, uint64_t);
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v1 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AdamId(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - v9;
  v11 = v0 + OBJC_IVAR____TtC22SubscribePageExtension21DebugSettingsProvider_debugSettingsViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension21DebugSettingsProvider_debugSettingsViewController);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "presentingViewController");

    if (v14)
    {
      v15 = objc_opt_self(UITabBarController);
      v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
      if (!v16)
      {
LABEL_6:

        goto LABEL_7;
      }
      v17 = objc_msgSend(v16, "selectedViewController");

      if (v17)
      {
        v18 = objc_opt_self(UINavigationController);
        v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
        v14 = v17;
        if (v19)
          goto LABEL_10;
        goto LABEL_6;
      }
    }
  }
LABEL_7:
  v20 = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (!v20)
    return;
  v21 = v20;
  v39 = objc_msgSend(v20, "presentingViewController");

  if (!v39)
    return;
  v22 = objc_opt_self(UINavigationController);
  v19 = (void *)swift_dynamicCastObjCClass(v39, v22);
  if (!v19)
  {
LABEL_15:

    return;
  }
LABEL_10:
  v39 = v19;
  v23 = objc_msgSend(v19, "topViewController");
  if (!v23)
    goto LABEL_15;
  v24 = v23;
  v25 = type metadata accessor for ProductDiffablePageViewController(0);
  v26 = swift_dynamicCastClass(v24, v25);
  if (!v26)
  {

    goto LABEL_15;
  }
  v27 = *(_QWORD *)(v26 + qword_100852E58);
  v28 = swift_retain(v27);
  ProductDiffablePagePresenter.adamId.getter(v28);
  v29 = swift_release(v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v29) == 1)
  {

    sub_1002DAE50((uint64_t)v3);
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v30(v10, v3, v4);
    v31 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    if (v31
      && (v32 = v31,
          v33 = objc_msgSend(v31, "presentingViewController"),
          v32,
          v33))
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
      v34 = *(unsigned __int8 *)(v5 + 80);
      v35 = (v34 + 16) & ~v34;
      v36 = swift_allocObject(&unk_100736100, v35 + v6, v34 | 7);
      v30((char *)(v36 + v35), v7, v4);
      aBlock[4] = sub_1002DAEF0;
      v41 = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BD6CC;
      aBlock[3] = &unk_100736118;
      v37 = _Block_copy(aBlock);
      objc_msgSend(v33, "dismissViewControllerAnimated:completion:", 1, v37, swift_release(v41).n128_f64[0]);
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

    }
  }
}

uint64_t sub_1002DAE50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002DAE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002DAEF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  sub_1002DA8D8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1002DAF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002DAF2C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1002DAF34(double a1)
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  int v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v20;
  unsigned int v21;

  ObjectType = swift_getObjectType();
  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell];
  if (v8)
  {
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell + 8];
    v10 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell];
  }
  else
  {
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell + 8];
    v10 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
  }
  v11 = v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled];
  v12 = v8;
  if (v11 != 1)
  {
    v13 = objc_msgSend(v1, "traitCollection");
    v14 = swift_getObjectType();
    v21 = sub_1002DC2C4((uint64_t)v10, v13, ObjectType, v14, v9);

    sub_1002DB108(v1);
    v15 = swift_getObjectType();
    v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_todayCard];
    v17 = objc_msgSend(v1, "traitCollection");
    v18 = objc_msgSend(v1, "view");
    (*(void (**)(uint64_t, _QWORD, uint64_t, char *, id, id, uint64_t, uint64_t))(v9 + 80))(v16, v21, 1, v7, v17, v18, v15, v9);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  return a1;
}

id sub_1002DB108(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id result;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v2 = type metadata accessor for PageGrid.Direction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v28 - v8;
  v10 = objc_msgSend(a1, "presentingViewController", v7);
  if (!v10)
    v10 = a1;
  result = objc_msgSend(v10, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = result;
  objc_msgSend(result, "bounds");
  v14 = v13;
  v16 = v15;

  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v9, enum case for PageGrid.Direction.vertical(_:), v2);
  result = objc_msgSend(v10, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v17 = result;
  objc_msgSend(result, "safeAreaInsets");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v26 = objc_msgSend(v10, "traitCollection");
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  if (qword_1007F0F10 != -1)
    swift_once(&qword_1007F0F10, sub_100063300);
  v27 = qword_1007F6188;
  swift_bridgeObjectRetain(qword_1007F6188);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6972477961646F74, 0xE900000000000064, v5, 0, v27, v14, v16, v19, v21, v23, v25);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

void sub_1002DB4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  id v40;

  v3 = v2;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell + 8);
  if (!v4)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell), a2);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v6 + 96))((*(_BYTE *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled) & 1) == 0, ObjectType, v6);
  }
  v8 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell + 8);
  v10 = swift_getObjectType(v8, a2);
  v12 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v9 + 136))(v10, v9);
  if (v12 == 7)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (v4)
    v39 = v12 == 6;
  else
    v39 = 1;
  if (!v39)
  {
LABEL_5:
    v13 = swift_getObjectType(v4, v11);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v5 + 96))((*(_BYTE *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled) & 1) == 0, v13, v5);
  }
LABEL_6:
  v14 = swift_getObjectType(v8, v11);
  v15 = swift_conformsToProtocol2(v14, &protocol descriptor for TodayCardOverlayDisplaying);
  if (v15)
    v17 = v15;
  else
    v17 = 0;
  if (v15)
    v18 = v8;
  else
    v18 = 0;
  if (v18)
  {
    v19 = swift_getObjectType(v18, v16);
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 32);
    v21 = v8;
    v22 = v20(v19, v17);
    if (v22)
    {
      v24 = v22;
      v25 = v23;
      v26 = swift_getObjectType(v22, v23);
      (*(void (**)(BOOL, uint64_t, uint64_t))(v25 + 32))((*(_BYTE *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled) & 1) == 0, v26, v25);
      swift_unknownObjectRelease(v24);
    }

  }
  if (v4)
  {
    v27 = swift_getObjectType(v4, v16);
    v28 = swift_conformsToProtocol2(v27, &protocol descriptor for TodayCardOverlayDisplaying);
    v30 = v28 ? v28 : 0;
    v31 = v28 ? v4 : 0;
    if (v31)
    {
      v32 = swift_getObjectType(v31, v29);
      v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 32);
      v40 = v4;
      v34 = v33(v32, v30);
      if (v34)
      {
        v36 = v34;
        v37 = v35;
        v38 = swift_getObjectType(v34, v35);
        (*(void (**)(BOOL, uint64_t, uint64_t))(v37 + 32))((*(_BYTE *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled) & 1) == 0, v38, v37);
        swift_unknownObjectRelease(v36);
      }

    }
  }
}

void sub_1002DB7C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "viewDidLoad");
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
  v4 = objc_msgSend(v2, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  v6 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell];
  if (!v6)
    return;
  v7 = v6;
  v8 = objc_msgSend(v2, "view");
  if (!v8)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "addSubview:", v7);

}

void sub_1002DB938(void *a1, uint64_t a2, uint64_t a3, const char **a4, _QWORD *a5, char a6)
{
  const char *v10;
  _BYTE *v11;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType(a1, a2);
  v10 = *a4;
  v11 = v12.receiver;
  objc_msgSendSuper2(&v12, v10, a3);
  v11[*a5] = a6;

}

void sub_1002DB9AC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for PageGrid(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39.receiver = v0;
  v39.super_class = ObjectType;
  objc_msgSendSuper2(&v39, "viewDidLayoutSubviews", v4);
  v7 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell];
  if (!v7)
  {
    v26 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
    v27 = objc_msgSend(v0, "view");
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, "bounds");
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v36 = v35;

      objc_msgSend(v26, "setFrame:", v30, v32, v34, v36);
      return;
    }
    goto LABEL_9;
  }
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell + 8];
  v9 = v7;
  sub_1002DBC60(v9, v8);
  v10 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell + 8];
  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  v13 = v12;
  objc_msgSend(v12, "bounds");
  v15 = v14;
  v17 = v16;

  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled] & 1) == 0)
  {
    v18 = objc_msgSend(v0, "traitCollection");
    v19 = swift_getObjectType();
    HIDWORD(v37) = sub_1002DC2C4((uint64_t)v10, v18, (uint64_t)ObjectType, v19, v11);

    sub_1002DB108(v0);
    v20 = swift_getObjectType();
    v38 = v2;
    v21 = v9;
    v22 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_todayCard];
    v23 = objc_msgSend(v0, "traitCollection");
    v24 = objc_msgSend(v0, "view");
    v25 = v22;
    v9 = v21;
    v17 = (*(double (**)(uint64_t, _QWORD, uint64_t, char *, id, id, uint64_t, uint64_t))(v11 + 80))(v25, HIDWORD(v37), 1, v6, v23, v24, v20, v11);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v38);
  }
  objc_msgSend(v10, "setFrame:", 0.0, 0.0, v15, v17);

}

void sub_1002DBC60(void *a1, uint64_t a2)
{
  char *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _BYTE *v15;
  char isEscapingClosureAtFileLocation;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v3 = v2;
  v6 = type metadata accessor for ListTodayCardCollectionViewCell(0);
  if (!swift_dynamicCastClass(a1, v6)
    || (v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell + 8],
        ObjectType = swift_getObjectType(),
        (*(unsigned __int8 (**)(uint64_t, uint64_t))(v7 + 160))(ObjectType, v7) != 4))
  {
    v17 = type metadata accessor for RiverTodayCardCollectionViewCell(0);
    v18 = swift_dynamicCastClass(a1, v17);
    if (v18)
    {
      v19 = (void *)v18;
      *(_BYTE *)(v18 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_isDisappearing) = v3[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isDisappearing];
      v40 = a1;
      v20 = objc_msgSend(v3, "view");
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, "bounds");
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        objc_msgSend(v19, "setFrame:", v23, v25, v27, v29);
        return;
      }
      goto LABEL_15;
    }
    v30 = objc_msgSend(v2, "view");
    if (v30)
    {
LABEL_13:
      v31 = v30;
      objc_msgSend(v30, "bounds");
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;

      objc_msgSend(a1, "setFrame:", v33, v35, v37, v39);
      return;
    }
    __break(1u);
LABEL_12:
    v30 = objc_msgSend(v2, "view");
    if (!v30)
    {
LABEL_16:
      __break(1u);
      return;
    }
    goto LABEL_13;
  }
  if ((v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isDisappearing] & 1) != 0)
    return;
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isAppearing] != 1)
    goto LABEL_12;
  v9 = (void *)objc_opt_self(UIView);
  v10 = (_QWORD *)swift_allocObject(&unk_100736168, 40, 7);
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = v3;
  v11 = swift_allocObject(&unk_100736190, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1002DC39C;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_100030368;
  v42 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100101718;
  aBlock[3] = &unk_1007361A8;
  v12 = _Block_copy(aBlock);
  v13 = v42;
  v14 = a1;
  v15 = v3;
  swift_retain(v11);
  objc_msgSend(v9, "performWithoutAnimation:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 110, 179, 52, 1);
  swift_release(v10);
  swift_release(v11);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
}

id sub_1002DBFDC(void *a1, int a2, id a3)
{
  id result;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  result = objc_msgSend(a3, "view");
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    return objc_msgSend(a1, "setFrame:", v7, v9, v11, v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002DC068(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  _QWORD v33[4];
  char v34;
  _QWORD v35[4];
  char v36;

  v3 = v2;
  v32.receiver = v2;
  v32.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v32, "viewSafeAreaInsetsDidChange");
  v4 = &v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
  v6 = *((_QWORD *)v4 + 1);
  result = objc_msgSend(v3, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v9 = result;
  ObjectType = swift_getObjectType(v5, v8);
  objc_msgSend(v9, "safeAreaInsets");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v35[0] = v12;
  v35[1] = v14;
  v35[2] = v16;
  v35[3] = v18;
  v36 = 0;
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v6 + 224))(v35, ObjectType, v6);
  v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell];
  if (!v19)
    return result;
  v20 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell + 8];
  result = objc_msgSend(v3, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v22 = result;
  v23 = swift_getObjectType(v19, v21);
  objc_msgSend(v22, "safeAreaInsets");
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  v33[0] = v25;
  v33[1] = v27;
  v33[2] = v29;
  v33[3] = v31;
  v34 = 0;
  return (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 224))(v33, v23, v20);
}

uint64_t type metadata accessor for ArticleHeaderViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension27ArticleHeaderViewController);
}

uint64_t type metadata accessor for ArticleHeaderViewController.ContentView()
{
  return objc_opt_self(_TtCC22SubscribePageExtension27ArticleHeaderViewControllerP33_486856A2142B6DE0A30BE8A898B9906E11ContentView);
}

uint64_t sub_1002DC2C4(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BOOL4 v9;
  uint64_t v10;
  unsigned int v11;

  v9 = objc_msgSend(a2, "userInterfaceIdiom") == (id)1 && objc_msgSend(a2, "horizontalSizeClass") == (id)2;
  v10 = type metadata accessor for ListTodayCardCollectionViewCell(0);
  if (!swift_dynamicCastClass(a1, v10)
    || (v11 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(a5 + 160))(a4, a5), v11 != 6))
  {
    v11 = 1;
  }
  if (v9)
    return v11;
  else
    return 5;
}

uint64_t sub_1002DC370()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1002DC39C()
{
  uint64_t v0;

  return sub_1002DBFDC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1002DC3A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DC3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002DC3C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002DC3D0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  void (*v35)(_QWORD);
  double left;
  double bottom;
  double right;
  __n128 v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  __int128 v44;
  __n128 v45;
  __int128 v46;
  __n128 v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  __int128 v55;
  __n128 v56;
  double v57;
  double v58;
  __int128 v59;
  __n128 v60;
  uint64_t result;
  int64x2_t v62;
  double v63;
  double top;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = &v62.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v6 = (int64x2_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = &v62.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v62.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v62.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v62.i8[-v17];
  v19 = sub_10000DF3C(&qword_1007F5878);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v66 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100671120;
  v65 = v24;
  v69 = v24 + v23;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v25 = xmmword_100856810;
  v71 = 0x3FF0000000000000;
  v72[0] = 0x3FF8000000000000;
  v26 = sub_100020838();
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v27);
  v71 = 0x4030000000000000;
  v72[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v28);
  v72[0] = 0x4030000000000000;
  v71 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v35 = *(void (**)(_QWORD))(v4 + 104);
  v68 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v67 = (void (*)(int64x2_t *, _QWORD, uint64_t))v35;
  v35(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v40 = xmmword_100856820;
  v71 = 0x3FF0000000000000;
  v72[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v39);
  v71 = 0x4034000000000000;
  v72[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v41);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v44 = xmmword_100856830;
  v72[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v45 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v45);
  v62 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v63 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v44, *((double *)&v44 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v46 = xmmword_100856870;
  v72[0] = 0x4010000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v47 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v47);
  *v6 = v62;
  v67(v6, v68, v70);
  v48 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v46, *((double *)&v46 + 1), v48, v50, v52, v54);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v55 = xmmword_100856880;
  v72[0] = 0x4014000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v56 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v56);
  v62 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v58 = v63;
  v57 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v55, *((double *)&v55 + 1), top, v63, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v59 = xmmword_100856890;
  v72[0] = 0x4018000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v60);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v59, *((double *)&v59 + 1), v57, v58, bottom, right);
  qword_1008063A0 = v65;
  return result;
}

void sub_1002DCCF4()
{
  qword_1008063B0 = 0x4041800000000000;
}

int64x2_t sub_1002DCD08()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_1008063B8 = (__int128)result;
  return result;
}

void sub_1002DCD20()
{
  qword_1008063C8 = 0x4030000000000000;
}

uint64_t sub_1002DCD30(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_1008063D0);
  sub_1000117A8(v5, (uint64_t)qword_1008063D0);
  if (qword_1007F2170 != -1)
    swift_once(&qword_1007F2170, sub_1004137CC);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100854950);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 10.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

_QWORD *sub_1002DCE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void (*v15)(void);
  _QWORD *v16;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29FamilyPurchasesViewController_presenter) = a1;
  v5 = objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout());
  v6 = objc_msgSend(v5, "init", swift_retain(a1).n128_f64[0]);
  swift_retain(a2);
  v7 = sub_10052BEA0((uint64_t)v6, a2);

  v9 = sub_10001F65C(&qword_100806438, v8, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_100682EC8);
  v10 = v7;
  dispatch thunk of FamilyPurchasesPresenter.view.setter(v7, v9);
  v11 = v10;
  dispatch thunk of FamilyPurchasesPresenter.pageTitle.getter();
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setTitle:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  *((_BYTE *)v11 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle) = 0;
  v15 = *(void (**)(void))((swift_isaMask & *v11) + 0x1F0);
  v16 = v11;
  v15();

  swift_release(a1);
  swift_release(a2);
  return v16;
}

void sub_1002DD0CC()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  NSString *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  objc_super v27;

  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for FamilyPurchasesViewController();
  objc_msgSendSuper2(&v27, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v3 = (void *)static UIColor.tableViewBackground.getter();
    objc_msgSend(v2, "setBackgroundColor:", v3);

    v4 = objc_msgSend(v0, "collectionView");
    if (v4)
    {
      v5 = v4;
      v6 = (void *)static UIColor.tableViewBackground.getter();
      objc_msgSend(v5, "setBackgroundColor:", v6);

      objc_msgSend(v5, "setAlwaysBounceVertical:", 1);
      v7 = type metadata accessor for LinkableHeaderCollectionViewCell();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
      static UICollectionReusableView.defaultReuseIdentifier.getter(v9);
      v11 = v10;
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

      v13 = type metadata accessor for AccountDetailCollectionViewCell(0);
      v14 = swift_getObjCClassFromMetadata(v13);
      static UICollectionReusableView.defaultReuseIdentifier.getter(v15);
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "registerClass:forCellWithReuseIdentifier:", v14, v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

      v19 = type metadata accessor for DetailCollectionViewCell(0);
      v20 = swift_getObjCClassFromMetadata(v19);
      v21 = UICollectionElementKindSectionHeader;
      static UICollectionReusableView.defaultReuseIdentifier.getter(v22);
      v24 = v23;
      v25 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v20, v21, v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

      dispatch thunk of BasePresenter.didLoad()(v26);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1002DD3BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  NSIndexPath v13;
  id v14;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  Class isa;
  id v24;
  uint64_t v26;

  v2 = type metadata accessor for FamilyPurchasesSection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = IndexPath.section.getter(v6);
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(v7);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v8 == enum case for FamilyPurchasesSection.errorBanner(_:))
  {
    type metadata accessor for LinkableHeaderCollectionViewCell();
    static UICollectionReusableView.defaultReuseIdentifier.getter(v9);
    v11 = v10;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v13.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v12, v13.super.isa);
LABEL_9:
    v24 = v14;

    return v24;
  }
  if (v8 == enum case for FamilyPurchasesSection.loggedInUser(_:)
    || v8 == enum case for FamilyPurchasesSection.familyMembers(_:))
  {
    type metadata accessor for AccountDetailCollectionViewCell(0);
    static UICollectionReusableView.defaultReuseIdentifier.getter(v16);
    v18 = v17;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    v13.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v12, v13.super.isa);
    goto LABEL_9;
  }
  type metadata accessor for LinkableHeaderCollectionViewCell();
  static UICollectionReusableView.defaultReuseIdentifier.getter(v19);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v22, isa);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v24;
}

void sub_1002DDC8C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = objc_msgSend(v1, "collectionView", __chkstk_darwin(v3).n128_f64[0]);
  if (v6)
  {
    v16 = v6;
    if (IndexSet.count.getter() < 1)
    {

    }
    else
    {
      v7 = objc_opt_self(UIView);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
      v8 = *(unsigned __int8 *)(v4 + 80);
      v9 = (v8 + 24) & ~v8;
      v10 = swift_allocObject(&unk_1007361E0, v9 + v5, v8 | 7);
      *(_QWORD *)(v10 + 16) = v16;
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
      v11 = swift_allocObject(&unk_100736208, 32, 7);
      *(_QWORD *)(v11 + 16) = sub_1002DEF80;
      *(_QWORD *)(v11 + 24) = v10;
      aBlock[4] = sub_100030368;
      v18 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100101718;
      aBlock[3] = &unk_100736220;
      v12 = _Block_copy(aBlock);
      v13 = v18;
      v14 = v16;
      swift_retain(v11);
      objc_msgSend((id)v7, "performWithoutAnimation:", v12, swift_release(v13).n128_f64[0]);

      _Block_release(v12);
      LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v11, "", 112, 293, 40, 1);
      swift_release(v10);
      swift_release(v11);
      if ((v7 & 1) != 0)
        __break(1u);
    }
  }
}

void sub_1002DDE98(void *a1)
{
  id v2;
  NSIndexSet *v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(a1, "collectionViewLayout");
  objc_msgSend(v2, "invalidateLayout");

  IndexSet._bridgeToObjectiveC()(v3);
  v5 = v4;
  objc_msgSend(a1, "reloadSections:", v4);

}

uint64_t sub_1002DDF10()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29FamilyPurchasesViewController_presenter));
}

id sub_1002DDF20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyPurchasesViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FamilyPurchasesViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension29FamilyPurchasesViewController);
}

void sub_1002DDF84()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  objc_msgSend(v1, "reloadData");

}

uint64_t sub_1002DDFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _OWORD v11[2];

  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v8 = result;
    memset(v11, 0, sizeof(v11));
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ActionRunner.Origin.userInitiated(_:), v3);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v11, v6, v9);
    v10 = swift_release(v8);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v10);
    return sub_100011088((uint64_t)v11, &qword_1007F6E90);
  }
  return result;
}

uint64_t sub_1002DE0B4(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100806418, a2, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_100682E40);
}

uint64_t sub_1002DE0E0(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100806420, a2, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_100682E68);
}

uint64_t sub_1002DE10C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C((unint64_t *)&unk_100806428, a2, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_100682E90);
}

double sub_1002DE138(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[3];
  v13 = a2[4];
  sub_100011064(a2, v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  v14 = AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v16 = a2[28];
  v17 = a2[29];
  sub_100011064(a2 + 25, v16);
  v18 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v16, *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8), a3 - (v14 + v14), a4);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_1000194E4((uint64_t)(a2 + 15), (uint64_t)v38, (uint64_t *)&unk_100803C00);
  v25 = v39;
  if (v39)
  {
    v26 = v40;
    sub_100011064(v38, v39);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v25);
    AnyDimension.value(in:rounded:)(a1, v11, v25, v26);
    v15(v11, v8);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
  }
  else
  {
    sub_100011088((uint64_t)v38, (uint64_t *)&unk_100803C00);
  }
  v27 = a2[33];
  v28 = a2[34];
  sub_100011064(a2 + 30, v27);
  Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  v29 = a2[23];
  v30 = a2[24];
  sub_100011064(a2 + 20, v29);
  Measurable.measuredSize(fitting:in:)(a1, v29, *(_QWORD *)(v30 + 8), a3, a4);
  v31 = a2[8];
  v32 = a2[9];
  sub_100011064(a2 + 5, v31);
  AnyDimension.topMargin(from:in:)(a1, v31, v32, v18, v20, v22, v24);
  v33 = a2 + 10;
  v34 = a2[13];
  v35 = a2[14];
  sub_100011064(v33, v34);
  AnyDimension.bottomMargin(from:in:)(a1, v34, v35, v18, v20, v22, v24);
  return a3;
}

double sub_1002DE3EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, double a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15, char a16, char a17, void *a18)
{
  return sub_1002DE410(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

double sub_1002DE410(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, double a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15, char a16, char a17, void *a18)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  double v38;
  id v39;
  double v40;
  double v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  int v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v75 = a6;
  v77 = a5;
  v78 = a4;
  v74 = a3;
  v73 = a2;
  v24 = sub_10000DF3C(&qword_100806440);
  __chkstk_darwin(v24);
  v79 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for StaticDimension(0);
  v80 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v76 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FloatingPointRoundingRule(0);
  v81 = *(_QWORD *)(v28 - 8);
  v82 = v28;
  __chkstk_darwin(v28);
  v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for FontUseCase(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v35);
  v37 = (char *)&v73 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a12 - a9 - a11;
  if (a1)
  {
    v39 = a1;
    objc_msgSend(v39, "size", v73, v74, v75);
    v41 = v38 - v40;
    if (qword_1007F19E8 != -1)
      swift_once(&qword_1007F19E8, sub_100295C90);
    v38 = v41 - *(double *)&qword_1008535E0;
    objc_msgSend(v39, "size");

  }
  v42 = objc_msgSend(a18, "traitCollection", v73, v74);
  if (a7)
  {
    v43 = qword_1007F19B8;
    v44 = a7;
    if (v43 != -1)
      swift_once(&qword_1007F19B8, sub_10029587C);
    v45 = sub_1000117A8(v31, (uint64_t)qword_100804530);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v37, v45, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v31);
    if ((v77 & 1) != 0)
      v46 = 0;
    else
      v46 = v78;
    v47 = type metadata accessor for Feature(0);
    v84 = v47;
    v85 = sub_10001F65C((unint64_t *)&qword_1007F5400, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v48 = sub_1000117C0(v83);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v48, enum case for Feature.measurement_with_labelplaceholder(_:), v47);
    LOBYTE(v47) = isFeatureEnabled(_:)(v83);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v83);
    v49 = static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(a7, v37, 4, 0, 0, v46, 0, a18, v38, a13, v47 & 1);
    v51 = v50;
    v53 = v52;
    v55 = v54;

    sub_100011088((uint64_t)v37, (uint64_t *)&unk_1007F4D60);
  }
  else
  {
    if (qword_1007F19B8 != -1)
      swift_once(&qword_1007F19B8, sub_10029587C);
    v56 = sub_1000117A8(v31, (uint64_t)qword_100804530);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v56, v31);
    if ((v77 & 1) != 0)
      v57 = 0;
    else
      v57 = v78;
    v58 = type metadata accessor for Feature(0);
    v84 = v58;
    v85 = sub_10001F65C((unint64_t *)&qword_1007F5400, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v59 = sub_1000117C0(v83);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104))(v59, enum case for Feature.measurement_with_labelplaceholder(_:), v58);
    LOBYTE(v58) = isFeatureEnabled(_:)(v83);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v83);
    v49 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v73, v74, v34, 4, 0, 0, v57, 0, v38, a13, a18, v58 & 1);
    v51 = v60;
    v53 = v61;
    v55 = v62;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  }
  v64 = (uint64_t)v79;
  v63 = v80;
  v65 = v82;
  if (qword_1007F19C0 != -1)
    swift_once(&qword_1007F19C0, sub_1002958A0);
  sub_1000117A8(v26, (uint64_t)qword_100804548);
  AnyDimension.topMargin(from:in:)(a18, v26, &protocol witness table for StaticDimension, v49, v51, v53, v55);
  if (a15)
  {
    if (qword_1007F19D8 != -1)
      swift_once(&qword_1007F19D8, sub_100295A3C);
    v66 = sub_1000117A8(v26, (uint64_t)qword_100804590);
    static Dimensions.defaultRoundingRule.getter(v66);
    StaticDimension.value(compatibleWith:rounded:)(v42, v30);
    v67 = *(void (**)(char *, uint64_t))(v81 + 8);
    v67(v30, v65);
    if (qword_1007F19E0 != -1)
      swift_once(&qword_1007F19E0, sub_100295B88);
    v68 = sub_1000117A8(v26, (uint64_t)qword_1008045A8);
    static Dimensions.defaultRoundingRule.getter(v68);
    StaticDimension.value(compatibleWith:rounded:)(v42, v30);
    v67(v30, v65);
  }
  else
  {
    sub_1000194E4(v75, v64, &qword_100806440);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v64, 1, v26) == 1)
    {
      v69 = v76;
      if (qword_1007F19C8 != -1)
        swift_once(&qword_1007F19C8, sub_1002958B4);
      v70 = sub_1000117A8(v26, (uint64_t)qword_100804560);
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v69, v70, v26);
      v71 = sub_100011088(v64, &qword_100806440);
    }
    else
    {
      v69 = v76;
      v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 32))(v76, v64, v26);
    }
    static Dimensions.defaultRoundingRule.getter(v71);
    StaticDimension.value(compatibleWith:rounded:)(v42, v30);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v30, v65);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v69, v26);
  }
  if ((a16 & 1) != 0)
  {
    if (qword_1007F2028 == -1)
      goto LABEL_37;
    goto LABEL_38;
  }
  if ((a17 & 1) != 0 && qword_1007F2028 != -1)
LABEL_38:
    swift_once(&qword_1007F2028, sub_1003FC8FC);
LABEL_37:

  return a12;
}

double sub_1002DEBBC(uint64_t a1, uint64_t a2, char a3, void *a4, __n128 a5, double a6)
{
  double v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[2];
  __int128 v34;
  uint64_t v35;
  void *v36;
  _OWORD v37[10];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[11];
  _QWORD v50[15];
  _BYTE v51[32];
  uint64_t v52;

  v7 = a5.n128_f64[0];
  v32 = a1;
  v11 = type metadata accessor for LabelPlaceholderCompatibility(0, a5);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2C28 != -1)
    swift_once(&qword_1007F2C28, sub_1004910B0);
  sub_1002E00AC((uint64_t)&xmmword_100812110, (uint64_t)v50);
  if ((a3 & 1) == 0)
  {
    sub_100011088((uint64_t)v51, (uint64_t *)&unk_100803C00);
    memset(v51, 0, sizeof(v51));
    v52 = 0;
  }
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F22F8 != -1)
    swift_once(&qword_1007F22F8, sub_1004147B8);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_1000117A8(v15, (uint64_t)qword_100854DD0);
  v17 = objc_msgSend(a4, "traitCollection");
  v18 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v16, v17);
  v31 = (uint64_t)a4;
  v19 = (void *)v18;

  sub_1002E00AC((uint64_t)v50, (uint64_t)v37);
  v20 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v22 = LayoutViewPlaceholder.init(measureWith:)(sub_100491B54, 0, v21);
  v35 = v20;
  v36 = &protocol witness table for LayoutViewPlaceholder;
  *(_QWORD *)&v34 = v22;
  v23 = type metadata accessor for Feature(0);
  *((_QWORD *)&v39 + 1) = v23;
  *(_QWORD *)&v40 = sub_10001F65C((unint64_t *)&qword_1007F5400, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v24 = sub_1000117C0(&v38);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v24, enum case for Feature.measurement_with_labelplaceholder(_:), v23);
  v25 = v19;
  LOBYTE(v23) = isFeatureEnabled(_:)(&v38);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v38);
  swift_bridgeObjectRetain(a2);
  v26 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v32, a2, v25, 4, 0, 0, 0, 0, v23 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v33, v26);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v28 = LayoutViewPlaceholder.init(measureWith:)(sub_100491B54, 0, v27);
  v49[9] = &protocol witness table for LayoutViewPlaceholder;
  v49[8] = v20;
  v49[5] = v28;
  v44 = v37[6];
  v45 = v37[7];
  v46 = v37[8];
  v47 = v37[9];
  v40 = v37[2];
  v41 = v37[3];
  v42 = v37[4];
  v43 = v37[5];
  v38 = v37[0];
  v39 = v37[1];
  sub_100010F3C(&v34, (uint64_t)&v48);
  sub_100010F3C(v33, (uint64_t)v49);
  v29 = sub_1002DE138(v31, &v38, v7, a6);

  sub_1002E00E8(&v38);
  sub_1002E011C(v50);
  return v29;
}

uint64_t sub_1002DEF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002DEF80()
{
  uint64_t v0;

  type metadata accessor for IndexSet(0);
  sub_1002DDE98(*(void **)(v0 + 16));
}

uint64_t sub_1002DEFB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DEFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002DEFD0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1002DEFD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  NSString v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  Class isa;
  id v18;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v6 == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v6, v7, 0);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) == 0)
      return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  }
  v12 = String._bridgeToObjectiveC()();
  type metadata accessor for DetailCollectionViewCell(0);
  static UICollectionReusableView.defaultReuseIdentifier.getter(v13);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v12, v16, isa);

  return v18;
}

void sub_1002DF100(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  __objc2_meth_list **p_base_meths;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double left;
  CGFloat bottom;
  CGFloat right;
  uint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  int v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  NSString v53;
  CGFloat top;
  double v55;
  CGFloat v56;
  CGFloat v57;
  double *v58;
  double *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void *v63;
  CGSize v64;
  id v65;
  double v66;
  CGFloat v67;
  UIImage *v68;
  UIImage *v69;
  _BYTE v70[12];
  int v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  v74 = *(_QWORD *)(v6 - 8);
  v75 = v6;
  __chkstk_darwin(v6);
  v8 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v9);
  v11 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for FamilyPurchasesSection(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = IndexPath.section.getter(v16);
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(v17);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88))(v15, v12);
  if (v18 == enum case for FamilyPurchasesSection.errorBanner(_:))
  {
    v19 = type metadata accessor for LinkableHeaderCollectionViewCell();
    v20 = swift_dynamicCastClass(a1, v19);
    if (v20)
    {
      v21 = (char *)v20;
      v22 = a1;
      v23 = dispatch thunk of FamilyPurchasesPresenter.errorBannerLinkableText.getter();
      if (v23)
      {
        v24 = v23;
        v25 = objc_retain(*(id *)(*(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension32LinkableHeaderCollectionViewCell_headerView]
                                + OBJC_IVAR____TtC22SubscribePageExtension18LinkableHeaderView_label));
        v26 = LinkableText.linkedSubstrings.getter();
        sub_100197870(v26, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1000CAE14);
        v28 = v27;
        v29 = swift_bridgeObjectRelease(v26);
        v30 = LinkableText.styledText.getter(v29);
        sub_10005A32C(v30, 0, v28);

        swift_bridgeObjectRelease(v28);
        objc_msgSend(v21, "setNeedsLayout", swift_release(v30).n128_f64[0]);

        swift_release(v24);
      }
      else
      {

      }
    }
    return;
  }
  v31 = v18 == enum case for FamilyPurchasesSection.loggedInUser(_:)
     || v18 == enum case for FamilyPurchasesSection.familyMembers(_:);
  if (!v31)
  {
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    return;
  }
  v32 = type metadata accessor for AccountDetailCollectionViewCell(0);
  v33 = swift_dynamicCastClass(a1, v32);
  if (v33)
  {
    v34 = (char *)v33;
    v35 = a1;
    p_base_meths = (__objc2_meth_list **)&selRef_activityViewController_itemForActivityType_;
    v37 = objc_msgSend(v2, "pageMarginInsets");
    v39 = v38;
    v73 = IndexPath.item.getter(v37);
    v40 = IndexPath.item.getter(v73);
    v41 = v40 + 1;
    if (__OFADD__(v40, 1))
    {
      __break(1u);
    }
    else
    {
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v45 = IndexPath.section.getter(v40);
      v46 = dispatch thunk of FamilyPurchasesPresenter.numberOfRows(in:)(v45);
      v31 = v41 == v46;
      v47 = v41 != v46;
      v48 = v31;
      v71 = v48;
      v49 = v35;
      objc_msgSend(v3, "pageMarginInsets");
      objc_msgSend(v34, "setLayoutMargins:");
      v72 = v49;

      dispatch thunk of FamilyPurchasesPresenter.title(forItemAt:)(a2);
      v51 = v50;
      v52 = *(void **)&v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_titleLabel];
      v53 = String._bridgeToObjectiveC()();
      objc_msgSend(v52, "setText:", v53, swift_bridgeObjectRelease(v51).n128_f64[0]);

      p_base_meths = &TodayCardChinLockupListView.base_meths;
      objc_msgSend(v34, "setNeedsLayout");
      v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_showTopSeparatorView] = 1;
      objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_topSeparatorView], "setHidden:", 0);
      top = UIEdgeInsetsZero.top;
      if (v73)
        v55 = v39;
      else
        v55 = left;
      v56 = bottom;
      v57 = right;
      if (v73)
      {
        top = 0.0;
        v56 = 0.0;
        v57 = 0.0;
      }
      v58 = (double *)&v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_topSeparatorViewInsets];
      *v58 = top;
      v58[1] = v55;
      v58[2] = v56;
      v58[3] = v57;
      *((_BYTE *)v58 + 32) = 0;
      v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_showBottomSeparatorView] = v71;
      objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_bottomSeparatorView], "setHidden:", v47);
      v59 = (double *)&v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_bottomSeparatorViewInsets];
      *v59 = UIEdgeInsetsZero.top;
      v59[1] = left;
      v59[2] = bottom;
      v59[3] = right;
      *((_BYTE *)v59 + 32) = 0;
      v60 = type metadata accessor for Accessory(0);
      swift_storeEnumTagMultiPayload(v11, v60, 10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v11, 0, 1, v60);
      sub_1004C0178((uint64_t)v11, *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph]);
      sub_100011088((uint64_t)v11, &qword_1007FAFB0);
      objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_accessoryView], "setHidden:", 0);
      if (qword_1007F1B40 == -1)
        goto LABEL_21;
    }
    swift_once(&qword_1007F1B40, sub_1002DCD20);
LABEL_21:
    v61 = &v34[OBJC_IVAR____TtC22SubscribePageExtension31AccountDetailCollectionViewCell_imageMarginRight];
    *(_QWORD *)v61 = qword_1008063C8;
    v61[8] = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v74 + 104))(v8, enum case for Artwork.Style.round(_:), v75);
    ArtworkView.style.setter(v8);
    v62 = dispatch thunk of FamilyPurchasesPresenter.imageForFamilyMember(at:)(a2);
    if (v62)
    {
      v63 = (void *)v62;
      if (qword_1007F1B38 != -1)
        swift_once(&qword_1007F1B38, sub_1002DCD08);
      v64 = (CGSize)xmmword_1008063B8;
      v65 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v65, "scale");
      v67 = v66;

      UIGraphicsBeginImageContextWithOptions(v64, 0, v67);
      objc_msgSend(v63, "drawInRect:", 0.0, 0.0, xmmword_1008063B8);
      v68 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();

    }
    else
    {
      v68 = 0;
    }
    v69 = v68;
    ArtworkView.image.setter(v68);
    objc_msgSend(v34, (SEL)p_base_meths[408]);

  }
}

void sub_1002DF744(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void *v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  id v41;

  v4 = v3;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DetailCollectionViewCell(0);
  v12 = swift_dynamicCastClass(a1, v11);
  if (v12)
  {
    v13 = (char *)v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v14 == a2 && v15 == a3)
    {
      v20 = a1;
      v19 = swift_bridgeObjectRelease(a3).n128_u64[0];
    }
    else
    {
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v14, v15, 0);
      v41 = a1;
      v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
      if ((v18 & 1) == 0)
      {

        return;
      }
    }
    v21 = objc_msgSend(v13, "contentView", *(double *)&v19);
    v22 = (void *)objc_opt_self(UIColor);
    v23 = objc_msgSend(v22, "clearColor");
    objc_msgSend(v21, "setBackgroundColor:", v23);

    v24 = a1;
    v25 = objc_msgSend(v22, "clearColor");
    objc_msgSend(v13, "setBackgroundColor:", v25);

    v13[OBJC_IVAR____TtC22SubscribePageExtension24DetailCollectionViewCell_isSelectable] = 0;
    v26 = IndexPath.section.getter(objc_msgSend(v13, "setSelectedBackgroundView:", 0));
    dispatch thunk of FamilyPurchasesPresenter.title(forSection:)(v26);
    v29 = *(void **)&v13[OBJC_IVAR____TtC22SubscribePageExtension24DetailCollectionViewCell_titleLabel];
    if (v27)
    {
      v30 = v27;
      v31 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v28 = swift_bridgeObjectRelease(v30).n128_u64[0];
    }
    else
    {
      v31 = 0;
    }
    objc_msgSend(v29, "setText:", v31, v28);

    if (qword_1007F2170 != -1)
      swift_once(&qword_1007F2170, sub_1004137CC);
    v32 = type metadata accessor for FontUseCase(0);
    v33 = sub_1000117A8(v32, (uint64_t)qword_100854950);
    v34 = *(_QWORD *)(v32 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v10, v33, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v32);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v10);
    v35 = v29;
    v36 = objc_msgSend(v22, "systemGrayColor");
    objc_msgSend(v35, "setTextColor:", v36);

    v37 = v24;
    objc_msgSend(v4, "pageMarginInsets");
    v39 = v38;
    objc_msgSend(v4, "pageMarginInsets");
    objc_msgSend(v13, "setLayoutMargins:", 0.0, v39, 0.0);

  }
}

void sub_1002DFA98(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  double v23;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  double left;
  double bottom;
  double right;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;

  v3 = v2;
  v6 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FamilyPurchasesSection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = IndexPath.section.getter(v13);
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(v14);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v15 == enum case for FamilyPurchasesSection.errorBanner(_:))
  {
    v16 = dispatch thunk of FamilyPurchasesPresenter.errorBannerLinkableText.getter();
    if (v16)
    {
      v17 = v16;
      v18 = LinkableText.plainText.getter(v16);
      v20 = v19;
      objc_msgSend(a1, "bounds");
      v22.n128_u64[0] = v21;
      sub_1002DEBBC(v18, v20, 0, v3, v22, v23);
      swift_release(v17);
      swift_bridgeObjectRelease(v20);
    }
  }
  else
  {
    if (v15 != enum case for FamilyPurchasesSection.loggedInUser(_:)
      && v15 != enum case for FamilyPurchasesSection.familyMembers(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return;
    }
    if (qword_1007F1B38 != -1)
      swift_once(&qword_1007F1B38, sub_1002DCD08);
    v25 = xmmword_1008063B8;
    v26 = dispatch thunk of FamilyPurchasesPresenter.title(forItemAt:)(a2);
    v28 = v27;
    v29 = type metadata accessor for Accessory(0);
    swift_storeEnumTagMultiPayload(v8, v29, 10);
    v30 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v8, 0, 1, v29);
    v31 = IndexPath.item.getter(v30);
    v32 = IndexPath.section.getter(v31);
    v33 = dispatch thunk of FamilyPurchasesPresenter.numberOfRows(in:)(v32);
    v34 = v33 - 1;
    if (__OFSUB__(v33, 1))
    {
      __break(1u);
    }
    else
    {
      v35 = objc_msgSend(v3, "view");
      if (v35)
      {
        v36 = v35;
        left = UIEdgeInsetsZero.left;
        bottom = UIEdgeInsetsZero.bottom;
        right = UIEdgeInsetsZero.right;
        objc_msgSend(v35, "bounds");
        v41 = v40;

        sub_1004C0B64(0, v25, *((void **)&v25 + 1), 0, v26, v28, 0, 0, UIEdgeInsetsZero.top, left, bottom, right, v41, v42, v43, v44, 0, 0, (uint64_t)v8,
          0.0,
          1,
          1,
          v31 == v34,
          v3);
        swift_bridgeObjectRelease(v28);
        sub_100011088((uint64_t)v8, &qword_1007FAFB0);
        return;
      }
    }
    __break(1u);
  }
}

id sub_1002DFDC0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  id result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double left;
  double bottom;
  double right;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v4 = sub_10000DF3C(&qword_100806440);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FamilyPurchasesSection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FamilyPurchasesSection.familyMembers(_:), v7);
  v14 = sub_10001F65C(&qword_100806448, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FamilyPurchasesSection, (uint64_t)&protocol conformance descriptor for FamilyPurchasesSection);
  dispatch thunk of RawRepresentable.rawValue.getter(&v34, v7, v14);
  dispatch thunk of RawRepresentable.rawValue.getter(&v33, v7, v14);
  v16 = v33;
  v15 = v34;
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  result = (id)((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
  if (v15 == v16)
  {
    v19 = dispatch thunk of FamilyPurchasesPresenter.title(forSection:)(a1);
    v21 = v20;
    if (qword_1007F1B48 != -1)
      swift_once(&qword_1007F1B48, sub_1002DCD30);
    v22 = type metadata accessor for StaticDimension(0);
    v23 = sub_1000117A8(v22, (uint64_t)qword_1008063D0);
    v24 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v23, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v6, 0, 1, v22);
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v25 = result;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      objc_msgSend(result, "bounds");
      v30 = v29;
      v32 = v31;

      sub_1002DE410(0, v19, v21, 0, 1, (uint64_t)v6, 0, UIEdgeInsetsZero.top, left, bottom, right, v30, v32, 0, 0, 0, 0, v2);
      swift_bridgeObjectRelease(v21);
      return (id)sub_100011088((uint64_t)v6, &qword_100806440);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002E00AC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LinkableHeaderViewLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1002E00E8(_QWORD *a1)
{
  destroy for LinkableHeaderViewLayout(a1);
  return a1;
}

_QWORD *sub_1002E011C(_QWORD *a1)
{
  destroy for LinkableHeaderViewLayout.Metrics(a1);
  return a1;
}

__n128 sub_1002E0150()
{
  __n128 result;

  __asm { FMOV            V0.2D, #20.0 }
  xmmword_100806450 = (__int128)result;
  *(__n128 *)&qword_100806460 = result;
  return result;
}

char *sub_1002E0164(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  objc_class *v28;
  id v29;
  double left;
  double bottom;
  double right;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(_QWORD *, char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  void (*v69)(char *, uint64_t);
  void *v70;
  char *v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  UIContentSizeCategory v96;
  char *v97;
  uint64_t v98;
  void (*v99)(_QWORD *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  _QWORD v105[3];
  uint64_t v106;
  void *v107;
  _QWORD v108[3];
  uint64_t v109;
  void *v110;
  objc_super v111;

  v9 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v10 = __chkstk_darwin(v9);
  v97 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FontSource(0, v10);
  v103 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v94 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v90 - v19;
  v21 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_materialBackground;
  v22 = objc_allocWithZone((Class)UIVisualEffectView);
  v23 = v4;
  *(_QWORD *)&v4[v21] = objc_msgSend(v22, "init");
  v24 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView;
  v25 = type metadata accessor for SmallLockupView(0);
  *(_QWORD *)&v23[v24] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)), "init");
  v26 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_tapGestureRecognizer;
  *(_QWORD *)&v23[v26] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v27 = &v23[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_selectionHandler];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;

  v28 = (objc_class *)type metadata accessor for CarouselItemLockupOverlay();
  v111.receiver = v23;
  v111.super_class = v28;
  v29 = objc_msgSendSuper2(&v111, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v33 = (char *)v29;
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v33, "setOverrideUserInterfaceStyle:", 2);
  v91 = v33;
  v96 = UIContentSizeCategoryExtraExtraExtraLarge;
  objc_msgSend(v33, "setMaximumContentSizeCategory:");
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v34 = sub_1000117A8(v15, (uint64_t)qword_100852280);
  v35 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v98 = v15;
  v92 = v35;
  v35(v20, (char *)v34, v15);
  SmallLockupLayout.Metrics.artworkSize.setter(60.0, 60.0);
  v104 = v20;
  if (qword_1007F2878 != -1)
    swift_once(&qword_1007F2878, sub_100417628);
  v95 = v16;
  v36 = type metadata accessor for FontUseCase(0);
  v37 = sub_1000117A8(v36, (uint64_t)qword_100855E50);
  v93 = *(_QWORD *)(v36 - 8);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  v38(v14, v37, v36);
  v39 = v103;
  v40 = *(void (**)(char *))(v103 + 104);
  v41 = enum case for FontSource.useCase(_:);
  v40(v14);
  v42 = type metadata accessor for StaticDimension(0);
  v109 = v42;
  v110 = &protocol witness table for StaticDimension;
  sub_1000117C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v43 = sub_1000117C0(v105);
  v99 = *(void (**)(_QWORD *, char *, uint64_t))(v39 + 16);
  v99(v43, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 14.0);
  v103 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  SmallLockupLayout.Metrics.headingSpace.setter(v108);
  if (qword_1007F2880 != -1)
    swift_once(&qword_1007F2880, sub_100417644);
  v44 = sub_1000117A8(v36, (uint64_t)qword_100855E68);
  v100 = v44;
  v38(v14, v44, v36);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v41, v12);
  v109 = v42;
  v101 = v36;
  v110 = &protocol witness table for StaticDimension;
  sub_1000117C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v45 = sub_1000117C0(v105);
  v99(v45, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 24.0);
  v90 = v42;
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  v46 = v38;
  SmallLockupLayout.Metrics.titleRegularSpace.setter(v108);
  v47 = v101;
  v38(v14, v44, v101);
  v102 = v38;
  v48 = v41;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v41, v12);
  v109 = v42;
  v110 = &protocol witness table for StaticDimension;
  sub_1000117C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v49 = sub_1000117C0(v105);
  v50 = v99;
  v99(v49, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 18.0);
  v51 = (void (*)(char *, uint64_t))v103;
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  SmallLockupLayout.Metrics.titleMediumSpace.setter(v108);
  v52 = v100;
  v46(v14, v100, v47);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v48, v12);
  v53 = v90;
  v109 = v90;
  v110 = &protocol witness table for StaticDimension;
  sub_1000117C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v54 = sub_1000117C0(v105);
  v50(v54, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 18.0);
  v51(v14, v12);
  SmallLockupLayout.Metrics.titleShortSpace.setter(v108);
  v102(v14, v52, v101);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v48, v12);
  v109 = v53;
  v110 = &protocol witness table for StaticDimension;
  sub_1000117C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v55 = sub_1000117C0(v105);
  v50(v55, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 22.0);
  v51(v14, v12);
  SmallLockupLayout.Metrics.titleWithHeadingSpace.setter(v108);
  if (qword_1007F2890 != -1)
    swift_once(&qword_1007F2890, sub_10041767C);
  v56 = v101;
  v57 = sub_1000117A8(v101, (uint64_t)qword_100855E98);
  v102(v14, v57, v56);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v48, v12);
  v109 = v53;
  v110 = &protocol witness table for StaticDimension;
  sub_1000117C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v58 = sub_1000117C0(v105);
  v50(v58, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 20.0);
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  v59 = v104;
  SmallLockupLayout.Metrics.subtitleSpace.setter(v108);
  v60 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView;
  v61 = v91;
  v62 = *(char **)&v91[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView];
  v63 = v94;
  v64 = v98;
  v92(v94, v59, v98);
  v65 = &v62[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics];
  swift_beginAccess(&v62[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics], v108, 33, 0);
  v66 = v95;
  v67 = *(void (**)(char *, char *, uint64_t))(v95 + 24);
  v68 = v62;
  v67(v65, v63, v64);
  objc_msgSend(v68, "setNeedsLayout", swift_endAccess(v108).n128_f64[0]);
  v69 = *(void (**)(char *, uint64_t))(v66 + 8);
  v69(v63, v64);

  v70 = *(void **)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_titleLabel);
  v71 = v97;
  v102(v97, v100, v56);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v71, 0, 1, v56);
  v72 = v70;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v71);

  v73 = objc_msgSend(*(id *)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel), "layer");
  v74 = kCAFilterPlusL;
  objc_msgSend(v73, "setCompositingFilter:", kCAFilterPlusL);

  v75 = *(void **)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel);
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v76 = v75;
  v77 = (void *)static UIColor.secondaryText.getter(v76);
  objc_msgSend(v76, "setTextColor:", v77);

  v78 = *(void **)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel);
  objc_msgSend(v78, "_setTextColorFollowsTintColor:", 0);
  v79 = objc_msgSend(v78, "layer");
  objc_msgSend(v79, "setCompositingFilter:", v74);

  v80 = *(void **)&v61[v60];
  objc_msgSend(v80, "setMaximumContentSizeCategory:", v96);
  v81 = objc_msgSend(v80, "layer");
  objc_msgSend(v81, "setAllowsGroupBlending:", 0);

  v82 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_materialBackground;
  v83 = *(id *)&v61[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_materialBackground];
  sub_1005C8FE8(26.0);

  v84 = *(void **)&v61[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_tapGestureRecognizer];
  objc_msgSend(v84, "setEnabled:", 0);
  objc_msgSend(v84, "addTarget:action:", v61, "handleSelection:");
  objc_msgSend(v84, "setDelegate:", v61);
  objc_msgSend(v61, "addGestureRecognizer:", v84);
  v85 = *(void **)&v61[v82];
  objc_msgSend(v61, "addSubview:", v85);
  v86 = objc_msgSend(v85, "contentView");
  objc_msgSend(v86, "addSubview:", *(_QWORD *)&v61[v60]);

  v87 = objc_msgSend(*(id *)&v61[v82], "contentView");
  v88 = objc_msgSend(v87, "layer");

  objc_msgSend(v88, "setAllowsGroupBlending:", 0);
  v69(v104, v64);
  return v61;
}

uint64_t sub_1002E0C60()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  objc_class *v5;
  void *v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  _BYTE v18[40];
  _QWORD v19[5];
  _QWORD v20[5];
  objc_super v21;

  v1 = type metadata accessor for Center(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for CarouselItemLockupOverlay();
  v21.receiver = v0;
  v21.super_class = v5;
  objc_msgSendSuper2(&v21, "layoutSubviews");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_materialBackground], "setFrame:", LayoutMarginsAware<>.layoutFrame.getter(v5));
  v6 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView];
  v20[3] = type metadata accessor for SmallLockupView(0);
  v20[4] = sub_10000E99C(&qword_1008064B8, type metadata accessor for SmallLockupView, (uint64_t)&unk_10067988C);
  v20[0] = v6;
  v7 = qword_1007F1B50;
  v8 = v6;
  if (v7 != -1)
    swift_once(&qword_1007F1B50, sub_1002E0150);
  v9 = xmmword_100806450;
  v10 = *(double *)&qword_100806460;
  v11 = unk_100806468;
  sub_100011020((uint64_t)v20, (uint64_t)v18);
  v19[3] = type metadata accessor for Margins(0);
  v19[4] = &protocol witness table for Margins;
  sub_1000117C0(v19);
  Margins.init(insets:child:)(v18, *(double *)&v9, *((double *)&v9 + 1), v10, v11);
  v13 = static Center.Axis.neither.getter(v12);
  Center.init(_:filling:)(v19, v13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
  v14 = LayoutMarginsAware<>.layoutFrame.getter(v5);
  v15 = objc_msgSend(v0, "traitCollection");
  dispatch thunk of Placeable.place(at:with:)(v15, v1, &protocol witness table for Center, v14);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_1002E0E98(double a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  double v15;
  _BYTE v18[40];
  _QWORD v19[5];
  _QWORD v20[5];

  v5 = type metadata accessor for Center(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100192460(v20);
  if (qword_1007F1B50 != -1)
    swift_once(&qword_1007F1B50, sub_1002E0150);
  v9 = xmmword_100806450;
  v10 = *(double *)&qword_100806460;
  v11 = unk_100806468;
  sub_100011020((uint64_t)v20, (uint64_t)v18);
  v19[3] = type metadata accessor for Margins(0);
  v19[4] = &protocol witness table for Margins;
  sub_1000117C0(v19);
  Margins.init(insets:child:)(v18, *(double *)&v9, *((double *)&v9 + 1), v10, v11);
  v13 = static Center.Axis.neither.getter(v12);
  Center.init(_:filling:)(v19, v13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
  v14.n128_f64[0] = a1;
  v15 = sub_1002E199C((uint64_t)v8, v2, v14, a2);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return v15;
}

double sub_1002E1150(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = HeroCarouselItemOverlay.lockup.getter(v20);
  if (v23)
  {
    v25 = v23;
    v46 = v2;
    v26 = *(char **)&v2[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView];
    v27 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 1, 1, v27);
    v28 = type metadata accessor for OfferStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
    v29 = type metadata accessor for OfferEnvironment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 1, 1, v29);
    v30 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
    v31 = type metadata accessor for OfferTint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
    sub_10054F220(v25, v26, (uint64_t)v22, a2, 0, 0, (uint64_t)v18, (uint64_t)v15, (uint64_t)v9, (uint64_t)v12);
    sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007F76F0);
    v26[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    sub_100192BDC();
    objc_msgSend(v26, "setNeedsLayout");
    sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F7C10);
    sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007F7C20);
    sub_100011088((uint64_t)v18, (uint64_t *)&unk_1007F7700);
    sub_100011088((uint64_t)v22, (uint64_t *)&unk_1007F7710);
    v32 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel;
    v33 = *(void **)&v26[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel];
    if (v33)
    {
      v34 = qword_1007F2878;
      v35 = v33;
      if (v34 != -1)
        swift_once(&qword_1007F2878, sub_100417628);
      v36 = type metadata accessor for FontUseCase(0);
      v37 = sub_1000117A8(v36, (uint64_t)qword_100855E50);
      v38 = *(_QWORD *)(v36 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v6, v37, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v6, 0, 1, v36);
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v6);

      v39 = *(void **)&v26[v32];
      if (v39)
      {
        v40 = (void *)objc_opt_self(UIColor);
        v41 = v39;
        v42 = objc_msgSend(v40, "secondaryLabelColor");
        objc_msgSend(v41, "setTextColor:", v42);

        v43 = *(void **)&v26[v32];
        if (v43)
        {
          v44 = objc_msgSend(v43, "layer");
          objc_msgSend(v44, "setCompositingFilter:", kCAFilterPlusL);

        }
      }
    }
    objc_msgSend(v46, "setNeedsLayout");
    *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  }
  return result;
}

void sub_1002E15A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;

  v3 = v2;
  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = HeroCarouselItemOverlay.lockup.getter(v10);
  if (v13)
  {
    v14 = v13;
    v15 = dispatch thunk of Lockup.artwork.getter(v13);
    v16 = swift_release(v14);
    if (v15)
    {
      v17 = Artwork.crop.getter(v16);
      v18 = Artwork.Crop.preferredContentMode.getter(v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if (qword_1007F14D8 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v19 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v20 = sub_1000117A8(v19, (uint64_t)qword_100852280);
      v21 = SmallLockupLayout.Metrics.artworkSize.getter(v20);
      v23 = Artwork.config(_:mode:prefersLayeredImage:)(v18, 0, v21, v22);
      v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView);
      v25 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
      v26 = *(id *)(v24 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
      Artwork.style.getter(v26);
      v27 = ArtworkView.style.setter(v7);
      *(_QWORD *)&v28 = Artwork.contentMode.getter(v27).n128_u64[0];
      v30 = ArtworkLoaderConfig.size.getter(objc_msgSend(v26, "setContentMode:", v29, v28));
      v32 = ArtworkView.imageSize.setter(v30, v31);
      v33 = Artwork.backgroundColor.getter(v32);
      if (!v33)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v33 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v33);

      v34 = *(void **)(v24 + v25);
      objc_msgSend(v34, "setContentMode:", v18);
      v35 = type metadata accessor for ArtworkView(0);
      v36 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v37 = v34;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v23, 2, 1, v37, v35, v36);
      swift_release(v15);
      swift_release(v23);

    }
  }
}

id sub_1002E1820()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarouselItemLockupOverlay();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarouselItemLockupOverlay()
{
  return objc_opt_self(_TtC22SubscribePageExtension25CarouselItemLockupOverlay);
}

uint64_t sub_1002E18CC(uint64_t a1, uint64_t a2)
{
  sub_1002E1D1C(a1, a2);
  return sub_100019310(a1, a2);
}

void sub_1002E1908()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView)
                + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v2 = type metadata accessor for ArtworkView(0);
  v3 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v4 = v1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1, v2, v3);

}

double sub_1002E199C(uint64_t a1, void *a2, __n128 a3, double a4)
{
  double v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  id v24;
  id v25;
  double v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  double (*v40)(_BYTE *, uint64_t, uint64_t);
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  void *v44;
  id v45;
  double v46;
  _BYTE v48[8];
  char v49;
  _BYTE v50[40];
  _QWORD v51[3];
  uint64_t v52;
  void *v53;
  _QWORD v54[6];

  v6 = a3.n128_f64[0];
  v8 = type metadata accessor for Resize.Rule(0, a3);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v48[-v13];
  __chkstk_darwin(v15);
  v17 = &v48[-v16];
  __chkstk_darwin(v18);
  v20 = &v48[-v19];
  v21 = type metadata accessor for Center(0);
  v54[3] = v21;
  v54[4] = &protocol witness table for Center;
  v22 = sub_1000117C0(v54);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, a1, v21);
  v23 = sub_1001432DC(v6, a4);
  v24 = objc_msgSend(a2, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");

  if (v25 == (id)2)
    v26 = 635.0;
  else
    v26 = v6;
  if (v26 <= v23)
  {
    sub_100011020((uint64_t)v54, (uint64_t)v50);
    *((_QWORD *)v20 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v20 + 4) = &protocol witness table for CGFloat;
    *(double *)v20 = v26;
    v40 = *(double (**)(_BYTE *, uint64_t, uint64_t))(v9 + 104);
    v40(v20, enum case for Resize.Rule.replaced(_:), v8);
    v41 = enum case for Resize.Rule.unchanged(_:);
    v40(v17, enum case for Resize.Rule.unchanged(_:), v8);
    v40(v14, v41, v8);
    v42.n128_f64[0] = v40(v11, v41, v8);
    v52 = type metadata accessor for Resize(0, v42);
    v53 = &protocol witness table for Resize;
    sub_1000117C0(v51);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v50, v20, v17, v14, v11);
  }
  else
  {
    v27 = MeasurementRange.init(minimum:maximum:)(*(_QWORD *)&v23, 0, *(_QWORD *)&v26, 0);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_100011020((uint64_t)v54, (uint64_t)v50);
    v34 = MeasurementRange.init(minimum:maximum:)(0, 1, 0, 1);
    v36 = v35;
    v38 = v37;
    v52 = type metadata accessor for Constrain(0);
    v53 = &protocol witness table for Constrain;
    sub_1000117C0(v51);
    v39 = v29 & 1;
    v33 &= 1u;
    v49 = v36 & 1;
    v48[0] = v38 & 1;
    Constrain.init(_:width:height:)(v50, v27, v39, v31, v33, v34);
    v50[0] = v39;
    v49 = v33;
    v6 = MeasurementRange.constrain(_:)(v27, v39, v31, v33, v6);
  }
  v43 = v52;
  v44 = v53;
  sub_100011064(v51, v52);
  v45 = objc_msgSend(a2, "traitCollection");
  v46 = dispatch thunk of Placeable.measure(toFit:with:)(v45, v43, v44, v6, a4);

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v54);
  return v46;
}

id sub_1002E1D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_selectionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_selectionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_selectionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_100019320(a1, a2);
  sub_100019310(v4, v5);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_tapGestureRecognizer);
  v7 = *v3;
  v8 = v3[1];
  if (*v3)
  {
    v9 = swift_allocObject(&unk_100736308, 32, 7);
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = v8;
    v10 = sub_100030368;
  }
  else
  {
    v10 = 0;
    v9 = 0;
  }
  sub_100019320(v7, v8);
  sub_100019310((uint64_t)v10, v9);
  return objc_msgSend(v6, "setEnabled:", v7 != 0);
}

uint64_t sub_1002E1DDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002E1E00()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_materialBackground;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView;
  v3 = type metadata accessor for SmallLockupView(0);
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_tapGestureRecognizer;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_selectionHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CarouselItemLockupOverlay.swift", 54, 2, 73, 0);
  __break(1u);
}

BOOL sub_1002E1EDC(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = objc_msgSend(a1, "touchesForView:", *(_QWORD *)(*(_QWORD *)(v1+ OBJC_IVAR____TtC22SubscribePageExtension25CarouselItemLockupOverlay_smallLockupView)+ OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton));
  if (!v2)
    return 1;
  v3 = v2;
  v4 = sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
  v5 = sub_10006C2E0();
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  if ((v6 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v8 = v6;
    else
      v8 = v6 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.count.getter(v8, v7);
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 16);
  }
  swift_bridgeObjectRelease(v6);
  return v9 == 0;
}

void sub_1002E1FA0()
{
  qword_1008064C0 = 0x4014000000000000;
}

void sub_1002E1FB0()
{
  qword_1008064C8 = 0x4034000000000000;
}

char *sub_1002E1FC0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  NSString v27;
  objc_super v29;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_label;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_backgroundView;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v29.receiver = v6;
  v29.super_class = ObjectType;
  v8 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_backgroundView;
  v10 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_backgroundView];
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "systemBlueColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  v14 = objc_msgSend(*(id *)&v8[v9], "layer");
  objc_msgSend(v14, "setCornerRadius:", 13.0);

  v15 = objc_msgSend(*(id *)&v8[v9], "layer");
  objc_msgSend(v15, "setCornerCurve:", kCACornerCurveCircular);

  objc_msgSend(v8, "addSubview:", *(_QWORD *)&v8[v9]);
  v16 = OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_label;
  v17 = *(id *)&v8[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_label];
  v18 = objc_msgSend(v11, "whiteColor");
  objc_msgSend(v17, "setTextColor:", v18);

  v19 = *(void **)&v8[v16];
  v20 = (void *)objc_opt_self(UIFont);
  v21 = v19;
  v22 = objc_msgSend(v20, "systemFontOfSize:", 32.0);
  objc_msgSend(v21, "setFont:", v22);

  v23 = *(id *)&v8[v16];
  v24._object = (void *)0x8000000100642900;
  v24._countAndFlagsBits = 0xD00000000000001FLL;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v24, v25)._object;
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v23, "setText:", v27);

  objc_msgSend(v8, "addSubview:", *(_QWORD *)&v8[v16]);
  return v8;
}

id sub_1002E2360()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  double Width;
  objc_super v7;
  CGRect v8;
  CGRect v9;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_backgroundView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_label];
  objc_msgSend(v2, "sizeToFit");
  if (qword_1007F1B60 != -1)
    swift_once(&qword_1007F1B60, sub_1002E1FB0);
  v3 = *(double *)&qword_1008064C8;
  if (qword_1007F1B58 != -1)
    swift_once(&qword_1007F1B58, sub_1002E1FA0);
  v4 = *(double *)&qword_1008064C0;
  objc_msgSend(v2, "frame");
  Width = CGRectGetWidth(v8);
  objc_msgSend(v2, "frame");
  return objc_msgSend(v2, "setFrame:", v3, v4, Width, CGRectGetHeight(v9));
}

uint64_t type metadata accessor for OnboardingAdPrivacyHeaderIconView()
{
  return objc_opt_self(_TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView);
}

double sub_1002E2598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v15;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = __chkstk_darwin(v1).n128_u64[0];
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_label);
  objc_msgSend(v6, "sizeToFit", v3);
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  if (qword_1007F1B60 != -1)
    swift_once(&qword_1007F1B60, sub_1002E1FB0);
  v11 = *(double *)&qword_1008064C8;
  if (qword_1007F1B58 != -1)
    swift_once(&qword_1007F1B58, sub_1002E1FA0);
  v12 = v10 + *(double *)&qword_1008064C0 + *(double *)&qword_1008064C0;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FloatingPointRoundingRule.up(_:), v1);
  v13 = CGSize.rounded(_:)(v5, v8 + v11 + v11, v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v13;
}

id sub_1002E26F4(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  double v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = a1 & 1;
  v12 = OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_adPrivacyHeaderIconView;
  v13 = objc_allocWithZone((Class)type metadata accessor for OnboardingAdPrivacyHeaderIconView());
  v14 = v5;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, "init");
  v14[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_buttonsStyle] = v11;
  v15 = &v14[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_buttonsCallback];
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = a4;
  swift_retain(a4);

  v16._object = (void *)0x80000001006429B0;
  v16._countAndFlagsBits = 0xD000000000000025;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v16, v17)._object;
  static AppleAccountBranding.localizedString(_:)(0xD000000000000026, 0x80000001006429E0);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v22 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
  v28.receiver = v14;
  v28.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v28, "initWithTitle:detailText:icon:contentLayout:", v21, v22, 0, 2, v23);

  v25 = v24;
  objc_msgSend(v25, "setModalInPresentation:", 1);
  v26 = v25;
  objc_msgSend(v26, "setDisableButtonsUntilAllContentWasVisable:", a2 & 1);

  swift_release(a4);
  return v26;
}

void sub_1002E28AC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  double v17;
  id v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  NSString v24;
  id v25;
  NSString v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void (*v41)(__int128 *, _QWORD);
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  id v44;
  Swift::String v45;
  Swift::String v46;
  void *v47;
  NSString v48;
  id v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  id v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  void *v56;
  NSString v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  objc_super v70;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for AutomationSemantics(0);
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - v10;
  v12 = type metadata accessor for UIButton.Configuration(0);
  v62 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70.receiver = v1;
  v70.super_class = ObjectType;
  objc_msgSendSuper2(&v70, "viewDidLoad", v13);
  v16 = objc_msgSend(v1, "headerView");
  LODWORD(v17) = 1036831949;
  objc_msgSend(v16, "setTitleHyphenationFactor:", v17);

  v18 = objc_msgSend(v1, "headerView");
  v19 = objc_msgSend(v18, "customIconContainerView");

  if (v19)
  {
    objc_msgSend(v19, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_adPrivacyHeaderIconView]);

  }
  v20 = objc_msgSend((id)objc_opt_self(OBHeaderAccessoryButton), "accessoryButton");
  v21._countAndFlagsBits = 0xD00000000000002ALL;
  v21._object = (void *)0x8000000100642A80;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v21, v22)._object;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setTitle:forState:", v24, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v20, "addTarget:action:forControlEvents:", v1, "didTapLearnMore", 64);
  v25 = v20;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setAccessibilityIdentifier:", v26);

  v27 = objc_msgSend(v1, "headerView");
  v63 = v25;
  objc_msgSend(v27, "addAccessoryButton:", v25);

  LOBYTE(v24) = v1[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_buttonsStyle];
  v28 = (void *)objc_opt_self(OBBoldTrayButton);
  v29 = objc_msgSend(v28, "boldButton");
  v30 = v29;
  if ((v24 & 1) != 0)
  {
    v31 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
  }
  else
  {
    v60 = v29;
    v32 = v29;
    v33 = objc_msgSend(v28, "boldButton");
    v34 = v32;
    v35 = v33;
    UIButton.configuration.getter(v36);

    v37 = v62;
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v11, 1, v12);
    v61 = v35;
    if ((_DWORD)v38 == 1)
    {
      static UIButton.Configuration.gray()(v38);
      sub_100011088((uint64_t)v11, &qword_100804D10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v15, v11, v12);
    }
    v39 = (void *)objc_opt_self(UIColor);
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v39, "systemBlueColor"));
    v40 = objc_msgSend(v39, "systemGray5Color");
    v41 = (void (*)(__int128 *, _QWORD))UIButton.Configuration.background.modify(&v68);
    UIBackgroundConfiguration.backgroundColor.setter(v40);
    v41(&v68, 0);
    v42 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v42(v8, v15, v12);
    v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
    v43(v8, 0, 1, v12);
    UIButton.configuration.setter(v8);

    v42(v8, v15, v12);
    v43(v8, 0, 1, v12);
    v31 = v61;
    UIButton.configuration.setter(v8);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v12);
    v30 = v60;
  }
  v44 = v30;
  v45._countAndFlagsBits = 0xD000000000000027;
  v45._object = (void *)0x8000000100642AE0;
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  v47 = localizedString(_:comment:)(v45, v46)._object;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setTitle:forState:", v48, 0, swift_bridgeObjectRelease(v47).n128_f64[0]);

  objc_msgSend(v44, "addTarget:action:forControlEvents:", v1, "didTapTurnOn", 64);
  v68 = 0u;
  v69 = 0u;
  v66 = 0u;
  v67 = 0u;
  v49 = v44;
  static AutomationSemantics.onboarding(elementName:id:parentId:)(0x75426E4F6E727574, 0xEC0000006E6F7474, &v68, &v66);
  sub_100011088((uint64_t)&v66, &qword_1007F6E90);
  sub_100011088((uint64_t)&v68, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v5);

  v50 = v65;
  v51 = *(void (**)(char *, uint64_t))(v64 + 8);
  v51(v5, v65);
  v52 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v52, "addButton:", v49);

  v53 = v31;
  v54._countAndFlagsBits = 0xD000000000000028;
  v54._object = (void *)0x8000000100642B10;
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  v56 = localizedString(_:comment:)(v54, v55)._object;
  v57 = String._bridgeToObjectiveC()();
  objc_msgSend(v53, "setTitle:forState:", v57, 0, swift_bridgeObjectRelease(v56).n128_f64[0]);

  objc_msgSend(v53, "addTarget:action:forControlEvents:", v1, "didTapTurnOff", 64);
  v68 = 0u;
  v69 = 0u;
  v66 = 0u;
  v67 = 0u;
  v58 = v53;
  static AutomationSemantics.onboarding(elementName:id:parentId:)(0x4266664F6E727574, 0xED00006E6F747475, &v68, &v66);
  sub_100011088((uint64_t)&v66, &qword_1007F6E90);
  sub_100011088((uint64_t)&v68, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v5);

  v51(v5, v50);
  v59 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v59, "addButton:", v58);

}

uint64_t sub_1002E3000()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;
  objc_super v24;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24.receiver = v1;
  v24.super_class = ObjectType;
  objc_msgSendSuper2(&v24, "viewDidLayoutSubviews", v10);
  sub_1002E31F4();
  sub_1000C0EC4();
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = swift_allocObject(&unk_100736338, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  aBlock[4] = sub_1002E385C;
  v23 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100736350;
  v16 = _Block_copy(aBlock);
  v17 = swift_release(v23);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100033D20();
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v20 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v3, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_1002E31F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  CGRect v22;
  CGRect v23;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "headerView", v4);
  v8 = objc_msgSend(v7, "customIconContainerView");

  if (v8)
  {
    v9 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_adPrivacyHeaderIconView];
    objc_msgSend(v8, "bounds");
    v10 = *(void **)&v9[OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyHeaderIconView_label];
    objc_msgSend(v10, "sizeToFit");
    objc_msgSend(v10, "frame");
    v12 = v11;
    v14 = v13;
    if (qword_1007F1B60 != -1)
      swift_once(&qword_1007F1B60, sub_1002E1FB0);
    v15 = v12 + *(double *)&qword_1008064C8 + *(double *)&qword_1008064C8;
    if (qword_1007F1B58 != -1)
      swift_once(&qword_1007F1B58, sub_1002E1FA0);
    v16 = v14 + *(double *)&qword_1008064C0 + *(double *)&qword_1008064C0;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for FloatingPointRoundingRule.up(_:), v2);
    v17 = CGSize.rounded(_:)(v6, v15, v16);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    objc_msgSend(v8, "bounds");
    v20 = CGRectGetMidX(v22) - v17 * 0.5;
    objc_msgSend(v8, "bounds");
    objc_msgSend(v9, "setFrame:", v20, CGRectGetMidY(v23) - v19 * 0.5, v17, v19);

  }
}

void sub_1002E3408(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  double MidX;
  void *v4;
  id v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  int v15;
  uint64_t v16;
  void *v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  int v27;
  uint64_t v28;
  void *v29;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  CGRect v33;
  CGRect v34;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v32, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  MidX = 0.0;
  if (Strong
    && (v4 = Strong,
        v5 = objc_msgSend(Strong, "headerView"),
        v4,
        v6 = objc_msgSend(v5, "customIconContainerView"),
        v5,
        v6))
  {
    objc_msgSend(v6, "bounds");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v33.origin.x = v8;
    v33.origin.y = v10;
    v33.size.width = v12;
    v33.size.height = v14;
    MidX = CGRectGetMidX(v33);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  swift_beginAccess(v1, v31, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v1);
  if (!v16)
  {
    if ((v15 & 1) != 0)
      return;
    goto LABEL_12;
  }
  v17 = (void *)v16;
  v18 = objc_retain(*(id *)(v16
                          + OBJC_IVAR____TtC22SubscribePageExtension33OnboardingAdPrivacyViewController_adPrivacyHeaderIconView));

  objc_msgSend(v18, "frame");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v34.origin.x = v20;
  v34.origin.y = v22;
  v34.size.width = v24;
  v34.size.height = v26;
  if (MidX == CGRectGetMidX(v34))
    v27 = v15;
  else
    v27 = 1;
  if (v27 == 1)
  {
LABEL_12:
    swift_beginAccess(v1, v30, 0, 0);
    v28 = swift_unknownObjectWeakLoadStrong(v1);
    if (v28)
    {
      v29 = (void *)v28;
      sub_1002E31F4();

    }
  }
}

uint64_t type metadata accessor for OnboardingAdPrivacyViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension33OnboardingAdPrivacyViewController);
}

uint64_t sub_1002E3838()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002E385C()
{
  uint64_t v0;

  sub_1002E3408(v0);
}

uint64_t sub_1002E3864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002E3874(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void destroy for SearchLinkLayout(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));

}

uint64_t initializeWithCopy for SearchLinkLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  id v10;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(void **)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  v10 = v8;
  return a1;
}

uint64_t assignWithCopy for SearchLinkLayout(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_10001216C((_QWORD *)a1, a2);
LABEL_8:
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
  v7 = (void *)*((_QWORD *)a2 + 10);
  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  return a1;
}

__n128 initializeWithTake for TodayCardLabelsView.LabelsConfig(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SearchLinkLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  if (*(_QWORD *)(a1 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  v6 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchLinkLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchLinkLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLinkLayout()
{
  return &type metadata for SearchLinkLayout;
}

BOOL sub_1002E3B2C(uint64_t a1, uint64_t a2)
{
  return sub_1002E4068(*(_QWORD *)a1, *(_QWORD *)a2, *(double *)(a1 + 8), *(double *)(a2 + 8));
}

uint64_t sub_1002E3B48@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD v21[5];

  v2 = v1;
  v4 = type metadata accessor for HorizontalStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalStack.init(with:)(sub_1001C1B04, 0);
  sub_10007B0D4(v2, (uint64_t)&v15);
  if (*((_QWORD *)&v16 + 1))
  {
    sub_100010F3C(&v15, (uint64_t)v21);
    sub_1002E3EA4(v2, (uint64_t)&v15);
    v8 = (_OWORD *)swift_allocObject(&unk_100736418, 112, 7);
    v9 = v18;
    v8[3] = v17;
    v8[4] = v9;
    v10 = v20;
    v8[5] = v19;
    v8[6] = v10;
    v11 = v16;
    v8[1] = v15;
    v8[2] = v11;
    HorizontalStack.add(_:with:)(v21, sub_1002E3F14, v8);
    swift_release(v8);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
  }
  else
  {
    sub_10007B344((uint64_t)&v15);
  }
  HorizontalStack.add(_:with:)(v2 + 40, 0, 0);
  a1[3] = v4;
  a1[4] = &protocol witness table for HorizontalStack;
  v12 = sub_1000117C0(a1);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v5 + 32))(v12, v7, v4);
}

double sub_1002E3C9C(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1002E3B48(v10);
  v6 = v11;
  v7 = v12;
  sub_100011064(v10, v11);
  v8 = ceil(dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3));
  sub_1002E3E70(v10);
  return v8;
}

_QWORD *sub_1002E3D3C(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_1002E3B48(v7);
  v4 = v8;
  v5 = v9;
  sub_100011064(v7, v8);
  dispatch thunk of Placeable.place(at:with:)(a1, v4, v5, floor(a2));
  return sub_1002E3E70(v7);
}

uint64_t sub_1002E3DD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1002E3F60();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_1002E3E1C()
{
  unint64_t result;

  result = qword_100806548;
  if (!qword_100806548)
  {
    result = swift_getWitnessTable("E4\v", &type metadata for SearchLinkLayout);
    atomic_store(result, (unint64_t *)&qword_100806548);
  }
  return result;
}

uint64_t sub_1002E3E60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B8CB8, 1);
}

_QWORD *sub_1002E3E70(_QWORD *a1)
{
  destroy for ProductRatingsCompactProductPageLayout.Metrics(a1);
  return a1;
}

uint64_t sub_1002E3EA4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchLinkLayout(a2, a1);
  return a2;
}

uint64_t sub_1002E3ED8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1002E3F14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];

  v1 = *(_QWORD *)(v0 + 104);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return HorizontalStack.Properties.trailingSpacing.setter(v3);
}

unint64_t sub_1002E3F60()
{
  unint64_t result;

  result = qword_100806550;
  if (!qword_100806550)
  {
    result = swift_getWitnessTable(&unk_10068309C, &type metadata for SearchLinkLayout);
    atomic_store(result, (unint64_t *)&qword_100806550);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchLinkLayout.Metrics(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SearchLinkLayout.Metrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SearchLinkLayout.Metrics(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for SearchLinkLayout.Metrics()
{
  return &type metadata for SearchLinkLayout.Metrics;
}

BOOL sub_1002E4068(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BOOL8 result;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v9 = v8;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
  return a3 == a4;
}

uint64_t sub_1002E4114()
{
  return sub_10000E99C(&qword_100806558, type metadata accessor for ProductRatingsLegacyCollectionViewCell, (uint64_t)&unk_100683148);
}

double sub_1002E4144()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  double v21;
  double v22;
  double v23;
  id v24;
  __n128 v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  id v35;
  double v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v0 = sub_10000DF3C(&qword_1008027B0);
  v1 = __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ProductRatingsLayout.Metrics(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for Ratings(0);
  v13 = sub_10000E99C(&qword_1007F5310, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v41, v12, v12, v13);
  v15 = v41;
  if (!v41)
    return 0.0;
  v39 = v5;
  v40 = v4;
  v16 = Ratings.status.getter(v14);
  if (v17)
  {
    v18 = v16;
    v19 = v17;
    type metadata accessor for ProductNoRatingsView();
    KeyPath = swift_getKeyPath(&unk_100683198);
    ItemLayoutContext.subscript.getter(v11);
    swift_release(KeyPath);
    v21 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v23 = v22;
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    v24 = sub_1000826AC();
    swift_getObjectType();
    v25.n128_f64[0] = v21;
    sub_1000E1D50(v18, v19, v24, v25, v23);
    v27 = v26;
    swift_unknownObjectRelease(v24);
    swift_bridgeObjectRelease(v19);
    swift_release(v15);
  }
  else
  {
    v28 = swift_getKeyPath(&unk_100683198);
    ItemLayoutContext.subscript.getter(v11);
    swift_release(v28);
    v29 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v31 = v30;
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    v32 = sub_1000826AC();
    v33 = swift_getKeyPath(&unk_100683198);
    ItemLayoutContext.subscript.getter(v3);
    v34 = swift_release(v33);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(v9 + 56))(v3, 0, 1, v8, v34);
    sub_10024034C(v32, (uint64_t)v3, (uint64_t)v7);
    swift_unknownObjectRelease(v32);
    sub_1000D2798((uint64_t)v3);
    v35 = sub_1000826AC();
    static ProductRatingsLayout.estimatedMeasurements(fitting:using:in:)(v7, v35, v29, v31);
    v27 = v36;
    swift_unknownObjectRelease(v35);
    v37 = swift_release(v15);
    (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v7, v40, v37);
  }
  return v27;
}

void sub_1002E4448()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "SubscribePageExtension/LargeLockupCollectionViewCell+ComponentView.swift", 72, 2, 36, 0);
  __break(1u);
}

id sub_1002E4490()
{
  return sub_1002E453C();
}

uint64_t sub_1002E44A4@<X0>(uint64_t a1@<X8>)
{
  double v2;
  double v3;
  double v4;
  uint64_t v5;

  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v3 = v2;
  PageTraitEnvironment.pageColumnMargin.getter();
  ComponentPrefetchSizing.init(size:contentMode:)((v3 - v4) * 0.5, (v3 - v4) * 0.5);
  v5 = type metadata accessor for ComponentPrefetchSizing(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 0, 1, v5);
}

id sub_1002E452C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1002E4B30(a2, a5, a7);
}

id sub_1002E453C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double *v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  NSString v23;
  void *v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  void *v34;
  id v35;
  NSString v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  NSString v44;
  uint64_t v45;
  void *v46;
  void *v47;
  unsigned int v48;
  uint64_t v49;
  void *v50;
  void *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char **v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  id v70;
  id v71;
  _BOOL8 v72;
  uint64_t v74;
  char *v75;
  _QWORD v76[3];
  uint64_t v77;

  v1 = v0;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007FBA60);
  __chkstk_darwin(v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v74 - v6;
  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v9 = v8;
  PageTraitEnvironment.pageColumnMargin.getter();
  v11 = (v9 - v10) * 0.5;
  v12 = (double *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_preferredArtworkSize];
  *v12 = v11;
  v12[1] = v11;
  objc_msgSend(v0, "setNeedsLayout");
  v14 = Lockup.heading.getter(v13);
  if (v15)
  {
    v17 = v15;
    v18 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0)
      v18 = v14 & 0xFFFFFFFFFFFFLL;
    if (v18)
    {
      v19 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v20 = (void *)static UIColor.primaryText.getter(v19);
      sub_1001FF030(1, (uint64_t)v20);

      v21 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_headingLabel];
      if (v21)
      {
        v22 = v21;
        v23 = String._bridgeToObjectiveC()();
        objc_msgSend(v22, "setText:", v23, swift_bridgeObjectRelease(v17).n128_f64[0]);

      }
      else
      {
        v16 = swift_bridgeObjectRelease(v17);
      }
      goto LABEL_11;
    }
    v16 = swift_bridgeObjectRelease(v15);
  }
  v24 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_headingLabel];
  if (v24)
    objc_msgSend(v24, "setHidden:", 1, v16.n128_f64[0]);
LABEL_11:
  v25 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_titleLabel];
  v27 = Lockup.title.getter(v16).n128_u64[0];
  if (v26)
  {
    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(v25, "setText:", v29, *(double *)&v27);

  Lockup.tertiaryTitle.getter(v30);
  if (v31)
  {
    v33 = v31;
    sub_1001FF268();
    v34 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_tertiaryTitleLabel];
    if (v34)
    {
      v35 = v34;
      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v35, "setText:", v36, swift_bridgeObjectRelease(v33).n128_f64[0]);

    }
    else
    {
      v32 = swift_bridgeObjectRelease(v33);
    }
  }
  else
  {
    v37 = OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_tertiaryTitleLabel;
    v38 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_tertiaryTitleLabel];
    if (v38)
    {
      objc_msgSend(v38, "setHidden:", 1);
      v39 = *(void **)&v1[v37];
      if (v39)
        objc_msgSend(v39, "setText:", 0);
    }
  }
  v40 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_subtitleLabel];
  Lockup.subtitle.getter(v32);
  if (v41)
  {
    v43 = v41;
    v44 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v42 = swift_bridgeObjectRelease(v43).n128_u64[0];
  }
  else
  {
    v44 = 0;
  }
  objc_msgSend(v40, "setText:", v44, v42);

  v45 = OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_headingLabel;
  v46 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_headingLabel];
  if (v46 && (objc_msgSend(v46, "isHidden") & 1) == 0 && (v47 = *(void **)&v1[v45]) != 0)
    v48 = objc_msgSend(v47, "hasContent");
  else
    v48 = 0;
  v49 = OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_tertiaryTitleLabel;
  v50 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_tertiaryTitleLabel];
  if (v50 && (objc_msgSend(v50, "isHidden") & 1) == 0 && (v51 = *(void **)&v1[v49]) != 0)
    v52 = objc_msgSend(v51, "hasContent");
  else
    v52 = 0;
  if (objc_msgSend(v40, "hasContent"))
    v53 = v52 & v48;
  else
    v53 = 1;
  v54 = Lockup.subtitleTextColor.getter(objc_msgSend(v40, "setHidden:", v53));
  if (!v54)
  {
    v55 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v54 = static UIColor.secondaryText.getter(v55);
  }
  v56 = (void *)v54;
  objc_msgSend(v40, "setTextColor:", v54);

  v57 = &selRef_activityViewController_itemForActivityType_;
  v58 = objc_msgSend(v40, "layer");
  Lockup.subtitleTextFilter.getter();
  v59 = type metadata accessor for TitleEffectFilterType(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  if (v61(v7, 1, v59) == 1)
  {
    sub_1002E4AF0((uint64_t)v7);
LABEL_43:
    v68 = 0;
    goto LABEL_44;
  }
  TitleEffectFilterType.compositingFilter.getter(v76);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v59);
  v62 = v77;
  if (!v77)
    goto LABEL_43;
  v63 = sub_100011064(v76, v77);
  v75 = v4;
  v64 = *(_QWORD *)(v62 - 8);
  v65 = __chkstk_darwin(v63);
  v67 = (char *)&v74 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v64 + 16))(v67, v65);
  v68 = _bridgeAnythingToObjectiveC<A>(_:)(v67, v62);
  v69 = *(void (**)(char *, uint64_t))(v64 + 8);
  v57 = &selRef_activityViewController_itemForActivityType_;
  v69(v67, v62);
  v4 = v75;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v76);
LABEL_44:
  objc_msgSend(v58, "setCompositingFilter:", v68);

  v70 = objc_msgSend(v1, "contentView", swift_unknownObjectRelease(v68).n128_f64[0]);
  v71 = objc_msgSend(v70, v57[340]);

  Lockup.subtitleTextFilter.getter();
  v72 = v61(v4, 1, v59) == 1;
  sub_1002E4AF0((uint64_t)v4);
  objc_msgSend(v71, "setAllowsGroupBlending:", v72);

  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1002E4AF0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007FBA60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1002E4B30(double a1, uint64_t a2, uint64_t a3)
{
  double v5;
  double v6;
  double v7;
  __n128 v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  id v27;
  uint64_t v29;

  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v6 = v5;
  PageTraitEnvironment.pageColumnMargin.getter();
  v8.n128_f64[0] = (v6 - v7) * 0.5;
  sub_1001FF83C(a3, v8, a1);
  v10 = v9;
  v12 = v11;
  v13 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v14 = objc_msgSend(v13, "absoluteDimension:", v10);
  v15 = objc_msgSend(v13, "absoluteDimension:", v12);
  v16 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v17 = objc_msgSend(v16, "sizeWithWidthDimension:heightDimension:", v14, v15);

  v18 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v17);
  v19 = objc_msgSend(v17, "widthDimension");
  v20 = objc_msgSend(v17, "heightDimension");
  v21 = objc_msgSend(v16, "sizeWithWidthDimension:heightDimension:", v19, v20);

  v22 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v23 = sub_10000DF3C(&qword_1007F5840);
  v24 = swift_allocObject(v23, 40, 7);
  *(_OWORD *)(v24 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v24 + 32) = v18;
  v29 = v24;
  specialized Array._endMutation()(v24);
  sub_100019574(0, (unint64_t *)&qword_100800DA0, NSCollectionLayoutItem_ptr);
  v25 = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v22, "verticalGroupWithLayoutSize:subitems:", v21, isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  return v27;
}

uint64_t sub_1002E4D7C()
{
  return sub_10000E99C(&qword_1008065A8, type metadata accessor for AnnotationCollectionViewCell, (uint64_t)&unk_1006831F0);
}

double sub_1002E4DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  double v16;
  uint64_t KeyPath;
  double v18;
  double v19;
  double v20;
  id v21;
  __n128 v22;
  double v23;
  __n128 v24;
  _QWORD v26[2];
  char v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for PageGrid(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_100805458);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Annotation(0);
  v11 = sub_10000E99C(&qword_1008065B0, (uint64_t (*)(uint64_t))&type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
  ItemLayoutContext.typedModel<A>(as:)(&v28, v10, v10, v11);
  v12 = v28;
  if (!v28)
    return 0.0;
  v26[1] = v1;
  v13 = sub_1002C12DC();
  ItemLayoutContext.typedState<A>(as:)(&_s5StateVN_6, &_s5StateVN_6, v13);
  v14 = StateLens<A>.currentValue.getter(&v27, v6, v13);
  v26[0] = v7;
  if ((v27 & 1) != 0)
    v15 = 1;
  else
    v15 = Annotation.shouldAlwaysPresentExpanded.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100683240);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  v18 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v20 = v19;
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  v21 = sub_1000826AC();
  swift_getObjectType();
  v22.n128_f64[0] = v18;
  sub_100223660(v12, v15 & 1, v21, v22, v20);
  v16 = v23;
  swift_unknownObjectRelease(v21);
  v24 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v26[0] + 8))(v9, v6, v24);
  return v16;
}

id sub_1002E4FC4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  void *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  char *v59;
  id v60;
  _QWORD *v62;
  _BYTE v63[56];

  v2 = objc_opt_self(UITabBarController);
  v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    v4 = (id)v3;
    v5 = a1;
  }
  else
  {
    v4 = objc_msgSend(a1, "tabBarController");
    if (!v4)
    {
LABEL_10:
      v13 = objc_opt_self(UINavigationController);
      v14 = swift_dynamicCastObjCClass(a1, v13);
      if (v14)
      {
        v10 = (id)v14;
        v15 = a1;
      }
      else
      {
        v10 = objc_msgSend(a1, "navigationController");
        if (!v10)
        {
LABEL_18:
          v20 = 0;
LABEL_19:
          v21 = 0;
          goto LABEL_20;
        }
      }
      goto LABEL_13;
    }
  }
  v6 = objc_msgSend(v4, "selectedViewController");
  if (v6)
  {
    v7 = v6;
    v8 = objc_opt_self(UINavigationController);
    v9 = swift_dynamicCastObjCClass(v7, v8);
    if (v9)
    {
      v10 = (id)v9;
      goto LABEL_13;
    }

  }
  v11 = objc_msgSend(v4, "selectedViewController");
  if (!v11)
    goto LABEL_10;
  v12 = v11;
  v10 = objc_msgSend(v11, "navigationController");

  if (!v10)
    goto LABEL_10;
LABEL_13:
  v16 = objc_msgSend(v10, "presentedViewController");
  if (!v16)
    goto LABEL_18;
  v17 = v16;
  v18 = type metadata accessor for PresentationContextViewController();
  v19 = (void *)swift_dynamicCastClass(v17, v18);
  if (v19)
  {
    v20 = objc_msgSend(v19, "presentedViewController");

    v17 = v20;
    if (!v20)
      goto LABEL_19;
  }
  v21 = v17;
  v22 = objc_opt_self(UINavigationController);
  v20 = (id)swift_dynamicCastObjCClass(v21, v22);
  if (!v20)

LABEL_20:
  v23 = sub_10000DF3C(&qword_1008065B8);
  inited = swift_initStackObject(v23, v63);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  *(_QWORD *)(inited + 32) = v21;
  *(_QWORD *)(inited + 40) = v20;
  *(_QWORD *)(inited + 48) = v10;
  v62 = (_QWORD *)inited;
  specialized Array._endMutation()(inited);
  v25 = (void *)v62[4];
  if (!v25)
  {
    v39 = v10;
    goto LABEL_33;
  }
  ObjectType = swift_getObjectType();
  v27 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TargetedFlowActionNavigationControllerProviding);
  if (v27)
    v28 = v27;
  else
    v28 = 0;
  if (v27)
    v29 = v25;
  else
    v29 = 0;
  v30 = v10;
  if (!v29)
  {
LABEL_33:
    v40 = v21;
    v41 = v20;
    v34 = _swiftEmptyArrayStorage;
    v38 = (void *)v62[5];
    if (!v38)
      goto LABEL_46;
    goto LABEL_34;
  }
  v31 = v25;
  v32 = v21;
  v33 = v20;
  v34 = sub_100201D90(0, 1, 1, _swiftEmptyArrayStorage);
  v36 = v34[2];
  v35 = v34[3];
  if (v36 >= v35 >> 1)
    v34 = sub_100201D90((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
  v34[2] = v36 + 1;
  v37 = &v34[2 * v36];
  v37[4] = v29;
  v37[5] = v28;
  v38 = (void *)v62[5];
  if (v38)
  {
LABEL_34:
    v42 = swift_getObjectType();
    v43 = swift_conformsToProtocol2(v42, &protocol descriptor for TargetedFlowActionNavigationControllerProviding);
    if (v43)
      v44 = v43;
    else
      v44 = 0;
    if (v43)
      v45 = v38;
    else
      v45 = 0;
    if (v45)
    {
      v46 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
        v34 = sub_100201D90(0, v34[2] + 1, 1, v34);
      v48 = v34[2];
      v47 = v34[3];
      if (v48 >= v47 >> 1)
        v34 = sub_100201D90((_QWORD *)(v47 > 1), v48 + 1, 1, v34);
      v34[2] = v48 + 1;
      v49 = &v34[2 * v48];
      v49[4] = v45;
      v49[5] = v44;
    }
  }
LABEL_46:
  v50 = (void *)v62[6];
  if (v50)
  {
    v51 = swift_getObjectType();
    v52 = swift_conformsToProtocol2(v51, &protocol descriptor for TargetedFlowActionNavigationControllerProviding);
    v53 = v52 ? v52 : 0;
    v54 = v52 ? v50 : 0;
    if (v54)
    {
      v55 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
        v34 = sub_100201D90(0, v34[2] + 1, 1, v34);
      v57 = v34[2];
      v56 = v34[3];
      if (v57 >= v56 >> 1)
        v34 = sub_100201D90((_QWORD *)(v56 > 1), v57 + 1, 1, v34);
      v34[2] = v57 + 1;
      v58 = &v34[2 * v57];
      v58[4] = v54;
      v58[5] = v53;
    }
  }
  swift_bridgeObjectRelease(v62);
  if (v34[2])
  {
    v59 = (char *)(id)v34[4];
    swift_bridgeObjectRelease(v34);
    v60 = *(id *)&v59[OBJC_IVAR____TtC22SubscribePageExtension30ArticleContainerViewController_wrapperViewController];

    return v60;
  }
  else
  {
    swift_bridgeObjectRelease(v34);

    if (v20)
    else
      return v10;
  }
  return v20;
}

unint64_t sub_1002E5444(void *a1)
{
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  id v8;
  id v9;
  uint64_t v10;

  v1 = sub_1002E4FC4(a1);
  if (!v1)
    return (unint64_t)a1;
  v2 = v1;
  v3 = objc_msgSend(v1, "viewControllers");

  v4 = sub_1000531A4();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_4;
    goto LABEL_14;
  }
  if (v5 < 0)
    v10 = v5;
  else
    v10 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v5);
  if (!v6)
  {
LABEL_14:
    swift_bridgeObjectRelease(v5);
    return (unint64_t)a1;
  }
LABEL_4:
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_17:
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v5);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v5 + 8 * result + 32);
LABEL_9:
    v9 = v8;
    swift_bridgeObjectRelease(v5);
    return (unint64_t)v9;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002E5560(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v2)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      }
      else
      {
        v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
        swift_retain(v5);
      }
      ++v4;
      v6 = ArcadeDownloadPackSuggestion.lockup.getter();
      v7 = swift_release(v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
      specialized ContiguousArray._endMutation()(v9);
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

double sub_1002E5698(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  unint64_t v17;
  void (*v18)(_BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double result;
  _BYTE v24[16];

  v3 = v2;
  v5 = type metadata accessor for ArcadeDownloadPackSuggestionsPagePrimaryActionKind(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v9);
  v12 = &v24[-v11];
  v13 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_titleLabel];
  ArcadeDownloadPackSuggestionsPage.title.getter(v10);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  ArcadeDownloadPackSuggestionsPage.primaryActionKind.getter();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ArcadeDownloadPackSuggestionsPagePrimaryActionKind.getAll(_:), v5);
  v17 = sub_1002E6AF8();
  LOBYTE(v15) = dispatch thunk of static Equatable.== infix(_:_:)(v12, v8, v5, v17);
  v18 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v18(v8, v5);
  v19 = ((uint64_t (*)(_BYTE *, uint64_t))v18)(v12, v5);
  v20 = 0;
  if ((v15 & 1) == 0)
  {
    v19 = ArcadeDownloadPackSuggestionsPage.getAllAction.getter(v19);
    v20 = v19;
  }
  v21 = ArcadeDownloadPackSuggestionsPage.suggestions.getter(v19);
  v22 = sub_1002E5560(v21);
  swift_bridgeObjectRelease(v21);
  sub_10055C680((uint64_t)v22, v20, 0, a2);
  objc_msgSend(v3, "setNeedsLayout", swift_bridgeObjectRelease(v22).n128_f64[0]);
  objc_msgSend(v3, "invalidateIntrinsicContentSize");
  sub_1002E63B8();
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

id sub_1002E5870()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 150.0, 25.0, 0.0, 0.0);
  qword_1008065C0 = (uint64_t)result;
  return result;
}

void sub_1002E58BC()
{
  qword_1008065C8 = 0x4031000000000000;
}

void sub_1002E58CC()
{
  qword_1008065D0 = 0x4024000000000000;
}

void sub_1002E58DC()
{
  qword_1008065D8 = 0x4040000000000000;
}

void sub_1002E58EC()
{
  qword_1008065E0 = 0x4034000000000000;
}

char *sub_1002E58FC(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  objc_class *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  objc_class *ObjectType;
  objc_super v69;
  _QWORD v70[5];
  _QWORD v71[3];
  uint64_t v72;
  void *v73;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v66 = type metadata accessor for DirectionalTextAlignment(0);
  v65 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  *(_QWORD *)&v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v12 = __chkstk_darwin(v11);
  v64 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for WordmarkView.Alignment(0, v12);
  v62 = *(_QWORD *)(v63 - 8);
  v14 = __chkstk_darwin(v63);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FontSource(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v21);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_wordmarkView;
  v24 = enum case for Wordmark.arcade(_:);
  v25 = type metadata accessor for Wordmark(0);
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = qword_1007F1B70;
  v28 = v5;
  if (v27 != -1)
    swift_once(&qword_1007F1B70, sub_1002E58BC);
  v29 = *(double *)&qword_1008065C8;
  if (qword_1007F27E8 != -1)
    swift_once(&qword_1007F27E8, sub_100417358);
  v30 = type metadata accessor for FontUseCase(0);
  v31 = sub_1000117A8(v30, (uint64_t)qword_100855CA0);
  v60 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v32(v20, v31, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for FontSource.useCase(_:), v17);
  v72 = type metadata accessor for StaticDimension(0);
  v73 = &protocol witness table for StaticDimension;
  sub_1000117C0(v71);
  v70[3] = v17;
  v70[4] = &protocol witness table for FontSource;
  v33 = sub_1000117C0(v70);
  (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v33, v20, v17);
  StaticDimension.init(_:scaledLike:)(v70, v29);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v16, enum case for WordmarkView.Alignment.leading(_:), v63);
  v34 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v35 = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v23, v71, v16, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v28[v61] = v35;
  v36 = OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_titleLabel;
  v37 = v64;
  v32(v64, v31, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v37, 0, 1, v30);
  v38 = v67;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v65 + 104))(v67, enum case for DirectionalTextAlignment.none(_:), v66);
  v39 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v28[v36] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v37, 2, 0, 1, 0, v38, 0, 0);
  v40 = OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView;
  v41 = type metadata accessor for ArcadeDownloadPackGamesCardView(0);
  *(_QWORD *)&v28[v40] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v41)), "init");
  v42 = &v28[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_impressionsUpdateBlock];
  *(_QWORD *)v42 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  *((_QWORD *)v42 + 1) = 0;

  v69.receiver = v28;
  v43 = ObjectType;
  v69.super_class = ObjectType;
  v44 = (char *)objc_msgSendSuper2(&v69, "initWithFrame:", a1, a2, a3, a4);
  v45 = *(_QWORD *)&v44[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_wordmarkView];
  v46 = v44;
  objc_msgSend(v46, "addSubview:", v45);
  v47 = *(void **)&v46[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_titleLabel];
  objc_msgSend(v46, "addSubview:", v47);
  objc_msgSend(v46, "addSubview:", *(_QWORD *)&v46[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView]);
  objc_msgSend(v47, "setTextAlignment:", 1);
  objc_msgSend(v47, "setNumberOfLines:", 0);
  v48 = objc_msgSend(v46, "traitCollection");
  v49 = objc_msgSend(v48, "preferredContentSizeCategory");

  LOBYTE(v48) = UIContentSizeCategory.isAccessibilityCategory.getter(v49);
  if ((v48 & 1) != 0)
    v50 = 4;
  else
    v50 = 1;
  objc_msgSend(v47, "setTextAlignment:", v50);
  v51 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v52 = swift_allocObject(v51, 48, 7);
  v67 = xmmword_10066FBA0;
  *(_OWORD *)(v52 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v52 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v52 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v72 = (uint64_t)v43;
  v71[0] = v46;
  v53 = v46;
  v54 = UIView.registerForTraitChanges(_:target:action:)(v52, v71, "preferredContentSizeCategoryDidChange");
  swift_unknownObjectRelease(v54);

  swift_bridgeObjectRelease(v52);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v71);
  v55 = swift_allocObject(v51, 48, 7);
  *(_OWORD *)(v55 + 16) = v67;
  *(_QWORD *)(v55 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v55 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v72 = (uint64_t)v43;
  v71[0] = v53;
  v56 = v53;
  v57 = UIView.registerForTraitChanges(_:target:action:)(v55, v71, "invalidateMeasurements");
  swift_unknownObjectRelease(v57);

  swift_bridgeObjectRelease(v55);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v71);
  return v56;
}

uint64_t sub_1002E5FB8@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  void *v18;
  uint64_t v19;
  char *v20;
  id v21;
  __n128 v22;
  void *v23;
  id v24;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  void *v29;

  v3 = type metadata accessor for VerticalStack(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27[-1] - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v27[-1] - v11;
  v13 = swift_allocObject(&unk_100736650, 24, 7);
  *(_QWORD *)(v13 + 16) = v1;
  v14 = v1;
  VerticalStack.init(with:)(sub_1000A28AC, v13, v15);
  v26 = *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_wordmarkView];
  v16 = type metadata accessor for WordmarkView(0);
  Measurable.placeable.getter(v27, v16, &protocol witness table for UIView);
  VerticalStack.adding(_:with:)(v27, sub_1002E6BC4, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  v18 = *(void **)&v14[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_titleLabel];
  v28 = type metadata accessor for DynamicTypeLabel(0);
  v29 = &protocol witness table for UILabel;
  v27[0] = v18;
  v19 = swift_allocObject(&unk_100736678, 24, 7);
  *(_QWORD *)(v19 + 16) = v14;
  v20 = v14;
  v21 = v18;
  VerticalStack.adding(_:with:)(v27, sub_1002E6C38, v19);
  v22 = swift_release(v19);
  ((void (*)(char *, uint64_t, __n128))v17)(v9, v3, v22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
  v23 = *(void **)&v20[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView];
  v28 = type metadata accessor for ArcadeDownloadPackGamesCardView(0);
  v29 = &protocol witness table for CustomLayoutView;
  v27[0] = v23;
  a1[3] = v3;
  a1[4] = &protocol witness table for VerticalStack;
  sub_1000117C0(a1);
  v24 = v23;
  VerticalStack.adding(_:with:)(v27, 0, 0);
  v17(v12, v3);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
}

double sub_1002E61F4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t *v5;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)1
    && (v3 = objc_msgSend(v0, "traitCollection"),
        v4 = objc_msgSend(v3, "horizontalSizeClass"),
        v3,
        v4 == (id)2))
  {
    if (qword_1007F1B80 != -1)
      swift_once(&qword_1007F1B80, sub_1002E58DC);
    v5 = &qword_1008065D8;
  }
  else
  {
    if (qword_1007F1B88 != -1)
      swift_once(&qword_1007F1B88, sub_1002E58EC);
    v5 = &qword_1008065E0;
  }
  return *(double *)v5;
}

void sub_1002E63B8()
{
  char *v0;
  void *v1;
  id v2;
  CGFloat v3;
  void *v4;
  CGFloat ty;
  char *v6;
  CGAffineTransform v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView];
  CGAffineTransformMakeScale(&v7, 0.9, 0.9);
  objc_msgSend(v1, "setTransform:", &v7);
  if (qword_1007F1B68 != -1)
    swift_once(&qword_1007F1B68, sub_1002E5870);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_1008065C0, 0.0);
  v3 = COERCE_DOUBLE(swift_allocObject(&unk_100736600, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v3 + 16) = v0;
  *(_QWORD *)&v7.tx = sub_1002E6B64;
  v7.ty = v3;
  *(_QWORD *)&v7.a = _NSConcreteStackBlock;
  *(_QWORD *)&v7.b = 1107296256;
  *(_QWORD *)&v7.c = sub_1000BD6CC;
  *(_QWORD *)&v7.d = &unk_100736618;
  v4 = _Block_copy(&v7);
  ty = v7.ty;
  v6 = v0;
  objc_msgSend(v2, "addAnimations:", v4, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v4);
  objc_msgSend(v2, "startAnimation");
  sub_10055D14C();

}

void sub_1002E65DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  id v5;
  void (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "layoutSubviews");
  sub_1002E5FB8(v9);
  v1 = v10;
  v2 = v11;
  sub_100011064(v9, v10);
  objc_msgSend(v0, "bounds");
  v4 = v3;
  v5 = objc_msgSend(v0, "traitCollection");
  dispatch thunk of Placeable.place(at:with:)(v5, v1, v2, v4);

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
  v6 = *(void (**)(__n128))&v0[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_impressionsUpdateBlock];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_impressionsUpdateBlock
                    + 8];
  v8 = swift_retain(v7);
  v6(v8);
  swift_release(v7);
}

id sub_1002E6754()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_titleLabel];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v2 & 1) != 0)
    v4 = 4;
  else
    v4 = 1;
  objc_msgSend(v1, "setTextAlignment:", v4);
  objc_msgSend(v0, "setNeedsLayout");
  return objc_msgSend(v0, "invalidateIntrinsicContentSize");
}

double sub_1002E6834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)();
  void (**v6)();
  void (*v7)();
  void (*v8)(__n128);
  void (*v9)();
  __n128 v10;
  double result;

  v3 = swift_allocObject(&unk_1007366A0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_1007366C8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = (void (*)())swift_allocObject(&unk_1007366F0, 40, 7);
  *((_QWORD *)v5 + 2) = v4;
  *((_QWORD *)v5 + 3) = v3;
  *((_QWORD *)v5 + 4) = a1;
  v6 = (void (**)())(v1
                   + OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_impressionsUpdateBlock);
  v7 = v6[1];
  *v6 = sub_1002E6CE0;
  v6[1] = v5;
  swift_retain(a1);
  swift_release(v7);
  v8 = (void (*)(__n128))*v6;
  v9 = v6[1];
  v10 = swift_retain(v9);
  v8(v10);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_1002E6908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a2 + 16;
    swift_beginAccess(v8, &v13, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v8);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = objc_retain(*(id *)(v9
                              + OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView));

      swift_retain(a3);
      v12 = v7;
      sub_100561958((uint64_t)v11, a3, v12);

      swift_release(a3);
    }

  }
}

uint64_t type metadata accessor for ArcadeDownloadPackSuggestionsPageView()
{
  return objc_opt_self(_TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView);
}

double sub_1002E6A50(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1002E5FB8(v10);
  v6 = v11;
  v7 = v12;
  sub_100011064(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  return v8;
}

unint64_t sub_1002E6AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806630;
  if (!qword_100806630)
  {
    v1 = type metadata accessor for ArcadeDownloadPackSuggestionsPagePrimaryActionKind(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ArcadeDownloadPackSuggestionsPagePrimaryActionKind, v1);
    atomic_store(result, (unint64_t *)&qword_100806630);
  }
  return result;
}

uint64_t sub_1002E6B40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002E6B64()
{
  uint64_t v0;
  void *v1;
  _QWORD v3[6];

  v1 = *(void **)(*(_QWORD *)(v0 + 16)
                + OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return objc_msgSend(v1, "setTransform:", v3);
}

uint64_t sub_1002E6BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002E6BBC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002E6BC4()
{
  _QWORD v1[5];

  if (qword_1007F1B78 != -1)
    swift_once(&qword_1007F1B78, sub_1002E58CC);
  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = qword_1008065D0;
  return VerticalStack.Properties.bottomSpacing.setter(v1);
}

uint64_t sub_1002E6C38()
{
  _QWORD v1[5];

  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = sub_1002E61F4();
  return VerticalStack.Properties.bottomSpacing.setter(v1);
}

uint64_t sub_1002E6C88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E6CAC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002E6CE0()
{
  uint64_t *v0;

  sub_1002E6908(v0[2], v0[3], v0[4]);
}

void sub_1002E6CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD v44[5];
  _QWORD v45[6];

  v0 = type metadata accessor for DirectionalTextAlignment(0);
  v40 = *(_QWORD *)(v0 - 8);
  v41 = v0;
  __chkstk_darwin(v0);
  v42 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v3 = __chkstk_darwin(v2);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WordmarkView.Alignment(0, v3);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FontSource(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_wordmarkView;
  v16 = enum case for Wordmark.arcade(_:);
  v17 = type metadata accessor for Wordmark(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v15, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  if (qword_1007F1B70 != -1)
    swift_once(&qword_1007F1B70, sub_1002E58BC);
  v19 = *(double *)&qword_1008065C8;
  if (qword_1007F27E8 != -1)
    swift_once(&qword_1007F27E8, sub_100417358);
  v20 = type metadata accessor for FontUseCase(0);
  v21 = sub_1000117A8(v20, (uint64_t)qword_100855CA0);
  v22 = *(_QWORD *)(v20 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23(v12, v21, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  v45[3] = type metadata accessor for StaticDimension(0);
  v45[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v45);
  v44[3] = v9;
  v44[4] = &protocol witness table for FontSource;
  v24 = sub_1000117C0(v44);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v24, v12, v9);
  StaticDimension.init(_:scaledLike:)(v44, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v8, enum case for WordmarkView.Alignment.leading(_:), v38);
  v25 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v26 = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v15, v45, v8, 0.0, 0.0, 0.0, 0.0);
  v27 = v43;
  *(_QWORD *)&v43[v36] = v26;
  v28 = OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_titleLabel;
  v29 = v39;
  v23(v39, v21, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v20);
  v30 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v42, enum case for DirectionalTextAlignment.none(_:), v41);
  v31 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v27[v28] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v29, 2, 0, 1, 0, v30, 0, 0);
  v32 = OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_gamesView;
  v33 = type metadata accessor for ArcadeDownloadPackGamesCardView(0);
  *(_QWORD *)&v27[v32] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v33)), "init");
  v34 = &v27[OBJC_IVAR____TtC22SubscribePageExtension37ArcadeDownloadPackSuggestionsPageView_impressionsUpdateBlock];
  *(_QWORD *)v34 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  *((_QWORD *)v34 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ArcadeDownloadPackSuggestionsPageView.swift", 66, 2, 59, 0);
  __break(1u);
}

uint64_t sub_1002E7118@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v16;

  v6 = type metadata accessor for AspectRatio(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_getObjectType();
    PageTraitEnvironment.pageColumnWidth.getter();
    a3 = v8.n128_f64[0];
  }
  if (qword_1007F1A68 != -1)
    swift_once(&qword_1007F1A68, sub_1002B00AC);
  v11 = type metadata accessor for FlowcaseItemLayout.Metrics(0, v8);
  sub_1000117A8(v11, (uint64_t)qword_1008537B0);
  v12 = FlowcaseItemLayout.Metrics.artworkAspectRatio.getter();
  v13 = AspectRatio.height(fromWidth:)(v12, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  ComponentPrefetchSizing.init(size:contentMode:)(a3, v13);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
}

double sub_1002E7248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  double result;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v18[4];
  _BYTE v19[24];

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v19, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v14 = Lockup.clickAction.getter(v13);
      if (v14)
      {
        v15 = v14;
        dispatch thunk of Lockup.clickSender.getter(v18);
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v15, v18, v8, a3);

        swift_release(v15);
        v16 = swift_release(v12);
        (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v16);
        sub_100011088((uint64_t)v18, &qword_1007F6E90);
      }
      else
      {

        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

double sub_1002E73A8(__n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;

  v10 = a1.n128_f64[0];
  if (qword_1007F1A68 != -1)
    swift_once(&qword_1007F1A68, sub_1002B00AC);
  v11 = type metadata accessor for FlowcaseItemLayout.Metrics(0, a1);
  v12 = sub_1000117A8(v11, (uint64_t)qword_1008537B0);
  v14 = type metadata accessor for FlowcaseItemLayout(0, v13);
  v15 = sub_10000E99C(&qword_100805440, (uint64_t (*)(uint64_t))&type metadata accessor for FlowcaseItemLayout, (uint64_t)&protocol conformance descriptor for FlowcaseItemLayout);
  v16 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v12, a8, v14, v15, v10, a2);
  v18 = v17;
  if (qword_1007F1A70 != -1)
    swift_once(&qword_1007F1A70, sub_1002B04E4);
  v19 = type metadata accessor for Separator(0);
  v20 = sub_1000117A8(v19, (uint64_t)qword_1008537C8);
  v21.n128_u64[0] = v18;
  return CGSize.adding(separator:in:)(v20, a8, v16, v21);
}

id sub_1002E74B4(char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E750C(*a1, a2, a3);
}

uint64_t sub_1002E74BC@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  return sub_1002E7118(a1 & 1, a2, a3);
}

id sub_1002E74D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1002E7F6C(a3, a5);
}

uint64_t sub_1002E74E0()
{
  return sub_10000E99C(&qword_100806638, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialCard, (uint64_t)&protocol conformance descriptor for EditorialCard);
}

id sub_1002E750C(char *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  NSString v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  __n128 v54;
  void *v55;
  uint64_t v56;
  char *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  __objc2_meth_list **p_base_meths;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  void *v89;
  void *v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  uint64_t v111;
  double (*v112)();
  char *v113;
  uint64_t v114;
  double (**v115)();
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  void (*v129)(char *, uint64_t);
  id v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[3];

  v4 = v3;
  v132 = type metadata accessor for MediaOverlayStyle(0);
  v7 = *(void (**)(char *, uint64_t))(v132 - 8);
  __chkstk_darwin(v132);
  v9 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v128 = (char *)&v122 - v11;
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v12);
  v122 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v15 = __chkstk_darwin(v14);
  v127 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v15);
  v123 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v124 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v18);
  v126 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_captionLabel];
  EditorialCard.caption.getter(v21);
  v129 = v7;
  if (v25)
  {
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v24, "setText:", v28, v26);

  v29 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_titleLabel];
  EditorialCard.title.getter();
  if (v30)
  {
    v32 = v30;
    v33 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  else
  {
    v33 = 0;
  }
  objc_msgSend(v29, "setText:", v33, v31);

  v34 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_subtitleLabel];
  EditorialCard.subtitle.getter();
  if (v35)
  {
    v37 = v35;
    v38 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v37).n128_u64[0];
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v34, "setText:", v38, v36);

  v39 = EditorialCard.appEventFormattedDates.getter();
  v40 = sub_1002B20DC(v39);
  v41 = EditorialCard.clickAction.getter(v40);
  if (v41)
  {
    v42 = v41;
    v133[0] = v41;
    v43 = type metadata accessor for Action(0);
    v44 = type metadata accessor for ObjectGraph(0);
    v45 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    ComponentModel.pairedWith<A>(objectGraph:)(a3, v43, v44, v45);
    swift_release(v42);
    v46 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v23, 0, 1, v46);
  }
  else
  {
    v47 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v23, 1, 1, v47);
  }
  v48 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_clickAction];
  swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_clickAction], v133, 33, 0);
  sub_100162C98((uint64_t)v23, v48);
  v49 = swift_endAccess(v133);
  v50 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_gradientBlurView];
  v51 = EditorialCard.artwork.getter(v49);
  if (v51)
  {
    v52 = v51;
    v53 = (void *)Artwork.backgroundColor.getter(v51);
    swift_release(v52);
  }
  else
  {
    v53 = 0;
  }
  v130 = v50;
  sub_100142808(v53);

  v55 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_appEventFormattedDateView];
  v131 = a3;
  if (v55)
  {
    v56 = type metadata accessor for AppEventLiveIndicatorAnimationCoordinator();
    v57 = v55;
    BaseObjectGraph.optional<A>(_:)(v133, v56, v56);
    v58 = (void *)v133[0];
    v59 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator;
    v60 = *(void **)&v57[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator];
    v61 = v60;
    sub_1000B71B0(v58);
    v62 = *(void **)&v57[v59];
    *(_QWORD *)&v57[v59] = v58;
    a3 = v131;
    v63 = v58;

    sub_1000B7328(v60);
  }
  v64 = EditorialCard.lockup.getter(v54);
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if (v64)
  {
    v66 = v64;
    v67 = *(char **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupView];
    v68 = v123;
    v69 = v124;
    v70 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v124, enum case for OfferButtonPresenterViewAlignment.right(_:), v125);
    v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
    v72 = v127;
    v71(v127, 1, 1, v70);
    v73 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
    v74 = (uint64_t)v126;
    AccessibilityConditional.init(value:axValue:)(v69, v72, v70, v73);
    v75 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
    v127 = (char *)v66;
    sub_1001B6660(v66, v74, a3, 0, 0, 1);
    v76 = sub_100011088(v74, (uint64_t *)&unk_1007F7710);
    v77 = OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_lockupView;
    v78 = *(void **)(*(_QWORD *)&v67[OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_lockupView]
                   + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel);
    if (v78)
    {
      v79 = qword_1007F2268;
      v80 = v78;
      if (v79 != -1)
        swift_once(&qword_1007F2268, sub_100413AC8);
      v81 = type metadata accessor for FontUseCase(0);
      v82 = sub_1000117A8(v81, (uint64_t)qword_100854C38);
      v83 = *(_QWORD *)(v81 - 8);
      v84 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v122, v82, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v81);
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v84);

    }
    v85 = v128;
    v86 = EditorialCard.mediaOverlayStyle.getter(v76);
    v87 = MediaOverlayStyle.userInterfaceStyle.getter(v86);
    v88 = (void (*)(char *, uint64_t))*((_QWORD *)v129 + 1);
    v88(v85, v132);
    v89 = *(void **)(*(_QWORD *)&v67[v77] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton);
    if (v87 == 2)
    {
      v90 = (void *)objc_opt_self(UIColor);
      v91 = v89;
      v92 = objc_msgSend(v90, "whiteColor");
    }
    else
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v92 = (id)static UIColor.appTint.getter(v89);
    }
    v96 = v92;
    objc_msgSend(v89, "setTintColor:", v92);

    v97 = EditorialCard.mediaOverlayStyle.getter(objc_msgSend(v67, "setHidden:", 0));
    v98 = MediaOverlayStyle.userInterfaceStyle.getter(v97);
    v88(v9, v132);
    objc_msgSend(v67, "setOverrideUserInterfaceStyle:", v98);
    v99 = *(void **)(*(_QWORD *)&v67[v77] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel);
    objc_msgSend(v99, "_setTextColorFollowsTintColor:", 0);
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v100 = v99;
    v101 = (void *)static UIColor.primaryText.getter(v100);
    v129 = v88;
    v102 = v101;
    v103 = objc_msgSend(v101, "colorWithAlphaComponent:", 0.7);
    v128 = a1;
    v104 = v103;

    objc_msgSend(v100, "setTextColor:", v104);
    v105 = objc_retain(*(id *)(*(_QWORD *)&v67[v77]
                             + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel));
    v106 = (void *)static UIColor.primaryText.getter(v105);
    v107 = objc_msgSend(v106, "colorWithAlphaComponent:", 0.7);

    objc_msgSend(v105, "setTextColor:", v107);
    v108 = *(id *)&v67[OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_crossLinkTitleLabel];
    v109 = (void *)static UIColor.primaryText.getter(v108);
    v110 = objc_msgSend(v109, "colorWithAlphaComponent:", 0.7);

    objc_msgSend(v108, "setTextColor:", v110);
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    objc_msgSend(v67, "setNeedsLayout");
    v111 = swift_allocObject(&unk_1007367A0, 24, 7);
    swift_unknownObjectWeakInit(v111 + 16);
    v112 = (double (*)())swift_allocObject(&unk_1007367C8, 40, 7);
    v113 = v127;
    *((_QWORD *)v112 + 2) = v111;
    *((_QWORD *)v112 + 3) = v113;
    v114 = v131;
    *((_QWORD *)v112 + 4) = v131;
    v115 = (double (**)())&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupViewTappedAction];
    v116 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupViewTappedAction];
    v117 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupViewTappedAction
                        + 8];
    *v115 = sub_1002E7F60;
    v115[1] = v112;
    swift_retain(v113);
    swift_retain(v114);
    sub_100019310(v116, v117);
    v118 = v130;
    v119 = EditorialCard.mediaOverlayStyle.getter(objc_msgSend(v130, "setHidden:", 0));
    v120 = MediaOverlayStyle.userInterfaceStyle.getter(v119);
    v129(v9, v132);
    objc_msgSend(v118, "setOverrideUserInterfaceStyle:", v120);
    swift_release(v113);
  }
  else
  {
    v93 = &v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupViewTappedAction];
    v94 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupViewTappedAction];
    v95 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupViewTappedAction
                       + 8];
    *(_QWORD *)v93 = 0;
    *((_QWORD *)v93 + 1) = 0;
    sub_100019310(v94, v95);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31EditorialCardCollectionViewCell_lockupView], "setHidden:", 1);
    objc_msgSend(v130, "setHidden:", 1);
  }
  sub_1002B3450();
  return objc_msgSend(v4, (SEL)p_base_meths[408]);
}

uint64_t sub_1002E7F08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E7F2C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_1002E7F60()
{
  uint64_t *v0;

  return sub_1002E7248(v0[2], v0[3], v0[4]);
}

id sub_1002E7F6C(uint64_t a1, uint64_t a2)
{
  __n128 v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  id v29;
  uint64_t v31;

  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v4 = v3.n128_f64[0];
  if (qword_1007F1A68 != -1)
    swift_once(&qword_1007F1A68, sub_1002B00AC);
  v5 = type metadata accessor for FlowcaseItemLayout.Metrics(0, v3);
  v6 = sub_1000117A8(v5, (uint64_t)qword_1008537B0);
  v8 = type metadata accessor for FlowcaseItemLayout(0, v7);
  v9 = sub_10000E99C(&qword_100805440, (uint64_t (*)(uint64_t))&type metadata accessor for FlowcaseItemLayout, (uint64_t)&protocol conformance descriptor for FlowcaseItemLayout);
  v10 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v6, a2, v8, v9, v4, 1.79769313e308);
  v12 = v11;
  if (qword_1007F1A70 != -1)
    swift_once(&qword_1007F1A70, sub_1002B04E4);
  v13 = type metadata accessor for Separator(0);
  v14 = sub_1000117A8(v13, (uint64_t)qword_1008537C8);
  v15.n128_u64[0] = v12;
  v16 = CGSize.adding(separator:in:)(v14, a2, v10, v15);
  v18 = v17;
  v19 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v20 = objc_msgSend(v19, "absoluteDimension:", v16);
  v21 = objc_msgSend(v19, "absoluteDimension:", v18);
  v22 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v20, v21);

  v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v22);
  v24 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v25 = sub_10000DF3C(&qword_1007F5840);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v26 + 32) = v23;
  v31 = v26;
  specialized Array._endMutation()(v26);
  sub_100019574(0, (unint64_t *)&qword_100800DA0, NSCollectionLayoutItem_ptr);
  v27 = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v24, "verticalGroupWithLayoutSize:subitems:", v22, isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

  return v29;
}

void sub_1002E8200()
{
  qword_1008539F8 = 0x403C000000000000;
}

void sub_1002E8210()
{
  qword_100853A00 = 0x403E000000000000;
}

uint64_t sub_1002E8220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DF3C(&qword_100806718);
  sub_100045464(v0, qword_100806690);
  sub_1000117A8(v0, (uint64_t)qword_100806690);
  v5 = 10;
  v4 = 9;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for ContentMode(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

uint64_t sub_1002E82B0()
{
  uint64_t v0;
  uint64_t KeyPath;
  __n128 v2;
  __n128 v3;
  uint64_t v4;
  id v6;
  id v7;

  v0 = sub_10000DF3C(&qword_100806710);
  sub_100045464(v0, qword_1008066A8);
  sub_1000117A8(v0, (uint64_t)qword_1008066A8);
  KeyPath = swift_getKeyPath(&unk_100683388);
  v7 = sub_1004853E8(0xD00000000000001ELL, 0x8000000100642C70, 0, v2);
  v6 = sub_1004853E8(0xD000000000000017, 0x8000000100642C90, 0, v3);
  v4 = sub_100019574(0, (unint64_t *)&qword_1007FD5C0, UIImage_ptr);
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v7, &v6, v4);
}

BOOL sub_1002E838C()
{
  void *v0;

  return objc_msgSend(v0, "userInterfaceLevel") == (id)1;
}

uint64_t sub_1002E83B4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  UIColor v3;
  UIColor v4;
  UIColor v5;
  UIColor v6;
  Class v8;
  Class isa;

  v0 = sub_10000DF3C(&qword_100806708);
  sub_100045464(v0, qword_1008066C0);
  sub_1000117A8(v0, (uint64_t)qword_1008066C0);
  KeyPath = swift_getKeyPath(&unk_100683388);
  v2 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v3.super.isa = (Class)static UIColor.hex(_:)(0x38463746374623, 0xE700000000000000);
  v4.super.isa = (Class)static UIColor.hex(_:)(0x33333033303323, 0xE700000000000000);
  isa = UIColor.init(light:dark:)(v3, v4).super.isa;
  v5.super.isa = (Class)static UIColor.hex(_:)(0x38463746374623, 0xE700000000000000);
  v6.super.isa = (Class)static UIColor.hex(_:)(0x45314331433123, 0xE700000000000000);
  v8 = UIColor.init(light:dark:)(v5, v6).super.isa;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &isa, &v8, v2);
}

char *sub_1002E84D8(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  double v22;
  void *v23;
  void *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v37;
  void *v38;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC22SubscribePageExtension27EditorsChoiceBackgroundView_imageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");

  v39.receiver = v12;
  v39.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  v14 = qword_1007F1BB0;
  v15 = (char *)v13;
  if (v14 != -1)
    swift_once(&qword_1007F1BB0, sub_1002E83B4);
  v16 = sub_10000DF3C(&qword_100806708);
  sub_1000117A8(v16, (uint64_t)qword_1008066C0);
  v37 = v15;
  *(_QWORD *)&v17 = Conditional.evaluate(with:)(&v37, v16).n128_u64[0];
  v18 = v38;
  objc_msgSend(v15, "setBackgroundColor:", v38, v17);

  v19 = OBJC_IVAR____TtC22SubscribePageExtension27EditorsChoiceBackgroundView_imageView;
  v20 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension27EditorsChoiceBackgroundView_imageView];
  if (qword_1007F1BA8 != -1)
    swift_once(&qword_1007F1BA8, sub_1002E82B0);
  v21 = sub_10000DF3C(&qword_100806710);
  sub_1000117A8(v21, (uint64_t)qword_1008066A8);
  v37 = v15;
  *(_QWORD *)&v22 = Conditional.evaluate(with:)(&v37, v21).n128_u64[0];
  v23 = v38;
  objc_msgSend(v20, "setImage:", v38, v22);

  v24 = *(void **)&v15[v19];
  if (qword_1007F1BA0 != -1)
    swift_once(&qword_1007F1BA0, sub_1002E8220);
  v25 = sub_10000DF3C(&qword_100806718);
  sub_1000117A8(v25, (uint64_t)qword_100806690);
  v37 = v15;
  *(_QWORD *)&v26 = Conditional.evaluate(with:)(&v37, v25).n128_u64[0];
  objc_msgSend(v24, "setContentMode:", v38, v26);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[v19]);
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitUserInterfaceLevel(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitUserInterfaceLevel;
  v29 = swift_allocObject(&unk_100736810, 24, 7);
  *(_QWORD *)(v29 + 16) = ObjectType;
  v30 = v15;
  v31 = UIView.registerForTraitChanges<A>(_:handler:)(v28, sub_1002E8BB4, v29, ObjectType);
  swift_unknownObjectRelease(v31);

  swift_bridgeObjectRelease(v28);
  swift_release(v29);
  v32 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v32 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v32 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v32 + 40) = &protocol witness table for UITraitLayoutDirection;
  v33 = swift_allocObject(&unk_100736838, 24, 7);
  *(_QWORD *)(v33 + 16) = ObjectType;
  v34 = v30;
  v35 = UIView.registerForTraitChanges<A>(_:handler:)(v32, sub_1002E8BCC, v33, ObjectType);
  swift_unknownObjectRelease(v35);
  swift_bridgeObjectRelease(v32);
  swift_release(v33);

  return v34;
}

void sub_1002E8864(char *a1)
{
  uint64_t v2;
  double v3;
  void *v4;
  void *v5;
  uint64_t v6;
  double v7;
  void *v8;
  char *v9;
  void *v10;

  if (qword_1007F1BB0 != -1)
    swift_once(&qword_1007F1BB0, sub_1002E83B4);
  v2 = sub_10000DF3C(&qword_100806708);
  sub_1000117A8(v2, (uint64_t)qword_1008066C0);
  v9 = a1;
  *(_QWORD *)&v3 = Conditional.evaluate(with:)(&v9, v2).n128_u64[0];
  v4 = v10;
  objc_msgSend(a1, "setBackgroundColor:", v10, v3);

  v5 = *(void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension27EditorsChoiceBackgroundView_imageView];
  if (qword_1007F1BA8 != -1)
    swift_once(&qword_1007F1BA8, sub_1002E82B0);
  v6 = sub_10000DF3C(&qword_100806710);
  sub_1000117A8(v6, (uint64_t)qword_1008066A8);
  v9 = a1;
  *(_QWORD *)&v7 = Conditional.evaluate(with:)(&v9, v6).n128_u64[0];
  v8 = v10;
  objc_msgSend(v5, "setImage:", v10, v7);

}

id sub_1002E8994(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  double v4;
  _QWORD v6[2];

  v2 = *(void **)(a1 + OBJC_IVAR____TtC22SubscribePageExtension27EditorsChoiceBackgroundView_imageView);
  if (qword_1007F1BA0 != -1)
    swift_once(&qword_1007F1BA0, sub_1002E8220);
  v3 = sub_10000DF3C(&qword_100806718);
  sub_1000117A8(v3, (uint64_t)qword_100806690);
  v6[0] = a1;
  *(_QWORD *)&v4 = Conditional.evaluate(with:)(v6, v3).n128_u64[0];
  return objc_msgSend(v2, "setContentMode:", v6[1], v4);
}

uint64_t type metadata accessor for EditorsChoiceBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension27EditorsChoiceBackgroundView);
}

uint64_t sub_1002E8BA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002E8BB4(char *a1)
{
  sub_1002E8864(a1);
}

uint64_t sub_1002E8BBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002E8BCC(uint64_t a1)
{
  return sub_1002E8994(a1);
}

const char *sub_1002E8BD4()
{
  return "traitCollection";
}

id sub_1002E8BE0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "traitCollection");
  *a2 = result;
  return result;
}

id sub_1002E8C18@<X0>(id *a1@<X0>, BOOL *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "userInterfaceLevel");
  *a2 = result == (id)1;
  return result;
}

uint64_t MetadataRibbonTagViewLayout.Metrics.standard.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1007F1BB8 != -1)
    swift_once(&qword_1007F1BB8, sub_1002E983C);
  v0 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  return sub_1000117A8(v0, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
}

char *sub_1002E8C98(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  double left;
  double bottom;
  double right;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v41[5];
  objc_super v42;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v4[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_metrics];
  v16 = qword_1007F1BB8;
  v17 = v5;
  if (v16 != -1)
    swift_once(&qword_1007F1BB8, sub_1002E983C);
  v18 = sub_1000117A8(v11, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v15, v18, v11);
  v20 = &v17[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_id];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = &v17[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_itemType];
  v22 = type metadata accessor for MetadataRibbonItemType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = &v17[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_labelMaxWidth];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_tagLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);

  v42.receiver = v17;
  v42.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v42, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v28 = (char *)v24;
  objc_msgSend(v28, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v29 = OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_tagLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_tagLabel];
  sub_1000117FC();
  v31 = v30;
  v32 = (void *)static UIColor.secondaryText.getter(v31);
  objc_msgSend(v31, "setTextColor:", v32);

  v33 = *(void **)&v28[v29];
  v34 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v14, &v28[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_metrics], v11);
  v35 = MetadataRibbonTagViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v34);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static CustomTextStyle<>.metadataRibbon.getter(objc_msgSend(v33, "setNumberOfLines:", v35));
  if (qword_1007F1158 != -1)
    swift_once(&qword_1007F1158, sub_1000D4F00);
  v36 = type metadata accessor for MetadataRibbonTextStyle(0);
  v37 = sub_1000117A8(v36, (uint64_t)qword_100851868);
  v41[3] = v36;
  v41[4] = sub_1001EAC90();
  v38 = sub_1000117C0(v41);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v38, v37, v36);
  dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v41);
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v28[v29]);

  return v28;
}

uint64_t sub_1002E90F8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for LayoutRect(0);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetadataRibbonTagViewLayout(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v2;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "layoutSubviews");
  v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_tagLabel];
  v22[3] = type metadata accessor for DynamicTypeLabel(0);
  v22[4] = &protocol witness table for UILabel;
  v22[0] = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v2[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_metrics], v7);
  v16 = v15;
  MetadataRibbonTagViewLayout.init(descriptionLabelTextView:metrics:)(v22, v10);
  v17 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  MetadataRibbonTagViewLayout.placeChildren(relativeTo:in:)(v2, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1002E94DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;

  v1 = v0;
  MetadataRibbonItem.labelText.getter();
  v3 = v2;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_tagLabel];
  if (v2)
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  objc_msgSend(v4, "setText:", v5);

  objc_msgSend(v1, "setNeedsLayout");
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1002E955C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_itemType;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, &qword_1007F6CD0);
}

double sub_1002E95B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_itemType;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10006C214(a1, v3, &qword_1007F6CD0);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1002E9614(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_itemType, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1002E9658()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_labelMaxWidth;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_labelMaxWidth, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_1002E96A0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v6[24];

  v5 = v2 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_labelMaxWidth;
  swift_beginAccess(v5, v6, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
}

uint64_t (*sub_1002E96FC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_labelMaxWidth, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1002E9740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_id;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, (uint64_t *)&unk_1007F9850);
}

double sub_1002E9798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_id;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10006C214(a1, v3, (uint64_t *)&unk_1007F9850);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_1002E97F8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension21MetadataRibbonTagView_id, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1002E983C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  sub_100045464(v4, static MetadataRibbonTagViewLayout.Metrics.standard);
  sub_1000117A8(v4, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  v5 = sub_10000DF3C(&qword_1007F5D10);
  Conditional.init(_:)(sub_1000C4540, 0, v5, &type metadata for Double);
  MetadataRibbonTagViewLayout.Metrics.init(maximumNumberofLinesForDescriptionLabel:)(1);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static MetadataRibbonTagViewLayout.Metrics.standard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1007F1BB8 != -1)
    swift_once(&qword_1007F1BB8, sub_1002E983C);
  v2 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v3 = sub_1000117A8(v2, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1002E9988()
{
  return type metadata accessor for MetadataRibbonTagView(0);
}

uint64_t type metadata accessor for MetadataRibbonTagView(uint64_t a1)
{
  uint64_t result;

  result = qword_100806758;
  if (!qword_100806758)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetadataRibbonTagView);
  return result;
}

void sub_1002E99CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "(";
    sub_1000C47CC(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100683410;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

double sub_1002E9A74(uint64_t a1, uint64_t a2, double a3, double a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  char *v44;
  double v45;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[6];

  v56 = a2;
  v51 = a1;
  v57 = type metadata accessor for MetadataRibbonTagViewLayout(0);
  v55 = *(_QWORD *)(v57 - 8);
  v6 = __chkstk_darwin(v57);
  v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LabelPlaceholder(0, v6);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTextAppearance(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - v20;
  v22 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v50 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v47 - v26;
  if (qword_1007F1BB8 != -1)
    swift_once(&qword_1007F1BB8, sub_1002E983C);
  v28 = sub_1000117A8(v22, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v29 = v48(v27, v28, v22);
  v30 = DynamicTextAppearance.init()(v29);
  static CustomTextStyle<>.metadataRibbon.getter(v30);
  v49 = v23;
  if (qword_1007F1158 != -1)
    swift_once(&qword_1007F1158, sub_1000D4F00);
  v31 = type metadata accessor for MetadataRibbonTextStyle(0);
  v32 = sub_1000117A8(v31, (uint64_t)qword_100851868);
  v59[3] = v31;
  v59[4] = sub_1001EAC90();
  v33 = sub_1000117C0(v59);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v33, v32, v31);
  DynamicTextAppearance.withCustomTextStyle(_:)(v59);
  v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34(v15, v12);
  v35 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  v36 = MetadataRibbonTagViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v35);
  DynamicTextAppearance.withNumberOfLines(_:)(v36);
  v37 = ((uint64_t (*)(char *, uint64_t))v34)(v18, v12);
  v38 = MetadataRibbonItem.labelText.getter(v37);
  v40 = v39;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v21, v12);
  v41 = LabelPlaceholder.Options.init(rawValue:)(0);
  v42 = LabelPlaceholder.init(_:with:where:)(v38, v40, v18, v41);
  LabelPlaceholder.layoutTextView.getter(v59, v42);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  sub_100011020((uint64_t)v59, (uint64_t)v58);
  v43 = v50;
  v48(v50, (uint64_t)v27, v22);
  v44 = v54;
  MetadataRibbonTagViewLayout.init(descriptionLabelTextView:metrics:)(v58, v43);
  v45 = MetadataRibbonTagViewLayout.measurements(fitting:in:)(v56, a3, a4);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v57);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  v34(v21, v12);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v22);
  return v45;
}

double sub_1002E9E40(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  double v14;

  v8 = a1.n128_u64[0];
  v9 = Footnote.text.getter(a1);
  v11 = v10;
  v12 = Footnote.presentationStyle.getter();
  v13.n128_u64[0] = v8;
  v14 = sub_100124254(v9, v11, (v12 >> 1) & 1, a7, v13);
  swift_bridgeObjectRelease(v11);
  return v14;
}

id sub_1002E9EBC()
{
  return sub_1002E9F20();
}

uint64_t sub_1002E9ECC()
{
  uint64_t result;

  if (qword_1007F12A8 != -1)
    return swift_once(&qword_1007F12A8, sub_100123484);
  return result;
}

uint64_t sub_1002E9EF4()
{
  return sub_10000E99C(&qword_100806768, (uint64_t (*)(uint64_t))&type metadata accessor for Footnote, (uint64_t)&protocol conformance descriptor for Footnote);
}

id sub_1002E9F20()
{
  char *v0;
  void *v1;
  _BYTE *v2;
  char v3;
  char v4;
  __n128 v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;

  v1 = v0;
  v2 = *(_BYTE **)&v0[OBJC_IVAR____TtC22SubscribePageExtension26FootnoteCollectionViewCell_footnoteView];
  v3 = ((uint64_t (*)(void))Footnote.presentationStyle.getter)();
  v4 = v2[OBJC_IVAR____TtC22SubscribePageExtension12FootnoteView_hasChevron];
  v2[OBJC_IVAR____TtC22SubscribePageExtension12FootnoteView_hasChevron] = (v3 & 2) != 0;
  sub_100123FF4(v4);
  v5.n128_f64[0] = Footnote.presentationStyle.getter();
  v2[OBJC_IVAR____TtC22SubscribePageExtension12FootnoteView_textLightensOnHighlight] = (v6 & 4) != 0;
  v7 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension12FootnoteView_textLabel];
  Footnote.text.getter(v5);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  objc_msgSend(v2, "setNeedsLayout");
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1002EA000(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  _QWORD v40[2];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v40[0] = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v40 - v7;
  v9 = sub_10000DF3C(&qword_1007FE100);
  __chkstk_darwin(v9);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v12);
  v41 = (uint64_t)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v40 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v40 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)v40 - v22;
  v42 = v1;
  v40[1] = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_headingLabel];
  dispatch thunk of DynamicTypeLabel.fontUseCase.getter(v21);
  v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_100072A20((uint64_t)v23, (uint64_t)v11);
  v44 = a1;
  sub_100072A20(a1, v24);
  v43 = v4;
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v25((uint64_t)v11, 1, v3) == 1)
  {
    sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F4D60);
    if (v25(v24, 1, v3) == 1)
    {
      sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F4D60);
      v26 = v44;
      return sub_100011088(v26, (uint64_t *)&unk_1007F4D60);
    }
  }
  else
  {
    sub_100072A20((uint64_t)v11, (uint64_t)v19);
    if (v25(v24, 1, v3) != 1)
    {
      v27 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v8, v24, v3);
      v28 = sub_10000E99C(&qword_1007FE108, (uint64_t (*)(uint64_t))&type metadata accessor for FontUseCase, (uint64_t)&protocol conformance descriptor for FontUseCase);
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v8, v3, v28);
      v30 = *(void (**)(char *, uint64_t))(v27 + 8);
      v30(v8, v3);
      sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F4D60);
      v30(v19, v3);
      sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F4D60);
      v26 = v44;
      if ((v29 & 1) != 0)
        return sub_100011088(v26, (uint64_t *)&unk_1007F4D60);
      goto LABEL_8;
    }
    sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F4D60);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v3);
  }
  sub_100011088((uint64_t)v11, &qword_1007FE100);
  v26 = v44;
LABEL_8:
  sub_100072A20(v26, (uint64_t)v16);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v16);
  v31 = v42;
  v32 = *(void **)&v42[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView];
  v33 = objc_msgSend(v42, "traitCollection");
  v34 = v41;
  sub_100072A20(v26, v41);
  if (v25(v34, 1, v3) == 1)
  {
    sub_100011088(v34, (uint64_t *)&unk_1007F4D60);
  }
  else
  {
    v35 = v43;
    v36 = v40[0];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v43 + 32))(v40[0], v34, v3);
    sub_1000466E4();
    v37 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v36, v33);
    v38 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v37);
    objc_msgSend(v32, "setPreferredSymbolConfiguration:", v38);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v3);
  }

  objc_msgSend(v31, "setNeedsLayout");
  return sub_100011088(v26, (uint64_t *)&unk_1007F4D60);
}

char *sub_1002EA42C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString *v25;
  id v26;
  double left;
  double bottom;
  double right;
  char *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v38;
  objc_class *ObjectType;
  objc_super v40;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for DirectionalTextAlignment(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v5[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_metrics];
  *((_QWORD *)v17 + 3) = &type metadata for Double;
  *((_QWORD *)v17 + 4) = &protocol witness table for Double;
  *(_QWORD *)v17 = 0;
  v18 = objc_allocWithZone((Class)UIImageView);
  v19 = v5;
  v20 = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView] = v20;
  *(_QWORD *)v16 = UIFontTextStyleBody;
  *((_DWORD *)v16 + 2) = 0;
  v21 = enum case for FontUseCase.preferredFont(_:);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v16, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DirectionalTextAlignment.none(_:), v10);
  v24 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v25 = UIFontTextStyleBody;
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_headingLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v16, 1, 4, 0, 0, v13, 0, 0);

  v40.receiver = v19;
  v40.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v30 = (char *)v26;
  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v31 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView];
  objc_msgSend(v30, "addSubview:", v31);
  v32 = v31;
  v33 = objc_msgSend(v30, "tintColor");
  objc_msgSend(v32, "setTintColor:", v33);

  v34 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_headingLabel];
  objc_msgSend(v30, "addSubview:", v34);
  v35 = v34;
  v36 = objc_msgSend(v30, "tintColor");
  objc_msgSend(v35, "setTextColor:", v36);

  return v30;
}

uint64_t sub_1002EA7FC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _QWORD v18[5];
  char v19[24];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v1;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "layoutSubviews", v5);
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView];
  v9 = *(void (**)(char *, uint64_t))&v1[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_headingLabel];
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_metrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_metrics], v19, 0, 0);
  sub_1001D6100(v10, (uint64_t)v18);
  sub_1002EA94C(v8, (uint64_t)&protocol witness table for UIView, v9, (void (*)(char *, uint64_t))&protocol witness table for UIView, (uint64_t)v18, v20);
  sub_1001D6178(v18);
  v11 = v21;
  v12 = v22;
  sub_100011064(v20, v21);
  v13 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v11, v12, v13, v14, v15, v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
}

uint64_t sub_1002EA94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, void (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, char *, uint64_t);
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  void (*v73)(char *);
  unsigned int v74;
  void (*v75)(char *);
  unsigned int v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(uint64_t *, uint64_t);
  void (*v79)(uint64_t *, _QWORD, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[3];
  void *v99;
  void *v100;
  _QWORD v101[5];

  v84 = a4;
  v83 = a3;
  v87 = a2;
  v86 = a1;
  v88 = a6;
  v93 = type metadata accessor for HorizontalAlignmentLayout.SizingPolicy.Priority(0);
  v80 = *(_QWORD *)(v93 - 8);
  v7 = __chkstk_darwin(v93);
  v92 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for HorizontalAlignmentLayout.SizingPolicy(0, v7);
  v82 = *(_QWORD *)(v97 - 8);
  v9 = __chkstk_darwin(v97);
  v90 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for HorizontalAlignmentLayout.HorizontalGravity(0, v9);
  v11 = *(_QWORD *)(v91 - 8);
  v12 = __chkstk_darwin(v91);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HorizontalAlignmentLayout.ContainerDestinationOffset(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = v15;
  v18 = __chkstk_darwin(v15);
  v20 = (uint64_t *)((char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for HorizontalAlignmentLayout.ChildSourceOffset(0, v18);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for HorizontalAlignmentLayout.VerticalAnchor(0, v23);
  v81 = *(_QWORD *)(v95 - 8);
  v26 = __chkstk_darwin(v95);
  v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for HorizontalAlignmentLayout.Child(0, v26);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v85 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v89 = (char *)&v69 - v31;
  sub_100011020(a5, (uint64_t)v101);
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104);
  v70 = v21;
  v71((uint64_t)v25, enum case for HorizontalAlignmentLayout.ChildSourceOffset.minY(_:), v21);
  v32 = swift_allocObject(&unk_100736A10, 24, 7);
  *(_QWORD *)(v32 + 16) = 0;
  *v20 = v32;
  v79 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104);
  v72 = v17;
  v79(v20, enum case for HorizontalAlignmentLayout.ContainerDestinationOffset.absolute(_:), v17);
  static HorizontalAlignmentLayout.VerticalAnchor.anchor(child:at:)(v25, v20);
  v78 = *(void (**)(uint64_t *, uint64_t))(v16 + 8);
  v78(v20, v17);
  v77 = *(void (**)(char *, uint64_t))(v22 + 8);
  v77(v25, v21);
  v99 = &type metadata for Double;
  v100 = &protocol witness table for Double;
  v98[0] = 0;
  v76 = enum case for HorizontalAlignmentLayout.HorizontalGravity.leading(_:);
  v75 = *(void (**)(char *))(v11 + 104);
  v33 = v11;
  v34 = v14;
  v35 = v91;
  v75(v14);
  v74 = enum case for HorizontalAlignmentLayout.SizingPolicy.Priority.default(_:);
  v36 = v80;
  v73 = *(void (**)(char *))(v80 + 104);
  v38 = v92;
  v37 = v93;
  v73(v92);
  v39 = v90;
  static HorizontalAlignmentLayout.SizingPolicy.policy(priority:constrainedTo:)(v38, 0, 0, 1);
  v80 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v80)(v38, v37);
  v40 = v89;
  static HorizontalAlignmentLayout.Child.child(view:leadingSpace:trailingSpace:verticalAnchor:horizontalGravity:sizingPolicy:)(v83, v84, v101, v98, v28, v34, v39);
  v84 = *(void (**)(char *, uint64_t))(v82 + 8);
  v84(v39, v97);
  v83 = *(void (**)(char *, uint64_t))(v33 + 8);
  v41 = v34;
  v83(v34, v35);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v98);
  v82 = *(_QWORD *)(v81 + 8);
  ((void (*)(char *, uint64_t))v82)(v28, v95);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v101);
  v101[3] = &type metadata for CGFloat;
  v101[4] = &protocol witness table for CGFloat;
  v101[0] = 0;
  v42 = enum case for HorizontalAlignmentLayout.ChildSourceOffset.midY(_:);
  v43 = v70;
  v44 = v71;
  v71((uint64_t)v25, enum case for HorizontalAlignmentLayout.ChildSourceOffset.midY(_:), v70);
  v45 = sub_10000DF3C(&qword_1007FE110);
  v46 = swift_allocBox(v45);
  v48 = v47 + *(int *)(v45 + 48);
  v81 = *(_QWORD *)(v94 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v81)(v47, v40, v96);
  v44(v48, v42, v43);
  *v20 = v46;
  v49 = v72;
  v79(v20, enum case for HorizontalAlignmentLayout.ContainerDestinationOffset.relative(_:), v72);
  static HorizontalAlignmentLayout.VerticalAnchor.anchor(child:at:)(v25, v20);
  v78(v20, v49);
  v77(v25, v43);
  v100 = &protocol witness table for Double;
  v99 = &type metadata for Double;
  v98[0] = 0;
  v50 = v91;
  ((void (*)(char *, _QWORD, uint64_t))v75)(v41, v76, v91);
  v51 = v92;
  v52 = v93;
  ((void (*)(char *, _QWORD, uint64_t))v73)(v92, v74, v93);
  v53 = v90;
  static HorizontalAlignmentLayout.SizingPolicy.policy(priority:constrainedTo:)(v51, 0, 0, 1);
  ((void (*)(char *, uint64_t))v80)(v51, v52);
  v54 = v85;
  static HorizontalAlignmentLayout.Child.child(view:leadingSpace:trailingSpace:verticalAnchor:horizontalGravity:sizingPolicy:)(v86, v87, v101, v98, v28, v41, v53);
  v84(v53, v97);
  v83(v41, v50);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v98);
  ((void (*)(char *, uint64_t))v82)(v28, v95);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v101);
  v55 = sub_10000DF3C(&qword_1007FE118);
  v56 = v94;
  v57 = *(_QWORD *)(v94 + 72);
  v58 = *(unsigned __int8 *)(v94 + 80);
  v59 = (v58 + 32) & ~v58;
  v60 = swift_allocObject(v55, v59 + 2 * v57, v58 | 7);
  *(_OWORD *)(v60 + 16) = xmmword_10066F870;
  v61 = v60 + v59;
  v62 = v96;
  v63 = (void (*)(uint64_t, char *, uint64_t))v81;
  ((void (*)(uint64_t, char *, uint64_t))v81)(v61, v54, v96);
  v64 = v89;
  v63(v61 + v57, v89, v62);
  v65 = type metadata accessor for HorizontalAlignmentLayout(0);
  v66 = v88;
  v88[3] = v65;
  v66[4] = sub_10000E99C(&qword_1007FE120, (uint64_t (*)(uint64_t))&type metadata accessor for HorizontalAlignmentLayout, (uint64_t)&protocol conformance descriptor for HorizontalAlignmentLayout);
  v66[5] = sub_10000E99C(&qword_1007FE128, (uint64_t (*)(uint64_t))&type metadata accessor for HorizontalAlignmentLayout, (uint64_t)&protocol conformance descriptor for HorizontalAlignmentLayout);
  sub_1000117C0(v66);
  HorizontalAlignmentLayout.init(children:)(v60);
  v67 = *(void (**)(char *, uint64_t))(v56 + 8);
  v67(v54, v62);
  return ((uint64_t (*)(char *, uint64_t))v67)(v64, v62);
}

void sub_1002EB0C8(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char v26;
  void *v27;
  id v28;
  char *v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  objc_super v34;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v32 - v14;
  v34.receiver = v2;
  v34.super_class = ObjectType;
  objc_msgSendSuper2(&v34, "traitCollectionDidChange:", a1, v13);
  v16 = objc_msgSend(v2, "traitCollection");
  v17 = objc_msgSend(v16, "preferredContentSizeCategory");

  v33 = v8;
  if (!a1)
  {

LABEL_7:
    v27 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView];
    dispatch thunk of DynamicTypeLabel.fontUseCase.getter(v25);
    v28 = objc_msgSend(v2, "traitCollection");
    sub_100072A20((uint64_t)v15, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
    {
      sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F4D60);
    }
    else
    {
      v29 = v33;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v33, v11, v5);
      sub_1000466E4();
      v30 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v29, v28);
      v31 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v30);
      objc_msgSend(v27, "setPreferredSymbolConfiguration:", v31);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v29, v5);
    }

    sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007F4D60);
    return;
  }
  v18 = objc_msgSend(a1, "preferredContentSizeCategory");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v24 = v22;
  if (v19 == v23 && v21 == v22)
  {

    swift_bridgeObjectRelease_n(v21, 2);
    return;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);

  swift_bridgeObjectRelease(v21);
  v25 = swift_bridgeObjectRelease(v24);
  if ((v26 & 1) == 0)
    goto LABEL_7;
}

double sub_1002EB418(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  _QWORD v14[5];
  _BYTE v15[24];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  swift_getObjectType();
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_imageView);
  v8 = *(void (**)(char *, uint64_t))(v3
                                              + OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_headingLabel);
  v9 = v3 + OBJC_IVAR____TtC22SubscribePageExtension16ImageHeadingView_metrics;
  swift_beginAccess(v9, v15, 0, 0);
  sub_1001D6100(v9, (uint64_t)v14);
  sub_1002EA94C(v7, (uint64_t)&protocol witness table for UIView, v8, (void (*)(char *, uint64_t))&protocol witness table for UIView, (uint64_t)v14, v16);
  sub_1001D6178(v14);
  v10 = v17;
  v11 = v18;
  sub_100011064(v16, v17);
  v12 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v10, v11, a2, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
  return v12;
}

void sub_1002EB5BC(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a2[3];
  v8 = a2[5];
  sub_100011064(a2, v7);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v7, v8, a3, a4);
}

uint64_t type metadata accessor for ImageHeadingView()
{
  return objc_opt_self(_TtC22SubscribePageExtension16ImageHeadingView);
}

uint64_t destroy for ImageHeadingView.Metrics(_QWORD *a1)
{
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
}

ValueMetadata *type metadata accessor for ImageHeadingView.Metrics()
{
  return &type metadata for ImageHeadingView.Metrics;
}

uint64_t sub_1002EB6AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, __n128 a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  __int128 v47[3];
  _QWORD v48[7];

  v44 = a6;
  v45 = a8;
  v40 = a2;
  v41 = a5;
  v42 = type metadata accessor for LabelPlaceholderCompatibility(0, a9);
  v13 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000466E4();
  v16 = objc_msgSend(a7, "traitCollection");
  v17 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(a4, v16);

  v18 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v46 = v17;
  v43 = objc_msgSend(v18, "configurationWithFont:", v17);
  v19 = objc_msgSend(a1, "imageByApplyingSymbolConfiguration:");
  v20 = v19;
  if (v19)
  {
    objc_msgSend(v19, "size", v40, v41);
    v22 = v21;
    v24 = v23;
  }
  else
  {
    v24 = 0.0;
    v22 = 0.0;
  }
  v25 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = LayoutViewPlaceholder.init(representing:)(v22, v24);
  v27 = objc_msgSend(a7, "traitCollection", swift_bridgeObjectRetain(a3).n128_f64[0]);
  v28 = static UIFont.preferredFont(forUseWith:compatibleWith:)(a4, v27);

  v29 = type metadata accessor for Feature(0);
  v48[3] = v29;
  v48[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v30 = sub_1000117C0(v48);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v30, enum case for Feature.measurement_with_labelplaceholder(_:), v29);
  LOBYTE(v29) = isFeatureEnabled(_:)(v48);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v48);
  v31 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v40, a3, v28, 4, 4, 0, v41, 0, v29 & 1);
  v32 = (void (*)(char *, uint64_t))LabelPlaceholderCompatibility.referableLayoutTextView.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v42);
  v35 = *(void (**)(char *, uint64_t))(v34 + 8);
  swift_retain(v26);
  swift_unknownObjectRetain(v32);
  sub_1002EA94C(v26, (uint64_t)&protocol witness table for LayoutViewPlaceholder, v32, v35, v44, v48);
  swift_release(v26);
  swift_unknownObjectRelease(v32);
  sub_10016C028((uint64_t)v48, (uint64_t)v47);
  v36 = swift_allocObject(&unk_1007369E8, 64, 7);
  sub_1002EBA0C(v47, (_OWORD *)(v36 + 16));
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v38 = LayoutViewPlaceholder.init(measureWith:)(sub_1002EBA24, v36, v37);

  swift_release(v26);
  swift_unknownObjectRelease(v32);

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v48);
  return v38;
}

uint64_t sub_1002EB9E8()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

_OWORD *sub_1002EBA0C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

void sub_1002EBA24(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  sub_1002EB5BC(a1, (_QWORD *)(v3 + 16), a2, a3);
}

uint64_t sub_1002EBA2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002EBA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];

  v46 = a2;
  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView_artworkViews);
  swift_beginAccess(v11, v47, 0, 0);
  v12 = *v11;
  if ((unint64_t)a1 >> 62)
    goto LABEL_27;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(a1);
  while (v13)
  {
    v43 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      if ((unint64_t)v12 >> 62)
        goto LABEL_34;
    }
    else
    {
      if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v14 = *(_QWORD *)(a1 + 32);
      swift_retain(v14);
      if ((unint64_t)v12 >> 62)
      {
LABEL_34:
        if (v12 < 0)
          v35 = v12;
        else
          v35 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v12);
        v15 = _CocoaArrayWrapper.endIndex.getter(v35);
        swift_bridgeObjectRelease(v12);
        if (!v15)
        {
LABEL_38:
          swift_bridgeObjectRelease(v12);
          v32 = a1;
LABEL_39:
          swift_bridgeObjectRelease(v32);
          swift_release(v14);
          return;
        }
        goto LABEL_7;
      }
    }
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      goto LABEL_38;
LABEL_7:
    v16 = 0;
    v41 = v12;
    v42 = v12 & 0xC000000000000001;
    v38 = v12 + 32;
    v39 = v12 & 0xFFFFFFFFFFFFFF8;
    v40 = a1;
    v36 = a1 + 40;
    v37 = a1 & 0xFFFFFFFFFFFFFF8;
    a1 = v13 - 1;
    while (1)
    {
      if (v42)
      {
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v41);
      }
      else
      {
        if (v16 >= *(_QWORD *)(v39 + 16))
          goto LABEL_25;
        v17 = *(id *)(v38 + 8 * v16);
      }
      v19 = v17;
      v20 = Artwork.crop.getter(v18);
      v21 = Artwork.Crop.preferredContentMode.getter(v20);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);
      v12 = Artwork.config(_:mode:prefersLayeredImage:)(v21, 0, 36.0, 36.0);
      Artwork.style.getter(v12);
      v22 = ArtworkView.style.setter(v7);
      *(_QWORD *)&v23 = Artwork.contentMode.getter(v22).n128_u64[0];
      v25 = ArtworkLoaderConfig.size.getter(objc_msgSend(v19, "setContentMode:", v24, v23));
      v27 = ArtworkView.imageSize.setter(v25, v26);
      v28 = Artwork.backgroundColor.getter(v27);
      if (!v28)
      {
        sub_1000117FC();
        v28 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v28);
      objc_msgSend(v19, "setContentMode:", v21);
      v29 = type metadata accessor for ArtworkView(0);
      v30 = sub_100059C5C();
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v12, 2, 1, v19, v29, v30);
      swift_release(v14);

      swift_release(v12);
      if (a1 == v16)
      {
        swift_bridgeObjectRelease(v41);
        v33 = v40;
        goto LABEL_32;
      }
      v31 = v16 + 1;
      if (!v43)
        break;
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 + 1, v40);
      if (__OFADD__(v31, 1))
        goto LABEL_24;
LABEL_21:
      if (v15 == ++v16)
      {
        swift_bridgeObjectRelease(v41);
        v32 = v40;
        goto LABEL_39;
      }
    }
    if (v31 >= *(_QWORD *)(v37 + 16))
      goto LABEL_26;
    v14 = *(_QWORD *)(v36 + 8 * v16);
    swift_retain(v14);
    if (!__OFADD__(v31, 1))
      goto LABEL_21;
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v34);
  }
  swift_bridgeObjectRelease(v12);
  v33 = a1;
LABEL_32:
  swift_bridgeObjectRelease(v33);
}

void sub_1002EBECC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = sub_10000DF3C(&qword_1008002F0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10000DF3C(&qword_100806858);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  v12 = v1
      + OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView____lazy_storage___artworkViewPool;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView____lazy_storage___artworkViewPool, v18, 0, 0);
  sub_1002ECBA0(v12, (uint64_t)v11);
  v13 = sub_10000DF3C(&qword_1007FC668);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_1002ECBE8((uint64_t)v11);
    v15 = type metadata accessor for ArtworkView(0);
    ViewRecycler.init()(v15);
    v16 = sub_1002A56F4();
    ReusePool.init(recycler:limit:)(v5, 5, v3, v16);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v8, a1, v13);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    swift_beginAccess(v12, v17, 33, 0);
    sub_1002ECB58((uint64_t)v8, v12);
    swift_endAccess(v17);
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(a1, v11, v13);
  }
}

void sub_1002EC094()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _BYTE v35[24];
  char v36[24];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100806858);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007FC668);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)&v0[OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView_artworkViews];
  v9 = OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView_numberOfArtworks;
  v10 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView____lazy_storage___artworkViewPool];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView_artworkViews], v36, 0, 0);
  while (1)
  {
    v11 = *v8;
    if ((unint64_t)*v8 >> 62)
    {
      v21 = v11 < 0 ? *v8 : v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v8);
      v12 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v13 = *(_QWORD *)&v1[v9];
    if (v12 == v13)
      break;
    v14 = *v8;
    if (!((unint64_t)*v8 >> 62))
    {
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) < v13)
        goto LABEL_8;
      goto LABEL_19;
    }
    if (v14 < 0)
      v22 = *v8;
    else
      v22 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v8);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v14);
    if (v23 < *(_QWORD *)&v1[v9])
    {
LABEL_8:
      sub_1002EBECC((uint64_t)v7);
      ReusePool.dequeue(or:)(&v34, sub_1002EC8EC, 0, v5);
      v15 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v4, v7, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v4, 0, 1, v5);
      swift_beginAccess(v10, v35, 33, 0);
      sub_1002ECB58((uint64_t)v4, v10);
      swift_endAccess(v35);
      v16 = v34;
      swift_beginAccess(v8, v35, 33, 0);
      v17 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized Array._endMutation()(v20);
      objc_msgSend(v1, "addSubview:", v17, swift_endAccess(v35).n128_f64[0]);

    }
    else
    {
LABEL_19:
      swift_beginAccess(v8, v35, 33, 0);
      v24 = *v8;
      if ((unint64_t)*v8 >> 62)
      {
        if (v24 < 0)
          v31 = *v8;
        else
          v31 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v8);
        v32 = _CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease(v24);
        if (!v32)
          goto LABEL_2;
LABEL_21:
        v25 = *v8;
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v8);
        *v8 = v25;
        if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v25 < 0 || (v25 & 0x4000000000000000) != 0)
        {
          isUniquelyReferenced_nonNull_bridgeObject = sub_100592804(v25);
          v25 = isUniquelyReferenced_nonNull_bridgeObject;
          *v8 = isUniquelyReferenced_nonNull_bridgeObject;
        }
        v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v27)
        {
          __break(1u);
          return;
        }
        v28 = v27 - 1;
        v29 = *(void **)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v28 + 0x20);
        *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) = v28;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
        swift_endAccess(v35);
        v34 = v29;
        sub_1002EBECC((uint64_t)v7);
        ReusePool.recycle(_:)(&v34, v5);
        v30 = v33;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v4, v7, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v4, 0, 1, v5);
        swift_beginAccess(v10, v35, 33, 0);
        sub_1002ECB58((uint64_t)v4, v10);
        swift_endAccess(v35);

      }
      else
      {
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_21;
LABEL_2:
        swift_endAccess(v35);
      }
    }
  }
}

void sub_1002EC474(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  _QWORD v26[5];
  _BYTE v27[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for HorizontalStack(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalStack.init(with:)(0, 0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView_numberOfArtworks);
  if (v9 < 2)
  {
    a1[3] = v5;
    a1[4] = &protocol witness table for HorizontalStack;
    v10 = sub_1000117C0(a1);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
LABEL_9:
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v11);
    return;
  }
  v12 = (unint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension32CarouselItemLockupCollectionView_artworkViews);
  swift_beginAccess(v12, v27, 0, 0);
  v13 = *v12;
  swift_bridgeObjectRetain(*v12);
  v14 = sub_1001397AC(v9, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease(v13);
  v21 = (v20 >> 1) - v18;
  if (v20 >> 1 == v18)
  {
LABEL_8:
    swift_unknownObjectRelease(v14);
    v26[3] = v5;
    v26[4] = &protocol witness table for HorizontalStack;
    v25 = sub_1000117C0(v26);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v25, v8, v5);
    a1[3] = type metadata accessor for Margins(0);
    a1[4] = &protocol witness table for Margins;
    sub_1000117C0(a1);
    v11 = Margins.init(insets:child:)(v26, 16.0, 16.0, 16.0, 16.0);
    goto LABEL_9;
  }
  if ((uint64_t)(v20 >> 1) > v18)
  {
    v22 = 0;
    v23 = v16 + 8 * v18;
    while (!__OFADD__(v22, 1))
    {
      v24 = *(id *)(v23 + 8 * v22);
      sub_1002EC758(v22, (uint64_t)v24, (uint64_t)v8, ObjectType);

      if (v21 == ++v22)
        goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002EC758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v11[0] = a2;
  v6 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v12, v6, &protocol witness table for UIView, 36.0, 36.0);
  v7 = v13;
  v8 = v14;
  sub_100011064(v12, v13);
  Measurable.placeable.getter(v11, v7, *(_QWORD *)(v8 + 8));
  v9 = swift_allocObject(&unk_100736A38, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a4;
  HorizontalStack.add(_:with:)(v11, sub_1002ECC38, v9);
  swift_release(v9);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v11);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
}

id sub_1002EC8EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = type metadata accessor for ArtworkView(0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *a1 = result;
  return result;
}

uint64_t sub_1002EC98C()
{
  return type metadata accessor for CarouselItemLockupCollectionView(0);
}

uint64_t type metadata accessor for CarouselItemLockupCollectionView(uint64_t a1)
{
  uint64_t result;

  result = qword_100806840;
  if (!qword_100806840)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarouselItemLockupCollectionView);
  return result;
}

void sub_1002EC9D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1002ECA5C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_1002ECA5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100806850)
  {
    v2 = sub_100010EF8(&qword_1007FC668);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100806850);
  }
}

double sub_1002ECAB4(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1002EC474(v10);
  v6 = v11;
  v7 = v12;
  sub_100011064(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  return v8;
}

uint64_t sub_1002ECB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_100806858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002ECBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_100806858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002ECBE8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_100806858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002ECC28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002ECC38()
{
  uint64_t v0;
  uint64_t result;
  _QWORD v2[5];

  if (*(uint64_t *)(v0 + 16) >= 1)
  {
    v2[3] = &type metadata for CGFloat;
    v2[4] = &protocol witness table for CGFloat;
    v2[0] = 0x4020000000000000;
    return HorizontalStack.Properties.leadingSpacing.setter(v2);
  }
  return result;
}

uint64_t sub_1002ECC90(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4043800000000000;
  return sub_1002ECCE4(a2, 40.0, 231.0, a1, qword_100806860);
}

uint64_t sub_1002ECCBC(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4052800000000000;
  return sub_1002ECCE4(a2, 34.0, 160.0, a1, qword_100806878);
}

uint64_t sub_1002ECCE4(__n128 a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[5];
  _QWORD v20[5];
  _QWORD v21[5];
  _QWORD v22[5];
  _QWORD v23[5];

  v7 = a1.n128_u64[0];
  v9 = type metadata accessor for FontSource(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v19[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArcadeWelcomeContentLayout.Metrics(0, v11);
  sub_100045464(v14, a5);
  sub_1000117A8(v14, (uint64_t)a5);
  v23[3] = &type metadata for Double;
  v23[4] = &protocol witness table for Double;
  v23[0] = v7;
  v22[3] = &type metadata for Double;
  v22[4] = &protocol witness table for Double;
  *(double *)v22 = a2;
  if (qword_1007F27E0 != -1)
    swift_once(&qword_1007F27E0, sub_10041733C);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_1000117A8(v15, (uint64_t)qword_100855C88);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for FontSource.useCase(_:), v9);
  v21[3] = &type metadata for Double;
  v21[4] = &protocol witness table for Double;
  *(double *)v21 = a3;
  v20[3] = &type metadata for Double;
  v20[4] = &protocol witness table for Double;
  v20[0] = 0x4046800000000000;
  v19[4] = &protocol witness table for Double;
  v19[3] = &type metadata for Double;
  v19[0] = 0x4024000000000000;
  return ArcadeWelcomeContentLayout.Metrics.init(titleTopSpace:titleInsets:subtitleTopSpace:subtitleFontSource:subtitleInsets:itemsMinTopPosition:itemsTopSpace:itemsBottomSpace:)(v23, v22, v13, v21, v20, v19, 0.0, 24.0, 0.0, 24.0, 0.0, 24.0, 0.0, 24.0);
}

char *sub_1002ECEA0(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  double left;
  double bottom;
  double right;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  objc_class *ObjectType;
  uint64_t v44;
  objc_super v45;

  ObjectType = (objc_class *)swift_getObjectType();
  v44 = type metadata accessor for DirectionalTextAlignment(0);
  v9 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v12);
  v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = qword_1007F27D8;
  v16 = v4;
  if (v15 != -1)
    swift_once(&qword_1007F27D8, sub_100417320);
  v17 = type metadata accessor for FontUseCase(0);
  v18 = sub_1000117A8(v17, (uint64_t)qword_100855C70);
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20(v14, v18, v17);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v21(v14, 0, 1, v17);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v23(v11, enum case for DirectionalTextAlignment.none(_:), v44);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v14, 2, 0, 1, 0, v11, 0, 0);
  if (qword_1007F27E0 != -1)
    swift_once(&qword_1007F27E0, sub_10041733C);
  v26 = sub_1000117A8(v17, (uint64_t)qword_100855C88);
  v20(v14, v26, v17);
  v21(v14, 0, 1, v17);
  v23(v11, v22, v44);
  v27 = objc_allocWithZone(v24);
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v14, 2, 0, 1, 0, v11, 0, 0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_itemViews] = _swiftEmptyArrayStorage;

  v45.receiver = v16;
  v45.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v45, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v32 = (char *)v28;
  objc_msgSend(v32, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v33 = OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel;
  v34 = *(void **)&v32[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel];
  sub_1000117FC();
  v35 = v34;
  v36 = (void *)static UIColor.primaryText.getter(v35);
  objc_msgSend(v35, "setTextColor:", v36);

  v37 = OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel;
  v38 = *(id *)&v32[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel];
  if ((sub_1002ED25C() & 1) != 0)
    v39 = 3;
  else
    v39 = 4;
  objc_msgSend(v38, "setNumberOfLines:", v39, ObjectType);

  v40 = *(id *)&v32[v37];
  v41 = (void *)static UIColor.secondaryText.getter(v40);
  objc_msgSend(v40, "setTextColor:", v41);

  sub_1002ED358();
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v32[v33]);
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v32[v37]);

  return v32;
}

uint64_t sub_1002ED25C()
{
  void *v0;
  void *v1;
  id v2;
  char v3;
  uint64_t result;
  void *v5;
  id v6;
  id v7;
  double Width;
  double v9;
  CGRect v10;
  CGRect v11;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.isSizeClassCompact.getter(v2);

  if ((v3 & 1) == 0)
    return 1;
  result = (uint64_t)objc_msgSend(v1, "window");
  if (result)
  {
    v5 = (void *)result;
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = objc_msgSend(v6, "userInterfaceIdiom");

    if (v7 == (id)1)
    {
      objc_msgSend(v5, "frame");
      Width = CGRectGetWidth(v10);
      objc_msgSend(v1, "bounds");
      v9 = CGRectGetWidth(v11);

      return v9 < Width;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

id sub_1002ED358()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  void *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "traitCollection", v4);
  v8 = UITraitCollection.prefersAccessibilityLayouts.getter(v7);

  v9 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel];
  if ((v8 & 1) != 0)
  {
    v10 = enum case for DirectionalTextAlignment.leading(_:);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v11(v6, enum case for DirectionalTextAlignment.leading(_:), v2);
    dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v6);
    objc_msgSend(v9, "setNumberOfLines:", 0);
    v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel];
    v11(v6, v10, v2);
    dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v6);
    return objc_msgSend(v12, "setNumberOfLines:", 0);
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel], "setTextAlignment:", 1);
    objc_msgSend(v9, "setNumberOfLines:", 2);
    v14 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel];
    objc_msgSend(v14, "setTextAlignment:", 1);
    if ((sub_1002ED25C() & 1) != 0)
      v15 = 3;
    else
      v15 = 4;
    return objc_msgSend(v14, "setNumberOfLines:", v15);
  }
}

uint64_t sub_1002ED564()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[24];
  _QWORD v33[5];
  void *v34;
  uint64_t v35;
  void *v36;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArcadeWelcomeContentLayout.Metrics(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArcadeWelcomeContentLayout(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37.receiver = v0;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "layoutSubviews", v13);
  if ((sub_1002ED25C() & 1) != 0)
  {
    if (qword_1007F1BC8 != -1)
      swift_once(&qword_1007F1BC8, sub_1002ECCBC);
    v16 = qword_100806878;
  }
  else
  {
    if (qword_1007F1BC0 != -1)
      swift_once(&qword_1007F1BC0, sub_1002ECC90);
    v16 = qword_100806860;
  }
  v17 = sub_1000117A8(v6, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, v6);
  v18 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel];
  v35 = type metadata accessor for DynamicTypeLabel(0);
  v36 = &protocol witness table for UILabel;
  v33[4] = &protocol witness table for UILabel;
  v34 = v18;
  v19 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel];
  v33[3] = v35;
  v33[0] = v19;
  v20 = &v0[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_itemViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_itemViews], v32, 0, 0);
  v21 = *(_QWORD *)v20;
  v22 = v18;
  v23 = v19;
  swift_bridgeObjectRetain(v21);
  v25 = sub_100419EE4(v24);
  v26 = swift_bridgeObjectRelease(v21);
  ArcadeWelcomeContentLayout.init(metrics:titleText:subtitleText:items:)(v10, &v34, v33, v25, v26);
  v27 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  ArcadeWelcomeContentLayout.placeChildren(relativeTo:in:)(v0, v27);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

double sub_1002ED7F4(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;
  double v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  _BYTE v30[24];
  _QWORD v31[5];
  void *v32;
  uint64_t v33;
  void *v34;

  v6 = a2.n128_f64[0];
  v7 = type metadata accessor for ArcadeWelcomeContentLayout.Metrics(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for ArcadeWelcomeContentLayout(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((sub_1002ED25C() & 1) != 0)
  {
    if (qword_1007F1BC8 != -1)
      swift_once(&qword_1007F1BC8, sub_1002ECCBC);
    v16 = qword_100806878;
  }
  else
  {
    if (qword_1007F1BC0 != -1)
      swift_once(&qword_1007F1BC0, sub_1002ECC90);
    v16 = qword_100806860;
  }
  v17 = sub_1000117A8(v7, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
  v18 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel);
  v33 = type metadata accessor for DynamicTypeLabel(0);
  v34 = &protocol witness table for UILabel;
  v31[4] = &protocol witness table for UILabel;
  v32 = v18;
  v19 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel);
  v31[3] = v33;
  v31[0] = v19;
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_itemViews);
  swift_beginAccess(v20, v30, 0, 0);
  v21 = *v20;
  v22 = v18;
  v23 = v19;
  swift_bridgeObjectRetain(v21);
  v25 = sub_100419EE4(v24);
  v26 = swift_bridgeObjectRelease(v21);
  ArcadeWelcomeContentLayout.init(metrics:titleText:subtitleText:items:)(v11, &v32, v31, v25, v26);
  v27 = ArcadeWelcomeContentLayout.measurements(fitting:in:)(a1, v6, a3);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v27;
}

uint64_t sub_1002EDA9C(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t result;
  objc_super v8;

  v2 = v1;
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  if (!a1 || (result = UITraitCollection.prefersAccessibilityLayouts.getter(v6), (result & 1) != (v5 & 1)))
  {
    sub_1002ED358();
    return (uint64_t)objc_msgSend(v2, "setNeedsLayout");
  }
  return result;
}

void sub_1002EDBA0(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  NSString v34;
  void *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  objc_class *ObjCClassFromMetadata;
  id v48;
  _BYTE v49[24];
  char v50[24];

  v48 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_titleLabel];
  ArcadeWelcomeContent.title.getter();
  if (v5)
  {
    v7 = v5;
    v8 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v4, "setText:", v8, v6);

  v9 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_subtitleLabel];
  ArcadeWelcomeContent.subtitle.getter();
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v9, "setText:", v13, v11);

  v14 = (uint64_t *)&v2[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_itemViews];
  swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension24ArcadeWelcomeContentView_itemViews], v50, 1, 0);
  v15 = *v14;
  if ((unint64_t)*v14 >> 62)
  {
    if (v15 < 0)
      v20 = *v14;
    else
      v20 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v14);
    v16 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v16)
      goto LABEL_19;
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v14);
    if (!v16)
      goto LABEL_19;
  }
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_41;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
    else
      v18 = *(id *)(v15 + 8 * i + 32);
    v19 = v18;
    objc_msgSend(v18, "removeFromSuperview");

  }
LABEL_19:
  swift_bridgeObjectRelease(v15);
  v21 = *v14;
  *v14 = (uint64_t)_swiftEmptyArrayStorage;
  v22 = swift_bridgeObjectRelease(v21);
  v23 = ArcadeWelcomeContent.items.getter(v22);
  v24 = v23;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 >= 0)
      v23 &= 0xFFFFFFFFFFFFFF8uLL;
    v25 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (!v25)
      goto LABEL_39;
  }
  else
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_39:
      objc_msgSend(v48, "setNeedsLayout", swift_bridgeObjectRelease(v24).n128_f64[0]);
      return;
    }
  }
  v26 = type metadata accessor for ArcadeWelcomeItemView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v26);
  if (v25 >= 1)
  {
    v27 = 0;
    do
    {
      if ((v24 & 0xC000000000000001) != 0)
      {
        v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v24);
      }
      else
      {
        v28 = *(_QWORD *)(v24 + 8 * v27 + 32);
        swift_retain(v28);
      }
      v29 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
      v30 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_headlineLabel];
      ArcadeWelcomeItem.headline.getter();
      if (v31)
      {
        v33 = v31;
        v34 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v32 = swift_bridgeObjectRelease(v33).n128_u64[0];
      }
      else
      {
        v34 = 0;
      }
      objc_msgSend(v30, "setText:", v34, v32);

      v35 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_bodyLabel];
      ArcadeWelcomeItem.body.getter();
      if (v36)
      {
        v38 = v36;
        v39 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v37 = swift_bridgeObjectRelease(v38).n128_u64[0];
      }
      else
      {
        v39 = 0;
      }
      objc_msgSend(v35, "setText:", v39, v37);

      v40 = ArcadeWelcomeItem.artwork.getter();
      v41 = *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artwork];
      *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artwork] = v40;
      swift_release(v41);
      v42 = *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkLoader];
      *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension21ArcadeWelcomeItemView_artworkLoader] = a2;
      swift_release(v42);
      objc_msgSend(v29, "setNeedsLayout", swift_retain(a2).n128_f64[0]);
      objc_msgSend(v48, "addSubview:", v29);
      swift_beginAccess(v14, v49, 33, 0);
      v43 = v29;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      v45 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v44 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v45 >= v44 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
      ++v27;
      v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      specialized Array._endMutation()(v46);
      swift_endAccess(v49);

      swift_release(v28);
    }
    while (v25 != v27);
    goto LABEL_39;
  }
LABEL_41:
  __break(1u);
}

uint64_t type metadata accessor for ArcadeWelcomeContentView()
{
  return objc_opt_self(_TtC22SubscribePageExtension24ArcadeWelcomeContentView);
}

void sub_1002EE008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_10003B8E8((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_10010C2CC(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v9;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_1000131E0(a1);
    sub_100326734(a2, a3, v10);
    swift_bridgeObjectRelease(a3);
    sub_1000131E0((uint64_t)v10);
  }
}

id sub_1002EE0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  NSString v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  NSString v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  NSString v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  NSString v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  NSString v36;
  double v37;
  NSString v38;
  Swift::String v39;
  Swift::String v40;
  void *v41;
  NSString v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  NSString v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  NSString v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  void *v55;
  NSString v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  NSString v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  uint64_t v75;
  uint64_t v76;
  NSString v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void **v81;
  Class isa;
  id v83;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void **aBlock;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, void *, uint64_t, uint64_t);
  void *v96;
  void *v97;
  uint64_t v98;

  v7 = v6;
  v89 = a2;
  v92 = a1;
  v12 = type metadata accessor for ReportConcernReason(0);
  v13 = *(_QWORD *)(v12 - 8);
  v90 = v12;
  v91 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone((Class)ASReportAConcernConfiguration), "init");
  v17._countAndFlagsBits = 0xD000000000000014;
  v17._object = (void *)0x8000000100642FB0;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v17, v18)._object;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setTitle:", v20, swift_bridgeObjectRelease(object).n128_f64[0]);

  v21._countAndFlagsBits = 0xD000000000000013;
  v21._object = (void *)0x8000000100642FD0;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = localizedString(_:comment:)(v21, v22)._object;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setBackTitle:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v25._object = (void *)0x8000000100642FF0;
  v25._countAndFlagsBits = 0xD000000000000015;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = localizedString(_:comment:)(v25, v26)._object;
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setCancelTitle:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v29._object = (void *)0x8000000100643010;
  v29._countAndFlagsBits = 0xD000000000000015;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v31 = localizedString(_:comment:)(v29, v30)._object;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setSubmitTitle:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  if ((a5 & 1) != 0)
  {
    v33._countAndFlagsBits = 0xD00000000000002ALL;
    v33._object = (void *)0x80000001006430D0;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v35 = localizedString(_:comment:)(v33, v34)._object;
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSelectReasonTitle:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

    if (a3)
    {
      v38 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(a3).n128_u64[0];
    }
    else
    {
      v38 = 0;
    }
    objc_msgSend(v16, "setReportConcernExplanation:", v38, v37);

    v53._countAndFlagsBits = 0xD000000000000025;
    v53._object = (void *)0x8000000100643100;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v55 = localizedString(_:comment:)(v53, v54)._object;
    v56 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setPrivacyNote:", v56, swift_bridgeObjectRelease(v55).n128_f64[0]);

    v57 = swift_allocObject(&unk_100736AC8, 32, 7);
    *(_QWORD *)(v57 + 16) = a4;
    *(_QWORD *)(v57 + 24) = a6;
    v97 = sub_1002EF6FC;
    v98 = v57;
    aBlock = _NSConcreteStackBlock;
    v94 = 1107296256;
    v52 = &unk_100736AE0;
  }
  else
  {
    swift_bridgeObjectRelease(a3);
    v39._countAndFlagsBits = 0xD00000000000001BLL;
    v39._object = (void *)0x8000000100643030;
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    v41 = localizedString(_:comment:)(v39, v40)._object;
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSelectReasonTitle:", v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

    v43._countAndFlagsBits = 0xD00000000000001ELL;
    v43._object = (void *)0x8000000100643050;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v45 = localizedString(_:comment:)(v43, v44)._object;
    v46 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSelectReasonSubtitle:", v46, swift_bridgeObjectRelease(v45).n128_f64[0]);

    v47._countAndFlagsBits = 0xD000000000000016;
    v47._object = (void *)0x8000000100643070;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v49 = localizedString(_:comment:)(v47, v48)._object;
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setPrivacyNote:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

    v51 = swift_allocObject(&unk_100736A78, 32, 7);
    *(_QWORD *)(v51 + 16) = a4;
    *(_QWORD *)(v51 + 24) = a6;
    v97 = sub_1002EF6D8;
    v98 = v51;
    aBlock = _NSConcreteStackBlock;
    v94 = 1107296256;
    v52 = &unk_100736A90;
  }
  v95 = sub_1002EF088;
  v96 = v52;
  v58 = _Block_copy(&aBlock);
  v59 = v98;
  swift_retain(a4);
  swift_retain(a6);
  objc_msgSend(v16, "setCompletion:", v58, swift_release(v59).n128_f64[0]);
  _Block_release(v58);
  v61 = v91;
  v60 = v92;
  v62 = *(_QWORD *)(v92 + 16);
  if (v62)
  {
    v86 = v16;
    v87 = v7;
    v88 = a4;
    v89 = a6;
    aBlock = (void **)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v62);
    v63 = v60 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    v64 = *(_QWORD *)(v61 + 72);
    v65 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v66 = v90;
    v67 = v61;
    do
    {
      v65(v15, v63, v66);
      v68 = objc_msgSend(objc_allocWithZone((Class)ASReportAConcernReason), "init");
      ReportConcernReason.id.getter();
      v70 = v69;
      v71 = String._bridgeToObjectiveC()();
      objc_msgSend(v68, "setReasonID:", v71, swift_bridgeObjectRelease(v70).n128_f64[0]);

      ReportConcernReason.name.getter();
      v73 = v72;
      v74 = String._bridgeToObjectiveC()();
      objc_msgSend(v68, "setName:", v74, swift_bridgeObjectRelease(v73).n128_f64[0]);

      ReportConcernReason.uppercaseName.getter();
      v76 = v75;
      v77 = String._bridgeToObjectiveC()();
      objc_msgSend(v68, "setUppercaseName:", v77, swift_bridgeObjectRelease(v76).n128_f64[0]);

      v78 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v15, v66);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v78);
      v79 = aBlock[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v79);
      v80 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v68);
      specialized ContiguousArray._endMutation()(v80);
      v63 += v64;
      --v62;
    }
    while (v62);
    v81 = aBlock;
    swift_bridgeObjectRelease(v92);
    a4 = v88;
    a6 = v89;
    v16 = v86;
    v7 = v87;
  }
  else
  {
    swift_bridgeObjectRelease(v92);
    v81 = (void **)_swiftEmptyArrayStorage;
  }
  sub_100019574(0, &qword_1008068D0, off_10071ED90);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setReasons:", isa, swift_bridgeObjectRelease(v81).n128_f64[0]);

  v83 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "initWithConfiguration:", v16);
  objc_msgSend(v83, "setModalPresentationStyle:", 2);

  swift_release(a4);
  swift_release(a6);
  return v83;
}

double sub_1002EE770(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __n128 a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  double v29;
  uint64_t v30;
  void (*v31)(_QWORD *);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD *);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  double result;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  __int128 v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[64];
  _QWORD v96[3];
  uint64_t v97;
  id v98[4];
  void *v99;

  v80 = a7;
  v81 = a1;
  *(_QWORD *)&v82 = a4;
  v85 = a2;
  v86 = a3;
  v91 = type metadata accessor for OSLogger(0, a8);
  v84 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v83 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionRunner.Origin(0);
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  __chkstk_darwin(v11);
  v77 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  v88 = *(_QWORD *)(v14 - 8);
  v89 = v14;
  v15 = __chkstk_darwin(v14);
  v87 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.Encoding(0, v15);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for HttpTemplateSubstitutions(0, v18);
  v92 = *(_QWORD *)(v21 - 8);
  v93 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v25 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v26 = sub_1002EF824((uint64_t)_swiftEmptyArrayStorage);
  v27 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v28 = v23;
  v29 = HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v24, v25, v26, v27);
  v90 = a6;
  v30 = HttpTemplateAction.dictionaryBody.getter(v29);
  v99 = (void *)v30;
  if (a5)
  {
    if (v30)
    {
      v31 = sub_1002EEFE4(v98, 0x74726F706572, 0xE600000000000000);
      if (*v32)
      {
        v33 = sub_10000DF3C(&qword_1008068D8);
        v34 = swift_allocObject(v33, 40, 7);
        *(_OWORD *)(v34 + 16) = xmmword_10066FBA0;
        v35 = sub_10000DF3C(&qword_1008068E0);
        inited = swift_initStackObject(v35, &v94);
        *(_OWORD *)(inited + 16) = xmmword_10066F870;
        *(_QWORD *)(inited + 32) = 1684957547;
        *(_QWORD *)(inited + 40) = 0xE400000000000000;
        *(_QWORD *)(inited + 48) = v85;
        v37 = v86;
        *(_QWORD *)(inited + 56) = v86;
        *(_QWORD *)(inited + 64) = 0x746E656D6D6F63;
        v38 = v82;
        *(_QWORD *)(inited + 72) = 0xE700000000000000;
        *(_QWORD *)(inited + 80) = v38;
        *(_QWORD *)(inited + 88) = a5;
        swift_bridgeObjectRetain(v37);
        swift_bridgeObjectRetain(a5);
        *(_QWORD *)(v34 + 32) = sub_10036A458(inited);
        v97 = sub_10000DF3C(&qword_1008068E8);
        v96[0] = v34;
        sub_1002EE008((uint64_t)v96, 0x736E7265636E6F63, 0xE800000000000000);
      }
      ((void (*)(id *, _QWORD))v31)(v98, 0);
    }
  }
  else if (v30)
  {
    v39 = sub_1002EEFE4(v98, 0x74726F706572, 0xE600000000000000);
    if (*v40)
    {
      v41 = sub_10000DF3C(&qword_1008068D8);
      v42 = swift_allocObject(v41, 40, 7);
      v82 = xmmword_10066FBA0;
      *(_OWORD *)(v42 + 16) = xmmword_10066FBA0;
      v43 = sub_10000DF3C(&qword_1008068E0);
      v44 = swift_initStackObject(v43, v95);
      *(_OWORD *)(v44 + 16) = v82;
      *(_QWORD *)(v44 + 32) = 1684957547;
      *(_QWORD *)(v44 + 40) = 0xE400000000000000;
      *(_QWORD *)(v44 + 48) = v85;
      v45 = v86;
      *(_QWORD *)(v44 + 56) = v86;
      swift_bridgeObjectRetain(v45);
      *(_QWORD *)(v42 + 32) = sub_10036A458(v44);
      v97 = sub_10000DF3C(&qword_1008068E8);
      v96[0] = v42;
      sub_1002EE008((uint64_t)v96, 0x736E7265636E6F63, 0xE800000000000000);
    }
    ((void (*)(id *, _QWORD))v39)(v98, 0);
  }
  v46 = (void *)objc_opt_self(NSJSONSerialization);
  v98[0] = v99;
  v47 = sub_10000DF3C(&qword_1008068F0);
  v48 = Optional._bridgeToObjectiveC()(v47);
  v98[0] = 0;
  v49 = objc_msgSend(v46, "dataWithJSONObject:options:error:", v48, 0, v98);
  swift_unknownObjectRelease(v48);
  v50 = v98[0];
  if (v49)
  {
    v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

    static String.Encoding.utf8.getter();
    v54 = String.init(data:encoding:)(v51, v53, v20);
    if (v55)
    {
      v56 = v54;
      v57 = v55;
      v58 = v87;
      static ActionMetrics.notInstrumented.getter(v54);
      v67 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v28, v56, v57, v58);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v58, v89);
      swift_bridgeObjectRelease(v57);
      v68 = v81;
      v69 = UIResponder.nearestActionRunner.getter();
      if (v69)
      {
        v70 = v69;
        v98[3] = (id)sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
        v98[0] = v68;
        v72 = v77;
        v71 = v78;
        v73 = v79;
        (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for ActionRunner.Origin.action(_:), v79);
        v74 = v68;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v67, v98, v72, v80);
        sub_1002EF94C(v51, v53);
        swift_release(v67);
        v75 = swift_release(v70);
        (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v72, v73, v75);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v28, v93);
        sub_1000131E0((uint64_t)v98);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v92 + 8))(v28, v93);
        sub_1002EF94C(v51, v53);
        swift_release(v67);
      }
      goto LABEL_18;
    }
    sub_1002EF94C(v51, v53);
  }
  else
  {
    v59 = v50;
    v60 = _convertNSErrorToError(_:)(v50);

    swift_willThrow();
    swift_errorRelease(v60);
  }
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v61 = v91;
  sub_1000117A8(v91, (uint64_t)qword_100857618);
  v62 = sub_10000DF3C(&qword_1007FD430);
  v63 = type metadata accessor for LogMessage(0);
  v64 = swift_allocObject(v62, ((*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) | 7);
  *(_OWORD *)(v64 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(0xD000000000000023, 0x8000000100643130);
  Logger.error(_:)(v64, v61, &protocol witness table for OSLogger);
  v65 = swift_bridgeObjectRelease(v64);
  (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v28, v93, v65);
LABEL_18:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v99).n128_u64[0];
  return result;
}

void (*sub_1002EEFE4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain(a3);
  v6[5] = sub_1002EFB38(v6, a2, a3);
  return sub_1002EF050;
}

void sub_1002EF050(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

uint64_t sub_1002EF088(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = *(void (**)(void))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = v8;
  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    a4 = v10;
  }
  swift_retain(v6);
  v11 = a2;
  v7();
  swift_release(v6);
  swift_bridgeObjectRelease(v9);

  return swift_bridgeObjectRelease(a4);
}

uint64_t sub_1002EF12C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __n128 a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  __n128 v54;
  __n128 v55;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[6];

  v61 = a7;
  v73 = a4;
  v74 = a5;
  v12 = type metadata accessor for OSLogger(0, a8);
  v66 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v65 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for ActionRunner.Origin(0);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v58 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionMetrics(0, v15);
  v71 = *(_QWORD *)(v16 - 8);
  v72 = v16;
  v17 = __chkstk_darwin(v16);
  v67 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for HttpTemplateSubstitutions(0, v17);
  v69 = *(_QWORD *)(v19 - 8);
  v70 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v23 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v24 = sub_1002EF824((uint64_t)_swiftEmptyArrayStorage);
  v25 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v26.n128_f64[0] = HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v22, v23, v24, v25);
  v68 = a6;
  v27 = HttpTemplateAction.parameters.getter(v26);
  v28 = v27;
  v29 = *(_QWORD *)(v27 + 16);
  if (v29)
  {
    v63 = a1;
    v64 = v12;
    v30 = *(_QWORD *)(type metadata accessor for HttpTemplateParameter(0) - 8);
    v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v62 = v28;
    v32 = v28 + v31;
    v33 = *(_QWORD *)(v30 + 72);
    while (1)
    {
      v37 = ((uint64_t (*)(void))HttpTemplateParameter.key.getter)();
      v39 = v38;
      if (v37 == 0x64657463656C6573 && v38 == 0xEE006E6F73616552)
        break;
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, 0x64657463656C6573, 0xEE006E6F73616552, 0);
      v34 = swift_bridgeObjectRelease(v39);
      if ((v40 & 1) != 0)
        goto LABEL_4;
      if (!v74)
        goto LABEL_6;
      v41 = HttpTemplateParameter.key.getter(v34);
      v43 = v42;
      if (v41 == 0x74616E616C707865 && v42 == 0xEB000000006E6F69)
      {
        v34 = swift_bridgeObjectRelease(0xEB000000006E6F69);
      }
      else
      {
        v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, 0x74616E616C707865, 0xEB000000006E6F69, 0);
        v34 = swift_bridgeObjectRelease(v43);
        if ((v44 & 1) == 0)
          goto LABEL_6;
      }
      v35 = v73;
      v36 = v74;
LABEL_5:
      HttpTemplateSubstitutions.setParameter(value:for:)(v35, v36, v32, v34);
LABEL_6:
      v32 += v33;
      if (!--v29)
      {
        swift_bridgeObjectRelease(v62);
        a1 = v63;
        goto LABEL_18;
      }
    }
    v34 = swift_bridgeObjectRelease(0xEE006E6F73616552);
LABEL_4:
    v35 = a2;
    v36 = a3;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease(v27);
LABEL_18:
  v46 = v67;
  static ActionMetrics.notInstrumented.getter(v45);
  v47 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v21, 0, 0, v46);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v72);
  v48 = UIResponder.nearestActionRunner.getter();
  if (v48)
  {
    v49 = v48;
    v75[3] = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v75[0] = a1;
    v50 = v59;
    v51 = v58;
    v52 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, enum case for ActionRunner.Origin.action(_:), v60);
    v53 = a1;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v47, v75, v51, v61);
    swift_release(v47);
    v54 = swift_release(v49);
    (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v51, v52, v54);
    sub_1000131E0((uint64_t)v75);
  }
  else
  {
    v55 = swift_release(v47);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v69 + 8))(v21, v70, v55);
}

uint64_t sub_1002EF6D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  uint64_t v6;

  return sub_1002EF12C(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), a6);
}

uint64_t sub_1002EF6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002EF6F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1002EF6FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  uint64_t v6;

  return sub_1002EE770(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), a6);
}

unint64_t sub_1002EF704(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FBA50);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_1002EF990(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002EF824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DF3C(&qword_1007FB9B8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1002EFE48(v7, (uint64_t)&v16);
    v8 = v16;
    v9 = v17;
    result = sub_1002EF990(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10003B8E8(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1002EF94C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

unint64_t sub_1002EF990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1002EF9F4(a1, a2, v5);
}

unint64_t sub_1002EF9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void (*sub_1002EFB38(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain(a3);
  v7[9] = sub_1002EFD80(v7);
  v7[10] = sub_1002EFC18(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1002EFBC8;
}

void sub_1002EFBC8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0);
  free(v1);
}

void (*sub_1002EFC18(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_10036C324(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_1002EFD44;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_10010ED14();
      goto LABEL_7;
    }
    sub_10010A584(v16, a4 & 1);
    v20 = sub_10036C324(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_1002EFD44(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1002EFDAC(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease(*v1);
  free(v1);
}

uint64_t (*sub_1002EFD80(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1002EFDA0;
}

uint64_t sub_1002EFDA0(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1002EFDAC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_10010CA9C(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain(a6);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
    sub_100326D68(a4, *a3);
  }
  return swift_bridgeObjectRetain(v8);
}

uint64_t sub_1002EFE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1008068F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002EFE98(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[5];
  _QWORD v12[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LinkableTextCollectionViewCellLayout.Metrics(0, v3);
  sub_100045464(v6, qword_100853A40);
  sub_1000117A8(v6, (uint64_t)qword_100853A40);
  if (qword_1007F26B0 != -1)
    swift_once(&qword_1007F26B0, sub_100416DF8);
  v7 = type metadata accessor for FontUseCase(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_1008558F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v8, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FontSource.useCase(_:), v1);
  v12[3] = type metadata accessor for StaticDimension(0);
  v12[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v12);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v9 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v9, v5, v1);
  StaticDimension.init(_:scaledLike:)(v11, 16.0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return LinkableTextCollectionViewCellLayout.Metrics.init(textTopSpace:)(v12);
}

id sub_1002F0104()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  char v20[24];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007FC098);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000DF3C(&qword_1007FC090);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyText];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyText], v20, 0, 0);
  sub_10012F048(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100011088((uint64_t)v4, &qword_1007FC098);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyLabel], "setAttributedText:", 0);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    ObjectGraphPair.value.getter(&v19, v5);
    v11 = v19;
    v12 = ObjectGraphPair.objectGraph.getter(v5);
    v13 = LinkableText.linkedSubstrings.getter();
    sub_100197870(v13, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1000CAE14);
    v15 = v14;
    v16 = swift_bridgeObjectRelease(v13);
    v17 = LinkableText.styledText.getter(v16);
    sub_10005A32C(v17, 0, v15);
    swift_release(v11);
    swift_release(v12);
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v1, "setNeedsLayout", swift_release(v17).n128_f64[0]);
    return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1002F0310()
{
  char *v0;
  objc_class *ObjectType;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  id v17;
  unint64_t v18;
  _QWORD v21[5];
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LinkableTextCollectionViewCellLayout.Metrics(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LinkableTextCollectionViewCellLayout(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.receiver = v0;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "layoutSubviews", v9);
  if (qword_1007F1BD0 != -1)
    swift_once(&qword_1007F1BD0, sub_1002EFE98);
  v12 = sub_1000117A8(v3, (uint64_t)qword_100853A40);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
  v13 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyLabel];
  v21[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
  v21[4] = &protocol witness table for UILabel;
  v21[0] = v13;
  v14 = v13;
  LinkableTextCollectionViewCellLayout.init(metrics:textLabel:)(v6, v21);
  objc_msgSend(v0, "bounds");
  v16 = v15;
  v17 = objc_msgSend(v0, "traitCollection");
  v18 = sub_1002F05C8();
  dispatch thunk of Placeable.place(at:with:)(v17, v7, v18, v16);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1002F0584()
{
  return type metadata accessor for LinkableTextCollectionViewCell(0);
}

uint64_t type metadata accessor for LinkableTextCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100806930;
  if (!qword_100806930)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LinkableTextCollectionViewCell);
  return result;
}

unint64_t sub_1002F05C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806940;
  if (!qword_100806940)
  {
    v1 = type metadata accessor for LinkableTextCollectionViewCellLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LinkableTextCollectionViewCellLayout, v1);
    atomic_store(result, (unint64_t *)&qword_100806940);
  }
  return result;
}

char *sub_1002F0610()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  objc_super v37[2];
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for AutomationSemantics(0);
  v5 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyText];
  v15 = sub_10000DF3C(&qword_1007FC090);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = qword_1007F26B0;
  v17 = v0;
  if (v16 != -1)
    swift_once(&qword_1007F26B0, sub_100416DF8);
  v18 = sub_1000117A8(v8, (uint64_t)qword_1008558F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
  v19 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedLabel(0));
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyLabel] = sub_100059FA0((uint64_t)v11, 0, 0, 1);

  v38.receiver = v17;
  v38.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = objc_msgSend(v20, "contentView");
  objc_msgSend(v21, "setClipsToBounds:", 0);

  v22 = objc_msgSend(v20, "contentView");
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v23 = OBJC_IVAR____TtC22SubscribePageExtension30LinkableTextCollectionViewCell_bodyLabel;
  memset(v37, 0, sizeof(v37));
  memset(v36, 0, sizeof(v36));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6562614C79646F62, 0xE90000000000006CLL, v37, v36);
  sub_100011088((uint64_t)v36, &qword_1007F6E90);
  sub_100011088((uint64_t)v37, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v33);
  v24 = *(void **)&v20[v23];
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v4, enum case for DirectionalTextAlignment.leading(_:), v35);
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v4);
  sub_1000117FC();
  v25 = v24;
  v26 = (void *)static UIColor.secondaryText.getter(v25);
  v27 = *(void **)&v25[qword_1007F5DF8];
  *(_QWORD *)&v25[qword_1007F5DF8] = v26;
  v28 = v26;
  LOBYTE(v24) = static NSObject.== infix(_:_:)(v28, v27);

  if ((v24 & 1) == 0)
    sub_10005A6F8();

  v29 = objc_msgSend(v20, "contentView");
  v30 = *(id *)&v20[v23];
  objc_msgSend(v29, "addSubview:", v30);

  return v20;
}

uint64_t type metadata accessor for RoundedTitledButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100806950;
  if (!qword_100806950)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RoundedTitledButton);
  return result;
}

uint64_t sub_1002F0A04(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[2];

  v2 = qword_100853AA0;
  result = type metadata accessor for StaticDimension(319);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_1006836B8;
    result = swift_initClassMetadata2(a1, 0, 2, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

char *sub_1002F0A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  _BYTE v24[24];

  v3 = v2;
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "buttonWithType:", 1);
  v10 = &v9[qword_100806948];
  swift_beginAccess(&v9[qword_100806948], v24, 33, 0);
  v11 = type metadata accessor for StaticDimension(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 24);
  v14 = v9;
  v13(v10, a2, v11);
  swift_endAccess(v24);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v8, a1, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  v17 = v14;
  dispatch thunk of DynamicTypeButton.fontUseCase.setter(v8);

  objc_msgSend(v17, "_setCornerRadius:", 10.0);
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  sub_1000117FC();
  v18 = v17;
  v19 = (void *)static UIColor.defaultButtonBackgroundColor.getter();
  objc_msgSend(v18, "_setBackgroundColor:", v19);

  objc_msgSend(v18, "_setCornerRadius:", 10.0);
  objc_msgSend(v18, "addTarget:action:forControlEvents:", v18, "didTapButton:", 64);
  v20 = v18;
  v21 = (void *)static UIColor.defaultButtonTitleColor.getter();
  objc_msgSend(v20, "setTintColor:", v21);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v20;
}

UIFontTextStyle sub_1002F0CC0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100045464(v0, qword_100853A68);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100853A68);
  *(_QWORD *)v1 = UIFontTextStyleSubheadline;
  *(_DWORD *)(v1 + 8) = 0;
  (*(void (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
  return UIFontTextStyleSubheadline;
}

uint64_t sub_1002F0D40(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100853A80);
  sub_1000117A8(v5, (uint64_t)qword_100853A80);
  if (qword_1007F1BD8 != -1)
    swift_once(&qword_1007F1BD8, sub_1002F0CC0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100853A68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 43.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_1002F0E94(void *a1, uint64_t a2, double a3, double a4)
{
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  double v17;
  double v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char v24[24];
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for StaticDimension(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v25.receiver = a1;
  v25.super_class = ObjectType;
  v16 = a1;
  objc_msgSendSuper2(&v25, "sizeThatFits:", a3, a4);
  v18 = v17;
  v19 = &v16[qword_100806948];
  v20 = swift_beginAccess(&v16[qword_100806948], v24, 0, 0);
  v21 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v13 + 16))(v15, v19, v12, v20);
  static Dimensions.defaultRoundingRule.getter(v21);
  AnyDimension.value(in:rounded:)(v16, v11, v12, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v18;
}

void sub_1002F1008(char *a1, uint64_t a2, void *a3)
{
  void (*v3)(uint64_t);
  uint64_t v5;
  id v6;
  uint64_t v7;
  char *v8;

  v3 = *(void (**)(uint64_t))&a1[qword_100853A98];
  if (v3)
  {
    v5 = *(_QWORD *)&a1[qword_100853A98 + 8];
    v6 = a3;
    v8 = a1;
    v7 = sub_100019320((uint64_t)v3, v5);
    v3(v7);
    sub_100019310((uint64_t)v3, v5);

  }
}

id sub_1002F1098(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v9, "measurementsWithFitting:in:", a3, a4, a5);
}

id sub_1002F10FC(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = qword_100806948;
  v12 = qword_1007F1BE0;
  v13 = a1;
  if (v12 != -1)
    swift_once(&qword_1007F1BE0, sub_1002F0D40);
  v14 = type metadata accessor for StaticDimension(0);
  v15 = sub_1000117A8(v14, (uint64_t)qword_100853A80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(&v13[v11], v15, v14);
  v16 = &v13[qword_100853A98];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;

  v18.receiver = v13;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t sub_1002F11F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_100806948;
  v2 = type metadata accessor for StaticDimension(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return sub_100019310(*(_QWORD *)(v0 + qword_100853A98), *(_QWORD *)(v0 + qword_100853A98 + 8));
}

uint64_t sub_1002F1244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_100806948;
  v3 = type metadata accessor for StaticDimension(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return sub_100019310(*(_QWORD *)(a1 + qword_100853A98), *(_QWORD *)(a1 + qword_100853A98 + 8));
}

uint64_t sub_1002F1298()
{
  return type metadata accessor for RoundedTitledButton(0);
}

double sub_1002F12A0(uint64_t a1, double a2)
{
  uint64_t v3;

  Artwork.size.getter(a1);
  Artwork.size.getter(v3);
  return a2;
}

uint64_t sub_1002F12DC()
{
  return sub_10000E99C(&qword_1008069A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
}

void sub_1002F1308(uint64_t a1, int a2, void *a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  void *v47;
  void **v48;
  uint64_t v49;
  void **aBlock;
  uint64_t v51;
  double (*v52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;

  v46 = a2;
  v7 = type metadata accessor for TitledParagraphStyle(0);
  v44 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v43 = (char *)&v41 - v12;
  v45 = a1;
  v13 = (void *)dispatch thunk of TitledParagraph.text.getter(v11);
  v47 = a3;
  v14 = objc_msgSend(a3, "traitCollection");
  v15 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v13);
  v16 = objc_msgSend(v13, "length");
  v17 = swift_allocObject(&unk_100736CF0, 41, 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v15;
  *(_BYTE *)(v17 + 40) = 1;
  v18 = swift_allocObject(&unk_100736D18, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10024F2F8;
  *(_QWORD *)(v18 + 24) = v17;
  v54 = sub_10024F2FC;
  v55 = v18;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_10057C188;
  v53 = &unk_100736D30;
  v19 = _Block_copy(&aBlock);
  v20 = v55;
  v21 = v14;
  v42 = v15;
  swift_retain(v18);
  objc_msgSend(v13, "enumerateAttributesInRange:options:usingBlock:", 0, v16, 0x100000, v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v18, "", 113, 30, 92, 1);

  swift_release(v17);
  v22 = swift_release(v18);
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v23 = v43;
    TitledParagraph.style.getter(v22);
    v24 = v44;
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v9, enum case for TitledParagraphStyle.detail(_:), v7);
    v25 = sub_10000E99C(&qword_100806A60, (uint64_t (*)(uint64_t))&type metadata accessor for TitledParagraphStyle, (uint64_t)&protocol conformance descriptor for TitledParagraphStyle);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v7, v25);
    dispatch thunk of RawRepresentable.rawValue.getter(&v48, v7, v25);
    v26 = v51;
    v27 = v49;
    if (aBlock == v48 && v51 == v49)
    {
      v28 = 1;
      v27 = v51;
    }
    else
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v51, v48, v49, 0);
    }
    swift_bridgeObjectRelease(v26);
    v29 = swift_bridgeObjectRelease(v27);
    v30 = *(void (**)(char *, uint64_t, __n128))(v24 + 8);
    v30(v9, v7, v29);
    v31 = ((uint64_t (*)(char *, uint64_t))v30)(v23, v7);
    v32 = TitledParagraph.primarySubtitle.getter(v31);
    v34 = v33;
    v35 = TitledParagraph.secondarySubtitle.getter();
    v37 = v36;
    v38 = v42;
    v39 = v42;
    v40.n128_f64[0] = a4;
    sub_100289884(v32, v34, v35, v37, v38, v46 & 1, v28 & 1, v47, v40);

    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v34);
  }
}

void sub_1002F16A8(uint64_t *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v9 = *a1;
  v10 = sub_10000DF3C(&qword_100806A68);
  v11 = sub_1002F17DC();
  StateLens<A>.currentValue.getter(&v12, v10, v11);
  sub_1002F1308(v9, v12, a7, a2);
}

void sub_1002F1738(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_1002F18B0(*a1, a2, a4, a5, a6);
}

uint64_t sub_1002F174C()
{
  __n128 v0;

  sub_10000DF3C(&qword_100806A58);
  sub_1002F17DC();
  WritableStateLens<A>.updateValue(_:)(sub_100141088, v0);
  return 3;
}

uint64_t sub_1002F17AC()
{
  return sub_10000E99C(&qword_1008069F0, (uint64_t (*)(uint64_t))&type metadata accessor for TitledParagraph, (uint64_t)&protocol conformance descriptor for TitledParagraph);
}

unint64_t sub_1002F17DC()
{
  unint64_t result;

  result = qword_1008069F8;
  if (!qword_1008069F8)
  {
    result = swift_getWitnessTable(&unk_100683734, &_s5StateVN_5);
    atomic_store(result, (unint64_t *)&qword_1008069F8);
  }
  return result;
}

unint64_t sub_1002F1824()
{
  unint64_t result;

  result = qword_100806A48;
  if (!qword_100806A48)
  {
    result = swift_getWitnessTable(&unk_100683794, &_s5StateVN_5);
    atomic_store(result, (unint64_t *)&qword_100806A48);
  }
  return result;
}

unint64_t sub_1002F186C()
{
  unint64_t result;

  result = qword_100806A50;
  if (!qword_100806A50)
  {
    result = swift_getWitnessTable(&unk_10068376C, &_s5StateVN_5);
    atomic_store(result, (unint64_t *)&qword_100806A50);
  }
  return result;
}

void sub_1002F18B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  double v38;
  double v39;
  void *v40;
  double v41;
  __n128 v42;
  double v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  char v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  NSString v75;
  void *v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  NSString v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void **aBlock;
  uint64_t v88;
  double (*v89)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  void **v93;
  uint64_t v94;

  v6 = v5;
  v83 = a3;
  v84 = a2;
  v86 = a1;
  v8 = sub_10000DF3C(&qword_100801D90);
  __chkstk_darwin(v8);
  v81 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ComponentLayoutOptions(0);
  v82 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TitledParagraphStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v81 - v19;
  v85 = a5;
  v21 = objc_msgSend(a5, "snapshotPageTraitEnvironment", v18);
  v22 = OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_pageTraits;
  v23 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_pageTraits];
  *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_pageTraits] = v21;
  swift_unknownObjectRetain(v21);
  *(_QWORD *)&v24 = swift_unknownObjectRelease(v23).n128_u64[0];
  if (*(_QWORD *)&v6[v22])
    objc_msgSend(v6, "setNeedsLayout", v24);
  v25 = swift_unknownObjectRelease(v21);
  TitledParagraph.style.getter(v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for TitledParagraphStyle.detail(_:), v13);
  v26 = sub_10000E99C(&qword_100806A60, (uint64_t (*)(uint64_t))&type metadata accessor for TitledParagraphStyle, (uint64_t)&protocol conformance descriptor for TitledParagraphStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v13, v26);
  dispatch thunk of RawRepresentable.rawValue.getter(&v93, v13, v26);
  v27 = v88;
  v28 = v94;
  if (aBlock == v93 && v88 == v94)
  {
    v29 = 1;
    v28 = v88;
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v88, v93, v94, 0);
  }
  swift_bridgeObjectRelease(v27);
  v30 = swift_bridgeObjectRelease(v28);
  v31 = *(void (**)(char *, uint64_t, __n128))(v14 + 8);
  v31(v16, v13, v30);
  ((void (*)(char *, uint64_t))v31)(v20, v13);
  v6[OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_useDetailPageStyling] = v29 & 1;
  v32 = sub_100289040();
  v33 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_separatorView];
  static ComponentLayoutOptions.separatorHidden.getter(v32);
  v34 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  LOBYTE(v31) = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v10, v34);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v10);
  objc_msgSend(v33, "setHidden:", v31 & 1);
  v35 = sub_10000DF3C(&qword_100806A58);
  sub_1002F17DC();
  WritableStateLens<A>.currentValue.getter(&aBlock, v35);
  v36 = aBlock;
  v37 = type metadata accessor for TitledParagraphCollectionViewCell(0);
  LayoutMarginsAware<>.layoutFrame.getter(v37);
  v39 = v38;
  v40 = v85;
  sub_1002F1308(v86, 0, v85, v41);
  if (v36 != 1 || v39 >= v43)
  {
    v59 = (void *)dispatch thunk of TitledParagraph.text.getter(v42);
    v60 = objc_msgSend(v40, "traitCollection");
    v61 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v59);
    v62 = objc_msgSend(v59, "length");
    v63 = swift_allocObject(&unk_100736C00, 41, 7);
    *(_QWORD *)(v63 + 16) = 0;
    *(_QWORD *)(v63 + 24) = v60;
    *(_QWORD *)(v63 + 32) = v61;
    *(_BYTE *)(v63 + 40) = 1;
    v64 = swift_allocObject(&unk_100736C28, 32, 7);
    *(_QWORD *)(v64 + 16) = sub_100051938;
    *(_QWORD *)(v64 + 24) = v63;
    v91 = sub_100051958;
    v92 = v64;
    aBlock = _NSConcreteStackBlock;
    v88 = 1107296256;
    v89 = sub_10057C188;
    v90 = &unk_100736C40;
    v65 = _Block_copy(&aBlock);
    v66 = v92;
    v67 = v60;
    v68 = v61;
    swift_retain(v64);
    objc_msgSend(v59, "enumerateAttributesInRange:options:usingBlock:", 0, v62, 0x100000, v65, swift_release(v66).n128_f64[0]);
    _Block_release(v65);
    LOBYTE(v65) = swift_isEscapingClosureAtFileLocation(v64, "", 113, 30, 92, 1);

    swift_release(v63);
    swift_release(v64);
    if ((v65 & 1) == 0)
    {
      v69 = type metadata accessor for Paragraph.Alignment(0);
      v55 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v81, 1, 1, v69);
      v56 = v68;
      v57 = v68;
      v58 = 0;
      goto LABEL_13;
    }
LABEL_21:
    __break(1u);
    return;
  }
  v44 = (void *)dispatch thunk of TitledParagraph.collapsedText.getter();
  v45 = objc_msgSend(v40, "traitCollection");
  v46 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v44);
  v47 = objc_msgSend(v44, "length");
  v48 = swift_allocObject(&unk_100736C78, 41, 7);
  *(_QWORD *)(v48 + 16) = 0;
  *(_QWORD *)(v48 + 24) = v45;
  *(_QWORD *)(v48 + 32) = v46;
  *(_BYTE *)(v48 + 40) = 1;
  v49 = swift_allocObject(&unk_100736CA0, 32, 7);
  *(_QWORD *)(v49 + 16) = sub_10024F2F8;
  *(_QWORD *)(v49 + 24) = v48;
  v91 = sub_10024F2FC;
  v92 = v49;
  aBlock = _NSConcreteStackBlock;
  v88 = 1107296256;
  v89 = sub_10057C188;
  v90 = &unk_100736CB8;
  v50 = _Block_copy(&aBlock);
  v51 = v92;
  v52 = v45;
  v53 = v46;
  swift_retain(v49);
  objc_msgSend(v44, "enumerateAttributesInRange:options:usingBlock:", 0, v47, 0x100000, v50, swift_release(v51).n128_f64[0]);
  _Block_release(v50);
  LOBYTE(v50) = swift_isEscapingClosureAtFileLocation(v49, "", 113, 30, 92, 1);

  swift_release(v48);
  swift_release(v49);
  if ((v50 & 1) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v54 = type metadata accessor for Paragraph.Alignment(0);
  v55 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v81, 1, 1, v54);
  v56 = v53;
  v57 = v53;
  v58 = 1;
LABEL_13:
  sub_10020D034(v57, v58, 0, v55);

  v70 = sub_1002CA858(v55);
  v71 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_primarySubtitleLabel];
  TitledParagraph.primarySubtitle.getter(v70);
  if (v72)
  {
    v74 = v72;
    v75 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v73 = swift_bridgeObjectRelease(v74).n128_u64[0];
  }
  else
  {
    v75 = 0;
  }
  objc_msgSend(v71, "setText:", v75, v73);

  v76 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension33TitledParagraphCollectionViewCell_secondarySubtitleLabel];
  TitledParagraph.secondarySubtitle.getter();
  if (v77)
  {
    v79 = v77;
    v80 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v78 = swift_bridgeObjectRelease(v79).n128_u64[0];
  }
  else
  {
    v80 = 0;
  }
  objc_msgSend(v76, "setText:", v80, v78);

  objc_msgSend(v6, "setNeedsLayout");
}

uint64_t sub_1002F2064()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F2074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002F2084(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002F2090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F20A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t _s5StateVwst_4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002F2100 + 4 * byte_100683701[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002F2134 + 4 * byte_1006836FC[v4]))();
}

uint64_t sub_1002F2134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F213C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F2144);
  return result;
}

uint64_t sub_1002F2150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F2158);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002F215C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F2164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5StateVMa_5()
{
  return &_s5StateVN_5;
}

uint64_t sub_1002F2190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v17 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v21 + 16))(v20, a5, v18);
  v22 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  swift_bridgeObjectRetain(a4);
  swift_unknownObjectRetain(a6);
  swift_bridgeObjectRetain(a2);
  v24 = sub_10012C058(a1, a2, a3, a4, a7, (uint64_t)v20, a6, v23, a9, a10);
  swift_unknownObjectRelease(a6);
  return v24;
}

void sub_1002F22A4(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

_BYTE *sub_1002F22AC(_BYTE *result)
{
  *result = 1;
  return result;
}

void sub_1002F22B8(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  __n128 v16;
  uint64_t v17;

  v11 = *a1;
  v12 = sub_10000DF3C(&qword_100805458);
  v13 = sub_1002C12DC();
  v14 = StateLens<A>.currentValue.getter(&v17, v12, v13);
  if ((v17 & 1) != 0)
    v15 = 1;
  else
    v15 = Annotation.shouldAlwaysPresentExpanded.getter(v14);
  swift_getObjectType();
  v16.n128_f64[0] = a2;
  sub_100223660(v11, v15 & 1, a8, v16, a3);
}

void sub_1002F2370(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1002F24AC(*a1, a2, a3);
}

uint64_t sub_1002F2378()
{
  __n128 v0;

  if (!sub_100221EE8())
    return 2;
  sub_10000DF3C(&qword_100805448);
  sub_1002C12DC();
  WritableStateLens<A>.updateValue(_:)(sub_1002F22AC, v0);
  return 3;
}

uint64_t sub_1002F23EC()
{
  return sub_10000E99C(&qword_1008065B0, (uint64_t (*)(uint64_t))&type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
}

unint64_t sub_1002F2420()
{
  unint64_t result;

  result = qword_100806AB8;
  if (!qword_100806AB8)
  {
    result = swift_getWitnessTable(&unk_100683850, &_s5StateVN_6);
    atomic_store(result, (unint64_t *)&qword_100806AB8);
  }
  return result;
}

unint64_t sub_1002F2468()
{
  unint64_t result;

  result = qword_100806AC0;
  if (!qword_100806AC0)
  {
    result = swift_getWitnessTable(&unk_100683828, &_s5StateVN_6);
    atomic_store(result, (unint64_t *)&qword_100806AC0);
  }
  return result;
}

void sub_1002F24AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  _QWORD v54[3];

  v4 = v3;
  v6 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v54[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54[-1] - v10;
  v13 = Annotation.items_V2.getter(v12);
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_detailItems];
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_detailItems] = v13;
  swift_bridgeObjectRelease(v14);
  v16 = Annotation.title.getter(v15);
  v17 = (uint64_t *)&v3[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_titleText];
  v18 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_titleText + 8];
  *v17 = v16;
  v17[1] = v19;
  v20 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v21 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_titleLabel];
  v22 = v17[1];
  if (v22)
  {
    swift_bridgeObjectRetain(v22);
    v23 = String._bridgeToObjectiveC()();
    v20 = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v21, "setText:", v23, *(double *)&v20);

  v24 = Annotation.summary.getter(objc_msgSend(v4, "setNeedsLayout"));
  v25 = (uint64_t *)&v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_explicitSummary];
  v26 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_explicitSummary + 8];
  *v25 = v24;
  v25[1] = v27;
  swift_bridgeObjectRelease(v26);
  v28 = sub_1002228C4();
  v29 = Annotation.linkAction.getter(v28);
  if (v29)
  {
    v30 = v29;
    v54[0] = v29;
    v31 = type metadata accessor for Action(0);
    v32 = type metadata accessor for ObjectGraph(0);
    v33 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    ComponentModel.pairedWith<A>(objectGraph:)(a3, v31, v32, v33);
    swift_release(v30);
    v34 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v11, 0, 1, v34);
  }
  else
  {
    v35 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v11, 1, 1, v35);
  }
  v36 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_linkAction];
  swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_linkAction], v54, 33, 0);
  sub_100224298((uint64_t)v11, v36);
  swift_endAccess(v54);
  sub_100222A44();
  sub_1002F2968((uint64_t)v11);
  v37 = sub_10000DF3C(&qword_100805448);
  sub_1002C12DC();
  v38 = WritableStateLens<A>.currentValue.getter(v54, v37);
  if ((v54[0] & 1) != 0)
    v39 = 1;
  else
    v39 = Annotation.shouldAlwaysPresentExpanded.getter(v38);
  sub_100224040();
  v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_isExpanded] = v39 & 1;
  sub_1002225B8();
  v41 = Annotation.linkAction.getter(v40);
  if (v41)
  {
    v42 = v41;
    v54[0] = v41;
    v43 = type metadata accessor for Action(0);
    v44 = type metadata accessor for ObjectGraph(0);
    v45 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    ComponentModel.pairedWith<A>(objectGraph:)(a3, v43, v44, v45);
    swift_release(v42);
    v46 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v8, 0, 1, v46);
  }
  else
  {
    v47 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v8, 1, 1, v47);
  }
  swift_beginAccess(v36, v54, 33, 0);
  sub_100224298((uint64_t)v8, v36);
  swift_endAccess(v54);
  sub_100222A44();
  sub_1002F2968((uint64_t)v8);
  v48 = objc_msgSend(v4, "traitCollection");
  v49 = objc_msgSend(v48, "userInterfaceIdiom");

  if (v49 == (id)1)
  {
    v50 = objc_msgSend(v4, "traitCollection");
    v51 = objc_msgSend(v50, "horizontalSizeClass");

    v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_isSeparatorDisplayed] = v51 != (id)2;
    if (v51 == (id)2)
    {
      sub_10022418C(0);
      return;
    }
  }
  else
  {
    v4[OBJC_IVAR____TtC22SubscribePageExtension28AnnotationCollectionViewCell_isSeparatorDisplayed] = 1;
  }
  v52 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10022418C(v52);

}

uint64_t sub_1002F2968(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s5StateVwst_5(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002F29F4 + 4 * byte_1006837BD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002F2A28 + 4 * asc_1006837B8[v4]))();
}

uint64_t sub_1002F2A28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F2A30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F2A38);
  return result;
}

uint64_t sub_1002F2A44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F2A4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002F2A50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F2A58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5StateVMa_6()
{
  return &_s5StateVN_6;
}

void sub_1002F2A74()
{
  qword_100853AB0 = 0x405D000000000000;
}

uint64_t sub_1002F2BFC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  double v32;
  char *v33;
  objc_class *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  _OWORD v45[2];
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  objc_super v50;

  ObjectType = (objc_class *)swift_getObjectType();
  v35 = ObjectType;
  v2 = type metadata accessor for LayoutRect(0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  v3 = __chkstk_darwin(v2);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0, v3);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ChartOrCategoryBrickContext(0);
  v37 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = sub_10000DF3C(&qword_100806AF8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PlaceholderBrick(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v15).n128_u64[0];
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50.receiver = v0;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, "layoutSubviews", v17);
  v20 = enum case for ChartOrCategoryBrickStyle.tile(_:);
  v22 = type metadata accessor for ChartOrCategoryBrickStyle(0, v21);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v14, v20, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v22);
  PlaceholderBrick.init(style:title:badge:artworks:)(v14, 0, 0xE000000000000000, 0, 0, 0);
  *((_QWORD *)&v48 + 1) = v15;
  v49 = &protocol witness table for PlaceholderBrick;
  v24 = sub_1000117C0(&v47);
  v25 = v16;
  (*(void (**)(_QWORD *, char *, uint64_t))(v16 + 16))(v24, v19, v15);
  v26 = objc_msgSend(v0, "traitCollection");
  sub_100011020((uint64_t)&v47, (uint64_t)v45);
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(v45, sub_1002F7B00, 0, v26);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v47);
  v27 = v37;
  v28 = v36;
  v29 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v36, v10, v38);
  v49 = 0;
  v47 = 0u;
  v48 = 0u;
  v46 = 0;
  memset(v45, 0, sizeof(v45));
  v30 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension28CategoryBrickPlaceholderView_artworkPlaceholder];
  v44[3] = type metadata accessor for ArtworkView(0);
  v44[4] = &protocol witness table for UIView;
  v44[0] = v30;
  v31 = v30;
  ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:)(v28, &v47, v45, v44);
  v32 = LayoutMarginsAware<>.layoutFrame.getter(v35);
  v33 = v39;
  ChartOrCategoryBrickCollectionViewCellLayout.placeChildren(relativeTo:in:)(v0, v32);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v19, v15);
}

uint64_t type metadata accessor for CategoryBrickPlaceholderView()
{
  return objc_opt_self(_TtC22SubscribePageExtension28CategoryBrickPlaceholderView);
}

void sub_1002F30BC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for MessagesSearchViewController(0);
  objc_msgSendSuper2(&v10, "viewWillLayoutSubviews");
  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_100736F70, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_100736F98, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002F35C4;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_100030368;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100101718;
  v8[3] = &unk_100736FB0;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 111, 29, 40, 1);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1002F3364()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  id v17;
  void *v18;
  _QWORD v19[4];

  v1 = v0;
  v2 = type metadata accessor for ActionRunner.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchViewController_activeSearchBarObservingViewController];
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchViewController_activeSearchBarObservingViewController];
  if (v8)
  {
    v9 = *((_QWORD *)v7 + 1);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v8);
    v11 = sub_1001F3908(ObjectType, v9);
    v4 = swift_unknownObjectRelease(v8).n128_u64[0];
    if (v11)
    {
      v12 = UIResponder.nearestActionRunner.getter();
      if (v12)
      {
        v13 = v12;
        v19[3] = type metadata accessor for SearchViewController(0);
        v19[0] = v1;
        v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension20SearchViewController_objectGraph];
        (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for ActionRunner.Origin.userInitiated(_:), v2);
        v15 = v1;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v11, v19, v6, v14);
        swift_release(v11);
        v16 = swift_release(v13);
        (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v16);
        sub_1000131E0((uint64_t)v19);
      }
      else
      {
        v4 = swift_release(v11).n128_u64[0];
      }
    }
  }
  v17 = objc_msgSend(v1, "navigationController", *(double *)&v4);
  if (v17)
  {
    v18 = v17;

  }
}

id sub_1002F34F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MessagesSearchViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002F3528()
{
  return type metadata accessor for MessagesSearchViewController(0);
}

uint64_t type metadata accessor for MessagesSearchViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100806B28;
  if (!qword_100806B28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MessagesSearchViewController);
  return result;
}

uint64_t sub_1002F356C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 808);
}

uint64_t sub_1002F35A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002F35C4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC22SubscribePageExtension20SearchViewController_searchController), "setActive:", 1);
}

uint64_t sub_1002F35E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F35F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002F3608(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1002F3610(uint64_t a1, uint64_t a2)
{
  return sub_1002F3638(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_caption, &OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel);
}

id sub_1002F3624(uint64_t a1, uint64_t a2)
{
  return sub_1002F3638(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_heading, &OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel);
}

id sub_1002F3638(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  char *v4;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;

  v6 = &v4[*a3];
  v7 = *((_QWORD *)v6 + 1);
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)&v4[*a4];
  v9 = *((_QWORD *)v6 + 1);
  if (v9)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v6 + 1));
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v8, "setText:", v10);

  v11 = *(_QWORD *)v6;
  v12 = *((_QWORD *)v6 + 1);
  swift_bridgeObjectRetain(v12);
  LOBYTE(v11) = static String.isNilOrEmpty(_:)(v11, v12);
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setHidden:", v11 & 1);
  return objc_msgSend(v4, "setNeedsLayout");
}

id sub_1002F3714()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  double v9;
  NSString v10;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText];
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText + 8])
  {
    v3 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel])
    {
      type metadata accessor for FadeableDynamicTypeLabel(0);
      v4 = (void *)DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
      sub_1002F6A40(v4);

      v5 = *(void **)&v0[v3];
      if (v5)
        objc_msgSend(v5, "setLineBreakMode:", 2);
    }
  }
  else
  {
    sub_1002F6A40(0);
  }
  v6 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel];
  if (v6)
  {
    v7 = *((_QWORD *)v2 + 1);
    v8 = v6;
    if (v7)
    {
      swift_bridgeObjectRetain(v7);
      v10 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v9 = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
    else
    {
      v10 = 0;
    }
    objc_msgSend(v6, "setText:", v10, v9);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1002F382C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BOOL8 v9;
  id v10;
  _BYTE v13[24];

  v3 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_action;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_action, v13, 33, 0);
  sub_100224298(a1, v6);
  swift_endAccess(v13);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_tapGestureRecognizer);
  sub_1000194E4(v6, (uint64_t)v5, (uint64_t *)&unk_1008052E0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  v9 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  v10 = v7;
  sub_100011088((uint64_t)v5, (uint64_t *)&unk_1008052E0);
  objc_msgSend(v10, "setEnabled:", v9);

  return sub_100011088(a1, (uint64_t *)&unk_1008052E0);
}

uint64_t sub_1002F3950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void (*v24)(_BYTE *, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD *, _BYTE *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(_BYTE *, uint64_t);
  _QWORD *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE v39[4];
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t);
  void (*v57)(_QWORD *, _BYTE *, uint64_t);
  _QWORD v58[5];
  _QWORD v59[3];
  uint64_t v60;
  void *v61;
  _QWORD v62[3];
  uint64_t v63;
  void *v64;
  _QWORD v65[3];
  uint64_t v66;
  void *v67;
  _QWORD v68[3];
  uint64_t v69;
  void *v70;
  _QWORD v71[3];
  uint64_t v72;
  void *v73;
  _QWORD v74[6];

  v0 = type metadata accessor for BadgeValueViewAlignment(0);
  v50 = *(_QWORD *)(v0 - 8);
  v51 = v0;
  __chkstk_darwin(v0);
  v54 = &v39[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = type metadata accessor for BadgeType(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  v3 = __chkstk_darwin(v2);
  v53 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = type metadata accessor for BadgeCaptionCappingType(0, v3);
  v44 = *(_QWORD *)(v46 - 8);
  v5 = __chkstk_darwin(v46);
  v52 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for BadgeViewSpacing(0, v5);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v8 = __chkstk_darwin(v7);
  v49 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for FontSource(0, v8);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v12);
  sub_100045464(v15, qword_100853AB8);
  v45 = sub_1000117A8(v15, (uint64_t)qword_100853AB8);
  if (qword_1007F2330 != -1)
    swift_once(&qword_1007F2330, sub_10041496C);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = sub_1000117A8(v16, (uint64_t)qword_100854E78);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v14, v17, v16);
  v19 = enum case for FontSource.useCase(_:);
  v20 = (void (*)(_BYTE *, uint64_t, uint64_t))v11[13];
  v20(v14, enum case for FontSource.useCase(_:), v10);
  v21 = type metadata accessor for StaticDimension(0);
  v74[3] = v21;
  v74[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v74);
  v72 = v10;
  v73 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(v71);
  v57 = (void (*)(_QWORD *, _BYTE *, uint64_t))v11[2];
  v57(v22, v14, v10);
  StaticDimension.init(_:scaledLike:)(v71, 24.0);
  v56 = (void (*)(_BYTE *, uint64_t))v11[1];
  v56(v14, v10);
  if (qword_1007F2328 != -1)
    swift_once(&qword_1007F2328, sub_100414954);
  v55 = sub_1000117A8(v16, (uint64_t)qword_100854E60);
  v18(v14, v55, v16);
  v20(v14, v19, v10);
  v72 = v21;
  v73 = &protocol witness table for StaticDimension;
  sub_1000117C0(v71);
  v69 = v10;
  v70 = &protocol witness table for FontSource;
  v23 = sub_1000117C0(v68);
  v57(v23, v14, v10);
  StaticDimension.init(_:scaledLike:)(v68, 22.0);
  v24 = v56;
  v56(v14, v10);
  v41 = v16;
  v18(v14, v55, v16);
  v20(v14, v19, v10);
  v55 = v21;
  v69 = v21;
  v70 = &protocol witness table for StaticDimension;
  sub_1000117C0(v68);
  v66 = v10;
  v67 = &protocol witness table for FontSource;
  v25 = sub_1000117C0(v65);
  v57(v25, v14, v10);
  StaticDimension.init(_:scaledLike:)(v65, 16.0);
  v24(v14, v10);
  if (qword_1007F2310 != -1)
    swift_once(&qword_1007F2310, sub_100414808);
  v26 = v41;
  v27 = sub_1000117A8(v41, (uint64_t)qword_100854E18);
  v18(v14, v27, v26);
  v20(v14, v19, v10);
  v66 = v55;
  v67 = &protocol witness table for StaticDimension;
  sub_1000117C0(v65);
  v40 = v19;
  v63 = v10;
  v64 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(v62);
  v29 = v57;
  v57(v28, v14, v10);
  StaticDimension.init(_:scaledLike:)(v62, 12.0);
  v56(v14, v10);
  v18(v14, v27, v26);
  v20(v14, v19, v10);
  v30 = v55;
  v63 = v55;
  v64 = &protocol witness table for StaticDimension;
  sub_1000117C0(v62);
  v60 = v10;
  v61 = &protocol witness table for FontSource;
  v31 = sub_1000117C0(v59);
  v29(v31, v14, v10);
  StaticDimension.init(_:scaledLike:)(v59, 10.0);
  v32 = v56;
  v56(v14, v10);
  v18(v14, v27, v26);
  v20(v14, v40, v10);
  v60 = v30;
  v61 = &protocol witness table for StaticDimension;
  sub_1000117C0(v59);
  v58[3] = v10;
  v58[4] = &protocol witness table for FontSource;
  v33 = sub_1000117C0(v58);
  v29(v33, v14, v10);
  StaticDimension.init(_:scaledLike:)(v58, 32.0);
  v32(v14, v10);
  v34 = v49;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v42 + 104))(v49, enum case for BadgeViewSpacing.standard(_:), v43);
  v35 = v52;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v44 + 104))(v52, enum case for BadgeCaptionCappingType.none(_:), v46);
  v36 = v53;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v47 + 104))(v53, enum case for BadgeType.chartPosition(_:), v48);
  v37 = v54;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v50 + 104))(v54, enum case for BadgeValueViewAlignment.baseline(_:), v51);
  return BadgeViewRibbonLayout.Metrics.init(headingSpace:captionSpace:captionBottomSpace:badgeValueEditorsChoiceSpace:badgeValueIconSpace:badgeValueTextSpace:badgeValueBaselineOffset:badgeIconSize:valueBufferSpace:spacingType:captionCappingType:badgeType:isLabelLeading:valueViewAlignment:alignment:regularBadgeInsets:accessibleBadgeInsets:)(v74, v71, v68, v65, v62, v59, v34, v35, 0.0, 26.0, 26.0, 4.0, 0.0, 8.0, 0.0, 8.0, v36, 1, v37,
           1,
           0,
           0x4038000000000000,
           0,
           0x4038000000000000);
}

char *sub_1002F3FD4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  objc_class *ObjCClassFromMetadata;
  uint64_t v42;
  objc_class *v43;
  id v44;
  double left;
  double bottom;
  double right;
  id v48;
  void *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  void (*v59)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  void *v61;
  uint64_t v62;
  objc_super v64;

  v9 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue];
  v14 = enum case for BadgeLeadingValue.infer(_:);
  v15 = type metadata accessor for BadgeLeadingValue(0, v10);
  v16.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v17 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_caption];
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView] = 0;
  v18 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_heading];
  *v18 = 0;
  v18[1] = 0;
  v19 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment] = 1;
  v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_isTruncatable] = 1;
  v20 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType];
  v21 = enum case for BadgeCaptionCappingType.none(_:);
  v22 = type metadata accessor for BadgeCaptionCappingType(0, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_requiresRemainingWidth] = 0;
  v23 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueViewAlignment];
  v24 = enum case for BadgeValueViewAlignment.baseline(_:);
  v25 = type metadata accessor for BadgeValueViewAlignment(0);
  v26.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  v27 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_spacing];
  v28 = enum case for BadgeViewSpacing.standard(_:);
  v29 = type metadata accessor for BadgeViewSpacing(0, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  v30 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_action];
  v31 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgeType];
  v33 = enum case for BadgeType.custom(_:);
  v34 = type metadata accessor for BadgeType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView] = 0;
  v35 = &v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgePositionInRibbon];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_overallBadgeCount] = 0;
  v36 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_tapGestureRecognizer;
  v37 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v38 = v4;
  *(_QWORD *)&v4[v36] = objc_msgSend(v37, "init");
  v39 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel;
  v40 = type metadata accessor for FadeableDynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v40);
  *(_QWORD *)&v38[v39] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v42 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel;
  *(_QWORD *)&v38[v42] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");

  v43 = (objc_class *)type metadata accessor for BadgeView(0);
  v64.receiver = v38;
  v64.super_class = v43;
  v44 = objc_msgSendSuper2(&v64, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v48 = v44;
  objc_msgSend(v48, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v49 = (void *)objc_opt_self(UIColor);
  v50 = (char *)v48;
  v51 = objc_msgSend(v49, "systemGrayColor");
  objc_msgSend(v50, "setTintColor:", v51);

  v52 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_tapGestureRecognizer;
  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_tapGestureRecognizer], "setEnabled:", 0);
  objc_msgSend(*(id *)&v50[v52], "addTarget:action:", v50, "didTapBadgeView:");
  objc_msgSend(v50, "addGestureRecognizer:", *(_QWORD *)&v50[v52]);
  v53 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel;
  v54 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel];
  objc_msgSend(v54, "setNumberOfLines:", 1);
  objc_msgSend(v54, "setTextAlignment:", 1);
  objc_msgSend(v54, "setLineBreakMode:", 2);
  if (qword_1007F2328 != -1)
    swift_once(&qword_1007F2328, sub_100414954);
  v55 = type metadata accessor for FontUseCase(0);
  v56 = sub_1000117A8(v55, (uint64_t)qword_100854E60);
  v57 = *(_QWORD *)(v55 - 8);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v58(v12, v56, v55);
  v59 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56);
  v59(v12, 0, 1, v55);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v12);
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[v53]);
  v60 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel;
  v61 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel];
  objc_msgSend(v61, "setNumberOfLines:", 1);
  objc_msgSend(v61, "setTextAlignment:", 1);
  objc_msgSend(v61, "setLineBreakMode:", 2);
  if (qword_1007F2330 != -1)
    swift_once(&qword_1007F2330, sub_10041496C);
  v62 = sub_1000117A8(v55, (uint64_t)qword_100854E78);
  v58(v12, v62, v55);
  v59(v12, 0, 1, v55);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v12);
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[v60]);
  sub_1002F4B50();
  sub_1002F4EE8();

  return v50;
}

id sub_1002F45B4()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BadgeView(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1002F4854()
{
  return type metadata accessor for BadgeView(0);
}

uint64_t type metadata accessor for BadgeView(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_100806B70, (uint64_t)&nominal type descriptor for BadgeView);
}

uint64_t sub_1002F4870()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  _BYTE v26[24];

  v1 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  v2 = __chkstk_darwin(v1);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for BadgeCaptionCappingType(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for BadgeLeadingValue(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v11 + 104))(v14, enum case for BadgeLeadingValue.infer(_:), v10, v12);
  v15 = &v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue];
  v16 = swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue], v26, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v11 + 24))(v15, v14, v10, v16);
  swift_endAccess(v26);
  objc_msgSend(v0, "setNeedsLayout");
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
  sub_1002F3610(0, 0);
  sub_1002F3624(0, 0);
  v17 = &v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText];
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText + 8];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  swift_bridgeObjectRelease(v18);
  sub_1002F3714();
  sub_1002F6A40(0);
  sub_1002F6B48(0);
  v19 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView] = 0;

  v20 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment] = 4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel], "setTextAlignment:", 4);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v0[v20]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v0[v20]);
  objc_msgSend(v0, "setNeedsLayout");
  v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_isTruncatable] = 1;
  objc_msgSend(v0, "setNeedsLayout");
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for BadgeCaptionCappingType.none(_:), v5);
  v21 = &v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType];
  v22 = swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType], v26, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v6 + 24))(v21, v9, v5, v22);
  swift_endAccess(v26);
  objc_msgSend(v0, "setNeedsLayout");
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  v23 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
  return sub_1002F382C((uint64_t)v4);
}

void sub_1002F4B50()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  id v11;
  Class isa;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2310 != -1)
    swift_once(&qword_1007F2310, sub_100414808);
  v9 = sub_1000117A8(v5, (uint64_t)qword_100854E18);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10(v8, v9, v5);
  v11 = objc_msgSend(v1, "traitCollection");
  isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v11).super.isa;
  v13 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

  if (v13)
  {
    v14 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v13, 0.0);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v14)
    {
      v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel];
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v16, "setFont:", v14);

      }
      goto LABEL_10;
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v17 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel];
  if (!v17)
    return;
  v10(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v14 = v17;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v4);
LABEL_10:

}

void sub_1002F4D7C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for BadgeView(0);
  objc_msgSendSuper2(&v7, "tintColorDidChange");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "tintColor");
    objc_msgSend(v2, "setTintColor:", v3);

  }
  v4 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v0, "tintColor");
    objc_msgSend(v5, "setTextColor:", v6);

  }
}

void sub_1002F4EE8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  Class isa;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "systemBackgroundColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = objc_msgSend(v1, "systemGrayColor");
  objc_msgSend(v0, "setTintColor:", v3);

  v4 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel];
  v5 = objc_msgSend(v1, "systemGrayColor");
  objc_msgSend(v4, "setTextColor:", v5);

  v6 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  isa = UIColor.init(light:dark:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.235294118, 0.235294118, 0.262745098, 0.4), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.921568627, 0.921568627, 0.960784314, 0.5)).super.isa;
  objc_msgSend(v6, "setTextColor:", isa);

}

void sub_1002F5074(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  char *v28;
  __n128 v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  char *v40;
  __n128 v41;
  void *v42;
  id v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];
  char v61[24];
  char v62[24];
  char v63[24];
  char v64[32];

  v2 = v1;
  v4 = type metadata accessor for BadgeType(0);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  v5 = __chkstk_darwin(v4);
  v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BadgeViewSpacing(0, v5);
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  v8 = __chkstk_darwin(v7);
  v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BadgeLeadingValue(0, v8);
  v53 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  v52 = type metadata accessor for BadgeValueViewAlignment(0);
  v51 = *(_QWORD *)(v52 - 8);
  v16 = __chkstk_darwin(v52);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for BadgeCaptionCappingType(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1BF0 != -1)
    swift_once(&qword_1007F1BF0, sub_1002F3950);
  v24 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v21);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100853AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, v25, v24);
  v26 = &v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType];
  v27 = swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType], v64, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v20 + 16))(v23, v26, v19, v27);
  BadgeViewRibbonLayout.Metrics.captionCappingType.setter(v23);
  v28 = &v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueViewAlignment];
  v29 = swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueViewAlignment], v63, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v51 + 16))(v18, v28, v52, v29);
  BadgeViewRibbonLayout.Metrics.valueViewAlignment.setter(v18);
  BadgeViewRibbonLayout.Metrics.alignment.setter(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment]);
  v30 = &v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue];
  v31 = swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue], v62, 0, 0);
  v32 = v53;
  (*(void (**)(char *, char *, uint64_t, __n128))(v53 + 16))(v15, v30, v10, v31);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v12, enum case for BadgeLeadingValue.view(_:), v10);
  v33 = sub_10000E99C(&qword_100806C20, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeLeadingValue, (uint64_t)&protocol conformance descriptor for BadgeLeadingValue);
  LOBYTE(v30) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v12, v10, v33);
  v34 = *(void (**)(char *, uint64_t))(v32 + 8);
  v34(v12, v10);
  v34(v15, v10);
  BadgeViewRibbonLayout.Metrics.isLabelLeading.setter((v30 & 1) == 0);
  v35 = &v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_spacing];
  v36 = swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_spacing], v61, 0, 0);
  v37 = v54;
  (*(void (**)(char *, char *, uint64_t, __n128))(v55 + 16))(v54, v35, v56, v36);
  BadgeViewRibbonLayout.Metrics.spacingType.setter(v37);
  v38 = &v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgeType];
  v39 = swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgeType], v60, 0, 0);
  v40 = v57;
  (*(void (**)(char *, char *, uint64_t, __n128))(v58 + 16))(v57, v38, v59, v39);
  BadgeViewRibbonLayout.Metrics.badgeType.setter(v40);
  v42 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView];
  if (v42)
  {
    v43 = v42;
    v44 = ArtworkView.imageBaselineOffsetFromBottom.getter();
    v46 = v45;

    v41.n128_u64[0] = v44;
    if ((v46 & 1) != 0)
      v41.n128_f64[0] = 0.0;
  }
  else
  {
    v41.n128_u64[0] = 0;
  }
  BadgeViewRibbonLayout.Metrics.badgeValueBaselineOffset.setter(v41);
  if ((v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgePositionInRibbon + 8] & 1) == 0)
  {
    v47 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgePositionInRibbon];
    v48 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_overallBadgeCount];
    v49 = objc_msgSend(v2, "traitCollection");
    sub_1002F6930(a1, v47, v48);

  }
}

uint64_t sub_1002F54E4()
{
  char *v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  _QWORD v34[5];
  _QWORD v35[5];
  objc_super v36;

  v27 = type metadata accessor for LayoutRect(0);
  v26 = *(_QWORD *)(v27 - 8);
  v1 = __chkstk_darwin(v27);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v1);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for BadgeViewRibbonLayout(0, v5);
  v24 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for BadgeView(0);
  v36.receiver = v0;
  v36.super_class = v10;
  objc_msgSendSuper2(&v36, "layoutSubviews");
  sub_1002F5074((uint64_t)v7);
  v11 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel];
  v12 = type metadata accessor for DynamicTypeLabel(0);
  v35[3] = v12;
  v35[4] = &protocol witness table for UILabel;
  v35[0] = v11;
  v13 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView];
  v14 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v34[3] = v14;
  v34[4] = &protocol witness table for UIView;
  if (v13)
    v15 = v13;
  else
    v15 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel];
  v34[0] = v15;
  v16 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel];
  if (v16)
  {
    *((_QWORD *)&v32 + 1) = v12;
    v33 = &protocol witness table for UILabel;
    *(_QWORD *)&v31 = v16;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  v17 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView];
  if (v17)
  {
    *((_QWORD *)&v29 + 1) = v14;
    v30 = &protocol witness table for UIView;
    *(_QWORD *)&v28 = v17;
  }
  else
  {
    v30 = 0;
    v29 = 0u;
    v28 = 0u;
  }
  v18 = v16;
  v19 = v17;
  v20 = v11;
  v21 = v13;
  BadgeViewRibbonLayout.init(metrics:headingLabel:captionView:valueLabel:valueView:)(v7, v35, v34, &v31, &v28);
  v22 = LayoutMarginsAware<>.layoutFrame.getter(v10);
  BadgeViewRibbonLayout.placeChildren(relativeTo:in:)(v0, v22);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v9, v25);
}

double sub_1002F5798(__n128 a1, double a2)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  double v25;
  __int128 v27;
  __int128 v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  _QWORD v33[5];
  _QWORD v34[6];

  v4 = a1.n128_f64[0];
  v5 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, a1);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BadgeViewRibbonLayout(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002F5074((uint64_t)v8);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel);
  v14 = type metadata accessor for DynamicTypeLabel(0);
  v34[3] = v14;
  v34[4] = &protocol witness table for UILabel;
  v34[0] = v13;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView);
  v16 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v33[3] = v16;
  v33[4] = &protocol witness table for UIView;
  if (v15)
    v17 = v15;
  else
    v17 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel);
  v33[0] = v17;
  v18 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel);
  if (v18)
  {
    *((_QWORD *)&v31 + 1) = v14;
    v32 = &protocol witness table for UILabel;
    *(_QWORD *)&v30 = v18;
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  v19 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView);
  if (v19)
  {
    *((_QWORD *)&v28 + 1) = v16;
    v29 = &protocol witness table for UIView;
    *(_QWORD *)&v27 = v19;
  }
  else
  {
    v29 = 0;
    v28 = 0u;
    v27 = 0u;
  }
  v20 = v18;
  v21 = v19;
  v22 = v13;
  v23 = v15;
  BadgeViewRibbonLayout.init(metrics:headingLabel:captionView:valueLabel:valueView:)(v8, v34, v33, &v30, &v27);
  v24 = sub_10000E99C(&qword_100806C28, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeViewRibbonLayout, (uint64_t)&protocol conformance descriptor for BadgeViewRibbonLayout);
  v25 = dispatch thunk of Measurable.measurements(fitting:in:)(v2, v9, v24, v4, a2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v25;
}

void sub_1002F5A10(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for BadgeView(0);
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  v6 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment;
  if ((v5 & 1) != 0)
    v7 = 4;
  else
    v7 = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment] = v7;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel], "setTextAlignment:");
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v2[v6]);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v2[v6]);
  objc_msgSend(v2, "setNeedsLayout");
  sub_1002F4B50();
}

void sub_1002F5BE4(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[21];

  v2 = type metadata accessor for BadgeLeadingValue(319);
  if (v4 <= 0x3F)
  {
    v16[0] = *(_QWORD *)(v2 - 8) + 64;
    v16[1] = &unk_100683948;
    v16[2] = &unk_100683960;
    v16[3] = &unk_100683948;
    v16[4] = &unk_100683948;
    v16[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v16[6] = &unk_100683978;
    v5 = type metadata accessor for BadgeCaptionCappingType(319, v3);
    if (v6 <= 0x3F)
    {
      v16[7] = *(_QWORD *)(v5 - 8) + 64;
      v16[8] = &unk_100683960;
      v16[9] = &unk_100683960;
      v16[10] = &unk_100683978;
      v7 = type metadata accessor for BadgeValueViewAlignment(319);
      if (v9 <= 0x3F)
      {
        v16[11] = *(_QWORD *)(v7 - 8) + 64;
        v10 = type metadata accessor for BadgeViewSpacing(319, v8);
        if (v11 <= 0x3F)
        {
          v16[12] = *(_QWORD *)(v10 - 8) + 64;
          sub_1001A8AFC(319);
          if (v13 <= 0x3F)
          {
            v16[13] = *(_QWORD *)(v12 - 8) + 64;
            v14 = type metadata accessor for BadgeType(319);
            if (v15 <= 0x3F)
            {
              v16[14] = *(_QWORD *)(v14 - 8) + 64;
              v16[15] = &unk_100683960;
              v16[16] = &unk_100683990;
              v16[17] = (char *)&value witness table for Builtin.Int64 + 64;
              v16[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
              v16[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
              v16[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
              swift_updateClassMetadata2(a1, 256, 21, v16, a1 + 80);
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for FadeableDynamicTypeLabel(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_100806BC8, (uint64_t)&nominal type descriptor for FadeableDynamicTypeLabel);
}

uint64_t sub_1002F5D4C(uint64_t a1)
{
  _QWORD v2[7];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[3] = &unk_100683978;
  v2[4] = &unk_100683978;
  v2[5] = &unk_100683960;
  v2[6] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 0, 7, v2, a1 + qword_100806BB8);
}

void sub_1002F5DC0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  BOOL v3;
  id v4;
  id v5;
  char v6;
  id v7;
  char v8;
  id v9;

  if (v0[qword_100806BA0] == 1)
  {
    if (!*(_QWORD *)&v0[qword_100806BA8])
    {
      v1 = *(_QWORD *)&v0[qword_100806BB0];
      v2 = *(void **)&v0[qword_100806B80];
      if (v1 == -1)
      {
        v5 = v2;
        v7 = objc_msgSend(v0, "traitCollection");
        v8 = UITraitCollection.prefersRightToLeftLayouts.getter();

        v6 = v8 & 1;
        v4 = v5;
      }
      else
      {
        v3 = v1 == 1;
        v4 = v2;
        v5 = v4;
        v6 = v3;
      }
      v9 = sub_10012F678(v4, v6);

      sub_1002F7100(v9);
    }
  }
  else
  {
    sub_1002F7100(0);
  }
}

id sub_1002F5EC8(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  v1 = v8.receiver;
  v2 = objc_msgSendSuper2(&v8, "text");
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    return v6;
  }
  else
  {

    return 0;
  }
}

void sub_1002F5F68(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  char *v9;
  __n128 v10;
  char Attributed;
  char v12;
  uint64_t v13;
  void *v14;
  double Width;
  uint64_t v16;
  objc_super v17;
  CGRect v18;

  if (a3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v6 = v5;
    v7 = a1;
    swift_bridgeObjectRetain(v6);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v9 = a1;
    v8 = 0;
    v4 = 0;
    v6 = 0;
  }
  v17.receiver = a1;
  v17.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  objc_msgSendSuper2(&v17, "setText:", v8);

  type metadata accessor for LanguageAwareString(0);
  Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter(v10);
  v12 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
  v13 = LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:keepStatisticsOnLanguageComponents:)(v4, v6, 0, Attributed & 1, v12 & 1);
  if (v13)
  {
    v14 = (void *)v13;
    objc_msgSend(a1, "bounds");
    Width = CGRectGetWidth(v18);
    v16 = dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)(0, 1, objc_msgSend(a1, "lineBreakMode"), 0, Width);

  }
  else
  {
    v16 = -1;
  }
  *(_QWORD *)&a1[qword_100806BB0] = v16;

}

id sub_1002F60AC(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  return objc_msgSendSuper2(&v2, "attributedText");
}

void sub_1002F60F4(void *a1, uint64_t a2, void *a3)
{
  char *v4;
  id v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  double Width;
  uint64_t v13;
  objc_super v14;
  CGRect v15;

  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  v4 = (char *)v14.receiver;
  v5 = a3;
  objc_msgSendSuper2(&v14, "setAttributedText:", v5);
  if (v5)
  {
    v6 = (objc_class *)type metadata accessor for LanguageAwareString(0);
    v7 = v5;
    v9 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter(v7, v8);
    v10 = objc_allocWithZone(v6);
    v11 = (void *)LanguageAwareString.init(_:baseParagraphStyle:keepStatisticsOnLanguageComponents:)(v7, 0, v9 & 1);
    objc_msgSend(v4, "bounds", v14.receiver, v14.super_class);
    Width = CGRectGetWidth(v15);
    v13 = dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)(0, 1, objc_msgSend(v4, "lineBreakMode"), 0, Width);

  }
  else
  {
    v13 = -1;
  }
  *(_QWORD *)&v4[qword_100806BB0] = v13;

}

void sub_1002F6210()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  BOOL v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  objc_msgSendSuper2(&v13, "layoutSubviews");
  if (v0[qword_100806B98] == 1)
  {
    objc_msgSend(v0, "frame");
    objc_msgSend(v0, "sizeThatFits:", v1, v2);
    v4 = v3;
    objc_msgSend(v0, "frame");
    v5 = floor(v4 - CGRectGetWidth(v14)) > COERCE_DOUBLE(1);
    v6 = qword_100806BA0;
    v0[qword_100806BA0] = v5;
    sub_1002F5DC0();
    v7 = *(void **)&v0[qword_100806BA8];
    if (v7)
    {
      if (v0[v6] == 1)
      {
        v8 = v7;
        objc_msgSend(v0, "frame");
        CGRectGetWidth(v15);
        objc_msgSend(v0, "bounds");
        CGRectGetMaxX(v16);
        objc_msgSend(v0, "bounds");
        CGRectGetMinY(v17);
        objc_msgSend(v0, "bounds");
        CGRectGetHeight(v18);
        v9 = *(_QWORD *)&v0[qword_100806BB0];
        v10 = v8;
        objc_msgSend(v0, "bounds");
        if (v9 == -1)
          v12 = CGRect.withLayoutDirection(in:relativeTo:)(v0);
        else
          CGRect.withLayoutDirection(_:relativeTo:)(v9, v11);
        objc_msgSend(v10, "setFrame:", v12);

      }
    }
  }
}

void sub_1002F63E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1002F6210();

}

void sub_1002F641C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (*(_QWORD *)&v0[qword_100806BA8])
  {
    v1 = *(_QWORD *)&v0[qword_100806BB0];
    v2 = *(void **)&v0[qword_100806B80];
    if (v1 == -1)
    {
      v5 = v2;
      v6 = objc_msgSend(v0, "traitCollection");
      v3 = UITraitCollection.prefersRightToLeftLayouts.getter();

    }
    else
    {
      v3 = v1 == 1;
      v4 = v2;
    }
    v7 = sub_10012F678(v2, v3 & 1);

    sub_1002F7100(v7);
  }
}

void sub_1002F64F0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1002F641C();

}

uint64_t sub_1002F6524(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  char v16;
  id v17;

  v16 = a4 & 1;
  v17 = objc_allocWithZone(v8);
  return sub_1002F65AC(a1, a2, a3, v16, a5, a6, a7, a8);
}

uint64_t sub_1002F65AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[4];
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a7;
  v29 = a8;
  v27 = a5;
  v25 = a2;
  v26 = a3;
  v24 = a4 & 1;
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = qword_100806B80;
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v19 = v8;
  *(_QWORD *)&v8[v18] = static UIColor.defaultBackground.getter(v19, v20);
  *(_QWORD *)&v19[qword_100806B88] = 0x3FD0000000000000;
  *(_QWORD *)&v19[qword_100806B90] = 0x4034000000000000;
  v19[qword_100806B98] = 1;
  v19[qword_100806BA0] = 0;
  *(_QWORD *)&v19[qword_100806BA8] = 0;
  *(_QWORD *)&v19[qword_100806BB0] = -1;

  sub_1000194E4(a1, (uint64_t)v17, (uint64_t *)&unk_1007F4D60);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  v21 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, v25, v26, v24, v27, v14, v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a6, v11);
  sub_100011088(a1, (uint64_t *)&unk_1007F4D60);
  return v21;
}

void sub_1002F677C()
{
  uint64_t v0;

}

id sub_1002F67A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1002F67DC(uint64_t a1)
{

}

uint64_t sub_1002F6814()
{
  return type metadata accessor for FadeableDynamicTypeLabel(0);
}

uint64_t storeEnumTagSinglePayload for LineBreakModeTruncationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002F6868 + 4 * byte_100683915[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002F689C + 4 * byte_100683910[v4]))();
}

uint64_t sub_1002F689C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F68A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F68ACLL);
  return result;
}

uint64_t sub_1002F68B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F68C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002F68C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F68CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineBreakModeTruncationStyle()
{
  return &type metadata for LineBreakModeTruncationStyle;
}

unint64_t sub_1002F68EC()
{
  unint64_t result;

  result = qword_100806C18;
  if (!qword_100806C18)
  {
    result = swift_getWitnessTable(&unk_100683A30, &type metadata for LineBreakModeTruncationStyle);
    atomic_store(result, (unint64_t *)&qword_100806C18);
  }
  return result;
}

uint64_t sub_1002F6930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  _BYTE v15[32];

  result = UITraitCollection.prefersRightToLeftLayouts.getter();
  v6 = result;
  if (!a2 && (result & 1) == 0)
    goto LABEL_5;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (((a3 - 1 == a2) & result) == 1)
  {
LABEL_5:
    v7 = (void (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.accessibleBadgeInsets.modify(v15);
    *(_QWORD *)(v8 + 8) = 0;
    v7(v15, 0);
    v9 = (uint64_t (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.regularBadgeInsets.modify(v15);
    *(_QWORD *)(v10 + 8) = 0;
    result = v9(v15, 0);
  }
  if (a2 || ((v6 ^ 1) & 1) != 0)
  {
    if (!__OFSUB__(a3, 1))
    {
      if ((a3 - 1 != a2) | v6 & 1)
        return result;
      goto LABEL_10;
    }
LABEL_13:
    __break(1u);
    return result;
  }
LABEL_10:
  v11 = (void (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.accessibleBadgeInsets.modify(v15);
  *(_QWORD *)(v12 + 24) = 0;
  v11(v15, 0);
  v13 = (uint64_t (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.regularBadgeInsets.modify(v15);
  *(_QWORD *)(v14 + 24) = 0;
  return v13(v15, 0);
}

id sub_1002F6A40(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v8, "setNumberOfLines:", 1);
    objc_msgSend(v8, "setLineBreakMode:", 2);
    objc_msgSend(v8, "setTextAlignment:", 1);
    v9 = v8;
    v10 = objc_msgSend(v1, "tintColor");
    objc_msgSend(v9, "setTextColor:", v10);

    objc_msgSend(v1, "addSubview:", v9);
    sub_1002F4B50();

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1002F6B48(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "tintColor");
    objc_msgSend(v8, "setTintColor:", v9);

    objc_msgSend(v1, "addSubview:", v8);
  }
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_1002F6C08(__n128 a1)
{
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *ObjCClassFromMetadata;
  uint64_t v29;

  v2 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue];
  v3 = enum case for BadgeLeadingValue.infer(_:);
  v4 = type metadata accessor for BadgeLeadingValue(0, a1);
  v5.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  v6 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_caption];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView] = 0;
  v7 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_heading];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment] = 1;
  v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_isTruncatable] = 1;
  v9 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType];
  v10 = enum case for BadgeCaptionCappingType.none(_:);
  v11 = type metadata accessor for BadgeCaptionCappingType(0, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueView] = 0;
  v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_requiresRemainingWidth] = 0;
  v12 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueViewAlignment];
  v13 = enum case for BadgeValueViewAlignment.baseline(_:);
  v14 = type metadata accessor for BadgeValueViewAlignment(0);
  v15.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v16 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_spacing];
  v17 = enum case for BadgeViewSpacing.standard(_:);
  v18 = type metadata accessor for BadgeViewSpacing(0, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_action];
  v20 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgeType];
  v22 = enum case for BadgeType.custom(_:);
  v23 = type metadata accessor for BadgeType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView] = 0;
  v24 = &v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgePositionInRibbon];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_overallBadgeCount] = 0;
  v25 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_tapGestureRecognizer;
  *(_QWORD *)&v1[v25] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v26 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel;
  v27 = type metadata accessor for FadeableDynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v27);
  *(_QWORD *)&v1[v26] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v29 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel;
  *(_QWORD *)&v1[v29] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/BadgeView.swift", 38, 2, 228, 0);
  __break(1u);
}

uint64_t sub_1002F6EC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  _QWORD v23[4];
  uint64_t v24;
  char v25[24];

  v1 = v0;
  v2 = type metadata accessor for ActionRunner.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_action];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_action], v25, 0, 0);
  sub_1000194E4(v13, (uint64_t)v8, (uint64_t *)&unk_1008052E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v14 = (uint64_t *)&unk_1008052E0;
    v15 = v8;
    return sub_100011088((uint64_t)v15, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v16 = UIResponder.nearestActionRunner.getter();
  if (v16)
  {
    v17 = v16;
    ObjectGraphPair.value.getter(&v24, v9);
    v18 = v24;
    v23[3] = type metadata accessor for BadgeView(0);
    v23[0] = v1;
    v19 = v1;
    v20 = ObjectGraphPair.objectGraph.getter(v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionRunner.Origin.userInitiated(_:), v2);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v18, v23, v5, v20);
    swift_release(v17);
    swift_release(v18);
    v21 = swift_release(v20);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v21);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v14 = &qword_1007F6E90;
    v15 = (char *)v23;
    return sub_100011088((uint64_t)v15, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1002F7100(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v3 = qword_100806BA8;
  v4 = *(void **)&v1[qword_100806BA8];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperlayer");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "setMasksToBounds:", 0);

  v8 = *(void **)&v1[v3];
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v1, "layer");
    objc_msgSend(v10, "addSublayer:", v9);

  }
}

uint64_t ChartOrCategoryBrickContext.init(model:in:)(_QWORD *a1, uint64_t a2)
{
  _BYTE v5[40];

  sub_100011020((uint64_t)a1, (uint64_t)v5);
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(v5, sub_1002F7B00, 0, a2);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
}

uint64_t sub_1002F725C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1002F7294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1002F72D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1002F7314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1002F7354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1002F7394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1002F73D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  int *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v4 = type metadata accessor for ChartOrCategoryBrickContext.BrickType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v2, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for ChartOrCategoryBrickContext.BrickType.standard(_:))
  {
    v10 = (int *)type metadata accessor for StandardChartOrCategoryBrickFontStyles(0);
    a1[3] = v10;
    a1[4] = sub_10000E99C(&qword_100806C30, type metadata accessor for StandardChartOrCategoryBrickFontStyles, (uint64_t)&unk_100683B28);
    v11 = (char *)sub_1000117C0(a1);
    if (qword_1007F28C0 != -1)
      swift_once(&qword_1007F28C0, sub_100417718);
    v12 = type metadata accessor for FontUseCase(0);
    v13 = sub_1000117A8(v12, (uint64_t)qword_100855F28);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14(v11, v13, v12);
    v15 = &v11[v10[5]];
    if (qword_1007F28C8 != -1)
      swift_once(&qword_1007F28C8, sub_100417730);
    v16 = sub_1000117A8(v12, (uint64_t)qword_100855F40);
    v14(v15, v16, v12);
    v17 = &v11[v10[6]];
    if (qword_1007F28D0 != -1)
      swift_once(&qword_1007F28D0, sub_10041774C);
    v18 = sub_1000117A8(v12, (uint64_t)qword_100855F58);
    v14(v17, v18, v12);
    v19 = &v11[v10[7]];
    if (qword_1007F28D8 != -1)
      swift_once(&qword_1007F28D8, sub_100417764);
    v20 = sub_1000117A8(v12, (uint64_t)qword_100855F70);
    v14(v19, v20, v12);
    v21 = &v11[v10[8]];
    if (qword_1007F28E0 != -1)
      swift_once(&qword_1007F28E0, sub_100417780);
    v22 = sub_1000117A8(v12, (uint64_t)qword_100855F88);
    v14(v21, v22, v12);
    v23 = &v11[v10[9]];
    if (qword_1007F28E8 != -1)
      swift_once(&qword_1007F28E8, sub_100417798);
    v24 = qword_100855FA0;
LABEL_29:
    v36 = sub_1000117A8(v12, (uint64_t)v24);
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v23, v36, v12);
  }
  if (v9 == enum case for ChartOrCategoryBrickContext.BrickType.search(_:))
  {
    v25 = (int *)type metadata accessor for SearchChartOrCategoryBrickFontStyles(0);
    a1[3] = v25;
    a1[4] = sub_10000E99C(&qword_100806C38, type metadata accessor for SearchChartOrCategoryBrickFontStyles, (uint64_t)&unk_100683AD8);
    v26 = (char *)sub_1000117C0(a1);
    if (qword_1007F28F0 != -1)
      swift_once(&qword_1007F28F0, sub_1004177B4);
    v12 = type metadata accessor for FontUseCase(0);
    v27 = sub_1000117A8(v12, (uint64_t)qword_100855FB8);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14(v26, v27, v12);
    v28 = &v26[v25[5]];
    if (qword_1007F28F8 != -1)
      swift_once(&qword_1007F28F8, sub_1004177CC);
    v29 = sub_1000117A8(v12, (uint64_t)qword_100855FD0);
    v14(v28, v29, v12);
    v30 = &v26[v25[6]];
    if (qword_1007F2900 != -1)
      swift_once(&qword_1007F2900, sub_1004177E8);
    v31 = sub_1000117A8(v12, (uint64_t)qword_100855FE8);
    v14(v30, v31, v12);
    v32 = &v26[v25[7]];
    if (qword_1007F2908 != -1)
      swift_once(&qword_1007F2908, sub_100417800);
    v33 = sub_1000117A8(v12, (uint64_t)qword_100856000);
    v14(v32, v33, v12);
    v34 = &v26[v25[8]];
    if (qword_1007F2910 != -1)
      swift_once(&qword_1007F2910, sub_10041781C);
    v35 = sub_1000117A8(v12, (uint64_t)qword_100856018);
    v14(v34, v35, v12);
    v23 = &v26[v25[9]];
    if (qword_1007F2918 != -1)
      swift_once(&qword_1007F2918, sub_100417834);
    v24 = qword_100856030;
    goto LABEL_29;
  }
  v38 = (int *)type metadata accessor for StandardChartOrCategoryBrickFontStyles(0);
  a1[3] = v38;
  a1[4] = sub_10000E99C(&qword_100806C30, type metadata accessor for StandardChartOrCategoryBrickFontStyles, (uint64_t)&unk_100683B28);
  v39 = (char *)sub_1000117C0(a1);
  if (qword_1007F28C0 != -1)
    swift_once(&qword_1007F28C0, sub_100417718);
  v40 = type metadata accessor for FontUseCase(0);
  v41 = sub_1000117A8(v40, (uint64_t)qword_100855F28);
  v42 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
  v42(v39, v41, v40);
  v43 = &v39[v38[5]];
  if (qword_1007F28C8 != -1)
    swift_once(&qword_1007F28C8, sub_100417730);
  v44 = sub_1000117A8(v40, (uint64_t)qword_100855F40);
  v42(v43, v44, v40);
  v45 = &v39[v38[6]];
  if (qword_1007F28D0 != -1)
    swift_once(&qword_1007F28D0, sub_10041774C);
  v46 = sub_1000117A8(v40, (uint64_t)qword_100855F58);
  v42(v45, v46, v40);
  v47 = &v39[v38[7]];
  if (qword_1007F28D8 != -1)
    swift_once(&qword_1007F28D8, sub_100417764);
  v48 = sub_1000117A8(v40, (uint64_t)qword_100855F70);
  v42(v47, v48, v40);
  v49 = &v39[v38[8]];
  if (qword_1007F28E0 != -1)
    swift_once(&qword_1007F28E0, sub_100417780);
  v50 = sub_1000117A8(v40, (uint64_t)qword_100855F88);
  v42(v49, v50, v40);
  v51 = &v39[v38[9]];
  if (qword_1007F28E8 != -1)
    swift_once(&qword_1007F28E8, sub_100417798);
  v52 = sub_1000117A8(v40, (uint64_t)qword_100855FA0);
  v42(v51, v52, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1002F7B00@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002F73D4(a1);
}

uint64_t type metadata accessor for StandardChartOrCategoryBrickFontStyles(uint64_t a1)
{
  return sub_10005C17C(a1, qword_100806D38, (uint64_t)&nominal type descriptor for StandardChartOrCategoryBrickFontStyles);
}

uint64_t type metadata accessor for SearchChartOrCategoryBrickFontStyles(uint64_t a1)
{
  return sub_10005C17C(a1, qword_100806C98, (uint64_t)&nominal type descriptor for SearchChartOrCategoryBrickFontStyles);
}

uint64_t sub_1002F7B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F7B6C);
}

uint64_t sub_1002F7B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F7B7C);
}

uint64_t *sub_1002F7B84(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for FontUseCase(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
  }
  return a1;
}

uint64_t sub_1002F7C70(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for FontUseCase(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  v6(a1 + a2[6], v4);
  v6(a1 + a2[7], v4);
  v6(a1 + a2[8], v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + a2[9], v4);
}

uint64_t sub_1002F7D28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t sub_1002F7DE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t sub_1002F7EA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t sub_1002F7F68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t sub_1002F8028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F8034);
}

uint64_t sub_1002F8038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1002F8074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F8080);
}

uint64_t sub_1002F8084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FontUseCase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1002F80C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for FontUseCase(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = v4[0];
    v4[4] = v4[0];
    v4[5] = v4[0];
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002F8134(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 16.0;
  return sub_1002F8164(a2, a1, &qword_100853B68[3], &qword_100853B68[4], qword_100853B68);
}

uint64_t sub_1002F814C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_1002F8164(a2, a1, &qword_100853B90[3], &qword_100853B90[4], qword_100853B90);
}

uint64_t sub_1002F8164(__n128 a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  double v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v18[5];

  v5 = a1.n128_f64[0];
  v9 = type metadata accessor for FontSource(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2738 != -1)
    swift_once(&qword_1007F2738, sub_10041709C);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_1000117A8(v13, (uint64_t)qword_100855A90);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v14, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  *a3 = type metadata accessor for StaticDimension(0);
  *a4 = &protocol witness table for StaticDimension;
  sub_1000117C0(a5);
  v18[3] = v9;
  v18[4] = &protocol witness table for FontSource;
  v15 = sub_1000117C0(v18);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  StaticDimension.init(_:scaledLike:)(v18, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

double sub_1002F82C8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = AspectRatio.init(_:_:)(a1).n128_u64[0];
  return result;
}

uint64_t sub_1002F82D4@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  _QWORD v33[5];
  _BYTE v34[40];
  _QWORD v35[5];

  v32 = a4;
  v8 = sub_10000DF3C(&qword_1007F4C98);
  __chkstk_darwin(v8);
  v10 = (char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33[-1] - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v33[-1] - v19;
  sub_1002F95A0(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(void))(v4 + 208))();
    sub_100011088((uint64_t)v10, &qword_1007F4C98);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v17, v20, v11);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v22 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    if (qword_1007F1C00 != -1)
      swift_once(&qword_1007F1C00, sub_1002F814C);
    sub_100011020((uint64_t)qword_100853B90, (uint64_t)v35);
    if ((a2 & 1) != 0)
      v23 = 2;
    else
      v23 = 0;
  }
  else if (v22 == enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    if (qword_1007F1BF8 != -1)
      swift_once(&qword_1007F1BF8, sub_1002F8134);
    sub_100011020((uint64_t)qword_100853B68, (uint64_t)v35);
    v23 = a2 & 1;
  }
  else
  {
    if (qword_1007F1C00 != -1)
      swift_once(&qword_1007F1C00, sub_1002F814C);
    sub_100011020((uint64_t)qword_100853B90, (uint64_t)v35);
    if ((a2 & 1) != 0)
      v23 = 2;
    else
      v23 = 0;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  v21(v14, v20, v11);
  sub_100011020((uint64_t)v35, (uint64_t)v34);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F2738 != -1)
    swift_once(&qword_1007F2738, sub_10041709C);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100855A90);
  v26 = objc_msgSend(a1, "traitCollection");
  v27 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v25, v26);

  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v28 = type metadata accessor for StaticDimension(0);
  v29 = sub_1000117A8(v28, (uint64_t)qword_100856150);
  v33[3] = v28;
  v33[4] = &protocol witness table for StaticDimension;
  v30 = sub_1000117C0(v33);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
  MixedMediaLockupLayout.Metrics.init(lockupPosition:taglineNumberOfLines:taglineSpace:taglineFont:alwaysIncludeTaglineSpace:verticalSpacing:layoutMargins:)(v14, v23, v34, v27, a2 & 1, v33, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v35);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

char *sub_1002F86AC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  objc_super v37;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  v17 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView;
  v19 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0));
  v20 = v4;
  *(_QWORD *)&v4[v18] = objc_msgSend(v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView;
  *(_QWORD *)&v20[v21] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v22 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_1007F2738 != -1)
    swift_once(&qword_1007F2738, sub_10041709C);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_1000117A8(v23, (uint64_t)qword_100855A90);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v15, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v20[v22] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  v27 = &v20[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  v28 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v20[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  v29 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  v37.receiver = v20;
  v37.super_class = v29;
  v30 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  v31 = objc_msgSend(v30, "contentView");
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView]);

  v32 = objc_msgSend(v30, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView]);

  v33 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_taglineLabel;
  v34 = *(id *)&v30[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_taglineLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v35 = objc_msgSend(v30, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v30[v33]);

  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  return v30;
}

uint64_t sub_1002F8A80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:);
  v3 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1002F8AC4(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;

  if (a1)
  {
    v3 = *(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView);
    v4 = objc_msgSend(a1, "superview");
    if (v4)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v5 = v3;
      v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

void (*sub_1002F8B80(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + v2) + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
  return sub_1002F8BD0;
}

void sub_1002F8BD0(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  v7 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v7;
    v4 = v2;
    sub_100530448((uint64_t)v7);

    v5 = v4;
  }
  else
  {
    v6 = v2;
    sub_100530448((uint64_t)v7);

    v5 = v7;
  }

}

uint64_t sub_1002F8C48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  double v25;
  char *v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[5];
  _QWORD v38[5];
  char v39[24];
  objc_super v40;

  v1 = v0;
  v28[1] = swift_getObjectType();
  v33 = type metadata accessor for LayoutRect(0);
  v32 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v31 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MixedMediaLockupLayout(0);
  v29 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F4C98);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MixedMediaLockupLayout.Metrics(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v28 - v14;
  v16 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  v40.receiver = v0;
  v40.super_class = v16;
  objc_msgSendSuper2(&v40, "layoutSubviews");
  v17 = v0[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
  v18 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess(v18, v39, 0, 0);
  sub_1002F95A0(v18, (uint64_t)v8);
  sub_1002F82D4(v1, v17, (uint64_t)v8, (uint64_t)v15);
  sub_100011088((uint64_t)v8, &qword_1007F4C98);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  v19 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView];
  v38[3] = type metadata accessor for SmallLockupView(0);
  v38[4] = &protocol witness table for UIView;
  v38[0] = v19;
  v20 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView];
  v37[3] = type metadata accessor for LockupMediaView(0);
  v37[4] = &protocol witness table for UIView;
  v37[0] = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_taglineLabel];
  v22 = v19;
  v23 = v20;
  if (objc_msgSend(v21, "hasContent"))
  {
    *(_QWORD *)&v36 = type metadata accessor for DynamicTypeLabel(0);
    *((_QWORD *)&v36 + 1) = &protocol witness table for UILabel;
    v24 = v21;
  }
  else
  {
    v21 = 0;
    v35 = 0u;
    v36 = 0u;
  }
  v34 = v21;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v12, v38, v37, &v34);
  v25 = LayoutMarginsAware<>.layoutFrame.getter(v16);
  v26 = v31;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)(v1, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

void sub_1002F8F94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  sub_10052C17C(a1, a2, a3, a4, a5);
}

double sub_1002F8F9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double result;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePad);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    goto LABEL_13;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
LABEL_13:
    (*(void (**)(void))(v1 + 144))();
    return result;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePhone);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease(v13);
    v19 = swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
    {
      static AspectRatio.square.getter(v19);
      return result;
    }
  }
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v19).n128_u64[0];
  return result;
}

uint64_t sub_1002F90E4()
{
  uint64_t result;
  uint64_t v1;

  result = Lockup.editorialTagline.getter();
  if (!v1)
    return Lockup.developerTagline.getter(result);
  return result;
}

id sub_1002F91D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002F92A4()
{
  return type metadata accessor for MixedMediaLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for MixedMediaLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100806DA8;
  if (!qword_100806DA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MixedMediaLockupCollectionViewCell);
  return result;
}

void sub_1002F92E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  sub_10006A5F8(319, (unint64_t *)&qword_1007F52D0, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = "\b";
    sub_10006A5F8(319, &qword_100806DC0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout.LockupPosition);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_100683BE0;
      v6[7] = "\b";
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

uint64_t sub_1002F93B4()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView)+ OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
}

void sub_1002F93D4(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView);
  sub_100530448((uint64_t)a1);

}

uint64_t (*sub_1002F941C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1002F8B80(v2);
  return sub_10001B55C;
}

uint64_t sub_1002F9460(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100683C70, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_1002F9494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100683C70, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_1002F94E0(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100683C70, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001B55C;
}

uint64_t sub_1002F9548()
{
  return sub_10000E99C(&qword_100806DC8, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100683C00);
}

uint64_t sub_1002F9574()
{
  return sub_10000E99C(&qword_100806DD0, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100683C30);
}

uint64_t sub_1002F95A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F4C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002F95E8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  v10 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v13 = OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_1007F2738 != -1)
    swift_once(&qword_1007F2738, sub_10041709C);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_1000117A8(v14, (uint64_t)qword_100855A90);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, v15, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v13] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 2, 0, 1, 0, v5, 0, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  v18 = &v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  v19 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/MixedMediaLockupCollectionViewCell.swift", 63, 2, 95, 0);
  __break(1u);
}

uint64_t sub_1002F987C()
{
  return sub_10000E99C(&qword_100806DD8, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_100683CC0);
}

double sub_1002F98AC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0, v3);
  v6 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v13);
  v14 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:), v1);
  sub_100595354((uint64_t)v5, (uint64_t)v8);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v18 = ShelfLayoutContext.traitEnvironment.getter(v17);
  v20 = type metadata accessor for LargeHeroBreakoutLayout(0, v19);
  v21 = sub_10000E99C(&qword_100806DE0, (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakoutLayout, (uint64_t)&protocol conformance descriptor for LargeHeroBreakoutLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v8, v18, v20, v21, v14, v16);
  v23 = v22;
  v24 = swift_unknownObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v27, v24);
  return v23;
}

ValueMetadata *type metadata accessor for SearchChartsAndCategoriesPageShelfLayoutSpacingProvider()
{
  return &type metadata for SearchChartsAndCategoriesPageShelfLayoutSpacingProvider;
}

uint64_t sub_1002F9A8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  __n128 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v2 = type metadata accessor for Shelf.ContentType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v8);
  KeyPath = swift_getKeyPath(&unk_100683DA8);
  ReadOnlyLens.subscript.getter(KeyPath, v6);
  v12 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v12);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v13 == enum case for Shelf.ContentType.searchChartsAndCategories(_:))
  {
    if (qword_1007F2A28 != -1)
      swift_once(&qword_1007F2A28, sub_10042D148);
    v14 = type metadata accessor for StaticDimension(0);
    v15 = v14;
    v16 = qword_1008561C8;
LABEL_9:
    v17 = sub_1000117A8(v14, (uint64_t)v16);
    a1[3] = v15;
    a1[4] = (uint64_t)&protocol witness table for StaticDimension;
    v18 = sub_1000117C0(a1);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v18, v17, v15);
  }
  if (v13 == enum case for Shelf.ContentType.pageTabs(_:))
  {
    if (qword_1007F2A20 != -1)
      swift_once(&qword_1007F2A20, sub_10042D138);
    v14 = type metadata accessor for StaticDimension(0);
    v15 = v14;
    v16 = qword_1008561B0;
    goto LABEL_9;
  }
  sub_1002AD1EC(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1002F9C94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v10);
  KeyPath = swift_getKeyPath(&unk_100683DA8);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  v14 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for Shelf.ContentType.searchChartsAndCategories(_:))
  {
    if (qword_1007F2A20 != -1)
      swift_once(&qword_1007F2A20, sub_10042D138);
    v15 = type metadata accessor for StaticDimension(0);
    v16 = sub_1000117A8(v15, (uint64_t)qword_1008561B0);
    a2[3] = v15;
    a2[4] = &protocol witness table for StaticDimension;
    v17 = sub_1000117C0(a2);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v17, v16, v15);
  }
  else
  {
    sub_1002AE070(a1, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1002F9E40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v16;
  uint64_t v17;

  v4 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v17 - v9;
  ShelfLayoutContext.surroundingShelves.getter((char *)&v17 - v9, v6, v8);
  sub_10010FF38((uint64_t)v10);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) == 1)
  {
    if (qword_1007F2A30 != -1)
      swift_once(&qword_1007F2A30, sub_10042D158);
    v12 = type metadata accessor for StaticDimension(0);
    v13 = sub_1000117A8(v12, (uint64_t)qword_1008561E0);
    a2[3] = v12;
    a2[4] = &protocol witness table for StaticDimension;
    v14 = sub_1000117C0(a2);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v14, v13, v12);
  }
  else
  {
    v16 = sub_100257C20();
    ShelfLayoutSpacingProvider.bottomContentInset(in:)(a1, &type metadata for GenericPageShelfLayoutSpacingProvider, v16);
    return sub_10010FF38((uint64_t)v6);
  }
}

void sub_1002F9F98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Bool v17;
  void *v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  _BYTE v31[32];
  _BYTE v32[24];
  UIImage_optional v33;

  v10 = sub_10000DF3C(&qword_1007F8EC0);
  __chkstk_darwin(v10);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a6 + 16;
  sub_100148E0C(a3, (uint64_t)v12);
  v14 = type metadata accessor for Artwork.URLTemplate(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_100011088((uint64_t)v12, &qword_1007F8EC0);
  }
  else
  {
    v19 = Artwork.URLTemplate.isSystemImage.getter();
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v12, v14);
    if ((v19 & 1) != 0)
    {
      if (a1)
      {
        v20 = objc_msgSend(a1, "imageByApplyingSymbolConfiguration:", a5);
        if (v20)
        {
          v21 = v20;
          objc_msgSend(v20, "size");
          v23 = v22;
          v25 = v24;

          swift_beginAccess(v13, v32, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v13);
          if (Strong)
          {
            v27 = (void *)Strong;
            v28 = (void (*)(_BYTE *, _QWORD))ArtworkView.frame.modify(v31);
            *(_QWORD *)(v29 + 16) = v23;
            *(_QWORD *)(v29 + 24) = v25;
            v28(v31, 0);

          }
        }
      }
    }
  }
  swift_beginAccess(v13, v31, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v13);
  if (v16)
  {
    v18 = (void *)v16;
    v33.value.super.isa = (Class)a1;
    v33.is_nil = 0;
    ArtworkView.show(image:isAnimationPermitted:)(v33, v17);

  }
}

uint64_t sub_1002FA144(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  __n128 v52;
  uint64_t (*v53)(char *, _QWORD, uint64_t, __n128);
  uint64_t v54;
  char *v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  id v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t (*v83)(char *, uint64_t);
  uint64_t v84;
  __n128 v85;
  unsigned int (*v86)(char *, uint64_t);
  unsigned int v87;
  uint64_t (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  unsigned int v91;
  char *v92;
  unsigned int v93;
  uint64_t (*v94)(char *, uint64_t);
  void (*v95)(char *, _QWORD, uint64_t);
  char *v96;
  uint64_t (*v97)(char *, uint64_t);
  char *v98;
  __n128 v99;
  __n128 v100;
  uint64_t v101;
  unsigned int (*v102)(char *, uint64_t);
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  __n128 v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  __n128 v117;
  void (*v118)(char *, uint64_t, __n128);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t);
  char *v129;
  __n128 v130;
  char *v131;
  __n128 v132;
  char *v133;
  uint64_t v134;
  char *v135;
  __n128 v136;
  char *v137;
  uint64_t v138;
  void *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  void *v148;
  char *v149;
  void *v150;
  uint64_t v151;
  void *v152;
  id v153;
  uint64_t v154;
  id v155;
  Swift::String v156;
  void *object;
  uint64_t v158;
  uint64_t v159;
  uint64_t result;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  _QWORD *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(char *, uint64_t);
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _OWORD v195[2];
  _OWORD v196[2];

  v7 = v6;
  v177 = a5;
  v183 = a4;
  v182 = a3;
  v181 = a2;
  v10 = type metadata accessor for AutomationSemantics(0);
  v186 = *(_QWORD *)(v10 - 8);
  v187 = v10;
  __chkstk_darwin(v10);
  v185 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1008052E0);
  v13 = __chkstk_darwin(v12);
  v178 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for BadgeViewSpacing(0, v13);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v172 = (char **)((char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v173 = (char *)&v161 - v17;
  v18 = type metadata accessor for BadgeType(0);
  v19 = *(_QWORD *)(v18 - 8);
  v193 = v18;
  v194 = v19;
  __chkstk_darwin(v18);
  v179 = (char *)&v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v176 = (char *)&v161 - v22;
  __chkstk_darwin(v23);
  v190 = (char *)&v161 - v24;
  __chkstk_darwin(v25);
  v189 = (char *)&v161 - v26;
  __chkstk_darwin(v27);
  v171 = (char *)&v161 - v28;
  __chkstk_darwin(v29);
  v167 = (char *)&v161 - v30;
  v170 = type metadata accessor for BadgeValueViewAlignment(0);
  v188 = *(uint64_t (**)(char *, uint64_t))(v170 - 8);
  __chkstk_darwin(v170);
  v168 = (char *)&v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v169 = (char *)&v161 - v33;
  v34 = sub_10000DF3C(&qword_10081BD20);
  v35 = __chkstk_darwin(v34);
  v161 = (char *)&v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for BadgeLeadingValue(0, v35);
  v37 = *(_QWORD *)(v180 - 8);
  v38 = __chkstk_darwin(v180);
  v40 = (char *)&v161 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for BadgeCaptionCappingType(0, v38);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v165 = (char *)&v161 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v161 - v45;
  v47 = type metadata accessor for ArtworkLoader(0);
  v162 = a6;
  v48 = *(_QWORD *)(a6 + qword_100854050);
  if (v48)
  {
    swift_retain(*(_QWORD *)(a6 + qword_100854050));
    v164 = sub_1002FC388();
    v163 = v49;
    swift_retain(v48);
    sub_1002FC8B0(a1, v48);
    v51 = v50;
    v184 = v48;
    v52 = swift_release(v48);
    v166 = v42;
    v53 = *(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v42 + 104);
    v191 = v46;
    v192 = v41;
    v54 = v53(v46, enum case for BadgeCaptionCappingType.none(_:), v41, v52);
    Badge.leadingValue.getter(v54);
    v55 = &v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue];
    v56 = swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_leadingValue], v196, 33, 0);
    v57 = v55;
    v58 = v180;
    (*(void (**)(char *, char *, uint64_t, __n128))(v37 + 24))(v57, v40, v180, v56);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v58);
    v59 = (uint64_t *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText];
    v60 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueText + 8];
    v61 = v163;
    *v59 = v164;
    v59[1] = v61;
    swift_bridgeObjectRelease(v60);
    sub_1002F3714();
    v62 = v51;
    sub_1002F6B48(v51);

    v64 = Badge.heading.getter(v63);
    v66 = v64;
    v180 = (uint64_t)v62;
    if (v65)
    {
      *(_QWORD *)&v196[0] = v64;
      *((_QWORD *)&v196[0] + 1) = v65;
      v67 = (uint64_t)v161;
      static Locale.storefront.getter(v64);
      v68 = type metadata accessor for Locale(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 0, 1, v68);
      v69 = sub_1000C0FAC();
      v66 = StringProtocol.uppercased(with:)(v67, &type metadata for String, v69);
      v71 = v70;
      sub_100011088(v67, &qword_10081BD20);
      swift_bridgeObjectRelease(*((_QWORD *)&v196[0] + 1));
    }
    else
    {
      v71 = 0;
    }
    v72 = v193;
    v73 = v167;
    v74 = v165;
    sub_1002F3624(v66, v71);
    v75 = objc_msgSend(v7, "traitCollection");
    v76 = UITraitCollection.prefersAccessibilityLayouts.getter(v75);

    if ((v76 & 1) != 0)
      v77 = 4;
    else
      v77 = 1;
    v78 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment;
    *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_alignment] = v77;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueLabel], "setTextAlignment:");
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v7[v78]);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v7[v78]);
    objc_msgSend(v7, "setNeedsLayout");
    v79 = v166;
    v80 = v192;
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v74, v191, v192);
    v81 = &v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType];
    v82 = swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionCappingType], v196, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v79 + 24))(v81, v74, v80, v82);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    v83 = *(uint64_t (**)(char *, uint64_t))(v79 + 8);
    v84 = v83(v74, v80);
    v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_isTruncatable] = dispatch thunk of Badge.isTruncatable.getter(v84) & 1;
    objc_msgSend(v7, "setNeedsLayout");
    Badge.type.getter(v85);
    v86 = *(unsigned int (**)(char *, uint64_t))(v194 + 88);
    v87 = v86(v73, v72);
    if (v87 == enum case for BadgeType.contentRating(_:))
    {
      v88 = v188;
      v89 = v168;
      v90 = v170;
      (*((void (**)(char *, _QWORD, uint64_t))v188 + 13))(v168, enum case for BadgeValueViewAlignment.center(_:), v170);
      v91 = enum case for BadgeType.chartPosition(_:);
      v92 = v171;
    }
    else
    {
      v93 = v87;
      v91 = enum case for BadgeType.chartPosition(_:);
      v92 = v171;
      v90 = v170;
      v89 = v168;
      if (v87 == enum case for BadgeType.chartPosition(_:))
      {
        v94 = v188;
        (*((void (**)(char *, _QWORD, uint64_t))v188 + 13))(v168, enum case for BadgeValueViewAlignment.topOfValueLabel(_:), v170);
        v91 = v93;
        v88 = v94;
      }
      else
      {
        v95 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v188 + 13);
        if (v87 == enum case for BadgeType.paragraph(_:))
        {
          v95(v168, enum case for BadgeValueViewAlignment.topOfView(_:), v170);
        }
        else
        {
          v95(v168, enum case for BadgeValueViewAlignment.baseline(_:), v170);
          (*(void (**)(char *, uint64_t))(v194 + 8))(v73, v193);
        }
        v88 = v188;
      }
    }
    v188 = v83;
    v96 = v169;
    (*((void (**)(char *, char *, uint64_t))v88 + 4))(v169, v89, v90);
    v97 = v88;
    v98 = &v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueViewAlignment];
    v99 = swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_valueViewAlignment], v196, 33, 0);
    (*((void (**)(char *, char *, uint64_t, __n128))v97 + 3))(v98, v96, v90, v99);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    v100.n128_f64[0] = (*((double (**)(char *, uint64_t))v97 + 1))(v96, v90);
    Badge.type.getter(v100);
    v101 = v193;
    v102 = v86;
    if (v86(v92, v193) == v91)
    {
      v103 = v172;
      *v172 = 0;
      v104 = v174;
      v105 = v175;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v174 + 104))(v103, enum case for BadgeViewSpacing.spacing(_:), v175);
      v106 = v101;
      v107 = v194;
    }
    else
    {
      v108 = v92;
      v104 = v174;
      v103 = v172;
      v105 = v175;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v174 + 104))(v172, enum case for BadgeViewSpacing.standard(_:), v175);
      v107 = v194;
      (*(void (**)(char *, uint64_t))(v194 + 8))(v108, v101);
      v106 = v101;
    }
    v109 = v173;
    (*(void (**)(char *, _QWORD *, uint64_t))(v104 + 32))(v173, v103, v105);
    v110 = &v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_spacing];
    v111 = swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_spacing], v196, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v104 + 24))(v110, v109, v105, v111);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    v112.n128_f64[0] = (*(double (**)(char *, uint64_t))(v104 + 8))(v109, v105);
    Badge.type.getter(v112);
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v190, enum case for BadgeType.paragraph(_:), v106);
    v113 = sub_10000E99C(&qword_100801C78, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
    dispatch thunk of RawRepresentable.rawValue.getter(v196, v106, v113);
    dispatch thunk of RawRepresentable.rawValue.getter(v195, v106, v113);
    v114 = *((_QWORD *)&v196[0] + 1);
    v115 = *((_QWORD *)&v195[0] + 1);
    if (v196[0] == v195[0])
    {
      v116 = 1;
      v115 = *((_QWORD *)&v196[0] + 1);
    }
    else
    {
      v116 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v196[0], *((_QWORD *)&v196[0] + 1), *(_QWORD *)&v195[0], *((_QWORD *)&v195[0] + 1), 0);
    }
    swift_bridgeObjectRelease(v114);
    v117 = swift_bridgeObjectRelease(v115);
    v118 = *(void (**)(char *, uint64_t, __n128))(v107 + 8);
    v118(v190, v106, v117);
    ((void (*)(char *, uint64_t))v118)(v189, v106);
    v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_requiresRemainingWidth] = v116 & 1;
    v119 = v177;
    if (v177)
    {
      *(_QWORD *)&v196[0] = v177;
      v120 = type metadata accessor for Action(0);
      v121 = type metadata accessor for ObjectGraph(0);
      v122 = sub_10000E99C(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      swift_retain(v119);
      v123 = v120;
      v124 = (uint64_t)v178;
      v125 = v122;
      v106 = v193;
      ComponentModel.pairedWith<A>(objectGraph:)(v162, v123, v121, v125);
      swift_release(v119);
      v126 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v124, 0, 1, v126);
    }
    else
    {
      v127 = sub_10000DF3C((uint64_t *)&unk_1008052D0);
      v124 = (uint64_t)v178;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v178, 1, 1, v127);
    }
    v128 = v188;
    sub_1002F382C(v124);
    v129 = v176;
    Badge.type.getter(v130);
    v131 = &v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgeType];
    v132 = swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgeType], v196, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v194 + 40))(v131, v129, v106, v132);
    swift_endAccess(v196);
    v133 = &v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_badgePositionInRibbon];
    *(_QWORD *)v133 = v181;
    v133[8] = v182 & 1;
    v134 = v183;
    *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_overallBadgeCount] = v183;
    v135 = v179;
    Badge.type.getter(v136);
    if (v102(v135, v106) == enum case for BadgeType.rating(_:))
    {
      v137 = sub_1002FC720();
      v138 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView;
      v139 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView];
      v140 = v137;
      if (v139)
      {
        objc_msgSend(v139, "removeFromSuperview");
        v139 = *(void **)&v7[v138];
      }
      v145 = v186;
      v144 = v187;
      v146 = v185;
      *(_QWORD *)&v7[v138] = v137;
      v147 = v137;

      v148 = *(void **)&v7[v138];
      v149 = v147;
      if (v148)
      {
        v149 = v148;
        objc_msgSend(v7, "addSubview:", v149);
        objc_msgSend(v7, "setNeedsLayout");

      }
      sub_1002F3610(0, 0);

      v150 = (void *)v180;
    }
    else
    {
      ((void (*)(char *, uint64_t))v118)(v135, v106);
      v141 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView;
      v142 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_captionView];
      if (v142)
      {
        objc_msgSend(v142, "removeFromSuperview");
        v143 = *(void **)&v7[v141];
      }
      else
      {
        v143 = 0;
      }
      v145 = v186;
      v144 = v187;
      v146 = v185;
      *(_QWORD *)&v7[v141] = 0;

      v152 = *(void **)&v7[v141];
      if (v152)
      {
        v153 = v152;
        objc_msgSend(v7, "addSubview:", v153);
        objc_msgSend(v7, "setNeedsLayout");

      }
      if (v134 < 4 || (v151 = Badge.longCaption.getter(v151), !v154))
        v151 = Badge.caption.getter(v151);
      v150 = (void *)v180;
      sub_1002F3610(v151, v154);
    }
    sub_1002F4EE8();
    v155 = objc_msgSend(v7, "setNeedsLayout");
    *(_QWORD *)&v196[0] = 0x2E6567646162;
    *((_QWORD *)&v196[0] + 1) = 0xE600000000000000;
    v156._countAndFlagsBits = dispatch thunk of Badge.accessibilityIdentifier.getter(v155);
    object = v156._object;
    String.append(_:)(v156);
    swift_bridgeObjectRelease(object);
    v159 = *((_QWORD *)&v196[0] + 1);
    v158 = *(_QWORD *)&v196[0];
    memset(v196, 0, sizeof(v196));
    memset(v195, 0, sizeof(v195));
    static AutomationSemantics.productPage(elementName:id:parentId:)(v158, v159, v196, v195);
    swift_bridgeObjectRelease(v159);
    sub_100011088((uint64_t)v195, &qword_1007F6E90);
    sub_100011088((uint64_t)v196, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v146);
    swift_release(v184);

    (*(void (**)(char *, uint64_t))(v145 + 8))(v146, v144);
    return v128(v191, v192);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v47);
    __break(1u);
  }
  return result;
}

double sub_1002FAFF8(uint64_t (*a1)(char *, uint64_t), uint64_t a2, int a3, uint64_t a4, char *a5, __n128 a6, double a7, uint64_t a8, uint64_t a9)
{
  double v11;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  double v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t);
  uint64_t v58;
  int v59;
  id v60;
  double v61;
  double v62;
  double v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  Class isa;
  id v79;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  __n128 v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  char *v92;
  uint64_t v93;
  BOOL v94;
  char v95;
  double v96;
  uint64_t v97;
  id v98;
  double v99;
  double v100;
  id v101;
  double v102;
  __n128 v103;
  double v104;
  uint64_t v105;
  _QWORD *v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  double v117;
  id v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  char v127;
  id v128;
  double v129;
  double v130;
  uint64_t v131;
  char *v132;
  char *v133;
  double Width;
  __n128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  _QWORD *v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;
  double v166;
  __n128 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  __n128 v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  void (*v177)(char *, _QWORD *, uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  id v181;
  double v182;
  int v184;
  int v185;
  char v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t countAndFlagsBits;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t (*v204)(char *, uint64_t);
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  __int128 v217;
  __int128 v218;
  uint64_t v219;
  CGRect v220;

  countAndFlagsBits = a9;
  v11 = a6.n128_f64[0];
  v195 = a4;
  v202 = a3;
  v193 = a2;
  v190 = type metadata accessor for LabelPlaceholderCompatibility(0, a6);
  v189 = *(_QWORD *)(v190 - 8);
  v13 = __chkstk_darwin(v190);
  v188 = (char *)&v187 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for BadgeViewSpacing(0, v13);
  v199 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v198 = (uint64_t *)((char *)&v187 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v16);
  v197 = (char *)&v187 - v18;
  v203 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v17);
  v201 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v20 = (char *)&v187 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C(&qword_10081BD20);
  v22 = __chkstk_darwin(v21);
  v194 = (char *)&v187 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for BadgeCaptionCappingType(0, v22);
  v213 = *(_QWORD *)(v24 - 8);
  v214 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v187 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v212 = (char *)&v187 - v28;
  v29 = type metadata accessor for BadgeType(0);
  v210 = *(_QWORD *)(v29 - 8);
  v211 = v29;
  __chkstk_darwin(v29);
  v196 = (char *)&v187 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v187 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v187 - v35;
  v207 = type metadata accessor for FontUseCase(0);
  v208 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v38 = (char *)&v187 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v206 = (char *)&v187 - v40;
  v41 = sub_1002FC388();
  v205 = v43;
  if (v43)
  {
    v44 = v41;
    v192 = v38;
    v45 = v33;
    v204 = a1;
    v46 = v20;
    v47 = v26;
    v48 = a5;
    if (qword_1007F2310 != -1)
      swift_once(&qword_1007F2310, sub_100414808);
    v49 = v207;
    v50 = sub_1000117A8(v207, (uint64_t)qword_100854E18);
    v51 = v208;
    v52 = v206;
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v206, v50, v49);
    v53 = type metadata accessor for Feature(0);
    *((_QWORD *)&v218 + 1) = v53;
    v219 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v54 = sub_1000117C0(&v217);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v54, enum case for Feature.measurement_with_labelplaceholder(_:), v53);
    LOBYTE(v53) = isFeatureEnabled(_:)(&v217);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v217);
    v186 = v53 & 1;
    a5 = v48;
    v55 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v44, v205, v52, 4, 0, 0, 0, 0, v11, a7, v48, v186);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v49);
    if (v55 > v11)
      v55 = v11;
    v26 = v47;
    v20 = v46;
    v33 = v45;
    v38 = v192;
  }
  else
  {
    v55 = 0.0;
  }
  v209 = v20;
  Badge.type.getter(v42);
  v56 = v211;
  v57 = *(uint64_t (**)(char *, uint64_t))(v210 + 88);
  v58 = v57(v36, v211);
  v59 = enum case for BadgeType.rating(_:);
  v204 = v57;
  if ((_DWORD)v58 == enum case for BadgeType.rating(_:))
  {
    v60 = objc_msgSend(a5, "traitCollection");
    v61 = sub_10042CA8C(1, 0, 1, 5.0);
    v63 = v62;

LABEL_39:
    v70 = v195;
    goto LABEL_57;
  }
  if ((_DWORD)v58 == enum case for BadgeType.contentRating(_:))
  {
    v65 = Badge.content.getter(v58);
    v66 = BadgeContentKeyContentRatingResource.getter();
    v68 = v67;
    if (*(_QWORD *)(v65 + 16))
    {
      v69 = sub_10036C324(v66, v67);
      v70 = v195;
      if ((v71 & 1) != 0)
      {
        sub_100010E9C(*(_QWORD *)(v65 + 56) + 32 * v69, (uint64_t)&v217);
      }
      else
      {
        v217 = 0u;
        v218 = 0u;
      }
    }
    else
    {
      v217 = 0u;
      v218 = 0u;
      v70 = v195;
    }
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v65);
    if (*((_QWORD *)&v218 + 1))
    {
      if ((swift_dynamicCast(&v215, &v217, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v97 = v216;
        v98 = sub_1004853E8((uint64_t)v215, v216, 0, v64);
        objc_msgSend(v98, "size", swift_bridgeObjectRelease(v97).n128_f64[0]);
        v61 = v99;
        v63 = v100;

LABEL_56:
        v57 = v204;
        goto LABEL_57;
      }
LABEL_55:
      v63 = 0.0;
      v61 = 0.0;
      goto LABEL_56;
    }
LABEL_54:
    sub_100011088((uint64_t)&v217, &qword_1007F6E90);
    goto LABEL_55;
  }
  if ((_DWORD)v58 == enum case for BadgeType.chartPosition(_:))
  {
    v72._countAndFlagsBits = 0xD000000000000020;
    v72._object = (void *)0x8000000100643740;
    v73._countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    v74 = localizedString(_:comment:)(v72, v73);
    countAndFlagsBits = v74._countAndFlagsBits;
    if (qword_1007F2318 != -1)
      swift_once(&qword_1007F2318, sub_100414824);
    v75 = v207;
    v76 = sub_1000117A8(v207, (uint64_t)qword_100854E30);
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v38, v76, v75);
    v192 = a5;
    v77 = objc_msgSend(a5, "traitCollection");
    isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v77).super.isa;
    v79 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

    if (v79)
    {
      v80 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v79, 0.0);

      if (v80)
      {
        v81 = type metadata accessor for Feature(0);
        *((_QWORD *)&v218 + 1) = v81;
        v219 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
        v82 = sub_1000117C0(&v217);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v82, enum case for Feature.measurement_with_labelplaceholder(_:), v81);
        v83 = v80;
        LOBYTE(v81) = isFeatureEnabled(_:)(&v217);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v217);
        LOBYTE(v184) = v81 & 1;
        v84 = v188;
        LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(countAndFlagsBits, v74._object, v83, 4, 0, 0, 0, 0, v184);
        v85 = sub_10000E99C((unint64_t *)&unk_1007FF020, (uint64_t (*)(uint64_t))&type metadata accessor for LabelPlaceholderCompatibility, (uint64_t)&protocol conformance descriptor for LabelPlaceholderCompatibility);
        a5 = v192;
        v86 = v190;
        v61 = dispatch thunk of Measurable.measurements(fitting:in:)(v192, v190, v85, v11, a7);
        v63 = v87;

        (*(void (**)(char *, uint64_t))(v189 + 8))(v84, v86);
LABEL_36:
        if (v61 > v11)
          v61 = v11;
        (*(void (**)(char *, uint64_t, __n128))(v208 + 8))(v38, v207, v88);
        goto LABEL_39;
      }
    }
    else
    {

    }
    v105 = type metadata accessor for Feature(0);
    *((_QWORD *)&v218 + 1) = v105;
    v219 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v106 = sub_1000117C0(&v217);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v105 - 8) + 104))(v106, enum case for Feature.measurement_with_labelplaceholder(_:), v105);
    LOBYTE(v105) = isFeatureEnabled(_:)(&v217);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v217);
    LOBYTE(v185) = v105 & 1;
    a5 = v192;
    v61 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(countAndFlagsBits, v74._object, v38, 4, 0, 0, 0, 0, v11, a7, v192, v185);
    v63 = v107;
    v88 = swift_bridgeObjectRelease(v74._object);
    goto LABEL_36;
  }
  if ((_DWORD)v58 == enum case for BadgeType.editorsChoice(_:))
  {
    type metadata accessor for EditorsChoiceView();
    v89._countAndFlagsBits = 0xD000000000000050;
    v90._object = (void *)0x8000000100630310;
    v89._object = (void *)0x8000000100630330;
    v90._countAndFlagsBits = 0xD000000000000017;
    v91 = localizedString(_:comment:)(v90, v89);
    v92 = v33;
    v93 = String.count.getter(v91._countAndFlagsBits, v91._object);
    v57 = v204;
    swift_bridgeObjectRelease(v91._object);
    v94 = v93 < 19;
    v33 = v92;
    v95 = v94;
    sub_10059B994(v95, 1, 0, a5, v11, 0, 2u);
    v61 = v64.n128_f64[0];
    v63 = v96;
    goto LABEL_39;
  }
  if ((_DWORD)v58 == enum case for BadgeType.artwork(_:))
  {
    v70 = v195;
    if (qword_1007F1BF0 != -1)
      swift_once(&qword_1007F1BF0, sub_1002F3950);
    sub_1000117A8(v203, (uint64_t)qword_100853AB8);
    BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v101 = objc_msgSend(a5, "traitCollection");
    v102 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v101);

    v103.n128_f64[0] = v102;
    v64.n128_f64[0] = CGSize.scaled(_:)(v103);
    v61 = v64.n128_f64[0];
    v63 = v104;
  }
  else if ((_DWORD)v58 == enum case for BadgeType.paragraph(_:))
  {
    LODWORD(countAndFlagsBits) = enum case for BadgeType.rating(_:);
    v192 = v33;
    v108 = sub_1002FC4F0();
    v110 = v109;
    if (qword_1007F2308 != -1)
      swift_once(&qword_1007F2308, sub_1004147EC);
    v111 = v207;
    v112 = sub_1000117A8(v207, (uint64_t)qword_100854E00);
    v113 = v208;
    v114 = v206;
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v206, v112, v111);
    v115 = type metadata accessor for Feature(0);
    *((_QWORD *)&v218 + 1) = v115;
    v219 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v116 = sub_1000117C0(&v217);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v115 - 8) + 104))(v116, enum case for Feature.measurement_with_labelplaceholder(_:), v115);
    LOBYTE(v115) = isFeatureEnabled(_:)(&v217);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v217);
    LOBYTE(v185) = v115 & 1;
    v117 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v108, v110, v114, 4, 0, 0, 0, 0, v11, a7, a5, v185);
    v118 = objc_msgSend(a5, "traitCollection");
    v61 = sub_100463980(v118, v117, v11);
    v63 = v119;

    (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v111);
    v64 = swift_bridgeObjectRelease(v110);
    v70 = v195;
    v57 = v204;
    v33 = v192;
    v59 = countAndFlagsBits;
  }
  else
  {
    if ((_DWORD)v58 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v210 + 8))(v36, v56);
      v63 = 0.0;
      v61 = 0.0;
      goto LABEL_39;
    }
    v120 = Badge.content.getter(v58);
    v121 = BadgeContentKeyNativeContentView.getter();
    v123 = v122;
    if (*(_QWORD *)(v120 + 16))
    {
      v124 = sub_10036C324(v121, v122);
      v70 = v195;
      if ((v125 & 1) != 0)
      {
        sub_100010E9C(*(_QWORD *)(v120 + 56) + 32 * v124, (uint64_t)&v217);
      }
      else
      {
        v217 = 0u;
        v218 = 0u;
      }
    }
    else
    {
      v217 = 0u;
      v218 = 0u;
      v70 = v195;
    }
    swift_bridgeObjectRelease(v123);
    swift_bridgeObjectRelease(v120);
    if (!*((_QWORD *)&v218 + 1))
      goto LABEL_54;
    v126 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v127 = swift_dynamicCast(&v215, &v217, (char *)&type metadata for Any + 8, v126, 6);
    v57 = v204;
    if ((v127 & 1) != 0)
    {
      v128 = v215;
      objc_msgSend(v215, "sizeThatFits:", v11, a7);
      v61 = v129;
      v63 = v130;

    }
    else
    {
      v63 = 0.0;
      v61 = 0.0;
    }
  }
LABEL_57:
  Badge.type.getter(v64);
  v131 = v211;
  v132 = a5;
  if (v57(v33, v211) == v59)
  {
    v133 = sub_1002FC720();
    objc_msgSend(v133, "frame");
    Width = CGRectGetWidth(v220);

    v135 = swift_bridgeObjectRelease(v205);
  }
  else
  {
    v136 = (*(uint64_t (**)(char *, uint64_t))(v210 + 8))(v33, v131);
    if (v70 >= 4 && (v136 = Badge.longCaption.getter(v136), v137) || (v136 = Badge.caption.getter(v136), v137))
    {
      v138 = v136;
      v139 = v137;
      v140 = v26;
      v141 = v70;
      if (qword_1007F2328 != -1)
        swift_once(&qword_1007F2328, sub_100414954);
      v142 = v207;
      v143 = sub_1000117A8(v207, (uint64_t)qword_100854E60);
      v144 = v208;
      v145 = v206;
      (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v206, v143, v142);
      v146 = type metadata accessor for Feature(0);
      *((_QWORD *)&v218 + 1) = v146;
      v219 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v147 = sub_1000117C0(&v217);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v146 - 8) + 104))(v147, enum case for Feature.measurement_with_labelplaceholder(_:), v146);
      LOBYTE(v146) = isFeatureEnabled(_:)(&v217);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v217);
      LOBYTE(v185) = v146 & 1;
      Width = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v138, v139, v145, 4, 0, 0, 0, 0, v11, a7, v132, v185);
      v148 = swift_bridgeObjectRelease(v139);
      (*(void (**)(char *, uint64_t, __n128))(v144 + 8))(v145, v142, v148);
      v135 = swift_bridgeObjectRelease(v205);
      if (Width > v11)
        Width = v11;
      v70 = v141;
      v26 = v140;
    }
    else
    {
      v135 = swift_bridgeObjectRelease(v205);
      Width = 0.0;
    }
  }
  v149 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v213 + 104))(v212, enum case for BadgeCaptionCappingType.none(_:), v214, v135);
  v150 = Badge.heading.getter(v149);
  if (v151)
  {
    v152 = v26;
    v153 = v70;
    *(_QWORD *)&v217 = v150;
    *((_QWORD *)&v217 + 1) = v151;
    v154 = (uint64_t)v194;
    static Locale.storefront.getter(v150);
    v155 = type metadata accessor for Locale(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 56))(v154, 0, 1, v155);
    v156 = sub_1000C0FAC();
    v157 = StringProtocol.uppercased(with:)(v154, &type metadata for String, v156);
    v159 = v158;
    sub_100011088(v154, &qword_10081BD20);
    swift_bridgeObjectRelease(*((_QWORD *)&v217 + 1));
    if (qword_1007F2330 != -1)
      swift_once(&qword_1007F2330, sub_10041496C);
    v160 = v207;
    v161 = sub_1000117A8(v207, (uint64_t)qword_100854E78);
    v162 = v208;
    v163 = v206;
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v206, v161, v160);
    v164 = type metadata accessor for Feature(0);
    *((_QWORD *)&v218 + 1) = v164;
    v219 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v165 = sub_1000117C0(&v217);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v164 - 8) + 104))(v165, enum case for Feature.measurement_with_labelplaceholder(_:), v164);
    LOBYTE(v164) = isFeatureEnabled(_:)(&v217);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v217);
    LOBYTE(v185) = v164 & 1;
    v166 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v157, v159, v163, 4, 0, 0, 0, 0, v11, a7, v132, v185);
    v167 = swift_bridgeObjectRelease(v159);
    (*(void (**)(char *, uint64_t, __n128))(v162 + 8))(v163, v160, v167);
    if (v166 > v11)
      v166 = v11;
    v70 = v153;
    v26 = v152;
  }
  else
  {
    v166 = 0.0;
  }
  v168 = v203;
  v169 = v201;
  v170 = v200;
  v171 = v196;
  if (qword_1007F1BF0 != -1)
    swift_once(&qword_1007F1BF0, sub_1002F3950);
  v172 = sub_1000117A8(v168, (uint64_t)qword_100853AB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v169 + 16))(v209, v172, v168);
  (*(void (**)(char *, char *, uint64_t))(v213 + 16))(v26, v212, v214);
  v173.n128_f64[0] = BadgeViewRibbonLayout.Metrics.captionCappingType.setter(v26);
  Badge.type.getter(v173);
  v174 = v211;
  if (v204(v171, v211) == enum case for BadgeType.chartPosition(_:))
  {
    v175 = v198;
    *v198 = 0;
    v176 = v199;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v199 + 104))(v175, enum case for BadgeViewSpacing.spacing(_:), v170);
  }
  else
  {
    v176 = v199;
    v175 = v198;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v199 + 104))(v198, enum case for BadgeViewSpacing.standard(_:), v170);
    (*(void (**)(char *, uint64_t))(v210 + 8))(v171, v174);
  }
  v177 = *(void (**)(char *, _QWORD *, uint64_t))(v176 + 32);
  v178 = v197;
  v177(v197, v175, v170);
  v179 = v178;
  v180 = (uint64_t)v209;
  BadgeViewRibbonLayout.Metrics.spacingType.setter(v179);
  if ((v202 & 1) == 0)
  {
    v181 = objc_msgSend(v132, "traitCollection");
    sub_1002F6930(v180, v193, v70);

  }
  v182 = static BadgeViewRibbonLayout.measurements(valueLabelWidth:viewSize:captionWidth:headingLabelWidth:fitting:using:in:)(v180, v132, v55, v61, v63, Width, v166, v11, a7);
  (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v180, v168);
  (*(void (**)(char *, uint64_t))(v213 + 8))(v212, v214);
  return v182;
}

uint64_t sub_1002FC388()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for BadgeType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter(v2);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == enum case for BadgeType.contentRating(_:))
  {
    v6 = Badge.content.getter();
    v7 = BadgeContentKeyContentRating.getter();
  }
  else
  {
    if (v5 != enum case for BadgeType.chartPosition(_:))
    {
      v15 = 0;
      v16 = 0;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      return v15;
    }
    v6 = Badge.content.getter();
    v7 = BadgeContentKeyChartPosition.getter();
  }
  v9 = v8;
  if (*(_QWORD *)(v6 + 16) && (v10 = sub_10036C324(v7, v8), (v11 & 1) != 0))
  {
    sub_100010E9C(*(_QWORD *)(v6 + 56) + 32 * v10, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v6);
  if (*((_QWORD *)&v14 + 1))
  {
    if ((swift_dynamicCast(&v15, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v15;
  }
  else
  {
    sub_100011088((uint64_t)&v13, &qword_1007F6E90);
  }
  v15 = 0;
  v16 = 0;
  return v15;
}

uint64_t sub_1002FC4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __n128 v11;
  void (*v12)(char *, uint64_t, __n128);
  uint64_t v13;
  char v14;
  __n128 v15;
  void (*v16)(char *, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v0 = type metadata accessor for BadgeType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - v6;
  Badge.type.getter(v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for BadgeType.paragraph(_:), v0);
  v8 = sub_10000E99C(&qword_100801C78, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v0, v8);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v0, v8);
  v9 = *((_QWORD *)&v24 + 1);
  v10 = v26;
  if (v24 == v26)
  {
    v11 = swift_bridgeObjectRelease_n(*((_QWORD *)&v24 + 1), 2);
    v12 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v12(v3, v0, v11);
    v13 = ((uint64_t (*)(char *, uint64_t))v12)(v7, v0);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, *((_QWORD *)&v24 + 1), v26, *((_QWORD *)&v26 + 1), 0);
    swift_bridgeObjectRelease(v9);
    v15 = swift_bridgeObjectRelease(*((_QWORD *)&v10 + 1));
    v16 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v16(v3, v0, v15);
    v13 = ((uint64_t (*)(char *, uint64_t))v16)(v7, v0);
    if ((v14 & 1) == 0)
      return 0;
  }
  v17 = Badge.content.getter(v13);
  v18 = BadgeContentKeyParagraphText.getter();
  v20 = v19;
  if (*(_QWORD *)(v17 + 16) && (v21 = sub_10036C324(v18, v19), (v22 & 1) != 0))
  {
    sub_100010E9C(*(_QWORD *)(v17 + 56) + 32 * v21, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v17);
  if (*((_QWORD *)&v25 + 1))
  {
    if ((swift_dynamicCast(&v26, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v26;
  }
  else
  {
    sub_100011088((uint64_t)&v24, &qword_1007F6E90);
  }
  return 0;
}

char *sub_1002FC720()
{
  id v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  float v10;
  id v11;
  void *v12;
  id v14;
  __int128 v15;
  __int128 v16;

  v0 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  v1 = sub_10042AEC0(5, 1, 0, 1, 0, 0, 1);
  v2 = Badge.content.getter(v1);
  v3 = BadgeContentKeyRating.getter();
  v5 = v4;
  if (!*(_QWORD *)(v2 + 16) || (v6 = sub_10036C324(v3, v4), (v7 & 1) == 0))
  {
    v15 = 0u;
    v16 = 0u;
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v2);
    goto LABEL_7;
  }
  sub_100010E9C(*(_QWORD *)(v2 + 56) + 32 * v6, (uint64_t)&v15);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v16 + 1))
  {
LABEL_7:
    sub_100011088((uint64_t)&v15, &qword_1007F6E90);
    goto LABEL_8;
  }
  v8 = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
  if ((swift_dynamicCast(&v14, &v15, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
LABEL_8:
    sub_10042AA4C(0.0);
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "systemMidGrayColor");
    v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_starColor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_starColor] = v11;
    v9 = v11;
    sub_10042AB78((uint64_t)v12);

    goto LABEL_9;
  }
  v9 = v14;
  objc_msgSend(v14, "floatValue");
  sub_10042AA4C(v10);
LABEL_9:

  return v1;
}

void sub_1002FC8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, id);
  void (*v51)(char *, _QWORD, uint64_t);
  char *v52;
  id v53;
  void *v54;
  id v55;
  Class isa;
  id v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  void *object;
  NSString v62;
  void *v63;
  id v64;
  id v65;
  __n128 v66;
  uint64_t v67;
  id v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  double v78;
  __n128 v79;
  double v80;
  double v81;
  double v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __n128 v86;
  uint64_t (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  id v92;
  id v93;
  char *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  double v112;
  __n128 v113;
  double v114;
  double v115;
  id v116;
  __n128 v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  id v127;
  id v128;
  uint64_t v129;
  char v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(__int128 *, _QWORD);
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  __n128 v140;
  uint64_t v141;
  void *v142;
  NSString v143;
  uint64_t v144;
  char *v145;
  void *v146;
  char *v147;
  NSString v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  uint64_t v155;
  double v156;
  uint64_t v157;
  void (*v158)(__int128 *, _QWORD);
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  uint64_t v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t i;
  uint64_t v181;
  uint64_t v182;
  __n128 v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  unint64_t v190;
  _QWORD v191[2];
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  id v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  uint64_t v210;

  v193 = a2;
  v3 = type metadata accessor for AvatarShowcaseLayoutConfiguration(0, a2);
  __chkstk_darwin(v3);
  v192 = (char *)v191 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for DirectionalTextAlignment(0);
  v5 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v201 = (char *)v191 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v7);
  v9 = (char *)v191 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)type metadata accessor for FontUseCase(0);
  v203 = *(v10 - 1);
  v204 = v10;
  __chkstk_darwin(v10);
  v202 = (char *)v191 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork.Style(0, v12);
  v14 = __chkstk_darwin(v13);
  v197 = (char *)v191 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for Artwork.Crop(0, v14);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v194 = (char *)v191 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v199 - 8);
  v18 = __chkstk_darwin(v199);
  v198 = (char *)v191 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v18);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v191 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for BadgeType(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)v191 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter(v26);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v24);
  if ((_DWORD)v29 == enum case for BadgeType.rating(_:))
  {
    v30 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v31 = Badge.content.getter(v30);
    v32 = BadgeContentKeyRatingFormatted.getter();
    v34 = v33;
    if (*(_QWORD *)(v31 + 16) && (v35 = sub_10036C324(v32, v33), (v36 & 1) != 0))
    {
      sub_100010E9C(*(_QWORD *)(v31 + 56) + 32 * v35, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v31);
    if (*((_QWORD *)&v209 + 1))
    {
      if ((swift_dynamicCast(&v206, &v208, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v43 = v207;
        v44 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension18BadgeParagraphView_paragraphLabel];
        v45 = String._bridgeToObjectiveC()();
LABEL_23:
        objc_msgSend(v44, "setText:", v45);

LABEL_24:
        objc_msgSend(v30, "setNeedsLayout");
        swift_bridgeObjectRelease(v43);
        return;
      }
    }
    else
    {
      sub_100011088((uint64_t)&v208, &qword_1007F6E90);
    }
    v45 = 0;
    v43 = 0;
    v44 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension18BadgeParagraphView_paragraphLabel];
    goto LABEL_23;
  }
  v191[1] = a1;
  if ((_DWORD)v29 == enum case for BadgeType.contentRating(_:))
  {
    v37 = Badge.content.getter(v29);
    v38 = BadgeContentKeyContentRatingResource.getter();
    v40 = v39;
    if (*(_QWORD *)(v37 + 16) && (v41 = sub_10036C324(v38, v39), (v42 & 1) != 0))
    {
      sub_100010E9C(*(_QWORD *)(v37 + 56) + 32 * v41, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v37);
    if (*((_QWORD *)&v209 + 1))
    {
      if ((swift_dynamicCast(&v206, &v208, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v67 = v207;
        v68 = sub_1004853E8(v206, v207, 0, v66);
        swift_bridgeObjectRelease(v67);
        objc_msgSend(objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v68), "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);

      }
      return;
    }
LABEL_84:
    sub_100011088((uint64_t)&v208, &qword_1007F6E90);
    return;
  }
  if ((_DWORD)v29 == enum case for BadgeType.chartPosition(_:))
  {
    if (qword_1007F2318 != -1)
      swift_once(&qword_1007F2318, sub_100414824);
    v46 = v204;
    v47 = sub_1000117A8((uint64_t)v204, (uint64_t)qword_100854E30);
    v49 = v202;
    v48 = v203;
    v50 = *(void (**)(char *, uint64_t, id))(v203 + 16);
    v50(v202, v47, v46);
    v50(v9, (uint64_t)v49, v46);
    (*(void (**)(char *, _QWORD, uint64_t, id))(v48 + 56))(v9, 0, 1, v46);
    v51 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v52 = v201;
    v51(v201, enum case for DirectionalTextAlignment.none(_:), v200);
    v53 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
    v54 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v9, 1, 2, 0, 0, v52, 0, 0);
    v55 = objc_msgSend(v205, "traitCollection");
    isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v55).super.isa;
    v57 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

    if (v57)
    {
      v58 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v57, 0.0);

      if (!v58)
      {
LABEL_20:
        objc_msgSend(v54, "setTextAlignment:", 1);
        v59._countAndFlagsBits = 0xD000000000000020;
        v59._object = (void *)0x8000000100643740;
        v60._countAndFlagsBits = 0;
        v60._object = (void *)0xE000000000000000;
        object = localizedString(_:comment:)(v59, v60)._object;
        v62 = String._bridgeToObjectiveC()();
        objc_msgSend(v54, "setText:", v62, swift_bridgeObjectRelease(object).n128_f64[0]);

        v63 = (void *)objc_opt_self(UIColor);
        v64 = v54;
        v65 = objc_msgSend(v63, "systemGrayColor");
        objc_msgSend(v64, "setTextColor:", v65);

        (*(void (**)(char *, id))(v48 + 8))(v49, v46);
        return;
      }
      objc_msgSend(v54, "setFont:", v58);
      v55 = v58;
    }

    goto LABEL_20;
  }
  if ((_DWORD)v29 == enum case for BadgeType.editorsChoice(_:))
  {
    v69._countAndFlagsBits = 0xD000000000000050;
    v70._object = (void *)0x8000000100630310;
    v69._object = (void *)0x8000000100630330;
    v70._countAndFlagsBits = 0xD000000000000017;
    v71 = localizedString(_:comment:)(v70, v69);
    v72 = String.count.getter(v71._countAndFlagsBits, v71._object);
    swift_bridgeObjectRelease(v71._object);
    v73 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
    sub_100599FB4(v72 < 19, 1, 0, 0, 2u);
    return;
  }
  if ((_DWORD)v29 == enum case for BadgeType.artwork(_:))
  {
    v74 = Badge.artwork.getter();
    if (!v74)
      return;
    v75 = v74;
    v76 = v205;
    sub_1002F5074((uint64_t)v23);
    BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v77 = objc_msgSend(v76, "traitCollection");
    v78 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v77);

    v79.n128_f64[0] = v78;
    v80 = CGSize.scaled(_:)(v79);
    v82 = v81;
    Artwork.size.getter(v83);
    v84 = v198;
    v86 = AspectRatio.init(_:_:)(v85);
    LOBYTE(v77) = AspectRatio.isLandscape.getter(v86);
    v87 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v88 = v199;
    v89 = v87(v84, v199);
    if ((v77 & 1) != 0)
    {
      Artwork.size.getter(v89);
      AspectRatio.init(_:_:)(v90);
      v80 = AspectRatio.maxSize(filling:)(v80, v82);
      v82 = v91;
      v87(v84, v88);
    }
    v92 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v80, v82);
    v93 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleTitle1);
    v204 = v93;
    ArtworkView.preferredSymbolConfiguration.setter(v93);
    v94 = v194;
    v96 = Artwork.crop.getter(v95);
    v97 = Artwork.Crop.preferredContentMode.getter(v96);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v94, v196);
    v98 = Artwork.config(_:mode:prefersLayeredImage:)(v97, 0, v80, v82);
    v99 = v197;
    Artwork.style.getter(v98);
    v100 = ArtworkView.style.setter(v99);
    *(_QWORD *)&v101 = Artwork.contentMode.getter(v100).n128_u64[0];
    v103 = ArtworkLoaderConfig.size.getter(objc_msgSend(v92, "setContentMode:", v102, v101));
    v105 = ArtworkView.imageSize.setter(v103, v104);
    v106 = Artwork.backgroundColor.getter(v105);
    if (!v106)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v106 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v106);
    v107 = (void *)objc_opt_self(UIColor);
    v108 = ArtworkView.backgroundColor.setter(objc_msgSend(v107, "clearColor"));
    if ((Badge.isMonochrome.getter(v108) & 1) != 0)
      v109 = objc_msgSend(v107, "secondaryLabelColor");
    else
      v109 = 0;
    v126 = ArtworkView.artworkTintColor.setter(v109);
    if ((dispatch thunk of Artwork.isBundleImage.getter(v126) & 1) == 0)
    {
      v136 = v204;
      if (v193)
      {
        v210 = 0;
        v208 = 0u;
        v209 = 0u;
        v137 = swift_allocObject(&unk_100737200, 24, 7);
        swift_unknownObjectWeakInit(v137 + 16);
        v138 = swift_allocObject(&unk_100737228, 32, 7);
        *(_QWORD *)(v138 + 16) = v136;
        *(_QWORD *)(v138 + 24) = v137;
        v139 = v136;
        v140 = swift_retain(v137);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v98, 2, 1, &v208, sub_1002FDBB4, v138, v140);
        swift_release(v138);
        sub_100011088((uint64_t)&v208, (uint64_t *)&unk_1007F9850);
        swift_release(v137);
      }
      goto LABEL_66;
    }
    v127 = sub_100485648(v75, 0);
    v128 = v127;
    ArtworkView.image.setter(v127);
    if (v127)
    {
      AspectRatio.init(_:_:)(objc_msgSend(v128, "size"));
      v130 = AspectRatio.isPortrait.getter(v129);
      v87(v84, v88);
      AspectRatio.init(_:_:)(objc_msgSend(v128, "size"));
      if ((v130 & 1) != 0)
      {
        v131 = AspectRatio.maxSize(fitting:)(v80, v82);
        v133 = v132;
        v87(v84, v88);
        v134 = (void (*)(__int128 *, _QWORD))ArtworkView.frame.modify(&v208);
        *(double *)(v135 + 16) = v131;
        *(_QWORD *)(v135 + 24) = v133;
        v134(&v208, 0);

        v136 = v204;
LABEL_66:
        v160 = OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView;
        v161 = *(void **)&v76[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView];
        *(_QWORD *)&v76[OBJC_IVAR____TtC22SubscribePageExtension9BadgeView_artworkView] = v92;
        swift_release(v75);
        swift_release(v98);

        v162 = *(id *)&v76[v160];
        return;
      }
      v156 = AspectRatio.maxSize(filling:)(v80, v82);
      v155 = v157;
      v87(v84, v88);
    }
    else
    {
      v155 = 0;
      v156 = 0.0;
    }
    v136 = v204;
    v158 = (void (*)(__int128 *, _QWORD))ArtworkView.frame.modify(&v208);
    *(double *)(v159 + 16) = v156;
    *(_QWORD *)(v159 + 24) = v155;
    v158(&v208, 0);

    goto LABEL_66;
  }
  if ((_DWORD)v29 == enum case for BadgeType.controller(_:))
  {
    v110 = v205;
    sub_1002F5074((uint64_t)v23);
    BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v111 = objc_msgSend(v110, "traitCollection");
    v112 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v111);

    v113.n128_f64[0] = v112;
    v114 = CGSize.scaled(_:)(v113);
    v116 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, v114, v115);
    v118 = sub_1004853E8(0x6C6C6F72746E6F43, 0xEF65676461427265, 0, v117);
    objc_msgSend(v116, "setImage:", v118);

    objc_msgSend(v116, "setContentMode:", 1);
    v119 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    objc_msgSend(v116, "setTintColor:", v119);

    return;
  }
  if ((_DWORD)v29 == enum case for BadgeType.storefrontContentRating(_:))
  {
    v120 = Badge.content.getter(v29);
    v121 = BadgeContentKeyContentRating.getter();
    v123 = v122;
    if (*(_QWORD *)(v120 + 16) && (v124 = sub_10036C324(v121, v122), (v125 & 1) != 0))
    {
      sub_100010E9C(*(_QWORD *)(v120 + 56) + 32 * v124, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease(v123);
    swift_bridgeObjectRelease(v120);
    if (!*((_QWORD *)&v209 + 1))
      goto LABEL_84;
    if ((swift_dynamicCast(&v206, &v208, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v144 = v207;
      v145 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StorefrontAgeRatingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v146 = *(void **)&v145[OBJC_IVAR____TtC22SubscribePageExtension23StorefrontAgeRatingView_label];
      v147 = v145;
      v148 = String._bridgeToObjectiveC()();
      objc_msgSend(v146, "setText:", v148, swift_bridgeObjectRelease(v144).n128_f64[0]);

    }
  }
  else if ((_DWORD)v29 == enum case for BadgeType.paragraph(_:))
  {
    v30 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_1002FC4F0();
    if (v141)
    {
      v43 = v141;
      v142 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension18BadgeParagraphView_paragraphLabel];
      v143 = String._bridgeToObjectiveC()();
      objc_msgSend(v142, "setText:", v143);

      goto LABEL_24;
    }
  }
  else
  {
    if ((_DWORD)v29 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
      return;
    }
    v149 = Badge.content.getter(v29);
    v150 = BadgeContentKeyNumberOfAvatarsToDisplay.getter();
    v152 = v151;
    if (*(_QWORD *)(v149 + 16) && (v153 = sub_10036C324(v150, v151), (v154 & 1) != 0))
    {
      sub_100010E9C(*(_QWORD *)(v149 + 56) + 32 * v153, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease(v152);
    swift_bridgeObjectRelease(v149);
    if (!*((_QWORD *)&v209 + 1))
      goto LABEL_84;
    v163 = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    if ((swift_dynamicCast(&v206, &v208, (char *)&type metadata for Any + 8, v163, 6) & 1) == 0)
      return;
    v164 = (id)v206;
    v165 = objc_msgSend((id)v206, "integerValue");

    v167 = Badge.content.getter(v166);
    v168 = GameCenterFriends.getter();
    v170 = v169;
    if (*(_QWORD *)(v167 + 16) && (v171 = sub_10036C324(v168, v169), (v172 & 1) != 0))
    {
      sub_100010E9C(*(_QWORD *)(v167 + 56) + 32 * v171, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease(v170);
    swift_bridgeObjectRelease(v167);
    if (!*((_QWORD *)&v209 + 1))
      goto LABEL_84;
    v173 = sub_10000DF3C(&qword_100806DE8);
    if (swift_dynamicCast(&v206, &v208, (char *)&type metadata for Any + 8, v173, 6))
    {
      v174 = v206;
      if (!v193)
      {
        swift_bridgeObjectRelease(v206);
        return;
      }
      if ((unint64_t)v206 >> 62)
      {
        if (v206 < 0)
          v190 = v206;
        else
          v190 = v206 & 0xFFFFFFFFFFFFFF8;
        swift_retain(v193);
        swift_bridgeObjectRetain(v174);
        v175 = _CocoaArrayWrapper.endIndex.getter(v190);
        swift_bridgeObjectRelease(v174);
      }
      else
      {
        v175 = *(_QWORD *)((v206 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain(v193);
      }
      if (v175 >= (uint64_t)v165)
        v175 = (uint64_t)v165;
      v176 = (uint64_t)v192;
      AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(24.0, 15.0);
      v177 = objc_allocWithZone((Class)type metadata accessor for AvatarShowcaseView(0));
      sub_1004CCD38(v175, v176);
      *(_QWORD *)&v208 = _swiftEmptyArrayStorage;
      if ((unint64_t)v174 >> 62)
      {
        if (v174 < 0)
          v179 = v174;
        else
          v179 = v174 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v174);
        v178 = _CocoaArrayWrapper.endIndex.getter(v179);
      }
      else
      {
        v178 = *(_QWORD *)((v174 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v174);
      }
      if (v178)
      {
        if (v178 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v178; ++i)
        {
          if ((v174 & 0xC000000000000001) != 0)
          {
            v182 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v174);
          }
          else
          {
            v182 = *(_QWORD *)(v174 + 8 * i + 32);
            v183 = swift_retain(v182);
          }
          v184 = dispatch thunk of GameCenterPlayer.artwork.getter(v183);
          swift_release(v182);
          if (v184)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v185);
            v187 = *(_QWORD *)((v208 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v186 = *(_QWORD *)((v208 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v187 >= v186 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v186 > 1, v187 + 1, 1);
            v181 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v187, v184);
            specialized Array._endMutation()(v181);
          }
        }
        swift_bridgeObjectRelease(v174);
        v188 = (_QWORD *)v208;
      }
      else
      {
        swift_bridgeObjectRelease(v174);
        v188 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease(v174);
      v189 = v193;
      sub_1004CCEE8((uint64_t)v188, v193);
      swift_bridgeObjectRelease(v188);
      swift_release(v189);
    }
  }
}

uint64_t sub_1002FDB64()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FDB88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002FDBB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1002F9F98(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

ValueMetadata *type metadata accessor for GameCenterDenylistPlayerActionImplementation()
{
  return &type metadata for GameCenterDenylistPlayerActionImplementation;
}

unint64_t sub_1002FDBD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806DF0;
  if (!qword_100806DF0)
  {
    v1 = type metadata accessor for GameCenterDenylistPlayerAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100806DF0);
  }
  return result;
}

uint64_t sub_1002FDC18(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for ActionOutcome(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    type metadata accessor for GameCenter(0);
    v7 = a1;
    v8 = GameCenterDenylistPlayerAction.contactId.getter();
    v10 = v9;
    static GameCenter.addContactToDenyList(_:for:)(v8);
    v11 = swift_bridgeObjectRelease(v10);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for ActionOutcome.performed(_:), v2, v11);
    Promise.resolve(_:)(v6);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v13 = type metadata accessor for OSLogger(0, v4);
    sub_1000117A8(v13, (uint64_t)qword_100857618);
    v14 = sub_10000DF3C(&qword_1007FD430);
    v15 = type metadata accessor for LogMessage(0);
    v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
    *(_OWORD *)(v16 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000004DLL, 0x800000010062F5E0);
    Logger.error(_:)(v16, v13, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v16);
    v17 = sub_1002FDF1C();
    v18 = swift_allocError(&type metadata for GameCenterDenylistPlayerActionImplementation.ImplementationError, v17, 0, 0);
    Promise.reject(_:)(v18);
    return swift_errorRelease(v18);
  }
}

uint64_t sub_1002FDE18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  _QWORD v8[5];

  v1 = *a1;
  v2 = sub_10000DF3C(&qword_100803510);
  v3 = Promise.__allocating_init()(v2);
  type metadata accessor for GameCenter(0);
  v8[3] = sub_1000C0EC4();
  v8[4] = &protocol witness table for OS_dispatch_queue;
  v8[0] = static OS_dispatch_queue.main.getter(v4);
  v5 = swift_allocObject(&unk_100737270, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v1;
  swift_retain(v3);
  v6 = swift_retain(v1);
  static GameCenter.withLocalPlayer(on:_:)(v8, sub_1002FDF14, v5, v6);
  swift_release(v5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v8);
  return v3;
}

uint64_t sub_1002FDEE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FDF14(void *a1)
{
  return sub_1002FDC18(a1);
}

unint64_t sub_1002FDF1C()
{
  unint64_t result;

  result = qword_100806DF8;
  if (!qword_100806DF8)
  {
    result = swift_getWitnessTable(&unk_100683F3C, &type metadata for GameCenterDenylistPlayerActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100806DF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GameCenterDenylistPlayerActionImplementation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002FDFA0 + 4 * asc_100683E20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002FDFC0 + 4 * byte_100683E25[v4]))();
}

_BYTE *sub_1002FDFA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002FDFC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002FDFC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002FDFD0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002FDFD8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002FDFE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GameCenterDenylistPlayerActionImplementation.ImplementationError()
{
  return &type metadata for GameCenterDenylistPlayerActionImplementation.ImplementationError;
}

unint64_t sub_1002FE000()
{
  unint64_t result;

  result = qword_100806E00;
  if (!qword_100806E00)
  {
    result = swift_getWitnessTable(&unk_100683F14, &type metadata for GameCenterDenylistPlayerActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100806E00);
  }
  return result;
}

uint64_t type metadata accessor for SearchAdTransparencyButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100806E38;
  if (!qword_100806E38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchAdTransparencyButton);
  return result;
}

uint64_t sub_1002FE080(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_100683FE0;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100853C00);
}

id sub_1002FE0D4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.525490196, 0.752941176, 0.992156863, 1.0);
  qword_100853BF8 = (uint64_t)result;
  return result;
}

double sub_1002FE124()
{
  double result;

  result = 2.0;
  xmmword_100806E08 = xmmword_100683F90;
  *(_OWORD *)&qword_100806E18 = xmmword_100683F90;
  return result;
}

char *sub_1002FE13C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  char *v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  objc_super v36[2];
  objc_super v37;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v34 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_100806E28;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = &v11[qword_100806E30];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;

  v37.receiver = v11;
  v37.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v37, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = qword_1007F2600;
  v15 = (char *)v13;
  if (v14 != -1)
    swift_once(&qword_1007F2600, sub_1004162F4);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = sub_1000117A8(v16, (uint64_t)qword_1008556E8);
  v18 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v8, v17, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v16);
  dispatch thunk of DynamicTypeButton.fontUseCase.setter(v8);
  v19 = qword_100806E28;
  v20 = *(void **)&v15[qword_100806E28];
  objc_msgSend(v20, "setClipsToBounds:", 1);
  v21 = qword_1007F1C08;
  v22 = v20;
  if (v21 != -1)
    swift_once(&qword_1007F1C08, sub_1002FE0D4);
  objc_msgSend(v22, "setBackgroundColor:", qword_100853BF8);

  v23 = *(void **)&v15[v19];
  objc_msgSend(v23, "_setContinuousCornerRadius:", 4.0);
  objc_msgSend(v15, "addSubview:", v23);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v15;
  v26 = objc_msgSend(v24, "whiteColor");
  objc_msgSend(v25, "setTitleColor:forState:", v26, 0);

  v27 = v25;
  v28 = objc_msgSend(v24, "whiteColor");
  type metadata accessor for DynamicTypeButton(0);
  static UIView.defaultHighlightAlpha.getter();
  v29 = objc_msgSend(v28, "colorWithAlphaComponent:");

  objc_msgSend(v27, "setTitleColor:forState:", v29, 4);
  v30 = v27;
  dispatch thunk of Button.touchOutsideMargin.setter(10.0, 5.0, 10.0, 5.0);

  memset(v36, 0, sizeof(v36));
  memset(v35, 0, sizeof(v35));
  v31 = v30;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x7369747265766461, 0xED0000746E656D65, v36, v35);
  sub_1000131E0((uint64_t)v35);
  sub_1000131E0((uint64_t)v36);
  UIView.setAutomationSemantics(_:)(v5);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v34);
  objc_msgSend(v31, "addTarget:action:forControlEvents:", v31, "didTapButton", 64);

  return v31;
}

char *sub_1002FE500()
{
  return sub_1002FE13C();
}

void sub_1002FE520(char *a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = *(void (**)(uint64_t))&a1[qword_100806E30];
  if (v1)
  {
    v2 = *(_QWORD *)&a1[qword_100806E30 + 8];
    v4 = a1;
    v3 = sub_100019320((uint64_t)v1, v2);
    v1(v3);
    sub_100019310((uint64_t)v1, v2);

  }
}

double sub_1002FE590(void *a1)
{
  id v1;
  id v2;
  __n128 v3;
  double v4;

  v1 = a1;
  v2 = objc_msgSend(v1, "traitCollection");
  v4 = sub_1002FE7A4(v2, v3);

  return v4;
}

void sub_1002FE5EC(void *a1)
{
  char *v1;
  id v2;
  __n128 v3;
  void *v4;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidX;
  objc_super v10;
  CGRect v11;
  CGRect v12;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  v1 = (char *)v10.receiver;
  objc_msgSendSuper2(&v10, "layoutSubviews");
  v2 = objc_msgSend(v1, "traitCollection", v10.receiver, v10.super_class);
  sub_1002FE7A4(v2, v3);

  v4 = *(void **)&v1[qword_100806E28];
  objc_msgSend(v4, "frame");
  objc_msgSend(v4, "setFrame:");
  objc_msgSend(v1, "bounds");
  x = v11.origin.x;
  y = v11.origin.y;
  width = v11.size.width;
  height = v11.size.height;
  MidX = CGRectGetMidX(v11);
  v12.origin.x = x;
  v12.origin.y = y;
  v12.size.width = width;
  v12.size.height = height;
  objc_msgSend(v4, "setCenter:", MidX, CGRectGetMidY(v12));

}

void sub_1002FE704()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.SearchAdTransparencyButton", 49, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_1002FE730()
{
  uint64_t v0;

  return sub_100019310(*(_QWORD *)(v0 + qword_100806E30), *(_QWORD *)(v0 + qword_100806E30 + 8));
}

uint64_t sub_1002FE760(uint64_t a1)
{

  return sub_100019310(*(_QWORD *)(a1 + qword_100806E30), *(_QWORD *)(a1 + qword_100806E30 + 8));
}

uint64_t sub_1002FE79C()
{
  return type metadata accessor for SearchAdTransparencyButton(0);
}

double sub_1002FE7A4(void *a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  _QWORD v25[5];

  v3 = type metadata accessor for LabelPlaceholderCompatibility(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7._object = (void *)0x8000000100642900;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v9 = localizedString(_:comment:)(v7, v8);
  sub_1000466E4();
  if (qword_1007F2600 != -1)
    swift_once(&qword_1007F2600, sub_1004162F4);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_1008556E8);
  v12 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v11, a1);
  v13 = type metadata accessor for Feature(0);
  v25[3] = v13;
  v25[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v14 = sub_1000117C0(v25);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v14, enum case for Feature.measurement_with_labelplaceholder(_:), v13);
  LOBYTE(v13) = isFeatureEnabled(_:)(v25);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v9._countAndFlagsBits, v9._object, v12, 4, 0, 0, 0, 0, v13 & 1);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v15 = sub_10000DF3C(&qword_1007F5840);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v16 + 32) = a1;
  v17 = a1;
  v18 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v16);
  v19 = sub_10000E99C((unint64_t *)&unk_1007FF020, (uint64_t (*)(uint64_t))&type metadata accessor for LabelPlaceholderCompatibility, (uint64_t)&protocol conformance descriptor for LabelPlaceholderCompatibility);
  v20 = dispatch thunk of Measurable.measurements(fitting:in:)(v18, v3, v19, 1.79769313e308, 1.79769313e308);

  if (qword_1007F1C10 != -1)
    swift_once(&qword_1007F1C10, sub_1002FE124);
  v21 = *((double *)&xmmword_100806E08 + 1);
  v22 = unk_100806E20;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v20 + v21 + v22;
}

uint64_t sub_1002FEA30()
{
  return sub_10000E99C(&qword_100806E88, type metadata accessor for AppShowcaseCollectionViewCell, (uint64_t)&unk_100683FF8);
}

double sub_1002FEA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t KeyPath;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for AppShowcase(0);
  v5 = sub_10000E99C(&qword_100806E90, (uint64_t (*)(uint64_t))&type metadata accessor for AppShowcase, (uint64_t)&protocol conformance descriptor for AppShowcase);
  ItemLayoutContext.typedModel<A>(as:)(&v16, v4, v4, v5);
  v6 = v16;
  if (!v16)
    return 0.0;
  v7 = sub_1000826AC();
  KeyPath = swift_getKeyPath(&unk_100684048);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  v9 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v11 = v10;
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  sub_1003E1CE8(v6, v7, v9, v11);
  v13 = v12;
  swift_release(v6);
  swift_unknownObjectRelease(v7);
  return v13;
}

double sub_1002FEBA4(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v10;
  void *ObjectType;
  double v12;

  v10 = *a1;
  ObjectType = (void *)swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  return sub_1004A42D8(v10, a8, ObjectType, v12, a3);
}

id sub_1002FEBF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;

  v5 = *a1;
  v6 = type metadata accessor for ContingentOffer(0);
  v7 = swift_dynamicCastClass(v5, v6);
  if (v7)
  {
    v8 = v7;
    swift_retain(v5);
    sub_1004A4554(v8, a3);
LABEL_5:
    *(_QWORD *)&v11 = swift_release(v5).n128_u64[0];
    return objc_msgSend(v3, "setNeedsLayout", v11);
  }
  v9 = type metadata accessor for OfferItem();
  v10 = swift_dynamicCastClass(v5, v9);
  if (v10)
  {
    v12 = v10;
    swift_retain(v5);
    sub_1004A47D4(v12, a3);
    goto LABEL_5;
  }
  return objc_msgSend(v3, "setNeedsLayout", v11);
}

void sub_1002FECC0(_QWORD *a1, uint64_t a2)
{
  void *v2;
  double v5;
  double v6;

  objc_msgSend(v2, "bounds");
  sub_100162FC0(a1, a2, v5, v6);
}

double sub_1002FED30(char a1)
{
  double result;

  if ((a1 & 1) == 0)
    return 0.0;
  return result;
}

void sub_1002FED44(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, void *a7)
{
  sub_1002FED7C(a1, a5, a2, a3, a7);
}

uint64_t sub_1002FED50()
{
  return sub_10000E99C(&qword_1007FA478, (uint64_t (*)(uint64_t))&type metadata accessor for AppPromotion, (uint64_t)&protocol conformance descriptor for AppPromotion);
}

void sub_1002FED7C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *ObjectType;
  double v9;
  double v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  id v37;
  _BYTE v38[40];
  uint64_t v39;
  _QWORD v40[5];
  uint64_t v41;

  ObjectType = (void *)swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v10 = v9;
  v11 = objc_msgSend(a5, "traitCollection");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");
  v13 = static UIContentSizeCategory.>= infix(_:_:)(v12, UIContentSizeCategoryExtraExtraExtraLarge);

  if ((v13 & 1) == 0)
  {
    if (qword_1007F10B0 != -1)
      swift_once(&qword_1007F10B0, sub_1000B40CC);
    sub_100460948((uint64_t)xmmword_100851230, (uint64_t)a5, v10, a2);
    v25 = v24;
    if (qword_1007F2DD8 != -1)
      swift_once(&qword_1007F2DD8, sub_1004DD058);
    v26 = type metadata accessor for AppPromotionCardLayout.Metrics(0);
    v27 = sub_1000117A8(v26, (uint64_t)qword_100856A80);
    sub_100266778(v27, a5, v10, a2);
    v29 = v25 + v28;
    goto LABEL_33;
  }
  v14 = (uint64_t)_swiftEmptyArrayStorage;
  v41 = (uint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_100011020(v16, (uint64_t)v40);
      sub_100011020((uint64_t)v40, (uint64_t)v38);
      v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v19 = type metadata accessor for AppPromotion(0);
      if ((swift_dynamicCast(&v39, v38, v18, v19, 6) & 1) == 0)
        v39 = 0;
      v20 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v40);
      v21 = v39;
      if (v39)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v23 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v22 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v23 >= v22 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized Array._endMutation()(v17);
      }
      v16 += 40;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(a1);
    v14 = v41;
  }
  if (!((unint64_t)v14 >> 62))
  {
    v30 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
      goto LABEL_19;
LABEL_32:
    swift_bridgeObjectRelease(v14);
    v29 = 0.0;
LABEL_33:
    v36 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    PageTraitEnvironment.pageColumnWidth.getter();
    v37 = objc_msgSend(v36, "absoluteDimension:");
    static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(0.0, v29);

    return;
  }
  if (v14 < 0)
    v35 = v14;
  else
    v35 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v30 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v14);
  if (!v30)
    goto LABEL_32;
LABEL_19:
  if (v30 >= 1)
  {
    v31 = 0;
    v29 = 0.0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v14);
      }
      else
      {
        v32 = *(_QWORD *)(v14 + 8 * v31 + 32);
        swift_retain(v32);
      }
      ++v31;
      sub_1004A42D8(v32, a5, ObjectType, v10, a2);
      v34 = v33;
      swift_release(v32);
      if (v29 <= v34)
        v29 = v34;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease(v14);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_1002FF100(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  UIImage_optional v15;

  v4 = *(_QWORD *)(*(_QWORD *)(v3
                             + OBJC_IVAR____TtC22SubscribePageExtension35AppPromotionOfferCollectionViewCell_appPromotionView)
                 + OBJC_IVAR____TtC22SubscribePageExtension16AppPromotionView_appPromotionCardView);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension20AppPromotionCardView_artworkView);
  v15.value.super.isa = 0;
  v15.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v15, a3);
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension20AppPromotionCardView_subtitleView)
                 + qword_1008037C8);
  v7 = type metadata accessor for ArtworkView(0);
  v8 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, 1, v7, v8);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, 1, v7, v8);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC22SubscribePageExtension20AppPromotionCardView_videoView);
  if (Strong)
  {
    v10 = *(void **)(Strong + qword_10080FD18);
    v14 = (id)Strong;
    v11 = objc_msgSend(v10, "layer");
    objc_msgSend(v11, "removeAllAnimations");

    objc_msgSend(v10, "setImage:", 0);
    v12 = type metadata accessor for VideoView(0);
    v13 = sub_10000E99C((unint64_t *)&unk_1007F4810, type metadata accessor for VideoView, (uint64_t)"\t,\v");
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v14, 1, v12, v13);

  }
}

uint64_t sub_1002FF2B0(uint64_t a1)
{
  return sub_1001456BC(a1, qword_100806EE0, &qword_1007F25E0, (uint64_t)qword_100855688, (uint64_t)sub_100416294);
}

uint64_t sub_1002FF2D4(uint64_t a1)
{
  return sub_1001456BC(a1, qword_100806EF8, &qword_1007F25E8, (uint64_t)qword_1008556A0, (uint64_t)sub_1004162AC);
}

uint64_t sub_1002FF2F8(uint64_t a1)
{
  return sub_1001456BC(a1, qword_100806F10, &qword_1007F25F0, (uint64_t)qword_1008556B8, (uint64_t)sub_1004162C4);
}

uint64_t sub_1002FF31C(uint64_t a1)
{
  return sub_1001456BC(a1, qword_100806F28, &qword_1007F25F8, (uint64_t)qword_1008556D0, (uint64_t)sub_1004162DC);
}

void sub_1002FF340()
{
  qword_100853C10 = 0x4057400000000000;
}

uint64_t sub_1002FF354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DF3C(&qword_1007F5460);
  sub_100045464(v0, qword_100806F40);
  sub_1000117A8(v0, (uint64_t)qword_100806F40);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

char *sub_1002FF3DC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  void (*v30)(char *);
  objc_class *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  objc_class *v43;
  id v44;
  double left;
  double bottom;
  double right;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  void (*v63)(char *, uint64_t, uint64_t);
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  _QWORD v69[2];
  objc_super v70;

  v9 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v9);
  v65 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v4[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_metrics];
  v19 = qword_1007F2A78;
  v21 = v4;
  if (v19 != -1)
    swift_once(&qword_1007F2A78, sub_100435010);
  v22 = type metadata accessor for InAppPurchaseSearchResultLayout.Metrics(0, v20);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100856250);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v18, v23, v22);
  v24 = OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_bodyBackgroundColor;
  v67 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  *(_QWORD *)&v21[v24] = static UIColor.componentBackgroundStandout.getter();
  if (qword_1007F1C18 != -1)
    swift_once(&qword_1007F1C18, sub_1002FF2B0);
  v25 = type metadata accessor for FontUseCase(0);
  v26 = sub_1000117A8(v25, (uint64_t)qword_100806EE0);
  v27 = *(_QWORD *)(v25 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v17, v26, v25);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
  v29(v17, 0, 1, v25);
  v30 = *(void (**)(char *))(v12 + 104);
  v68 = enum case for DirectionalTextAlignment.none(_:);
  v30(v14);
  v31 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v32 = objc_allocWithZone(v31);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppPurchaseLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 4, 0, 0, v14, 0, 0);
  if (qword_1007F1C20 != -1)
    swift_once(&qword_1007F1C20, sub_1002FF2D4);
  v33 = sub_1000117A8(v25, (uint64_t)qword_100806EF8);
  v28(v17, v33, v25);
  v29(v17, 0, 1, v25);
  ((void (*)(char *, _QWORD, uint64_t))v30)(v14, v68, v11);
  v34 = objc_allocWithZone(v31);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 4, 0, 0, v14, 0, 0);
  if (qword_1007F1C28 != -1)
    swift_once(&qword_1007F1C28, sub_1002FF2F8);
  v35 = sub_1000117A8(v25, (uint64_t)qword_100806F10);
  v63 = v28;
  v28(v17, v35, v25);
  v64 = v29;
  v29(v17, 0, 1, v25);
  v36 = v68;
  v66 = v11;
  ((void (*)(char *, _QWORD, uint64_t))v30)(v14, v68, v11);
  v37 = objc_allocWithZone(v31);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_subtitleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 4, 0, 0, v14, 0, 0);
  v38 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_body] = v38;
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_offerButton] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OfferButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_1007F1C38 != -1)
    swift_once(&qword_1007F1C38, sub_1002FF340);
  v39 = (uint64_t)v65;
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&qword_100853C10);
  v40 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_iconView] = sub_10021DFE0(v39, 1);
  if (qword_1007F1C30 != -1)
    swift_once(&qword_1007F1C30, sub_1002FF31C);
  v41 = sub_1000117A8(v25, (uint64_t)qword_100806F28);
  v63(v17, v41, v25);
  v64(v17, 0, 1, v25);
  ((void (*)(char *, uint64_t, uint64_t))v30)(v14, v36, v66);
  v42 = objc_allocWithZone(v31);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppDescription] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 3, 4, 0, 0, v14, 0, 0);

  v43 = (objc_class *)type metadata accessor for InAppPurchaseSearchResultContentView(0);
  v70.receiver = v21;
  v70.super_class = v43;
  v44 = objc_msgSendSuper2(&v70, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v48 = (char *)v44;
  objc_msgSend(v48, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v49 = OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppPurchaseLabel;
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppPurchaseLabel]);
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_titleLabel]);
  v50 = OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_subtitleLabel;
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_subtitleLabel]);
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_offerButton]);
  v51 = OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_body;
  v52 = *(void **)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_body];
  objc_msgSend(v48, "addSubview:", v52);
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_iconView]);
  v53 = OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppDescription;
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppDescription]);
  v54 = objc_msgSend(v52, "layer");
  objc_msgSend(v54, "setCornerRadius:", 5.0);

  v55 = *(id *)&v48[v49];
  v56 = objc_msgSend(v48, "tintColor");
  objc_msgSend(v55, "setTextColor:", v56);

  v57 = *(id *)&v48[v50];
  v58 = (void *)static UIColor.secondaryText.getter(v57);
  objc_msgSend(v57, "setTextColor:", v58);

  objc_msgSend(*(id *)&v48[v51], "setBackgroundColor:", *(_QWORD *)&v48[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_bodyBackgroundColor]);
  if (qword_1007F1C40 != -1)
    swift_once(&qword_1007F1C40, sub_1002FF354);
  v59 = sub_10000DF3C(&qword_1007F5460);
  sub_1000117A8(v59, (uint64_t)qword_100806F40);
  v69[0] = v48;
  Conditional.evaluate(with:)(v69, v59);
  UILabel.alignment.setter(v69[1]);
  v60 = *(id *)&v48[v53];
  v61 = (void *)static UIColor.secondaryText.getter(v60);
  objc_msgSend(v60, "setTextColor:", v61);

  return v48;
}

uint64_t sub_1002FFCC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  double v37;
  char *v38;
  id v40;
  char *v41;
  objc_class *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[5];
  _QWORD v50[5];
  _QWORD v51[5];
  _QWORD v52[5];
  _QWORD v53[5];
  _QWORD v54[5];
  char v55[24];
  _QWORD v56[3];
  uint64_t v57;
  void *v58;
  objc_super v59;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  __chkstk_darwin(v2);
  v46 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InAppPurchaseSearchResultLayout.Metrics(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InAppPurchaseSearchResultLayout(0, v7);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for InAppPurchaseSearchResultContentView(0);
  v59.receiver = v1;
  v59.super_class = v12;
  objc_msgSendSuper2(&v59, "layoutSubviews");
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, &v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_metrics], v5);
  v13 = *(_BYTE **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_offerButton];
  v42 = v12;
  LayoutMarginsAware<>.layoutFrame.getter(v12);
  v14 = (double *)&v13[OBJC_IVAR____TtC22SubscribePageExtension11OfferButton_cachedIntrinsicContentSize];
  if ((v13[OBJC_IVAR____TtC22SubscribePageExtension11OfferButton_cachedIntrinsicContentSize + 16] & 1) != 0)
  {
    v15 = (uint64_t)&v13[OBJC_IVAR____TtC22SubscribePageExtension11OfferButton__configuration];
    swift_beginAccess(&v13[OBJC_IVAR____TtC22SubscribePageExtension11OfferButton__configuration], v55, 0, 0);
    sub_100011020(v15, (uint64_t)v56);
    v16 = v57;
    v17 = v58;
    sub_100011064(v56, v57);
    v18 = dispatch thunk of OfferButtonConfiguration.size(in:)(v13, v16, v17);
    v20 = v19;
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v56);
    *v14 = v18;
    v14[1] = v20;
    *((_BYTE *)v14 + 16) = 0;
  }
  else
  {
    v18 = *v14;
    v20 = v14[1];
  }
  InAppPurchaseSearchResultLayout.Metrics.offerButtonSize.setter(v18, v20);
  v21 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppPurchaseLabel];
  v22 = type metadata accessor for DynamicTypeLabel(0);
  v57 = v22;
  v58 = &protocol witness table for UILabel;
  v56[0] = v21;
  v23 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_titleLabel];
  v54[3] = v22;
  v54[4] = &protocol witness table for UILabel;
  v54[0] = v23;
  v24 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_subtitleLabel];
  v53[3] = v22;
  v53[4] = &protocol witness table for UILabel;
  v53[0] = v24;
  v25 = type metadata accessor for OfferButton();
  v41 = v9;
  v52[3] = v25;
  v52[4] = &protocol witness table for UIView;
  v52[0] = v13;
  v40 = v13;
  v26 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_iconView];
  v51[3] = type metadata accessor for InAppPurchaseView(0);
  v51[4] = &protocol witness table for UIView;
  v50[4] = &protocol witness table for UILabel;
  v51[0] = v26;
  v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppDescription];
  v50[3] = v22;
  v50[0] = v27;
  v28 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_body];
  v49[3] = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v49[4] = &protocol witness table for UIView;
  v49[0] = v28;
  v29 = v21;
  v30 = v23;
  v31 = v24;
  v32 = v40;
  v33 = v26;
  v34 = v27;
  v35 = v28;
  v36 = v43;
  InAppPurchaseSearchResultLayout.init(metrics:inAppPurchaseText:titleText:subtitleText:offerButton:inAppPurchaseIcon:inAppPurchaseDescription:inAppPurchaseBackgroundView:)(v41, v56, v54, v53, v52, v51, v50, v49);
  v37 = LayoutMarginsAware<>.layoutFrame.getter(v42);
  v38 = v46;
  InAppPurchaseSearchResultLayout.placeChildren(relativeTo:in:)(v1, v37);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v36, v45);
}

id sub_100300040(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id result;
  uint64_t v6;
  _QWORD v7[2];
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for InAppPurchaseSearchResultContentView(0);
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    if (qword_1007F1C40 != -1)
      swift_once(&qword_1007F1C40, sub_1002FF354);
    v6 = sub_10000DF3C(&qword_1007F5460);
    sub_1000117A8(v6, (uint64_t)qword_100806F40);
    v7[0] = v1;
    Conditional.evaluate(with:)(v7, v6);
    return (id)UILabel.alignment.setter(v7[1]);
  }
  return result;
}

void sub_1003001AC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  NSString v33;
  __objc2_meth_list **p_base_meths;
  char v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  Swift::String v39;
  void *object;
  NSString v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSString v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  NSString v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  char *v83;
  uint64_t v84;
  Swift::Bool v85;
  uint64_t v86;
  Swift::Bool v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  void *v92;
  uint64_t v93;
  char *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  void (*v99)(char *, char *, uint64_t, __n128);
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  objc_class *v102;
  id v103;
  uint64_t v104;
  _QWORD v105[2];
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (**v118)(_QWORD, _QWORD, __n128);
  uint64_t v119;
  objc_super v120;
  _QWORD v121[4];
  UIImage_optional v122;
  UIImage_optional v123;

  v3 = v2;
  v5 = type metadata accessor for InAppPurchaseTheme(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v105 - v10;
  v12 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v12);
  v14 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v113 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v118 = *(void (***)(_QWORD, _QWORD, __n128))(v16 - 8);
  __chkstk_darwin(v16);
  v116 = (char *)v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v18);
  v114 = (char *)v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for InAppPurchaseSearchResult(0);
  v21 = sub_10000E99C(&qword_1007FA910, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(v121, v20, v20, v21);
  v23 = v121[0];
  if (v121[0])
  {
    v108 = v11;
    v109 = v16;
    v110 = v8;
    v111 = v5;
    v112 = v6;
    v24 = InAppPurchaseSearchResult.lockup.getter(v22);
    swift_release(v23);
    v25 = type metadata accessor for ArtworkLoader(0);
    v26 = type metadata accessor for BaseObjectGraph(0);
    inject<A, B>(_:from:)(v121, v25, a2, v25, v26);
    v27 = v121[0];
    v28 = swift_retain(v24);
    Lockup.title.getter(v28);
    v30 = v29;
    *(_QWORD *)&v31 = swift_release(v24).n128_u64[0];
    v32 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_titleLabel];
    v106 = v14;
    v107 = a2;
    if (v30)
    {
      v33 = String._bridgeToObjectiveC()();
      objc_msgSend(v32, "setText:", v33);
      swift_bridgeObjectRelease(v30);

    }
    else
    {
      objc_msgSend(v32, "setText:", 0, v31);
    }
    objc_msgSend(v32, "setHidden:", v30 == 0);
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    v35 = InAppPurchaseLockup.isSubscription.getter(objc_msgSend(v3, "setNeedsLayout"));
    v36 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppPurchaseLabel];
    if ((v35 & 1) != 0)
    {
      v37 = 0xD00000000000003ALL;
      v38 = 0x80000001006342F0;
    }
    else
    {
      v38 = 0x8000000100634280;
      v37 = 0xD00000000000002DLL;
    }
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(*(Swift::String *)&v37, v39)._object;
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v36, "setText:", v41, swift_bridgeObjectRelease(object).n128_f64[0]);

    v44 = InAppPurchaseLockup.parent.getter(v42, v43);
    Lockup.title.getter(v45);
    v47 = v46;
    v49 = v48;
    *(_QWORD *)&v50 = swift_release(v44).n128_u64[0];
    if (v49)
    {
      v51._countAndFlagsBits = 0xD000000000000035;
      v51._object = (void *)0x80000001006342B0;
      v52._countAndFlagsBits = 0;
      v52._object = (void *)0xE000000000000000;
      v53 = localizedString(_:comment:)(v51, v52);
      v54 = sub_10000DF3C(&qword_1007FA388);
      v55 = swift_allocObject(v54, 72, 7);
      *(_OWORD *)(v55 + 16) = xmmword_10066FBA0;
      *(_QWORD *)(v55 + 56) = &type metadata for String;
      *(_QWORD *)(v55 + 64) = sub_1000D0764();
      *(_QWORD *)(v55 + 32) = v47;
      *(_QWORD *)(v55 + 40) = v49;
      String.init(format:_:)(v53._countAndFlagsBits, v53._object, v55);
      v57 = v56;
      p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
      swift_bridgeObjectRelease(v53._object);
      v58 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_subtitleLabel];
      v59 = String._bridgeToObjectiveC()();
      objc_msgSend(v58, "setText:", v59);
      swift_bridgeObjectRelease(v57);

      objc_msgSend(v58, "setHidden:", 0);
    }
    else
    {
      v60 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_subtitleLabel];
      objc_msgSend(v60, "setText:", 0, v50);
      objc_msgSend(v60, "setHidden:", 1);
    }
    InAppPurchaseLockup.descriptionText.getter(objc_msgSend(v3, (SEL)p_base_meths[408]));
    v119 = v27;
    if (v61)
    {
      v62 = v61;
      v63 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppDescription];
      v64 = String._bridgeToObjectiveC()();
      objc_msgSend(v63, "setText:", v64);
      swift_bridgeObjectRelease(v62);

      objc_msgSend(v63, "setHidden:", 0);
    }
    else
    {
      v65 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_inAppDescription];
      objc_msgSend(v65, "setText:", 0);
      objc_msgSend(v65, "setHidden:", 1);
    }
    objc_msgSend(v3, (SEL)p_base_meths[408]);
    v105[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_offerButton];
    swift_retain(v24);
    v67 = Lockup.offerDisplayProperties.getter(v66);
    swift_release(v24);
    v68 = swift_retain(v24);
    v69 = Lockup.buttonAction.getter(v68);
    swift_release(v24);
    v70 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    v71 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v114, 1, 1, v70);
    v72 = type metadata accessor for ObjectGraph(0);
    v73 = swift_dynamicCastClassUnconditional(v107, v72, 0, 0, 0);
    v74 = v113;
    v75 = v115;
    v76 = v117;
    (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v115, enum case for OfferButtonSubtitlePosition.below(_:), v117);
    v77 = v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v106, 1, 1, v76);
    v78 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
    v79 = (uint64_t)v116;
    v80 = v76;
    v81 = v3;
    AccessibilityConditional.init(value:axValue:)(v75, v77, v80, v78);
    sub_10013AB60(v67, v69, 0, v71, v79, v73, 0, 0);
    swift_release(v69);
    v82 = swift_release(v67);
    v118[1](v79, v109, v82);
    sub_100060E60(v71);
    v83 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_iconView];
    v84 = *(_QWORD *)&v83[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView];
    v122.value.super.isa = 0;
    v122.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v122, v85);
    v86 = *(_QWORD *)&v83[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_tileIconArtworkView];
    v123.value.super.isa = 0;
    v123.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v123, v87);
    v88 = type metadata accessor for ArtworkView(0);
    v89 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v84, 1, v88, v89);
    v90 = ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v86, 1, v88, v89);
    if (qword_1007F2A80 != -1)
      v90 = swift_once(&qword_1007F2A80, sub_1004355B0);
    v91 = *(double *)&qword_100856268;
    v92 = *(void **)&v81[OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_bodyBackgroundColor];
    v118 = (void (**)(_QWORD, _QWORD, __n128))v81;
    v93 = (uint64_t)v108;
    InAppPurchaseLockup.theme.getter(v90);
    v94 = &v83[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_theme];
    v95 = swift_beginAccess(&v83[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_theme], v121, 33, 0);
    v96 = v111;
    v97 = v112;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v112 + 24))(v94, v93, v111, v95);
    v98 = swift_endAccess(v121);
    v99 = *(void (**)(char *, char *, uint64_t, __n128))(v97 + 16);
    v100 = (uint64_t)v110;
    v99(v110, v94, v96, v98);
    sub_10021E640(v100);
    v101 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v101(v100, v96);
    v101(v93, v96);
    v102 = (objc_class *)type metadata accessor for InAppPurchaseView(0);
    v120.receiver = v83;
    v120.super_class = v102;
    v103 = v92;
    objc_msgSendSuper2(&v120, "setBackgroundColor:", v103);
    sub_10021EA50();

    v104 = v119;
    sub_10059FBF8(v91, v91, v24, (uint64_t)v83, v119, 2);
    ((void (*)(uint64_t, char *, uint64_t))v99)(v93, v94, v96);
    sub_10021E640(v93);
    v101(v93, v96);
    objc_msgSend(v83, "setNeedsLayout");
    objc_msgSend(v118, "setNeedsLayout");
    swift_release(v24);
    swift_release(v104);
  }
}

id sub_100300A6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InAppPurchaseSearchResultContentView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100300B60()
{
  return type metadata accessor for InAppPurchaseSearchResultContentView(0);
}

uint64_t type metadata accessor for InAppPurchaseSearchResultContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_100806F90;
  if (!qword_100806F90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppPurchaseSearchResultContentView);
  return result;
}

uint64_t sub_100300BA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[9];

  result = type metadata accessor for InAppPurchaseSearchResultLayout.Metrics(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100300C34(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  UIImage_optional v11;
  UIImage_optional v12;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_iconView);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView);
  v11.value.super.isa = 0;
  v11.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v11, a3);
  v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_tileIconArtworkView);
  v12.value.super.isa = 0;
  v12.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v12, v7);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, 1, v8, v9);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, 1, v8, v9);
}

void sub_100300D08()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = type metadata accessor for InAppPurchaseSearchResult(0);
  v1 = sub_10000E99C(&qword_1007FA910, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v8, v0, v0, v1);
  v3 = v8;
  if (v8)
  {
    if (qword_1007F2A80 != -1)
      swift_once(&qword_1007F2A80, sub_1004355B0);
    v4 = *(double *)&qword_100856268;
    v5 = InAppPurchaseSearchResult.lockup.getter(v2);
    v7 = sub_1005A00EC(v4, v4, v5, v6);
    swift_release(v5);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v7);
    swift_release(v3);
    swift_bridgeObjectRelease(v7);
  }
}

uint64_t sub_100300DF4()
{
  return sub_10000E99C(&qword_100806FA0, type metadata accessor for InAppPurchaseSearchResultContentView, (uint64_t)&unk_100684118);
}

uint64_t sub_100300E20(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10000E99C(&qword_100806FA8, type metadata accessor for InAppPurchaseSearchResultContentView, (uint64_t)&unk_100684154);
  result = sub_10000E99C((unint64_t *)&unk_100806FB0, type metadata accessor for InAppPurchaseSearchResultContentView, (uint64_t)&unk_100684184);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_100300E7C(void *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v29;

  v4 = type metadata accessor for OfferButtonMetrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  v12 = type metadata accessor for InAppPurchaseSearchResultLayout.Metrics(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = CGSize.subtracting(insets:)(v16);
  v19 = v18;
  if (qword_1007F2A78 != -1)
    swift_once(&qword_1007F2A78, sub_100435010);
  v20 = sub_1000117A8(v12, (uint64_t)qword_100856250);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v20, v12);
  v21 = objc_msgSend(a1, "traitCollection");
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v21) & 1) != 0)
  {
    if (qword_1007F2DA0 != -1)
      swift_once(&qword_1007F2DA0, sub_1004D0ED4);
    v22 = qword_100813E28;
  }
  else
  {
    if (qword_1007F2DA8 != -1)
      swift_once(&qword_1007F2DA8, sub_1004D1380);
    v22 = qword_100813E40;
  }
  v23 = sub_1000117A8(v4, (uint64_t)v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);

  v25 = OfferButtonMetrics.minimumSize.getter(v24);
  v27 = OfferButtonMetrics.estimatedHeight.getter(v26);
  InAppPurchaseSearchResultLayout.Metrics.offerButtonSize.setter(v25, v27);
  static InAppPurchaseSearchResultLayout.estimatedMeasurements(fitting:using:in:)(v15, a1, v17, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return a2;
}

double sub_100301104()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  double v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for InAppPurchaseSearchResult(0);
  v8 = sub_10000E99C(&qword_1007FA910, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v27, v7, v7, v8);
  v10 = v27;
  if (!v27)
    return 0.0;
  v11 = InAppPurchaseSearchResult.lockup.getter(v9);
  v12 = swift_release(v10);
  ItemLayoutContext.parentShelfLayoutContext.getter(v12);
  if (qword_1007F1DE8 != -1)
    swift_once(&qword_1007F1DE8, sub_1003852A0);
  v13 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  PageGrid.init(from:breakpointOverrides:)(v2, v13);
  v14 = swift_retain(v11);
  Lockup.title.getter(v14);
  v16 = v15;
  swift_release(v11);
  v17 = swift_retain(v11);
  Lockup.subtitle.getter(v17);
  v19 = v18;
  swift_release(v11);
  v20 = sub_1000826AC();
  v21 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  sub_100300E7C(v20, v21);
  v23 = v22;
  swift_release(v11);
  swift_unknownObjectRelease(v20);
  swift_bridgeObjectRelease(v19);
  v24 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v24);
  return v23;
}

double sub_100301304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[40];

  v3 = v2;
  sub_100011020(a1, (uint64_t)v12);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v6 = type metadata accessor for InAppPurchaseSearchResult(0);
  if (swift_dynamicCast(&v11, v12, v5, v6, 6))
  {
    v8 = v11;
    v9 = InAppPurchaseSearchResult.lockup.getter(v7);
    swift_release(v8);
    if (qword_1007F2A80 != -1)
      swift_once(&qword_1007F2A80, sub_1004355B0);
    sub_10059FBF8(*(double *)&qword_100856268, *(double *)&qword_100856268, v9, *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension36InAppPurchaseSearchResultContentView_iconView), a2, 2);
    v7.n128_u64[0] = swift_release(v9).n128_u64[0];
  }
  return v7.n128_f64[0];
}

double ArtworkView.measure(toFit:with:)()
{
  double v0;

  ArtworkView.frame.getter();
  return v0;
}

double sub_100301404()
{
  double v0;

  ArtworkView.frame.getter();
  return v0;
}

char *sub_100301434(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *ObjectType;
  id v10;
  char *v11;
  id v12;
  id v13;
  double left;
  double bottom;
  double right;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v11[OBJC_IVAR____TtC22SubscribePageExtension24InfiniteScrollFooterView_activityIndicator] = v12;

  v22.receiver = v11;
  v22.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000117FC();
  v18 = (char *)v17;
  v20 = (void *)static UIColor.defaultBackground.getter(v18, v19);
  objc_msgSend(v18, "setBackgroundColor:", v20);

  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension24InfiniteScrollFooterView_activityIndicator]);
  return v18;
}

void sub_1003019C0(void *a1, uint64_t a2, void *a3, const char **a4)
{
  const char *v6;
  char *v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a4;
  v7 = (char *)v9.receiver;
  v8 = a3;
  objc_msgSendSuper2(&v9, v6, v8);
  if (v8)

  else
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension24InfiniteScrollFooterView_activityIndicator], "stopAnimating", v9.receiver, v9.super_class);

}

uint64_t type metadata accessor for InfiniteScrollFooterView()
{
  return objc_opt_self(_TtC22SubscribePageExtension24InfiniteScrollFooterView);
}

uint64_t sub_100301A78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

void sub_100301AA8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  void *v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  unsigned __int8 v36;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_1006844F0);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v15 = swift_release(KeyPath);
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  LODWORD(v2) = v36;
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v35.receiver = v22;
  v35.super_class = v21;
  v24 = objc_msgSendSuper2(&v35, "init");
  v25 = v24;
  if ((_DWORD)v2 == 1)
  {
    v26 = sub_1001433C4(v24);
    v28 = sub_1001434B0(v27);
    v29 = qword_1007F1A80;
    v11 = (v26 - v28) / 1.5;
  }
  else
  {
    v29 = qword_1007F1A80;
  }
  if (v29 != -1)
    swift_once(&qword_1007F1A80, sub_1002B6438);
  v30 = type metadata accessor for AspectRatio(0);
  v31 = sub_1000117A8(v30, (uint64_t)qword_100853878);
  v32 = AspectRatio.height(fromWidth:)(v31, v11);
  ComponentPrefetchSizing.init(size:contentMode:)(v11, v32);
  v33 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 0, 1, v33);

}

void sub_100301D18(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t, double);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t, double))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_1006844F0);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v15 = swift_release(KeyPath);
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v30.receiver = v22;
  v30.super_class = v21;
  v24 = objc_msgSendSuper2(&v30, "init");
  v25 = sub_1001433C4(v24);
  v27 = sub_1001434B0(v26);
  ComponentPrefetchSizing.init(size:contentMode:)((v25 - v27) * 0.5, (v25 - v27) * 0.5);
  v28 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 0, 1, v28);

}

void sub_100301F1C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t, double);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t, double))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_1006844F0);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v15 = swift_release(KeyPath);
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v31.receiver = v22;
  v31.super_class = v21;
  v24 = objc_msgSendSuper2(&v31, "init");
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v25 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v26 = sub_1000117A8(v25, (uint64_t)qword_100852280);
  v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
  ComponentPrefetchSizing.init(size:contentMode:)(v27, v28);
  v29 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);

}

void sub_100302148(uint64_t a1, uint64_t a2)
{
  sub_100302160(a1, a2, (void (*)(uint64_t, id, double, double))sub_1002D5C9C);
}

void sub_100302154(uint64_t a1, uint64_t a2)
{
  sub_100302160(a1, a2, (void (*)(uint64_t, id, double, double))sub_1002E7118);
}

void sub_100302160(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id, double, double))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double (*v15)(char *, uint64_t);
  __n128 v16;
  uint64_t KeyPath;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  double *v27;
  id v28;
  uint64_t v29;
  void (*v30)(uint64_t, id, double, double);
  objc_super v31;
  unsigned __int8 v32;

  v30 = a3;
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v11);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v14 = v13;
  v15 = *(double (**)(char *, uint64_t))(v8 + 8);
  v16.n128_f64[0] = v15(v10, v7);
  ShelfLayoutContext.shelf.getter(v16);
  KeyPath = swift_getKeyPath(&unk_1006844F0);
  ReadOnlyLens.subscript.getter(KeyPath, v3);
  v18 = swift_release(KeyPath);
  v19 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v18);
  v20 = v32;
  v21 = ShelfLayoutContext.contentPageGrid.getter(v19);
  v22 = PageGrid.containerWidth.getter(v21);
  v23 = ((uint64_t (*)(char *, uint64_t))v15)(v10, v7);
  v24 = ShelfLayoutContext.traitCollection.getter(v23);
  v25 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v26 = (char *)objc_allocWithZone(v25);
  v27 = (double *)&v26[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v27 = v22;
  v27[1] = 1.79769313e308;
  *(_QWORD *)&v26[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v24;
  v31.receiver = v26;
  v31.super_class = v25;
  v28 = objc_msgSendSuper2(&v31, "init");
  v30(v20, v28, v12, v14);

}

void sub_10030234C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t, double);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t, double))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_1006844F0);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v15 = swift_release(KeyPath);
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v27.receiver = v22;
  v27.super_class = v21;
  v24 = objc_msgSendSuper2(&v27, "init");
  v25 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);

}

uint64_t sub_100302528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003029F8(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1002C2F50);
}

uint64_t sub_100302534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030255C(a1, a2, a3, (void (*)(char *, uint64_t))sub_100301AA8, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1002C2F50);
}

uint64_t sub_100302548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030255C(a1, a2, a3, (void (*)(char *, uint64_t))sub_100301D18, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1002C2F50);
}

uint64_t sub_10030255C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  double *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  void (*v26)(uint64_t *__return_ptr, uint64_t *);
  void (*v27)(char *, uint64_t);

  v26 = a5;
  v27 = a4;
  v25[0] = a2;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007FBC60);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  v27(v10, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_100011088((uint64_t)v13, &qword_1007FBC60);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v20 = sub_100302C24();
  __chkstk_darwin(v20);
  v25[-2] = v18;
  v21 = (uint64_t)sub_1002C1368(v26, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v23 = v21;
    else
      v23 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v22);
}

uint64_t sub_10030278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030255C(a1, a2, a3, (void (*)(char *, uint64_t))sub_100301F1C, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1002C2F50);
}

uint64_t sub_1003027A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003027B4(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1002D5C9C, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1002C2F50);
}

uint64_t sub_1003027B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, double, double), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  double *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  void (*v26)(uint64_t *__return_ptr, uint64_t *);
  void (*v27)(uint64_t, id, double, double);

  v26 = a5;
  v27 = a4;
  v25[0] = a2;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007FBC60);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  sub_100302160((uint64_t)v10, a3, v27);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_100011088((uint64_t)v13, &qword_1007FBC60);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v20 = sub_100302C24();
  __chkstk_darwin(v20);
  v25[-2] = v18;
  v21 = (uint64_t)sub_1002C1368(v26, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v23 = v21;
    else
      v23 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v22);
}

uint64_t sub_1003029E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003027B4(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1002E7118, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1002C2F50);
}

uint64_t sub_1003029F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  double *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  void (*v24)(uint64_t *__return_ptr, uint64_t *);

  v24 = a4;
  v23[1] = a2;
  v5 = type metadata accessor for ShelfLayoutContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007FBC60);
  __chkstk_darwin(v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ComponentPrefetchSizing(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[2] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v14);
  sub_10030234C((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_100011088((uint64_t)v11, &qword_1007FBC60);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  v18 = sub_100302C24();
  __chkstk_darwin(v18);
  v23[-2] = v16;
  v19 = (uint64_t)sub_1002C1368(v24, (uint64_t)&v23[-4], (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v21 = v19;
    else
      v21 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (!v22)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v19);
LABEL_6:
  v20 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v20);
}

double *sub_100302C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100684490);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v12 = swift_getKeyPath(&unk_1006844C0);
  ReadOnlyLens.subscript.getter(v12, v7);
  v13 = swift_release(v12);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
  v14 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v3, v0, v14);
  v16 = *(void (**)(char *, uint64_t))(v1 + 8);
  v16(v3, v0);
  v16(v6, v0);
  if ((v15 & 1) != 0)
    return _swiftEmptyArrayStorage;
  v17 = sub_10000DF3C(&qword_1007FBC68);
  ItemLayoutContext.typedModel<A>(as:)(&v26, v17, v17);
  if (!v27)
  {
    sub_100011088((uint64_t)&v26, (uint64_t *)&unk_100813F70);
    return _swiftEmptyArrayStorage;
  }
  sub_100010F3C(&v26, (uint64_t)v28);
  v18 = v29;
  v19 = v30;
  sub_100011064(v28, v29);
  v20 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v18, v19);
  if (!v20)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v28);
    return _swiftEmptyArrayStorage;
  }
  v21 = v20;
  v22 = sub_10000DF3C(&qword_1007F5840);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)&v26 = v23;
  specialized Array._endMutation()(v23);
  v24 = v26;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v28);
  return (double *)v24;
}

void (*sub_10030303C(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
  return sub_10001AD28;
}

uint64_t sub_10030309C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView)
                 + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_mediaContentView);
  sub_10000EF74();
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

id sub_100303148()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView];
  sub_1000B87D4();
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView];
  sub_10015CC74();
  v3 = &v1[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_initialLongPressLocation];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v1, "addSubview:", v2);
}

uint64_t sub_100303280()
{
  return type metadata accessor for AppEventCollectionViewCell(0);
}

uint64_t type metadata accessor for AppEventCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100807028;
  if (!qword_100807028)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppEventCollectionViewCell);
  return result;
}

uint64_t sub_1003032C4()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView)+ OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
}

void sub_1003032F4(void *a1)
{
  sub_10015D208((uint64_t)a1);

}

uint64_t (*sub_10030333C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10030303C(v2);
  return sub_10001B55C;
}

void sub_100303380()
{
  sub_1005AF28C();
}

id sub_1003033A8()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView)
                           + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView));
}

id sub_1003033CC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView);
}

double sub_1003033E0()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView)+ OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_formattedDateView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppEventView(0);
  v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetHeight(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_100303468()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_formattedDateView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppEventView(0);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_1003034F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

double sub_100303544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10030359C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1003035E4(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002BFCD0);
}

uint64_t sub_100303600(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002BF714);
}

uint64_t sub_10030360C(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002BFA4C);
}

uint64_t sub_100303618(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002BFA60);
}

uint64_t sub_100303624(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002BFA74);
}

uint64_t sub_100303630(uint64_t a1, uint64_t a2)
{
  return sub_100303720(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1002BFCBC);
}

uint64_t sub_10030363C(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002BFE4C);
}

uint64_t sub_100303648(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002BFFC8);
}

uint64_t sub_100303654(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C0144);
}

uint64_t sub_100303660(uint64_t a1, uint64_t a2)
{
  return sub_100303720(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1002C0158);
}

uint64_t sub_10030366C(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002C016C);
}

uint64_t sub_100303678(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C0180);
}

uint64_t sub_100303684(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C0194);
}

uint64_t sub_100303690(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C01A8);
}

uint64_t sub_10030369C(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C0414);
}

uint64_t sub_1003036A8(uint64_t a1, uint64_t a2)
{
  return sub_100303DEC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1002B8CD4);
}

uint64_t sub_1003036B4(uint64_t a1, uint64_t a2)
{
  return sub_100303DEC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1002B8CE8);
}

uint64_t sub_1003036C0(uint64_t a1, uint64_t a2)
{
  return sub_100303720(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1002C0428);
}

uint64_t sub_1003036CC(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002C043C);
}

uint64_t sub_1003036D8(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002C05A4);
}

uint64_t sub_1003036E4(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C0778);
}

uint64_t sub_1003036F0(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C078C);
}

uint64_t sub_1003036FC(uint64_t a1, uint64_t a2)
{
  return sub_100303DEC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1002B8CFC);
}

uint64_t sub_100303708(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002C0974);
}

uint64_t sub_100303714(uint64_t a1, uint64_t a2)
{
  return sub_100303720(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1002C0AF8);
}

uint64_t sub_100303720(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, char *, _QWORD *, id))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t KeyPath;
  id v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, char *, char *, _QWORD *, id);
  _QWORD v30[5];

  v29 = a3;
  v24 = a2;
  v28 = type metadata accessor for Shelf.PresentationHints(0);
  v27 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F7D40);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v16);
  ReadOnlyLens.value.getter(v30, v12);
  v17.n128_f64[0] = (*(double (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  swift_dynamicCastClassUnconditional(v24, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  KeyPath = swift_getKeyPath(&unk_100684460);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  v21 = sub_1000826AC();
  v29(v30, v11, v7, v4, v21);
  v22 = swift_unknownObjectRelease(v21);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v27 + 8))(v4, v28, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v30);
}

uint64_t sub_10030394C(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002BF560);
}

uint64_t sub_100303958(uint64_t a1, uint64_t a2)
{
  return sub_100303964(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1002C0C7C);
}

uint64_t sub_100303964(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, char *, _QWORD *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t KeyPath;
  id v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, char *, char *, _QWORD *);
  _QWORD v30[5];

  v29 = a3;
  v24 = a2;
  v28 = type metadata accessor for Shelf.PresentationHints(0);
  v27 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F7D40);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v16);
  ReadOnlyLens.value.getter(v30, v12);
  v17.n128_f64[0] = (*(double (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  swift_dynamicCastClassUnconditional(v24, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  KeyPath = swift_getKeyPath(&unk_100684460);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  v21 = sub_1000826AC();
  v29(v30, v11, v7, v4);
  v22 = swift_unknownObjectRelease(v21);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v27 + 8))(v4, v28, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v30);
}

uint64_t sub_100303B8C(uint64_t a1, uint64_t a2)
{
  return sub_100303B98(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1002C0E08);
}

uint64_t sub_100303B98(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, uint64_t, char *, _QWORD *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t KeyPath;
  id v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, char *, uint64_t, char *, _QWORD *);
  _QWORD v31[5];

  v30 = a3;
  v25 = a2;
  v29 = type metadata accessor for Shelf.PresentationHints(0);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F7D40);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v16);
  ReadOnlyLens.value.getter(v31, v12);
  v17.n128_f64[0] = (*(double (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(v25, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  KeyPath = swift_getKeyPath(&unk_100684460);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  v22 = sub_1000826AC();
  v30(v31, v11, v19, v7, v4);
  v23 = swift_unknownObjectRelease(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v4, v29, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_100303DC8(uint64_t a1, uint64_t a2)
{
  return sub_100303DEC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1002B8D10);
}

uint64_t sub_100303DD4(uint64_t a1, uint64_t a2)
{
  return sub_100303DEC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1002B8D24);
}

uint64_t sub_100303DE0(uint64_t a1, uint64_t a2)
{
  return sub_100303DEC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1002B8EB0);
}

uint64_t sub_100303DEC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t KeyPath;
  id v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, char *, uint64_t, char *, _QWORD *, id);
  _QWORD v31[5];

  v30 = a3;
  v25 = a2;
  v29 = type metadata accessor for Shelf.PresentationHints(0);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F7D40);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v16);
  ReadOnlyLens.value.getter(v31, v12);
  v17.n128_f64[0] = (*(double (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(v25, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  KeyPath = swift_getKeyPath(&unk_100684460);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  v22 = sub_1000826AC();
  v30(v31, v11, v19, v7, v4, v22);
  v23 = swift_unknownObjectRelease(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v4, v29, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_100304020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E99C(&qword_100807058, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_100684388);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_10030408C(uint64_t a1@<X8>)
{
  sub_10030234C(a1);
}

uint64_t sub_1003040A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003029F8(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100123014);
}

uint64_t sub_1003040BC()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E99C(&qword_100807060, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_1006843F0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100304104(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C(&qword_100807060, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_1006843F0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_100304164(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E99C(&qword_100807060, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_1006843F0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001B55C;
}

uint64_t sub_1003041E0()
{
  return sub_10000E99C(&qword_100807038, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_10068429C);
}

uint64_t sub_10030420C()
{
  return sub_10000E99C(&qword_100807040, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_1006842CC);
}

uint64_t sub_100304238(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_10000E99C(&qword_100807048, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_100684328);
  a1[2] = sub_10000E99C(&qword_100807050, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_100684358);
  a1[3] = sub_10000E99C(&qword_1007F54B0, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_10068430C);
  result = sub_10000E99C(&qword_100807058, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_100684388);
  a1[4] = result;
  return result;
}

uint64_t sub_1003042D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

char *sub_100304304()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _OWORD v19[2];
  objc_super v20[2];
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_itemLayoutContext];
  v7 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = objc_allocWithZone((Class)type metadata accessor for AppEventView(0));
  v9 = v0;
  v10 = objc_msgSend(v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView] = v10;

  v21.receiver = v9;
  v21.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension26AppEventCollectionViewCell_appEventView;
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  v13 = v11;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x746E657645707041, 0xEC00000077656956, v20, v19);
  sub_100011088((uint64_t)v19, &qword_1007F6E90);
  sub_100011088((uint64_t)v20, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = objc_msgSend(v13, "contentView");
  objc_msgSend(v14, "setClipsToBounds:", 0);

  v15 = objc_msgSend(v13, "contentView");
  objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v16 = objc_msgSend(v13, "contentView");
  v17 = *(id *)&v11[v12];
  objc_msgSend(v16, "addSubview:", v17);

  return v13;
}

uint64_t sub_100304550(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)&v1[qword_100807068];
  if (v3)
  {
    v4 = *(id *)&v1[qword_100807068];
    if (a1)
      goto LABEL_3;
LABEL_6:
    v9 = v3;
    LOBYTE(v6) = 0;
    goto LABEL_7;
  }
  v4 = objc_msgSend(v1, "contentView");
  if (!a1)
    goto LABEL_6;
LABEL_3:
  v5 = v3;
  v6 = objc_msgSend(a1, "superview");
  if (v6)
  {
    sub_10000EF74();
    v7 = v4;
    v8 = v6;
    LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

  }
LABEL_7:

  return v6 & 1;
}

void sub_100304624(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_100304B40(0);

}

void sub_10030467C(double *a1)
{
  uint64_t v1;
  void *Strong;
  id v4;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + qword_100853C58);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "setFrame:", *a1, a1[1], a1[2], a1[3]);

  }
}

void sub_1003046E0(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id Strong;

  v3 = *(void **)(v1 + qword_100807068);
  *(_QWORD *)(v1 + qword_100807068) = a1;

  Strong = (id)swift_unknownObjectWeakLoadStrong(v1 + qword_100853C58);
  v4 = a1;
  if (Strong)
  {
    objc_msgSend(v4, "addSubview:", Strong);

  }
}

id sub_10030475C(char *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  objc_class *ObjectType;
  char *v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  swift_unknownObjectWeakInit(&a1[qword_100853C58], 0);
  v12 = &a1[qword_100853C60];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&a1[qword_100807068] = 0;
  v14.receiver = a1;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, "initWithFrame:", a3, a4, a5, a6);
}

void sub_1003047FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + qword_100853C58);

}

void sub_100304828(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1 + qword_100853C58);

}

uint64_t type metadata accessor for FramedVideoCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100807098;
  if (!qword_100807098)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FramedVideoCollectionViewCell);
  return result;
}

uint64_t sub_10030489C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "\b";
  v2[1] = &unk_100684578;
  v2[2] = &unk_100684590;
  return swift_initClassMetadata2(a1, 256, 3, v2, a1 + 312);
}

uint64_t sub_1003048F0()
{
  return type metadata accessor for FramedVideoCollectionViewCell(0);
}

uint64_t sub_1003048F8()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + qword_100853C58);
}

void sub_100304908(void *a1)
{
  sub_100304B40((uint64_t)a1);

}

void (*sub_10030492C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + qword_100853C58);
  return sub_10030496C;
}

void sub_10030496C(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_100304B40((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_100304B40(*a1);
    v3 = v4;
  }

}

uint64_t sub_1003049C4()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E99C(&qword_100807238, type metadata accessor for FramedVideoCollectionViewCell, (uint64_t)&unk_100684618);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100304A0C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C(&qword_100807238, type metadata accessor for FramedVideoCollectionViewCell, (uint64_t)&unk_100684618);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_100304A6C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E99C(&qword_100807238, type metadata accessor for FramedVideoCollectionViewCell, (uint64_t)&unk_100684618);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001DF34;
}

uint64_t sub_100304AE8()
{
  return sub_10000E99C(&qword_100807228, type metadata accessor for FramedVideoCollectionViewCell, (uint64_t)&unk_1006845A8);
}

uint64_t sub_100304B14()
{
  return sub_10000E99C(&qword_100807230, type metadata accessor for FramedVideoCollectionViewCell, (uint64_t)&unk_1006845D8);
}

void sub_100304B40(uint64_t a1)
{
  char *v1;
  char *v3;
  void *Strong;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v3 = &v1[qword_100853C58];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[qword_100853C58]);
  v5 = Strong;
  if (Strong)
  {
    sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    Strong = v5;
  }
  v6 = sub_100304550(Strong);

  if ((v6 & 1) != 0)
  {
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
  }
  v9 = swift_unknownObjectWeakAssign(v3, a1);
  v10 = swift_unknownObjectWeakLoadStrong(v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = *(void **)&v1[qword_100807068];
    if (v12)
    {
      v14 = *(id *)&v1[qword_100807068];
    }
    else
    {
      v14 = objc_msgSend(v1, "contentView");
      v12 = 0;
    }
    v13 = v12;
    objc_msgSend(v14, "addSubview:", v11);
    objc_msgSend(v1, "setNeedsLayout");

  }
}

uint64_t sub_100304C78()
{
  uint64_t v0;
  uint64_t *v1;
  __n128 v2;

  v0 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464(v0, qword_100853C68);
  v1 = (uint64_t *)sub_1000117A8(v0, (uint64_t)qword_100853C68);
  v2.n128_u64[0] = 29.0;
  return sub_100304CDC(0, v1, v2);
}

uint64_t sub_100304CC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  a3.n128_u64[0] = 29.0;
  return sub_100304CDC(a1, a2, a3);
}

uint64_t sub_100304CD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  a3.n128_u64[0] = 0x4045000000000000;
  return sub_100304CDC(a1, a2, a3);
}

uint64_t sub_100304CDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  double v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD *v23;
  void (*v24)(_QWORD *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  _QWORD *v26;
  char *v27;
  int *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[3];
  uint64_t v43;
  void *v44;

  v3 = a3.n128_f64[0];
  v6 = type metadata accessor for FontSource(0, a3);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for StaticDimension(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v41 = (char *)&v35 - v12;
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v37 = (uint64_t)a1;
  }
  else
  {
    sub_1000117FC();
    v37 = static UIColor.appTint.getter();
  }
  v17 = qword_1007F20F8;
  v18 = a1;
  if (v17 != -1)
    swift_once(&qword_1007F20F8, sub_1004135D4);
  v19 = sub_1000117A8(v13, (uint64_t)qword_1008547E8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20(v16, v19, v13);
  v20(v9, v19, v13);
  v21 = enum case for FontSource.useCase(_:);
  v36 = v14;
  v22 = (void (*)(char *, uint64_t, uint64_t))v7[13];
  v22(v9, enum case for FontSource.useCase(_:), v6);
  v43 = v6;
  v44 = &protocol witness table for FontSource;
  v23 = sub_1000117C0(v42);
  v35 = v16;
  v24 = (void (*)(_QWORD *, char *, uint64_t))v7[2];
  v24(v23, v9, v6);
  StaticDimension.init(_:scaledLike:)(v42, v3);
  v25 = (void (*)(char *, uint64_t))v7[1];
  v25(v9, v6);
  v20(v9, v19, v13);
  v22(v9, v21, v6);
  v43 = v6;
  v44 = &protocol witness table for FontSource;
  v26 = sub_1000117C0(v42);
  v24(v26, v9, v6);
  v27 = v39;
  StaticDimension.init(_:scaledLike:)(v42, 0.0);
  v25(v9, v6);
  v28 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v29 = (uint64_t *)((char *)a2 + v28[12]);
  v30 = type metadata accessor for ZeroDimension(0);
  v29[3] = v30;
  v29[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v29);
  static ZeroDimension.zero.getter();
  v31 = (uint64_t *)((char *)a2 + v28[13]);
  v31[3] = v30;
  v31[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v31);
  static ZeroDimension.zero.getter();
  a2[1] = 0;
  a2[2] = 0;
  *a2 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))((char *)a2 + v28[6], v35, v13);
  *(uint64_t *)((char *)a2 + v28[7]) = 0;
  *(_DWORD *)((char *)a2 + v28[8]) = 1077936128;
  v32 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v33 = v40;
  v32((char *)a2 + v28[9], v41, v40);
  result = ((uint64_t (*)(char *, char *, uint64_t))v32)((char *)a2 + v28[10], v27, v33);
  *(_DWORD *)((char *)a2 + v28[11]) = 1098907648;
  return result;
}

uint64_t sub_10030501C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  void *v43;
  __int128 v44;
  uint64_t v45;
  void *v46;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for StaticDimension(0);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v40 = (char *)&v30 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853C80);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853C80);
  sub_1000117FC();
  v36 = static UIColor.primaryText.getter();
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v34 = v15;
  v35 = v14;
  if (qword_1007F20F8 != -1)
    swift_once(&qword_1007F20F8, sub_1004135D4);
  v16 = sub_1000117A8(v8, (uint64_t)qword_1008547E8);
  v33 = v9;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, v16, v8);
  v17(v4, v16, v8);
  v30 = v8;
  v18 = enum case for FontSource.useCase(_:);
  v31 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v31(v4, enum case for FontSource.useCase(_:), v1);
  v45 = v1;
  v46 = &protocol witness table for FontSource;
  v19 = sub_1000117C0(&v44);
  v32 = v11;
  v20 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v20(v19, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v44, 42.0);
  v21 = (void (*)(char *, uint64_t))v2[1];
  v21(v4, v1);
  v22 = v30;
  v17(v4, v16, v30);
  v31(v4, v18, v1);
  v45 = v1;
  v46 = &protocol witness table for FontSource;
  v23 = sub_1000117C0(&v44);
  v20(v23, v4, v1);
  v24 = v38;
  StaticDimension.init(_:scaledLike:)(&v44, 2.0);
  v21(v4, v1);
  v25 = type metadata accessor for ZeroDimension(0);
  v45 = v25;
  v46 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v44);
  static ZeroDimension.zero.getter();
  v42 = v25;
  v43 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v41);
  static ZeroDimension.zero.getter();
  v26 = v35;
  *(_QWORD *)v13 = v36;
  *((_QWORD *)v13 + 1) = v26;
  *((_QWORD *)v13 + 2) = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v13[v12[6]], v32, v22);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1077936128;
  v27 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v28 = v39;
  v27(&v13[v12[9]], v40, v39);
  v27(&v13[v12[10]], v24, v28);
  *(_DWORD *)&v13[v12[11]] = 1098907648;
  sub_100010F3C(&v44, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v41, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_10030539C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StaticDimension(0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v35 = (char *)&v27 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853C98);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853C98);
  sub_1000117FC();
  v31 = static UIColor.primaryText.getter();
  if (qword_1007F2100 != -1)
    swift_once(&qword_1007F2100, sub_1004135EC);
  v14 = sub_1000117A8(v8, (uint64_t)qword_100854800);
  v30 = v9;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  v15(v4, v14, v8);
  v27 = v8;
  v16 = enum case for FontSource.useCase(_:);
  v28 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v28(v4, enum case for FontSource.useCase(_:), v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v17 = sub_1000117C0(&v39);
  v29 = v11;
  v18 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v18(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v39, 36.0);
  v19 = (void (*)(char *, uint64_t))v2[1];
  v19(v4, v1);
  v20 = v27;
  v15(v4, v14, v27);
  v28(v4, v16, v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v21 = sub_1000117C0(&v39);
  v18(v21, v4, v1);
  v22 = v33;
  StaticDimension.init(_:scaledLike:)(&v39, 16.0);
  v19(v4, v1);
  v23 = type metadata accessor for ZeroDimension(0);
  v40 = v23;
  v41 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v39);
  static ZeroDimension.zero.getter();
  v37 = v23;
  v38 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v36);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v13[v12[6]], v29, v20);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v24 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v25 = v34;
  v24(&v13[v12[9]], v35, v34);
  v24(&v13[v12[10]], v22, v25);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v39, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v36, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_1003056FC@<X0>(void *a1@<X0>, char *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double (*v21)(char *, uint64_t, uint64_t);
  __n128 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  void (*v33)(_QWORD *, char *, uint64_t);
  void (*v34)(char *, uint64_t);
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(_QWORD *, char *, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  __int128 v64;
  uint64_t v65;
  void *v66;

  v52 = a2;
  v4 = type metadata accessor for FontSource(0, a3);
  v53 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for StaticDimension(0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v60 = (char *)&v50 - v9;
  v10 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - v18;
  if (qword_1007F2120 != -1)
    swift_once(&qword_1007F2120, sub_100413650);
  v20 = sub_1000117A8(v13, (uint64_t)qword_100854860);
  v55 = v14;
  v21 = *(double (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v59 = v19;
  v22.n128_f64[0] = v21(v19, v20, v13);
  v23 = sub_100305B1C(v12, v22);
  v24 = UITraitCollection.isSizeClassCompact.getter(v23);
  v25 = sub_1000117FC();
  v54 = v12;
  if ((v24 & 1) != 0)
    v26 = static UIColor.primaryText.getter();
  else
    v26 = static UIColor.secondaryText.getter(v25);
  v51 = v26;
  v27 = v59;
  v21(v16, (uint64_t)v59, v13);
  v28 = sub_100309684(a1);
  v21(v6, (uint64_t)v27, v13);
  v29 = enum case for FontSource.useCase(_:);
  v50 = v16;
  v30 = v53;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 104);
  v31(v6, enum case for FontSource.useCase(_:), v4);
  v65 = v4;
  v66 = &protocol witness table for FontSource;
  v32 = sub_1000117C0(&v64);
  v33 = *(void (**)(_QWORD *, char *, uint64_t))(v30 + 16);
  v33(v32, v6, v4);
  StaticDimension.init(_:scaledLike:)(&v64, v28);
  v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v6, v4);
  v35 = v59;
  v21(v6, (uint64_t)v59, v13);
  v31(v6, v29, v4);
  v65 = v4;
  v66 = &protocol witness table for FontSource;
  v36 = sub_1000117C0(&v64);
  v33(v36, v6, v4);
  v37 = v57;
  StaticDimension.init(_:scaledLike:)(&v64, 0.0);
  v34(v6, v4);
  v38 = (uint64_t)v54;
  v39 = (char *)v54 + v10[9];
  v40 = v58;
  v65 = v58;
  v66 = &protocol witness table for StaticDimension;
  v41 = sub_1000117C0(&v64);
  v42 = v56;
  v43 = *(void (**)(_QWORD *, char *, uint64_t))(v56 + 16);
  v43(v41, v39, v40);
  v44 = v38 + v10[10];
  v62 = v40;
  v63 = &protocol witness table for StaticDimension;
  v45 = sub_1000117C0(&v61);
  v43(v45, (char *)v44, v40);
  sub_100309B74(v38);
  v46 = v55;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v13);
  v47 = v52;
  *((_QWORD *)v52 + 1) = 0;
  *((_QWORD *)v47 + 2) = 0;
  *(_QWORD *)v47 = v51;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v47[v10[6]], v50, v13);
  *(_QWORD *)&v47[v10[7]] = 0;
  *(_DWORD *)&v47[v10[8]] = 1098907648;
  v48 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v48(&v47[v10[9]], v60, v40);
  v48(&v47[v10[10]], v37, v40);
  *(_DWORD *)&v47[v10[11]] = 0;
  sub_100010F3C(&v64, (uint64_t)&v47[v10[12]]);
  return sub_100010F3C(&v61, (uint64_t)&v47[v10[13]]);
}

uint64_t sub_100305B1C@<X0>(uint64_t *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  char *v23;
  int *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  _QWORD v38[3];
  uint64_t v39;
  void *v40;

  v3 = type metadata accessor for FontSource(0, a2);
  v4 = *(_QWORD **)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for StaticDimension(0);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v37 = (char *)&v31 - v9;
  v10 = type metadata accessor for FontUseCase(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000117FC();
  v33 = static UIColor.secondaryText.getter(v14);
  if (qword_1007F2118 != -1)
    swift_once(&qword_1007F2118, sub_100413634);
  v15 = sub_1000117A8(v10, (uint64_t)qword_100854848);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16(v13, v15, v10);
  v16(v6, v15, v10);
  v17 = enum case for FontSource.useCase(_:);
  v32 = v11;
  v18 = (void (*)(char *, uint64_t, uint64_t))v4[13];
  v18(v6, enum case for FontSource.useCase(_:), v3);
  v39 = v3;
  v40 = &protocol witness table for FontSource;
  v19 = sub_1000117C0(v38);
  v31 = v13;
  v20 = (void (*)(_QWORD *, char *, uint64_t))v4[2];
  v20(v19, v6, v3);
  StaticDimension.init(_:scaledLike:)(v38, 28.0);
  v21 = (void (*)(char *, uint64_t))v4[1];
  v21(v6, v3);
  v16(v6, v15, v10);
  v18(v6, v17, v3);
  v39 = v3;
  v40 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(v38);
  v20(v22, v6, v3);
  v23 = v35;
  StaticDimension.init(_:scaledLike:)(v38, 0.0);
  v21(v6, v3);
  v24 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v25 = (uint64_t *)((char *)a1 + v24[12]);
  v26 = type metadata accessor for ZeroDimension(0);
  v25[3] = v26;
  v25[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v25);
  static ZeroDimension.zero.getter();
  v27 = (uint64_t *)((char *)a1 + v24[13]);
  v27[3] = v26;
  v27[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v27);
  static ZeroDimension.zero.getter();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)a1 + v24[6], v31, v10);
  *(uint64_t *)((char *)a1 + v24[7]) = 0;
  *(_DWORD *)((char *)a1 + v24[8]) = 1098907648;
  v28 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v29 = v36;
  v28((char *)a1 + v24[9], v37, v36);
  result = ((uint64_t (*)(char *, char *, uint64_t))v28)((char *)a1 + v24[10], v23, v29);
  *(_DWORD *)((char *)a1 + v24[11]) = 0;
  return result;
}

uint64_t sub_100305E38(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for StaticDimension(0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v36 = (char *)&v28 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853CB0);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853CB0);
  v14 = sub_1000117FC();
  v32 = static UIColor.secondaryText.getter(v14);
  if (qword_1007F2108 != -1)
    swift_once(&qword_1007F2108, sub_100413604);
  v15 = sub_1000117A8(v8, (uint64_t)qword_100854818);
  v31 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v28 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v29 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v29(v4, enum case for FontSource.useCase(_:), v1);
  v41 = v1;
  v42 = &protocol witness table for FontSource;
  v18 = sub_1000117C0(&v40);
  v30 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v40, 39.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v28;
  v16(v4, v15, v28);
  v29(v4, v17, v1);
  v41 = v1;
  v42 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v40);
  v19(v22, v4, v1);
  v23 = v34;
  StaticDimension.init(_:scaledLike:)(&v40, 5.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v40);
  static ZeroDimension.zero.getter();
  v38 = v24;
  v39 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v37);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v13[v12[6]], v30, v21);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v25 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v26 = v35;
  v25(&v13[v12[9]], v36, v35);
  v25(&v13[v12[10]], v23, v26);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v40, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v37, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_1003061A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  double v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  _QWORD *v25;
  void (*v26)(_QWORD *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  __n128 v33;
  uint64_t v34;
  int *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  __int128 v49;
  uint64_t v50;
  void *v51;

  v5 = type metadata accessor for FontSource(0, a3);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for StaticDimension(0);
  v42 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v45 = (char *)&v39 - v11;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - v17;
  if (qword_1007F2120 != -1)
    swift_once(&qword_1007F2120, sub_100413650);
  v19 = sub_1000117A8(v12, (uint64_t)qword_100854860);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20(v18, v19, v12);
  v21 = sub_100309684(a1);
  v22 = sub_1000117FC();
  v41 = static UIColor.primaryText.getter(v22);
  v20(v15, (uint64_t)v18, v12);
  v20(v8, (uint64_t)v18, v12);
  v23 = enum case for FontSource.useCase(_:);
  v40 = v15;
  v24 = (void (*)(char *, uint64_t, uint64_t))v6[13];
  v24(v8, enum case for FontSource.useCase(_:), v5);
  v50 = v5;
  v51 = &protocol witness table for FontSource;
  v25 = sub_1000117C0(&v49);
  v39 = v13;
  v26 = (void (*)(_QWORD *, char *, uint64_t))v6[2];
  v26(v25, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v49, v21);
  v27 = (void (*)(char *, uint64_t))v6[1];
  v27(v8, v5);
  v20(v8, (uint64_t)v18, v12);
  v24(v8, v23, v5);
  v50 = v5;
  v51 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(&v49);
  v26(v28, v8, v5);
  v29 = v43;
  StaticDimension.init(_:scaledLike:)(&v49, 16.0);
  v27(v8, v5);
  v30 = type metadata accessor for ZeroDimension(0);
  v50 = v30;
  v51 = &protocol witness table for ZeroDimension;
  v31 = sub_1000117C0(&v49);
  static ZeroDimension.zero.getter(v31);
  v47 = v30;
  v48 = &protocol witness table for ZeroDimension;
  v32 = sub_1000117C0(&v46);
  v33 = static ZeroDimension.zero.getter(v32);
  v34 = v39;
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v18, v12, v33);
  *a2 = v41;
  v35 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)a2 + v35[6], v40, v12);
  *(uint64_t *)((char *)a2 + v35[7]) = 0;
  *(_DWORD *)((char *)a2 + v35[8]) = 1090519040;
  v36 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v37 = v44;
  v36((char *)a2 + v35[9], v45, v44);
  v36((char *)a2 + v35[10], v29, v37);
  *(_DWORD *)((char *)a2 + v35[11]) = 0;
  sub_100010F3C(&v49, (uint64_t)a2 + v35[12]);
  return sub_100010F3C(&v46, (uint64_t)a2 + v35[13]);
}

uint64_t sub_100306524(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  uint64_t v34;
  void *v35;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  v26 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v27 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v29 = (char *)&v24 - v8;
  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853CC8);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853CC8);
  v14 = sub_1000117FC();
  v25 = static UIColor.secondaryText.getter(v14);
  if (qword_1007F2110 != -1)
    swift_once(&qword_1007F2110, sub_10041361C);
  v15 = sub_1000117A8(v9, (uint64_t)qword_100854830);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16(v28, v15, v9);
  v16(v4, v15, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v34 = v1;
  v35 = &protocol witness table for FontSource;
  v17 = sub_1000117C0(&v33);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v33, 22.0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v18 = sub_1000117A8(v5, (uint64_t)qword_100856150);
  v20 = v26;
  v19 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v27, v18, v5);
  v21 = type metadata accessor for ZeroDimension(0);
  v34 = v21;
  v35 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v33);
  static ZeroDimension.zero.getter();
  v31 = v21;
  v32 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v30);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12[6]], v28, v9);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v22 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v22(&v13[v12[9]], v29, v5);
  v22(&v13[v12[10]], v19, v5);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v33, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v30, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100306850(uint64_t a1, __n128 a2)
{
  return sub_100307330(a2, a1, qword_100853CE0, &qword_1007F2A40, (uint64_t)qword_100856210, (uint64_t)sub_10042D424);
}

uint64_t sub_100306874(uint64_t a1, __n128 a2)
{
  return sub_100307330(a2, a1, qword_100853CF8, &qword_1007F2A40, (uint64_t)qword_100856210, (uint64_t)sub_10042D424);
}

uint64_t sub_100306898(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StaticDimension(0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v35 = (char *)&v27 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853D10);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853D10);
  sub_1000117FC();
  v31 = static UIColor.primaryText.getter();
  if (qword_1007F2130 != -1)
    swift_once(&qword_1007F2130, sub_100413688);
  v14 = sub_1000117A8(v8, (uint64_t)qword_100854890);
  v30 = v9;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  v15(v4, v14, v8);
  v27 = v8;
  v16 = enum case for FontSource.useCase(_:);
  v28 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v28(v4, enum case for FontSource.useCase(_:), v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v17 = sub_1000117C0(&v39);
  v29 = v11;
  v18 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v18(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v39, 30.0);
  v19 = (void (*)(char *, uint64_t))v2[1];
  v19(v4, v1);
  v20 = v27;
  v15(v4, v14, v27);
  v28(v4, v16, v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v21 = sub_1000117C0(&v39);
  v18(v21, v4, v1);
  v22 = v33;
  StaticDimension.init(_:scaledLike:)(&v39, 34.0);
  v19(v4, v1);
  v23 = type metadata accessor for ZeroDimension(0);
  v40 = v23;
  v41 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v39);
  static ZeroDimension.zero.getter();
  v37 = v23;
  v38 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v36);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v13[v12[6]], v29, v20);
  *(_QWORD *)&v13[v12[7]] = 0x3FE8A3D70A3D70A4;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v24 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v25 = v34;
  v24(&v13[v12[9]], v35, v34);
  v24(&v13[v12[10]], v22, v25);
  *(_DWORD *)&v13[v12[11]] = 1102053376;
  sub_100010F3C(&v39, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v36, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100306C0C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4040000000000000;
  return sub_100306C30(a2, a1, qword_100853D28);
}

uint64_t sub_100306C20(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_100306C30(a2, a1, qword_100853D40);
}

uint64_t sub_100306C30(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  _QWORD *v22;
  void (*v23)(_QWORD *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  __int128 v42;
  uint64_t v43;
  void *v44;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for StaticDimension(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v36 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v38 = (char *)&v32 - v11;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v16, a3);
  v17 = (char *)sub_1000117A8((uint64_t)v16, (uint64_t)a3);
  sub_1000117FC();
  v34 = static UIColor.primaryText.getter();
  if (qword_1007F2128 != -1)
    swift_once(&qword_1007F2128, sub_10041366C);
  v18 = sub_1000117A8(v12, (uint64_t)qword_100854878);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19(v15, v18, v12);
  v19(v8, v18, v12);
  v20 = enum case for FontSource.useCase(_:);
  v33 = v13;
  v21 = (void (*)(char *, uint64_t, uint64_t))v6[13];
  v21(v8, enum case for FontSource.useCase(_:), v5);
  v43 = v5;
  v44 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v42);
  v32 = v15;
  v23 = (void (*)(_QWORD *, char *, uint64_t))v6[2];
  v23(v22, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v42, v3);
  v24 = (void (*)(char *, uint64_t))v6[1];
  v24(v8, v5);
  if (qword_1007F2108 != -1)
    swift_once(&qword_1007F2108, sub_100413604);
  v25 = sub_1000117A8(v12, (uint64_t)qword_100854818);
  v19(v8, v25, v12);
  v21(v8, v20, v5);
  v43 = v5;
  v44 = &protocol witness table for FontSource;
  v26 = sub_1000117C0(&v42);
  v23(v26, v8, v5);
  v27 = v36;
  StaticDimension.init(_:scaledLike:)(&v42, 0.0);
  v24(v8, v5);
  v28 = type metadata accessor for ZeroDimension(0);
  v43 = v28;
  v44 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v42);
  static ZeroDimension.zero.getter();
  v40 = v28;
  v41 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v39);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v17[v16[6]], v32, v12);
  *(_QWORD *)&v17[v16[7]] = 0;
  *(_DWORD *)&v17[v16[8]] = 1090519040;
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v30 = v37;
  v29(&v17[v16[9]], v38, v37);
  v29(&v17[v16[10]], v27, v30);
  *(_DWORD *)&v17[v16[11]] = 1102053376;
  sub_100010F3C(&v42, (uint64_t)&v17[v16[12]]);
  return sub_100010F3C(&v39, (uint64_t)&v17[v16[13]]);
}

uint64_t sub_100306FC0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4045000000000000;
  return sub_100306FD4(a2, a1, qword_100853D58);
}

uint64_t sub_100306FD4(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  __int128 v36;
  uint64_t v37;
  void *v38;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  v29 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v32 = (char *)&v27 - v12;
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v31 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v16, a3);
  v17 = (char *)sub_1000117A8((uint64_t)v16, (uint64_t)a3);
  sub_1000117FC();
  v28 = static UIColor.primaryText.getter();
  if (qword_1007F2128 != -1)
    swift_once(&qword_1007F2128, sub_10041366C);
  v18 = sub_1000117A8(v13, (uint64_t)qword_100854878);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19(v31, v18, v13);
  v19(v8, v18, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v37 = v5;
  v38 = &protocol witness table for FontSource;
  v20 = sub_1000117C0(&v36);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v20, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v36, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v21 = sub_1000117A8(v9, (uint64_t)qword_100856150);
  v23 = v29;
  v22 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v21, v9);
  v24 = type metadata accessor for ZeroDimension(0);
  v37 = v24;
  v38 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v36);
  static ZeroDimension.zero.getter();
  v34 = v24;
  v35 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v33);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = v28;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v17[v16[6]], v31, v13);
  *(_QWORD *)&v17[v16[7]] = 0;
  *(_DWORD *)&v17[v16[8]] = 1090519040;
  v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v25(&v17[v16[9]], v32, v9);
  v25(&v17[v16[10]], v22, v9);
  *(_DWORD *)&v17[v16[11]] = 1102053376;
  sub_100010F3C(&v36, (uint64_t)&v17[v16[12]]);
  return sub_100010F3C(&v33, (uint64_t)&v17[v16[13]]);
}

uint64_t sub_10030730C(uint64_t a1, __n128 a2)
{
  return sub_100307330(a2, a1, qword_100853D70, &qword_1007F2A00, (uint64_t)qword_100856150, (uint64_t)sub_10042D0F4);
}

uint64_t sub_100307330(__n128 a1, uint64_t a2, uint64_t *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;

  v29 = a6;
  v31 = a4;
  v32 = a5;
  v7 = type metadata accessor for FontSource(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticDimension(0);
  v33 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v34 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v36 = (char *)&v29 - v14;
  v15 = type metadata accessor for FontUseCase(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v18, a3);
  v19 = (char *)sub_1000117A8((uint64_t)v18, (uint64_t)a3);
  sub_1000117FC();
  v30 = static UIColor.primaryText.getter();
  if (qword_1007F2128 != -1)
    swift_once(&qword_1007F2128, sub_10041366C);
  v20 = sub_1000117A8(v15, (uint64_t)qword_100854878);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v21(v35, v20, v15);
  v21(v10, v20, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FontSource.useCase(_:), v7);
  v41 = v7;
  v42 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v40);
  (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v22, v10, v7);
  StaticDimension.init(_:scaledLike:)(&v40, 29.0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (*v31 != -1)
    swift_once(v31, v29);
  v23 = sub_1000117A8(v11, v32);
  v25 = v33;
  v24 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v23, v11);
  v26 = type metadata accessor for ZeroDimension(0);
  v41 = v26;
  v42 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v40);
  static ZeroDimension.zero.getter();
  v38 = v26;
  v39 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v37);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v19 + 1) = 0;
  *((_QWORD *)v19 + 2) = 0;
  *(_QWORD *)v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v19[v18[6]], v35, v15);
  *(_QWORD *)&v19[v18[7]] = 0;
  *(_DWORD *)&v19[v18[8]] = 1090519040;
  v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v27(&v19[v18[9]], v36, v11);
  v27(&v19[v18[10]], v24, v11);
  *(_DWORD *)&v19[v18[11]] = 1102053376;
  sub_100010F3C(&v40, (uint64_t)&v19[v18[12]]);
  return sub_100010F3C(&v37, (uint64_t)&v19[v18[13]]);
}

uint64_t sub_100307654(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4045000000000000;
  return sub_100307688(a2, a1, qword_100853D88);
}

uint64_t sub_100307668(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 12.0;
  return sub_100306FD4(a2, a1, qword_100853DA0);
}

uint64_t sub_100307678(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 12.0;
  return sub_100307688(a2, a1, qword_100853DB8);
}

uint64_t sub_100307688(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(_QWORD *, char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v39 = (char *)&v31 - v11;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v16, a3);
  v17 = (char *)sub_1000117A8((uint64_t)v16, (uint64_t)a3);
  sub_1000117FC();
  v35 = static UIColor.primaryText.getter();
  if (qword_1007F2128 != -1)
    swift_once(&qword_1007F2128, sub_10041366C);
  v18 = sub_1000117A8(v12, (uint64_t)qword_100854878);
  v34 = v13;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19(v15, v18, v12);
  v19(v8, v18, v12);
  v31 = v12;
  v20 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v6[13];
  v32(v8, enum case for FontSource.useCase(_:), v5);
  v44 = v5;
  v45 = &protocol witness table for FontSource;
  v21 = sub_1000117C0(&v43);
  v33 = v15;
  v22 = (void (*)(_QWORD *, char *, uint64_t))v6[2];
  v22(v21, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v43, v3);
  v23 = (void (*)(char *, uint64_t))v6[1];
  v23(v8, v5);
  v24 = v31;
  v19(v8, v18, v31);
  v32(v8, v20, v5);
  v44 = v5;
  v45 = &protocol witness table for FontSource;
  v25 = sub_1000117C0(&v43);
  v22(v25, v8, v5);
  v26 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 0.0);
  v23(v8, v5);
  v27 = type metadata accessor for ZeroDimension(0);
  v44 = v27;
  v45 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v43);
  static ZeroDimension.zero.getter();
  v41 = v27;
  v42 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v40);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v17[v16[6]], v33, v24);
  *(_QWORD *)&v17[v16[7]] = 0;
  *(_DWORD *)&v17[v16[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v17[v16[9]], v39, v38);
  v28(&v17[v16[10]], v26, v29);
  *(_DWORD *)&v17[v16[11]] = 1102053376;
  sub_100010F3C(&v43, (uint64_t)&v17[v16[12]]);
  return sub_100010F3C(&v40, (uint64_t)&v17[v16[13]]);
}

uint64_t sub_1003079F0(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853DD0);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853DD0);
  v14 = sub_1000117FC();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_1007F2138 != -1)
    swift_once(&qword_1007F2138, sub_1004136A0);
  v15 = sub_1000117A8(v8, (uint64_t)qword_1008548A8);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000117C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 19.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 5.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000117C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000117C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v40, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100307D4C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4040000000000000;
  return sub_10030812C(a2, a1, qword_100853DE8);
}

uint64_t sub_100307D60(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;

  v1 = type metadata accessor for FontSource(0, a1);
  v46 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticDimension(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464(v12, qword_100853E00);
  v45 = (int *)v12;
  v13 = (char *)sub_1000117A8(v12, (uint64_t)qword_100853E00);
  if (qword_1007F1240 != -1)
    swift_once(&qword_1007F1240, sub_1000FD548);
  v14 = (void *)qword_100851A50;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v43 = v16;
  v44 = v15;
  v17 = qword_1007F2148;
  v42 = v14;
  if (v17 != -1)
    swift_once(&qword_1007F2148, sub_1004136D0);
  v18 = sub_1000117A8(v8, (uint64_t)qword_1008548D8);
  v19 = v8;
  v38 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v19);
  v20(v3, v18, v19);
  v21 = enum case for FontSource.useCase(_:);
  v41 = v11;
  v22 = v46;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  v23(v3, enum case for FontSource.useCase(_:), v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v24 = sub_1000117C0(&v53);
  v39 = v9;
  v25 = *(void (**)(_QWORD *, char *, uint64_t))(v22 + 16);
  v25(v24, v3, v1);
  v40 = v7;
  StaticDimension.init(_:scaledLike:)(&v53, 56.0);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v3, v1);
  v27 = v38;
  v20(v3, v18, v38);
  v23(v3, v21, v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(&v53);
  v25(v28, v3, v1);
  v29 = v48;
  StaticDimension.init(_:scaledLike:)(&v53, 32.0);
  v26(v3, v1);
  v30 = type metadata accessor for ZeroDimension(0);
  v54 = v30;
  v55 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v53);
  static ZeroDimension.zero.getter();
  v51 = v30;
  v52 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v50);
  static ZeroDimension.zero.getter();
  v31 = v41;
  v32 = v44;
  v33 = v45;
  *(_QWORD *)v13 = v42;
  *((_QWORD *)v13 + 1) = v32;
  *((_QWORD *)v13 + 2) = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v13[v33[6]], v31, v27);
  *(_QWORD *)&v13[v33[7]] = 0;
  *(_DWORD *)&v13[v33[8]] = 1090519040;
  v34 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v35 = v49;
  v34(&v13[v33[9]], v40, v49);
  v34(&v13[v33[10]], v29, v35);
  *(_DWORD *)&v13[v33[11]] = 0;
  sub_100010F3C(&v53, (uint64_t)&v13[v33[12]]);
  return sub_100010F3C(&v50, (uint64_t)&v13[v33[13]]);
}

uint64_t sub_10030811C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0;
  return sub_10030812C(a2, a1, qword_100853E18);
}

uint64_t sub_10030812C(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  _QWORD *v28;
  void (*v29)(_QWORD *, char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  __int128 v57;
  uint64_t v58;
  void *v59;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v50 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for StaticDimension(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - v10;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464(v16, a3);
  v49 = (int *)v16;
  v17 = (char *)sub_1000117A8(v16, (uint64_t)a3);
  if (qword_1007F1240 != -1)
    swift_once(&qword_1007F1240, sub_1000FD548);
  v18 = (void *)qword_100851A50;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v47 = v20;
  v48 = v19;
  v21 = qword_1007F2140;
  v46 = v18;
  if (v21 != -1)
    swift_once(&qword_1007F2140, sub_1004136B8);
  v22 = sub_1000117A8(v12, (uint64_t)qword_1008548C0);
  v23 = v12;
  v42 = v12;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24(v15, v22, v23);
  v24(v7, v22, v23);
  v25 = enum case for FontSource.useCase(_:);
  v45 = v15;
  v26 = v50;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
  v27(v7, enum case for FontSource.useCase(_:), v5);
  v58 = v5;
  v59 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(&v57);
  v43 = v13;
  v29 = *(void (**)(_QWORD *, char *, uint64_t))(v26 + 16);
  v29(v28, v7, v5);
  v44 = v11;
  StaticDimension.init(_:scaledLike:)(&v57, 56.0);
  v30 = *(void (**)(char *, uint64_t))(v26 + 8);
  v30(v7, v5);
  v31 = v42;
  v24(v7, v22, v42);
  v27(v7, v25, v5);
  v58 = v5;
  v59 = &protocol witness table for FontSource;
  v32 = sub_1000117C0(&v57);
  v29(v32, v7, v5);
  v33 = v52;
  StaticDimension.init(_:scaledLike:)(&v57, v3);
  v30(v7, v5);
  v34 = type metadata accessor for ZeroDimension(0);
  v58 = v34;
  v59 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v57);
  static ZeroDimension.zero.getter();
  v55 = v34;
  v56 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v54);
  static ZeroDimension.zero.getter();
  v35 = v45;
  v36 = v48;
  v37 = v49;
  *(_QWORD *)v17 = v46;
  *((_QWORD *)v17 + 1) = v36;
  *((_QWORD *)v17 + 2) = v47;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v17[v37[6]], v35, v31);
  *(_QWORD *)&v17[v37[7]] = 0;
  *(_DWORD *)&v17[v37[8]] = 1090519040;
  v38 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v39 = v53;
  v38(&v17[v37[9]], v44, v53);
  v38(&v17[v37[10]], v33, v39);
  *(_DWORD *)&v17[v37[11]] = 0;
  sub_100010F3C(&v57, (uint64_t)&v17[v37[12]]);
  return sub_100010F3C(&v54, (uint64_t)&v17[v37[13]]);
}

uint64_t sub_1003084FC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;

  v1 = type metadata accessor for FontSource(0, a1);
  v46 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticDimension(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464(v12, qword_100853E30);
  v45 = (int *)v12;
  v13 = (char *)sub_1000117A8(v12, (uint64_t)qword_100853E30);
  if (qword_1007F1240 != -1)
    swift_once(&qword_1007F1240, sub_1000FD548);
  v14 = (void *)qword_100851A50;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v43 = v16;
  v44 = v15;
  v17 = qword_1007F2148;
  v42 = v14;
  if (v17 != -1)
    swift_once(&qword_1007F2148, sub_1004136D0);
  v18 = sub_1000117A8(v8, (uint64_t)qword_1008548D8);
  v19 = v8;
  v38 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v19);
  v20(v3, v18, v19);
  v21 = enum case for FontSource.useCase(_:);
  v41 = v11;
  v22 = v46;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  v23(v3, enum case for FontSource.useCase(_:), v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v24 = sub_1000117C0(&v53);
  v39 = v9;
  v25 = *(void (**)(_QWORD *, char *, uint64_t))(v22 + 16);
  v25(v24, v3, v1);
  v40 = v7;
  StaticDimension.init(_:scaledLike:)(&v53, 56.0);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v3, v1);
  v27 = v38;
  v20(v3, v18, v38);
  v23(v3, v21, v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(&v53);
  v25(v28, v3, v1);
  v29 = v48;
  StaticDimension.init(_:scaledLike:)(&v53, 0.0);
  v26(v3, v1);
  v30 = type metadata accessor for ZeroDimension(0);
  v54 = v30;
  v55 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v53);
  static ZeroDimension.zero.getter();
  v51 = v30;
  v52 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v50);
  static ZeroDimension.zero.getter();
  v31 = v41;
  v32 = v44;
  v33 = v45;
  *(_QWORD *)v13 = v42;
  *((_QWORD *)v13 + 1) = v32;
  *((_QWORD *)v13 + 2) = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v13[v33[6]], v31, v27);
  *(_QWORD *)&v13[v33[7]] = 0;
  *(_DWORD *)&v13[v33[8]] = 1090519040;
  v34 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v35 = v49;
  v34(&v13[v33[9]], v40, v49);
  v34(&v13[v33[10]], v29, v35);
  *(_DWORD *)&v13[v33[11]] = 0;
  sub_100010F3C(&v53, (uint64_t)&v13[v33[12]]);
  return sub_100010F3C(&v50, (uint64_t)&v13[v33[13]]);
}

uint64_t sub_1003088B4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;

  v1 = type metadata accessor for FontSource(0, a1);
  v46 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticDimension(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464(v12, qword_100853E48);
  v45 = (int *)v12;
  v13 = (char *)sub_1000117A8(v12, (uint64_t)qword_100853E48);
  if (qword_1007F1248 != -1)
    swift_once(&qword_1007F1248, sub_1000FD55C);
  v14 = (void *)qword_100851A58;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v43 = v16;
  v44 = v15;
  v17 = qword_1007F2150;
  v42 = v14;
  if (v17 != -1)
    swift_once(&qword_1007F2150, sub_100413768);
  v18 = sub_1000117A8(v8, (uint64_t)qword_1008548F0);
  v19 = v8;
  v38 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v19);
  v20(v3, v18, v19);
  v21 = enum case for FontSource.useCase(_:);
  v41 = v11;
  v22 = v46;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  v23(v3, enum case for FontSource.useCase(_:), v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v24 = sub_1000117C0(&v53);
  v39 = v9;
  v25 = *(void (**)(_QWORD *, char *, uint64_t))(v22 + 16);
  v25(v24, v3, v1);
  v40 = v7;
  StaticDimension.init(_:scaledLike:)(&v53, 26.0);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v3, v1);
  v27 = v38;
  v20(v3, v18, v38);
  v23(v3, v21, v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v28 = sub_1000117C0(&v53);
  v25(v28, v3, v1);
  v29 = v48;
  StaticDimension.init(_:scaledLike:)(&v53, 32.0);
  v26(v3, v1);
  v30 = type metadata accessor for ZeroDimension(0);
  v54 = v30;
  v55 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v53);
  static ZeroDimension.zero.getter();
  v51 = v30;
  v52 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v50);
  static ZeroDimension.zero.getter();
  v31 = v41;
  v32 = v44;
  v33 = v45;
  *(_QWORD *)v13 = v42;
  *((_QWORD *)v13 + 1) = v32;
  *((_QWORD *)v13 + 2) = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v13[v33[6]], v31, v27);
  *(_QWORD *)&v13[v33[7]] = 0;
  *(_DWORD *)&v13[v33[8]] = 1090519040;
  v34 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v35 = v49;
  v34(&v13[v33[9]], v40, v49);
  v34(&v13[v33[10]], v29, v35);
  *(_DWORD *)&v13[v33[11]] = 0;
  sub_100010F3C(&v53, (uint64_t)&v13[v33[12]]);
  return sub_100010F3C(&v50, (uint64_t)&v13[v33[13]]);
}

uint64_t sub_100308C6C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853E60);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853E60);
  v14 = sub_1000117FC();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_1007F2158 != -1)
    swift_once(&qword_1007F2158, sub_100413780);
  v15 = sub_1000117A8(v8, (uint64_t)qword_100854908);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000117C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 28.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 24.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000117C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000117C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v40, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100308FC8(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853E78);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853E78);
  v14 = sub_1000117FC();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_1007F2160 != -1)
    swift_once(&qword_1007F2160, sub_10041379C);
  v15 = sub_1000117A8(v8, (uint64_t)qword_100854920);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000117C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 40.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 16.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000117C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000117C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v40, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100309328(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100045464((uint64_t)v12, qword_100853E90);
  v13 = (char *)sub_1000117A8((uint64_t)v12, (uint64_t)qword_100853E90);
  v14 = sub_1000117FC();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_1007F2168 != -1)
    swift_once(&qword_1007F2168, sub_1004137B4);
  v15 = sub_1000117A8(v8, (uint64_t)qword_100854938);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000117C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 20.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 20.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000117C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000117C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010F3C(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010F3C(&v40, (uint64_t)&v13[v12[13]]);
}

double sub_100309684(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  objc_msgSend(a1, "displayScale");
  v3 = v2;
  v4 = 1.0 / v2;
  if (v2 < 3.0)
    v5 = 46.0;
  else
    v5 = 46.0 - v4;
  v6 = objc_msgSend(a1, "preferredContentSizeCategory");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
LABEL_18:

    v29 = 4.0;
    if (v3 > 2.0)
      v29 = 5.0;
    return v29 + v5;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
    goto LABEL_18;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
    goto LABEL_23;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) != 0)
  {
LABEL_23:

    return v5 + 3.0;
  }
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {
    swift_bridgeObjectRelease_n(v25, 2);
    goto LABEL_25;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  if ((v31 & 1) != 0)
  {
LABEL_25:

    v29 = 2.0;
    if (v3 <= 2.0)
      v29 = 1.0;
    return v29 + v5;
  }
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v34 = v33;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v37 = v35;
  if (v32 == v36 && v34 == v35)
  {
LABEL_30:
    swift_bridgeObjectRelease_n(v34, 2);
LABEL_32:

    return v5;
  }
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v35, 0);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v37);
  if ((v38 & 1) != 0)
    goto LABEL_32;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
  v41 = v40;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v44 = v42;
  if (v39 == v43 && v41 == v42)
  {
    swift_bridgeObjectRelease_n(v41, 2);
  }
  else
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v44);
    if ((v45 & 1) == 0)
    {
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
      v49 = v48;
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v52 = v50;
      if (v47 == v51 && v49 == v50)
      {
        swift_bridgeObjectRelease_n(v49, 2);
      }
      else
      {
        v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v51, v50, 0);
        swift_bridgeObjectRelease(v49);
        swift_bridgeObjectRelease(v52);
        if ((v53 & 1) == 0)
        {
          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
          v56 = v55;
          v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          v59 = v57;
          if (v54 == v58 && v56 == v57)
          {
            swift_bridgeObjectRelease_n(v56, 2);
          }
          else
          {
            v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v58, v57, 0);
            swift_bridgeObjectRelease(v56);
            swift_bridgeObjectRelease(v59);
            if ((v60 & 1) == 0)
            {
              v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryUnspecified);
              v34 = v62;
              v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
              v65 = v63;
              if (v61 != v64 || v34 != v63)
              {
                v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v34, v64, v63, 0);
                swift_bridgeObjectRelease(v34);
                swift_bridgeObjectRelease(v65);
                if ((v66 & 1) != 0)
                  goto LABEL_32;
                v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
                v34 = v68;
                v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
                v71 = v69;
                if (v67 != v70 || v34 != v69)
                {
                  _stringCompareWithSmolCheck(_:_:expecting:)(v67, v34, v70, v69, 0);
                  swift_bridgeObjectRelease(v34);
                  swift_bridgeObjectRelease(v71);
                  goto LABEL_32;
                }
              }
              goto LABEL_30;
            }
          }

          return v5 + -5.0;
        }
      }

      v29 = v4 + -5.0;
      return v29 + v5;
    }
  }

  v46 = 2.0;
  if (v3 <= 2.0)
    v46 = 3.0;
  return v5 - v46;
}

uint64_t sub_100309B74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100309BB0()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[56];

  v0 = sub_10000DF3C(&qword_1007F5848);
  inited = swift_initStackObject(v0, v12);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  v2 = (void *)ASKBuildTypeDebug;
  *(_QWORD *)(inited + 32) = ASKBuildTypeDebug;
  v3 = (void *)ASKBuildTypeConvergence;
  v4 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(inited + 40) = ASKBuildTypeConvergence;
  *(_QWORD *)(inited + 48) = v4;
  v5 = v2;
  v6 = v3;
  v7 = v4;
  sub_100172D84(inited);
  v9 = v8;
  swift_setDeallocating(inited);
  type metadata accessor for BuildType(0);
  swift_arrayDestroy(inited + 32, 3, v10);
  return v9;
}

uint64_t sub_100309C68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_1007F5840);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100671250;
  v8 = type metadata accessor for PromptActionDebugSetting();
  swift_allocObject(v8, 104, 7);
  swift_retain(a1);
  v9 = sub_1004A9118(0x6D69542074696157, 0xEF29636573282065, (uint64_t)sub_10030A360, a1, (uint64_t)sub_100309E84, 0);
  swift_release(a1);
  *(_QWORD *)(v7 + 32) = v9;
  swift_allocObject(v8, 104, 7);
  swift_retain(a1);
  v10 = sub_1004A9118(0xD00000000000001ELL, 0x8000000100643AD0, (uint64_t)sub_10030A380, a1, (uint64_t)sub_100309F20, 0);
  swift_release(a1);
  *(_QWORD *)(v7 + 40) = v10;
  v24 = v7;
  specialized Array._endMutation()(v11);
  v12 = v24;
  v13 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10066FE60;
  v14 = type metadata accessor for DebugSection();
  v15 = (_QWORD *)swift_allocObject(v14, 56, 7);
  v17 = UUID.init()(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15[2] = v18;
  v15[3] = v20;
  v15[4] = 0xD00000000000001ALL;
  v15[5] = 0x8000000100643AF0;
  v15[6] = v12;
  *(_QWORD *)(v13 + 32) = v15;
  v24 = v13;
  specialized Array._endMutation()(v21);
  return v24;
}

unsigned __int8 *sub_100309E84(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100309F2C(a1, a2, a3, (uint64_t (*)(void))&static LocalPreferences.bagOverrideDownloadProgressDisplayWaitTime.getter);
}

uint64_t sub_100309E90(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = type metadata accessor for ASKBagContract(0);
  v5 = *(_QWORD *)(a1 + qword_100854070);
  if (v5)
  {
    v6 = swift_retain(*(_QWORD *)(a1 + qword_100854070));
    a2(v6);
    swift_release(v5);
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v4);
    __break(1u);
  }
  return result;
}

unsigned __int8 *sub_100309F20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100309F2C(a1, a2, a3, (uint64_t (*)(void))&static LocalPreferences.bagOverrideDownloadProgressDisplayRemainingTime.getter);
}

unsigned __int8 *sub_100309F2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned __int8 *result;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unint64_t v40;
  char v41;
  char v42;
  _BYTE v43[24];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v7 = sub_10000DF3C(&qword_100800428);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v43[-v12];
  v14 = type metadata accessor for LocalPreferences(0);
  result = (unsigned __int8 *)a4();
  if (!a3
    || ((v17 = HIBYTE(a3) & 0xF, v18 = a2 & 0xFFFFFFFFFFFFLL, (a3 & 0x2000000000000000) != 0)
      ? (v19 = HIBYTE(a3) & 0xF)
      : (v19 = a2 & 0xFFFFFFFFFFFFLL),
        !v19))
  {
    v23 = static LocalPreferences.AppStoreKitInternal.getter(result);
    v46 = v7;
    v47 = sub_10030A3A0();
    v24 = sub_1000117C0(&v44);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v8 + 16))(v24, v13, v7);
    LocalPreferences.removeValue(forKey:)(&v44);
    v25 = swift_release(v23);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v13, v7, v25);
    return (unsigned __int8 *)_s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v44);
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain(a3);
    v39 = sub_1005E787C(a2, a3, 10);
    v40 = a3;
    v22 = (uint64_t)v39;
    v42 = v41;
    v16 = swift_bridgeObjectRelease(v40);
    if ((v42 & 1) != 0)
      return (unsigned __int8 *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v13, v7, v16);
    goto LABEL_38;
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((a2 & 0x1000000000000000) != 0)
      v20 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v20 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(a2, a3);
    result = sub_1005E7868(v20, v18, 10);
    if ((v21 & 1) != 0)
      return (unsigned __int8 *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v13, v7, v16);
    v22 = (uint64_t)result;
    goto LABEL_38;
  }
  v44 = a2;
  v45 = a3 & 0xFFFFFFFFFFFFFFLL;
  if (a2 == 43)
  {
    if (!v17)
      goto LABEL_61;
    if (v17 == 1)
      goto LABEL_59;
    if ((BYTE1(a2) - 48) <= 9u)
    {
      v22 = (BYTE1(a2) - 48);
      if (v17 == 2)
        goto LABEL_36;
      if ((BYTE2(a2) - 48) <= 9u)
      {
        v22 = 10 * (BYTE1(a2) - 48) + (BYTE2(a2) - 48);
        v26 = v17 - 3;
        if (v17 != 3)
        {
          v27 = (unsigned __int8 *)&v44 + 3;
          while (1)
          {
            v28 = *v27 - 48;
            if (v28 > 9)
              goto LABEL_34;
            v29 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
              goto LABEL_34;
            v22 = v29 + v28;
            if (__OFADD__(v29, v28))
              goto LABEL_34;
            LOBYTE(v17) = 0;
            ++v27;
            if (!--v26)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
    }
LABEL_34:
    v22 = 0;
    LOBYTE(v17) = 1;
    goto LABEL_37;
  }
  if (a2 != 45)
  {
    if (!v17 || (a2 - 48) > 9u)
      goto LABEL_34;
    v22 = (a2 - 48);
    if (v17 == 1)
    {
LABEL_36:
      LOBYTE(v17) = 0;
      goto LABEL_37;
    }
    if ((BYTE1(a2) - 48) <= 9u)
    {
      v22 = 10 * (a2 - 48) + (BYTE1(a2) - 48);
      v31 = v17 - 2;
      if (v17 != 2)
      {
        v32 = (unsigned __int8 *)&v44 + 2;
        while (1)
        {
          v33 = *v32 - 48;
          if (v33 > 9)
            goto LABEL_34;
          v34 = 10 * v22;
          if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
            goto LABEL_34;
          v22 = v34 + v33;
          if (__OFADD__(v34, v33))
            goto LABEL_34;
          LOBYTE(v17) = 0;
          ++v32;
          if (!--v31)
            goto LABEL_37;
        }
      }
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v17)
  {
    if (v17 != 1)
    {
      if ((BYTE1(a2) - 48) > 9u)
        goto LABEL_34;
      if (v17 == 2)
      {
        LOBYTE(v17) = 0;
        v22 = -(uint64_t)(BYTE1(a2) - 48);
        goto LABEL_37;
      }
      if ((BYTE2(a2) - 48) > 9u)
        goto LABEL_34;
      v22 = -10 * (BYTE1(a2) - 48) - (BYTE2(a2) - 48);
      v35 = v17 - 3;
      if (v17 != 3)
      {
        v36 = (unsigned __int8 *)&v44 + 3;
        while (1)
        {
          v37 = *v36 - 48;
          if (v37 > 9)
            goto LABEL_34;
          v38 = 10 * v22;
          if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
            goto LABEL_34;
          v22 = v38 - v37;
          if (__OFSUB__(v38, v37))
            goto LABEL_34;
          LOBYTE(v17) = 0;
          ++v36;
          if (!--v35)
            goto LABEL_37;
        }
      }
      goto LABEL_36;
    }
LABEL_59:
    v22 = 0;
LABEL_37:
    if ((v17 & 1) != 0)
      return (unsigned __int8 *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v13, v7, v16);
LABEL_38:
    v30 = static LocalPreferences.AppStoreKitInternal.getter(result);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    v44 = v22;
    LOBYTE(v45) = 0;
    Preferences.subscript.setter(&v44, v10, v14, &type metadata for Int, &protocol witness table for LocalPreferences);
    v16 = swift_release(v30);
    return (unsigned __int8 *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v13, v7, v16);
  }
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DownloadProgressSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension24DownloadProgressSettings);
}

uint64_t sub_10030A360()
{
  uint64_t v0;

  return sub_100309E90(v0, (void (*)(uint64_t))&ASKBagContract.downloadProgressDisplayWaitTime.getter);
}

uint64_t sub_10030A380()
{
  uint64_t v0;

  return sub_100309E90(v0, (void (*)(uint64_t))&ASKBagContract.downloadProgressDisplayRemainingTime.getter);
}

unint64_t sub_10030A3A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807268;
  if (!qword_100807268)
  {
    v1 = sub_100010EF8(&qword_100800428);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for PreferenceKey<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100807268);
  }
  return result;
}

ValueMetadata *type metadata accessor for GameCenterInvitePlayerActionImplementation()
{
  return &type metadata for GameCenterInvitePlayerActionImplementation;
}

unint64_t sub_10030A400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807270;
  if (!qword_100807270)
  {
    v1 = type metadata accessor for GameCenterInvitePlayerAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, &qword_100807270);
  }
  return result;
}

uint64_t sub_10030A448(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  int v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  __n128 v46;
  __n128 v47;
  uint64_t result;
  __int128 v49;
  _QWORD v50[3];
  uint64_t v51;
  void *v52;

  v3 = sub_10000DF3C(&qword_1007F4E30);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v50[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GameCenterInvitePlayerAction.InvitationType(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v50[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000DF3C(&qword_100803510);
  v12 = Promise.__allocating_init()(v11);
  v13 = type metadata accessor for ASKBagContract(0);
  v14 = *(_QWORD *)(a2 + qword_100854070);
  if (v14)
  {
    v15 = swift_retain(*(_QWORD *)(a2 + qword_100854070));
    GameCenterInvitePlayerAction.invitationType.getter(v15);
    v16 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v10, v7);
    if (v16 == enum case for GameCenterInvitePlayerAction.InvitationType.messages(_:))
    {
      v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 96))(v10, v7);
      v20 = *v10;
      v19 = v10[1];
      v21 = Promise.__allocating_init()(v18);
      type metadata accessor for GameCenter(0);
      v22 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v24 = static OS_dispatch_queue.main.getter(v23);
      v51 = v22;
      v52 = &protocol witness table for OS_dispatch_queue;
      v50[0] = v24;
      v25 = (_QWORD *)swift_allocObject(&unk_100737800, 48, 7);
      v25[2] = v21;
      v25[3] = v20;
      v25[4] = v19;
      v25[5] = a2;
      swift_bridgeObjectRetain(v19);
      swift_retain(a2);
      v26 = swift_retain(v21);
      static GameCenter.withLocalPlayer(on:_:)(v50, sub_10030BD10, v25, v26);
      swift_release(v25);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
      swift_bridgeObjectRelease(v19);
      Promise.pipe(to:)(v12);
      swift_release(v21);
      swift_release(v14);
    }
    else
    {
      if (v16 == enum case for GameCenterInvitePlayerAction.InvitationType.player(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v10, v7);
        v27 = *v10;
        v28 = v10[1];
        v29 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
        v30 = (_QWORD *)swift_allocObject(&unk_1007377D8, 64, 7);
        v30[2] = 0;
        v30[3] = 0;
        v30[4] = v27;
        v30[5] = v28;
        v30[6] = v14;
        v30[7] = v12;
        swift_retain(v12);
        v31 = &unk_100807290;
      }
      else
      {
        if (v16 != enum case for GameCenterInvitePlayerAction.InvitationType.contact(_:))
        {
          if (qword_1007F3450 != -1)
            swift_once(&qword_1007F3450, sub_10060243C);
          v36 = type metadata accessor for OSLogger(0, v17);
          *(_QWORD *)&v49 = sub_1000117A8(v36, (uint64_t)qword_100857618);
          v37 = sub_10000DF3C(&qword_1007FD430);
          v38 = type metadata accessor for LogMessage(0);
          v39 = swift_allocObject(v37, ((*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v38 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) | 7);
          *(_OWORD *)(v39 + 16) = xmmword_10066FBA0;
          LogMessage.init(stringLiteral:)(0xD000000000000078, 0x8000000100643B10);
          Logger.error(_:)(v39, v36, &protocol witness table for OSLogger);
          swift_bridgeObjectRelease(v39);
          v41 = Promise.__allocating_init()(v40);
          type metadata accessor for GameCenter(0);
          v42 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
          v44 = static OS_dispatch_queue.main.getter(v43);
          v51 = v42;
          v52 = &protocol witness table for OS_dispatch_queue;
          v50[0] = v44;
          v45 = (_QWORD *)swift_allocObject(&unk_100737788, 48, 7);
          v45[2] = v41;
          v45[3] = 0;
          v45[4] = 0;
          v45[5] = a2;
          swift_retain(a2);
          v46 = swift_retain(v41);
          static GameCenter.withLocalPlayer(on:_:)(v50, sub_10030B9BC, v45, v46);
          swift_release(v45);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
          Promise.pipe(to:)(v12);
          swift_release(v41);
          v47 = swift_release(v14);
          (*(void (**)(uint64_t *, uint64_t, __n128))(v8 + 8))(v10, v7, v47);
          return v12;
        }
        (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v10, v7);
        v49 = *(_OWORD *)v10;
        v32 = v10[2];
        v33 = v10[3];
        v34 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 1, 1, v34);
        v30 = (_QWORD *)swift_allocObject(&unk_1007377B0, 80, 7);
        v30[2] = 0;
        v30[3] = 0;
        *((_OWORD *)v30 + 2) = v49;
        v30[6] = v32;
        v30[7] = v33;
        v30[8] = v14;
        v30[9] = v12;
        swift_retain(v12);
        v31 = &unk_100807280;
      }
      v35 = sub_10002DF34((uint64_t)v6, (uint64_t)v31, (uint64_t)v30);
      swift_release(v35);
    }
    return v12;
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v13);
  __break(1u);
  return result;
}

uint64_t sub_10030A92C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v9 = type metadata accessor for OSLogger(0, a1);
  v8[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[15] = v10;
  v8[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionOutcome(0);
  v8[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[18] = v12;
  v8[19] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GameCenter.PushFriendInvitationType(0);
  v8[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[21] = v14;
  v8[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10030A9E0, 0, 0);
}

uint64_t sub_10030A9E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[21];
  v1 = (_QWORD *)v0[22];
  v3 = v0[20];
  v5 = v0[10];
  v4 = v0[11];
  type metadata accessor for GameCenter(0);
  *v1 = v5;
  v1[1] = v4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v1, enum case for GameCenter.PushFriendInvitationType.player(_:), v3);
  v6 = async function pointer to static GameCenter.sendFriendInvitationViaPush(_:bag:)[1];
  swift_bridgeObjectRetain(v4);
  v7 = (_QWORD *)swift_task_alloc(v6);
  v0[23] = v7;
  *v7 = v0;
  v7[1] = sub_10030AA8C;
  return static GameCenter.sendFriendInvitationViaPush(_:bag:)(v0[22], v0[12]);
}

uint64_t sub_10030AA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v6 = sub_10030AB9C;
  else
    v6 = sub_10030AB0C;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10030AB0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for ActionOutcome.performed(_:), v3);
  Promise.resolve(_:)(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030AB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = sub_1000117A8(v4, (uint64_t)qword_100857618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_10000DF3C(&qword_1007FD430);
  v7 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v8 = swift_allocObject(v6, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 2 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000006CLL, 0x8000000100643B90);
  swift_getErrorValue(v1, v0 + 72, v0 + 48);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v10;
  v11 = sub_1000117C0((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, v9, v10);
  static LogMessage.sensitive(_:)(v0 + 16);
  sub_100011088(v0 + 16, &qword_1007F6E90);
  Logger.error(_:)(v8, v4, &protocol witness table for OSLogger);
  v12 = swift_bridgeObjectRelease(v8);
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v12);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030AD70(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v9[14] = a9;
  v9[15] = v17;
  v9[12] = a7;
  v9[13] = a8;
  v9[10] = a5;
  v9[11] = a6;
  v10 = type metadata accessor for OSLogger(0, a1);
  v9[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[17] = v11;
  v9[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionOutcome(0);
  v9[19] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v9[20] = v13;
  v9[21] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GameCenter.PushFriendInvitationType(0);
  v9[22] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v9[23] = v15;
  v9[24] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10030AE2C, 0, 0);
}

uint64_t sub_10030AE2C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[23];
  v1 = (_QWORD *)v0[24];
  v3 = v0[22];
  v5 = v0[12];
  v4 = v0[13];
  v7 = v0[10];
  v6 = v0[11];
  type metadata accessor for GameCenter(0);
  *v1 = v7;
  v1[1] = v6;
  v1[2] = v5;
  v1[3] = v4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v1, enum case for GameCenter.PushFriendInvitationType.contact(_:), v3);
  v8 = async function pointer to static GameCenter.sendFriendInvitationViaPush(_:bag:)[1];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v4);
  v9 = (_QWORD *)swift_task_alloc(v8);
  v0[25] = v9;
  *v9 = v0;
  v9[1] = sub_10030AEF0;
  return static GameCenter.sendFriendInvitationViaPush(_:bag:)(v0[24], v0[14]);
}

uint64_t sub_10030AEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v6 = sub_10030B000;
  else
    v6 = sub_10030AF70;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10030AF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for ActionOutcome.performed(_:), v3);
  Promise.resolve(_:)(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030B000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = sub_1000117A8(v4, (uint64_t)qword_100857618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_10000DF3C(&qword_1007FD430);
  v7 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v8 = swift_allocObject(v6, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 2 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000006DLL, 0x8000000100643C00);
  swift_getErrorValue(v1, v0 + 72, v0 + 48);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v10;
  v11 = sub_1000117C0((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, v9, v10);
  static LogMessage.sensitive(_:)(v0 + 16);
  sub_100011088(v0 + 16, &qword_1007F6E90);
  Logger.error(_:)(v8, v4, &protocol witness table for OSLogger);
  v12 = swift_bridgeObjectRelease(v8);
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v12);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  v13 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030B1D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[5];

  if (a1)
  {
    type metadata accessor for GameCenter(0);
    v11 = a1;
    v12 = static GameCenter.inviteFriendViewController(localPlayer:contactId:)(a1, a3, a4);
    v13 = swift_allocObject(&unk_100737828, 32, 7);
    *(_QWORD *)(v13 + 16) = a5;
    *(_QWORD *)(v13 + 24) = a2;
    v14 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    swift_retain_n(a2, 2);
    v15 = swift_retain(a5);
    v23[3] = v14;
    v23[4] = &protocol witness table for OS_dispatch_queue;
    v23[0] = static OS_dispatch_queue.main.getter(v15);
    Promise.then(perform:orCatchError:on:)(sub_10030BC1C, v13, sub_10030BC24, a2, v23);

    swift_release(v12);
    swift_release(v13);
    swift_release(a2);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v23);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v17 = type metadata accessor for OSLogger(0, a6);
    sub_1000117A8(v17, (uint64_t)qword_100857618);
    v18 = sub_10000DF3C(&qword_1007FD430);
    v19 = type metadata accessor for LogMessage(0);
    v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
    *(_OWORD *)(v20 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000050, 0x8000000100643C70);
    Logger.error(_:)(v20, v17, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v20);
    v21 = sub_10030BBAC();
    v22 = swift_allocError(&type metadata for GameCenterInvitePlayerActionImplementation.ImplementationError, v21, 0, 0);
    Promise.reject(_:)(v22);
    return swift_errorRelease(v22);
  }
}

double sub_10030B410(void **a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  double result;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v67[4];
  _OWORD v68[2];
  uint64_t v69;

  v65 = a2;
  v66 = a3;
  v57 = *a3;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v4);
  v64 = (uint64_t *)((char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_1007F78F0);
  v63 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowOrigin(0, v7);
  v61 = *(_QWORD *)(v9 - 8);
  v62 = v9;
  __chkstk_darwin(v9);
  v60 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FlowAnimationBehavior(0);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowPresentationContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ActionMetrics(0, v18);
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v22);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FlowPage(0, v26);
  __chkstk_darwin(v29);
  v31 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *a1;
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  (*(void (**)(char *, _QWORD))(v33 + 104))(v31, enum case for FlowPage.viewController(_:));
  v34 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v28, 1, 1, v34);
  v35 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v24, 1, 1, v35);
  v67[3] = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v67[0] = v32;
  static ActionMetrics.notInstrumented.getter(v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for FlowPresentationContext.infer(_:), v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v13, enum case for FlowAnimationBehavior.infer(_:), v59);
  v36 = v60;
  v37 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for FlowOrigin.inapp(_:), v62);
  v38 = static FlowActionPresentation.stackPush.getter(v37);
  v40 = v39;
  v41 = type metadata accessor for FlowAction(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v54 = v21;
  v42 = v65;
  v43 = v31;
  v44 = v63;
  v45 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(v68, 0, 0, 0, v43, v28, 0, 0, v24, v67, v54, v17, v13, v36, 0, v38, v40);
  v46 = v64;
  BaseObjectGraph.optional<A>(_:)(v64, v6, v6);
  v47 = v46;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48))(v46, 1, v6) == 1)
  {
    sub_100011088((uint64_t)v46, (uint64_t *)&unk_1007F5140);
    v48 = sub_1000559B4();
    v49 = swift_allocError(&type metadata for GeneralActionImplementationError, v48, 0, 0);
    *v50 = 1;
    v51 = Promise.__allocating_init(error:)(v49);
  }
  else
  {
    v52 = (uint64_t)v56;
    (*(void (**)(char *, _QWORD *, uint64_t))(v44 + 32))(v56, v47, v6);
    v51 = sub_10008EB74(v45, v42, v52);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v52, v6);
  }
  Promise.pipe(to:)(v66);
  swift_release(v45);
  *(_QWORD *)&result = swift_release(v51).n128_u64[0];
  return result;
}

uint64_t sub_10030B8A4(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v3 = type metadata accessor for OSLogger(0, a2);
  sub_1000117A8(v3, (uint64_t)qword_100857618);
  v4 = sub_10000DF3C(&qword_1007FD430);
  v5 = type metadata accessor for LogMessage(0);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(0xD000000000000042, 0x800000010062F590);
  Logger.error(_:)(v6, v3, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v6);
  return Promise.reject(_:)(a1);
}

uint64_t sub_10030B9B0(uint64_t *a1, uint64_t a2)
{
  return sub_10030A448(*a1, a2);
}

uint64_t sub_10030B9BC(void *a1, __n128 a2)
{
  uint64_t *v2;

  return sub_10030B1D4(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10030B9C8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10030BA0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_10080727C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100030018;
  return sub_10030AD70(v12, a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10030BAAC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10030BAE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_10080728C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1000303C4;
  return sub_10030A92C(v11, a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10030BB78()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_10030BBAC()
{
  unint64_t result;

  result = qword_100807298;
  if (!qword_100807298)
  {
    result = swift_getWitnessTable(&unk_1006847CC, &type metadata for GameCenterInvitePlayerActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100807298);
  }
  return result;
}

uint64_t sub_10030BBF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10030BC1C(void **a1)
{
  uint64_t v1;

  return sub_10030B410(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_10030BC24(uint64_t a1, __n128 a2)
{
  return sub_10030B8A4(a1, a2);
}

uint64_t storeEnumTagSinglePayload for GameCenterInvitePlayerActionImplementation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10030BC6C + 4 * asc_1006846B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10030BC8C + 4 * byte_1006846B5[v4]))();
}

_BYTE *sub_10030BC6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10030BC8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10030BC94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10030BC9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10030BCA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10030BCAC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GameCenterInvitePlayerActionImplementation.ImplementationError()
{
  return &type metadata for GameCenterInvitePlayerActionImplementation.ImplementationError;
}

unint64_t sub_10030BCCC()
{
  unint64_t result;

  result = qword_1008072A0;
  if (!qword_1008072A0)
  {
    result = swift_getWitnessTable(&unk_1006847A4, &type metadata for GameCenterInvitePlayerActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1008072A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportConcernActionImplementation()
{
  return &type metadata for ReportConcernActionImplementation;
}

unint64_t sub_10030BD28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008072A8;
  if (!qword_1008072A8)
  {
    v1 = type metadata accessor for ReportConcernAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1008072A8);
  }
  return result;
}

uint64_t sub_10030BD70(uint64_t *a1, uint64_t a2)
{
  return sub_10030BD78(*a1, a2);
}

uint64_t sub_10030BD78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[4];
  _OWORD v64[2];
  uint64_t v65;

  v62 = a2;
  v59 = a1;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v2);
  v61 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DF3C(&qword_1007F78F0);
  v60 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v54 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowOrigin(0, v5);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowAnimationBehavior(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowPresentationContext(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActionMetrics(0, v17);
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FlowPage(0, v25);
  __chkstk_darwin(v28);
  v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  (*(void (**)(char *, _QWORD))(v31 + 104))(v30, enum case for FlowPage.reportAConcern(_:));
  v32 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v27, 1, 1, v32);
  v33 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 1, 1, v33);
  v63[3] = type metadata accessor for ReportConcernAction(0);
  v63[0] = v59;
  swift_retain(v59);
  static ActionMetrics.notInstrumented.getter(v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FlowPresentationContext.presentModalFormSheet(_:), v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v12, enum case for FlowAnimationBehavior.infer(_:), v56);
  v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v57 + 104))(v9, enum case for FlowOrigin.inapp(_:), v58);
  v36 = static FlowActionPresentation.stackPush.getter(v35);
  v38 = v37;
  v39 = type metadata accessor for FlowAction(0);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v52 = v23;
  v40 = v60;
  v41 = v30;
  v42 = v62;
  v43 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(v64, 0, 0, 0, v41, v27, 0, 0, v52, v63, v20, v16, v12, v9, 0, v36, v38);
  v44 = v61;
  BaseObjectGraph.optional<A>(_:)(v61, v4, v4);
  v45 = v44;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48))(v44, 1, v4) == 1)
  {
    sub_100037038((uint64_t)v44);
    sub_10000DF3C(&qword_100803510);
    v46 = sub_1000559B4();
    v47 = swift_allocError(&type metadata for GeneralActionImplementationError, v46, 0, 0);
    *v48 = 1;
    v49 = Promise.__allocating_init(error:)(v47);
  }
  else
  {
    v50 = (uint64_t)v54;
    (*(void (**)(char *, _QWORD *, uint64_t))(v40 + 32))(v54, v45, v4);
    v49 = sub_10008EB74(v43, v42, v50);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v50, v4);
  }
  swift_release(v43);
  return v49;
}

void sub_10030C1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t KeyPath;
  double v45;
  double v46;
  double v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  __n128 v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  void *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  void (*v78)(__n128);
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  void **v83;
  __n128 v84;
  void *v85;
  __n128 v86;
  id v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, __n128);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  id *v99;
  id v100;
  _QWORD v101[5];
  char v102[32];

  v3 = v2;
  v98 = a2;
  v5 = type metadata accessor for PageGrid.Direction(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v88 - v10;
  v96 = type metadata accessor for PageGrid(0);
  v94 = *(void (**)(char *, uint64_t, __n128))(v96 - 8);
  __chkstk_darwin(v96);
  v13 = (uint64_t *)((char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v97 = (char *)&v88 - v15;
  v16 = type metadata accessor for Uber(0);
  v17 = sub_10000E99C(&qword_1008072B0, (uint64_t (*)(uint64_t))&type metadata accessor for Uber, (uint64_t)&protocol conformance descriptor for Uber);
  ItemLayoutContext.typedModel<A>(as:)(v101, v16, v16, v17);
  v18 = v101[0];
  if (v101[0])
  {
    v92 = v6;
    v93 = v5;
    v19 = (id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_uberView);
    swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_uberView, v102, 0, 0);
    v99 = v19;
    if (!*v19)
      goto LABEL_5;
    v20 = *(void **)((char *)*v19 + OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_uber);
    swift_retain(v20);
    v101[0] = v18;
    if (!v20)
      goto LABEL_5;
    v100 = v20;
    v21 = sub_10000E99C(&qword_1008016D0, (uint64_t (*)(uint64_t))&type metadata accessor for Uber, (uint64_t)&protocol conformance descriptor for Uber);
    swift_retain_n(v18, 2);
    v22 = v21;
    v3 = v2;
    v23 = dispatch thunk of static Equatable.== infix(_:_:)(v101, &v100, v16, v22);
    swift_release(v20);
    v24 = v101[0];
    swift_release(v18);
    swift_release(v24);
    if ((v23 & 1) == 0)
    {
LABEL_5:
      v89 = v8;
      v90 = v11;
      v25 = *v99;
      v26 = type metadata accessor for ArtworkLoader(0);
      v95 = type metadata accessor for ObjectGraph(0);
      v27 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v98, v95, 0, 0, 0) + qword_100854050);
      if (v27)
      {
        if (v25)
        {
          v100 = v25;
          v28 = type metadata accessor for UberHeaderView();
          v29 = a1;
          v30 = v3;
          v31 = sub_10000E99C(&qword_1008072B8, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&protocol conformance descriptor for NSObject);
          v32 = v25;
          swift_retain(v27);
          v33 = v31;
          v3 = v30;
          a1 = v29;
          AnyHashable.init<A>(_:)(&v100, v28, v33);
          ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v101, 1);
          sub_100019370((uint64_t)v101);

          swift_release(v27);
        }
        v88 = v26;
        v34 = v98;
        v35 = swift_dynamicCastClassUnconditional(v98, v95, 0, 0, 0);
        v36 = objc_allocWithZone((Class)type metadata accessor for UberHeaderView());
        swift_retain(v18);
        swift_retain(v34);
        v37 = sub_10053BF40(v18, v35);
        v91 = v3;
        sub_100231C28(v37);
        if (*v99)
        {
          v38 = *v99;
          v39 = Uber.title.getter();
          sub_10053B990(v39, v40);

        }
        v41 = v92;
        v42 = v90;
        v43 = v93;
        (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v90, enum case for PageGrid.Direction.vertical(_:), v93);
        KeyPath = swift_getKeyPath(&unk_1006848E0);
        ItemLayoutContext.subscript.getter(v13);
        swift_release(KeyPath);
        v45 = PageGrid.componentMeasuringSize(spanning:)(1.0);
        v47 = v46;
        v48 = (_QWORD *)*((_QWORD *)v94 + 1);
        v49 = v96;
        ((void (*)(_QWORD *, uint64_t))v48)(v13, v96);
        v50 = swift_getKeyPath(&unk_1006848E0);
        ItemLayoutContext.subscript.getter(v13);
        v51 = swift_release(v50);
        v52 = PageGrid.safeAreaInsets.getter(v51);
        v54 = v53;
        v56 = v55;
        v58 = v57;
        v94 = (void (*)(char *, uint64_t, __n128))v48;
        ((void (*)(_QWORD *, uint64_t))v48)(v13, v49);
        v59 = swift_getKeyPath(&unk_100684910);
        ItemLayoutContext.subscript.getter(v101);
        v60 = swift_release(v59);
        v61 = (void *)v101[0];
        v62 = v89;
        (*(void (**)(char *, char *, uint64_t, __n128))(v41 + 16))(v89, v42, v43, v60);
        v63 = sub_100418380(0.0);
        PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v62, 0, v63, v45, v47, v52, v54, v56, v58);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
        if (*v99)
        {
          v64 = a1;
          v65 = (char *)*v99;
          v66 = PageGrid.horizontalMargins.getter(v65);
          v68 = v67;
          v70 = v69;
          v72 = v71;
          v73 = *(void **)&v65[OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_titleView];
          objc_msgSend(v73, "layoutMargins");
          if (v66 != v77 || v68 != v74 || v70 != v75 || v72 != v76)
          {
            objc_msgSend(v73, "setLayoutMargins:", v66, v68, v70, v72);
            objc_msgSend(v65, "invalidateIntrinsicContentSize");
            v78 = *(void (**)(__n128))&v65[OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_sizeChangeObserver];
            if (v78)
            {
              v79 = *(_QWORD *)&v65[OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_sizeChangeObserver + 8];
              v80 = swift_retain(v79);
              v78(v80);
              sub_100019310((uint64_t)v78, v79);
            }
          }

          a1 = v64;
        }
        v81 = swift_dynamicCastClassUnconditional(v98, v95, 0, 0, 0);
        v82 = *(_QWORD *)(v81 + qword_100854050);
        if (v82)
        {
          swift_retain(*(_QWORD *)(v81 + qword_100854050));
          sub_10030C8E0(v18, a1, v82);
          swift_release(v82);
          v83 = v99;
          v84 = swift_beginAccess(v99, v101, 32, 0);
          v85 = *v83;
          if (v85)
          {
            objc_msgSend(v85, "setNeedsLayout", swift_endAccess(v101).n128_f64[0]);
            v86 = swift_release(v18);
            v94(v97, v96, v86);
            return;
          }
          v94(v97, v96, v84);
          swift_endAccess(v101);
          goto LABEL_22;
        }
      }
      else
      {
        v87 = v25;
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v26);
        __break(1u);
      }
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v88);
      __break(1u);
      return;
    }
LABEL_22:
    swift_release(v18);
  }
}

void sub_10030C8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t KeyPath;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  void (*v29)(_QWORD *, uint64_t, double);
  uint64_t v30;
  double v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD v42[3];

  v39 = a3;
  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Uber.Style(0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Uber.AssetType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Uber.assetType.getter(v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == enum case for Uber.AssetType.artwork(_:))
  {
    KeyPath = swift_getKeyPath(&unk_100684910);
    ItemLayoutContext.subscript.getter(v42);
    swift_release(KeyPath);
    v17 = (void *)v42[0];
    LOBYTE(KeyPath) = UITraitCollection.isSizeClassCompact.getter(v18);

    if ((KeyPath & 1) != 0)
    {
      v19 = Uber.compactArtwork.getter();
      if (!v19)
        return;
    }
    else
    {
      v19 = Uber.artwork.getter();
      if (!v19)
        return;
    }
    goto LABEL_12;
  }
  if (v15 == enum case for Uber.AssetType.video(_:))
  {
    v20 = Uber.video.getter();
    if (!v20)
      return;
    v21 = v20;
    v19 = Video.preview.getter(v20);
    swift_release(v21);
    goto LABEL_12;
  }
  if (v15 != enum case for Uber.AssetType.icon(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return;
  }
  v19 = Uber.iconArtwork.getter();
  if (v19)
  {
LABEL_12:
    swift_retain(v19);
    v22 = (id *)(v40 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_uberView);
    swift_beginAccess(v40 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_uberView, v42, 0, 0);
    if (*v22)
    {
      v23 = *v22;
      Uber.style.getter(v24);
      v25 = swift_getKeyPath(&unk_1006848E0);
      ItemLayoutContext.subscript.getter(v6);
      swift_release(v25);
      v26 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v28 = v27;
      v29 = *(void (**)(_QWORD *, uint64_t, double))(v4 + 8);
      v29(v6, v3, v26);
      v30 = swift_getKeyPath(&unk_1006848E0);
      ItemLayoutContext.subscript.getter(v6);
      swift_release(v30);
      v31 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      ((void (*)(_QWORD *, uint64_t))v29)(v6, v3);
      v32 = swift_getKeyPath(&unk_100684910);
      ItemLayoutContext.subscript.getter(&v41);
      swift_release(v32);
      v33 = v41;
      v34 = sub_100594764(v28, v31, v19, (uint64_t)v9, v41);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
      v35 = type metadata accessor for UberHeaderView();
      v36 = sub_10000E99C(&qword_1008016D8, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_10069AD08);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2, 1, v23, v35, v36);

      swift_release(v34);
    }
    swift_release(v19);
    swift_release(v19);
  }
}

uint64_t sub_10030CC64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

double sub_10030CCB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10030CD14(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension22UberCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t destroy for OnboardingTrayLayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
}

_OWORD *initializeWithCopy for OnboardingTrayLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

_QWORD *assignWithCopy for OnboardingTrayLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  sub_10001216C(a1 + 5, a2 + 5);
  sub_10001216C(a1 + 10, a2 + 10);
  return a1;
}

__n128 initializeWithTake for OnboardingTrayLayout.Metrics(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for OnboardingTrayLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingTrayLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingTrayLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingTrayLayout.Metrics()
{
  return &type metadata for OnboardingTrayLayout.Metrics;
}

double destroy for OnboardingTrayLayout(_QWORD *a1)
{
  double result;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[15]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for OnboardingTrayLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for OnboardingTrayLayout(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_10001216C(a1, a2);
  sub_10001216C(a1 + 5, a2 + 5);
  sub_10001216C(a1 + 10, a2 + 10);
  v4 = a2[15];
  v5 = a1[15];
  a1[15] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

__n128 initializeWithTake for OnboardingTrayLayout(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for OnboardingTrayLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(_QWORD *)(a2 + 120);
  v7 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingTrayLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingTrayLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingTrayLayout()
{
  return &type metadata for OnboardingTrayLayout;
}

uint64_t destroy for OnboardingTrayLayout.Item(_QWORD *a1)
{
  uint64_t result;

  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  if (a1[8])
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  return result;
}

uint64_t initializeWithCopy for OnboardingTrayLayout.Item(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 56);
    *v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for OnboardingTrayLayout.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    return a1;
  }
  if (!v4)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  return a1;
}

uint64_t assignWithTake for OnboardingTrayLayout.Item(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for OnboardingTrayLayout.Item()
{
  return &type metadata for OnboardingTrayLayout.Item;
}

void sub_10030D3C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  double v46;
  void (*v47)(char *, uint64_t);
  double v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  unsigned int v58;
  unsigned int v59;
  __int128 *v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[5];
  double v83;
  _QWORD v84[10];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[12];

  v3 = v2;
  v77 = a1;
  v5 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  v6 = __chkstk_darwin(v5);
  v73 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0, v6);
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  v9 = __chkstk_darwin(v8);
  v70 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0, v9);
  v80 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for _VerticalFlowLayout.Child(0);
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  __chkstk_darwin(v12);
  v64 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for FloatingPointRoundingRule(0);
  v63 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a2;
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0, _swiftEmptyArrayStorage);
  v16 = v3[15];
  v17 = *(_QWORD *)(v16 + 16);
  v54 = v84;
  v55 = v16 + 32;
  v60 = (__int128 *)v92;
  v51 = v3 + 5;
  v52 = v3 + 10;
  v53 = (char *)&v85 + 8;
  v59 = enum case for _VerticalFlowLayout.Child.Placement.top(_:);
  v58 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.center(_:);
  v56 = v16;
  swift_bridgeObjectRetain(v16);
  v18 = 0;
  v57 = xmmword_10066FBA0;
  v61 = v17;
  v62 = v15;
  v68 = v3;
  v19 = v67;
  while (1)
  {
    if (v18 == v17)
    {
      v90 = 0;
      v88 = 0u;
      v89 = 0u;
      v86 = 0u;
      v87 = 0u;
      v85 = 0u;
      goto LABEL_7;
    }
    if (v18 >= *(_QWORD *)(v56 + 16))
      break;
    v17 = v18 + 1;
    v36 = v54;
    sub_10030DCFC(v55 + 80 * v18, (uint64_t)v54);
    *(_QWORD *)&v85 = v18;
    v37 = v36[3];
    v38 = v53;
    *((_OWORD *)v53 + 2) = v36[2];
    v38[3] = v37;
    v38[4] = v36[4];
    v39 = v36[1];
    *v38 = *v36;
    v38[1] = v39;
LABEL_7:
    sub_10030DD64((uint64_t)&v85, (uint64_t)&v91);
    if (!v92[3])
    {
      swift_bridgeObjectRelease(v56);
      return;
    }
    v40 = v91;
    v41 = v60[3];
    v87 = v60[2];
    v88 = v41;
    v89 = v60[4];
    v42 = v60[1];
    v85 = *v60;
    v86 = v42;
    v79 = v17;
    if (v91)
    {
      v43 = v3[3];
      v44 = v3[4];
      v45 = v3;
    }
    else
    {
      v43 = v3[8];
      v44 = v3[9];
      v45 = v51;
    }
    sub_100011064(v45, v43);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v43);
    v46 = AnyDimension.value(in:rounded:)(v77, v15, v43, v44);
    v47 = *(void (**)(char *, uint64_t))(v63 + 8);
    v47(v15, v78);
    v48 = 0.0;
    if (v40 == *(_QWORD *)(v3[15] + 16) - 1)
    {
      v49 = v3[13];
      v50 = v3[14];
      sub_100011064(v52, v49);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49);
      v48 = AnyDimension.value(in:rounded:)(v77, v15, v49, v50);
      v47(v15, v78);
    }
    v20 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v19, v59, v69);
    v22 = v70;
    v21 = v71;
    v23 = v72;
    (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, v58, v72);
    v84[2] = &type metadata for CGFloat;
    v84[3] = &protocol witness table for CGFloat;
    v83 = v46;
    v82[3] = &type metadata for CGFloat;
    v82[4] = &protocol witness table for CGFloat;
    *(double *)v82 = v48;
    v24 = sub_10000DF3C((uint64_t *)&unk_100803BE0);
    v25 = v74;
    v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72), *(unsigned __int8 *)(v74 + 80) | 7);
    *(_OWORD *)(v26 + 16) = v57;
    static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter();
    v81 = v26;
    v27 = sub_10030DDAC();
    v28 = sub_10000DF3C((uint64_t *)&unk_100803BF0);
    v29 = sub_100187310();
    v30 = v73;
    v31 = v28;
    v32 = v75;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v81, v31, v29, v75, v27);
    v33 = v64;
    static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v85, v19, v22, &v83, v82, v30);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v32);
    v34 = *(void (**)(char *, uint64_t))(v21 + 8);
    v3 = v68;
    v34(v22, v23);
    v35 = v20;
    v15 = v62;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v19, v35);
    sub_1000DC354((uint64_t)v82);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v83);
    _VerticalFlowLayout.addChild(_:)(v33);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v66);
    sub_10030DD30(&v85);
    v17 = v61;
    v18 = v79;
  }
  __break(1u);
}

uint64_t sub_10030D8E4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;

  v11 = type metadata accessor for FloatingPointRoundingRule(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for _VerticalFlowLayout(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10030D3C4(a1, (uint64_t)v19);
  v41 = a2;
  v42 = a3;
  v43 = a4;
  v40 = v19;
  _VerticalFlowLayout.placeChildren(relativeTo:in:)(a1, a2, a3, a4, a5);
  v20 = *(_QWORD *)(v5 + 120);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v38 = v17;
    v39 = v16;
    v22 = v20 + 32;
    v37 = v20;
    swift_bridgeObjectRetain(v20);
    do
    {
      sub_10030DCFC(v22, (uint64_t)v49);
      sub_1001058E4((uint64_t)&v52, (uint64_t)&v44);
      if (v45)
      {
        sub_100010F3C(&v44, (uint64_t)v46);
        v24 = v50;
        v23 = v51;
        sub_100011064(v49, v50);
        v25 = dispatch thunk of LayoutView.frame.getter(v24, v23);
        v27 = v26;
        v29 = v28;
        v31 = v30;
        v32 = v47;
        v33 = v48;
        sub_100011064(v46, v47);
        j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v32);
        AnyDimension.value(in:rounded:)(a1, v15, v32, v33);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
        v53.origin.x = v25;
        v53.origin.y = v27;
        v53.size.width = v29;
        v53.size.height = v31;
        CGRectGetWidth(v53);
        v54.origin.x = v25;
        v54.origin.y = v27;
        v54.size.width = v29;
        v54.size.height = v31;
        CGRectGetHeight(v54);
        v55.origin.x = v41;
        v55.origin.y = v42;
        v55.size.width = v43;
        v55.size.height = a5;
        CGRectGetMidX(v55);
        v56.origin.x = v25;
        v56.origin.y = v27;
        v56.size.width = v29;
        v56.size.height = v31;
        CGRectGetMinY(v56);
        v34 = v50;
        v35 = v51;
        sub_100011064(v49, v50);
        dispatch thunk of LayoutView.frame.setter(v34, v35);
        sub_10030DD30(v49);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v46);
      }
      else
      {
        sub_10030DD30(v49);
        sub_1000DC354((uint64_t)&v44);
      }
      v22 += 80;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease(v37);
    v16 = v39;
    v17 = v38;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v40, v16);
}

double sub_10030DC18(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v13;

  v6 = a2.n128_f64[0];
  v7 = type metadata accessor for _VerticalFlowLayout(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
    return JUMeasurementsZero[0];
  sub_10030D3C4(a1, (uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = _VerticalFlowLayout.measurements(fitting:in:)(a1, v6, a3);
  if (v11 > v6)
    v6 = v11;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v6;
}

uint64_t sub_10030DCFC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for OnboardingTrayLayout.Item(a2, a1);
  return a2;
}

_QWORD *sub_10030DD30(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  if (a1[8])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  return a1;
}

uint64_t sub_10030DD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1008072C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10030DDAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FE268;
  if (!qword_1007FE268)
  {
    v1 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition, v1);
    atomic_store(result, (unint64_t *)&qword_1007FE268);
  }
  return result;
}

uint64_t sub_10030DDF4(uint64_t a1, char a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  unsigned __int8 v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  char *v29;
  void *v30;
  char *v31;
  id v32;
  uint64_t result;
  char *v34;
  char *v35;
  objc_super v36;
  uint64_t v37;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton] = 0;
  v9 = &v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_delayedDismissalReappearanceItem] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_objectGraph] = a3;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_presenter] = a1;
  v10 = (char *)type metadata accessor for ArtworkLoader(0);
  v11 = *(_QWORD *)(a3 + qword_100854050);
  if (v11)
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_artworkLoader] = v11;
    v12 = v4;
    swift_retain(a3);
    swift_retain(a1);
    v13 = swift_retain(v11);
    if ((a2 & 1) != 0)
    {
      v15 = (id)ASKDeviceTypeGetCurrent(v13);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePhone);
      v18 = v17;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v21 = v19;
      v14 = 1;
      if (v16 != v20 || v18 != v19)
      {
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0) & 1) != 0)
          v14 = 1;
        else
          v14 = 2;
      }

      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v14 = 0;
    }
    v22 = objc_allocWithZone((Class)type metadata accessor for ArcadeSubscribePageView());
    *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView] = sub_10045D6D0(v14);
    v23 = type metadata accessor for ImpressionsCalculator(0);
    BaseObjectGraph.optional<A>(_:)(&v37, v23, v23);
    v25 = v37;
    *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_impressionsCalculator] = v37;
    if (v25)
    {
      swift_retain(v25);
      ImpressionsCalculator.isVisible.setter(1);
      v24 = swift_release(v25);
    }
    v26 = &v12[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver];
    *((_QWORD *)v26 + 3) = type metadata accessor for ArcadeSubscribePresenter(0, v24);
    *((_QWORD *)v26 + 4) = &protocol witness table for BasePresenter;
    *(_QWORD *)v26 = a1;
    swift_retain(a1);

    v36.receiver = v12;
    v36.super_class = ObjectType;
    v27 = objc_msgSendSuper2(&v36, "initWithNibName:bundle:", 0, 0);
    v4 = (char *)sub_10001F65C(&qword_100807368, v28, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeSubscribeViewController, (uint64_t)&protocol conformance descriptor for ArcadeSubscribeViewController);
    v29 = (char *)v27;
    ArcadeSubscribePresenter.view.setter(v27, v4);
    v10 = (char *)objc_msgSend(v29, "view");
    if (v10)
    {
      v4 = v10;
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v30 = (void *)static UIColor.defaultBackground.getter();
      objc_msgSend(v4, "setBackgroundColor:", v30);

      v10 = (char *)objc_msgSend(v29, "view");
      if (v10)
      {
        v31 = v10;
        v32 = *(id *)&v29[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView];
        objc_msgSend(v31, "addSubview:", v32);

        swift_release(a1);
        swift_release(a3);
        return (uint64_t)v29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  v34 = v10;
  v35 = v4;
  swift_retain(a3);
  swift_retain(a1);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v34);
  __break(1u);
  return result;
}

id sub_10030E350()
{
  char *v0;
  unsigned int v1;
  uint64_t v2;
  void *v3;
  id v4;
  id result;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;

  v1 = objc_msgSend(v0, "isViewLoaded");
  v2 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController;
  if (!v1)
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView], "setHidden:", *(_QWORD *)&v0[v2] != 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController];
  if (!v3)
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView], "setHidden:", *(_QWORD *)&v0[v2] != 0);
  v4 = v3;
  objc_msgSend(v0, "addChildViewController:", v4);
  result = objc_msgSend(v4, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = result;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  objc_msgSend(result, "bounds");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v6, "setFrame:", v9, v11, v13, v15);
  v16 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton];
  if (v16)
  {
    v17 = v16;
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v18 = result;
      result = objc_msgSend(v4, "view");
      if (result)
      {
        v19 = result;
        objc_msgSend(v18, "insertSubview:belowSubview:", result, v17);

LABEL_12:
        objc_msgSend(v4, "didMoveToParentViewController:", v0);

        v2 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController;
        return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView], "setHidden:", *(_QWORD *)&v0[v2] != 0);
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18 = result;
  result = objc_msgSend(v4, "view");
  if (result)
  {
    v19 = result;
    objc_msgSend(v18, "addSubview:", result);
    goto LABEL_12;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_10030E568()
{
  char *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton];
  if (!v1)
    goto LABEL_9;
  v2 = v1;
  v3._object = (void *)0x8000000100643DE0;
  v3._countAndFlagsBits = 0xD00000000000001CLL;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v3, v4)._object;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v2, "setTitle:forState:", v6, 0);

  objc_msgSend(v2, "addTarget:action:forControlEvents:", v0, "dismissPressed:", 64);
  v7 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v0, "view");
    if (!v9)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v10 = v9;
    v11 = objc_msgSend(v8, "view");
    if (!v11)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    v12 = v11;
    objc_msgSend(v10, "insertSubview:aboveSubview:", v2, v11);

    v13 = v2;
    v2 = v12;
    goto LABEL_8;
  }
  v14 = objc_msgSend(v0, "view");
  if (v14)
  {
    v13 = v14;
    objc_msgSend(v14, "addSubview:", v2);
LABEL_8:

LABEL_9:
    v15 = objc_msgSend(v0, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "setNeedsLayout");

      return;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.viewDidLoad()()
{
  void *v0;
  void *v1;
  id v2;
  objc_super v3;

  v1 = v0;
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "viewDidLoad");
  ArcadeSubscribePresenter.didLoad()();
  objc_msgSend(v0, "setModalInPresentation:", 1);
  v2 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v2, "setLargeTitleDisplayMode:", 2);

  objc_msgSend(v1, "setTitle:", 0);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.receiver = v2;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "viewWillAppear:", a1, v7);
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for StoreViewControllerLifecycleEvent.willAppear(_:), v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v9, v10, v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v12 = objc_msgSend(v2, "navigationItem");
  v13 = objc_msgSend(v12, "leftBarButtonItems");

  if (v13)
  {
    v14 = sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v25 = v15;
      else
        v25 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v16 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(v15);
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v15);
    v17 = v16 != 0;
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(v2, "navigationItem");
  v19 = objc_msgSend(v18, "rightBarButtonItems");

  if (v19)
  {
    v20 = sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v26 = v21;
      else
        v26 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v22 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v21);
    if (v22)
      v17 = 1;
  }
  v23 = objc_msgSend(v2, "navigationController");
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, "setNavigationBarHidden:animated:", !v17, 0);

  }
}

Swift::Void __swiftcall ArcadeSubscribeViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.receiver = v2;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, "viewDidAppear:", a1, v11);
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for StoreViewControllerLifecycleEvent.didAppear(_:), v9);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v13, v14, v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v17 = dispatch thunk of BasePresenter.pendingPageRender.getter(v16);
  if (v17)
  {
    v19 = v17;
    v20 = Date.init()(v17);
    v21 = Date.timeIntervalSince1970.getter(v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    PendingPageRender.appearTime.setter(*(_QWORD *)&v21, 0);
    v18 = swift_release(v19);
  }
  v22 = dispatch thunk of BasePresenter.pageRenderMetrics.getter(v18);
  if (v22)
  {
    v23 = v22;
    PageRenderMetricsPresenter.viewDidAppear()();
    swift_release(v23);
  }
  ArtworkLoader.isOccluded.setter(0);
  type metadata accessor for MetricsActivity(0);
  v25 = static MetricsActivity.current.getter(v24);
  v26 = dispatch thunk of BasePresenter.referrer.getter();
  v28 = v27;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v26);
  swift_release(v25);
  swift_bridgeObjectRelease(v28);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ViewWillDisappearReason(0, v6);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1008029F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v15).n128_u64[0];
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41.receiver = v2;
  v41.super_class = ObjectType;
  objc_msgSendSuper2(&v41, "viewWillDisappear:", a1, v17);
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v21);
  static ViewWillDisappearReason.inferred(for:)(v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v19, enum case for StoreViewControllerLifecycleEvent.willDisappear(_:), v15);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v19, v21, v20);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v23 = dispatch thunk of BasePresenter.pendingPageRender.getter(v22);
  if (v23)
  {
    v25 = v23;
    v26 = static ViewWillDisappearReason.inferred(for:)(v2);
    v27 = Date.init()(v26);
    v28 = Date.timeIntervalSince1970.getter(v27);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);
    PendingPageRender.DisappearTimeAndReason.init(reason:timeInterval:)(v11, v28);
    v29 = type metadata accessor for PendingPageRender.DisappearTimeAndReason(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 0, 1, v29);
    PendingPageRender.disappearTime.setter(v14);
    v24 = swift_release(v25);
  }
  v30 = dispatch thunk of BasePresenter.pageRenderMetrics.getter(v24);
  if (v30)
  {
    v31 = v30;
    static ViewWillDisappearReason.inferred(for:)(v2);
    PageRenderMetricsPresenter.viewWillDisappear(forReason:)(v11);
    v32 = swift_release(v31);
    (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v11, v40, v32);
  }
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_impressionsCalculator])
    ImpressionsCalculator.isVisible.setter(0);
  ArtworkLoader.isOccluded.setter(1);
  type metadata accessor for MetricsActivity(0);
  v34 = static MetricsActivity.current.getter(v33);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0);
  v35 = swift_release(v34);
  v36 = static MetricsActivity.current.getter(v35);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release(v36);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.receiver = v1;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "viewDidDisappear:", a1, v6);
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for StoreViewControllerLifecycleEvent.didDisappear(_:), v4);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v9, v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.as_viewWillBecomeFullyVisible()()
{
  sub_10030F618((SEL *)&selRef_as_viewWillBecomeFullyVisible, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.willAppear(_:));
}

Swift::Void __swiftcall ArcadeSubscribeViewController.as_viewDidBecomeFullyVisible()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  objc_super v17;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = v1;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "as_viewDidBecomeFullyVisible", v5);
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.didAppear(_:), v3);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  ArtworkLoader.isOccluded.setter(0);
  type metadata accessor for MetricsActivity(0);
  v11 = static MetricsActivity.current.getter(v10);
  v12 = dispatch thunk of BasePresenter.referrer.getter();
  v14 = v13;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v12);
  swift_release(v11);
  v15 = swift_bridgeObjectRelease(v14);
  v16 = static MetricsActivity.current.getter(v15);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release(v16);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.as_viewWillBecomePartiallyVisible()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  objc_super v14;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.receiver = v1;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, "as_viewWillBecomePartiallyVisible", v5);
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v8);
  static ViewWillDisappearReason.inferred(for:)(v1);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.willDisappear(_:), v3);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_impressionsCalculator])
    ImpressionsCalculator.isVisible.setter(0);
  ArtworkLoader.isOccluded.setter(1);
  type metadata accessor for MetricsActivity(0);
  v11 = static MetricsActivity.current.getter(v10);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0);
  v12 = swift_release(v11);
  v13 = static MetricsActivity.current.getter(v12);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release(v13);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.as_viewDidBecomePartiallyVisible()()
{
  sub_10030F618((SEL *)&selRef_as_viewDidBecomePartiallyVisible, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.didDisappear(_:));
}

uint64_t sub_10030F618(SEL *a1, unsigned int *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.receiver = v2;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, *a1, v8);
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *a2, v6);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_10030F710(void *a1, uint64_t a2, const char **a3, unsigned int *a4)
{
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  const char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.receiver = a1;
  v16.super_class = ObjectType;
  v12 = *a3;
  v13 = a1;
  objc_msgSendSuper2(&v16, v12);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&v13[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *a4, v8);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v11, v14, v15);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

}

Swift::Void __swiftcall ArcadeSubscribeViewController.viewWillLayoutSubviews()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  __objc2_meth_list **p_base_meths;
  id v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  unsigned __int8 *v39;
  id v40;
  char v41;
  id v42;
  void *v43;
  double Width;
  double v45;
  char v46;
  void *v47;
  id v48;
  void *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  void *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  id v69;
  void *v70;
  double v71;
  double v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  double v81;
  double v82;
  int v83;
  double v84;
  double v85;
  id v86;
  double v87[28];
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[3];
  uint64_t v91;
  uint64_t v92;
  objc_super v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93.receiver = v1;
  v93.super_class = ObjectType;
  objc_msgSendSuper2(&v93, "viewWillLayoutSubviews", v5);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController];
  if (!v18)
  {
    v47 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView];
    v48 = objc_msgSend(v1, "view");
    if (v48)
    {
      v49 = v48;
      objc_msgSend(v48, "bounds");
      v51 = v50;
      v53 = v52;
      v55 = v54;
      v57 = v56;

      v58 = objc_msgSend(v1, "view");
      if (v58)
      {
        v59 = v58;
        objc_msgSend(v58, "safeAreaInsets");
        v61 = v60;
        v63 = v62;
        v65 = v64;
        v67 = v66;

        objc_msgSend(v47, "setFrame:", CGRect.subtracting(insets:)(v61, v63, v65, v67, v51, v53, v55, v57));
        return;
      }
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  v19 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton];
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if (!v19)
  {
    v68 = v18;
LABEL_19:
    v79 = objc_msgSend(v18, "view", *(_QWORD *)&v81, *(_QWORD *)&v82);
    if (v79)
    {
      v80 = v79;
      objc_msgSend(v79, (SEL)p_base_meths[390], v11, v13, v15, v17);

      return;
    }
    goto LABEL_22;
  }
  v21 = v18;
  v86 = v19;
  v22 = objc_msgSend(v1, "view");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "safeAreaInsets");
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    v84 = v17;
    v85 = v15;
    v32 = CGRect.subtracting(insets:)(v25, v27, v29, v31, v11, v13, v15, v17);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v39 = *(unsigned __int8 **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView];
    v83 = v39[OBJC_IVAR____TtC22SubscribePageExtension23ArcadeSubscribePageView_style];
    v40 = objc_msgSend(v39, "traitCollection");
    v41 = UITraitCollection.isSizeClassCompact.getter(v40);

    if ((v41 & 1) != 0)
    {
      v42 = objc_msgSend(v39, "window");
      if (v42)
      {
        v43 = v42;
        objc_msgSend(v42, "frame");
        Width = CGRectGetWidth(v94);
        objc_msgSend(v39, "bounds");
        v45 = CGRectGetWidth(v95);

        v46 = v45 < Width;
      }
      else
      {
        v46 = 0;
      }
    }
    else
    {
      v46 = 1;
    }
    v69 = objc_msgSend(v1, "view");
    if (!v69)
      goto LABEL_25;
    v70 = v69;
    objc_msgSend(v69, "bounds");
    v72 = v71;

    v73 = objc_msgSend(v1, "traitCollection");
    v74 = UITraitCollection.prefersAccessibilityLayouts.getter(v73);

    v81 = v13;
    v82 = v11;
    if ((v74 & 1) != 0)
    {
      sub_10045C4C8(v46, v83, v87);
      sub_100011020((uint64_t)&v89, (uint64_t)v90);
      sub_1003114A4(v87);
    }
    else
    {
      sub_10045D238(v46, v83, (uint64_t)v87, v72);
      sub_100011020((uint64_t)&v88, (uint64_t)v90);
      sub_100311470(v87);
    }
    v75 = v91;
    v76 = v92;
    sub_100011064(v90, v91);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v75);
    AnyDimension.value(in:rounded:)(v1, v7, v75, v76);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v90);
    v77 = v86;
    objc_msgSend(v86, "measurementsWithFitting:in:", v1, v36, v38);
    v96.origin.x = v32;
    v96.origin.y = v34;
    v96.size.width = v36;
    v96.size.height = v38;
    CGRectGetMidX(v96);
    v97.origin.x = v32;
    v97.origin.y = v34;
    v97.size.width = v36;
    v97.size.height = v38;
    CGRectGetMaxY(v97);
    v78 = v77;
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    objc_msgSend(v78, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1));

    v13 = v81;
    v11 = v82;
    v17 = v84;
    v15 = v85;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  void *v4;
  objc_super v5;

  isa = a1.value.super.isa;
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "traitCollectionDidChange:", isa);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

uint64_t ArcadeSubscribeViewController.supportedInterfaceOrientations.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)1)
    return 30;
  else
    return 2;
}

void sub_10030FF54(char *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 24];
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver + 32];
  sub_100011064(&a1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_lifecycleObserver], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a3, v5);
  v11 = a1;
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v9, v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

}

uint64_t sub_100310028()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  __n128 v38;
  uint64_t result;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 aBlock;
  __int128 v52;
  double (*v53)();
  uint64_t v54;
  _OWORD v55[2];
  uint64_t v56;

  v1 = v0;
  v2 = type metadata accessor for MetricsData(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v44 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1008141F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricsPipeline(0);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v50 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MetricsFieldsContext(0, v9);
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClickMetricsEvent(0);
  v43 = static ClickMetricsEvent.makeBackClickEvent()();
  v13 = BasePresenter.impressionsTracker.getter();
  v15 = v14;
  type metadata accessor for MetricsActivity(0);
  v17 = static MetricsActivity.current.getter(v16);
  v18 = dispatch thunk of MetricsActivity.currentPageFields.getter();
  v19 = swift_release(v17);
  v20 = static MetricsActivity.current.getter(v19);
  v21 = dispatch thunk of MetricsActivity.preloaded.getter();
  swift_release(v20);
  v53 = 0;
  aBlock = 0u;
  v52 = 0u;
  v56 = 0;
  memset(v55, 0, sizeof(v55));
  v22 = static MetricsActivity.current.getter((__n128)0);
  v23 = dispatch thunk of MetricsActivity.contextualAction.getter();
  v24 = swift_release(v22);
  v40 = v21;
  v25 = v1;
  v47 = v12;
  static MetricsFieldsContext.createFieldsContext(impressionsTracker:adamIdString:pageContextOverride:referrer:participatingInCrossfireReferral:pageFields:preloaded:advertRotationData:searchGhostHintData:contextualAction:impressionsAppendixData:)(v13, v15, 0, 0, 0, 0, 0, 0, v24, 0, v18, v40, &aBlock, v55, v23, 0, 0);
  v26 = v13;
  v27 = v42;
  swift_unknownObjectRelease(v26);
  swift_release(v23);
  swift_bridgeObjectRelease(v18);
  sub_100011088((uint64_t)v55, (uint64_t *)&unk_100808400);
  sub_100011088((uint64_t)&aBlock, &qword_100801508);
  v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_objectGraph]
      + qword_100854078;
  swift_beginAccess(v28, v55, 0, 0);
  sub_1001964EC(v28, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v7) == 1)
  {
    sub_100011088((uint64_t)v6, &qword_1008141F0);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v7);
    __break(1u);
  }
  else
  {
    v29 = v50;
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v50, v6, v7);
    v32 = v43;
    v31 = v44;
    dispatch thunk of MetricsEvent.metricsData.getter(v30);
    v33 = v47;
    v34 = MetricsPipeline.process(_:using:)(v31, v47);
    v35 = swift_release(v34);
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v31, v46, v35);
    v36 = swift_allocObject(&unk_100737B98, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16);
    v53 = sub_1003116FC;
    v54 = v36;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v52 = sub_1000BD6CC;
    *((_QWORD *)&v52 + 1) = &unk_100737D30;
    v37 = _Block_copy(&aBlock);
    objc_msgSend(v25, "dismissViewControllerAnimated:completion:", 1, v37, swift_release(v54).n128_f64[0]);
    _Block_release(v37);
    v38 = swift_release(v32);
    (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v29, v7, v38);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v33, v49);
  }
  return result;
}

void sub_100310480(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for DispatchQoS(0, v6);
  v9 = *(_QWORD *)(v32 - 8);
  v10 = __chkstk_darwin(v32);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v29 - v18;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton))
  {
    sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v31 = v5;
    v30 = static OS_dispatch_queue.main.getter(v20);
    static DispatchTime.now()(v30);
    + infix(_:_:)(v16, a1);
    v21 = *(void (**)(char *, uint64_t))(v14 + 8);
    v21(v16, v13);
    v22 = swift_allocObject(&unk_100737B98, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16);
    aBlock[4] = sub_1003118CC;
    v34 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100737D58;
    v23 = _Block_copy(aBlock);
    v24 = swift_release(v34);
    static DispatchQoS.unspecified.getter(v24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_10001F65C((unint64_t *)&qword_1007F4F40, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
    v27 = sub_100033D68();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v4, v25);
    v28 = (void *)v30;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v12, v8, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v32);
    v21(v19, v13);
  }
}

void sub_100310724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *Strong;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a1 + 16;
  swift_beginAccess(v6, v18, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = *(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController];

    if (v8)
    {
      swift_beginAccess(v6, v17, 0, 0);
      v9 = swift_unknownObjectWeakLoadStrong(v6);
      if (v9)
      {
        v10 = (char *)v9;
        type metadata accessor for DynamicTypeButton(0);
        if (qword_1007F25B8 != -1)
          swift_once(&qword_1007F25B8, sub_100416078);
        v11 = sub_1000117A8(v2, (uint64_t)qword_100855610);
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
        v12 = (void *)DynamicTypeButton.__allocating_init(useCase:)(v5);
        v13 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton;
        v14 = *(void **)&v10[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton];
        if (v14)
        {
          objc_msgSend(v14, "removeFromSuperview");
          v15 = *(void **)&v10[v13];
        }
        else
        {
          v15 = 0;
        }
        *(_QWORD *)&v10[v13] = v12;
        v16 = v12;

        sub_10030E568();
      }
    }
  }
}

void ArcadeSubscribeViewController.apply(page:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton;
  v5 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_fallbackDismissButton];
  if (v5)
  {
    objc_msgSend(v5, "removeFromSuperview");
    v6 = *(void **)&v2[v4];
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)&v2[v4] = 0;

  sub_10030E568();
  v7 = swift_allocObject(&unk_100737B98, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = objc_msgSend(v2, "view", swift_retain(v7).n128_f64[0]);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = objc_msgSend(v2, "view");
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v19 = v18;
  objc_msgSend(v18, "safeAreaInsets");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  CGRect.subtracting(insets:)(v21, v23, v25, v27, v11, v13, v15, v17);
  sub_10045C0B4(v28, v29, a1, (uint64_t)sub_1003114FC, v7, *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_artworkLoader], *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_impressionsCalculator], *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_objectGraph]);
  swift_release_n(v7, 2);
  v30 = objc_msgSend(v2, "view");
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, "setNeedsLayout");

    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_100310A88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  _BYTE v6[32];
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    sub_100010E9C(a1, (uint64_t)v6);
    sub_100310028();

    return sub_100011088((uint64_t)v6, &qword_1007F6E90);
  }
  return result;
}

Swift::Void __swiftcall ArcadeSubscribeViewController.toggleDismissButtonVisibility(shouldHide:)(Swift::Bool shouldHide)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void *v7;
  double v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  double *v23;
  void **aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  void (*v28)();
  uint64_t v29;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100311504(0, v4);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_pageView);
  if (shouldHide)
    v8 = 0.0;
  else
    v8 = 1.0;
  v9 = (void *)objc_opt_self(UIView);
  v10 = swift_allocObject(&unk_100737BC0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_100737BE8, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(double *)(v11 + 24) = v8;
  v28 = sub_1003116AC;
  v29 = v11;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1000BD6CC;
  v27 = &unk_100737C00;
  v12 = _Block_copy(&aBlock);
  swift_release(v29);
  objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 4, v12, 0, 0.15, 0.0);
  _Block_release(v12);
  if (shouldHide)
  {
    v13 = swift_allocObject(&unk_100737C38, 24, 7);
    *(_QWORD *)(v13 + 16) = v7;
    v28 = sub_1003116F4;
    v29 = v13;
    aBlock = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_1000BD6CC;
    v27 = &unk_100737C50;
    v14 = _Block_copy(&aBlock);
    v23 = _swiftEmptyArrayStorage;
    v15 = sub_10001F65C((unint64_t *)&qword_1007F4F40, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v16 = v7;
    v17 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
    v18 = sub_100033D68();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v3, v15);
    v19 = type metadata accessor for DispatchWorkItem(0);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v20 = DispatchWorkItem.init(flags:block:)(v6, v14);
    v21 = swift_release(v29);
    sub_100311504(v20, v21);
    swift_release(v20);
  }
}

void sub_100310D6C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;

  v0 = (void *)objc_opt_self(UIView);
  v1 = swift_allocObject(&unk_100737BC0, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16);
  v2 = swift_allocObject(&unk_100737D90, 32, 7);
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 0x3FF0000000000000;
  v4[4] = sub_1003118F8;
  v5 = v2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1000BD6CC;
  v4[3] = &unk_100737DA8;
  v3 = _Block_copy(v4);
  swift_release(v5);
  objc_msgSend(v0, "animateWithDuration:delay:options:animations:completion:", 4, v3, 0, 0.15, 0.0);
  _Block_release(v3);
}

Swift::Void __swiftcall ArcadeSubscribeViewController.dismiss()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = objc_msgSend(v0, "presentedViewController");

  if (!v1)
  {
    v2 = objc_msgSend(v0, "navigationController");
    v3 = objc_msgSend(v2, "visibleViewController");

    if (v3)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
      v4 = v0;
      v5 = v3;
      v6 = static NSObject.== infix(_:_:)(v5, v4);

      if ((v6 & 1) != 0)
      {
        v7 = swift_allocObject(&unk_100737B98, 24, 7);
        swift_unknownObjectWeakInit(v7 + 16);
        v9[4] = sub_1003116FC;
        v10 = v7;
        v9[0] = _NSConcreteStackBlock;
        v9[1] = 1107296256;
        v9[2] = sub_1000BD6CC;
        v9[3] = &unk_100737C78;
        v8 = _Block_copy(v9);
        objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v8, swift_release(v10).n128_f64[0]);
        _Block_release(v8);
      }
    }
  }
}

double sub_100310FD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_delegate);

    if (v5)
    {
      sub_1004CE894();
      *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
    }
  }
  return result;
}

Swift::Void __swiftcall ArcadeSubscribeViewController.showLoading()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static JULoadingViewController.PresentationContext.placeholder.getter(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v4, 0);
  v8 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController);
  v10 = v9;
  static ViewControllerContainment.remove(_:)(v9);

  v11 = *(void **)(v1 + v8);
  *(_QWORD *)(v1 + v8) = v7;
  v12 = v7;

  sub_10030E350();
  if ((ArcadeSubscribePresenter.isAskToBuyRequest.getter() & 1) == 0)
  {
    v13 = type metadata accessor for ASKBagContract(0);
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_objectGraph);
    v15 = *(_QWORD *)(v14 + qword_100854070);
    if (v15)
    {
      swift_retain(*(_QWORD *)(v14 + qword_100854070));
      v17 = ASKBagContract.arcadeSubscribePageDismissDelay.getter(v16);
      sub_100310480(v17);
      swift_release(v15);
    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v13);
      __break(1u);
    }
  }
}

Swift::Void __swiftcall ArcadeSubscribeViewController.hideLoading()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController);
  v3 = v2;
  static ViewControllerContainment.remove(_:)(v2);

  v4 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  sub_10030E350();
}

void ArcadeSubscribeViewController.show(updateError:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v2 = v1;
  type metadata accessor for JUContentUnavailableViewController(0);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_presenter);
  v5 = sub_10001F65C(&qword_100807308, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscribePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_errorRetain(a1);
  swift_retain(v4);
  v6 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(a1, v4, v5, 0, 0, 0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController;
  v8 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_overlayViewController);
  v9 = v8;
  static ViewControllerContainment.remove(_:)(v8);

  v10 = *(void **)(v2 + v7);
  *(_QWORD *)(v2 + v7) = v6;
  v11 = v6;

  sub_10030E350();
}

uint64_t ArcadeSubscribeViewController.perform(action:sender:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1003290E0();
  if (result)
  {
    v10 = result;
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_objectGraph);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
    sub_100407E60(a1, a2, (uint64_t)v8, v11);
    v12 = swift_release(v10);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v12);
  }
  return result;
}

id ArcadeSubscribeViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void ArcadeSubscribeViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.ArcadeSubscribeViewController", 52, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

_QWORD *sub_100311470(_QWORD *a1)
{
  destroy for ArcadeSubscribePageLayout.Metrics(a1);
  return a1;
}

_QWORD *sub_1003114A4(_QWORD *a1)
{
  destroy for AXArcadeSubscribePageLayout.Metrics(a1);
  return a1;
}

uint64_t sub_1003114D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003114FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100310A88(a1, v1);
}

void sub_100311504(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  double v21;
  double (*v22)(char *, uint64_t);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v5 = type metadata accessor for DispatchTime(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  v12 = OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_delayedDismissalReappearanceItem;
  v13 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_delayedDismissalReappearanceItem);
  if (v13)
  {
    v14 = swift_retain(v13);
    dispatch thunk of DispatchWorkItem.cancel()(v14);
    swift_release(v13);
    v13 = *(_QWORD *)(v3 + v12);
  }
  *(_QWORD *)(v3 + v12) = a1;
  swift_retain(a1);
  swift_release(v13);
  v15 = *(_QWORD *)(v3 + v12);
  if (v15)
  {
    v16 = type metadata accessor for ASKBagContract(0);
    v17 = *(_QWORD *)(*(_QWORD *)(v3
                                + OBJC_IVAR____TtC22SubscribePageExtension29ArcadeSubscribeViewController_objectGraph)
                    + qword_100854070);
    if (v17)
    {
      sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      swift_retain(v15);
      v18 = swift_retain(v17);
      v19 = (void *)static OS_dispatch_queue.main.getter(v18);
      v20 = static DispatchTime.now()(v19);
      v21 = ASKBagContract.arcadeSubscribePageDismissDelay.getter(v20);
      + infix(_:_:)(v8, v21);
      v22 = *(double (**)(char *, uint64_t))(v6 + 8);
      v23.n128_f64[0] = v22(v8, v5);
      OS_dispatch_queue.asyncAfter(deadline:execute:)(v11, v15, v23);
      swift_release(v15);
      swift_release(v17);

      v22(v11, v5);
    }
    else
    {
      v24 = v16;
      swift_retain(v15);
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v24);
      __break(1u);
    }
  }
}

void sub_1003116AC()
{
  uint64_t v0;

  sub_10045E1BC(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1003116B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003116C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003116D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003116F4()
{
  sub_100310D6C();
}

double sub_1003116FC()
{
  uint64_t v0;

  return sub_100310FD0(v0);
}

unint64_t sub_100311718()
{
  unint64_t result;

  result = qword_100807310;
  if (!qword_100807310)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ArcadeSubscribeViewController.Context, &type metadata for ArcadeSubscribeViewController.Context);
    atomic_store(result, (unint64_t *)&qword_100807310);
  }
  return result;
}

uint64_t sub_10031175C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100807318, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeSubscribeViewController, (uint64_t)&protocol conformance descriptor for ArcadeSubscribeViewController);
}

uint64_t type metadata accessor for ArcadeSubscribeViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension29ArcadeSubscribeViewController);
}

uint64_t sub_1003117A8(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100807320, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeSubscribeViewController, (uint64_t)&protocol conformance descriptor for ArcadeSubscribeViewController);
}

uint64_t sub_1003117D4(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_100807328, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeSubscribeViewController, (uint64_t)&protocol conformance descriptor for ArcadeSubscribeViewController);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribeViewController.Context(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10031184C + 4 * byte_1006849E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100311880 + 4 * byte_1006849E0[v4]))();
}

uint64_t sub_100311880(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100311888(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100311890);
  return result;
}

uint64_t sub_10031189C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003118A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003118A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003118B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribeViewController.Context()
{
  return &type metadata for ArcadeSubscribeViewController.Context;
}

void sub_1003118CC()
{
  uint64_t v0;

  sub_100310724(v0);
}

uint64_t sub_1003118D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10031192C()
{
  double result;

  result = 0.0;
  xmmword_100853EB0 = xmmword_100684BB0;
  *(_OWORD *)&qword_100853EC0 = xmmword_100684BB0;
  return result;
}

unint64_t sub_100311944()
{
  double *v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  double v7;
  id v8;
  NSString *v9;
  id v10;
  NSString *v11;
  id v12;
  NSString *v13;
  id v14;
  _BYTE v16[152];

  v1 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v1, v16);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v3 = (void *)*((_QWORD *)v0 + 4);
  v4 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  v5 = (void *)*((_QWORD *)v0 + 5);
  v6 = sub_100019574(0, &qword_1007F67F8, NSParagraphStyle_ptr);
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 104) = v6;
  *(_QWORD *)(inited + 112) = NSBaselineOffsetAttributeName;
  v7 = v0[6];
  v8 = objc_allocWithZone((Class)NSNumber);
  v9 = NSFontAttributeName;
  v10 = v3;
  v11 = NSParagraphStyleAttributeName;
  v12 = v5;
  v13 = NSBaselineOffsetAttributeName;
  v14 = objc_msgSend(v8, "initWithDouble:", v7);
  *(_QWORD *)(inited + 144) = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
  *(_QWORD *)(inited + 120) = v14;
  return sub_1003699BC(inited);
}

double sub_100311A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  NSString v31;
  Class isa;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + qword_100853ED8 + 8);
  if (!v9)
    goto LABEL_7;
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)(v1 + qword_100853ED8) & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = qword_100853EE0;
    if (*(_QWORD *)(v1 + qword_100853EE0))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + qword_100853ED8 + 8));
    }
    else
    {
      v13 = qword_1007F2650;
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + qword_100853ED8 + 8));
      if (v13 != -1)
        swift_once(&qword_1007F2650, sub_100416A14);
      v14 = type metadata accessor for FontUseCase(0);
      v15 = sub_1000117A8(v14, (uint64_t)qword_1008557D8);
      v16 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, v15, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v14);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
      v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
      v18 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 3, 0, 0, 0, v5, 0, 0);
      sub_100313598(v18);

    }
    v19 = (uint64_t *)(v1 + qword_100853ED0);
    v20 = *(void **)(v1 + qword_100853ED0 + 32);
    if (v20)
    {
      v21 = *v19;
      v22 = v19[1];
      v23 = v19[2];
      v24 = v19[3];
      v26 = (void *)v19[5];
      v25 = v19[6];
      v39 = v21;
      v40 = v22;
      v41 = v23;
      v42 = v24;
      v43 = v20;
      v44 = v26;
      v45 = v25;
      v27 = *(void **)(v1 + v11);
      if (v27)
      {
        v28 = v23;
        v38 = v25;
        sub_100313640(v21, v22, v23, v24, v20, v26);
        v37 = v27;
        v29 = sub_100311944();
        v30 = objc_allocWithZone((Class)NSAttributedString);
        v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v9);
        type metadata accessor for Key(0);
        sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v33 = objc_msgSend(v30, "initWithString:attributes:", v31, isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

        v34 = v37;
        objc_msgSend(v37, "setAttributedText:", v33);
        sub_100312E60(v21, v22, v28, v24, v20, v26);

      }
      else
      {
        *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
      }
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
      v35 = *(void **)(v1 + v11);
      if (v35)
        objc_msgSend(v35, "setAttributedText:", 0, result);
    }
  }
  else
  {
LABEL_7:
    sub_100313598(0);
  }
  return result;
}

void sub_100311E04()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  __int128 v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double MidY;
  double v22;
  double v23;
  void *v24;
  void *v25;
  id v26;
  double MinX;
  double v28;
  objc_super v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v29, "layoutSubviews");
  v1 = *(void **)&v0[qword_100853EE0];
  if (v1)
  {
    v2 = *(void **)&v0[qword_100852CF8];
    v3 = v1;
    objc_msgSend(v2, "frame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    if (qword_1007F1D08 != -1)
      swift_once(&qword_1007F1D08, sub_10031192C);
    v12 = xmmword_100853EB0;
    v28 = *((double *)&xmmword_100853EB0 + 1);
    v14 = *(double *)&qword_100853EC0;
    v13 = unk_100853EC8;
    v30.origin.x = v5;
    v30.origin.y = v7;
    v30.size.width = v9;
    v30.size.height = v11;
    v15 = CGRectGetWidth(v30) - (*((double *)&v12 + 1) + v13);
    v31.origin.x = v5;
    v31.origin.y = v7;
    v31.size.width = v9;
    v31.size.height = v11;
    v16 = CGRectGetHeight(v31) - (*(double *)&v12 + v14);
    objc_msgSend(v3, "sizeThatFits:", v15, v16);
    v18 = v17;
    v20 = v19;
    v32.origin.x = v5;
    v32.origin.y = v7;
    v32.size.width = v9;
    v32.size.height = v11;
    MinX = CGRectGetMinX(v32);
    v33.origin.x = v5;
    v33.origin.y = v7;
    v33.size.width = v9;
    v33.size.height = v11;
    MidY = CGRectGetMidY(v33);
    if (v15 >= v18)
      v22 = v18;
    else
      v22 = v15;
    if (v16 >= v20)
      v23 = v20;
    else
      v23 = v16;
    objc_msgSend(v3, "setFrame:", v28 + MinX, MidY + v20 * -0.5, v22, v23, *(_QWORD *)&MinX);

  }
  v24 = *(void **)&v0[qword_100807370];
  if (v24)
  {
    v25 = *(void **)&v0[qword_100852CF8];
    v26 = v24;
    objc_msgSend(v25, "bounds");
    objc_msgSend(v26, "setFrame:");

  }
}

void sub_100311FF4(void *a1)
{
  id v1;

  v1 = a1;
  sub_100311E04();

}

double sub_100312028()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "prepareForReuse");
  v1 = &v0[qword_100853ED0];
  v2 = *(_QWORD *)&v0[qword_100853ED0];
  v3 = *(_QWORD *)&v0[qword_100853ED0 + 8];
  v4 = *(_QWORD *)&v0[qword_100853ED0 + 16];
  v5 = *(_QWORD *)&v0[qword_100853ED0 + 24];
  v6 = *(void **)&v0[qword_100853ED0 + 32];
  v7 = *(void **)&v0[qword_100853ED0 + 40];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_QWORD *)v1 + 6) = 0;
  sub_100312E60(v2, v3, v4, v5, v6, v7);
  objc_msgSend(v0, "setNeedsLayout");
  v8 = &v0[qword_100853ED8];
  v9 = *(_QWORD *)&v0[qword_100853ED8 + 8];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  swift_bridgeObjectRelease(v9);
  return sub_100311A88();
}

void sub_1003120B8(void *a1)
{
  id v1;

  v1 = a1;
  sub_100312028();

}

void sub_1003120EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  void *v37;
  id v38;
  char *v39;
  __n128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[3];
  uint64_t v48;

  v6 = v5;
  v11 = type metadata accessor for TodayCard.Style(0);
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  __chkstk_darwin(v11);
  v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StringCharacteristics(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100312FA0(a1, a3, (uint64_t)a4, a5);
  v19 = objc_msgSend(a4, "traitCollection");
  v20 = objc_msgSend(v19, "userInterfaceIdiom") == (id)1 && objc_msgSend(v19, "horizontalSizeClass") == (id)2;
  v21 = TodayCard.titleCharacteristics.getter();
  static Locale.storefront.getter(v21);
  sub_1003133F4(v20, (uint64_t)v18, (uint64_t)v15, (uint64_t)v47);
  v22 = v48;
  v23 = &v6[qword_100853ED0];
  v24 = *(_QWORD *)&v6[qword_100853ED0];
  v25 = *(_QWORD *)&v6[qword_100853ED0 + 8];
  v26 = *(_QWORD *)&v6[qword_100853ED0 + 16];
  v27 = *(_QWORD *)&v6[qword_100853ED0 + 24];
  v29 = *(void **)&v6[qword_100853ED0 + 32];
  v28 = *(void **)&v6[qword_100853ED0 + 40];
  v30 = v47[1];
  *(_OWORD *)v23 = v47[0];
  *((_OWORD *)v23 + 1) = v30;
  *((_OWORD *)v23 + 2) = v47[2];
  *((_QWORD *)v23 + 6) = v22;
  sub_100313540((uint64_t)v47);
  sub_100312E60(v24, v25, v26, v27, v29, v28);
  objc_msgSend(v6, "setNeedsLayout");
  v31 = sub_10031356C((uint64_t)v47);
  v32 = TodayCard.title.getter(v31);
  v33 = (uint64_t *)&v6[qword_100853ED8];
  v34 = *(_QWORD *)&v6[qword_100853ED8 + 8];
  *v33 = v32;
  v33[1] = v35;
  swift_bridgeObjectRelease(v34);
  v36 = sub_100311A88();
  v37 = *(void **)&v6[qword_100853EE0];
  if (v37)
  {
    v38 = v37;
    v39 = v44;
    v41 = TodayCard.style.getter(v40);
    v42 = (void *)TodayCard.Style.cardTitleTextColor.getter(v41);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v39, v46);
    objc_msgSend(v38, "setTextColor:", v42);

  }
  objc_msgSend(v6, "setNeedsLayout", v36);

}

id sub_100312384(uint64_t a1, void *a2, __n128 a3)
{
  char *v3;
  double v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = sub_100312404(a1, a2, a3);
  v5 = qword_100807370;
  v6 = *(void **)&v3[qword_100807370];
  if (v6)
  {
    objc_msgSend(v6, "removeFromSuperview", v4);
    v7 = *(void **)&v3[v5];
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)&v3[v5] = 0;

  v8 = *(_QWORD *)&v3[v5];
  if (v8)
    objc_msgSend(*(id *)&v3[qword_100852CF8], "insertSubview:atIndex:", v8, 0);
  return objc_msgSend(v3, "setNeedsLayout");
}

double sub_100312404(uint64_t a1, void *a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  __n128 v9;
  double result;
  id v11;
  _BYTE v12[40];

  v4 = sub_100312AD4(a1, a2, a3);
  v11 = *(id *)(v3 + qword_1008564F0);
  v5 = sub_100019574(0, (unint64_t *)&qword_1007FE190, UIImageView_ptr);
  v6 = sub_100312EB8();
  v7 = v11;
  AnyHashable.init<A>(_:)(&v11, v5, v6);
  v8 = swift_allocObject(&unk_100737F50, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v9 = swift_retain(v8);
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v4, 2, 1, v12, sub_100312F98, v8, v9);
  swift_release(v4);
  swift_release(v8);
  sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F9850);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_100312508()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  double result;
  char *v31;
  _BYTE v32[40];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F67E8);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(void **)&v0[qword_1008564F0];
  objc_msgSend(v6, "setImage:", 0, v3);
  objc_msgSend(v6, "setBackgroundColor:", 0);
  v7 = qword_100807370;
  v8 = *(char **)&v1[qword_100807370];
  if (v8)
  {
    v9 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image];
    *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image] = 0;
    v10 = v8;

    v11 = sub_10039F828();
  }
  else
  {
    v12 = type metadata accessor for BrandedAppTodayCardNoArtBackgroundView(0);
    v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");
    v14 = *(void **)&v1[v7];
    v15 = v13;
    if (v14)
    {
      objc_msgSend(v14, "removeFromSuperview");
      v16 = *(void **)&v1[v7];
    }
    else
    {
      v16 = 0;
    }
    *(_QWORD *)&v1[v7] = v13;
    v10 = (char *)v13;

    v17 = *(_QWORD *)&v1[v7];
    if (v17)
      objc_msgSend(*(id *)&v1[qword_100852CF8], "insertSubview:atIndex:", v17, 0);
    objc_msgSend(v1, "setNeedsLayout");

  }
  v18 = TodayCardMediaAppIcon.icon.getter(v11);
  Artwork.style.getter(v18);
  swift_release(v18);
  v20 = type metadata accessor for Artwork.Style(0, v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  v21 = (uint64_t)&v10[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_style];
  swift_beginAccess(&v10[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_style], v32, 33, 0);
  sub_100070944((uint64_t)v5, v21);
  objc_msgSend(v10, "setNeedsLayout", swift_endAccess(v32).n128_f64[0]);
  v22 = sub_100011088((uint64_t)v5, &qword_1007F67E8);
  v23 = TodayCardMediaAppIcon.icon.getter(v22);
  v24 = Artwork.config(_:mode:prefersLayeredImage:)(0, 0, 230.0, 230.0);
  swift_release(v23);
  v31 = v10;
  v25 = type metadata accessor for BrandedAppTodayCardNoArtBackgroundView(0);
  v26 = sub_10000E99C(&qword_100807508, type metadata accessor for BrandedAppTodayCardNoArtBackgroundView, (uint64_t)&protocol conformance descriptor for NSObject);
  v27 = v10;
  AnyHashable.init<A>(_:)(&v31, v25, v26);
  v28 = swift_allocObject(&unk_100737F28, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16);
  v29 = swift_retain(v28);
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v24, 2, 1, v32, sub_100312EB0, v28, v29);

  swift_release(v24);
  swift_release(v28);
  sub_100011088((uint64_t)v32, (uint64_t *)&unk_1007F9850);
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

void sub_100312828(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  id v8;
  void *v9;
  char *v10;
  void *v11;
  _BYTE v12[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (id)Strong;
    v9 = *(void **)(Strong + qword_100807370);
    if (v9)
    {
      v10 = v9;

      v11 = *(void **)&v10[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image];
      *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension38BrandedAppTodayCardNoArtBackgroundView_image] = a1;
      v8 = a1;

      sub_10039F828();
    }

  }
}

id sub_1003128C8(char *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  char *v11;
  char *v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &a1[qword_100853ED0];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_QWORD *)v11 + 6) = 0;
  v12 = &a1[qword_100853ED8];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&a1[qword_100853EE0] = 0;
  *(_QWORD *)&a1[qword_100807370] = 0;
  v14.receiver = a1;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, "initWithFrame:", a2, a3, a4, a5);
}

void sub_100312978()
{
  uint64_t v0;

  sub_100312E60(*(_QWORD *)(v0 + qword_100853ED0), *(_QWORD *)(v0 + qword_100853ED0 + 8), *(_QWORD *)(v0 + qword_100853ED0 + 16), *(_QWORD *)(v0 + qword_100853ED0 + 24), *(void **)(v0 + qword_100853ED0 + 32), *(void **)(v0 + qword_100853ED0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100853ED8 + 8));

}

void sub_1003129D8(uint64_t a1)
{
  sub_100312E60(*(_QWORD *)(a1 + qword_100853ED0), *(_QWORD *)(a1 + qword_100853ED0 + 8), *(_QWORD *)(a1 + qword_100853ED0 + 16), *(_QWORD *)(a1 + qword_100853ED0 + 24), *(void **)(a1 + qword_100853ED0 + 32), *(void **)(a1 + qword_100853ED0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100853ED8 + 8));

}

uint64_t type metadata accessor for BrandedAppTodayBrickCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1008073A0;
  if (!qword_1008073A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrandedAppTodayBrickCollectionViewCell);
  return result;
}

uint64_t sub_100312A80(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = "8";
  v2[1] = &unk_100684C40;
  v2[2] = &unk_100684C58;
  v2[3] = &unk_100684C58;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 264);
}

uint64_t sub_100312AD4(uint64_t a1, void *a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  __n128 v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v28 = type metadata accessor for Artwork.Crop(0, a3);
  v4 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AspectRatio(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SmallStoryCardLayout.Metrics(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (objc_class *)objc_msgSend(a2, "traitCollection", v14);
  sub_100234384(v17, (uint64_t)v16, v18);

  v19 = sub_1000FE420(a2);
  SmallStoryCardLayout.Metrics.contentAspectRatio.getter();
  v20 = sub_1000FE420(a2);
  v22 = AspectRatio.height(fromWidth:)(v21, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v24 = Artwork.crop.getter(v23);
  v25 = Artwork.Crop.preferredContentMode.getter(v24);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  return Artwork.config(_:mode:prefersLayeredImage:)(v25, 0, v19, v22);
}

uint64_t sub_100312C84()
{
  return type metadata accessor for BrandedAppTodayBrickCollectionViewCell(0);
}

void destroy for BrandedAppTodayBrickLayoutMetrics(uint64_t a1)
{

}

uint64_t initializeWithCopy for BrandedAppTodayBrickLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = v4;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for BrandedAppTodayBrickLayoutMetrics(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for BrandedAppTodayBrickLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrandedAppTodayBrickLayoutMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrandedAppTodayBrickLayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandedAppTodayBrickLayoutMetrics()
{
  return &type metadata for BrandedAppTodayBrickLayoutMetrics;
}

void sub_100312E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  if (a5)
  {

  }
}

uint64_t sub_100312E8C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100312EB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100312828(a1, a2, a3, a4, v4);
}

unint64_t sub_100312EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008086E0;
  if (!qword_1008086E0)
  {
    v1 = sub_100019574(255, (unint64_t *)&qword_1007FE190, UIImageView_ptr);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1008086E0);
  }
  return result;
}

void sub_100312F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  _BYTE v10[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(id *)(Strong + qword_1008564F0);

    objc_msgSend(v9, "setImage:", a1);
  }
}

void sub_100312F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100312F10(a1, a2, a3, a4, v4);
}

uint64_t sub_100312FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v5 = v4;
  sub_100550E88(a1, a3);
  v9 = objc_msgSend(v4, "traitCollection");
  v10 = type metadata accessor for TodayCardMediaBrandedSingleApp(0);
  v11 = TodayCardMediaWithArtwork.artwork(for:)(v9, v10, &protocol witness table for TodayCardMediaBrandedSingleApp);

  if (!v11)
  {
    v12 = objc_msgSend(v4, "traitCollection");
    v13 = TodayCardMediaWithArtwork.video(for:)();

    if (!v13)
      return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v5) + 0x100))(a2, a4);
    v11 = Video.preview.getter();
    swift_release(v13);
  }
  v14 = swift_retain(v11);
  v15 = (void *)TodayCard.backgroundColor.getter(v14);

  if (!v15)
  {
    v16 = Artwork.backgroundColor.getter();
    if (v16)
    {
      v17 = (void *)v16;
      objc_msgSend(*(id *)((char *)v5 + qword_1008564F0), "setBackgroundColor:", v16);

    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v5) + 0xF8))(v11, a3, a4);
  return swift_release_n(v11, 2);
}

double sub_10031314C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  double result;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;

  v39 = a1;
  v3 = type metadata accessor for StringCharacteristics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v38 = (char *)&v37 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - v9;
  v11 = type metadata accessor for Locale(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v37 - v17;
  v19 = Locale.isChinese.getter(v16);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v21 = v20(v18, a2, v11);
  if ((v19 & 1) != 0)
    v22 = 1;
  else
    v22 = Locale.isJapanese.getter(v21);
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v18, v11);
  v24 = v20(v14, a2, v11);
  if ((v22 & 1) != 0)
    v25 = 1;
  else
    v25 = Locale.isKorean.getter(v24);
  v26 = v39;
  v23(v14, v11);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v28 = v27(v10, v26, v3);
  if ((v25 & 1) != 0)
  {
    v29 = *(void (**)(char *, uint64_t))(v4 + 8);
    v29(v10, v3);
    v30 = v40;
    v27(v40, v26, v3);
LABEL_10:
    v29(v30, v3);
    return 1.5;
  }
  v31 = v38;
  static StringCharacteristics.extraTallCharacters.getter(v28);
  v32 = sub_10000E99C(&qword_1007F6800, (uint64_t (*)(uint64_t))&type metadata accessor for StringCharacteristics, (uint64_t)&protocol conformance descriptor for StringCharacteristics);
  v33 = dispatch thunk of SetAlgebra.isSuperset(of:)(v31, v3, v32);
  v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v31, v3);
  v29(v10, v3);
  v30 = v40;
  v34 = v27(v40, v26, v3);
  if ((v33 & 1) != 0)
    goto LABEL_10;
  static StringCharacteristics.accentedCharacters.getter(v34);
  v36 = dispatch thunk of SetAlgebra.isSuperset(of:)(v31, v3, v32);
  v29(v31, v3);
  v29(v30, v3);
  result = 1.0;
  if ((v36 & 1) != 0)
    return 1.5;
  return result;
}

double sub_1003133F4@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double result;

  v8 = (void *)objc_opt_self(UIFont);
  if ((a1 & 1) != 0)
    v9 = 48.0;
  else
    v9 = 30.0;
  v10 = 38.0;
  if ((a1 & 1) != 0)
  {
    v10 = 60.0;
    v11 = -12.0;
  }
  else
  {
    v11 = -8.0;
  }
  v12 = objc_msgSend(v8, "systemFontOfSize:weight:", v10, UIFontWeightBold);
  v13 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  v14 = v9 * sub_10031314C(a2, a3);
  objc_msgSend(v13, "setMinimumLineHeight:", v14);
  objc_msgSend(v13, "setMaximumLineHeight:", v14);
  v15 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a3, v15);
  v16 = type metadata accessor for StringCharacteristics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  result = 60.0;
  *(_OWORD *)a4 = xmmword_100684BC0;
  *(_OWORD *)(a4 + 16) = xmmword_100684BD0;
  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = v13;
  *(double *)(a4 + 48) = v11;
  return result;
}

uint64_t sub_100313540(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = v2;
  return a1;
}

uint64_t sub_10031356C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);

  return a1;
}

id sub_100313598(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = qword_100853EE0;
  v4 = *(void **)&v1[qword_100853EE0];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "addSubview:", v8);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_100313640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v6;
  id result;

  if (a5)
  {
    v6 = a5;
    return a6;
  }
  return result;
}

void sub_100313670(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[40];

  v5 = v4;
  v75 = a2;
  v9 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for VideoConfiguration(0, v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AspectRatio(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011020(a1, (uint64_t)v77);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v25 = type metadata accessor for UpsellBreakout(0);
  v26 = swift_dynamicCast(&v76, v77, v24, v25, 6);
  if ((_DWORD)v26)
  {
    v71 = v23;
    v72 = v21;
    v73 = v76;
    v74 = v5;
    v27 = UpsellBreakout.video.getter(v26);
    v29 = v11;
    if (v27)
    {
      v30 = v27;
      v31 = *(void **)(*(_QWORD *)(*(_QWORD *)(v74
                                             + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_mediaViewContainer)
                                 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer)
                     + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
      if (v31 && (v32 = type metadata accessor for VideoView(0), (v33 = swift_dynamicCastClass(v31, v32)) != 0))
      {
        v70 = v32;
        v69 = v33;
        v34 = v33 + qword_100856360;
        v35 = swift_beginAccess(v33 + qword_100856360, v77, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v19, v34, v16, v35);
        v36 = v31;
        VideoConfiguration.aspectRatio.getter();
        v37 = v16;
        v38 = v36;
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v37);
        v39 = v72;
        v40 = v20;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v14, 1, v20) != 1)
        {
          v59 = v71;
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v71, v14, v40);
          v60 = AspectRatio.maxSize(filling:)(a3, a4);
          v62 = v61;
          v64 = Video.preview.getter(v63);
          v65 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v60, v62);
          swift_release(v64);
          v66 = sub_10000E99C((unint64_t *)&unk_1007F4810, type metadata accessor for VideoView, (uint64_t)"\t,\v");
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2, 1, v69, v70, v66);
          swift_release(v73);
          swift_release(v65);

          v67 = swift_release(v30);
          (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v59, v40, v67);
          return;
        }

        swift_release(v30);
        sub_100011088((uint64_t)v14, (uint64_t *)&unk_1007FA760);
      }
      else
      {
        v28 = swift_release(v30);
      }
    }
    v41 = v73;
    v42 = UpsellBreakout.artwork.getter(v28);
    if (v42)
    {
      v43 = v42;
      v44 = Artwork.config(_:mode:prefersLayeredImage:)(0, 0, a3, a4);
      v45 = OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_artworkView;
      v46 = v74;
      v47 = *(id *)(v74 + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_artworkView);
      Artwork.style.getter(v47);
      v48 = ArtworkView.style.setter(v29);
      *(_QWORD *)&v49 = Artwork.contentMode.getter(v48).n128_u64[0];
      v51 = ArtworkLoaderConfig.size.getter(objc_msgSend(v47, "setContentMode:", v50, v49));
      v53 = ArtworkView.imageSize.setter(v51, v52);
      v54 = Artwork.backgroundColor.getter(v53);
      if (!v54)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v54 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v54);

      v55 = *(void **)(v46 + v45);
      v56 = type metadata accessor for ArtworkView(0);
      v57 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v58 = v55;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v44, 2, 1, v58, v56, v57);
      swift_release(v43);
      swift_release(v44);

    }
    swift_release(v41);
  }
}

id sub_100313B04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  double (*v54)(char *, uint64_t);
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  unsigned __int8 v58;
  id v59;
  double v60;
  int v61;
  _BYTE *v62;
  int v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char v101;
  char v102;
  char v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  char *v132;
  void *v133;
  id v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  NSString v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  void *v151;
  uint64_t v152;
  double v153;
  uint64_t v154;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;

  v5 = v4;
  v186 = a1;
  v187 = a3;
  v184 = a2;
  v7 = type metadata accessor for BreakoutDetails.TextAlignment(0);
  v182 = *(_QWORD *)(v7 - 8);
  v183 = v7;
  __chkstk_darwin(v7);
  v180 = (char *)&v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v181 = (char *)&v156 - v10;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007FA750);
  __chkstk_darwin(v11);
  v177 = (char *)&v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v176 = (char *)&v156 - v14;
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v16 = __chkstk_darwin(v15);
  v175 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for VideoControls(0, v16);
  __chkstk_darwin(v18);
  v174 = (char *)&v156 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v173 = (char *)&v156 - v21;
  v22 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v23 = __chkstk_darwin(v22);
  v172 = (char *)&v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for VideoFillMode(0, v23);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v171 = (char *)&v156 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for VideoConfiguration(0, v26);
  v178 = *(_QWORD *)(v27 - 8);
  v179 = v27;
  __chkstk_darwin(v27);
  v185 = (char *)&v156 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v29);
  v167 = (char *)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v162 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v156 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v166 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v164 = (char *)&v156 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v34 = __chkstk_darwin(v33);
  v160 = (char *)&v156 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v34);
  v157 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v158 = (char *)&v156 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  v38 = __chkstk_darwin(v37);
  v161 = (char *)&v156 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for UpsellBreakout.DisplayProperties(0, v38);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v43 = (char *)&v156 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for ComponentLayoutOptions(0);
  v45 = *(_QWORD *)(v44 - 8);
  *(_QWORD *)&v46 = __chkstk_darwin(v44).n128_u64[0];
  v48 = (char *)&v156 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = objc_msgSend(a4, "snapshotPageTraitEnvironment", v46);
  v50 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_pageTraits];
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_pageTraits] = v49;
  swift_unknownObjectRetain(v49);
  objc_msgSend(v5, "setNeedsLayout", swift_unknownObjectRelease(v50).n128_f64[0]);
  swift_unknownObjectRelease(v49);
  static ComponentLayoutOptions.isFirstSection.getter(v51);
  v52 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v53 = dispatch thunk of SetAlgebra.isSuperset(of:)(v48, v44, v52);
  v54 = *(double (**)(char *, uint64_t))(v45 + 8);
  v55 = v186;
  v56.n128_f64[0] = v54(v48, v44);
  v57 = UpsellBreakout.displayProperties.getter(v56);
  v58 = UpsellBreakout.DisplayProperties.wantsBlur.getter(v57);
  v59 = (id)(*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  v61 = v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_isBackgroundEffectViewHidden];
  v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_isBackgroundEffectViewHidden] = ((v53 | v58) & 1) == 0;
  if (((v53 | v58) & 1) == v61)
  {
    if (((v53 | v58) & 1) != 0)
      v59 = objc_msgSend(v5, "insertSubview:aboveSubview:", *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_backgroundEffectView], *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_mediaViewContainer]);
    else
      v59 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_backgroundEffectView], "removeFromSuperview");
  }
  v62 = *(_BYTE **)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_backgroundEffectView];
  v63 = v62[OBJC_IVAR____TtC22SubscribePageExtension28BreakoutBackgroundEffectView_wantsTopEffect];
  v62[OBJC_IVAR____TtC22SubscribePageExtension28BreakoutBackgroundEffectView_wantsTopEffect] = v53 & 1;
  if ((v53 & 1) != v63)
  {
    LODWORD(v60) = 0;
    if ((v53 & 1) != 0)
      *(float *)&v60 = 1.0;
    objc_msgSend(*(id *)&v62[OBJC_IVAR____TtC22SubscribePageExtension28BreakoutBackgroundEffectView_topGradient], "setOpacity:", v60);
    v59 = objc_msgSend(v62, "setNeedsDisplay");
  }
  v64 = UpsellBreakout.offerButtonAction.getter(v59);
  v66 = v187;
  if (v64)
  {
    v67 = v64;
    v68 = UpsellBreakout.offerDisplayProperties.getter(v65);
    if (v68)
    {
      v69 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_offerButton];
      v70 = v157;
      v71 = *(void (**)(char *, _QWORD, uint64_t))(v157 + 104);
      v72 = v158;
      v184 = v68;
      v73 = v159;
      v71(v158, enum case for OfferButtonPresenterViewAlignment.center(_:), v159);
      v74 = v160;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v160, 1, 1, v73);
      v75 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
      swift_retain(v67);
      v76 = (uint64_t)v161;
      AccessibilityConditional.init(value:axValue:)(v72, v74, v73, v75);
      v77 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 0, 1, v77);
      v78 = v162;
      v79 = v163;
      v80 = v165;
      (*(void (**)(char *, _QWORD, uint64_t))(v162 + 104))(v163, enum case for OfferButtonSubtitlePosition.below(_:), v165);
      v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
      v82 = v167;
      v81(v167, 1, 1, v80);
      v83 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
      v84 = (uint64_t)v164;
      AccessibilityConditional.init(value:axValue:)(v79, v82, v80, v83);
      v85 = v184;
      sub_10013AB60(v184, v67, 0, v76, v84, v66, 0, 0);
      v86 = swift_release(v67);
      (*(void (**)(uint64_t, uint64_t, __n128))(v166 + 8))(v84, v168, v86);
      sub_100011088(v76, (uint64_t *)&unk_1007F7710);
      objc_msgSend(v69, "setHidden:", 0);
      swift_release(v67);
      swift_release(v85);
      goto LABEL_14;
    }
    v65.n128_u64[0] = swift_release(v67).n128_u64[0];
  }
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_offerButton], "setHidden:", 1, v65.n128_f64[0]);
LABEL_14:
  v87 = sub_1003147E4(v55, v66);
  v88 = UpsellBreakout.video.getter(v87);
  if (v88)
  {
    v89 = v88;
    v90 = v171;
    v91 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v169 + 104))(v171, enum case for VideoFillMode.scaleAspectFill(_:), v170);
    v92 = Video.preview.getter(v91);
    Artwork.size.getter(v92);
    v93 = v172;
    AspectRatio.init(_:_:)(v94);
    swift_release(v92);
    v95 = type metadata accessor for AspectRatio(0);
    v96 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v93, 0, 1, v95);
    v97 = v173;
    v98 = Video.playbackControls.getter(v96);
    v99 = v174;
    v100 = Video.autoPlayPlaybackControls.getter(v98);
    v101 = Video.canPlayFullScreen.getter(v100);
    v102 = Video.allowsAutoPlay.getter();
    v103 = Video.looping.getter();
    v104 = v101 & 1;
    v105 = v185;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v90, v93, v97, v99, v104, v102 & 1, v103 & 1, 0, 0, 1);
    v106 = type metadata accessor for VideoViewManager(0);
    v107 = v187;
    v108 = BaseObjectGraph.inject<A>(_:)(&v188, v106, v106);
    v109 = v188;
    v110 = Video.playbackId.getter(&v188, v108);
    v111 = (uint64_t)v175;
    Video.videoUrl.getter(v110);
    v112 = type metadata accessor for URL(0);
    v113 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v111, 0, 1, v112);
    v114 = (uint64_t)v176;
    v115 = Video.templateMediaEvent.getter(v113);
    v116 = (uint64_t)v177;
    Video.templateClickEvent.getter(v115);
    v117 = type metadata accessor for VideoView(0);
    v118 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    v119 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(&v188, v111, v105, v114, v116, v107, v117, v118);
    sub_100011088(v116, (uint64_t *)&unk_1007FA750);
    sub_100011088(v114, (uint64_t *)&unk_1007FA750);
    sub_100011088(v111, (uint64_t *)&unk_1007F5150);
    sub_100011088((uint64_t)&v188, (uint64_t *)&unk_1007F9850);
    v120 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_mediaViewContainer];
    v121 = OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer;
    v122 = *(void **)(v120 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
    v123 = v119;
    v124 = v122;
    sub_10049A390(v119);

    v125 = *(_QWORD *)(*(_QWORD *)(v120 + v121)
                     + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
    if (v125)
    {
      v126 = swift_dynamicCastClass(v125, v117);
      if (v126)
      {
        v127 = v126 + qword_10080FD08;
        *(_QWORD *)(v127 + 8) = &off_100729648;
        swift_unknownObjectWeakAssign(v127, v5);
      }
    }
    swift_release(v109);

    v128 = swift_release(v89);
    v129 = (*(uint64_t (**)(char *, uint64_t, __n128))(v178 + 8))(v185, v179, v128);
  }
  else
  {
    v130 = UpsellBreakout.artwork.getter();
    swift_release(v130);
    if (v130)
    {
      v131 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_artworkView];
      v132 = *(char **)(*(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_mediaViewContainer]
                      + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
      v133 = *(void **)&v132[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents];
      *(_QWORD *)&v132[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents] = v131;
      v134 = v131;
      v135 = v132;
      sub_100499CC4(v133);

      sub_10049920C();
    }
  }
  v136 = UpsellBreakout.buttonCallToAction.getter(v129);
  if (v137)
  {
    v138 = v137;
    v139 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_buttonDetailsView];
    v140 = String._bridgeToObjectiveC()();
    objc_msgSend(v139, "setText:", v140, swift_bridgeObjectRelease(v138).n128_f64[0]);

    v142 = UpsellBreakout.details.getter(v141);
    v143 = v181;
    BreakoutDetails.textAlignment.getter(v142);
    swift_release(v142);
    v144 = &v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_buttonDetailsTextAlignment];
    v145 = swift_beginAccess(&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_buttonDetailsTextAlignment], &v188, 33, 0);
    v146 = v182;
    v147 = v183;
    (*(void (**)(char *, char *, uint64_t, __n128))(v182 + 24))(v144, v143, v183, v145);
    swift_endAccess(&v188);
    v148 = v180;
    (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v180, v144, v147);
    v149 = BreakoutDetails.TextAlignment.textAlignment(in:)(v5);
    v150 = *(void (**)(char *, uint64_t))(v146 + 8);
    v150(v148, v147);
    objc_msgSend(v139, "setTextAlignment:", v149);
    v136 = ((uint64_t (*)(char *, uint64_t))v150)(v143, v147);
  }
  v151 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_tapGestureRecognizer];
  v152 = UpsellBreakout.video.getter(v136);
  v154 = v152;
  if (v152)
    *(_QWORD *)&v153 = swift_release(v152).n128_u64[0];
  objc_msgSend(v151, "setEnabled:", v154 != 0, v153);
  return objc_msgSend(v5, "setNeedsLayout");
}

uint64_t sub_1003147E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  objc_class *v37;
  void *v38;
  id v39;
  _BYTE *v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  __n128 v44;
  int v45;
  double v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  objc_super v104;

  v102 = a2;
  v3 = sub_10000DF3C((uint64_t *)&unk_100812CD0);
  __chkstk_darwin(v3);
  v101 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007FB8B0);
  v99 = *(_QWORD *)(v5 - 8);
  v100 = v5;
  __chkstk_darwin(v5);
  v98 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v96);
  v95 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v94 = (uint64_t)&v90 - v9;
  __chkstk_darwin(v10);
  v12 = (id *)((char *)&v90 - v11);
  __chkstk_darwin(v13);
  v15 = (id *)((char *)&v90 - v14);
  v16 = type metadata accessor for BreakoutDetails.BackgroundStyle(0);
  v92 = *(_QWORD *)(v16 - 8);
  v93 = v16;
  v17 = __chkstk_darwin(v16);
  v91 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UpsellBreakout.DisplayProperties(0, v17);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v90 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v90 - v27;
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v90 - v31;
  v33 = UpsellBreakout.displayProperties.getter(v30);
  v34 = (id)UpsellBreakout.DisplayProperties.backgroundColor.getter(v33);
  v35 = *(void (**)(char *, uint64_t))(v20 + 8);
  v35(v32, v19);
  v97 = a1;
  if (!v34)
    v34 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v36 = *(char **)(v103 + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_mediaViewContainer);
  v37 = (objc_class *)type metadata accessor for MediaView();
  v104.receiver = v36;
  v104.super_class = v37;
  objc_msgSendSuper2(&v104, "setBackgroundColor:", v34);
  objc_msgSend(*(id *)(*(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer]+ OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents), "setBackgroundColor:", v34);
  v38 = *(void **)&v36[OBJC_IVAR____TtC22SubscribePageExtension9MediaView_reflectionView];
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v39, "setBackgroundColor:", v34);

  }
  v40 = *(_BYTE **)(v103 + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_backgroundEffectView);
  v42 = UpsellBreakout.displayProperties.getter(v41);
  v43 = UpsellBreakout.DisplayProperties.wantsBlur.getter(v42);
  v35(v28, v19);
  v45 = v40[OBJC_IVAR____TtC22SubscribePageExtension28BreakoutBackgroundEffectView_wantsBottomEffect];
  v40[OBJC_IVAR____TtC22SubscribePageExtension28BreakoutBackgroundEffectView_wantsBottomEffect] = v43 & 1;
  if ((v43 & 1) != v45)
  {
    v46 = 0.0;
    if ((v43 & 1) != 0)
      v46 = 1.0;
    objc_msgSend(*(id *)&v40[OBJC_IVAR____TtC22SubscribePageExtension28BreakoutBackgroundEffectView_blurView], "setAlpha:", v46);
    objc_msgSend(v40, "setNeedsDisplay");
  }
  v47 = *(void **)(v103 + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_buttonDetailsView);
  v48 = UpsellBreakout.displayProperties.getter(v44);
  v49 = (id)UpsellBreakout.DisplayProperties.descriptionColor.getter(v48);
  v50 = ((uint64_t (*)(char *, uint64_t))v35)(v25, v19);
  if (!v49)
  {
    v51 = UpsellBreakout.details.getter(v50);
    v52 = v91;
    BreakoutDetails.backgroundStyle.getter(v51);
    swift_release(v51);
    v49 = sub_100144F00();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v93);
  }
  objc_msgSend(v47, "setTextColor:", v49);

  if (qword_1007F3040 != -1)
    swift_once(&qword_1007F3040, sub_1005582F8);
  v53 = v96;
  v54 = sub_1000117A8(v96, (uint64_t)qword_100856E90);
  sub_100105B1C(v54, (uint64_t)v12);
  sub_100105B1C((uint64_t)v12, (uint64_t)v15);
  v56 = UpsellBreakout.displayProperties.getter(v55);
  v57 = UpsellBreakout.DisplayProperties.badgeColor.getter(v56);
  v35(v22, v19);

  *v15 = (id)v57;
  v59 = UpsellBreakout.displayProperties.getter(v58);
  v60 = UpsellBreakout.DisplayProperties.titleColor.getter(v59);
  v35(v22, v19);

  v15[1] = (id)v60;
  v62 = UpsellBreakout.displayProperties.getter(v61);
  v63 = UpsellBreakout.DisplayProperties.descriptionColor.getter(v62);
  v35(v22, v19);

  v15[2] = (id)v63;
  v65 = UpsellBreakout.displayProperties.getter(v64);
  v66 = UpsellBreakout.DisplayProperties.callToActionColor.getter(v65);
  v35(v22, v19);

  v15[3] = (id)v66;
  sub_1001F3700((uint64_t)v12);
  if (qword_1007F3038 != -1)
    swift_once(&qword_1007F3038, sub_100557FC4);
  v67 = sub_1000117A8(v53, (uint64_t)qword_100856E78);
  v68 = v94;
  sub_100105B1C(v67, v94);
  sub_100105B1C(v68, (uint64_t)v12);
  v70 = UpsellBreakout.displayProperties.getter(v69);
  v71 = UpsellBreakout.DisplayProperties.badgeColor.getter(v70);
  v35(v22, v19);

  *v12 = (id)v71;
  v73 = UpsellBreakout.displayProperties.getter(v72);
  v74 = UpsellBreakout.DisplayProperties.titleColor.getter(v73);
  v35(v22, v19);

  v12[1] = (id)v74;
  v76 = UpsellBreakout.displayProperties.getter(v75);
  v77 = UpsellBreakout.DisplayProperties.descriptionColor.getter(v76);
  v35(v22, v19);

  v12[2] = (id)v77;
  v79 = UpsellBreakout.displayProperties.getter(v78);
  v80 = UpsellBreakout.DisplayProperties.callToActionColor.getter(v79);
  v35(v22, v19);

  v12[3] = (id)v80;
  sub_1001F3700(v68);
  sub_100105B1C((uint64_t)v15, v68);
  v81 = v95;
  sub_100105B1C((uint64_t)v12, v95);
  v82 = sub_10000DF3C(&qword_1007F5D10);
  v83 = v98;
  Conditional<>.init(regularValue:compactValue:)(v68, v81, v82, v53);
  v85 = UpsellBreakout.details.getter(v84);
  v87 = v99;
  v86 = v100;
  v88 = (uint64_t)v101;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v101, v83, v100);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v88, 0, 1, v86);
  sub_100121730(v85, v88, v102);
  swift_release(v85);
  sub_100011088(v88, (uint64_t *)&unk_100812CD0);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v83, v86);
  sub_1001F3700((uint64_t)v12);
  return sub_1001F3700((uint64_t)v15);
}

id sub_100314F10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_100313B04(*a1, a4, a3, a6);
}

id sub_100314FE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UpsellBreakoutSizingTraitEnvironment();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UpsellBreakoutSizingTraitEnvironment()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_63C99537259CB4BBA1C2F973322BF86736UpsellBreakoutSizingTraitEnvironment);
}

uint64_t sub_100315070()
{
  return sub_10000E99C(&qword_1007F8460, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBreakout, (uint64_t)&protocol conformance descriptor for UpsellBreakout);
}

id sub_10031509C(void *a1, uint64_t a2)
{
  void *v2;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  Class isa;
  id v14;
  objc_super v16;

  v5 = v2;
  v6 = objc_msgSend(a1, "snapshotPageTraitEnvironment");
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtensionP33_63C99537259CB4BBA1C2F973322BF86736UpsellBreakoutSizingTraitEnvironment_pageTraits] = v6;
  v7 = objc_msgSend(a1, "traitCollection");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  LOBYTE(v7) = static UIContentSizeCategory.> infix(_:_:)(v8, a2);
  if ((v7 & 1) != 0)
  {
    v9 = sub_10000DF3C(&qword_1007F5840);
    v10 = swift_allocObject(v9, 48, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100671250;
    *(_QWORD *)(v10 + 32) = objc_msgSend(a1, "traitCollection");
    v11 = (void *)objc_opt_self(UITraitCollection);
    v12 = objc_msgSend(v11, "traitCollectionWithPreferredContentSizeCategory:", a2);
    *(_QWORD *)(v10 + 40) = v12;
    specialized Array._endMutation()(v12);
    sub_100019574(0, (unint64_t *)&qword_1008075A0, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(v11, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  else
  {
    v14 = objc_msgSend(a1, "traitCollection");
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtensionP33_63C99537259CB4BBA1C2F973322BF86736UpsellBreakoutSizingTraitEnvironment_traitCollection] = v14;

  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for UpsellBreakoutSizingTraitEnvironment();
  return objc_msgSendSuper2(&v16, "init");
}

double sub_100315268(double a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  NSString *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  char *v56;
  char *v57;
  double v58;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  _BYTE v72[40];
  __int128 v73;
  __int128 v74;
  void *v75;
  _QWORD v76[5];
  _QWORD v77[5];
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _QWORD v81[8];

  v7 = type metadata accessor for UpsellBreakoutLayout.Metrics(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UpsellBreakoutLayout(0, v8);
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  v12 = __chkstk_darwin(v11);
  v69 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LabelPlaceholderCompatibility(0, v12);
  v65 = *(_QWORD *)(v14 - 8);
  v66 = v14;
  __chkstk_darwin(v14);
  v64 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FloatingPointRoundingRule(0);
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = objc_allocWithZone((Class)type metadata accessor for UpsellBreakoutSizingTraitEnvironment());
  swift_unknownObjectRetain(a4);
  v23 = UIContentSizeCategoryExtraExtraExtraLarge;
  v24 = (char *)sub_10031509C(a4, (uint64_t)v23);
  swift_unknownObjectRelease(a4);

  v25 = qword_1007F12D0;
  v71 = *(id *)&v24[OBJC_IVAR____TtC22SubscribePageExtensionP33_63C99537259CB4BBA1C2F973322BF86736UpsellBreakoutSizingTraitEnvironment_traitCollection];
  if (v25 != -1)
    swift_once(&qword_1007F12D0, sub_100129944);
  v26 = sub_10000DF3C(&qword_1007FB8B0);
  sub_1000117A8(v26, (uint64_t)qword_100851B40);
  v81[0] = v24;
  Conditional.evaluate(with:)(v81, v26);
  type metadata accessor for BreakoutDetailsView(0);
  v27 = (void *)UpsellBreakout.details.getter();
  v28 = v24;
  sub_100121C48(v27, (uint64_t)v21, v28, v81, a1);
  swift_release(v27);

  sub_10016C028((uint64_t)v81, (uint64_t)&v78);
  v29 = swift_allocObject(&unk_100738010, 64, 7);
  sub_1002EBA0C(&v78, (_OWORD *)(v29 + 16));
  v30 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v32 = LayoutViewPlaceholder.init(measureWith:)(sub_1002EBA24, v29, v31);
  v33 = UpsellBreakout.offerButtonAction.getter();
  v34 = swift_release(v33);
  v70 = v10;
  if (v33 && (v35 = UpsellBreakout.offerDisplayProperties.getter(v34), swift_release(v35), v35))
  {
    if (qword_1007F12C8 != -1)
      swift_once(&qword_1007F12C8, sub_1001297F4);
    v36 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v36, (uint64_t)qword_100851B28);
    v37 = v28;
    static Dimensions.defaultRoundingRule.getter(v37);
    v38 = AnyDimension.value(in:rounded:)(v37, v18, v36, &protocol witness table for StaticDimension);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v18, v63);
    swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
    v39 = LayoutViewPlaceholder.init(representing:)(50.0, v38);
    v10 = v70;
  }
  else
  {
    v39 = 0;
  }
  v40 = UpsellBreakout.buttonCallToAction.getter();
  if (v41)
  {
    v42 = v40;
    v43 = v41;
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    if (qword_1007F27C0 != -1)
      swift_once(&qword_1007F27C0, sub_1004172D0);
    v44 = type metadata accessor for FontUseCase(0);
    v45 = sub_1000117A8(v44, (uint64_t)qword_100855C28);
    v46 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v45, v71);
    v47 = type metadata accessor for Feature(0);
    *((_QWORD *)&v79 + 1) = v47;
    v80 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v48 = sub_1000117C0(&v78);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v48, enum case for Feature.measurement_with_labelplaceholder(_:), v47);
    LOBYTE(v47) = isFeatureEnabled(_:)(&v78);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v78);
    v60 = v47 & 1;
    v49 = v64;
    v50 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v42, v43, v46, 4, 0, 0, 0, 0, v60);
    LabelPlaceholderCompatibility.layoutTextView.getter(v77, v50);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v66);
    sub_100026B0C((uint64_t)v77, (uint64_t)&v78);
    v10 = v70;
  }
  else
  {
    v80 = 0;
    v78 = 0u;
    v79 = 0u;
  }
  v51 = v28;
  sub_10012917C(v51, (uint64_t)v10, a1);

  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v52 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v77[3] = v30;
  v77[4] = &protocol witness table for LayoutViewPlaceholder;
  v76[4] = &protocol witness table for LayoutViewPlaceholder;
  v77[0] = v52;
  v76[3] = v30;
  v76[0] = v32;
  if (v39)
  {
    *((_QWORD *)&v74 + 1) = v30;
    v75 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v73 = v39;
  }
  else
  {
    v75 = 0;
    v73 = 0u;
    v74 = 0u;
  }
  v54 = v67;
  v53 = v68;
  sub_100026AC4((uint64_t)&v78, (uint64_t)v72);
  swift_retain(v32);
  v55 = swift_retain(v39);
  v56 = v69;
  UpsellBreakoutLayout.init(metrics:backgroundMediaView:detailsView:actionButton:buttonDetailsView:)(v10, v77, v76, &v73, v72, v55);
  v57 = v51;
  v58 = UpsellBreakoutLayout.measuredSize(fitting:in:)(a1, a2);
  swift_release(v39);
  swift_release(v32);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
  sub_100011088((uint64_t)&v78, &qword_1007FD370);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v81);
  sub_1001F3700((uint64_t)v21);
  return v58;
}

uint64_t sub_1003158B8()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

id sub_1003158DC(double a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v32;
  uint64_t v33;

  v5 = type metadata accessor for UpsellBreakoutLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012917C(a3, (uint64_t)v8, a1);
  v10 = type metadata accessor for UpsellBreakoutLayout(0, v9);
  v11 = sub_10000E99C(&qword_1008075A8, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBreakoutLayout, (uint64_t)&protocol conformance descriptor for UpsellBreakoutLayout);
  v12 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v8, a3, v10, v11, a1, 1.79769313e308);
  v14 = v13;
  (*(void (**)(char *, uint64_t, double))(v6 + 8))(v8, v5, v12);
  v15 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v16 = objc_msgSend(v15, "fractionalWidthDimension:", 1.0);
  v17 = objc_msgSend(v15, "absoluteDimension:", v14);
  v18 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v19 = objc_msgSend(v18, "sizeWithWidthDimension:heightDimension:", v16, v17);

  v20 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v19);
  v21 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v22 = objc_msgSend(v15, "fractionalWidthDimension:", 1.0);
  v23 = objc_msgSend(v15, "absoluteDimension:", v14);
  v24 = objc_msgSend(v18, "sizeWithWidthDimension:heightDimension:", v22, v23);

  v25 = sub_10000DF3C(&qword_1007F5840);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v26 + 32) = v20;
  v33 = v26;
  specialized Array._endMutation()(v26);
  v27 = v33;
  sub_100019574(0, (unint64_t *)&qword_100800DA0, NSCollectionLayoutItem_ptr);
  v28 = v20;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v21, "horizontalGroupWithLayoutSize:subitems:", v24, isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  return v30;
}

void sub_100315BA0(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  void *v6;
  double MinY;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;
  CGRect v21;
  CGRect v22;

  objc_msgSend(a1, "contentOffset");
  v4 = v3;
  v5 = *(double *)(v1 + 40);
  v6 = *(void **)(v1 + 16);
  objc_msgSend(v6, "frame");
  MinY = CGRectGetMinY(v21);
  objc_msgSend(v6, "frame");
  v8 = v5 + CGRectGetHeight(v22) * -0.5 - MinY;
  if (*(_BYTE *)(v1 + 24) != v4 < v8)
  {
    *(_BYTE *)(v1 + 24) = v4 < v8;
    objc_msgSend(a1, "_verticalVelocity");
    v10 = fabs(v9);
    v11 = v10 / 5.0;
    if (v10 >= 5.0)
      v11 = 1.0;
    v12 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, v11);
    if (v4 >= v8)
      v13 = 0;
    else
      v13 = *(_BYTE *)(v1 + 25);
    v14 = (void *)objc_opt_self(UIView);
    v15 = swift_allocObject(&unk_100738048, 25, 7);
    *(_QWORD *)(v15 + 16) = v6;
    *(_BYTE *)(v15 + 24) = v13;
    v19[4] = sub_1000ADEBC;
    v20 = v15;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_1000BD6CC;
    v19[3] = &unk_100738060;
    v16 = _Block_copy(v19);
    v17 = v20;
    v18 = v6;
    swift_release(v17);
    objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", 4, v16, 0, v12, 0.0);
    _Block_release(v16);
  }
}

uint64_t sub_100315D4C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for AppPromotionDetailCloseButtonAppearanceCoordinator()
{
  return objc_opt_self(_TtC22SubscribePageExtension50AppPromotionDetailCloseButtonAppearanceCoordinator);
}

uint64_t sub_100315D94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100315DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100315DC8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100315DD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v8;

  v2 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShelfHeader.Configuration(0);
  v6.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1005F4D04(0, 0, 0, 0, 1, (uint64_t)v4, a1, v6);
  return sub_100130EEC((uint64_t)v4);
}

uint64_t type metadata accessor for SearchLandingPageShelfSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension43SearchLandingPageShelfSupplementaryProvider);
}

double *sub_100315E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  char v22;
  __n128 v23;
  void (*v24)(char *, uint64_t, __n128);
  double v25;
  double v26;
  char v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a2;
  v3 = type metadata accessor for Shelf.ContentType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v12);
  KeyPath = swift_getKeyPath(&unk_100684E98);
  ReadOnlyLens.subscript.getter(KeyPath, v10);
  v16 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Shelf.ContentType.todayCard(_:), v3);
  v17 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v47, v3, v17);
  dispatch thunk of RawRepresentable.rawValue.getter(&v45, v3, v17);
  v18 = v48;
  v19 = v46;
  if (v47 == v45 && v48 == v46)
  {
    v20 = swift_bridgeObjectRelease_n(v48, 2);
    v21 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v21(v6, v3, v20);
    ((void (*)(char *, uint64_t))v21)(v9, v3);
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, v45, v46, 0);
    swift_bridgeObjectRelease(v18);
    v23 = swift_bridgeObjectRelease(v19);
    v24 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v24(v6, v3, v23);
    ((void (*)(char *, uint64_t))v24)(v9, v3);
    if ((v22 & 1) == 0)
      return sub_1003D5E68(a1, v44);
  }
  v25 = COERCE_DOUBLE(sub_1003168A8(a1, v44));
  if ((v27 & 1) != 0)
    return _swiftEmptyArrayStorage;
  v28 = v25;
  v29 = v26;
  v30 = v26 >= v25 ? v25 : v26;
  if (v30 <= 0.0)
    return _swiftEmptyArrayStorage;
  v31 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v32 = objc_msgSend(v31, "absoluteDimension:", v28);
  v33 = objc_msgSend(v31, "absoluteDimension:", v29);
  v34 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v32, v33);

  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v36 = v35;
  v37 = v34;
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v39 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v37, v38, 1);

  v40 = sub_10000DF3C(&qword_1007F5840);
  v41 = swift_allocObject(v40, 40, 7);
  *(_OWORD *)(v41 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v41 + 32) = v39;
  v47 = v41;
  specialized Array._endMutation()(v41);
  v42 = v47;

  return (double *)v42;
}

double sub_100316218@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t KeyPath;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double result;
  void (*v102)(char *, uint64_t, __n128);
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v107 = a4;
  v111 = a1;
  v112 = a2;
  v113 = a5;
  v6 = type metadata accessor for ShelfBackground(0);
  v105 = *(_QWORD *)(v6 - 8);
  v106 = v6;
  __chkstk_darwin(v6);
  v104 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v103 = (char *)&v102 - v9;
  v10 = type metadata accessor for ShelfLayoutContext(0);
  v115 = *(_QWORD *)(v10 - 8);
  v116 = v10;
  __chkstk_darwin(v10);
  v109 = v11;
  v110 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v114 = (void (**)(char *, uint64_t, __n128))((char *)&v102 - v13);
  v14 = type metadata accessor for Shelf.ContentType(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v102 - v19;
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v102 - v27;
  v117 = a3;
  ShelfLayoutContext.shelf.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100684E98);
  ReadOnlyLens.subscript.getter(KeyPath, v21);
  v30 = swift_release(KeyPath);
  v102 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
  v102(v28, v21, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for Shelf.ContentType.todayCard(_:), v14);
  v31 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v120, v14, v31);
  dispatch thunk of RawRepresentable.rawValue.getter(&v118, v14, v31);
  v32 = v121;
  v33 = v119;
  if (v120 == v118 && v121 == v119)
  {
    v34 = 1;
    v33 = v121;
  }
  else
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v120, v121, v118, v119, 0);
  }
  swift_bridgeObjectRelease(v32);
  v35 = swift_bridgeObjectRelease(v33);
  v36 = *(void (**)(char *, uint64_t, __n128))(v15 + 8);
  v36(v17, v14, v35);
  ((void (*)(char *, uint64_t))v36)(v20, v14);
  v37 = v114;
  v38 = v115;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
  v40 = v116;
  v41 = v117;
  v39((char *)v114, v117, v116);
  v108 = v39;
  if ((v34 & 1) != 0)
  {
    ShelfLayoutContext.shelf.getter(v42);
    v43 = swift_getKeyPath(&unk_100684EC8);
    v44 = v103;
    ReadOnlyLens.subscript.getter(v43, v21);
    v45 = swift_release(v43);
    v102(v24, v21, v45);
    v47 = v104;
    v46 = v105;
    v48 = v37;
    v49 = v106;
    (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v104, enum case for ShelfBackground.interactive(_:), v106);
    v50 = sub_10000E99C((unint64_t *)&qword_100804DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
    LODWORD(v43) = dispatch thunk of static Equatable.== infix(_:_:)(v44, v47, v49, v50);
    v51 = *(void (**)(char *, uint64_t))(v46 + 8);
    v51(v47, v49);
    v52 = v44;
    v41 = v117;
    v51(v52, v49);
    (*(void (**)(_QWORD *, uint64_t))(v38 + 8))(v48, v40);
    v53 = v43 ^ 1;
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v38 + 8))(v37, v40);
    v53 = 0;
  }
  v55 = v111;
  v54 = v112;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v58 = v57;
  if (v56 == v55 && v57 == v54)
  {
    swift_bridgeObjectRelease(v54);
    if ((v53 & 1) == 0)
      goto LABEL_11;
LABEL_15:
    v64 = sub_10000DF3C(&qword_100807A20);
    v65 = v113;
    v113[3] = v64;
    v65[4] = sub_100130F90(&qword_100807A28, &qword_100807A20);
    v114 = sub_1000117C0(v65);
    v66 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v112 = v67;
    v113 = v66;
    v59 = type metadata accessor for ShelfHeaderView(0);
    v69 = static UICollectionReusableView.defaultReuseIdentifier.getter(v68);
    v71 = v70;
    v72 = swift_allocObject(&unk_100738118, 24, 7);
    swift_weakInit(v72 + 16);
    v73 = v110;
    v108(v110, v41, v40);
    v74 = *(unsigned __int8 *)(v38 + 80);
    v75 = (v74 + 24) & ~v74;
    v76 = (v109 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    v77 = swift_allocObject(&unk_100738140, v76 + 8, v74 | 7);
    *(_QWORD *)(v77 + 16) = v72;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v77 + v75, v73, v40);
    v78 = v107;
    *(_QWORD *)(v77 + v76) = v107;
    swift_retain(v78);
    v79 = sub_10031702C;
    v80 = v113;
    v81 = v112;
    v82 = v69;
    v83 = v71;
    v84 = v77;
    goto LABEL_18;
  }
  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v57, v55, v54, 0);
  swift_bridgeObjectRelease(v58);
  if ((v63 & v53 & 1) != 0)
    goto LABEL_15;
LABEL_11:
  v59 = type metadata accessor for TodayDebugSectionBackgroundView();
  v60 = static UICollectionReusableView.elementKind.getter();
  v62 = v61;
  if (v60 == v55 && v61 == v54)
  {
    swift_bridgeObjectRelease(v54);
  }
  else
  {
    v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v61, v55, v54, 0);
    swift_bridgeObjectRelease(v62);
    if ((v85 & 1) == 0)
      return sub_1003D25D8(v55, v54, v41, v107, v113);
  }
  v86 = sub_10000DF3C(&qword_100807A10);
  v87 = v113;
  v113[3] = v86;
  v87[4] = sub_100130F90(&qword_100807A18, &qword_100807A10);
  v114 = sub_1000117C0(v87);
  v88 = static UICollectionReusableView.elementKind.getter();
  v90 = v89;
  v92 = v40;
  v93 = static UICollectionReusableView.defaultReuseIdentifier.getter(v91);
  v94 = v41;
  v96 = v95;
  v97 = v110;
  v108(v110, v94, v92);
  v98 = *(unsigned __int8 *)(v38 + 80);
  v99 = (v98 + 16) & ~v98;
  v100 = swift_allocObject(&unk_1007380F0, v99 + v109, v98 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v100 + v99, v97, v92);
  v79 = sub_100316F38;
  v80 = (_QWORD *)v88;
  v81 = v90;
  v82 = v93;
  v83 = v96;
  v84 = v100;
LABEL_18:
  ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v80, v81, v82, v83, v79, v84, v59);
  return result;
}

uint64_t sub_1003168A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t KeyPath;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  char v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  uint64_t v37;
  char *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v51 = a2;
  v3 = type metadata accessor for PageGrid(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  __chkstk_darwin(v3);
  v48 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Shelf.ContentType(0);
  v52 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - v9;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v46 - v17;
  ShelfLayoutContext.shelf.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100684EF8);
  ReadOnlyLens.subscript.getter(KeyPath, v11);
  v20 = swift_release(KeyPath);
  v21 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
  v21(v18, v11, v20);
  v23 = v55;
  if (v55)
  {
    v47 = a1;
    ShelfLayoutContext.shelf.getter(v22);
    v24 = swift_getKeyPath(&unk_100684E98);
    ReadOnlyLens.subscript.getter(v24, v11);
    v25 = swift_release(v24);
    v21(v14, v11, v25);
    v26 = v52;
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v7, enum case for Shelf.ContentType.todayCard(_:), v5);
    v27 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v55, v5, v27);
    dispatch thunk of RawRepresentable.rawValue.getter(&v53, v5, v27);
    v28 = v56;
    v29 = v54;
    if (v55 == v53 && v56 == v54)
    {
      v30 = swift_bridgeObjectRelease_n(v56, 2);
      v31 = *(void (**)(char *, uint64_t, __n128))(v26 + 8);
      v31(v7, v5, v30);
      v32 = ((uint64_t (*)(char *, uint64_t))v31)(v10, v5);
LABEL_7:
      v37 = v47;
      v38 = v48;
      v39 = ShelfLayoutContext.supplementaryPageGrid.getter(v32);
      v40 = static CGFloat.allColumns.getter(v39);
      v41 = PageGrid.componentMeasuringSize(spanning:)(v40);
      v43 = v42;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v50);
      type metadata accessor for ShelfHeaderView(0);
      v44 = sub_10006859C(v23, v37, v41, v43);
      swift_release(v23);
      return *(_QWORD *)&v44;
    }
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, v53, v54, 0);
    swift_bridgeObjectRelease(v28);
    v35 = swift_bridgeObjectRelease(v29);
    v36 = *(void (**)(char *, uint64_t, __n128))(v26 + 8);
    v36(v7, v5, v35);
    v32 = ((uint64_t (*)(char *, uint64_t))v36)(v10, v5);
    if ((v34 & 1) != 0)
      goto LABEL_7;
    swift_release(v23);
    v33 = v47;
  }
  else
  {
    v33 = a1;
  }
  return sub_1003D36A0(v33, v51);
}

double *sub_100316BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t KeyPath;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void (*v18)(char *, uint64_t, __n128);
  char v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1003D61CC();
  if ((sub_1002D5620() & 1) != 0)
  {
    ShelfLayoutContext.shelf.getter(v11);
    KeyPath = swift_getKeyPath(&unk_100684E98);
    ReadOnlyLens.subscript.getter(KeyPath, v7);
    v13 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
    v14 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v0, v14);
    dispatch thunk of RawRepresentable.rawValue.getter(&v33, v0, v14);
    v15 = v36;
    v16 = v34;
    if (v35 == v33 && v36 == v34)
    {
      v17 = swift_bridgeObjectRelease_n(v36, 2);
      v18 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
      v18(v3, v0, v17);
      ((void (*)(char *, uint64_t))v18)(v6, v0);
    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v33, v34, 0);
      swift_bridgeObjectRelease(v15);
      v20 = swift_bridgeObjectRelease(v16);
      v21 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
      v21(v3, v0, v20);
      ((void (*)(char *, uint64_t))v21)(v6, v0);
      if ((v19 & 1) == 0)
        return v37;
    }
    v22 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
    type metadata accessor for TodayDebugSectionBackgroundView();
    static UICollectionReusableView.elementKind.getter();
    v24 = v23;
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v22, "backgroundDecorationItemWithElementKind:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v29 = *(_QWORD *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
    specialized Array._endMutation()(v30);
  }
  return v37;
}

uint64_t type metadata accessor for TodayPageShelfSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension35TodayPageShelfSupplementaryProvider);
}

uint64_t sub_100316ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100316F38()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  sub_1003EE6EC(v0 + ((v1 + 16) & ~v1), v2);
}

uint64_t sub_100316F78()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100316F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

double sub_10031702C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_1003D514C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003170B0()
{
  return sub_10000E99C((unint64_t *)&unk_100807A30, type metadata accessor for FramedArtworkCollectionViewCell, (uint64_t)&unk_100684F28);
}

double sub_1003170E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char v27;
  uint64_t KeyPath;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  void (*v33)(_QWORD *, uint64_t);
  double v34;
  double v35;
  uint64_t v36;
  __n128 v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  __n128 v50;
  void *v51;
  char *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  __n128 v65;
  char v66;
  double v67;
  __n128 v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  double v73;
  double v74;
  double v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  double v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  __n128 v99;
  void (*v100)(char *, uint64_t, __n128);
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  __n128 v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double v115;
  __n128 v116;
  __n128 v117;
  void *v118;
  uint64_t v119;
  void *v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  id v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  double v152;
  __n128 v153;
  void (*v154)(char *, uint64_t, __n128);
  double v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  double v159;
  __n128 v160;
  double v161;
  int v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD aBlock[3];
  void *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD v186[2];

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v2);
  v4 = (char *)&v164 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for FloatingPointRoundingRule(0);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v175 = (char *)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for StaticDimension(0);
  v6 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v178 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v176 = *(_QWORD *)(v8 - 8);
  v177 = v8;
  __chkstk_darwin(v8);
  v166 = (char *)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for AspectRatio(0);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v172 = (char *)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for PageGrid.Direction(0);
  v11 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v170 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v164 - v14;
  v16 = type metadata accessor for PageGrid(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v164 - v21);
  v23 = type metadata accessor for FramedArtwork(0);
  v24 = sub_10000E99C((unint64_t *)&qword_100807A40, (uint64_t (*)(uint64_t))&type metadata accessor for FramedArtwork, (uint64_t)&protocol conformance descriptor for FramedMedia);
  ItemLayoutContext.typedModel<A>(as:)(aBlock, v23, v23, v24);
  v25 = aBlock[0];
  if (!aBlock[0])
    return 0.0;
  v165 = v4;
  v169 = v6;
  v26 = swift_retain(aBlock[0]);
  v27 = FramedMedia.isFullWidth.getter(v26);
  v180 = v25;
  swift_release(v25);
  KeyPath = swift_getKeyPath(&unk_100684F78);
  ItemLayoutContext.subscript.getter(v22);
  swift_release(KeyPath);
  v179 = a1;
  if ((v27 & 1) != 0)
  {
    v30 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v32 = v31;
    v33 = *(void (**)(_QWORD *, uint64_t))(v17 + 8);
  }
  else
  {
    v35 = PageGrid.containerWidth.getter(v29);
    v33 = *(void (**)(_QWORD *, uint64_t))(v17 + 8);
    v33(v22, v16);
    v36 = swift_getKeyPath(&unk_100684F78);
    ItemLayoutContext.subscript.getter(v19);
    v37 = swift_release(v36);
    v38 = PageGrid.containerHeight.getter(v37);
    v33(v19, v16);
    v39 = v171;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v15, enum case for PageGrid.Direction.vertical(_:), v171);
    v40 = swift_getKeyPath(&unk_100684F78);
    ItemLayoutContext.subscript.getter(v19);
    v41 = swift_release(v40);
    v42 = PageGrid.safeAreaInsets.getter(v41);
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v33(v19, v16);
    v49 = swift_getKeyPath(&unk_100684FA8);
    ItemLayoutContext.subscript.getter(aBlock);
    v50 = swift_release(v49);
    v51 = (void *)aBlock[0];
    v52 = v170;
    (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v170, v15, v39, v50);
    v53 = sub_100418380(0.0);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v52, 0, v53, v35, v38, v42, v44, v46, v48);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v39);
    v30 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v32 = v54;
  }
  v55 = v181;
  v56 = v175;
  v57 = ((uint64_t (*)(_QWORD *, uint64_t))v33)(v22, v16);
  v58 = v180;
  v59 = FramedArtwork.artwork.getter(v57);
  if (v59)
  {
    v60 = v59;
    Artwork.size.getter(v59);
    v61 = v172;
    AspectRatio.init(_:_:)(v62);
    v64 = AspectRatio.height(fromWidth:)(v63, v30);
    (*(void (**)(char *, uint64_t))(v173 + 8))(v61, v174);
    v65 = swift_retain(v58);
    v66 = FramedMedia.isFullWidth.getter(v65);
    swift_release(v58);
    swift_release(v60);
    if (v32 >= v64)
      v67 = v64;
    else
      v67 = v32;
    if ((v66 & 1) != 0)
      v67 = v64;
    v34 = v67 + 0.0;
  }
  else
  {
    v34 = 0.0;
  }
  v68 = swift_retain(v58);
  v69 = (void *)FramedMedia.caption.getter(v68);
  v70 = (uint64_t)objc_msgSend(v69, "length", swift_release(v58).n128_f64[0]);

  if (v70 < 1)
  {
    swift_release(v58);
    return v34;
  }
  v72 = 0.0;
  v73 = CGSize.subtracting(insets:)(v71);
  v75 = v74;
  v76 = swift_retain(v58);
  v77 = FramedMedia.ordinal.getter(v76);
  v79 = v78;
  swift_release(v58);
  v80 = &qword_1007F3000;
  if (v79)
  {
    if (qword_1007F26D0 != -1)
      swift_once(&qword_1007F26D0, sub_100416E58);
    v81 = v177;
    v82 = sub_1000117A8(v177, (uint64_t)qword_100855958);
    v83 = v176;
    v84 = v166;
    (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v166, v82, v81);
    v85 = swift_getKeyPath(&unk_100684FD8);
    ItemLayoutContext.subscript.getter(v186);
    swift_release(v85);
    v86 = v186[0];
    v87 = type metadata accessor for Feature(0);
    v183 = (void *)v87;
    v184 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v88 = sub_1000117C0(aBlock);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v87 - 8) + 104))(v88, enum case for Feature.measurement_with_labelplaceholder(_:), v87);
    LOBYTE(v87) = isFeatureEnabled(_:)(aBlock);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(aBlock);
    v89 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v77, v79, v84, 4, 4, 0, 0, 0, v73, v75, v86, v87 & 1);
    swift_unknownObjectRelease(v86);
    v90 = swift_bridgeObjectRelease(v79);
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v84, v81, v90);
    if (qword_1007F3478 != -1)
      swift_once(&qword_1007F3478, sub_10060A9A0);
    v91 = sub_1000117A8(v55, (uint64_t)qword_1008576D8);
    v92 = v169;
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
    v94 = v178;
    v93(v178, v91, v55);
    v95 = swift_getKeyPath(&unk_100684FD8);
    ItemLayoutContext.subscript.getter(aBlock);
    swift_release(v95);
    v96 = aBlock[0];
    static Dimensions.defaultRoundingRule.getter(v97);
    v98 = AnyDimension.value(in:rounded:)(v96, v56, v55, &protocol witness table for StaticDimension);
    v99 = swift_unknownObjectRelease(v96);
    v100 = *(void (**)(char *, uint64_t, __n128))(v167 + 8);
    v101 = v168;
    v100(v56, v168, v99);
    v102 = *(void (**)(char *, uint64_t))(v92 + 8);
    v102(v94, v55);
    if (qword_1007F3488 != -1)
      swift_once(&qword_1007F3488, sub_10060A9C0);
    v103 = v73 - v89;
    v104 = sub_1000117A8(v55, (uint64_t)qword_100857708);
    v93(v94, v104, v55);
    v105 = swift_getKeyPath(&unk_100684FD8);
    ItemLayoutContext.subscript.getter(aBlock);
    swift_release(v105);
    v106 = aBlock[0];
    static Dimensions.defaultRoundingRule.getter(v107);
    v108 = AnyDimension.value(in:rounded:)(v106, v56, v55, &protocol witness table for StaticDimension);
    v109 = swift_unknownObjectRelease(v106);
    v100(v56, v101, v109);
    v102(v94, v55);
    v110 = v98 + v108;
    if (qword_1007F3480 != -1)
      swift_once(&qword_1007F3480, sub_10060A9B0);
    v73 = v103 + -30.0;
    v111 = sub_1000117A8(v55, (uint64_t)qword_1008576F0);
    v93(v94, v111, v55);
    v112 = swift_getKeyPath(&unk_100684FD8);
    ItemLayoutContext.subscript.getter(aBlock);
    swift_release(v112);
    v113 = aBlock[0];
    static Dimensions.defaultRoundingRule.getter(v114);
    v115 = AnyDimension.value(in:rounded:)(v113, v56, v55, &protocol witness table for StaticDimension);
    v116 = swift_unknownObjectRelease(v113);
    v100(v56, v101, v116);
    v102(v94, v55);
    v72 = v110 + v115;
    v58 = v180;
    v80 = &qword_1007F3000;
  }
  v117 = swift_retain(v58);
  v118 = (void *)FramedMedia.caption.getter(v117);
  swift_release(v58);
  v119 = swift_getKeyPath(&unk_100684FA8);
  ItemLayoutContext.subscript.getter(v186);
  swift_release(v119);
  v120 = (void *)v186[0];
  v121 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v118);
  v122 = objc_msgSend(v118, "length");
  v123 = swift_allocObject(&unk_1007381A8, 41, 7);
  *(_QWORD *)(v123 + 16) = 0;
  *(_QWORD *)(v123 + 24) = v120;
  *(_QWORD *)(v123 + 32) = v121;
  *(_BYTE *)(v123 + 40) = 1;
  v124 = swift_allocObject(&unk_1007381D0, 32, 7);
  *(_QWORD *)(v124 + 16) = sub_100051938;
  *(_QWORD *)(v124 + 24) = v123;
  v184 = (uint64_t)sub_100051958;
  v185 = v124;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10057C188;
  v183 = &unk_1007381E8;
  v125 = _Block_copy(aBlock);
  v126 = v185;
  v127 = v120;
  v128 = v121;
  swift_retain(v124);
  objc_msgSend(v118, "enumerateAttributesInRange:options:usingBlock:", 0, v122, 0x100000, v125, swift_release(v126).n128_f64[0]);
  _Block_release(v125);
  LOBYTE(v125) = swift_isEscapingClosureAtFileLocation(v124, "", 113, 30, 92, 1);

  swift_release(v123);
  swift_release(v124);
  if ((v125 & 1) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v129 = qword_1007F26C8;
  v122 = v128;
  if (v129 != -1)
LABEL_37:
    swift_once(&qword_1007F26C8, sub_100416E40);
  v130 = v177;
  v131 = sub_1000117A8(v177, (uint64_t)qword_100855940);
  v132 = v176;
  v133 = (uint64_t)v165;
  (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v165, v131, v130);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v132 + 56))(v133, 0, 1, v130);
  v134 = swift_getKeyPath(&unk_100684FD8);
  ItemLayoutContext.subscript.getter(v186);
  swift_release(v134);
  v135 = v186[0];
  v136 = type metadata accessor for Feature(0);
  v183 = (void *)v136;
  v184 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v137 = sub_1000117C0(aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v136 - 8) + 104))(v137, enum case for Feature.measurement_with_labelplaceholder(_:), v136);
  LOBYTE(v136) = isFeatureEnabled(_:)(aBlock);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(aBlock);
  LOBYTE(v163) = v136 & 1;
  v138 = static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v128, v133, 4, 0, 0, 0, 0, v135, v73, v75, v163);
  v140 = v139;
  v142 = v141;
  v144 = v143;

  swift_unknownObjectRelease(v135);
  sub_100072A68(v133);
  v145 = v181;
  v146 = v178;
  if (qword_1007F3478 != -1)
    swift_once(&qword_1007F3478, sub_10060A9A0);
  v147 = sub_1000117A8(v145, (uint64_t)qword_1008576D8);
  v148 = v169;
  v149 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
  v149(v146, v147, v145);
  v150 = swift_getKeyPath(&unk_100684FD8);
  ItemLayoutContext.subscript.getter(aBlock);
  swift_release(v150);
  v151 = aBlock[0];
  v152 = AnyDimension.topMargin(from:in:)(aBlock[0], v145, &protocol witness table for StaticDimension, v138, v140, v142, v144);
  v153 = swift_unknownObjectRelease(v151);
  v154 = *(void (**)(char *, uint64_t, __n128))(v148 + 8);
  v154(v146, v145, v153);
  v155 = v140 + v152;
  if (v80[144] != -1)
    swift_once(&qword_1007F3480, sub_10060A9B0);
  v156 = sub_1000117A8(v145, (uint64_t)qword_1008576F0);
  v149(v146, v156, v145);
  v157 = swift_getKeyPath(&unk_100684FD8);
  ItemLayoutContext.subscript.getter(aBlock);
  swift_release(v157);
  v158 = aBlock[0];
  v159 = AnyDimension.bottomMargin(from:in:)(aBlock[0], v145, &protocol witness table for StaticDimension, v138, v140, v142, v144);
  swift_unknownObjectRelease(v158);

  v160 = swift_release(v180);
  v154(v146, v145, v160);
  v161 = v155 + v159;
  if (v72 > v155 + v159)
    v161 = v72;
  return v34 + v161;
}

uint64_t sub_100317F34()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100317F68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100317F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100317F88(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100318160()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PurchasesCollectionViewDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PurchasesCollectionViewDataSource()
{
  return objc_opt_self(_TtC22SubscribePageExtension33PurchasesCollectionViewDataSource);
}

id sub_100318208(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  _BYTE v32[24];
  char v33[24];

  v3 = v2;
  v5 = type metadata accessor for Shelf.ContentType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = IndexPath.section.getter(v9);
  v11 = type metadata accessor for PurchasesContentPresenter(0);
  v12 = sub_1003183FC();
  v13 = dispatch thunk of ShelfPresenter.contentType(for:)(v10, v11, v12);
  v14 = Shelf.ContentType.string.getter(v13);
  v16 = v15;
  swift_beginAccess(v3 + 72, v33, 0, 0);
  v17 = *(_QWORD *)(v3 + 72);
  if (!*(_QWORD *)(v17 + 16))
  {
    v26 = v16;
LABEL_6:
    swift_bridgeObjectRelease(v26);
    Shelf.ContentType.string.getter(v27);
    v29 = v28;
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(a2, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v30, isa);

    goto LABEL_7;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v3 + 72));
  v18 = sub_10036C324(v14, v16);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease(v16);
    v26 = v17;
    goto LABEL_6;
  }
  v20 = *(id *)(*(_QWORD *)(v17 + 56) + 8 * v18);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  v22 = Shelf.ContentType.string.getter(v21);
  v24 = v23;
  swift_beginAccess(v3 + 72, v32, 33, 0);
  isa = (void *)sub_100326668(v22, v24);
  swift_endAccess(v32);
  swift_bridgeObjectRelease(v24);
LABEL_7:

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return v20;
}

unint64_t sub_1003183FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F75C0;
  if (!qword_1007F75C0)
  {
    v1 = type metadata accessor for PurchasesContentPresenter(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PurchasesContentPresenter, v1);
    atomic_store(result, (unint64_t *)&qword_1007F75C0);
  }
  return result;
}

uint64_t sub_100318444()
{
  return sub_10000E99C(&qword_100807A98, type metadata accessor for GenericProductReviewActionCollectionViewCell, (uint64_t)&unk_100685058);
}

double sub_100318474(__n128 a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  uint64_t v24;
  uint64_t KeyPath;
  double v26;
  double v27;
  double v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  double v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[3];
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[11];
  _QWORD v93[5];
  uint64_t v94;

  v85 = type metadata accessor for DynamicTextAppearance(0, a1);
  v82 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v2 = (char *)&v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v81 = (char *)&v78 - v4;
  __chkstk_darwin(v5);
  v83 = (char *)&v78 - v6;
  v8 = __chkstk_darwin(v7);
  v84 = (char *)&v78 - v9;
  v88 = type metadata accessor for LabelPlaceholder(0, v8);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageGrid(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for ProductReviewAction.ReviewAction(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for ProductReviewAction(0);
  v21 = sub_10000E99C((unint64_t *)&qword_1008062F0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReviewAction, (uint64_t)&protocol conformance descriptor for ProductReviewAction);
  v22 = ItemLayoutContext.typedModel<A>(as:)(v92, v20, v20, v21);
  if (v92[0])
  {
    v80 = v92[0];
    ProductReviewAction.action.getter(v22);
    v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 88))(v19, v16);
    if (v23 == enum case for ProductReviewAction.ReviewAction.tapToRate(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v19, v16);
      v24 = *v19;
      KeyPath = swift_getKeyPath(&unk_1006850A8);
      ItemLayoutContext.subscript.getter(v15);
      swift_release(KeyPath);
      v26 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v28 = v27;
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
      v29 = sub_1000826AC();
      v79 = v24;
      v31 = TapToRate.title.getter(v30);
      v33 = v32;
      DynamicTextAppearance.init()(v31);
      if (qword_1007F2430 != -1)
        swift_once(&qword_1007F2430, sub_100414E1C);
      v34 = type metadata accessor for FontUseCase(0);
      v35 = sub_1000117A8(v34, (uint64_t)qword_100855178);
      v36 = v81;
      DynamicTextAppearance.withFontUseCase(_:)(v35);
      v37 = *(void (**)(char *, uint64_t))(v82 + 8);
      v38 = v2;
      v39 = v85;
      v37(v38, v85);
      v40 = v83;
      DynamicTextAppearance.withNumberOfLines(_:)(1);
      v37(v36, v39);
      v41 = v84;
      DynamicTextAppearance.withLineBreakMode(_:)(4);
      v37(v40, v39);
      v42 = LabelPlaceholder.Options.init(rawValue:)(0);
      v43 = v86;
      LabelPlaceholder.init(_:with:where:)(v31, v33, v41, v42);
      v44 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
      v46 = LayoutViewPlaceholder.init(measureWith:)(sub_1002AE86C, 0, v45);
      if (qword_1007F0BA8 != -1)
        swift_once(&qword_1007F0BA8, sub_100031BA8);
      v47 = v88;
      v93[3] = v88;
      v93[4] = &protocol witness table for LabelPlaceholder;
      v48 = sub_1000117C0(v93);
      v49 = v87;
      (*(void (**)(_QWORD *, char *, uint64_t))(v87 + 16))(v48, v43, v47);
      v89[0] = v46;
      Measurable.placeable.getter(&v94, v44, &protocol witness table for LayoutViewPlaceholder);
      sub_100032858((uint64_t)&qword_1008506B8, (uint64_t)v92);
      v50 = objc_msgSend(v29, "traitCollection");
      v51 = sub_10033E5AC((uint64_t)v50, v26, v28);
      sub_10033E708(v51, v89);
      v52 = v90;
      v53 = v91;
      sub_100011064(v89, v90);
      dispatch thunk of Placeable.measure(toFit:with:)(v50, v52, v53, v26, v28);
      v55 = v54;
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v89);
      swift_release(v46);

      sub_100045CF0(v92);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v47);
      swift_unknownObjectRelease(v29);
      swift_release(v80);
      v56 = v79;
      goto LABEL_17;
    }
    if (v23 == enum case for ProductReviewAction.ReviewAction.writeAReview(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v19, v16);
      v57 = *v19;
      v88 = type metadata accessor for ProductReviewActionsView(0);
      v58 = ProductWriteAReview.writeReviewAction.getter();
      v59 = ProductWriteAReview.supportAction.getter();
      v60 = swift_getKeyPath(&unk_1006850A8);
      ItemLayoutContext.subscript.getter(v15);
      swift_release(v60);
      v61 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v63 = v62;
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
      v64 = sub_1000826AC();
      if (v58)
      {
        v65 = swift_retain(v58);
        Action.title.getter(v65);
        v67 = v66;
        v69 = v68;
        swift_release(v58);
        if (v59)
        {
LABEL_11:
          v70 = swift_retain(v59);
          Action.title.getter(v70);
          v72 = v71;
          v74 = v73;
          swift_release(v59);
LABEL_16:
          swift_getObjectType();
          sub_1003CC6A0(v67, v69, v72, v74, v64, v61, v63);
          v55 = v76;
          swift_release(v59);
          swift_unknownObjectRelease(v64);
          swift_release(v57);
          swift_release(v80);
          swift_bridgeObjectRelease(v74);
          swift_bridgeObjectRelease(v69);
          v56 = v58;
LABEL_17:
          swift_release(v56);
          return v55;
        }
      }
      else
      {
        v67 = 0;
        v69 = 0;
        if (v59)
          goto LABEL_11;
      }
      v72 = 0;
      v74 = 0;
      goto LABEL_16;
    }
    v75 = swift_release(v80);
    (*(void (**)(uint64_t *, uint64_t, __n128))(v17 + 8))(v19, v16, v75);
  }
  return 0.0;
}

void sub_100318B38(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t Strong;
  _QWORD *v32;
  double v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v36 = a2;
  v4 = type metadata accessor for Uber.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_100806280);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_100806288);
  __chkstk_darwin(v10);
  v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  v18 = *(void **)(v2 + 32);
  v37 = v2;
  *(_QWORD *)(v2 + 32) = a1;
  a1;

  if (a1)
  {
    Uber.style.getter(v19);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 0, 1, v4);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 1, 1, v4);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v14, enum case for Uber.Style.inline(_:), v4);
  v20(v14, 0, 1, v4);
  v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10031A1C0((uint64_t)v17, (uint64_t)v9);
  sub_10031A1C0((uint64_t)v14, v21);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v23 = v22(v9, 1, v4);
  v24 = v35;
  if (v23 == 1)
  {
    sub_100011088((uint64_t)v14, &qword_100806288);
    sub_100011088((uint64_t)v17, &qword_100806288);
    v25 = v22((char *)v21, 1, v4);
    v26 = v37;
    if (v25 == 1)
    {
      sub_100011088((uint64_t)v9, &qword_100806288);
      goto LABEL_13;
    }
  }
  else
  {
    sub_10031A1C0((uint64_t)v9, v35);
    if (v22((char *)v21, 1, v4) != 1)
    {
      v27 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v34, v21, v4);
      v28 = sub_10031A208();
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v27, v4, v28);
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v27, v4);
      sub_100011088((uint64_t)v14, &qword_100806288);
      sub_100011088((uint64_t)v17, &qword_100806288);
      v30((char *)v24, v4);
      sub_100011088((uint64_t)v9, &qword_100806288);
      v26 = v37;
      if ((v29 & 1) != 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_100011088((uint64_t)v14, &qword_100806288);
    sub_100011088((uint64_t)v17, &qword_100806288);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
    v26 = v37;
  }
  sub_100011088((uint64_t)v9, &qword_100806280);
LABEL_11:
  Strong = swift_unknownObjectWeakLoadStrong(v26 + 16);
  if (Strong)
  {
    v32 = (_QWORD *)Strong;
    v33 = sub_100318ECC();
    (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *v32) + 0x1C0))(*(_QWORD *)&v33, 0);

  }
LABEL_13:
  sub_100319094(v36);
}

double sub_100318ECC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  double v3;
  double MaxY;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  CGRect v21;

  v1 = v0 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  v3 = 0.0;
  MaxY = 0.0;
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      v7 = objc_msgSend(v6, "navigationBar");

      objc_msgSend(v7, "frame");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v21.origin.x = v9;
      v21.origin.y = v11;
      v21.size.width = v13;
      v21.size.height = v15;
      MaxY = CGRectGetMaxY(v21);
    }
  }
  v16 = *(void **)(v0 + 32);
  if (v16)
  {
    v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    v18 = v16;
    sub_10053BB30(v17);
    v3 = v19;

  }
  return fmax(v3 - MaxY, 16.0);
}

void sub_100318FD8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(double, double);
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;

  v1 = v0;
  v2 = *(void (**)(double, double))(v0 + 40);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    swift_retain(*(_QWORD *)(v1 + 48));
    v2(1.0, 0.0);
    sub_100019310((uint64_t)v2, v3);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      v7 = objc_msgSend(v6, "navigationBar");

      objc_msgSend(v7, "_setTitleOpacity:", 1.0);
    }
  }
  *(_BYTE *)(v1 + 88) = 0;
}

void sub_100319094(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *Strong;
  void *v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  id v25;
  char v26;
  char *v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  uint64_t v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  double v39;
  void (*v40)(double, double);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  __n128 v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  double v68;
  void (*v69)(_QWORD, __n128, double);
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  void (*v76)(_QWORD, __n128, double);
  uint64_t v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v2 = v1;
  v4 = type metadata accessor for Uber.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  v81 = v4;
  v82 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_100806280);
  __chkstk_darwin(v8);
  v80 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_100806288);
  __chkstk_darwin(v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v75 - v17;
  if (!*(_QWORD *)(v2 + 32))
    return;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
    return;
  v20 = Strong;
  v21 = objc_msgSend(Strong, "collectionView");

  if (!v21)
    return;
  sub_10031A250();
  v22 = a1;
  v78 = v18;
  v23 = v12;
  v24 = v7;
  v25 = v22;
  v26 = static NSObject.== infix(_:_:)(v22, v21);

  v79 = v25;
  v27 = v24;
  v28 = (uint64_t)v23;

  if ((v26 & 1) == 0 || *(_BYTE *)(v2 + 88) != 1)
    return;
  v29 = v79;
  objc_msgSend(v79, "_systemContentInset");
  objc_msgSend(v29, "contentOffset");
  v31 = v30;
  v32 = *(void **)(v2 + 32);
  v33 = 0.0;
  v34 = v2 + 16;
  if (v32)
  {
    v35 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
    v36 = v32;
    sub_10053BB30(v35);
    v33 = v37;

  }
  v38 = fmin(v31 / v33, 1.0);
  if (v38 < 0.0)
    v39 = 0.0;
  else
    v39 = v38;
  v40 = *(void (**)(double, double))(v2 + 40);
  if (v40)
  {
    v41 = *(_QWORD *)(v2 + 48);
    swift_retain(v41);
    v40(v39, 0.0);
    sub_100019310((uint64_t)v40, v41);
  }
  v42 = *(_QWORD *)(v2 + 72);
  v43 = v81;
  v44 = v82;
  if (!v42)
    goto LABEL_31;
  v76 = *(void (**)(_QWORD, __n128, double))(v2 + 72);
  v77 = v2 + 16;
  v45 = *(_QWORD *)(v2 + 80);
  v46 = *(_QWORD *)(v2 + 32);
  v75 = v45;
  if (v46)
  {
    v47 = *(_QWORD *)(v46 + OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_uber);
    sub_100019320(v42, v45);
    v48 = swift_retain(v47);
    v49 = (uint64_t)v78;
    Uber.style.getter(v48);
    v50 = swift_release(v47);
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v51)(v49, 0, 1, v43, v50);
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
    v53 = v45;
    v49 = (uint64_t)v78;
    v51(v78, 1, 1, v81);
    v54 = v53;
    v29 = v79;
    v52 = swift_retain(v54);
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v44 + 104))(v15, enum case for Uber.Style.inline(_:), v43, v52);
  v51(v15, 0, 1, v43);
  v55 = *(int *)(v8 + 48);
  v56 = v80;
  v57 = v80 + v55;
  sub_10031A1C0(v49, v80);
  sub_10031A1C0((uint64_t)v15, v57);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v58(v56, 1, v43) == 1)
  {
    sub_100011088((uint64_t)v15, &qword_100806288);
    v56 = v80;
    sub_100011088(v49, &qword_100806288);
    v59 = v58(v57, 1, v43);
    v34 = v77;
    if (v59 == 1)
    {
      v60 = sub_100011088(v56, &qword_100806288);
LABEL_24:
      if (v39 >= 0.5)
        v68 = 0.35;
      else
        v68 = 0.2;
      v61.n128_u64[0] = 1.0;
      if (v39 < 0.5)
        v61.n128_f64[0] = 0.0;
      v70 = v75;
      v69 = v76;
      v76(v60, v61, v68);
      sub_100319A0C(v29, *(uint64_t *)&v68, 0, v39);
      sub_100019310((uint64_t)v69, v70);
      goto LABEL_32;
    }
  }
  else
  {
    sub_10031A1C0(v56, v28);
    v62 = v58(v57, 1, v43);
    v34 = v77;
    if (v62 != 1)
    {
      v63 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v27, v57, v43);
      v64 = sub_10031A208();
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v27, v43, v64);
      v66 = v43;
      v67 = *(void (**)(char *, uint64_t))(v63 + 8);
      v29 = v79;
      v67(v27, v66);
      sub_100011088((uint64_t)v15, &qword_100806288);
      sub_100011088((uint64_t)v78, &qword_100806288);
      v67((char *)v28, v66);
      v60 = sub_100011088(v56, &qword_100806288);
      if ((v65 & 1) != 0)
        goto LABEL_24;
      goto LABEL_30;
    }
    sub_100011088((uint64_t)v15, &qword_100806288);
    sub_100011088((uint64_t)v78, &qword_100806288);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v28, v43);
  }
  sub_100011088(v56, &qword_100806280);
LABEL_30:
  sub_100019310((uint64_t)v76, v75);
LABEL_31:
  sub_100319A0C(v29, 0, 1, v39);
LABEL_32:
  sub_100319DAC(v39);
  v71 = (void *)swift_unknownObjectWeakLoadStrong(v34);
  if (v71)
  {
    v72 = v71;
    v73 = objc_msgSend(v71, "navigationController");

    if (v73)
    {
      v74 = objc_msgSend(v73, "navigationBar");

      objc_msgSend(v74, "_setTitleOpacity:", v39);
    }
  }
}

uint64_t sub_100319664(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  void *Strong;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v44;

  v7 = v6;
  v11 = type metadata accessor for Uber.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C(&qword_100806280);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_100806288);
  __chkstk_darwin(v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v44 - v22;
  v26 = __chkstk_darwin(v24);
  v27 = (char *)&v44 - v25;
  if (a4 > a2)
    goto LABEL_2;
  v26.n128_f64[0] = fabs(a6);
  if (v26.n128_f64[0] <= 0.4)
  {
    v29 = *(_QWORD *)(v6 + 32);
    if (v29)
    {
      v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_uber);
      v31 = swift_retain(v30);
      Uber.style.getter(v31);
      v32 = swift_release(v30);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      v33(v27, 0, 1, v11, v32);
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      v33((char *)&v44 - v25, 1, 1, v11, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v23, enum case for Uber.Style.inline(_:), v11);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v33)(v23, 0, 1, v11);
    v34 = (uint64_t)&v17[*(int *)(v15 + 48)];
    sub_10031A1C0((uint64_t)v27, (uint64_t)v17);
    sub_10031A1C0((uint64_t)v23, v34);
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (v35((uint64_t)v17, 1, v11) == 1)
    {
      sub_100011088((uint64_t)v23, &qword_100806288);
      sub_100011088((uint64_t)v27, &qword_100806288);
      if (v35(v34, 1, v11) == 1)
      {
        sub_100011088((uint64_t)v17, &qword_100806288);
        v28 = 0;
        return v28 & 1;
      }
      goto LABEL_12;
    }
    sub_10031A1C0((uint64_t)v17, (uint64_t)v20);
    if (v35(v34, 1, v11) == 1)
    {
      sub_100011088((uint64_t)v23, &qword_100806288);
      sub_100011088((uint64_t)v27, &qword_100806288);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
LABEL_12:
      sub_100011088((uint64_t)v17, &qword_100806280);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v34, v11);
    v36 = sub_10031A208();
    v37 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v14, v11, v36);
    v38 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38(v14, v11);
    sub_100011088((uint64_t)v23, &qword_100806288);
    sub_100011088((uint64_t)v27, &qword_100806288);
    v38(v20, v11);
    sub_100011088((uint64_t)v17, &qword_100806288);
    if ((v37 & 1) != 0)
    {
LABEL_2:
      v28 = 0;
      return v28 & 1;
    }
  }
LABEL_14:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7 + 16);
  if (Strong)
  {
    v40 = Strong;
    v41 = objc_msgSend(Strong, "traitCollection");

    LOBYTE(v40) = UITraitCollection.prefersAccessibilityLayouts.getter(v42);
    v28 = v40 ^ 1;
  }
  else
  {
    v28 = 1;
  }
  return v28 & 1;
}

uint64_t sub_100319A0C(void *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  double v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v34;
  unint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(double, double);
  uint64_t v39;
  char *v40;
  id v41;

  v41 = a1;
  v8 = type metadata accessor for Uber.Style(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v40 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_100806280);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C(&qword_100806288);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v40 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v40 - v22;
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v41, "_verticalVelocity", v21.n128_f64[0]);
    v24 = v21.n128_f64[0];
  }
  else
  {
    v24 = *(double *)&a2;
  }
  v25 = v4;
  v26 = v4[4];
  if (v26)
  {
    v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_uber);
    v28 = swift_retain(v27);
    Uber.style.getter(v28);
    v29 = swift_release(v27);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v30(v23, 0, 1, v8, v29);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v30(v23, 1, 1, v8, v21);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v19, enum case for Uber.Style.inline(_:), v8);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v19, 0, 1, v8);
  v31 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10031A1C0((uint64_t)v23, (uint64_t)v13);
  sub_10031A1C0((uint64_t)v19, v31);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v13, 1, v8) == 1)
  {
    sub_100011088((uint64_t)v19, &qword_100806288);
    sub_100011088((uint64_t)v23, &qword_100806288);
    if (v32(v31, 1, v8) == 1)
    {
      result = sub_100011088((uint64_t)v13, &qword_100806288);
LABEL_14:
      v38 = (void (*)(double, double))v25[7];
      if (!v38)
        return result;
      v39 = v25[8];
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  sub_10031A1C0((uint64_t)v13, (uint64_t)v16);
  if (v32(v31, 1, v8) == 1)
  {
    sub_100011088((uint64_t)v19, &qword_100806288);
    sub_100011088((uint64_t)v23, &qword_100806288);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
LABEL_12:
    result = sub_100011088((uint64_t)v13, &qword_100806280);
    goto LABEL_16;
  }
  v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v40, v31, v8);
  v35 = sub_10031A208();
  v36 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v34, v8, v35);
  v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37(v34, v8);
  sub_100011088((uint64_t)v19, &qword_100806288);
  sub_100011088((uint64_t)v23, &qword_100806288);
  v37(v16, v8);
  result = sub_100011088((uint64_t)v13, &qword_100806288);
  if ((v36 & 1) != 0)
    goto LABEL_14;
LABEL_16:
  v38 = (void (*)(double, double))v25[5];
  if (!v38)
    return result;
  v39 = v25[6];
LABEL_18:
  swift_retain(v39);
  v38(a4, v24);
  return sub_100019310((uint64_t)v38, v39);
}

void sub_100319DAC(double a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "navigationItem");

    v10 = objc_msgSend(v5, "titleView");
    if (v10)
    {
      v6 = type metadata accessor for UberNavigationBarTitleView();
      v7 = swift_dynamicCastClass(v10, v6);
      if (v7)
      {
        v8 = v7;
        if (*(_BYTE *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_hasBackButton) == 1)
        {
          v9 = OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_backButtonStyle;
          if (a1 < 0.5 != *(_BYTE *)(v7
                                    + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_backButtonStyle)
            && *(_BYTE *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) == 1)
          {
            sub_1002D9584(a1 < 0.5, 1);
            *(_BYTE *)(v8 + v9) = a1 < 0.5;
          }
        }
      }

    }
  }
}

void sub_100319ED4(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v11;
  id v12;
  id v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double MaxY;
  void *v28;
  id v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  void *v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  CGRect v50;

  v5 = v4;
  if (*(_QWORD *)(v4 + 32))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
    if (Strong)
    {
      v11 = Strong;
      v12 = objc_msgSend(Strong, "collectionView");

      if (v12)
      {
        sub_10031A250();
        v13 = a1;
        v14 = static NSObject.== infix(_:_:)(v13, v12);

        if ((v14 & 1) != 0)
        {
          objc_msgSend(v13, "contentSize");
          v16 = v15;
          v18 = v17;
          objc_msgSend(v13, "frame");
          if ((sub_100319664(v16, v18, v19, v20, a3, a4) & 1) != 0 && *(double *)(a2 + 8) > 0.0)
          {
            objc_msgSend(v13, "contentInset");
            v22 = v21;
            objc_msgSend(v13, "_systemContentInset");
            v24 = v23;
            v25 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
            v26 = 0.0;
            MaxY = 0.0;
            if (v25)
            {
              v28 = v25;
              v29 = objc_msgSend(v25, "navigationController");

              if (v29)
              {
                v30 = objc_msgSend(v29, "navigationBar");

                objc_msgSend(v30, "frame");
                v32 = v31;
                v34 = v33;
                v36 = v35;
                v38 = v37;

                v50.origin.x = v32;
                v50.origin.y = v34;
                v50.size.width = v36;
                v50.size.height = v38;
                MaxY = CGRectGetMaxY(v50);
              }
            }
            v39 = *(void **)(v5 + 32);
            if (v39)
            {
              v40 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
              v41 = v39;
              sub_10053BB30(v40);
              v43 = v42;

              v44 = *(_QWORD *)(v5 + 32);
              if (v44)
                v26 = *(double *)(v44 + OBJC_IVAR____TtC22SubscribePageExtension14UberHeaderView_reflectionOutset);
            }
            else
            {
              v43 = 0.0;
            }
            v45 = v43 + v26 - v24;
            if (v45 < 0.0)
              v45 = 0.0;
            v46 = *(double *)(a2 + 8);
            if (v46 <= v45)
            {
              v47 = 0.07;
              if (a4 < 0.0)
                v47 = 0.5;
              v48 = v47 * v45;
              v49 = v45 - MaxY;
              if (v46 <= v48)
                v49 = -(v22 + v24);
              *(double *)(a2 + 8) = v49;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10031A154()
{
  uint64_t v0;

  sub_100010E34(v0 + 16);

  sub_100019310(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_100019310(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_100019310(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for UberedPageScrollObserver()
{
  return objc_opt_self(_TtC22SubscribePageExtension24UberedPageScrollObserver);
}

uint64_t sub_10031A1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_100806288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10031A208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806290;
  if (!qword_100806290)
  {
    v1 = type metadata accessor for Uber.Style(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Uber.Style, v1);
    atomic_store(result, (unint64_t *)&qword_100806290);
  }
  return result;
}

unint64_t sub_10031A250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807B68;
  if (!qword_100807B68)
  {
    v1 = objc_opt_self(UIScrollView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100807B68);
  }
  return result;
}

char *sub_10031A28C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  char *v15;
  void *v16;
  double left;
  double bottom;
  double right;
  char *v20;
  id v21;
  id v22;
  objc_super v24;

  v9 = &v4[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_itemLayoutContext];
  v10 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v4[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_artworkDisplaySize];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v12 = objc_allocWithZone((Class)type metadata accessor for BorderedScreenshotView());
  v13 = v4;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView] = v14;

  v24.receiver = v13;
  v24.super_class = (Class)type metadata accessor for ScreenshotCollectionViewCell(0);
  v15 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  v16 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v20 = v15;
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v21 = objc_msgSend(v20, "contentView");
  v22 = v16;
  objc_msgSend(v21, "addSubview:", v22);

  return v20;
}

id sub_10031A4F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  Swift::Bool v4;
  uint64_t v5;
  double v6;
  char *v7;
  objc_super v9;
  UIImage_optional v10;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ScreenshotCollectionViewCell(0);
  objc_msgSendSuper2(&v9, "prepareForReuse");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView];
  v3 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
  v10.value.super.isa = 0;
  v10.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v10, v4);

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform) = 0;
  swift_release(v5);
  v6 = sub_10022E900();
  v7 = &v1[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_artworkDisplaySize];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  return objc_msgSend(v1, "setNeedsLayout", v6);
}

id sub_10031A5E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  void *v28;
  id v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double MidX;
  objc_super v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = type metadata accessor for AspectRatio(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for ScreenshotCollectionViewCell(0);
  v39.receiver = v1;
  v39.super_class = v6;
  v7 = objc_msgSendSuper2(&v39, "layoutSubviews");
  if ((v1[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_artworkDisplaySize + 16] & 1) != 0)
  {
    v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView];
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "bounds");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    return objc_msgSend(v8, "setFrame:", v11, v13, v15, v17);
  }
  else
  {
    v19 = objc_msgSend(v1, "contentView", AspectRatio.init(_:_:)(v7).n128_f64[0]);
    objc_msgSend(v19, "bounds");
    v21 = v20;
    v23 = v22;
    v25 = v24;

    v27 = AspectRatio.height(fromWidth:)(v26, v25);
    v28 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView];
    objc_msgSend(v28, "setFrame:", v21, v23, v25, v27);
    v29 = objc_msgSend(v1, "contentView");
    objc_msgSend(v29, "bounds");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;

    v40.origin.x = v31;
    v40.origin.y = v33;
    v40.size.width = v35;
    v40.size.height = v37;
    MidX = CGRectGetMidX(v40);
    v41.origin.x = v31;
    v41.origin.y = v33;
    v41.size.width = v35;
    v41.size.height = v37;
    objc_msgSend(v28, "setCenter:", MidX, CGRectGetMidY(v41));
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_10031A844()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenshotCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10031A8B0()
{
  return type metadata accessor for ScreenshotCollectionViewCell(0);
}

uint64_t type metadata accessor for ScreenshotCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100807B98;
  if (!qword_100807B98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ScreenshotCollectionViewCell);
  return result;
}

void sub_10031A8F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_1006851F0;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

id sub_10031A978()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView)
                           + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView));
}

CGFloat sub_10031A998()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v4;
  CGFloat v5;
  CGRect v7;
  CGRect v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView)
     + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_displayConfiguration;
  v2 = *(double *)(v1 + 64);
  v3 = *(double *)(v1 + 80);
  v4 = type metadata accessor for BorderedScreenshotView();
  v7.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v4);
  v5 = CGRectGetWidth(v7) - (v2 + v3);
  v8.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v4);
  CGRectGetHeight(v8);
  return v5;
}

void sub_10031AA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(byte_100685238, a3);
  sub_1001200D0(a1, a2, a3, WitnessTable);
}

void sub_10031AA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(byte_100685238, a3);
  sub_1001202F8(a1, a2, a3, WitnessTable);
}

unint64_t sub_10031AAB0(uint64_t a1)
{
  unint64_t result;

  result = sub_10031AAD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10031AAD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807BA8;
  if (!qword_100807BA8)
  {
    v1 = type metadata accessor for ScreenshotCollectionViewCell(255);
    result = swift_getWitnessTable(byte_100685208, v1);
    atomic_store(result, (unint64_t *)&qword_100807BA8);
  }
  return result;
}

uint64_t sub_10031AB1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      if (objc_msgSend(v4, "isSystemItem") && !objc_msgSend(v5, "systemItem"))
      {
        swift_bridgeObjectRelease(a1);

        return 1;
      }
      v7 = objc_msgSend(v5, "style");

      if (v7 == (id)2)
      {
        swift_bridgeObjectRelease(a1);
        return 1;
      }
      ++v3;
      if (v6 == v2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_10031AC74(void *a1)
{
  id v1;
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(a1, "navigationItem");
  v2 = objc_msgSend(v1, "leftBarButtonItems");
  if (v2)
  {
    v3 = v2;
    v4 = sub_10031AFC8();
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    LOBYTE(v3) = sub_10031AB1C(v5);
    swift_bridgeObjectRelease(v5);
    if ((v3 & 1) != 0)
    {

      return 1;
    }
  }
  v7 = objc_msgSend(v1, "rightBarButtonItems");
  if (v7)
  {
    v8 = v7;
    v9 = sub_10031AFC8();
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    LOBYTE(v8) = sub_10031AB1C(v10);
    swift_bridgeObjectRelease(v10);

    if ((v8 & 1) != 0)
      return 1;
  }
  else
  {

  }
  return 0;
}

void sub_10031AD7C(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  double *v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double *v27;
  Class isa;
  _QWORD v30[3];
  uint64_t v31;
  double *v32;

  if ((sub_10031AC74(a1) & 1) == 0)
  {
    v6 = objc_msgSend(a1, "navigationItem");
    v7 = objc_msgSend(v6, "rightBarButtonItems");
    if (v7)
    {
      v8 = v7;
      v9 = sub_10031AFC8();
      v10 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    }
    else
    {
      v10 = _swiftEmptyArrayStorage;
    }
    v32 = v10;
    v11._countAndFlagsBits = 0x445F4E4F49544341;
    v11._object = (void *)0xEB00000000454E4FLL;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(v11, v12)._object;
    sub_100175D94(a2, (uint64_t)v30);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v15 = v31;
    if (v31)
    {
      v16 = sub_100011064(v30, v31);
      v17 = *(_QWORD *)(v15 - 8);
      v18 = __chkstk_darwin(v16);
      v20 = (char *)&v30[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
      v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v15);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v30);
    }
    else
    {
      v21 = 0;
    }
    v22 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v14, 2, v21, a3);

    swift_unknownObjectRelease(v21);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)(((unint64_t)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)(((unint64_t)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v22);
    specialized Array._endMutation()(v26);
    v27 = v32;
    sub_10031AFC8();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  }
}

unint64_t sub_10031AFC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F83C0;
  if (!qword_1007F83C0)
  {
    v1 = objc_opt_self(UIBarButtonItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F83C0);
  }
  return result;
}

double sub_10031B004@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10031B020(a1, a2, (uint64_t)&unk_1007385F8, (id (*)(uint64_t))sub_100323B44, (id (*)(uint64_t))sub_100323B3C, a3);
}

double sub_10031B020@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, id (*a4)(uint64_t a1)@<X3>, id (*a5)(uint64_t a1)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;

  v10 = v6;
  v14 = type metadata accessor for InfiniteScrollFooterView();
  v15 = static UICollectionReusableView.elementKind.getter();
  if (v15 == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_11;
  }
  v18 = v16;
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, a1, a2, 0);
  swift_bridgeObjectRelease(v18);
  if ((v19 & 1) != 0)
  {
LABEL_11:
    v29 = swift_bridgeObjectRetain(a2);
    v30 = static UICollectionReusableView.defaultReuseIdentifier.getter(v29);
    v32 = v31;
    *(_QWORD *)(a6 + 24) = sub_10000DF3C(&qword_1008030E0);
    *(_QWORD *)(a6 + 32) = sub_100010F98(&qword_1008030E8, &qword_1008030E0, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_1000117C0((_QWORD *)a6);
    v26 = sub_100254DF8;
    v22 = a1;
    v23 = a2;
    v24 = v30;
    v25 = v32;
    v27 = 0;
    v28 = v14;
    goto LABEL_12;
  }
  if (a1 == 0x676B636142706F74 && a2 == 0xED0000646E756F72
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x676B636142706F74, 0xED0000646E756F72, a1, a2, 0) & 1) != 0)
  {
    v20 = swift_allocObject(a3, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16, v10);
    *(_QWORD *)(a6 + 24) = sub_10000DF3C(&qword_1008030C8);
    *(_QWORD *)(a6 + 32) = sub_100010F98((unint64_t *)&unk_1008030D0, &qword_1008030C8, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_1000117C0((_QWORD *)a6);
    v21 = sub_100019574(0, (unint64_t *)&qword_1007F6090, UICollectionReusableView_ptr);
    swift_bridgeObjectRetain_n(a2, 2);
    v22 = a1;
    v23 = a2;
    v24 = a1;
    v25 = a2;
    v26 = a4;
    v27 = v20;
    v28 = v21;
LABEL_12:
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v22, v23, v24, v25, v26, v27, v28);
    return result;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100637E90
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100637E90, a1, a2, 0) & 1) != 0)
  {
    v34 = swift_allocObject(a3, 24, 7);
    swift_unknownObjectWeakInit(v34 + 16, v10);
    *(_QWORD *)(a6 + 24) = sub_10000DF3C(&qword_1008030C8);
    *(_QWORD *)(a6 + 32) = sub_100010F98((unint64_t *)&unk_1008030D0, &qword_1008030C8, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
    sub_1000117C0((_QWORD *)a6);
    v35 = sub_100019574(0, (unint64_t *)&qword_1007F6090, UICollectionReusableView_ptr);
    swift_bridgeObjectRetain_n(a2, 2);
    v22 = a1;
    v23 = a2;
    v24 = a1;
    v25 = a2;
    v26 = a5;
    v27 = v34;
    v28 = v35;
    goto LABEL_12;
  }
  *(_QWORD *)(a6 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

uint64_t sub_10031B340(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t KeyPath;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[24];

  v7 = type metadata accessor for ShelfBackground(0);
  v37 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v36 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShelfLayoutContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    return sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007FAB60);
  }
  v21 = (void *)Strong;
  v34 = a1;
  v35 = v7;
  v22 = sub_10000DF3C(&qword_100806088);
  v23 = sub_100010F98(&qword_1008060A0, &qword_100806088, byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfLayoutContext(for:)(0, v22, v23);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007FAB60);
  v24.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  ShelfLayoutContext.shelf.getter(v24);
  KeyPath = swift_getKeyPath(&unk_100685330);
  ReadOnlyLens.subscript.getter(KeyPath, v10);
  v26 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v12, v10, v26);
  v27 = v37;
  v28 = v35;
  if ((*(unsigned int (**)(void **, uint64_t))(v37 + 88))(v9, v35) == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v27 + 96))(v9, v28);
    v29 = *v9;
    v30 = (char *)v9 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
    v31 = type metadata accessor for ShelfBackgroundStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
    objc_msgSend(v34, "setBackgroundColor:", v29);

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return (*(uint64_t (**)(void **, uint64_t))(v27 + 8))(v9, v28);
  }
}

uint64_t sub_10031B640(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t KeyPath;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[24];

  v7 = type metadata accessor for ShelfBackground(0);
  v37 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v36 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShelfLayoutContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    return sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007FAB60);
  }
  v21 = (void *)Strong;
  v34 = a1;
  v35 = v7;
  v22 = sub_10000DF3C(&qword_100808200);
  v23 = sub_100010F98(&qword_100808208, &qword_100808200, byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfLayoutContext(for:)(0, v22, v23);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007FAB60);
  v24.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  ShelfLayoutContext.shelf.getter(v24);
  KeyPath = swift_getKeyPath(&unk_100685330);
  ReadOnlyLens.subscript.getter(KeyPath, v10);
  v26 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v12, v10, v26);
  v27 = v37;
  v28 = v35;
  if ((*(unsigned int (**)(void **, uint64_t))(v37 + 88))(v9, v35) == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v27 + 96))(v9, v28);
    v29 = *v9;
    v30 = (char *)v9 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
    v31 = type metadata accessor for ShelfBackgroundStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
    objc_msgSend(v34, "setBackgroundColor:", v29);

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return (*(uint64_t (**)(void **, uint64_t))(v27 + 8))(v9, v28);
  }
}

void sub_10031B944(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  id *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  uint64_t KeyPath;
  void **v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  char v50[24];
  char v51[24];
  char v52[24];

  v7 = type metadata accessor for ShelfBackground(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v49 = (id *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ShelfLayoutContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v46 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1008030F0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a5 + 16;
  swift_beginAccess(a5 + 16, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
  if (Strong)
  {
    v24 = (void *)Strong;
    v43 = a1;
    v25 = (id *)(Strong + qword_100802E50);
    swift_beginAccess(Strong + qword_100802E50, v51, 0, 0);
    if (!*v25)
    {

      return;
    }
    v26 = *v25;

    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    v27 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v18);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    swift_beginAccess(v22, v50, 0, 0);
    v28 = swift_unknownObjectWeakLoadStrong(v22);
    if (v28)
    {
      if (__OFSUB__(v27, 1))
      {
        __break(1u);
        return;
      }
      v29 = (void *)v28;
      v30 = sub_10000DF3C(&qword_100806088);
      v31 = sub_100010F98(&qword_1008060A0, &qword_100806088, byte_10067F0C0);
      ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v27 - 1, v30, v31);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
      {
        v32 = v46;
        v33.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v16 + 32))(v46, v14, v15);
        ShelfLayoutContext.shelf.getter(v33);
        KeyPath = swift_getKeyPath(&unk_100685330);
        v35 = v49;
        v36 = v45;
        ReadOnlyLens.subscript.getter(KeyPath, v45);
        v37 = swift_release(KeyPath);
        (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v11, v36, v37);
        v39 = v47;
        v38 = v48;
        if ((*(unsigned int (**)(void **, uint64_t))(v47 + 88))(v35, v48) == enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v39 + 96))(v35, v38);
          v40 = *v35;
          v41 = (char *)v35 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
          v42 = type metadata accessor for ShelfBackgroundStyle(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          objc_msgSend(v43, "setBackgroundColor:", v40);

          (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v15);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v15);
          (*(void (**)(void **, uint64_t))(v39 + 8))(v35, v38);
        }
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    }
    sub_100011088((uint64_t)v14, (uint64_t *)&unk_1007FAB60);
  }
}

void sub_10031BD28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  id *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  uint64_t KeyPath;
  void **v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  char v50[24];
  char v51[24];
  char v52[24];

  v7 = type metadata accessor for ShelfBackground(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v49 = (id *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ShelfLayoutContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v46 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1008030F0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a5 + 16;
  swift_beginAccess(a5 + 16, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
  if (Strong)
  {
    v24 = (void *)Strong;
    v43 = a1;
    v25 = (id *)(Strong + qword_100802E50);
    swift_beginAccess(Strong + qword_100802E50, v51, 0, 0);
    if (!*v25)
    {

      return;
    }
    v26 = *v25;

    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    v27 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v18);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    swift_beginAccess(v22, v50, 0, 0);
    v28 = swift_unknownObjectWeakLoadStrong(v22);
    if (v28)
    {
      if (__OFSUB__(v27, 1))
      {
        __break(1u);
        return;
      }
      v29 = (void *)v28;
      v30 = sub_10000DF3C(&qword_100808200);
      v31 = sub_100010F98(&qword_100808208, &qword_100808200, byte_10067F0C0);
      ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v27 - 1, v30, v31);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
      {
        v32 = v46;
        v33.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v16 + 32))(v46, v14, v15);
        ShelfLayoutContext.shelf.getter(v33);
        KeyPath = swift_getKeyPath(&unk_100685330);
        v35 = v49;
        v36 = v45;
        ReadOnlyLens.subscript.getter(KeyPath, v45);
        v37 = swift_release(KeyPath);
        (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v11, v36, v37);
        v39 = v47;
        v38 = v48;
        if ((*(unsigned int (**)(void **, uint64_t))(v47 + 88))(v35, v48) == enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v39 + 96))(v35, v38);
          v40 = *v35;
          v41 = (char *)v35 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
          v42 = type metadata accessor for ShelfBackgroundStyle(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          objc_msgSend(v43, "setBackgroundColor:", v40);

          (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v15);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v15);
          (*(void (**)(void **, uint64_t))(v39 + 8))(v35, v38);
        }
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    }
    sub_100011088((uint64_t)v14, (uint64_t *)&unk_1007FAB60);
  }
}

void sub_10031C10C(void *a1)
{
  id v2;
  NSString *v3;
  NSString *v4;
  NSString *v5;
  id v6;
  char v7;
  id v8;
  NSString *v9;
  NSString *v10;
  NSString *v11;
  id v12;

  v2 = objc_msgSend(a1, "preferredContentSizeCategory");
  v3 = UIContentSizeCategoryAccessibilityMedium;
  v4 = UIContentSizeCategoryAccessibilityExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v3, v4) & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v2, v3) & 1) != 0)
  {
    v5 = v4;
    v6 = v2;
    v7 = static UIContentSizeCategory.<= infix(_:_:)(v6, v5);

    if ((v7 & 1) != 0)
      return;
  }
  else
  {

  }
  v8 = objc_msgSend(a1, "preferredContentSizeCategory");
  v9 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v10 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v9, v10) & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v8, v9) & 1) != 0)
  {
    v11 = v10;
    v12 = v8;
    static UIContentSizeCategory.<= infix(_:_:)(v12, v11);

  }
  else
  {

  }
}

char *sub_10031C2A0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  objc_class *v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  _BYTE v50[24];
  _QWORD v51[5];

  ObjectType = swift_getObjectType();
  *(_QWORD *)&v2[qword_100807BB0] = 0;
  *(_QWORD *)&v2[qword_100853F00] = 0;
  *(_QWORD *)&v2[qword_100807BB8] = 0;
  v4 = v2;
  makeNetworkInquiry()();
  v5 = &v4[qword_100807BC8];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v4[qword_100807BD0];
  v8 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = qword_100807BD8;
  v10 = type metadata accessor for TodayPageSectionGridTracker();
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)(v11 + 16) = sub_10036D5D8((double *)_swiftEmptyArrayStorage);
  *(_QWORD *)&v4[v9] = v11;
  v12 = qword_100807BE8;
  v13 = type metadata accessor for TodayCardOverlayReusePool();
  swift_allocObject(v13, 32, 7);
  v14 = sub_1005AA2BC(25);
  *(_QWORD *)&v4[v12] = v14;
  *(_QWORD *)&v4[qword_100807BF8] = 0;
  *(_QWORD *)&v4[qword_100807C00] = 0;
  v15 = &v4[qword_100853F08];
  *((_QWORD *)v15 + 4) = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v4[qword_100853F10] = 1;
  *(_QWORD *)&v4[qword_100807C08] = 0;
  v16 = sub_10000DF3C(&qword_100812340);
  v17 = type metadata accessor for Dependency(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_10066F870;
  v51[0] = v14;
  swift_retain(v14);
  Dependency.init<A>(satisfying:with:)(v13, v51, v13);
  v51[0] = *(_QWORD *)&v4[v9];
  swift_retain(v51[0]);
  Dependency.init<A>(satisfying:with:)(v10, v51, v10);
  v51[0] = v18;
  v19 = sub_10000DF3C(&qword_1008081E8);
  v20 = sub_100010F98((unint64_t *)&qword_1008081F0, &qword_1008081E8, (const char *)&protocol conformance descriptor for [A]);
  v21 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v51, v19, v20);
  swift_bridgeObjectRelease(v18);
  v22 = type metadata accessor for ArtworkLoader(0);
  BaseObjectGraph.inject<A>(_:)(v51, v22, v22);
  v23 = v51[0];
  v24 = type metadata accessor for TodayCardOverlayCollectionElementsObserver();
  v25 = swift_allocObject(v24, 25, 7);
  *(_BYTE *)(v25 + 24) = 1;
  *(_QWORD *)(v25 + 16) = v23;
  *(_QWORD *)&v4[qword_100807BE0] = v25;
  v26 = type metadata accessor for AdvertRotationControllerProvider(0);
  BaseObjectGraph.inject<A>(_:)(v51, v26, v26);
  *(_QWORD *)&v4[qword_100807BF0] = v51[0];

  swift_retain(a1);
  swift_retain(v21);
  v27 = (void *)sub_1005CB830(a1, v21);
  v28 = (objc_class *)type metadata accessor for PresentingFlowController(0);
  v29 = objc_allocWithZone(v28);
  v30 = v27;
  swift_retain(v21);
  v31 = (char *)v30;
  v32 = sub_10043BD78(v31, v21, (uint64_t)sub_10031C824, 0);
  v51[3] = v28;
  v51[4] = &off_100749630;
  v51[0] = v32;
  v33 = (uint64_t)&v31[qword_100853F08];
  swift_beginAccess(&v31[qword_100853F08], v50, 33, 0);
  sub_10006C214((uint64_t)v51, v33, (uint64_t *)&unk_100808370);
  swift_endAccess(v50);
  v34 = *(_QWORD *)&v31[qword_100807BF0];
  v35 = *(id *)&v31[qword_100852E90];
  swift_retain(v34);
  CompoundScrollObserver.addChild(_:)(v36, &protocol witness table for AdvertRotationControllerProvider);

  swift_release(v34);
  v37 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v38 = swift_allocObject(v37, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_10066F870;
  *(_QWORD *)(v38 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v38 + 40) = &protocol witness table for UITraitLayoutDirection;
  *(_QWORD *)(v38 + 48) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v38 + 56) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v39 = v31;
  v40 = UIViewController.registerForTraitChanges<A>(_:handler:)(v38, sub_100322080, 0, ObjectType);
  swift_unknownObjectRelease(v40);

  swift_bridgeObjectRelease(v38);
  v41 = swift_allocObject(v37, 48, 7);
  *(_OWORD *)(v41 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v41 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v41 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v42 = v39;
  v43 = UIViewController.registerForTraitChanges<A>(_:handler:)(v41, sub_1003220C8, 0, ObjectType);
  swift_unknownObjectRelease(v43);

  swift_bridgeObjectRelease(v41);
  if ((sub_1002D533C() & 1) != 0 || (sub_1002D5358() & 1) != 0)
  {
    v44 = type metadata accessor for TodayDebugViews();
    v45 = swift_allocObject(v44, 75, 7);
    swift_unknownObjectWeakInit(v45 + 16, 0);
    *(_DWORD *)(v45 + 71) = 0;
    *(_OWORD *)(v45 + 56) = 0u;
    *(_OWORD *)(v45 + 40) = 0u;
    *(_OWORD *)(v45 + 24) = 0u;
    swift_unknownObjectWeakAssign(v46, v42);
    swift_release(v21);

    swift_release(a1);
    swift_release(a2);
    a2 = *(_QWORD *)&v42[qword_100807C08];
    *(_QWORD *)&v42[qword_100807C08] = v45;
  }
  else
  {
    swift_release(v21);

    swift_release(a1);
  }
  swift_release(a2);
  return v42;
}

BOOL sub_10031C824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E894(a1, (uint64_t)v4, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
  if (EnumCaseMultiPayload == 21)
  {
    swift_release(*v4);
    v7 = sub_10000DF3C(&qword_1007F6840);
    sub_100011088((uint64_t)v4 + *(int *)(v7 + 48), (uint64_t *)&unk_1007F5150);
  }
  else
  {
    sub_10002F0D4((uint64_t)v4, type metadata accessor for FlowDestination);
  }
  return EnumCaseMultiPayload == 21;
}

void sub_10031C8F4(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  char v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  NSString v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v3 = objc_msgSend(v1, "navigationController");
  if (!v3)
    goto LABEL_26;
  v33 = v3;
  v4 = objc_msgSend(v1, "navigationController");
  if (!v4)
    goto LABEL_11;
  v5 = v4;
  v6 = objc_msgSend(v4, "viewControllers");

  v7 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    v9 = v33;
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_25:

    swift_bridgeObjectRelease(v8);
    goto LABEL_26;
  }
  if (v8 < 0)
    v31 = v8;
  else
    v31 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v8);
  v9 = v33;
  if (!v32)
    goto LABEL_25;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease(v8);
  v12 = v1;
  v13 = v11;
  v14 = static NSObject.== infix(_:_:)(v13, v12);

  if ((v14 & 1) == 0)
  {
LABEL_11:

LABEL_26:
    sub_10052BF9C(0);
    return;
  }
  v15 = objc_msgSend(v12, "traitCollection");
  v16 = UITraitCollection.isSizeClassCompact.getter(v15);

  objc_msgSend(v33, "setNavigationBarHidden:animated:", v16 & 1, a1 & 1);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView;
  if (*(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView])
  {

  }
  else
  {
    v18 = objc_msgSend(v12, "tabBarController");
    v19 = v18;
    if (v18)
    {
      v20 = objc_msgSend(v18, "tabBar");

      v21 = objc_msgSend(v20, "_backdropViewLayerGroupName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v19 = v22;

    }
    v23 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
    v24 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v23);

    if (v19)
    {
      v25 = String._bridgeToObjectiveC()();
      objc_msgSend(v24, "_setGroupName:", v25);
      swift_bridgeObjectRelease(v19);

    }
    sub_10052BF9C(v24);

    v26 = *(void **)&v12[v17];
    if (v26)
      objc_msgSend(v26, "setAlpha:", 0.0);
    v27 = swift_allocObject(&unk_1007383A0, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v12);
    v28 = type metadata accessor for NavigationBarVisibilityScrollObserver();
    v29 = swift_allocObject(v28, 48, 7);
    *(_OWORD *)(v29 + 32) = xmmword_100673310;
    *(_QWORD *)(v29 + 16) = sub_100322CCC;
    *(_QWORD *)(v29 + 24) = v27;
    sub_10031CCA4(v29);

    v30 = *(_QWORD *)&v12[qword_100807BB0];
    if (v30)
      *(_QWORD *)(v30 + 40) = 0x4034000000000000;
  }
}

double sub_10031CCA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v3 = qword_100807BB0;
  v4 = *(_QWORD *)(v1 + qword_100807BB0);
  *(_QWORD *)(v1 + qword_100807BB0) = a1;
  swift_retain(a1);
  if (v4)
    v5 = sub_10000E99C(&qword_1007F83B8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationBarVisibilityScrollObserver, (uint64_t)&unk_1006879B8);
  else
    v5 = 0;
  CompoundScrollObserver.removeChild(_:)(v4, v5);
  v6 = *(_QWORD *)(v1 + v3);
  if (v6)
    v7 = sub_10000E99C(&qword_1007F83B8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationBarVisibilityScrollObserver, (uint64_t)&unk_1006879B8);
  else
    v7 = 0;
  swift_retain(v6);
  CompoundScrollObserver.addChild(_:)(v8, v7);
  swift_release(v4);
  swift_release(a1);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_10031CD80(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;
  id v9;

  v2 = v1;
  v4 = *(void **)&v2[qword_100807BB8];
  *(_QWORD *)&v2[qword_100807BB8] = a1;
  v9 = a1;
  if (a1)
  {
    if (v4)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v5 = v4;
      v6 = v9;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
      {
        v4 = v5;
        v9 = v6;
        goto LABEL_8;
      }
    }
  }
  else if (!v4)
  {
    goto LABEL_8;
  }
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v8 = objc_msgSend(v2, "collectionView");
    objc_msgSend(v8, "reloadData");

    v4 = v9;
    v9 = v8;
  }
LABEL_8:

}

id sub_10031CE80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_100807BF8;
  v2 = *(void **)(v0 + qword_100807BF8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_100807BF8);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v0, "didLongPressTitleWithGestureRecognizer:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10031CF00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  id v14;
  NSString *v15;
  id v16;
  NSString *v17;
  id v18;
  unint64_t v19;
  void *v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  objc_super v26;

  v1 = v0;
  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v26, "viewDidLoad");
  v2 = type metadata accessor for Feature.iOS(0);
  v25[3] = v2;
  v25[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v3 = sub_1000117C0(v25);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, enum case for Feature.iOS.today_tab_largest_ax_support(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v25);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  if ((v2 & 1) == 0)
  {
    v4 = objc_msgSend(v1, "view");
    if (!v4)
    {
      __break(1u);
      return;
    }
    v5 = v4;
    objc_msgSend(v4, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);

  }
  objc_msgSend(v1, "setClearsSelectionOnViewWillAppear:", 0);
  v6 = objc_msgSend(v1, "collectionView");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "_setEdgesAllowingScrollAccessoriesExtendedToBoundingPath:", 14);

  }
  v8 = objc_msgSend(v1, "collectionView");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setDelaysContentTouches:", 0);

  }
  if ((byte_100811DB0 & 1) == 0)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    objc_msgSend(v10, "setMinimumLineHeight:", 13.0);
    objc_msgSend(v10, "setMaximumLineHeight:", 13.0);
    v11 = sub_10000DF3C(&qword_1007FC280);
    inited = swift_initStackObject(v11, &v24);
    *(_OWORD *)(inited + 16) = xmmword_10066F870;
    *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
    v13 = sub_100019574(0, &qword_1007F92C8, NSMutableParagraphStyle_ptr);
    *(_QWORD *)(inited + 40) = v10;
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 72) = NSBaselineOffsetAttributeName;
    v14 = objc_allocWithZone((Class)NSNumber);
    v15 = NSParagraphStyleAttributeName;
    v16 = v10;
    v17 = NSBaselineOffsetAttributeName;
    v18 = objc_msgSend(v14, "initWithDouble:", 2.0);
    *(_QWORD *)(inited + 104) = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    *(_QWORD *)(inited + 80) = v18;
    v19 = sub_1003699BC(inited);
    sub_100019574(0, (unint64_t *)&unk_100808260, NSString_ptr);
    v20 = (void *)NSString.init(stringLiteral:)(" ", 1, 2);
    type metadata accessor for Key(0);
    sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    objc_msgSend(v20, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, 1.79769313e308, 1.79769313e308);

    v22 = objc_msgSend(objc_allocWithZone((Class)NSTextStorage), "init");
    byte_100811DB0 = 1;
  }
  v23 = *(_QWORD *)&v1[qword_100807C08];
  if (v23)
  {
    swift_retain(*(_QWORD *)&v1[qword_100807C08]);
    sub_1003F1888();
    swift_release(v23);
  }
}

void sub_10031D294(void *a1)
{
  id v1;

  v1 = a1;
  sub_10031CF00();

}

void sub_10031D2C8(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  CATransform3D v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  v3 = a1 & 1;
  objc_msgSendSuper2(&v10, "viewWillAppear:", v3);
  v4 = qword_100853F00;
  v5 = *(void **)&v1[qword_100853F00];
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v6, "layer");
    CATransform3DMakeScale(&v9, 1.0, 1.0, 1.0);
    objc_msgSend(v7, "setTransform:", &v9);

    v8 = *(void **)&v1[v4];
    *(_QWORD *)&v1[v4] = 0;

  }
  sub_10031C8F4(v3);
  sub_10031E4DC();
}

void sub_10031D3B8(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10031D2C8(a3);

}

void sub_10031D3F8(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView));

    objc_msgSend(v6, "setAlpha:", a2);
  }
}

void sub_10031D480()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  CATransform3D v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "as_viewWillBecomeFullyVisible");
  v1 = qword_100853F00;
  v2 = *(void **)&v0[qword_100853F00];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v3, "layer");
    CATransform3DMakeScale(&v6, 1.0, 1.0, 1.0);
    objc_msgSend(v4, "setTransform:", &v6);

    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = 0;

  }
}

void sub_10031D550(void *a1)
{
  id v1;

  v1 = a1;
  sub_10031D480();

}

void sub_10031D584(void *a1, uint64_t a2)
{
  sub_10031D994(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10031D598(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10031DC28(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10031D5AC(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v1 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewWillLayoutSubviews");
  v2 = objc_msgSend(v1, "view", v6.receiver, v6.super_class);
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for InsetCollectionViewControllerContentView();
    v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      *(_BYTE *)(v5
               + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = 0;

      return;
    }

  }
  __break(1u);
}

void sub_10031D648()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _BOOL4 v11;
  id v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  double v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  objc_super v30;

  v1 = v0;
  v30.receiver = v0;
  v30.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v30, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
    goto LABEL_27;
  v3 = v2;
  v4 = type metadata accessor for InsetCollectionViewControllerContentView();
  v5 = swift_dynamicCastClass(v3, v4);
  if (!v5)
  {

LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v6 = *(_BYTE *)(v5
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v6 & 1) != 0)
  {
    v7 = objc_msgSend(v1, "collectionView");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "contentInset");
      objc_msgSend(v8, "setContentInset:", 0.0);

      return;
    }
    goto LABEL_28;
  }
  v9 = objc_msgSend(v1, "traitCollection");
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 == (id)1)
  {
    v11 = 1;
  }
  else
  {
    v12 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v12, "displayCornerRadius");
    v14 = v13;

    v11 = v14 == 0.0;
  }
  v15 = objc_msgSend(v1, "navigationController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v1, "traitCollection");
    v18 = UITraitCollection.isSizeClassCompact.getter(v17);

    if ((v18 & 1) != 0)
    {
      sub_10016AC38();
      v20 = v19;

      if (!v11)
        goto LABEL_21;
      goto LABEL_16;
    }

  }
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v22 = v21;
  objc_msgSend(v21, "safeAreaInsets");
  v20 = v23;

  if (!v11)
    goto LABEL_21;
LABEL_16:
  v24 = objc_msgSend(v1, "presentedViewController");

  if (v24)
  {
    v25 = objc_msgSend(v1, "collectionView");
    if (!v25)
    {
LABEL_31:
      __break(1u);
      return;
    }
    v26 = v25;
    if (v20 <= *(double *)&v1[qword_100807C00])
      v20 = *(double *)&v1[qword_100807C00];
    objc_msgSend(v25, "contentInset");
    objc_msgSend(v26, "setContentInset:", v20);

    goto LABEL_23;
  }
LABEL_21:
  v27 = objc_msgSend(v1, "collectionView");
  if (!v27)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v28 = v27;
  objc_msgSend(v27, "contentInset");
  objc_msgSend(v28, "setContentInset:", v20);

  *(double *)&v1[qword_100807C00] = v20;
LABEL_23:
  v29 = *(_QWORD *)&v1[qword_100807C08];
  if (v29)
  {
    swift_retain(*(_QWORD *)&v1[qword_100807C08]);
    sub_1003F20D8();
    swift_release(v29);
  }
}

void sub_10031D94C(void *a1)
{
  id v1;

  v1 = a1;
  sub_10031D648();

}

void sub_10031D980(void *a1, uint64_t a2)
{
  sub_10031D994(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10031D994(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_10031D9FC(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, "viewWillDisappear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (!v3)
    return;
  v4 = v3;
  v5 = objc_msgSend(v1, "navigationController");
  if (!v5)
  {
LABEL_11:

    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "viewControllers");

  v8 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v16 = v9;
    else
      v16 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v17 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v9);
    if (v17)
      goto LABEL_5;
LABEL_16:

    swift_bridgeObjectRelease(v9);
    return;
  }
  if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_5:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
LABEL_8:
    v11 = v10;
    swift_bridgeObjectRelease(v9);
    v12 = v1;
    v13 = v11;
    v14 = static NSObject.== infix(_:_:)(v13, v12);

    if ((v14 & 1) != 0)
    {
      v15 = objc_msgSend(v12, "presentedViewController");

      if (!v15)
        objc_msgSend(v4, "setNavigationBarHidden:animated:", 0, a1 & 1);
    }
    goto LABEL_11;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10031DBD4(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10031D9FC(a3);

}

void sub_10031DC14(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10031DC28(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10031DC28(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType();
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

void sub_10031DC98(void *a1, double a2, double a3)
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(void *);
  uint64_t v25;
  objc_super v26;

  v26.receiver = v3;
  v26.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v26, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v7 = objc_msgSend(v3, "collectionView");
    if (v7)
    {
      v8 = v7;
      aBlock = 0x3FF0000000000000;
      v21 = 0;
      v22 = 0;
      v23 = 0x3FF0000000000000;
      v24 = 0;
      v25 = 0;
      objc_msgSend(v7, "setTransform:", &aBlock);

      v9 = objc_msgSend(v3, "collectionView");
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "indexPathsForSelectedItems");

        if (v11)
        {
          v12 = type metadata accessor for IndexPath(0);
          v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

          v14 = v3;
          sub_100322D00(v13, (uint64_t)v14);
          v16 = v15;

          if (*(_QWORD *)(v16 + 16))
          {
            v17 = swift_allocObject(&unk_1007383A0, 24, 7);
            swift_unknownObjectWeakInit(v17 + 16);
            v18 = swift_allocObject(&unk_1007385A8, 32, 7);
            *(_QWORD *)(v18 + 16) = v17;
            *(_QWORD *)(v18 + 24) = v16;
            v24 = sub_100323B34;
            v25 = v18;
            aBlock = (uint64_t)_NSConcreteStackBlock;
            v21 = 1107296256;
            v22 = sub_10033F618;
            v23 = (uint64_t)&unk_1007385C0;
            v19 = _Block_copy(&aBlock);
            objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v19, swift_release(v25).n128_f64[0]);
            _Block_release(v19);
          }
          else
          {
            swift_bridgeObjectRelease(v16);
          }
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10031DE94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  Class isa;
  Class v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, __n128);
  _BYTE v33[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F5520);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, "isCancelled", v11) & 1) == 0)
  {
    v14 = a2 + 16;
    swift_beginAccess(v14, v33, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
    if (Strong)
    {
      v16 = Strong;
      v17 = objc_msgSend(Strong, "collectionView");
      if (v17)
      {
        v18 = v17;
        v19 = *(_QWORD *)(a3 + 16);
        v29 = v16;
        v30 = a3;
        if (v19)
        {
          v20 = a3;
          v21 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
          v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
          v31 = *(_QWORD *)(v7 + 72);
          v32 = v22;
          v23 = swift_bridgeObjectRetain(v20);
          while (1)
          {
            v32(v13, v21, v6, v23);
            v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v13, 0, 1, v6);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
              break;
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v18, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

            v26 = IndexPath._bridgeToObjectiveC()().super.isa;
            v27 = objc_msgSend(v18, "cellForItemAtIndexPath:", v26);

            if (v27)
            {
              objc_msgSend(v27, "setHidden:", 1);

            }
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            v21 += v31;
            if (!--v19)
              goto LABEL_12;
          }
        }
        else
        {
          v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56);
          v23 = swift_bridgeObjectRetain(a3);
LABEL_12:
          v24(v13, 1, 1, v6, v23);
        }

        swift_bridgeObjectRelease(v30);
      }
      else
      {
        v18 = v16;
      }

    }
  }
}

void sub_10031E108(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_10031DC98(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

void sub_10031E174(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  v1 = v8.receiver;
  objc_msgSendSuper2(&v8, "viewSafeAreaInsetsDidChange");
  v2 = objc_msgSend(v1, "collectionView", v8.receiver, v8.super_class);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "safeAreaInsets");
      v7 = v6;

      objc_msgSend(v3, "verticalScrollIndicatorInsets");
      objc_msgSend(v3, "setVerticalScrollIndicatorInsets:", v7);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_10031E254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _QWORD v11[5];
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100808200);
  v3 = sub_100010F98(&qword_100808208, &qword_100808200, byte_10067F0C0);
  ShelfBasedCollectionViewController.pageGridProvider.getter(v11, v2, v3);
  v4 = sub_10000DF3C(&qword_100803110);
  v5 = sub_10000DF3C(&qword_100803118);
  if (swift_dynamicCast(&v12, v11, v4, v5, 6))
  {
    v6 = *((_QWORD *)&v13 + 1);
    v7 = v14;
    sub_100011064(&v12, *((uint64_t *)&v13 + 1));
    dispatch thunk of PageGridCaching.invalidateCache()(v6, v7);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v12);
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_100011088((uint64_t)&v12, (uint64_t *)&unk_100803120);
  }
  v8 = *(_QWORD *)(v1 + qword_100807BD8);
  swift_beginAccess(v8 + 16, &v12, 1, 0);
  v9 = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v8 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_10031E374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  uint64_t v15;

  v1 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v5, v13, 0, 0);
  sub_1000194E4(v5, (uint64_t)v14, (uint64_t *)&unk_100802A10);
  if (v15)
  {
    sub_100011020((uint64_t)v14, (uint64_t)v10);
    sub_100011088((uint64_t)v14, (uint64_t *)&unk_100802A10);
    v6 = v11;
    v7 = v12;
    sub_100011064(v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), v1);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v4, v6, v7);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v8 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  }
  else
  {
    v8 = sub_100011088((uint64_t)v14, (uint64_t *)&unk_100802A10);
  }
  dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared()(v8);
  sub_10031E4DC();
  AdvertRotationControllerProvider.appDidForeground()();
}

void sub_10031E4DC()
{
  char *v0;
  char *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  BOOL v65;
  void (*v66)(uint64_t, uint64_t);
  __n128 v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  __n128 v88;
  void *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  __n128 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  void (*v109)(char *, char *, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  _QWORD aBlock[5];
  uint64_t v128;
  char v129[24];
  char v130[24];

  v1 = v0;
  v118 = type metadata accessor for DispatchWorkItemFlags(0);
  v117 = *(_QWORD *)(v118 - 8);
  v2 = __chkstk_darwin(v118);
  v116 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for DispatchQoS(0, v2);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v5);
  v126 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v106 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v119 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v120 = (char *)&v106 - v14;
  __chkstk_darwin(v15);
  v122 = (char *)&v106 - v16;
  __chkstk_darwin(v17);
  v123 = (char *)&v106 - v18;
  v19 = sub_10000DF3C(&qword_1008081F8);
  __chkstk_darwin(v19);
  v125 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v106 - v22;
  v24 = type metadata accessor for TimeZone(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v121 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v106 - v28;
  v30 = (uint64_t)&v1[qword_100807BD0];
  swift_beginAccess(&v1[qword_100807BD0], v130, 0, 0);
  v124 = v30;
  v31 = v25;
  sub_1000194E4(v30, (uint64_t)v23, &qword_1008081F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    v32 = v24;
    v33 = &qword_1008081F8;
    v34 = (uint64_t)v23;
LABEL_5:
    sub_100011088(v34, v33);
    v39 = v31;
    if (qword_1007F3448 != -1)
      swift_once(&qword_1007F3448, sub_100602420);
    v40 = type metadata accessor for OSLogger(0, v38);
    sub_1000117A8(v40, (uint64_t)qword_100857600);
    v41 = sub_10000DF3C(&qword_1007FD430);
    v42 = type metadata accessor for LogMessage(0);
    v43 = swift_allocObject(v41, ((*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v42 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) | 7);
    *(_OWORD *)(v43 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000035, 0x8000000100644480);
    Logger.info(_:)(v43, v40, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v43);
    v44 = (uint64_t)v126;
    Date.init()(v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    v46 = (uint64_t)&v1[qword_100807BC8];
    swift_beginAccess(&v1[qword_100807BC8], aBlock, 33, 0);
    sub_10006C214(v44, v46, (uint64_t *)&unk_1007FACC0);
    v47 = swift_endAccess(aBlock);
    v48 = v125;
    static TimeZone.current.getter(v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v48, 0, 1, v32);
    v49 = v124;
    swift_beginAccess(v124, aBlock, 33, 0);
    v50 = (uint64_t)v48;
    goto LABEL_8;
  }
  v35 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v35(v29, v23, v24);
  v36 = (uint64_t)&v1[qword_100807BC8];
  swift_beginAccess(&v1[qword_100807BC8], v129, 0, 0);
  v111 = v36;
  sub_1000194E4(v36, (uint64_t)v9, (uint64_t *)&unk_1007FACC0);
  v37 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v32 = v24;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v24);
    v33 = (uint64_t *)&unk_1007FACC0;
    v34 = (uint64_t)v9;
    goto LABEL_5;
  }
  v109 = (void (*)(char *, char *, uint64_t, __n128))v35;
  v112 = v24;
  v110 = v31;
  v51 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v52 = v123;
  v51(v123, v9, v10);
  v53 = *(_QWORD *)&v1[qword_100807BC0 + 24];
  v54 = *(_QWORD *)&v1[qword_100807BC0 + 32];
  sub_100011064(&v1[qword_100807BC0], v53);
  if ((dispatch thunk of NetworkInquiry.isLikelyReachable.getter(v53, v54) & 1) != 0)
  {
    v107 = v51;
    v56 = v121;
    v57 = ((uint64_t (*)(void))static TimeZone.current.getter)();
    v58 = v122;
    Date.init()(v57);
    v59 = sub_10000E99C(&qword_100808258, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
    LOBYTE(v56) = dispatch thunk of static Equatable.== infix(_:_:)(v56, v29, v112, v59);
    v60 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v61 = (uint64_t)v120;
    v60(v120, v52, v10);
    v62 = (uint64_t)v119;
    v60(v119, v58, v10);
    v64 = v10;
    v108 = v37;
    if ((v56 & 1) != 0)
    {
      v65 = sub_10032367C(v61, v62, v63);
      v66 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v66(v62, v10);
      v66(v61, v10);
      if (!v65)
      {
        v68 = v107;
        if (qword_1007F3448 != -1)
          swift_once(&qword_1007F3448, sub_100602420);
        v69 = type metadata accessor for OSLogger(0, v67);
        sub_1000117A8(v69, (uint64_t)qword_100857600);
        v70 = sub_10000DF3C(&qword_1007FD430);
        v71 = type metadata accessor for LogMessage(0);
        v72 = swift_allocObject(v70, ((*(unsigned __int8 *)(*(_QWORD *)(v71 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v71 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v71 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v71 - 8) + 80) | 7);
        *(_OWORD *)(v72 + 16) = xmmword_10066FBA0;
        LogMessage.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100644540);
        Logger.info(_:)(v72, v69, &protocol witness table for OSLogger);
        v73 = swift_bridgeObjectRelease(v72);
        v74 = v11;
        v75 = v123;
        v76 = v112;
LABEL_24:
        ((void (*)(char *, uint64_t, __n128))v66)(v75, v64, v73);
        v101 = v110;
        (*(void (**)(char *, uint64_t))(v110 + 8))(v108, v76);
        v102 = (uint64_t)v126;
        v68(v126, v122, v64);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v102, 0, 1, v64);
        v103 = v111;
        swift_beginAccess(v111, aBlock, 33, 0);
        sub_10006C214(v102, v103, (uint64_t *)&unk_1007FACC0);
        v104 = swift_endAccess(aBlock);
        v105 = v125;
        v109(v125, v121, v76, v104);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v76);
        v49 = v124;
        swift_beginAccess(v124, aBlock, 33, 0);
        v50 = (uint64_t)v105;
LABEL_8:
        sub_10006C214(v50, v49, &qword_1008081F8);
        swift_endAccess(aBlock);
        return;
      }
    }
    else
    {
      v66 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v66(v62, v10);
      v66(v61, v10);
    }
    v74 = v11;
    if (qword_1007F3448 != -1)
      swift_once(&qword_1007F3448, sub_100602420);
    v120 = (char *)v66;
    v82 = type metadata accessor for OSLogger(0, v67);
    sub_1000117A8(v82, (uint64_t)qword_100857600);
    v83 = sub_10000DF3C(&qword_1007FD430);
    v84 = type metadata accessor for LogMessage(0);
    v85 = swift_allocObject(v83, ((*(unsigned __int8 *)(*(_QWORD *)(v84 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v84 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v84 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v84 - 8) + 80) | 7);
    *(_OWORD *)(v85 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100644510);
    Logger.info(_:)(v85, v82, &protocol witness table for OSLogger);
    v86 = objc_msgSend(v1, "collectionView", swift_bridgeObjectRelease(v85).n128_f64[0]);
    if (v86)
    {
      v87 = v86;
      objc_msgSend(v86, "scrollToTopAnimated:", 0);

    }
    sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v89 = (void *)static OS_dispatch_queue.main.getter(v88);
    v90 = swift_allocObject(&unk_100738418, 24, 7);
    *(_QWORD *)(v90 + 16) = v1;
    aBlock[4] = sub_100323630;
    v128 = v90;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100738430;
    v91 = _Block_copy(aBlock);
    v92 = v128;
    v93 = v1;
    v94 = swift_release(v92);
    v95 = v113;
    static DispatchQoS.unspecified.getter(v94);
    aBlock[0] = _swiftEmptyArrayStorage;
    v96 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v97 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
    v98 = sub_100010F98((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00, (const char *)&protocol conformance descriptor for [A]);
    v99 = v116;
    v100 = v118;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v97, v98, v118, v96);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v95, v99, v91);
    _Block_release(v91);

    (*(void (**)(char *, uint64_t))(v117 + 8))(v99, v100);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v95, v115);
    v64 = v10;
    v75 = v123;
    v76 = v112;
    v68 = v107;
    v66 = (void (*)(uint64_t, uint64_t))v120;
    goto LABEL_24;
  }
  if (qword_1007F3448 != -1)
    swift_once(&qword_1007F3448, sub_100602420);
  v77 = type metadata accessor for OSLogger(0, v55);
  sub_1000117A8(v77, (uint64_t)qword_100857600);
  v78 = sub_10000DF3C(&qword_1007FD430);
  v79 = type metadata accessor for LogMessage(0);
  v80 = swift_allocObject(v78, ((*(unsigned __int8 *)(*(_QWORD *)(v79 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v79 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v79 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v79 - 8) + 80) | 7);
  *(_OWORD *)(v80 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(0xD000000000000048, 0x80000001006444C0);
  Logger.info(_:)(v80, v77, &protocol witness table for OSLogger);
  v81 = swift_bridgeObjectRelease(v80);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v123, v10, v81);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v29, v112);
}

void sub_10031F0B4(void *a1)
{
  id v1;

  v1 = a1;
  sub_10031E374();

}

void sub_10031F0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  uint64_t v15;

  v1 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v5, v13, 0, 0);
  sub_1000194E4(v5, (uint64_t)v14, (uint64_t *)&unk_100802A10);
  if (v15)
  {
    sub_100011020((uint64_t)v14, (uint64_t)v10);
    sub_100011088((uint64_t)v14, (uint64_t *)&unk_100802A10);
    v6 = v11;
    v7 = v12;
    sub_100011064(v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), v1);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v4, v6, v7);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v8 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  }
  else
  {
    v8 = sub_100011088((uint64_t)v14, (uint64_t *)&unk_100802A10);
  }
  dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared()(v8);
  AdvertRotationControllerProvider.appWillBackground()();
}

void sub_10031F248(void *a1)
{
  id v1;

  v1 = a1;
  sub_10031F0E8();

}

uint64_t sub_10031F27C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for TodayShelfComponentTypeMappingProvider();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(_QWORD *)(v3 + 16) = swift_allocObject(v4, 16, 7);
  a1[3] = v2;
  result = sub_10000E99C(&qword_100808250, (uint64_t (*)(uint64_t))type metadata accessor for TodayShelfComponentTypeMappingProvider, (uint64_t)"Y.\v");
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_10031F300@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  double *v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[3];
  _QWORD v26[5];
  _QWORD v27[5];
  __int128 v28;
  _QWORD v29[4];
  _QWORD v30[4];

  ObjectType = swift_getObjectType();
  v28 = xmmword_10066F870;
  v4 = sub_10000E99C(&qword_100808218, type metadata accessor for TodayDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v29[3] = swift_getObjectType();
  v29[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v30[3] = swift_getObjectType();
  v30[0] = v6;
  sub_100010E9C((uint64_t)v29, (uint64_t)v27);
  sub_100010E9C((uint64_t)v27, (uint64_t)v26);
  v7 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v8 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v25, v26, v7, v8, 6) & 1) == 0)
    v25[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
  if (*(_QWORD *)&v25[0])
  {
    v23 = v25[0];
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = (double *)sub_10020070C(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = *((_QWORD *)v9 + 2);
    v10 = *((_QWORD *)v9 + 3);
    if (v11 >= v10 >> 1)
      v9 = (double *)sub_10020070C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v23;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100010E9C((uint64_t)v30, (uint64_t)v27);
  sub_100010E9C((uint64_t)v27, (uint64_t)v26);
  v12 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v13 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v25, v26, v12, v13, 6) & 1) == 0)
    v25[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
  if (*(_QWORD *)&v25[0])
  {
    v24 = v25[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = (double *)sub_10020070C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v15 = *((_QWORD *)v9 + 2);
    v14 = *((_QWORD *)v9 + 3);
    v16 = v24;
    if (v15 >= v14 >> 1)
    {
      v22 = (double *)sub_10020070C((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v24;
      v9 = v22;
    }
    *((_QWORD *)v9 + 2) = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v29, v28, (char *)&type metadata for Any + 8);
  v17 = *(_QWORD *)(v1 + qword_100807BD8);
  swift_retain(v17);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v27, ObjectType, v4);
  v18 = *(_QWORD *)(v1 + qword_100852EA8);
  v19 = type metadata accessor for TodayPageLayoutSectionProvider(0);
  *(_QWORD *)(swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52)) + qword_100803EC0) = v17;
  sub_100011020((uint64_t)v27, (uint64_t)v26);
  sub_100011020((uint64_t)v26, (uint64_t)v25);
  swift_retain(v17);
  swift_retain(v18);
  v20 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v25, v9, v18, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  swift_release(v17);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
  a1[3] = v19;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v20;
  return result;
}

unint64_t sub_10031F668@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for TodayPageShelfLayoutSpacingProvider;
  result = sub_1003235C8();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_10031F698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_100852E58);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
  v3 = type metadata accessor for TodayPageShelfSupplementaryProvider();
  v4 = swift_allocObject(v3, 40, 7);
  v5 = sub_10000E99C(&qword_100808238, (uint64_t (*)(uint64_t))&type metadata accessor for TodayDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  *(_QWORD *)(v4 + 32) = 0;
  swift_unknownObjectWeakInit(v4 + 24);
  *(_QWORD *)(v4 + 32) = v5;
  swift_unknownObjectWeakAssign(v6, v1);
  *(_QWORD *)(v4 + 16) = v2;
  sub_10000E99C(&qword_100808240, (uint64_t (*)(uint64_t))type metadata accessor for TodayPageShelfSupplementaryProvider, (uint64_t)&unk_10068A030);
  swift_retain(v2);
  return v4;
}

id sub_10031F76C()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::OpaquePointer v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id result;
  id v20;
  uint64_t v21;
  _QWORD v22[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10037215C();
  v4 = type metadata accessor for CompoundCollectionElementsObserver(0);
  if (swift_dynamicCastClass(v3, v4))
  {
    v5 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_100010340, 0);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    swift_unknownObjectRelease(v3);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v5 = CompoundCollectionElementsObserver.init(children:)(_swiftEmptyArrayStorage);
  }
  v6 = sub_10000DF3C(&qword_1007F4420);
  v7._rawValue = (void *)swift_allocObject(v6, 80, 7);
  *((_OWORD *)v7._rawValue + 1) = xmmword_10066F860;
  v8 = *(_QWORD *)&v1[qword_100807BE0];
  v9 = sub_10000E99C(&qword_100808220, (uint64_t (*)(uint64_t))type metadata accessor for TodayCardOverlayCollectionElementsObserver, (uint64_t)"U-\v");
  *((_QWORD *)v7._rawValue + 4) = v8;
  *((_QWORD *)v7._rawValue + 5) = v9;
  v10 = *(_QWORD *)&v1[qword_100852E58];
  v11 = *(_QWORD *)&v1[qword_100807BF0];
  v12 = sub_10000DF3C(&qword_100808228);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v11);
  v13 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v10, v11);
  v14 = sub_100010F98(&qword_100808230, &qword_100808228, (const char *)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *((_QWORD *)v7._rawValue + 6) = v13;
  *((_QWORD *)v7._rawValue + 7) = v14;
  v15 = sub_10000E99C(&qword_100808218, type metadata accessor for TodayDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v16 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v22, ObjectType, v15);
  v17 = TimedMetricsPagePresenter.impressionsCalculator.getter(v16);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v11);
  result = objc_msgSend(v1, "collectionView", swift_retain(v18).n128_f64[0]);
  if (result)
  {
    v20 = result;
    v21 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    *((_QWORD *)v7._rawValue + 8) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v22, v17, v11, v18, v20);
    *((_QWORD *)v7._rawValue + 9) = &protocol witness table for ImpressionsCollectionElementsObserver;
    CompoundCollectionElementsObserver.addChildren(_:)(v7);
    swift_bridgeObjectRelease(v7._rawValue);
    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10031F9EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_10000DF3C(&qword_100808210);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100374D54(a1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    v7 = *v5;
    sub_10032345C();
    swift_release(v7);
  }
  else if (v6 == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:))
  {
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_10031FAF4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  v2 = type metadata accessor for AdFlowActionRunner(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  swift_retain(v1);
  return sub_1005FABBC(v1, v0);
}

void sub_10031FB58(double a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  void *v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  char *v55;
  id v56;
  char v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  __n128 v67;
  double v68;
  __n128 v69;
  double v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  double v83;
  double v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  NSString v90;
  id v91;
  id v92;
  unint64_t v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;

  v3 = v2;
  v6 = type metadata accessor for PageGrid.Direction(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v100 - v11;
  v13 = type metadata accessor for PageGrid(0);
  v103 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TitleHeaderView.Style(0);
  v17 = __chkstk_darwin(v16);
  v104 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = TodayDiffablePagePresenter.pageTitle.getter(v17);
  v21 = v20;
  v22 = Optional<A>.isNilOrEmpty.getter(v19);
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
  if ((v22 & 1) != 0)
  {
    sub_100322100(&qword_100808200, &qword_100808208);
    return;
  }
  v24 = qword_100807BB8;
  v25 = *(void **)&v3[qword_100807BB8];
  v26 = 0.0;
  v102 = v15;
  if (v25)
  {
    objc_msgSend(v25, "sizeToFit", v23);
    v27 = *(void **)&v3[v24];
    v28 = 0.0;
    if (v27)
    {
      objc_msgSend(v27, "frame");
      v28 = v29;
      v26 = v30;
    }
  }
  else
  {
    v28 = 0.0;
  }
  v101 = v13;
  v31 = objc_msgSend(v3, "view");
  if (!v31)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "traitCollection");

  sub_1005F5548(v33, *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph], v104, v34);
  v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v12, enum case for PageGrid.Direction.vertical(_:), v6);
  v36 = sub_1000C7CCC(v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = objc_msgSend(v3, "view");
  if (!v43)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, "traitCollection");

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v46 = sub_100418380(0.0);
  v47 = v102;
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v9, 0, v46, a1, a2, v36, v38, v40, v42);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v48 = objc_msgSend(v3, "navigationController");
  if (!v48)
  {
LABEL_22:
    v58 = sub_1000C7CCC(v48);
    goto LABEL_23;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, "viewControllers");

  v51 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v51);

  if (!((unint64_t)v52 >> 62))
  {
    if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_21:
    swift_bridgeObjectRelease(v52);
    goto LABEL_22;
  }
  if (v52 < 0)
    v59 = v52;
  else
    v59 = v52 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v52);
  v60 = _CocoaArrayWrapper.endIndex.getter(v59);
  swift_bridgeObjectRelease(v52);
  if (!v60)
    goto LABEL_21;
LABEL_12:
  if ((v52 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v53 = *(id *)(v52 + 32);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_29;
  }
  v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v52);
LABEL_15:
  v54 = v53;
  swift_bridgeObjectRelease(v52);
  v55 = v3;
  v56 = v54;
  v57 = static NSObject.== infix(_:_:)(v56, v55);

  v58 = 0.0;
  if ((v57 & 1) == 0)
    goto LABEL_22;
LABEL_23:
  PageGrid.horizontalMargins.getter(v48);
  v62 = v61;
  PageGrid.horizontalMargins.getter(v63);
  v65 = v64;
  v67.n128_f64[0] = PageGrid.containerWidth.getter(v66);
  v68 = v67.n128_f64[0];
  v69.n128_f64[0] = PageGrid.containerHeight.getter(v67);
  v70 = v69.n128_f64[0];
  v71 = TodayDiffablePagePresenter.pageTitle.getter(v69);
  v73 = v72;
  v74 = TodayDiffablePagePresenter.pageTitleDetail.getter();
  v76 = v75;
  v77 = TodayDiffablePagePresenter.pageShortTitleDetail.getter();
  v79 = v78;
  v80 = objc_msgSend(v3, "view");
  if (!v80)
  {
LABEL_31:
    __break(1u);
    return;
  }
  v81 = v80;
  v82 = v104;
  sub_100430E10(0, 0, 0, v71, v73, 0, v74, v76, v68, v70, v28, v26, v58, v62, 0.0, v65, v77, v79, 2,
    v104,
    0,
    v80);
  v84 = v83;

  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v73);
  v85 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v86 = objc_msgSend(v85, "fractionalWidthDimension:", 1.0);
  v87 = objc_msgSend(v85, "absoluteDimension:", v84);
  v88 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v86, v87);

  v89 = v88;
  v90 = String._bridgeToObjectiveC()();
  v91 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v89, v90, 1);

  v92 = v91;
  PageGrid.horizontalDirectionalMargins.getter(v92);
  objc_msgSend(v92, "setContentInsets:");

  v93 = sub_100322100(&qword_100808200, &qword_100808208);
  v105 = v93;
  v94 = v92;
  swift_bridgeObjectRetain(v93);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
  v97 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v96 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v97 >= v96 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
  v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v94);
  specialized Array._endMutation()(v98);

  v99 = swift_bridgeObjectRelease(v93);
  (*(void (**)(char *, uint64_t, __n128))(v103 + 8))(v47, v101, v99);
  sub_10002F0D4(v82, type metadata accessor for TitleHeaderView.Style);
}

double sub_10032024C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  ObjectType = swift_getObjectType();
  if ((a1 != 0xD000000000000039 || a2 != 0x8000000100632B20)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000039, 0x8000000100632B20, a1, a2, 0) & 1) == 0)
  {
    return sub_10031B020(a1, a2, (uint64_t)&unk_1007383F0, (id (*)(uint64_t))sub_1003235BC, (id (*)(uint64_t))sub_1003235B4, (uint64_t)a3);
  }
  v7 = swift_allocObject(&unk_1007383A0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = swift_allocObject(&unk_1007383C8, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = ObjectType;
  a3[3] = sub_10000DF3C(&qword_1007FC1A8);
  a3[4] = sub_100010F98((unint64_t *)&unk_1007FC1B0, &qword_1007FC1A8, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
  sub_1000117C0(a3);
  v9 = type metadata accessor for TitleHeaderView(0);
  swift_bridgeObjectRetain(a2);
  ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(a1, a2, 0xD00000000000001DLL, 0x8000000100644460, sub_100322CF8, v8, v9);
  return result;
}

void sub_1003203D0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *Strong;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  char *v22;
  id v23;
  char v24;
  __n128 v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t (**v33)();
  uint64_t v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t (*v37)();
  __n128 v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  id v42;
  uint64_t v43;
  __n128 v44;
  id v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  NSString v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  NSString v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  NSString v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  char v79;
  id v80;
  char v82[24];

  v7 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v7);
  v9 = &v82[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v82[-v11 - 8];
  a5 += 16;
  swift_beginAccess(a5, v82, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
    return;
  v14 = Strong;
  v15 = objc_msgSend(Strong, "navigationController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "viewControllers");

    v18 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v28 = v19;
      else
        v28 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v29 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v19);
      if (v29)
      {
LABEL_5:
        if ((v19 & 0xC000000000000001) != 0)
        {
          v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
        }
        else
        {
          if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v20 = *(id *)(v19 + 32);
        }
        v21 = v20;
        swift_bridgeObjectRelease(v19);
        v22 = v14;
        v23 = v21;
        v24 = static NSObject.== infix(_:_:)(v23, v22);

        v27 = 0.0;
        if ((v24 & 1) != 0)
          goto LABEL_16;
        goto LABEL_15;
      }
    }
    else if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease(v19);
  }
LABEL_15:
  v30 = v14;
  v27 = sub_1000C7CCC(v30);

LABEL_16:
  v26.n128_u64[0] = 0;
  v25.n128_f64[0] = v27;
  objc_msgSend(a1, "setLayoutMargins:", static UIEdgeInsets.vertical(top:bottom:)(v25, v26));
  *((_BYTE *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_allowsAccessibilityLayouts) = 0;
  objc_msgSend(a1, "setNeedsLayout");
  v31 = *(void **)&v14[qword_100807BB8];
  v32 = v31;
  sub_1000F0D24(v31);

  v33 = (uint64_t (**)())((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines);
  v34 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines + 8);
  *v33 = sub_100158F34;
  v33[1] = 0;
  swift_release(v34);
  v35 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel);
  v37 = *v33;
  v36 = v33[1];
  v38 = swift_retain(v36);
  v39 = ((uint64_t (*)(_QWORD *, __n128))v37)(a1, v38);
  objc_msgSend(v35, "setNumberOfLines:", v39, swift_release(v36).n128_f64[0]);
  v40 = (_OWORD *)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset);
  v41 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v40 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v40[1] = v41;
  objc_msgSend(a1, "setNeedsLayout");
  v42 = objc_msgSend(v14, "traitCollection");
  v43 = *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  v44 = swift_retain(v43);
  sub_1005F5548(v42, v43, (uint64_t)v12, v44);

  swift_release(v43);
  sub_10009E894((uint64_t)v12, (uint64_t)v9, type metadata accessor for TitleHeaderView.Style);
  (*(void (**)(char *))((swift_isaMask & *a1) + 0x1C8))(v9);
  v45 = objc_msgSend(v14, "traitCollection");
  v46 = UITraitCollection.isSizeClassCompact.getter(v45);

  v47 = qword_100852E58;
  v48 = *(_QWORD *)&v14[qword_100852E58];
  v49 = swift_retain(v48);
  if ((v46 & 1) != 0)
  {
    TodayDiffablePagePresenter.pageTitle.getter(v49);
    v51 = v50;
    v52 = swift_release(v48).n128_u64[0];
    if (v51)
    {
      v53 = String._bridgeToObjectiveC()();
      v52 = swift_bridgeObjectRelease(v51).n128_u64[0];
    }
    else
    {
      v53 = 0;
    }
    objc_msgSend(v35, "setText:", v53, *(double *)&v52);

    v58 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);
    if (v58)
    {
      v59 = *(_QWORD *)&v14[v47];
      swift_retain(v59);
      v60 = v58;
      TodayDiffablePagePresenter.pageTitleDetail.getter();
      v62 = v61;
      v63 = swift_release(v59).n128_u64[0];
      if (v62)
      {
        v64 = String._bridgeToObjectiveC()();
        v63 = swift_bridgeObjectRelease(v62).n128_u64[0];
      }
      else
      {
        v64 = 0;
      }
      objc_msgSend(v60, "setText:", v64, *(double *)&v63);

    }
    v67 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel);
    if (v67)
    {
      v68 = *(_QWORD *)&v14[v47];
      swift_retain(v68);
      v69 = v67;
      TodayDiffablePagePresenter.pageShortTitleDetail.getter();
      v71 = v70;
      v72 = swift_release(v68).n128_u64[0];
      if (v71)
      {
        v73 = String._bridgeToObjectiveC()();
        v72 = swift_bridgeObjectRelease(v71).n128_u64[0];
      }
      else
      {
        v73 = 0;
      }
      objc_msgSend(v69, "setText:", v73, *(double *)&v72);

    }
  }
  else
  {
    TodayDiffablePagePresenter.pageLongTitle.getter(v49);
    v55 = v54;
    v56 = swift_release(v48).n128_u64[0];
    if (v55)
    {
      v57 = String._bridgeToObjectiveC()();
      v56 = swift_bridgeObjectRelease(v55).n128_u64[0];
    }
    else
    {
      v57 = 0;
    }
    objc_msgSend(v35, "setText:", v57, *(double *)&v56);

    v65 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);
    if (v65)
      objc_msgSend(v65, "setText:", 0);
    v66 = *(void **)((char *)a1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel);
    if (v66)
      objc_msgSend(v66, "setText:", 0);
  }
  objc_msgSend(v35, "setAllowsDefaultTighteningForTruncation:", 1);
  objc_msgSend(a1, "setNeedsLayout");
  if ((sub_1002D563C() & 1) != 0)
  {
    v74 = objc_msgSend(a1, "gestureRecognizers");
    if (!v74)
      goto LABEL_42;
    v75 = v74;
    v76 = sub_100019574(0, (unint64_t *)&qword_1007F6C50, UIGestureRecognizer_ptr);
    v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v75, v76);

    v78 = sub_10031CE80();
    v79 = sub_100079B30((uint64_t)v78, v77);
    swift_bridgeObjectRelease(v77);

    if ((v79 & 1) != 0)
    {

    }
    else
    {
LABEL_42:
      v80 = sub_10031CE80();
      objc_msgSend(a1, "addGestureRecognizer:", v80);

    }
    sub_10002F0D4((uint64_t)v12, type metadata accessor for TitleHeaderView.Style);
  }
  else
  {
    sub_10002F0D4((uint64_t)v12, type metadata accessor for TitleHeaderView.Style);

  }
}

void sub_100320A5C(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  char v5;
  id v6;
  id v7;

  v2 = v1;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.isSizeClassCompact.getter(v4);

  if ((v5 & 1) != 0)
  {
    v6 = a1;
    sub_10031CD80(a1);
  }
  else
  {
    sub_10031CD80(0);
    v7 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v7, "_setLargeTitleAccessoryView:alignToBaseline:", a1, 0);

  }
}

void sub_100320B14(void *a1, CGFloat a2)
{
  id v3;
  CATransform3D v4;

  v3 = objc_msgSend(a1, "layer");
  CATransform3DMakeScale(&v4, a2, a2, 1.0);
  objc_msgSend(v3, "setTransform:", &v4);

}

void sub_100320BA4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  void *v32;
  char v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, __n128);
  Class isa;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  void **aBlock;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t (*v59)();
  uint64_t v60;
  void **v61;
  uint64_t v62;

  v54 = a1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Shelf.ContentType(0);
  v53 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v52 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v51 = (char *)&v47 - v8;
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v50 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ItemLayoutContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000E99C(&qword_100808218, type metadata accessor for TodayDiffablePageViewController, (uint64_t)byte_10067F0C0);
  ShelfBasedCollectionViewController.itemLayoutContext(at:)(a2, ObjectType, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100011088((uint64_t)v14, &qword_1007F4A50);
    return;
  }
  v20 = v2;
  v48 = v16;
  v49 = v15;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  KeyPath = swift_getKeyPath(&unk_100685360);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  v22 = swift_getKeyPath(&unk_100685390);
  v23 = v51;
  ReadOnlyLens.subscript.getter(v22, v9);
  v24 = swift_release(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v50 + 8))(v11, v9, v24);
  v26 = v52;
  v25 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, enum case for Shelf.ContentType.todayCard(_:), v5);
  v27 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v5, v27);
  dispatch thunk of RawRepresentable.rawValue.getter(&v61, v5, v27);
  v28 = v56;
  v29 = v62;
  if (aBlock == v61 && v56 == v62)
  {
    v30 = swift_bridgeObjectRelease_n(v56, 2);
    v31 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
    v31(v26, v5, v30);
    ((void (*)(char *, uint64_t))v31)(v23, v5);
    v32 = v54;
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v56, v61, v62, 0);
    swift_bridgeObjectRelease(v28);
    v34 = swift_bridgeObjectRelease(v29);
    v35 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
    v35(v26, v5, v34);
    ((void (*)(char *, uint64_t))v35)(v23, v5);
    v32 = v54;
    if ((v33 & 1) == 0)
      goto LABEL_9;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v37 = objc_msgSend(v32, "cellForItemAtIndexPath:", isa);

  v39 = v48;
  v38 = v49;
  if (v37)
  {
    v40 = (void *)objc_opt_self(UIView);
    v41 = swift_allocObject(&unk_100738530, 32, 7);
    *(_QWORD *)(v41 + 16) = v37;
    *(_QWORD *)(v41 + 24) = 0x3FEEB851EB851EB8;
    v59 = sub_100323B4C;
    v60 = v41;
    aBlock = _NSConcreteStackBlock;
    v56 = 1107296256;
    v57 = sub_1000BD6CC;
    v58 = &unk_100738548;
    v42 = _Block_copy(&aBlock);
    v43 = v60;
    v44 = v37;
    swift_release(v43);
    v59 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
    v60 = 0;
    aBlock = _NSConcreteStackBlock;
    v56 = 1107296256;
    v57 = sub_100129140;
    v58 = &unk_100738570;
    v45 = _Block_copy(&aBlock);
    objc_msgSend(v40, "_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:", 135, v42, v45, 0.0, 1.0);
    _Block_release(v45);
    _Block_release(v42);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v38);
    v46 = *(void **)(v20 + qword_100853F00);
    *(_QWORD *)(v20 + qword_100853F00) = v37;

    return;
  }
LABEL_9:
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v49);
}

uint64_t sub_10032105C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  sub_100320BA4(v11, (uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10032110C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void (*v16)();
  uint64_t v17;
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, "scrollViewDidScroll:", a1);
  v3 = qword_100853F00;
  v4 = *(void **)&v1[qword_100853F00];
  if (v4)
  {
    v5 = (void *)objc_opt_self(UIView);
    v6 = swift_allocObject(&unk_1007384B8, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = 0x3FF0000000000000;
    v16 = sub_100323AF4;
    v17 = v6;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_1000BD6CC;
    v15 = &unk_1007384D0;
    v7 = _Block_copy(&v12);
    v8 = v17;
    v9 = v4;
    swift_release(v8);
    v16 = (void (*)())static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
    v17 = 0;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_100129140;
    v15 = &unk_1007384F8;
    v10 = _Block_copy(&v12);
    objc_msgSend(v5, "_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:", 135, v7, v10, 0.0, 1.0);
    _Block_release(v10);
    _Block_release(v7);

    v11 = *(void **)&v1[v3];
    *(_QWORD *)&v1[v3] = 0;

  }
}

void sub_100321280(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10032110C((uint64_t)v4);

}

uint64_t sub_1003212D4(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double (*v22)(char *, char *, uint64_t);
  __n128 v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;

  v35 = (char *)a1;
  v34 = sub_10000DF3C((uint64_t *)&unk_100804D20);
  __chkstk_darwin(v34);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v33 - v20;
  sub_10009E894((uint64_t)v35, (uint64_t)v14, type metadata accessor for FlowDestination);
  if (swift_getEnumCaseMultiPayload(v14, v12) != 20)
  {
    sub_10002F0D4((uint64_t)v14, type metadata accessor for FlowDestination);
LABEL_9:
    v26 = 0;
    return v26 & 1;
  }
  v33 = v18;
  v35 = v5;
  v22 = *(double (**)(char *, char *, uint64_t))(v16 + 32);
  v23.n128_f64[0] = v22(v21, v14, v15);
  DiffablePagePresenter.pageUrl.getter(v23);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v21, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  v24 = (uint64_t)&v2[*(int *)(v34 + 48)];
  sub_1000194E4((uint64_t)v11, (uint64_t)v2, (uint64_t *)&unk_1007F5150);
  sub_1000194E4((uint64_t)v8, v24, (uint64_t *)&unk_1007F5150);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v25((uint64_t)v2, 1, v15) != 1)
  {
    v34 = (uint64_t)v21;
    v27 = (uint64_t)v35;
    sub_1000194E4((uint64_t)v2, (uint64_t)v35, (uint64_t *)&unk_1007F5150);
    if (v25(v24, 1, v15) != 1)
    {
      v30 = v33;
      v22(v33, (char *)v24, v15);
      v31 = sub_10000E99C(&qword_1007F8368, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v30, v15, v31);
      v32 = *(void (**)(char *, uint64_t))(v16 + 8);
      v32(v30, v15);
      sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F5150);
      sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F5150);
      v32((char *)v34, v15);
      v32((char *)v27, v15);
      sub_100011088((uint64_t)v2, (uint64_t *)&unk_1007F5150);
      return v26 & 1;
    }
    sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F5150);
    sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F5150);
    v28 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v28(v34, v15);
    v28(v27, v15);
    goto LABEL_8;
  }
  sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F5150);
  sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F5150);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  if (v25(v24, 1, v15) != 1)
  {
LABEL_8:
    sub_100011088((uint64_t)v2, (uint64_t *)&unk_100804D20);
    goto LABEL_9;
  }
  sub_100011088((uint64_t)v2, (uint64_t *)&unk_1007F5150);
  v26 = 1;
  return v26 & 1;
}

uint64_t sub_1003216C0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  ObjectType = swift_getObjectType();
  v4 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v1, "collectionView", v9);
  if (!v12
    || (v13 = v12,
        v14 = objc_msgSend(v12, "indexPathsForSelectedItems"),
        v13,
        !v14))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_8:
    sub_100011088((uint64_t)v6, &qword_1007F5520);
    v18 = type metadata accessor for ItemLayoutContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v7);

  if (*(_QWORD *)(v15 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v16, 1, v7);
  v17 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v17) == 1)
    goto LABEL_8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  v20 = sub_10000E99C(&qword_100808218, type metadata accessor for TodayDiffablePageViewController, (uint64_t)byte_10067F0C0);
  ShelfBasedCollectionViewController.itemLayoutContext(at:)(v11, ObjectType, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

double sub_1003218E4(void *a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0, v3);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v34 - v16;
  TodayDiffablePagePresenter.feedPreviewUrl.getter(v15);
  if (v18)
  {
    v20 = v18;
    if (objc_msgSend(a1, "state") == (id)1)
    {
      v21 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "setString:", v22, swift_bridgeObjectRelease(v20).n128_f64[0]);

      v23 = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 1);
      objc_msgSend(v23, "prepare");
      objc_msgSend(v23, "impactOccurred");
      sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v35 = static OS_dispatch_queue.main.getter(v24);
      static DispatchTime.now()(v35);
      + infix(_:_:)(v13, 0.1);
      v36 = *(void (**)(char *, uint64_t))(v11 + 8);
      v36(v13, v10);
      v25 = swift_allocObject(&unk_100738468, 24, 7);
      *(_QWORD *)(v25 + 16) = v23;
      aBlock[4] = sub_100323A98;
      v41 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BD6CC;
      aBlock[3] = &unk_100738480;
      v26 = _Block_copy(aBlock);
      v27 = v41;
      v28 = v23;
      v29 = swift_release(v27);
      static DispatchQoS.unspecified.getter(v29);
      aBlock[0] = _swiftEmptyArrayStorage;
      v30 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v31 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
      v32 = sub_100010F98((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00, (const char *)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v2, v30);
      v33 = (void *)v35;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v9, v5, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
      v36(v17, v10);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
    }
  }
  return result;
}

void sub_100321C80(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1003218E4(v4);

}

double sub_100321CD4()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + qword_100807BB0));

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + qword_100807BC0));
  sub_100011088(v0 + qword_100807BC8, (uint64_t *)&unk_1007FACC0);
  sub_100011088(v0 + qword_100807BD0, &qword_1008081F8);
  swift_release(*(_QWORD *)(v0 + qword_100807BD8));
  swift_release(*(_QWORD *)(v0 + qword_100807BE0));
  swift_release(*(_QWORD *)(v0 + qword_100807BE8));
  swift_release(*(_QWORD *)(v0 + qword_100807BF0));

  sub_100011088(v0 + qword_100853F08, (uint64_t *)&unk_100808370);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_100807C08)).n128_u64[0];
  return result;
}

double sub_100321DC8(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_100807BB0));

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + qword_100807BC0));
  sub_100011088(a1 + qword_100807BC8, (uint64_t *)&unk_1007FACC0);
  sub_100011088(a1 + qword_100807BD0, &qword_1008081F8);
  swift_release(*(_QWORD *)(a1 + qword_100807BD8));
  swift_release(*(_QWORD *)(a1 + qword_100807BE0));
  swift_release(*(_QWORD *)(a1 + qword_100807BE8));
  swift_release(*(_QWORD *)(a1 + qword_100807BF0));

  sub_100011088(a1 + qword_100853F08, (uint64_t *)&unk_100808370);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_100807C08)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for TodayDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100807C38;
  if (!qword_100807C38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayDiffablePageViewController);
  return result;
}

void sub_100321F04(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[15];

  v6[0] = "\b";
  v6[1] = "\b";
  v6[2] = "\b";
  v6[3] = &unk_1006852B8;
  sub_10006A5F8(319, (unint64_t *)&unk_100801460, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_10006A5F8(319, (unint64_t *)&unk_100807C48, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[9] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[10] = "\b";
      v6[11] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[12] = &unk_1006852D0;
      v6[13] = &unk_1006852E8;
      v6[14] = "\b";
      swift_initClassMetadata2(a1, 256, 15, v6, a1 + 1264);
    }
  }
}

uint64_t sub_100321FF8()
{
  return type metadata accessor for TodayDiffablePageViewController(0);
}

uint64_t sub_100322000@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + qword_100853F08;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, (uint64_t *)&unk_100808370);
}

uint64_t sub_10032205C(uint64_t a1)
{
  return sub_1003212D4(a1) & 1;
}

void sub_100322080(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

void sub_1003220C8()
{
  sub_10031C8F4(0);
}

unint64_t sub_1003220EC()
{
  return sub_100322100(&qword_100806088, &qword_1008060A0);
}

unint64_t sub_100322100(uint64_t *a1, unint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  double v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  id v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id *v54;
  id v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  double (*v62)(void);
  uint64_t v63;
  char *v64;
  __n128 v65;
  char *v66;
  uint64_t KeyPath;
  id *v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  NSString v80;
  id v81;
  id v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  __n128 v95;
  char *v96;
  uint64_t v97;
  id *v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  NSString v109;
  id v110;
  id v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  id *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  id *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  unint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  char v135[24];
  unint64_t v136;

  v132 = a2;
  v133 = a1;
  v3 = type metadata accessor for ShelfBackground(0);
  v128 = *(_QWORD *)(v3 - 8);
  v129 = v3;
  __chkstk_darwin(v3);
  v123 = (id *)((char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v119 = (id *)((char *)&v116 - v6);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v126 = *(_QWORD *)(v7 - 8);
  v127 = v7;
  __chkstk_darwin(v7);
  v122 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v118 = (char *)&v116 - v10;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v11);
  v13 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v125 = (char *)&v116 - v15;
  v16 = type metadata accessor for ShelfLayoutContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v124 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v120 = (char *)&v116 - v20;
  v134 = sub_10000DF3C((uint64_t *)&unk_1008030F0);
  v21 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v116 - v25;
  v27 = type metadata accessor for PaginatedPagePresenterState(0, v24);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (uint64_t *)((char *)&v116 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = (unint64_t)_swiftEmptyArrayStorage;
  dispatch thunk of DiffablePagePresenter.paginationState.getter(v29);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v28 + 88))(v31, v27) == enum case for PaginatedPagePresenterState.preparingNextPage(_:))
  {
    v117 = v17;
    v121 = v16;
    (*(void (**)(_QWORD *, uint64_t))(v28 + 96))(v31, v27);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
    v130 = v2;
    v32 = objc_msgSend(v2, "traitCollection");
    if (qword_1007F2A10 != -1)
      swift_once(&qword_1007F2A10, sub_10042D114);
    v33 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v33, (uint64_t)qword_100856180);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v34 = sub_10000DF3C(&qword_1007F5840);
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v35 + 32) = v32;
    v36 = v32;
    v37 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v35);
    v38 = dispatch thunk of AnyDimension.rawValue(in:)(v37, v33, &protocol witness table for StaticDimension);

    v39 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v40 = objc_msgSend(v39, "fractionalWidthDimension:", 1.0);
    v41 = objc_msgSend(v39, "absoluteDimension:", v38);
    v42 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v40, v41);

    type metadata accessor for InfiniteScrollFooterView();
    v43 = v42;
    static UICollectionReusableView.elementKind.getter();
    v45 = v44;
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    v47 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v43, v46, 5);

    v48 = v47;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    v50 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v49 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v51 = v134;
    if (v50 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
    specialized Array._endMutation()(v52);

    v16 = v121;
    v17 = v117;
    v53 = v130;
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v31, v27);
    v53 = v2;
    v51 = v134;
  }
  v54 = (id *)&v53[qword_100802E50];
  swift_beginAccess(&v53[qword_100802E50], v135, 0, 0);
  if (*v54)
  {
    v55 = *v54;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    v56 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v51);
    v57 = *(void (**)(char *, uint64_t))(v21 + 8);
    v57(v26, v51);
    if (v56 > 0)
    {
      v58 = v133;
      v59 = sub_10000DF3C(v133);
      v60 = sub_100010F98(v132, v58, byte_10067F0C0);
      ShelfBasedCollectionViewController.shelfLayoutContext(for:)(0, v59, v60);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
      {
        sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007FAB60);
        v61 = *v54;
        if (!*v54)
          return v136;
        goto LABEL_18;
      }
      v130 = v53;
      v134 = (uint64_t)v57;
      v62 = *(double (**)(void))(v17 + 32);
      v63 = v17;
      v64 = v124;
      v65.n128_f64[0] = v62();
      v66 = v122;
      ShelfLayoutContext.shelf.getter(v65);
      KeyPath = swift_getKeyPath(&unk_100685330);
      v68 = v123;
      v69 = v127;
      ReadOnlyLens.subscript.getter(KeyPath, v127);
      v70 = swift_release(KeyPath);
      (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v66, v69, v70);
      v72 = v128;
      v71 = v129;
      if ((*(unsigned int (**)(id *, uint64_t))(v128 + 88))(v68, v129) != enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v16);
        (*(void (**)(id *, uint64_t))(v72 + 8))(v68, v71);
        v57 = (void (*)(char *, uint64_t))v134;
        v17 = v63;
        v61 = *v54;
        if (!*v54)
          return v136;
LABEL_18:
        v87 = v61;
        v88 = v131;
        dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

        v89 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v51);
        v57(v88, v51);
        if (v89 > 0)
        {
          v90 = v133;
          v91 = sub_10000DF3C(v133);
          v92 = sub_100010F98(v132, v90, byte_10067F0C0);
          v93 = (uint64_t)v125;
          ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v89 - 1, v91, v92);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v93, 1, v16) == 1)
          {
            sub_100011088(v93, (uint64_t *)&unk_1007FAB60);
          }
          else
          {
            v94 = v120;
            v95.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v17 + 32))(v120, v93, v16);
            v96 = v118;
            ShelfLayoutContext.shelf.getter(v95);
            v97 = swift_getKeyPath(&unk_100685330);
            v98 = v119;
            v99 = v127;
            ReadOnlyLens.subscript.getter(v97, v127);
            v100 = swift_release(v97);
            (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v96, v99, v100);
            v102 = v128;
            v101 = v129;
            if ((*(unsigned int (**)(id *, uint64_t))(v128 + 88))(v98, v129) == enum case for ShelfBackground.color(_:))
            {
              (*(void (**)(id *, uint64_t))(v102 + 96))(v98, v101);

              v103 = (char *)v98 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
              v104 = type metadata accessor for ShelfBackgroundStyle(0);
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v103, v104);
              v105 = (void *)objc_opt_self(NSCollectionLayoutDimension);
              v106 = objc_msgSend(v105, "fractionalWidthDimension:", 1.0);
              v107 = objc_msgSend(v105, "absoluteDimension:", 2000.0);
              v108 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v106, v107);

              v109 = String._bridgeToObjectiveC()();
              v110 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v108, v109, 5, 0.0, 2000.0);

              objc_msgSend(v110, "setExtendsBoundary:", 0);
              v111 = v110;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v111);
              v113 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v112 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v113 >= v112 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v112 > 1, v113 + 1, 1);
              v114 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v113, v111);
              specialized Array._endMutation()(v114);

              (*(void (**)(char *, uint64_t))(v17 + 8))(v94, v16);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v17 + 8))(v94, v16);
              (*(void (**)(id *, uint64_t))(v102 + 8))(v98, v101);
            }
          }
        }
        return v136;
      }
      v121 = v16;
      v73 = v64;
      (*(void (**)(id *, uint64_t))(v72 + 96))(v68, v71);

      v74 = (char *)v68 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
      v75 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
      v76 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v77 = objc_msgSend(v76, "fractionalWidthDimension:", 1.0);
      v78 = objc_msgSend(v76, "absoluteDimension:", 2000.0);
      v79 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v77, v78);

      v80 = String._bridgeToObjectiveC()();
      v81 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v79, v80, 1, 0.0, -2000.0);

      objc_msgSend(v81, "setExtendsBoundary:", 0);
      v82 = v81;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v82);
      v84 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v83 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v57 = (void (*)(char *, uint64_t))v134;
      if (v84 >= v83 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1, v84 + 1, 1);
      v85 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v84, v82);
      specialized Array._endMutation()(v85);

      v17 = v63;
      v86 = v73;
      v16 = v121;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v86, v121);
    }
    v61 = *v54;
    if (!*v54)
      return v136;
    goto LABEL_18;
  }
  return v136;
}

uint64_t sub_100322CA8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100322CCC(double a1)
{
  uint64_t v1;

  sub_10031D3F8(v1, a1);
}

uint64_t sub_100322CD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100322CF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1003203D0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_100322D00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  unsigned int v54;
  unsigned int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  double *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t ObjectType;
  uint64_t v84;
  char *v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  double *v94;

  v84 = a2;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for Shelf.ContentType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v68 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_10000DF3C((uint64_t *)&unk_100810B10);
  __chkstk_darwin(v82);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (uint64_t *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v9);
  v91 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v11);
  v81 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  v19 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v19);
  v92 = (uint64_t)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for IndexPath(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v72 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v90 = (char *)&v67 - v26;
  v94 = _swiftEmptyArrayStorage;
  v80 = *(_QWORD *)(a1 + 16);
  if (v80)
  {
    v89 = v15;
    v27 = 0;
    v74 = enum case for Shelf.ContentType.todayCard(_:);
    v93 = v18;
    v75 = v22;
    v76 = v21;
    v78 = v4;
    v79 = a1;
    v85 = v7;
    v77 = v3;
    while (1)
    {
      if (v27 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        return;
      }
      v88 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v87 = *(_QWORD *)(v22 + 72);
      v28 = v92;
      (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v22 + 16))(v92, a1 + v88 + v87 * v27, v21, v25);
      v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v73)(v28, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v28, 1, v21) == 1)
        goto LABEL_24;
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 32);
      v30 = v90;
      v29(v90, v92, v21);
      v31 = sub_10000E99C(&qword_100808218, type metadata accessor for TodayDiffablePageViewController, (uint64_t)byte_10067F0C0);
      v32 = v91;
      ShelfBasedCollectionViewController.itemLayoutContext(at:)(v30, ObjectType, v31);
      v33 = type metadata accessor for ItemLayoutContext(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33);
      v86 = v29;
      if (v35 == 1)
      {
        sub_100011088(v91, &qword_1007F4A50);
        v36 = v78;
        v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
        v38 = v18;
        v39 = 1;
      }
      else
      {
        KeyPath = swift_getKeyPath(&unk_100685360);
        v41 = v91;
        v42 = v69;
        ItemLayoutContext.subscript.getter(v69);
        v43 = swift_release(KeyPath);
        (*(void (**)(uint64_t, uint64_t, __n128))(v34 + 8))(v41, v33, v43);
        v44 = swift_getKeyPath(&unk_100685390);
        v45 = v71;
        ReadOnlyLens.subscript.getter(v44, v71);
        v46 = v44;
        v18 = v93;
        v47 = swift_release(v46);
        (*(void (**)(_QWORD *, uint64_t, __n128))(v70 + 8))(v42, v45, v47);
        v36 = v78;
        v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
        v38 = v18;
        v39 = 0;
      }
      v48 = v77;
      v37(v38, v39, 1, v77);
      v49 = (uint64_t)v89;
      (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v89, v74, v48);
      v37((char *)v49, 0, 1, v48);
      v50 = (uint64_t)v85;
      v51 = (uint64_t)&v85[*(int *)(v82 + 48)];
      sub_1000194E4((uint64_t)v18, (uint64_t)v85, (uint64_t *)&unk_1007F53A0);
      sub_1000194E4(v49, v51, (uint64_t *)&unk_1007F53A0);
      v52 = (uint64_t)v18;
      v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (v53(v50, 1, v48) == 1)
        break;
      sub_1000194E4(v50, v81, (uint64_t *)&unk_1007F53A0);
      v55 = v53(v51, 1, v48);
      v21 = v76;
      if (v55 == 1)
      {
        sub_100011088((uint64_t)v89, (uint64_t *)&unk_1007F53A0);
        sub_100011088((uint64_t)v93, (uint64_t *)&unk_1007F53A0);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v81, v48);
        v22 = v75;
LABEL_4:
        sub_100011088(v50, (uint64_t *)&unk_100810B10);
        goto LABEL_5;
      }
      v56 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v68, v51, v48);
      v57 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
      v58 = v81;
      v59 = dispatch thunk of static Equatable.== infix(_:_:)(v81, v56, v48, v57);
      v60 = *(void (**)(char *, uint64_t))(v36 + 8);
      v61 = v56;
      v62 = (uint64_t)v85;
      v60(v61, v48);
      sub_100011088((uint64_t)v89, (uint64_t *)&unk_1007F53A0);
      sub_100011088((uint64_t)v93, (uint64_t *)&unk_1007F53A0);
      v60((char *)v58, v48);
      sub_100011088(v62, (uint64_t *)&unk_1007F53A0);
      v22 = v75;
      if ((v59 & 1) != 0)
        goto LABEL_17;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v22 + 8))(v90, v21);
LABEL_6:
      v18 = v93;
      ++v27;
      a1 = v79;
      if (v80 == v27)
      {
        v73(v92, 1, 1, v21, v25);
        goto LABEL_24;
      }
    }
    sub_100011088(v49, (uint64_t *)&unk_1007F53A0);
    sub_100011088(v52, (uint64_t *)&unk_1007F53A0);
    v54 = v53(v51, 1, v48);
    v22 = v75;
    v21 = v76;
    if (v54 == 1)
    {
      sub_100011088(v50, (uint64_t *)&unk_1007F53A0);
LABEL_17:
      v63 = (void (*)(char *, char *, uint64_t))v86;
      v86(v72, (uint64_t)v90, v21);
      v64 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
      {
        sub_100021D84(0, *((_QWORD *)v64 + 2) + 1, 1);
        v64 = v94;
      }
      v66 = *((_QWORD *)v64 + 2);
      v65 = *((_QWORD *)v64 + 3);
      if (v66 >= v65 >> 1)
      {
        sub_100021D84(v65 > 1, v66 + 1, 1);
        v64 = v94;
      }
      *((_QWORD *)v64 + 2) = v66 + 1;
      v63((char *)v64 + v88 + v66 * v87, v72, v21);
      v94 = v64;
      goto LABEL_6;
    }
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56))(v92, 1, 1, v21, v25);
LABEL_24:
  swift_bridgeObjectRelease(a1);
  sub_100011088(v92, &qword_1007F5520);
}

id sub_10032345C()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  void *v10;
  NSString v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;

  v1 = v0;
  ObjectType = swift_getObjectType();
  TodayDiffablePagePresenter.pageTitle.getter();
  if (v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v0, "setTitle:", v6, v4);

  TodayDiffablePagePresenter.tabTitle.getter();
  if (v7)
  {
    v8 = v7;
    result = objc_msgSend(v1, "tabBarItem");
    if (!result)
      goto LABEL_10;
    v10 = result;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setTitle:", v11, swift_bridgeObjectRelease(v8).n128_f64[0]);

  }
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v12 = result;
    objc_msgSend(result, "bounds");
    v14 = v13;
    v16 = v15;

    v17 = sub_10000E99C(&qword_100808218, type metadata accessor for TodayDiffablePageViewController, (uint64_t)byte_10067F0C0);
    return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v17, v14, v16);
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_1003235B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10031BD28(a1, a2, a3, a4, v4);
}

uint64_t sub_1003235BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10031B640(a1, a2, a3, a4, v4);
}

unint64_t sub_1003235C8()
{
  unint64_t result;

  result = qword_100808248;
  if (!qword_100808248)
  {
    result = swift_getWitnessTable("E2\v", &type metadata for TodayPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_100808248);
  }
  return result;
}

uint64_t sub_10032360C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100323630()
{
  return dispatch thunk of TimedMetricsPagePresenter.update(ignoringCache:)(1);
}

uint64_t sub_100323664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100323674(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

BOOL sub_10032367C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  void *v24;
  char *v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  __n128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  __int128 v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v66 = a2;
  v72 = a1;
  v71 = type metadata accessor for DateComponents(0, a3);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v67 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v58 - v6;
  v8 = type metadata accessor for Calendar.Identifier(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Calendar(0);
  v68 = *(_QWORD *)(v70 - 8);
  v12 = __chkstk_darwin(v70);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v11, enum case for Calendar.Identifier.gregorian(_:), v8, v12);
  Calendar.init(identifier:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15 = sub_10000DF3C(&qword_100801490);
  v16 = type metadata accessor for Calendar.Component(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v63 = v20 + 3 * v18;
  v64 = v15;
  v62 = v19 | 7;
  v21 = swift_allocObject(v15, v63, v19 | 7);
  v60 = xmmword_10066F860;
  *(_OWORD *)(v21 + 16) = xmmword_10066F860;
  v22 = *(void (**)(uint64_t))(v17 + 104);
  v61 = enum case for Calendar.Component.year(_:);
  v22(v21 + v20);
  v59 = enum case for Calendar.Component.month(_:);
  v22(v21 + v20 + v18);
  v65 = 2 * v18;
  v23 = enum case for Calendar.Component.day(_:);
  ((void (*)(uint64_t, _QWORD, uint64_t))v22)(v21 + v20 + 2 * v18, enum case for Calendar.Component.day(_:), v16);
  v24 = sub_100172B10(v21);
  swift_setDeallocating(v21);
  v25 = v14;
  v26 = v7;
  swift_arrayDestroy(v21 + v20, 3, v16);
  swift_deallocClassInstance(v21, 32, 7);
  Calendar.dateComponents(_:from:)(v24, v72);
  v27 = swift_bridgeObjectRelease(v24);
  v28 = DateComponents.year.getter(v27);
  if ((v29 & 1) != 0
    || (v30 = v28, v31 = DateComponents.month.getter(), (v32 & 1) != 0)
    || (v33 = v31, v34 = DateComponents.day.getter(), (v35 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v26, v71);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v68 + 8))(v25, v70);
    return 0;
  }
  v58 = v34;
  v72 = v33;
  v36 = swift_allocObject(v64, v63, v62);
  *(_OWORD *)(v36 + 16) = v60;
  v37 = v36 + v20;
  ((void (*)(uint64_t, _QWORD, uint64_t))v22)(v36 + v20, v61, v16);
  ((void (*)(uint64_t, _QWORD, uint64_t))v22)(v36 + v20 + v18, v59, v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v36 + v20 + v65, v23, v16);
  v38 = sub_100172B10(v36);
  swift_setDeallocating(v36);
  swift_arrayDestroy(v37, 3, v16);
  swift_deallocClassInstance(v36, 32, 7);
  v39 = v67;
  Calendar.dateComponents(_:from:)(v38, v66);
  v40 = swift_bridgeObjectRelease(v38);
  v41 = DateComponents.year.getter(v40);
  if ((v42 & 1) != 0 || (v43 = v41, v44 = DateComponents.month.getter(), (v45 & 1) != 0))
  {
    v56 = *(void (**)(char *, uint64_t))(v69 + 8);
    v57 = v71;
    v56(v39, v71);
    v56(v26, v57);
    goto LABEL_17;
  }
  v46 = v44;
  v47 = DateComponents.day.getter();
  v49 = v48;
  v50 = *(void (**)(char *, uint64_t))(v69 + 8);
  v51 = v39;
  v52 = v71;
  v50(v51, v71);
  v50(v26, v52);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v25, v70);
  if ((v49 & 1) != 0)
    return 0;
  return v30 < v43 || v72 < v46 || v58 < v47;
}

id sub_100323A98()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "prepare");
  return objc_msgSend(v1, "impactOccurred");
}

uint64_t sub_100323AD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100323AF4()
{
  uint64_t v0;

  sub_100320B14(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_100323B08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100323B34(void *a1)
{
  uint64_t v1;

  sub_10031DE94(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100323B3C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10031B944(a1, a2, a3, a4, v4);
}

uint64_t sub_100323B44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10031B340(a1, a2, a3, a4, v4);
}

uint64_t sub_100323B90()
{
  return sub_10000E99C((unint64_t *)&unk_100808270, type metadata accessor for EditorialQuoteCollectionViewCell, (uint64_t)&unk_1006853C0);
}

double sub_100323BC0(uint64_t a1, __n128 a2)
{
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD *, uint64_t, uint64_t);
  char v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  _QWORD *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  __n128 v78;
  int v80;
  _QWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, __n128);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[5];
  _QWORD v98[5];
  _QWORD v99[3];
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;

  v91 = type metadata accessor for EditorialQuoteLayout.Metrics(0, a2);
  v90 = *(_QWORD *)(v91 - 8);
  v3 = __chkstk_darwin(v91);
  v92 = (char *)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditorialQuoteLayout(0, v3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v93 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v95 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for LabelPlaceholderCompatibility(0, v9);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v13 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PageGrid(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (_QWORD *)((char *)v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for EditorialQuote(0, v16);
  v20 = sub_10000E99C(&qword_1007FAB10, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialQuote, (uint64_t)&protocol conformance descriptor for EditorialQuote);
  ItemLayoutContext.typedModel<A>(as:)(&v102, v19, v19, v20);
  v21 = (uint64_t)v102;
  if (!v102)
    return 0.0;
  v86 = v6;
  v87 = v5;
  KeyPath = swift_getKeyPath(&unk_100685410);
  v23 = v21;
  ItemLayoutContext.subscript.getter(v18);
  swift_release(KeyPath);
  v24 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v26 = v25;
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
  v27 = swift_getKeyPath(&unk_100685440);
  ItemLayoutContext.subscript.getter(&v102);
  swift_release(v27);
  v28 = v102;
  LOBYTE(v27) = UITraitCollection.isSizeClassCompact.getter(v29);

  v30 = 4;
  if ((v27 & 1) == 0)
    v30 = 1;
  v94 = v30;
  v96 = v23;
  v83 = EditorialQuote.text.getter();
  v82 = v31;
  v32 = sub_1000466E4();
  v33 = a1;
  if (qword_1007F1A30 != -1)
    swift_once(&qword_1007F1A30, sub_1002A0910);
  v34 = sub_1000117A8(v8, (uint64_t)qword_1008536A8);
  v35 = v95;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
  v36(v11, v34, v8);
  v37 = swift_getKeyPath(&unk_100685470);
  ItemLayoutContext.subscript.getter(&v102);
  swift_release(v37);
  v38 = v102;
  v39 = static UIFont.preferredFont(forUseWith:in:)(v11, v102);
  v40 = swift_unknownObjectRelease(v38);
  v85 = *(void (**)(char *, uint64_t, __n128))(v35 + 8);
  v85(v11, v8, v40);
  v41 = type metadata accessor for Feature(0);
  v103 = v41;
  v84 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v104 = v84;
  v42 = sub_1000117C0(&v102);
  v43 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v44 = *(_QWORD *)(v41 - 8);
  v95 = v33;
  v81[1] = v32;
  v45 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v44 + 104);
  v45(v42, enum case for Feature.measurement_with_labelplaceholder(_:), v41);
  v46 = isFeatureEnabled(_:)(&v102);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v102);
  v47 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v83, v82, v39, v94, 0, 0, 0, 0, v46 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v102, v47);
  v48 = *(uint64_t (**)(char *, uint64_t))(v88 + 8);
  v49 = v89;
  v50 = v48(v13, v89);
  v88 = EditorialQuote.attribution.getter(v50);
  v83 = v51;
  if (qword_1007F1A38 != -1)
    swift_once(&qword_1007F1A38, sub_1002A0934);
  v52 = sub_1000117A8(v8, (uint64_t)qword_1008536C0);
  v36(v11, v52, v8);
  v53 = swift_getKeyPath(&unk_100685470);
  ItemLayoutContext.subscript.getter(v99);
  swift_release(v53);
  v54 = v99[0];
  v55 = static UIFont.preferredFont(forUseWith:in:)(v11, v99[0]);
  v56 = swift_unknownObjectRelease(v54);
  v85(v11, v8, v56);
  v100 = v41;
  v101 = v84;
  v57 = sub_1000117C0(v99);
  v45(v57, v43, v41);
  v58 = isFeatureEnabled(_:)(v99);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v99);
  LOBYTE(v80) = v58 & 1;
  v59 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v88, v83, v55, v94, 0, 0, 0, 0, v80);
  LabelPlaceholderCompatibility.layoutTextView.getter(v99, v59);
  v48(v13, v49);
  if (qword_1007F1A28 != -1)
    swift_once(&qword_1007F1A28, sub_1002A0508);
  v60 = v91;
  v61 = sub_1000117A8(v91, (uint64_t)qword_100853690);
  v62 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v92, v61, v60);
  v63 = v103;
  v64 = v104;
  v65 = sub_100011064(&v102, v103);
  v98[3] = v63;
  v98[4] = *(_QWORD *)(v64 + 8);
  v66 = sub_1000117C0(v98);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v66, v65, v63);
  v67 = v100;
  v68 = v101;
  v69 = sub_100011064(v99, v100);
  v97[3] = v67;
  v97[4] = *(_QWORD *)(v68 + 8);
  v70 = sub_1000117C0(v97);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v70, v69, v67);
  v71 = v93;
  EditorialQuoteLayout.init(metrics:quoteLabel:attributionLabel:)(v62, v98, v97);
  v72 = swift_getKeyPath(&unk_100685470);
  ItemLayoutContext.subscript.getter(v98);
  swift_release(v72);
  v73 = v98[0];
  v74 = sub_10000E99C((unint64_t *)&unk_100808280, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialQuoteLayout, (uint64_t)&protocol conformance descriptor for EditorialQuoteLayout);
  v75 = v87;
  dispatch thunk of Measurable.measurements(fitting:in:)(v73, v87, v74, v24, v26);
  v77 = v76;
  swift_release(v96);
  v78 = swift_unknownObjectRelease(v73);
  (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v71, v75, v78);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v99);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v102);
  return v77;
}

ValueMetadata *type metadata accessor for TodayPageShelfLayoutSpacingProvider()
{
  return &type metadata for TodayPageShelfLayoutSpacingProvider;
}

void sub_10032432C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t KeyPath;
  __n128 v65;
  void (*v66)(char *, uint64_t, __n128);
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  void (*v70)(char *, uint64_t, __n128);
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  void (*v80)(_QWORD);
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  char v90;
  char *v91;
  void (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  __n128 v122;
  uint64_t v123;
  int v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char v128;
  char *v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  void (*v135)(char *, uint64_t);
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  __n128 v138;
  void (*v139)(char *, uint64_t, __n128);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int (*v148)(uint64_t, uint64_t, uint64_t);
  __n128 v149;
  char v150;
  uint64_t v151;
  char *v152;
  char v153;
  char *v154;
  void (*v155)(uint64_t, uint64_t);
  char *v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  char v162;
  uint64_t v163;
  __n128 v164;
  char v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  UIFontTextStyle *v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  NSString *v173;
  char *v174;
  uint64_t v175;
  double v176;
  double *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  __n128 v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __n128 v188;
  uint64_t v189;
  uint64_t (*v190)(char *, uint64_t);
  uint64_t v191;
  char v192;
  __n128 v193;
  uint64_t v194;
  uint64_t (*v195)(char *, uint64_t);
  void *v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  _QWORD *v201;
  _QWORD *v202;
  void (*v203)(char *, uint64_t, uint64_t);
  char *v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  UIFontTextStyle *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  void (*v226)(uint64_t, uint64_t);
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  void (*v231)(char *, _QWORD, uint64_t);
  char *v232;
  unsigned int v233;
  void (*v234)(uint64_t, _QWORD, uint64_t);
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  _QWORD *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void (*v252)(uint64_t, uint64_t, __n128);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  uint64_t v257;
  uint64_t v258;

  v251 = a1;
  v242 = a2;
  v216 = type metadata accessor for PageGrid(0);
  v215 = *(_QWORD *)(v216 - 8);
  v2 = __chkstk_darwin(v216);
  v214 = (char *)&v203 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = type metadata accessor for FontSource(0, v2);
  v218 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v217 = (UIFontTextStyle *)((char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v239 = sub_10000DF3C(&qword_100804DE8);
  __chkstk_darwin(v239);
  v241 = (char *)&v203 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_1007F6330);
  __chkstk_darwin(v6);
  v227 = (uint64_t)&v203 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v247 = (uint64_t)&v203 - v9;
  __chkstk_darwin(v10);
  v240 = (char *)&v203 - v11;
  v223 = sub_10000DF3C((uint64_t *)&unk_100810B10);
  __chkstk_darwin(v223);
  v249 = (uint64_t)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v13);
  v236 = (char *)&v203 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v235 = (char *)&v203 - v16;
  __chkstk_darwin(v17);
  v237 = (char *)&v203 - v18;
  __chkstk_darwin(v19);
  v206 = (char *)&v203 - v20;
  __chkstk_darwin(v21);
  v205 = (char *)&v203 - v22;
  __chkstk_darwin(v23);
  v207 = (uint64_t)&v203 - v24;
  __chkstk_darwin(v25);
  v221 = (char *)&v203 - v26;
  __chkstk_darwin(v27);
  v220 = (char *)&v203 - v28;
  __chkstk_darwin(v29);
  v222 = (uint64_t)&v203 - v30;
  v31 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v31);
  v208 = (uint64_t)&v203 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v229 = (char *)&v203 - v34;
  __chkstk_darwin(v35);
  v230 = (uint64_t)&v203 - v36;
  v37 = type metadata accessor for ShelfLayoutContext(0);
  v38 = *(_QWORD *)(v37 - 8);
  v244 = v37;
  v245 = v38;
  __chkstk_darwin(v37);
  v224 = (char *)&v203 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v248 = (char *)&v203 - v41;
  v42 = type metadata accessor for ShelfBackground(0);
  v250 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v232 = (char *)&v203 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v243 = (char *)&v203 - v45;
  v46 = type metadata accessor for Shelf.ContentType(0);
  v47 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v212 = (char *)&v203 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v213 = (char *)&v203 - v50;
  __chkstk_darwin(v51);
  v53 = (char *)&v203 - v52;
  __chkstk_darwin(v54);
  v56 = (char *)&v203 - v55;
  v57 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v58 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v211 = (char *)&v203 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __chkstk_darwin(v60);
  v63 = (char *)&v203 - v62;
  ShelfLayoutContext.shelf.getter(v61);
  KeyPath = swift_getKeyPath(&unk_100685528);
  ReadOnlyLens.subscript.getter(KeyPath, v57);
  v65 = swift_release(KeyPath);
  v246 = v58;
  v66 = *(void (**)(char *, uint64_t, __n128))(v58 + 8);
  v66(v63, v57, v65);
  v231 = *(void (**)(char *, _QWORD, uint64_t))(v47 + 104);
  v231(v53, enum case for Shelf.ContentType.todayCard(_:), v46);
  v67 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v253, v46, v67);
  v210 = v67;
  dispatch thunk of RawRepresentable.rawValue.getter(&v257, v46, v67);
  v68 = v258;
  swift_bridgeObjectRelease(v254);
  v69 = swift_bridgeObjectRelease(v68);
  v228 = v47;
  v70 = *(void (**)(char *, uint64_t, __n128))(v47 + 8);
  v70(v53, v46, v69);
  v204 = v56;
  v71 = v46;
  v226 = (void (*)(uint64_t, uint64_t))v70;
  v72.n128_f64[0] = ((double (*)(char *, uint64_t))v70)(v56, v46);
  v73 = v251;
  ShelfLayoutContext.shelf.getter(v72);
  v74 = swift_getKeyPath(&unk_100685558);
  v75 = v243;
  ReadOnlyLens.subscript.getter(v74, v57);
  v76 = v74;
  v77 = v245;
  v78 = swift_release(v76);
  v238 = v63;
  v252 = (void (*)(uint64_t, uint64_t, __n128))v66;
  v66(v63, v57, v78);
  v79 = v250;
  v80 = *(void (**)(_QWORD))(v250 + 104);
  v81 = v232;
  v233 = enum case for ShelfBackground.none(_:);
  v234 = (void (*)(uint64_t, _QWORD, uint64_t))v80;
  v80(v232);
  v82 = sub_10000E99C((unint64_t *)&qword_100804DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
  v83 = v75;
  v84 = v75;
  v85 = v81;
  v209 = v82;
  dispatch thunk of static Equatable.== infix(_:_:)(v83, v81, v42, v82);
  v86 = *(void (**)(char *, uint64_t))(v79 + 8);
  v86(v85, v42);
  v87 = v42;
  v232 = (char *)v86;
  v88.n128_f64[0] = ((double (*)(char *, uint64_t))v86)(v84, v42);
  v89 = v73;
  v90 = ShelfLayoutContext.isFirstShelf.getter(v88);
  v91 = v248;
  LOBYTE(v79) = v90;
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  v93 = v89;
  v94 = v244;
  v92(v248, v93, v244);
  v225 = v71;
  if ((v79 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v91, v94);
    LODWORD(v249) = 1;
    v97 = (uint64_t)v241;
    v98 = (uint64_t)v240;
    v99 = v247;
    v100 = (uint64_t)v237;
    goto LABEL_17;
  }
  v203 = v92;
  v101 = (uint64_t)v220;
  v102 = (uint64_t)v221;
  ShelfLayoutContext.surroundingShelves.getter(v220, v221, v95);
  sub_100011088(v102, &qword_1007F4A68);
  v103 = v222;
  sub_10002955C(v101, v222);
  v221 = *(char **)(v246 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v221)(v103, 1, v57) == 1)
  {
    sub_100011088(v103, &qword_1007F4A68);
    v104 = v228;
    v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v228 + 56);
    v106 = v230;
    v107 = v230;
    v108 = 1;
  }
  else
  {
    v109 = swift_getKeyPath(&unk_100685528);
    v106 = v230;
    ReadOnlyLens.subscript.getter(v109, v57);
    v110 = swift_release(v109);
    v252(v103, v57, v110);
    v104 = v228;
    v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v228 + 56);
    v107 = v106;
    v108 = 0;
  }
  v111 = v71;
  v105(v107, v108, 1, v71);
  v112 = v249;
  v113 = (uint64_t)v229;
  v231(v229, enum case for Shelf.ContentType.unifiedMessage(_:), v71);
  v105(v113, 0, 1, v71);
  v114 = v112 + *(int *)(v223 + 48);
  sub_1000194E4(v106, v249, (uint64_t *)&unk_1007F53A0);
  v115 = v249;
  sub_1000194E4(v113, v114, (uint64_t *)&unk_1007F53A0);
  v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
  v117 = v116(v115, 1, v71);
  v99 = v247;
  if (v117 == 1)
  {
    sub_100011088(v113, (uint64_t *)&unk_1007F53A0);
    v115 = v249;
    sub_100011088(v106, (uint64_t *)&unk_1007F53A0);
    v118 = v116(v114, 1, v111);
    v97 = (uint64_t)v241;
    v119 = v244;
    v120 = (void (*)(char *, char *, uint64_t))v203;
    if (v118 == 1)
    {
      sub_100011088(v115, (uint64_t *)&unk_1007F53A0);
      v121 = v224;
      v120(v224, v248, v119);
      v100 = (uint64_t)v237;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  v123 = v208;
  sub_1000194E4(v115, v208, (uint64_t *)&unk_1007F53A0);
  v124 = v116(v114, 1, v111);
  v119 = v244;
  if (v124 == 1)
  {
    sub_100011088((uint64_t)v229, (uint64_t *)&unk_1007F53A0);
    sub_100011088(v230, (uint64_t *)&unk_1007F53A0);
    v226(v123, v111);
    v97 = (uint64_t)v241;
    v120 = (void (*)(char *, char *, uint64_t))v203;
LABEL_11:
    sub_100011088(v115, (uint64_t *)&unk_100810B10);
    v121 = v224;
    v125 = v248;
    v120(v224, v248, v119);
    v100 = (uint64_t)v237;
    goto LABEL_15;
  }
  v126 = v204;
  (*(void (**)(char *, uint64_t, uint64_t))(v228 + 32))(v204, v114, v111);
  v127 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v128 = dispatch thunk of static Equatable.== infix(_:_:)(v123, v126, v111, v127);
  v129 = v126;
  v130 = v226;
  v226((uint64_t)v129, v111);
  sub_100011088((uint64_t)v229, (uint64_t *)&unk_1007F53A0);
  sub_100011088(v230, (uint64_t *)&unk_1007F53A0);
  v130(v123, v111);
  sub_100011088(v115, (uint64_t *)&unk_1007F53A0);
  v121 = v224;
  v125 = v248;
  v203(v224, (uint64_t)v248, v119);
  v97 = (uint64_t)v241;
  v100 = (uint64_t)v237;
  if ((v128 & 1) != 0)
  {
LABEL_13:
    v131 = (uint64_t)v205;
    v132 = (uint64_t)v206;
    ShelfLayoutContext.surroundingShelves.getter(v205, v206, v122);
    sub_100011088(v132, &qword_1007F4A68);
    v133 = v207;
    sub_10002955C(v131, v207);
    v134 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v221)(v133, 1, v57);
    v98 = (uint64_t)v240;
    if (v134 == 1)
    {
      v135 = *(void (**)(char *, uint64_t))(v245 + 8);
      v135(v121, v119);
      v135(v248, v119);
      sub_100011088(v133, &qword_1007F4A68);
      LODWORD(v249) = 0;
    }
    else
    {
      v137 = swift_getKeyPath(&unk_1006855B8);
      ReadOnlyLens.subscript.getter(v137, v57);
      v138 = swift_release(v137);
      v139 = *(void (**)(char *, uint64_t, __n128))(v245 + 8);
      v139(v121, v119, v138);
      ((void (*)(char *, uint64_t))v139)(v248, v119);
      LODWORD(v249) = v253;
      ((void (*)(uint64_t, uint64_t))v252)(v133, v57);
    }
    goto LABEL_17;
  }
LABEL_15:
  v136 = *(void (**)(char *, uint64_t))(v245 + 8);
  v136(v121, v119);
  v136(v125, v119);
  LODWORD(v249) = 0;
  v98 = (uint64_t)v240;
LABEL_17:
  v140 = (uint64_t)v235;
  v141 = (uint64_t)v236;
  ShelfLayoutContext.surroundingShelves.getter(v235, v236, v96);
  sub_100011088(v141, &qword_1007F4A68);
  sub_10002955C(v140, v100);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48))(v100, 1, v57) == 1)
  {
    sub_100011088(v100, &qword_1007F4A68);
    v142 = v250;
    v143 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56);
    v143(v98, 1, 1, v87);
  }
  else
  {
    v144 = swift_getKeyPath(&unk_100685558);
    ReadOnlyLens.subscript.getter(v144, v57);
    v145 = swift_release(v144);
    v252(v100, v57, v145);
    v142 = v250;
    v143 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56);
    v143(v98, 0, 1, v87);
  }
  v234(v99, v233, v87);
  v143(v99, 0, 1, v87);
  v146 = v97 + *(int *)(v239 + 48);
  sub_1000194E4(v98, v97, &qword_1007F6330);
  sub_1000194E4(v99, v146, &qword_1007F6330);
  v147 = v99;
  v148 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
  if (v148(v97, 1, v87) == 1)
  {
    sub_100011088(v147, &qword_1007F6330);
    sub_100011088(v98, &qword_1007F6330);
    if (v148(v146, 1, v87) == 1)
    {
      sub_100011088(v97, &qword_1007F6330);
      v150 = 0;
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  v151 = v227;
  sub_1000194E4(v97, v227, &qword_1007F6330);
  if (v148(v146, 1, v87) == 1)
  {
    sub_100011088(v247, &qword_1007F6330);
    sub_100011088(v98, &qword_1007F6330);
    ((void (*)(uint64_t, uint64_t))v232)(v151, v87);
LABEL_25:
    sub_100011088(v97, &qword_100804DE8);
    v150 = 1;
    goto LABEL_27;
  }
  v152 = v243;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v243, v146, v87);
  v153 = dispatch thunk of static Equatable.== infix(_:_:)(v151, v152, v87, v209);
  v154 = v152;
  v155 = (void (*)(uint64_t, uint64_t))v232;
  ((void (*)(char *, uint64_t))v232)(v154, v87);
  sub_100011088(v247, &qword_1007F6330);
  sub_100011088(v98, &qword_1007F6330);
  v155(v151, v87);
  sub_100011088(v97, &qword_1007F6330);
  v150 = v153 ^ 1;
LABEL_27:
  v156 = v238;
  ShelfLayoutContext.shelf.getter(v149);
  v157 = swift_getKeyPath(&unk_100685588);
  ReadOnlyLens.subscript.getter(v157, v57);
  v158 = swift_release(v157);
  v252((uint64_t)v156, v57, v158);
  v159 = v253;
  swift_release(v253);
  v161 = (void *)ShelfLayoutContext.traitCollection.getter(v160);
  v162 = UITraitCollection.isSizeClassRegular.getter(v161);

  v165 = v249;
  if (v159)
    v165 = 0;
  if ((v165 & 1) != 0)
  {
    v166 = type metadata accessor for StaticDimension(0);
    v167 = v242;
    v242[3] = v166;
    v167[4] = &protocol witness table for StaticDimension;
    v168 = sub_1000117C0(v167);
    if ((v162 & 1) != 0)
    {
      v169 = v217;
      *v217 = UIFontTextStyleBody;
      v170 = v218;
      v171 = v219;
      (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v218 + 104))(v169, enum case for FontSource.textStyle(_:), v219);
      v255 = v171;
      v256 = &protocol witness table for FontSource;
      v172 = sub_1000117C0(&v253);
      (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v170 + 16))(v172, v169, v171);
      v173 = UIFontTextStyleBody;
      StaticDimension.init(_:scaledLike:)(&v253, 38.0);
      (*(void (**)(UIFontTextStyle *, uint64_t))(v170 + 8))(v169, v171);
    }
    else
    {
      if (qword_1007F2A18 != -1)
        swift_once(&qword_1007F2A18, sub_10042D128);
      v178 = sub_1000117A8(v166, (uint64_t)qword_100856198);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v168, v178, v166);
    }
    return;
  }
  if ((v150 & (v159 == 0)) == 1)
  {
    v174 = v214;
    v175 = ShelfLayoutContext.contentPageGrid.getter(v163);
    v176 = PageGrid.interRowSpace.getter(v175);
    (*(void (**)(char *, uint64_t))(v215 + 8))(v174, v216);
    v177 = (double *)v242;
    v242[3] = &type metadata for CGFloat;
    *((_QWORD *)v177 + 4) = &protocol witness table for CGFloat;
    *v177 = v176;
    return;
  }
  v179 = v211;
  ShelfLayoutContext.shelf.getter(v164);
  v180 = swift_getKeyPath(&unk_100685528);
  v181 = v213;
  ReadOnlyLens.subscript.getter(v180, v57);
  v182 = swift_release(v180);
  v252((uint64_t)v179, v57, v182);
  v183 = v212;
  v184 = v225;
  v231(v212, enum case for Shelf.ContentType.unifiedMessage(_:), v225);
  v185 = v210;
  dispatch thunk of RawRepresentable.rawValue.getter(&v253, v184, v210);
  dispatch thunk of RawRepresentable.rawValue.getter(&v257, v184, v185);
  v186 = v254;
  v187 = v258;
  if (v253 == v257 && v254 == v258)
  {
    v188 = swift_bridgeObjectRelease_n(v254, 2);
    v189 = v225;
    v190 = (uint64_t (*)(char *, uint64_t))v226;
    ((void (*)(char *, uint64_t, __n128))v226)(v183, v225, v188);
    v191 = v190(v181, v189);
  }
  else
  {
    v192 = _stringCompareWithSmolCheck(_:_:expecting:)(v253, v254, v257, v258, 0);
    swift_bridgeObjectRelease(v186);
    v193 = swift_bridgeObjectRelease(v187);
    v194 = v225;
    v195 = (uint64_t (*)(char *, uint64_t))v226;
    ((void (*)(char *, uint64_t, __n128))v226)(v183, v225, v193);
    v191 = v195(v181, v194);
    if ((v192 & 1) == 0)
    {
LABEL_45:
      v202 = v242;
      v242[3] = &type metadata for Double;
      v202[4] = &protocol witness table for Double;
      *v202 = 0;
      return;
    }
  }
  v196 = (void *)ShelfLayoutContext.traitCollection.getter(v191);
  v197 = UITraitCollection.isSizeClassCompact.getter(v196);

  if ((v197 & 1) == 0)
    goto LABEL_45;
  if (qword_1007F2A20 != -1)
    swift_once(&qword_1007F2A20, sub_10042D138);
  v198 = type metadata accessor for StaticDimension(0);
  v199 = sub_1000117A8(v198, (uint64_t)qword_1008561B0);
  v200 = v242;
  v242[3] = v198;
  v200[4] = &protocol witness table for StaticDimension;
  v201 = sub_1000117C0(v200);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v201, v199, v198);
}

uint64_t sub_1003256D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t KeyPath;
  __n128 v48;
  void (*v49)(char *, uint64_t, __n128);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, __n128);
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  void (*v60)(char *, uint64_t, __n128);
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __n128 v68;
  void (*v69)(_QWORD);
  char *v70;
  uint64_t v71;
  double (*v72)(char *, void (*)(char *, uint64_t, __n128));
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  char v78;
  uint64_t v79;
  char *v80;
  __n128 v81;
  char *v82;
  char v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __n128 v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char v96;
  __n128 v97;
  uint64_t v98;
  uint64_t (*v99)(char *, uint64_t);
  uint64_t v100;
  UIFontTextStyle *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  NSString *v107;
  uint64_t result;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  char *v112;
  double v113;
  double *v114;
  char *v115;
  uint64_t v116;
  double v117;
  double *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  char *v131;
  char *v132;
  UIFontTextStyle *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  void (*v139)(char *, uint64_t);
  uint64_t v140;
  void (*v141)(char *, _QWORD, uint64_t);
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  _QWORD *v148;
  char *v149;
  char *v150;
  _QWORD *v151;
  void (*v152)(char *, uint64_t, __n128);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;

  v151 = a2;
  v126 = type metadata accessor for PageGrid(0);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v124 = (char *)&v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for FloatingPointRoundingRule(0);
  v128 = *(_QWORD *)(v129 - 8);
  v4 = __chkstk_darwin(v129);
  v127 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for FontSource(0, v4);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v133 = (UIFontTextStyle *)((char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v152 = (void (*)(char *, uint64_t, __n128))type metadata accessor for ShelfBackground(0);
  v148 = (_QWORD *)*((_QWORD *)v152 - 1);
  __chkstk_darwin(v152);
  v131 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v132 = (char *)&v123 - v9;
  __chkstk_darwin(v10);
  v144 = (char *)&v123 - v11;
  __chkstk_darwin(v12);
  v147 = (char *)&v123 - v13;
  v14 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v14);
  v143 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v142 = (char *)&v123 - v17;
  __chkstk_darwin(v18);
  v146 = (uint64_t)&v123 - v19;
  __chkstk_darwin(v20);
  v137 = (char *)&v123 - v21;
  __chkstk_darwin(v22);
  v136 = (char *)&v123 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v123 - v25;
  v27 = type metadata accessor for Shelf.ContentType(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v149 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v150 = (char *)&v123 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v123 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v123 - v36;
  v38 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v145 = (char *)&v123 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v138 = (char *)&v123 - v42;
  v44 = __chkstk_darwin(v43);
  v46 = (char *)&v123 - v45;
  v154 = a1;
  ShelfLayoutContext.shelf.getter(v44);
  KeyPath = swift_getKeyPath(&unk_100685528);
  ReadOnlyLens.subscript.getter(KeyPath, v38);
  v48 = swift_release(KeyPath);
  v49 = *(void (**)(char *, uint64_t, __n128))(v39 + 8);
  v49(v46, v38, v48);
  v141 = *(void (**)(char *, _QWORD, uint64_t))(v28 + 104);
  v141(v34, enum case for Shelf.ContentType.todayCard(_:), v27);
  v50 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v155, v27, v50);
  v153 = v27;
  v140 = v50;
  dispatch thunk of RawRepresentable.rawValue.getter(&v159, v27, v50);
  v51 = v156;
  v52 = v160;
  if (v155 == v159 && v156 == v160)
  {
    v130 = 1;
    v52 = v156;
  }
  else
  {
    v130 = _stringCompareWithSmolCheck(_:_:expecting:)(v155, v156, v159, v160, 0);
  }
  swift_bridgeObjectRelease(v51);
  v53 = swift_bridgeObjectRelease(v52);
  v54 = *(void (**)(char *, uint64_t, __n128))(v28 + 8);
  v55 = v153;
  v54(v34, v153, v53);
  v139 = (void (*)(char *, uint64_t))v54;
  v56.n128_f64[0] = ((double (*)(char *, uint64_t))v54)(v37, v55);
  v57 = (uint64_t)v136;
  v58 = (uint64_t)v137;
  ShelfLayoutContext.surroundingShelves.getter(v136, v137, v56);
  sub_100011088(v57, &qword_1007F4A68);
  sub_10002955C(v58, (uint64_t)v26);
  v137 = *(char **)(v39 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v137)(v26, 1, v38) == 1)
  {
    sub_100011088((uint64_t)v26, &qword_1007F4A68);
    LODWORD(v136) = 0;
    v60 = v152;
    v62 = v147;
    v61 = v148;
  }
  else
  {
    v63 = swift_getKeyPath(&unk_100685588);
    ReadOnlyLens.subscript.getter(v63, v38);
    v64 = swift_release(v63);
    v65 = v155;
    v49(v26, v38, v64);
    v60 = v152;
    v62 = v147;
    if (v65)
    {
      v59 = swift_release(v65);
      LODWORD(v136) = 1;
    }
    else
    {
      LODWORD(v136) = 0;
    }
    v61 = v148;
  }
  v66 = v138;
  ShelfLayoutContext.shelf.getter(v59);
  v67 = swift_getKeyPath(&unk_100685558);
  ReadOnlyLens.subscript.getter(v67, v38);
  v68 = swift_release(v67);
  v49(v66, v38, v68);
  v69 = (void (*)(_QWORD))v61[13];
  v152 = v49;
  v70 = v144;
  LODWORD(v147) = enum case for ShelfBackground.none(_:);
  v148 = v69;
  v69(v144);
  v71 = sub_10000E99C((unint64_t *)&qword_100804DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
  LODWORD(v138) = dispatch thunk of static Equatable.== infix(_:_:)(v62, v70, v60, v71);
  v72 = (double (*)(char *, void (*)(char *, uint64_t, __n128)))v61[1];
  v72(v70, v60);
  v73.n128_f64[0] = v72(v62, v60);
  v74 = (uint64_t)v142;
  v75 = (uint64_t)v143;
  ShelfLayoutContext.surroundingShelves.getter(v142, v143, v73);
  sub_100011088(v74, &qword_1007F4A68);
  v76 = v146;
  sub_10002955C(v75, v146);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v137)(v76, 1, v38) == 1)
  {
    sub_100011088(v76, &qword_1007F4A68);
    v78 = 0;
  }
  else
  {
    v79 = swift_getKeyPath(&unk_100685558);
    v80 = v131;
    ReadOnlyLens.subscript.getter(v79, v38);
    v81 = swift_release(v79);
    v152((char *)v76, v38, v81);
    v82 = v132;
    ((void (*)(char *, char *, void (*)(char *, uint64_t, __n128)))v61[4])(v132, v80, v60);
    ((void (*)(char *, _QWORD, void (*)(char *, uint64_t, __n128)))v148)(v62, v147, v60);
    v83 = dispatch thunk of static Equatable.== infix(_:_:)(v82, v62, v60, v71);
    v72(v62, v60);
    v72(v82, v60);
    v78 = v83 ^ 1;
  }
  v84 = v150;
  v85 = v145;
  ShelfLayoutContext.shelf.getter(v77);
  v86 = swift_getKeyPath(&unk_100685528);
  ReadOnlyLens.subscript.getter(v86, v38);
  v87 = swift_release(v86);
  v152(v85, v38, v87);
  v88 = v149;
  v89 = v153;
  v141(v149, enum case for Shelf.ContentType.unifiedMessage(_:), v153);
  v90 = v140;
  dispatch thunk of RawRepresentable.rawValue.getter(&v155, v89, v140);
  dispatch thunk of RawRepresentable.rawValue.getter(&v159, v89, v90);
  v91 = v156;
  v92 = v160;
  if (v155 == v159 && v156 == v160)
  {
    v93 = swift_bridgeObjectRelease_n(v156, 2);
    v94 = v153;
    v95 = v139;
    ((void (*)(char *, uint64_t, __n128))v139)(v88, v153, v93);
    v95(v84, v94);
LABEL_18:
    v101 = v133;
    *v133 = UIFontTextStyleBody;
    v102 = v134;
    v103 = v135;
    (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v134 + 104))(v101, enum case for FontSource.textStyle(_:), v135);
    v104 = type metadata accessor for StaticDimension(0);
    v105 = v151;
    v151[3] = v104;
    v105[4] = &protocol witness table for StaticDimension;
    sub_1000117C0(v105);
    v157 = v103;
    v158 = &protocol witness table for FontSource;
    v106 = sub_1000117C0(&v155);
    (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v102 + 16))(v106, v101, v103);
    v107 = UIFontTextStyleBody;
    StaticDimension.init(_:scaledLike:)(&v155, 26.0);
    return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v102 + 8))(v101, v103);
  }
  v96 = _stringCompareWithSmolCheck(_:_:expecting:)(v155, v156, v159, v160, 0);
  swift_bridgeObjectRelease(v91);
  v97 = swift_bridgeObjectRelease(v92);
  v98 = v153;
  v99 = (uint64_t (*)(char *, uint64_t))v139;
  ((void (*)(char *, uint64_t, __n128))v139)(v88, v153, v97);
  v100 = v99(v84, v98);
  if ((v96 & 1) != 0)
    goto LABEL_18;
  if ((v130 & 1) != 0)
  {
    if (v78 & 1 | ((v138 & 1) == 0))
    {
      if (qword_1007F2A08 != -1)
        swift_once(&qword_1007F2A08, sub_10042D104);
      v109 = type metadata accessor for StaticDimension(0);
      v110 = sub_1000117A8(v109, (uint64_t)qword_100856168);
      v111 = (void *)ShelfLayoutContext.traitCollection.getter(v110);
      v112 = v127;
      static Dimensions.defaultRoundingRule.getter(v111);
      v113 = StaticDimension.value(compatibleWith:rounded:)(v111, v112);

      result = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v112, v129);
      v114 = (double *)v151;
      v151[3] = &type metadata for CGFloat;
      *((_QWORD *)v114 + 4) = &protocol witness table for CGFloat;
      *v114 = v113 + v113;
      return result;
    }
    if ((_DWORD)v136)
    {
      v115 = v124;
      v116 = ShelfLayoutContext.contentPageGrid.getter(v100);
      v117 = PageGrid.interRowSpace.getter(v116);
      result = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v115, v126);
      v118 = (double *)v151;
      v151[3] = &type metadata for CGFloat;
      *((_QWORD *)v118 + 4) = &protocol witness table for CGFloat;
      *v118 = v117;
      return result;
    }
  }
  if (qword_1007F2A08 != -1)
    swift_once(&qword_1007F2A08, sub_10042D104);
  v119 = type metadata accessor for StaticDimension(0);
  v120 = sub_1000117A8(v119, (uint64_t)qword_100856168);
  v121 = v151;
  v151[3] = v119;
  v121[4] = &protocol witness table for StaticDimension;
  v122 = sub_1000117C0(v121);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v122, v120, v119);
}

uint64_t sub_100326260@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHidden.getter();
  *a1 = result & 1;
  return result;
}

void sub_10032628C(uint64_t a1)
{
  void *v1;
  void *v2;
  NSString *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  unint64_t v19;
  NSDictionary v20;
  NSString *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  NSDictionary v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  __int128 v34;
  __int128 v35;

  v2 = v1;
  if (a1 >= 1)
  {
    objc_msgSend(v2, "setLineSpacing:", a1);
    v4 = NSBaselineOffsetAttributeName;
    v5 = objc_msgSend(v2, "font");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "lineHeight");
      v8 = v7;

      v9 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", (double)a1 - v8);
      v10 = sub_10012F63C();
      *((_QWORD *)&v35 + 1) = v10;
      *(_QWORD *)&v34 = v9;
      v11 = objc_msgSend(v2, "_defaultAttributes");
      if (v11)
      {
        v12 = v11;
        type metadata accessor for Key(0);
        v14 = v13;
        v15 = sub_100140B68();
        v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, v14, (char *)&type metadata for Any + 8, v15);

        v33 = v16;
        if (v10)
        {
          sub_10003B8E8(&v34, v32);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
          v31 = v16;
          sub_10010B604(v32, v4, isUniquelyReferenced_nonNull_native);
          v18 = v16;
          v33 = v16;

          v19 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
          if (v16)
          {
LABEL_6:
            v20.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
            v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
LABEL_12:
            objc_msgSend(v2, "_setDefaultAttributes:", v20.super.isa, *(double *)&v19, v31);

            return;
          }
        }
        else
        {
          sub_1000131E0((uint64_t)&v34);
          sub_100326584((uint64_t)v4, v32);

          sub_1000131E0((uint64_t)v32);
          v18 = v33;
          if (v33)
            goto LABEL_6;
        }
        v20.super.isa = 0;
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v1, "setLineSpacing:", 0);
  v34 = 0u;
  v35 = 0u;
  v21 = NSBaselineOffsetAttributeName;
  v22 = objc_msgSend(v1, "_defaultAttributes");
  if (!v22)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v23 = v22;
  type metadata accessor for Key(0);
  v25 = v24;
  v26 = sub_100140B68();
  v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v23, v25, (char *)&type metadata for Any + 8, v26);

  v33 = v27;
  sub_1000131E0((uint64_t)&v34);
  sub_100326584((uint64_t)v21, v32);

  sub_1000131E0((uint64_t)v32);
  v29 = v33;
  if (v33)
  {
    v30.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30.super.isa = 0;
  }
  objc_msgSend(v2, "_setDefaultAttributes:", v30.super.isa, v28);

}

double sub_100326584@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10036C10C(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10010CDC8();
      v10 = v13;
    }

    sub_10003B8E8((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7), a2);
    sub_100326824(v7, v10);
    v11 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_100326668(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10036C324(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10010E980();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_100326D68(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

double sub_100326734@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10036C324(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10010EB30();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_10003B8E8((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_100326F3C(v9, v12);
    v13 = *v4;
    *v4 = v12;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_100326824(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;
        Hasher.init(_seed:)(v30, v10);
        v15 = v11;
        String.hash(into:)(v30, v12, v14);
        v16 = Hasher._finalize()();

        result = swift_bridgeObjectRelease(v14);
        v17 = v16 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v17 < v8)
            goto LABEL_5;
        }
        else if (v17 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(a2 + 48);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || v19 >= v20 + 1)
            *v19 = *v20;
          v21 = *(_QWORD *)(a2 + 56);
          v22 = (_OWORD *)(v21 + 32 * v3);
          v23 = (_OWORD *)(v21 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 2))
          {
            v9 = v23[1];
            *v22 = *v23;
            v22[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100326A18(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100326BAC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ImpressionMetrics(0) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100326D68(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100326F3C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100327110(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v11);
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = (_OWORD *)(v16 + 32 * v3);
            v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
            {
              v9 = v18[1];
              *v17 = *v18;
              v17[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1003272A4(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(char *, uint64_t);
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(_QWORD *, char *, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *);
  uint64_t v34;
  _BYTE v35[32];
  uint64_t v36;
  _QWORD v37[5];
  _QWORD v38[5];
  _QWORD v39[3];
  void *v40;
  void *v41;
  _QWORD v42[3];
  uint64_t v43;
  void *v44;
  _QWORD v45[3];
  uint64_t v46;
  void *v47;
  _QWORD v48[3];
  uint64_t v49;
  void *v50;
  _QWORD v51[3];
  uint64_t v52;
  void *v53;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PrivacyHeaderLayout.Metrics(0, v3);
  sub_100045464(v6, qword_100853F18);
  v34 = sub_1000117A8(v6, (uint64_t)qword_100853F18);
  if (qword_1007F2518 != -1)
    swift_once(&qword_1007F2518, sub_10041588C);
  v7 = type metadata accessor for FontUseCase(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_100855430);
  v33 = *(void (**)(char *))(*(_QWORD *)(v7 - 8) + 16);
  v9 = v8;
  v33(v5);
  v10 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  HIDWORD(v27) = enum case for FontSource.useCase(_:);
  v32(v5, enum case for FontSource.useCase(_:), v1);
  v52 = type metadata accessor for StaticDimension(0);
  v53 = &protocol witness table for StaticDimension;
  v11 = v52;
  v28 = v52;
  sub_1000117C0(v51);
  v49 = v1;
  v50 = &protocol witness table for FontSource;
  v12 = sub_1000117C0(v48);
  v30 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v30(v12, v5, v1);
  StaticDimension.init(_:scaledLike:)(v48, 18.0);
  v13 = (void (*)(char *, uint64_t))v2[1];
  v13(v5, v1);
  v29 = v13;
  v14 = v9;
  v31 = v9;
  v15 = v9;
  v16 = (void (*)(char *, uint64_t, uint64_t))v33;
  ((void (*)(char *, uint64_t, uint64_t))v33)(v5, v15, v7);
  v17 = v10;
  v18 = v32;
  v32(v5, v17, v1);
  v49 = v11;
  v50 = &protocol witness table for StaticDimension;
  sub_1000117C0(v48);
  v46 = v1;
  v47 = &protocol witness table for FontSource;
  v19 = sub_1000117C0(v45);
  v20 = v30;
  v30(v19, v5, v1);
  StaticDimension.init(_:scaledLike:)(v45, 20.0);
  v13(v5, v1);
  v16(v5, v14, v7);
  v21 = HIDWORD(v27);
  v18(v5, HIDWORD(v27), v1);
  v22 = v28;
  v46 = v28;
  v47 = &protocol witness table for StaticDimension;
  sub_1000117C0(v45);
  v43 = v1;
  v44 = &protocol witness table for FontSource;
  v23 = sub_1000117C0(v42);
  v20(v23, v5, v1);
  StaticDimension.init(_:scaledLike:)(v42, 35.0);
  v24 = v29;
  v29(v5, v1);
  v16(v5, v31, v7);
  v18(v5, v21, v1);
  v43 = v22;
  v44 = &protocol witness table for StaticDimension;
  sub_1000117C0(v42);
  v40 = (void *)v1;
  v41 = &protocol witness table for FontSource;
  v25 = sub_1000117C0(v39);
  v20(v25, v5, v1);
  StaticDimension.init(_:scaledLike:)(v39, 20.0);
  v24(v5, v1);
  v40 = &type metadata for Double;
  v41 = &protocol witness table for Double;
  v38[4] = &protocol witness table for Double;
  v39[0] = 0;
  v38[3] = &type metadata for Double;
  v37[4] = &protocol witness table for Double;
  v38[0] = 0;
  v37[3] = &type metadata for Double;
  v37[0] = 0;
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  return PrivacyHeaderLayout.Metrics.init(bodyTopSpace:bodyBottomSpace:supplementaryItemsTopSpace:supplementaryItemsPadding:supplementaryItemsBottomSpace:actionButtonLeadingMargin:bodyOnlyBottomMargin:maxTextWidth:)(v51, v48, v45, v42, v39, v38, v37, v35);
}

id sub_100327684()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  char v20[24];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007FC098);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000DF3C(&qword_1007FC090);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyText];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyText], v20, 0, 0);
  sub_1000194E4(v9, (uint64_t)v4, &qword_1007FC098);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100011088((uint64_t)v4, &qword_1007FC098);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyLabel], "setAttributedText:", 0);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    ObjectGraphPair.value.getter(&v19, v5);
    v11 = v19;
    v12 = ObjectGraphPair.objectGraph.getter(v5);
    v13 = LinkableText.linkedSubstrings.getter();
    sub_100197870(v13, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1000CAE14);
    v15 = v14;
    v16 = swift_bridgeObjectRelease(v13);
    v17 = LinkableText.styledText.getter(v16);
    sub_10005A32C(v17, 0, v15);
    swift_release(v11);
    swift_release(v12);
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v1, "setNeedsLayout", swift_release(v17).n128_f64[0]);
    return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id sub_100327898()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  void *v47;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  __chkstk_darwin(v2);
  v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1007F4BB8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItems];
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v39 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemReusePool];
    v11 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels];
    v12 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v38 = v13;
    v36 = enum case for DirectionalTextAlignment.leading(_:);
    v34 = v9;
    v14 = swift_bridgeObjectRetain(v9);
    v40 = v5;
    v41 = v1;
    v35 = v4;
    do
    {
      v45 = v10;
      v37(v8, v12, v4, v14);
      swift_beginAccess(v39, v46, 33, 0);
      v15 = sub_10000DF3C(&qword_1008082F8);
      ReusePool.dequeue(or:)(&v47, sub_100327BE0, 0, v15);
      swift_endAccess(v46);
      v16 = v47;
      v17 = v42;
      (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, v36, v44);
      v18 = v16;
      dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v17);

      v19 = objc_msgSend(v1, "contentView");
      objc_msgSend(v19, "addSubview:", v18);

      ObjectGraphPair.value.getter(v46, v4);
      v20 = v46[0];
      v22 = PrivacyHeaderSupplementaryItem.bodyText.getter(v21);
      swift_release(v20);
      v23 = ObjectGraphPair.objectGraph.getter(v4);
      v24 = LinkableText.linkedSubstrings.getter();
      sub_100197870(v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1000CAE14);
      v26 = v25;
      v27 = swift_bridgeObjectRelease(v24);
      v28 = LinkableText.styledText.getter(v27);
      sub_10005A32C(v28, 0, v26);
      swift_release(v22);
      swift_release(v23);
      swift_bridgeObjectRelease(v26);
      swift_release(v28);
      swift_beginAccess(v11, v46, 33, 0);
      v29 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);
      swift_endAccess(v46);

      v4 = v35;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v35);
      v12 += v38;
      v10 = v45 - 1;
      v1 = v41;
    }
    while (v45 != 1);
    v6 = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  return objc_msgSend(v1, "setNeedsLayout", *(double *)&v6);
}

id sub_100327BE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id result;
  uint64_t v9;

  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2518 != -1)
    swift_once(&qword_1007F2518, sub_10041588C);
  v6 = sub_1000117A8(v2, (uint64_t)qword_100855430);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedLabel(0));
  result = sub_100059FA0((uint64_t)v5, 0, 0, 1);
  *a1 = result;
  return result;
}

id sub_100327CB8()
{
  return sub_100327CE0(&OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparator, &OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparatorView);
}

id sub_100327CCC()
{
  return sub_100327CE0(&OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparator, &OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparatorView);
}

id sub_100327CE0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  id result;
  char *v17;
  char *v18;
  void (*v19)(char *, _BYTE *, uint64_t);
  char *v20;
  void (*v21)(_BYTE *, uint64_t);
  char *v22;
  char *v23;
  __n128 v24;
  _BYTE v25[24];
  char v26[24];

  v5 = sub_10000DF3C(&qword_100806180);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Separator(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v25[-v13];
  v15 = v2 + *a1;
  swift_beginAccess(v15, v26, 0, 0);
  sub_1000194E4(v15, (uint64_t)v7, &qword_100806180);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100011088((uint64_t)v7, &qword_100806180);
    result = *(id *)(v2 + *a2);
    if (result)
      return objc_msgSend(result, "setHidden:", 1);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v14, v7, v8);
    v17 = *(char **)(v2 + *a2);
    if (v17)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v8);
      v18 = &v17[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
      swift_beginAccess(&v17[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v25, 33, 0);
      v19 = *(void (**)(char *, _BYTE *, uint64_t))(v9 + 24);
      v20 = v17;
      v19(v18, v11, v8);
      swift_endAccess(v25);
      objc_msgSend(v20, "setNeedsLayout");
      v21 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
      v21(v11, v8);
      objc_msgSend(v20, "setHidden:", 0);

      return (id)((uint64_t (*)(_BYTE *, uint64_t))v21)(v14, v8);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v8);
      v22 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v23 = &v22[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
      v24 = swift_beginAccess(&v22[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v25, 33, 0);
      (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v9 + 40))(v23, v11, v8, v24);
      swift_endAccess(v25);
      sub_1000FB184(v22, a2);

      return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  return result;
}

void sub_100327F88()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;
  id v7;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_isDetailHeader);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyLabel);
  v3 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  if (v1 == 1)
    v4 = (void *)static UIColor.primaryText.getter(v3);
  else
    v4 = (void *)static UIColor.secondaryText.getter(v3);
  v5 = *(void **)(v2 + qword_1007F5DF8);
  *(_QWORD *)(v2 + qword_1007F5DF8) = v4;
  v7 = v4;
  v6 = static NSObject.== infix(_:_:)(v7, v5);

  if ((v6 & 1) == 0)
    sub_10005A6F8();

}

uint64_t sub_100328040()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  objc_class *ObjectType;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  __int128 v45;
  __int128 v46;
  void *v47;
  char v48[24];
  _QWORD v49[5];
  objc_super v50;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v41 = type metadata accessor for LayoutRect(0);
  v40 = *(_QWORD *)(v41 - 8);
  v3 = __chkstk_darwin(v41);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PrivacyHeaderLayout.Metrics(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for PrivacyHeaderLayout(0, v8);
  v11 = *(_QWORD *)(v39 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v39).n128_u64[0];
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50.receiver = v1;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, "layoutSubviews", v12);
  v15 = objc_msgSend(v1, "contentView");
  v16 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v17 = LayoutMarginsAware<>.layoutFrame.getter(v16);
  v19 = v18;
  v21 = v20;
  v23 = v22;

  if (qword_1007F1D10 != -1)
    swift_once(&qword_1007F1D10, sub_1003272A4);
  v24 = sub_1000117A8(v6, (uint64_t)qword_100853F18);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v24, v6);
  v25 = v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_isDetailHeader];
  v26 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyLabel];
  v49[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
  v49[4] = &protocol witness table for UIView;
  v49[0] = v26;
  v27 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels], v48, 0, 0);
  v28 = *(_QWORD *)v27;
  v29 = v26;
  swift_bridgeObjectRetain(v28);
  v31 = sub_100419F08(v30);
  swift_bridgeObjectRelease(v28);
  v32 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparatorView];
  if (v32)
  {
    *((_QWORD *)&v46 + 1) = type metadata accessor for SeparatorView(0);
    v47 = &protocol witness table for UIView;
    *(_QWORD *)&v45 = v32;
  }
  else
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
  }
  v33 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparatorView];
  if (v33)
  {
    v34 = type metadata accessor for SeparatorView(0);
    v44 = &protocol witness table for UIView;
    *((_QWORD *)&v43 + 1) = v34;
    *(_QWORD *)&v42 = v33;
  }
  else
  {
    v44 = 0;
    v43 = 0u;
    v42 = 0u;
  }
  v35 = v32;
  v36 = v33;
  PrivacyHeaderLayout.init(metrics:isDetailHeader:bodyLabel:supplementaryItemLabels:topSeparatorView:middleSeparatorView:actionButtons:)(v10, v25, v49, v31, &v45, &v42, _swiftEmptyArrayStorage);
  PrivacyHeaderLayout.placeChildren(relativeTo:in:)(v1, v17, v19, v21, v23);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v39);
}

id sub_1003283A0()
{
  char *v0;
  uint64_t v1;
  id result;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "prepareForReuse");
  sub_1003287C8();
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItems];
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItems] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v1);
  sub_100327898();
  result = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparatorView];
  if (result)
    return objc_msgSend(result, "setHidden:", 1);
  return result;
}

uint64_t sub_1003285C4()
{
  return type metadata accessor for PrivacyHeaderCollectionViewCell(0);
}

uint64_t type metadata accessor for PrivacyHeaderCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1008082D0;
  if (!qword_1008082D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyHeaderCollectionViewCell);
  return result;
}

void sub_100328608(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  void *v14;

  v10[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10006A5F8(319, (unint64_t *)&qword_1007F52D0, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v10[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10012EFF0(319);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      v10[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_100328718(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v10[6] = "\b";
        sub_10006A5F8(319, &qword_100801810, (uint64_t (*)(uint64_t))&type metadata accessor for Separator);
        if (v9 <= 0x3F)
        {
          v11 = *(_QWORD *)(v8 - 8) + 64;
          v12 = "\b";
          v13 = v11;
          v14 = &unk_100685648;
          swift_updateClassMetadata2(a1, 256, 11, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_100328718(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1008082E0)
  {
    v2 = sub_100010EF8(&qword_1008082E8);
    v3 = sub_10032877C();
    v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1008082E0);
  }
}

unint64_t sub_10032877C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008082F0;
  if (!qword_1008082F0)
  {
    v1 = sub_100010EF8(&qword_1008082E8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008082F0);
  }
  return result;
}

void sub_1003287C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  UIAccessibilityTraits v6;
  UIAccessibilityTraits v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  UIAccessibilityTraits v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19[24];
  _BYTE v20[24];
  char *v21;
  char v22[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels, v22, 1, 0);
  v18 = v1;
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v2);
    v17 = *v18;
    *v18 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v17);
    return;
  }
  if (v2 < 0)
    v16 = *v1;
  else
    v16 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = v0 + OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemReusePool;
    v6 = UIAccessibilityTraitLink;
    v7 = UIAccessibilityTraitStaticText;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v8 = (char *)*(id *)(v2 + 8 * v4 + 32);
      v9 = v8;
      ++v4;
      v21 = v8;
      swift_beginAccess(v5, v20, 33, 0);
      v10 = sub_10000DF3C(&qword_1008082F8);
      ReusePool.recycle(_:)(&v21, v10);
      swift_endAccess(v20);
      objc_msgSend(v9, "setAttributedText:", 0);
      v11 = *(_QWORD *)&v9[qword_1007F5DE8];
      *(_QWORD *)&v9[qword_1007F5DE8] = 0;
      swift_release(v11);
      v12 = &v9[qword_1007F5DE0];
      swift_beginAccess(&v9[qword_1007F5DE0], v19, 1, 0);
      v13 = *(_QWORD *)v12;
      *(_QWORD *)v12 = _swiftEmptyArrayStorage;
      *(_QWORD *)&v14 = swift_bridgeObjectRelease(v13).n128_u64[0];
      if (*(_QWORD *)(*(_QWORD *)v12 + 16))
        v15 = v6;
      else
        v15 = v7;
      objc_msgSend(v9, "setAccessibilityTraits:", v15, v14);
      objc_msgSend(v9, "removeFromSuperview");

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

char *sub_1003289C4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v34;
  objc_class *ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  objc_super v41[2];
  objc_super v42;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DirectionalTextAlignment(0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1008082E8);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_itemLayoutContext];
  v16 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyText];
  v18 = sub_10000DF3C(&qword_1007FC090);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItems] = _swiftEmptyArrayStorage;
  v19 = (objc_class *)type metadata accessor for DynamicTypeLinkedLabel(0);
  v20 = v1;
  ViewRecycler.init()(v19);
  v21 = sub_10032877C();
  ReusePool.init(recycler:limit:)(v14, 3, v12, v21);
  *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparatorView] = 0;
  v22 = &v20[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparator];
  v23 = type metadata accessor for Separator(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparatorView] = 0;
  v24(&v20[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparator], 1, 1, v23);
  v20[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_isDetailHeader] = 0;
  if (qword_1007F2518 != -1)
    swift_once(&qword_1007F2518, sub_10041588C);
  v25 = sub_1000117A8(v8, (uint64_t)qword_100855430);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
  v26 = objc_allocWithZone(v19);
  *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyLabel] = sub_100059FA0((uint64_t)v11, 0, 0, 1);

  v42.receiver = v20;
  v42.super_class = ObjectType;
  v27 = (char *)objc_msgSendSuper2(&v42, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v28 = objc_msgSend(v27, "contentView");
  objc_msgSend(v28, "setClipsToBounds:", 0);

  v29 = objc_msgSend(v27, "contentView");
  objc_msgSend(v29, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v30 = OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyLabel;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v7, enum case for DirectionalTextAlignment.leading(_:), v37);
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v7);
  memset(v41, 0, sizeof(v41));
  memset(v40, 0, sizeof(v40));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6562614C79646F62, 0xE90000000000006CLL, v41, v40);
  sub_100011088((uint64_t)v40, &qword_1007F6E90);
  sub_100011088((uint64_t)v41, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v4);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v39);
  v31 = objc_msgSend(v27, "contentView");
  v32 = *(id *)&v27[v30];
  objc_msgSend(v31, "addSubview:", v32);

  return v27;
}

void sub_100328E28()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v1 = sub_10000DF3C(&qword_1008082E8);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_itemLayoutContext];
  v5 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_bodyText];
  v7 = sub_10000DF3C(&qword_1007FC090);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItemLabels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_supplementaryItems] = _swiftEmptyArrayStorage;
  v8 = type metadata accessor for DynamicTypeLinkedLabel(0);
  ViewRecycler.init()(v8);
  v9 = sub_10032877C();
  ReusePool.init(recycler:limit:)(v3, 3, v1, v9);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparatorView] = 0;
  v10 = &v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_topSeparator];
  v11 = type metadata accessor for Separator(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparatorView] = 0;
  v12(&v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_middleSeparator], 1, 1, v11);
  v0[OBJC_IVAR____TtC22SubscribePageExtension31PrivacyHeaderCollectionViewCell_isDetailHeader] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/PrivacyHeaderCollectionViewCell.swift", 60, 2, 50, 0);
  __break(1u);
}

uint64_t type metadata accessor for RootActionRunner(uint64_t a1)
{
  uint64_t result;

  result = qword_100808308;
  if (!qword_100808308)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootActionRunner);
  return result;
}

uint64_t sub_100329038(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[7];

  v2 = qword_100853FA0;
  result = type metadata accessor for MetricsPipeline(319);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100685698;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[6] = &unk_1006856B0;
    result = swift_initClassMetadata2(a1, 0, 7, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003290E0()
{
  void *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for RootActionRunner(0);
    result = swift_dynamicCastClass(v2, v3);
    if (!result)
    {
      v4 = objc_msgSend(v0, "nextResponder");
      if (v4)
      {
        v5 = v4;
        v6 = sub_1003290E0();

        swift_release(v2);
        return v6;
      }
      else
      {
        swift_release(v2);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10032916C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void (*v40)(char *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  void *v61;
  _QWORD v62[5];
  _QWORD v63[3];

  v2 = v1;
  v4 = sub_10000DF3C(&qword_100801500);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v51 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for MetricsData(0);
  v57 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetricsFieldsContext(0, v8);
  v56 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v58 = (char *)&v49 - v13;
  v14 = sub_10000DF3C((uint64_t *)&unk_1008083F0);
  BaseObjectGraph.optional<A>(_:)(v63, v14, v14);
  v15 = v63[0];
  v55 = v63[1];
  type metadata accessor for MetricsActivity(0);
  v17 = static MetricsActivity.current.getter(v16);
  v18 = dispatch thunk of MetricsActivity.currentPageFields.getter();
  v19 = swift_release(v17);
  v20 = static MetricsActivity.current.getter(v19);
  v21 = dispatch thunk of MetricsActivity.preloaded.getter();
  v22 = swift_release(v20);
  v23 = static MetricsActivity.current.getter(v22);
  dispatch thunk of MetricsActivity.currentSearchAdRotationDataProvider.getter(v62);
  swift_release(v23);
  v24 = *(_QWORD *)(v2 + qword_100808300);
  if (v24)
  {
    *((_QWORD *)&v60 + 1) = type metadata accessor for SearchGhostHintMetricsTracker(0);
    v61 = &protocol witness table for SearchGhostHintMetricsTracker;
    *(_QWORD *)&v59 = v24;
  }
  else
  {
    v61 = 0;
    v59 = 0u;
    v60 = 0u;
  }
  v25 = swift_retain(v24);
  v26 = static MetricsActivity.current.getter(v25);
  v27 = dispatch thunk of MetricsActivity.contextualAction.getter();
  v28 = swift_release(v26);
  static MetricsFieldsContext.createFieldsContext(impressionsTracker:adamIdString:pageContextOverride:referrer:participatingInCrossfireReferral:pageFields:preloaded:advertRotationData:searchGhostHintData:contextualAction:impressionsAppendixData:)(v15, v55, 0, 0, 0, 0, 0, 0, v28, 0, v18, v21, v62, &v59, v27, 0, 0);
  swift_release(v27);
  swift_bridgeObjectRelease(v18);
  swift_unknownObjectRelease(v15);
  sub_100011088((uint64_t)v62, &qword_100801508);
  sub_100011088((uint64_t)&v59, (uint64_t *)&unk_100808400);
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v55 = v2 + qword_100853F70;
    v31 = a1 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    v32 = *(_QWORD *)(v57 + 72);
    v33 = a1;
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v57 + 16);
    v50 = v33;
    v35 = swift_bridgeObjectRetain(v33);
    v36 = v54;
    do
    {
      v41 = v34(v7, v31, v36, v35);
      v42 = MetricsData.contextualAdamId.getter(v41);
      if (v43)
      {
        v44 = v43;
        v62[0] = v42;
        v62[1] = v43;
        v45 = v9;
        v46 = v51;
        static MetricsFieldsContext.adamIdStringKey.getter();
        MetricsFieldsContext.addingValue<A>(_:forProperty:)(v62, v46, &type metadata for String);
        v47 = v46;
        v9 = v45;
        v36 = v54;
        (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v53);
        swift_bridgeObjectRelease(v44);
        v37 = v56;
      }
      else
      {
        v37 = v56;
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v11, v58, v9);
      }
      v38 = MetricsPipeline.process(_:using:)(v7, v11);
      v39 = swift_release(v38);
      v40 = *(void (**)(char *, uint64_t, __n128))(v37 + 8);
      v40(v11, v9, v39);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v7, v36);
      v31 += v32;
      --v30;
    }
    while (v30);
    v29 = swift_bridgeObjectRelease(v50);
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t, __n128))(v56 + 8);
  }
  return ((uint64_t (*)(char *, uint64_t, __n128))v40)(v58, v9, v29);
}

double sub_100329538(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::Bool v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  uint64_t v60;
  void *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  _QWORD aBlock[6];

  v4 = v3;
  type metadata accessor for ExternalUrlAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    sub_1003346C8();
LABEL_25:
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  type metadata accessor for HttpAction(0);
  v8 = swift_dynamicCastClass(a1);
  if (v8)
  {
    v9 = v8;
    swift_retain(a1);
    sub_10032A054(v9, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for RateAction(0);
  v10 = swift_dynamicCastClass(a1);
  if (v10)
  {
    v11 = v10;
    v12 = swift_retain(a1);
    sub_10032A3F0(v11, a2, a3, v12);
    goto LABEL_25;
  }
  type metadata accessor for HttpTemplateAction(0);
  v13 = swift_dynamicCastClass(a1);
  if (v13)
  {
    v14 = v13;
    swift_retain(a1);
    sub_10032C328(v14, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for LocalAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    LocalAction.perform()();
    goto LABEL_25;
  }
  type metadata accessor for OfferStateAction(0);
  v15 = swift_dynamicCastClass(a1);
  if (v15)
  {
    v16 = v15;
    swift_retain(a1);
    sub_10032C4B0(v16, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for OfferAction(0);
  v17 = swift_dynamicCastClass(a1);
  if (v17)
  {
    v18 = v17;
    swift_retain(a1);
    sub_10032C6A8(v18, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for InAppPurchaseAction(0);
  v19 = swift_dynamicCastClass(a1);
  if (v19)
  {
    v20 = v19;
    swift_retain(a1);
    sub_10032CE1C(v20, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for UpdateAllAction(0);
  v21 = swift_dynamicCastClass(a1);
  if (v21)
  {
    v22 = v21;
    swift_retain(a1);
    sub_10032D580(v22, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for OpenAppAction(0);
  v23 = swift_dynamicCastClass(a1);
  if (v23)
  {
    v24 = v23;
    swift_retain(a1);
    sub_100330428(v24, 1, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for ArcadeAction();
  v25 = swift_dynamicCastClass(a1);
  if (v25)
  {
    v26 = v25;
    swift_retain(a1);
    sub_10032DF24(v26, a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for FamilyCircleAction(0);
  v27 = swift_dynamicCastClass(a1);
  if (v27)
  {
    v28 = v27;
    swift_retain(a1);
    sub_1003347F8(v28, (uint64_t)a2);
    goto LABEL_25;
  }
  type metadata accessor for SearchAdAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v30 = swift_retain(a1);
    v31 = SearchAdAction.action.getter(v30);
    sub_100329538(v31, a2, a3);
    swift_release();
    goto LABEL_25;
  }
  type metadata accessor for RateLimitedAction(0);
  v32 = swift_dynamicCastClass(a1);
  if (v32)
  {
    v33 = v32;
    swift_retain(a1);
    sub_10032E3BC(v33, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for ArcadeSubscriptionStateAction(0);
  v34 = swift_dynamicCastClass(a1);
  if (v34)
  {
    v35 = v34;
    swift_retain(a1);
    sub_10032E884(v35, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for TabBadgeAction();
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    sub_100334AEC();
    goto LABEL_25;
  }
  type metadata accessor for EngagementToggleAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v37 = type metadata accessor for AppStoreEngagementManager(0, v36);
    v38 = type metadata accessor for BaseObjectGraph(0);
    swift_retain(a1);
    inject<A, B>(_:from:)(aBlock, v37, a3, v37, v38);
    v40 = EngagementToggleAction.identifier.getter(v39);
    v42 = v41;
    v43 = EngagementToggleAction.value.getter() & 1;
    v44._countAndFlagsBits = v40;
    v44._object = v42;
    AppStoreEngagementManager.setIdentifier(_:isEnabled:)(v44, v43);
    swift_release();
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease(v42).n128_u64[0];
    return result;
  }
  type metadata accessor for InvalidateAllWidgetsAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    InvalidateAllWidgetsAction.run()();
    goto LABEL_25;
  }
  type metadata accessor for CancelPreorderAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    sub_100334C14();
    goto LABEL_25;
  }
  type metadata accessor for AppLaunchTrampolineAction(0);
  v45 = swift_dynamicCastClass(a1);
  if (v45)
  {
    v46 = v45;
    swift_retain(a1);
    sub_10032EA68(v46, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for CreateCalendarEventAction(0);
  v47 = swift_dynamicCastClass(a1);
  if (v47)
  {
    v48 = v47;
    swift_retain(a1);
    sub_10032EC9C(v48, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for CopyTextAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v49 = (void *)objc_opt_self(UIPasteboard);
    v50 = objc_msgSend(v49, "generalPasteboard", swift_retain(a1).n128_f64[0]);
    CopyTextAction.text.getter();
    v52 = v51;
    v94 = String._bridgeToObjectiveC()();
    objc_msgSend(v50, "setString:", v94, swift_bridgeObjectRelease(v52).n128_f64[0]);
    swift_release();

    return result;
  }
  type metadata accessor for LocalAskToBuyAction();
  v53 = swift_dynamicCastClass(a1);
  if (v53)
  {
    v54 = v53;
    v55 = (void *)objc_opt_self(APRequestHandler);
    v56 = swift_retain(a1);
    LocalAskToBuyAction.adamIdString.getter(v56);
    v58 = v57;
    v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v58);
    v60 = swift_allocObject(&unk_100738780, 32, 7);
    *(_QWORD *)(v60 + 16) = v4;
    *(_QWORD *)(v60 + 24) = v54;
    aBlock[4] = sub_1003350D8;
    aBlock[5] = v60;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002B92C;
    aBlock[3] = &unk_100738798;
    v61 = _Block_copy(aBlock);
    swift_retain(a1);
    swift_retain(v4);
    objc_msgSend(v55, "localApproveRequestWithItemIdentifier:completion:", v59, v61, swift_release().n128_f64[0]);
    _Block_release(v61);
LABEL_48:
    swift_release();

    return result;
  }
  type metadata accessor for ClearAppUsageDataAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v63 = type metadata accessor for OnDevicePersonalizationDataManager(0, v62);
    v64 = type metadata accessor for BaseObjectGraph(0);
    swift_retain(a1);
    inject<A, B>(_:from:)(aBlock, v63, a3, v63, v64);
    v65 = (void *)aBlock[0];
    OnDevicePersonalizationDataManager.clearData()();
    v66 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
    v67 = inject<A, B>(_:from:)(aBlock, v66, a3, v66, v64);
    v68 = (void *)aBlock[0];
    dispatch thunk of AppStoreOnDeviceRecommendationsManager.clearData()(v67);
    swift_release();

    return result;
  }
  type metadata accessor for ClearSearchHistoryAction();
  if (swift_dynamicCastClass(a1))
  {
    v69 = type metadata accessor for OnDeviceSearchHistoryManager(0);
    swift_retain(a1);
    BaseObjectGraph.inject<A>(_:)(aBlock, v69, v69);
    v59 = (NSString)aBlock[0];
    OnDeviceSearchHistoryManager.clearData()();
    goto LABEL_48;
  }
  type metadata accessor for UserNotificationsAuthorizationAction(0);
  if (swift_dynamicCastClass(a1))
  {
    type metadata accessor for ObjectGraph(0);
    if (swift_dynamicCastClass(a3))
    {
      swift_retain(a1);
      swift_retain(a3);
      sub_1000D18B8();
LABEL_65:
      swift_release();
      swift_release();
      goto LABEL_25;
    }
    v72 = qword_1007F3450;
    v73 = swift_retain(a1);
    if (v72 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v74 = type metadata accessor for OSLogger(0, v73);
    sub_1000117A8(v74, (uint64_t)qword_100857618);
    v75 = sub_10000DF3C(&qword_1007FD430);
    v76 = type metadata accessor for LogMessage(0);
    v77 = swift_allocObject(v75, ((*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v76 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) | 7);
    *(_OWORD *)(v77 + 16) = xmmword_10066FBA0;
    v78 = 0x8000000100644840;
    v79 = 0xD000000000000060;
  }
  else
  {
    type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction();
    if (swift_dynamicCastClass(a1))
    {
      type metadata accessor for ObjectGraph(0);
      v70 = swift_dynamicCastClass(a3);
      if (v70)
      {
        v71 = v70;
        swift_retain(a1);
        swift_retain(a3);
        sub_100475F40(v71);
        goto LABEL_65;
      }
      v85 = qword_1007F3450;
      v86 = swift_retain(a1);
      if (v85 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v74 = type metadata accessor for OSLogger(0, v86);
      sub_1000117A8(v74, (uint64_t)qword_100857618);
      v87 = sub_10000DF3C(&qword_1007FD430);
      v88 = type metadata accessor for LogMessage(0);
      v77 = swift_allocObject(v87, ((*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v88 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) | 7);
      *(_OWORD *)(v77 + 16) = xmmword_10066FBA0;
      v79 = 0xD00000000000006BLL;
      v89 = "Provided BaseObjectGraph is not an ObjectGraph, not running UserNotificationsAuthorizationWithPrewarmAction";
    }
    else
    {
      type metadata accessor for UpdateGranularNotificationSettingsAction(0);
      v80 = swift_dynamicCastClass(a1);
      if (!v80)
      {
        sub_100029820(a1, (uint64_t)a2, a3);
        return result;
      }
      v81 = v80;
      type metadata accessor for ObjectGraph(0);
      v82 = swift_dynamicCastClass(a3);
      if (v82)
      {
        v83 = v82;
        swift_retain(a1);
        v84 = swift_retain(a3);
        sub_1003DE70C(v81, v83, v84);
        goto LABEL_65;
      }
      v90 = qword_1007F3450;
      v91 = swift_retain(a1);
      if (v90 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v74 = type metadata accessor for OSLogger(0, v91);
      sub_1000117A8(v74, (uint64_t)qword_100857618);
      v92 = sub_10000DF3C(&qword_1007FD430);
      v93 = type metadata accessor for LogMessage(0);
      v77 = swift_allocObject(v92, ((*(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v93 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80) | 7);
      *(_OWORD *)(v77 + 16) = xmmword_10066FBA0;
      v79 = 0xD000000000000064;
      v89 = "Provided BaseObjectGraph is not an ObjectGraph, not running UpdateGranularNotificationSettingsAction";
    }
    v78 = (unint64_t)(v89 - 32) | 0x8000000000000000;
  }
  LogMessage.init(stringLiteral:)(v79, v78);
  Logger.info(_:)(v77, v74, &protocol witness table for OSLogger);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v77).n128_u64[0];
  return result;
}

uint64_t sub_10032A054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD v53[5];
  _BYTE v54[40];

  v47 = a2;
  v43 = a1;
  v4 = type metadata accessor for Bag(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v41 - v8);
  v10 = sub_100019574(0, (unint64_t *)&unk_100808360, AMSURLSession_ptr);
  v11 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v53, v10, a3, v10, v11);
  v12 = v53[0];
  v48 = (id)v53[0];
  v41 = a3;
  inject<A, B>(_:from:)(v9, v4, a3, v4, v11);
  v13 = sub_100019574(0, (unint64_t *)&qword_100803520, AMSProcessInfo_ptr);
  inject<A, B>(_:from:)(v53, v13, a3, v13, v11);
  v14 = v53[0];
  v49 = (id)v53[0];
  v15 = type metadata accessor for ASKBagContract(0);
  inject<A, B>(_:from:)(v53, v15, a3, v15, v11);
  v16 = v53[0];
  v50 = v53[0];
  v17 = sub_10000DF3C(&qword_1007F5850);
  inject<A, B>(_:from:)(v53, v17, a3, v17, v11);
  v18 = v53[0];
  v46 = v53[0];
  v19 = swift_unknownObjectRetain(v53[0]);
  v51 = v9;
  v20 = v14;
  v21 = v43;
  v45 = HttpAction.start(urlSession:bag:process:bagContract:mediaTokenService:)(v12, v9, v20, v16, v18, v19);
  v22 = swift_unknownObjectRelease(v18);
  v23 = v42;
  (*(void (**)(char *, _QWORD *, uint64_t, __n128))(v5 + 16))(v42, v9, v4, v22);
  v24 = v47;
  sub_1000194E4(v47, (uint64_t)v53, &qword_1007F6E90);
  v25 = *(unsigned __int8 *)(v5 + 80);
  v44 = v5;
  v26 = (v25 + 24) & ~v25;
  v27 = (v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1007387D0, v29 + 8, v25 | 7);
  *(_QWORD *)(v30 + 16) = v21;
  v31 = v23;
  v32 = v4;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v30 + v26, v31, v4);
  v33 = v52;
  *(_QWORD *)(v30 + v27) = v52;
  sub_10006C29C((uint64_t)v53, v30 + v28, &qword_1007F6E90);
  v34 = v41;
  *(_QWORD *)(v30 + v29) = v41;
  sub_1000194E4(v24, (uint64_t)v54, &qword_1007F6E90);
  v35 = (_QWORD *)swift_allocObject(&unk_1007387F8, 72, 7);
  v36 = v21;
  v35[2] = v21;
  v35[3] = v33;
  sub_10006C29C((uint64_t)v54, (uint64_t)(v35 + 4), &qword_1007F6E90);
  v35[8] = v34;
  v37 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  swift_retain_n(v36, 2);
  swift_retain_n(v33, 2);
  swift_retain_n(v34, 2);
  v39 = static OS_dispatch_queue.main.getter(v38);
  v53[3] = v37;
  v53[4] = &protocol witness table for OS_dispatch_queue;
  v53[0] = v39;
  Promise.then(perform:orCatchError:on:)(sub_1003351B0, v30, sub_100335220, v35, v53);
  swift_unknownObjectRelease(v46);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v53);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v44 + 8))(v51, v32);
}

uint64_t sub_10032A3F0(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  void *v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  char v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  void *v134;
  void *v135;
  Swift::Bool v136;
  Swift::String v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  NSString v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  NSString v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void **v161;
  uint64_t v162;
  _QWORD *v163;
  void **v164;
  uint64_t v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  const char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __n128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  void (*v187)(char *, _QWORD, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  __n128 v198;
  void (*v199)(char *, uint64_t, __n128);
  uint64_t v200;
  __n128 v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __n128 v205;
  uint64_t v206;
  char v207;
  __n128 v208;
  uint64_t v209;
  __n128 v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  __n128 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  __n128 v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  __n128 v234;
  __n128 v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  __n128 v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  __n128 v243;
  void *v244;
  unint64_t v245;
  uint64_t v246;
  __n128 v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __n128 v255;
  uint64_t v256;
  __n128 v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  __n128 v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t (*v277)(char *, uint64_t, uint64_t, uint64_t);
  char *v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unsigned int v286;
  char *v287;
  unsigned int v288;
  char *v289;
  int v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t (*v298)(uint64_t, unint64_t, uint64_t);
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void **aBlock;
  uint64_t v305;
  void (*v306)(uint64_t, void *);
  void *v307;
  uint64_t (*v308)();
  uint64_t v309;
  void **v310;
  uint64_t v311;

  v273 = a3;
  v277 = a2;
  v301 = a1;
  v280 = type metadata accessor for OSLogger(0, a4);
  v279 = *(_QWORD *)(v280 - 8);
  __chkstk_darwin(v280);
  v278 = (char *)&v264 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = type metadata accessor for ActionRunner.Origin(0);
  v271 = *(_QWORD *)(v272 - 8);
  v6 = __chkstk_darwin(v272);
  v270 = (char *)&v264 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = type metadata accessor for FlowPage(0, v6);
  v266 = *(_QWORD *)(v269 - 8);
  __chkstk_darwin(v269);
  v267 = (char *)&v264 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v268 = (char *)&v264 - v10;
  __chkstk_darwin(v11);
  v265 = (char *)&v264 - v12;
  __chkstk_darwin(v13);
  v264 = (char *)&v264 - v14;
  v283 = type metadata accessor for ActionMetrics(0, v15);
  v282 = *(_QWORD *)(v283 - 8);
  v16 = __chkstk_darwin(v283);
  v281 = (char *)&v264 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RateAction.Parameter(0, v16);
  v296 = *(_QWORD *)(v18 - 8);
  v297 = v18;
  __chkstk_darwin(v18);
  v287 = (char *)&v264 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v289 = (char *)&v264 - v21;
  v302 = type metadata accessor for HttpTemplateParameter(0);
  v22 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin(v302);
  v303 = (uint64_t)&v264 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = type metadata accessor for LegacyAppState(0);
  v293 = *(_QWORD *)(v294 - 8);
  __chkstk_darwin(v294);
  v291 = (char *)&v264 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v264 - v26;
  v300 = type metadata accessor for AdamId(0);
  v28 = *(_QWORD *)(v300 - 8);
  v29 = __chkstk_darwin(v300);
  v31 = (char *)&v264 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = type metadata accessor for HttpTemplateSubstitutions(0, v29);
  v284 = *(_QWORD *)(v285 - 8);
  __chkstk_darwin(v285);
  v33 = (char *)&v264 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v35 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v36 = sub_1002EF824((uint64_t)_swiftEmptyArrayStorage);
  v37 = sub_1002EF704((uint64_t)_swiftEmptyArrayStorage);
  v295 = v33;
  HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v34, v35, v36, v37);
  v274 = v4;
  v38 = *(_QWORD *)(v4 + qword_100853F78 + 8);
  ObjectType = swift_getObjectType();
  RateAction.adamId.getter(v40);
  v41 = dispatch thunk of AppStateController.stateMachine(forApp:)(v31, ObjectType, v38);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v300);
  v44 = swift_getObjectType();
  v292 = v27;
  dispatch thunk of AppStateMachine.currentState.getter(v44, v43);
  v46 = HttpTemplateAction.parameters.getter(v45);
  v47 = *(_QWORD *)(v46 + 16);
  if (v47)
  {
    v276 = v41;
    v48 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v275 = v46;
    v49 = v46 + v48;
    v299 = *(_QWORD *)(v22 + 72);
    v300 = v22;
    v298 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v22 + 16);
    v288 = enum case for RateAction.Parameter.rating(_:);
    v290 = enum case for LegacyAppState.openable(_:);
    v286 = enum case for RateAction.Parameter.version(_:);
    while (1)
    {
      v50 = v298(v303, v49, v302);
      v51 = dispatch thunk of RateAction.rating.getter(v50);
      if ((v53 & 1) == 0)
      {
        v54 = (void **)v51;
        v55 = HttpTemplateParameter.key.getter(v52);
        v57 = v56;
        v58 = v296;
        v59 = v297;
        v60 = v289;
        v61 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v296 + 104))(v289, v288, v297);
        v62 = RateAction.Parameter.rawValue.getter(v61);
        v64 = v63;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
        if (v55 == v62 && v57 == v64)
        {
          swift_bridgeObjectRelease_n(v57, 2);
LABEL_8:
          aBlock = v54;
          v66 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
          v68 = v67;
          v69 = v303;
          HttpTemplateSubstitutions.setParameter(value:for:)(v66, v67, v303, v70);
          swift_bridgeObjectRelease(v68);
          (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v69, v302);
          goto LABEL_16;
        }
        v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v57, v62, v64, 0);
        swift_bridgeObjectRelease(v64);
        swift_bridgeObjectRelease(v57);
        if ((v65 & 1) != 0)
          goto LABEL_8;
      }
      v71 = v293;
      v72 = v291;
      v73 = v294;
      (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v291, v292, v294);
      v74 = (*(uint64_t (**)(char *, uint64_t))(v71 + 88))(v72, v73);
      if (v74 == v290)
      {
        (*(void (**)(char *, uint64_t))(v71 + 96))(v72, v73);
        v75 = *(void **)&v72[*(int *)(sub_10000DF3C(&qword_1008035A0) + 48)];
        v76 = type metadata accessor for OpenableDestination(0);
        v77.n128_f64[0] = (*(double (**)(char *, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v72, v76);
        v78 = HttpTemplateParameter.key.getter(v77);
        v80 = v79;
        v81 = v296;
        v82 = v297;
        v83 = v287;
        v84 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v296 + 104))(v287, v286, v297);
        v85 = RateAction.Parameter.rawValue.getter(v84);
        v87 = v86;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v82);
        if (v78 == v85 && v80 == v87)
        {
          v88.n128_u64[0] = swift_bridgeObjectRelease_n(v80, 2).n128_u64[0];
        }
        else
        {
          v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v85, v87, 0);
          swift_bridgeObjectRelease(v87);
          v88 = swift_bridgeObjectRelease(v80);
          if ((v89 & 1) == 0)
          {
            (*(void (**)(uint64_t, uint64_t, __n128))(v300 + 8))(v303, v302, v88);

            goto LABEL_16;
          }
        }
        v90 = objc_msgSend(v75, "stringValue", v88.n128_f64[0]);
        v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v93 = v92;

        v94 = v303;
        HttpTemplateSubstitutions.setParameter(value:for:)(v91, v93, v303, v95);

        swift_bridgeObjectRelease(v93);
        (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v94, v302);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v303, v302);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
      }
LABEL_16:
      v49 += v299;
      if (!--v47)
      {
        swift_bridgeObjectRelease(v275);
        v41 = v276;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease(v46);
LABEL_20:
  v97 = v281;
  static ActionMetrics.notInstrumented.getter(v96);
  v98 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v295, 0, 0, v97);
  (*(void (**)(char *, uint64_t))(v282 + 8))(v97, v283);
  type metadata accessor for ExternalUrlAction(0);
  if (!swift_dynamicCastClass(v98))
  {
    type metadata accessor for HttpAction(0);
    v99 = swift_dynamicCastClass(v98);
    if (v99)
    {
      v100 = v99;
      swift_retain(v98);
      sub_10032A054(v100, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for RateAction(0);
    v101 = swift_dynamicCastClass(v98);
    if (v101)
    {
      v102 = v101;
      v103 = swift_retain(v98);
      sub_10032A3F0(v102, v277, v273, v103);
      goto LABEL_38;
    }
    type metadata accessor for HttpTemplateAction(0);
    v104 = swift_dynamicCastClass(v98);
    if (v104)
    {
      v105 = v104;
      swift_retain(v98);
      sub_10032C328(v105, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for LocalAction(0);
    if (swift_dynamicCastClass(v98))
    {
      swift_retain(v98);
      LocalAction.perform()();
      goto LABEL_38;
    }
    type metadata accessor for OfferStateAction(0);
    v106 = swift_dynamicCastClass(v98);
    if (v106)
    {
      v107 = v106;
      swift_retain(v98);
      sub_10032C4B0(v107, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for OfferAction(0);
    v108 = swift_dynamicCastClass(v98);
    if (v108)
    {
      v109 = v108;
      swift_retain(v98);
      sub_10032C6A8(v109, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for InAppPurchaseAction(0);
    v110 = swift_dynamicCastClass(v98);
    if (v110)
    {
      v111 = v110;
      swift_retain(v98);
      sub_10032CE1C(v111, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for UpdateAllAction(0);
    v112 = swift_dynamicCastClass(v98);
    if (v112)
    {
      v113 = v112;
      swift_retain(v98);
      sub_10032D580(v113, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    v116 = v41;
    type metadata accessor for OpenAppAction(0);
    v117 = swift_dynamicCastClass(v98);
    if (v117)
    {
      v118 = v117;
      swift_retain(v98);
      sub_100330428(v118, 1, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for ArcadeAction();
    v119 = swift_dynamicCastClass(v98);
    if (v119)
    {
      v120 = v119;
      swift_retain(v98);
      sub_10032DF24(v120, v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for FamilyCircleAction(0);
    v121 = swift_dynamicCastClass(v98);
    if (v121)
    {
      v122 = v121;
      swift_retain(v98);
      sub_1003347F8(v122, (uint64_t)v277);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for SearchAdAction(0);
    if (swift_dynamicCastClass(v98))
    {
      v123 = swift_retain(v98);
      v124 = SearchAdAction.action.getter(v123);
      sub_100329538(v124, v277, v273);
      swift_unknownObjectRelease(v41);
      swift_release_n(v98, 2);
LABEL_49:
      swift_release();
      goto LABEL_40;
    }
    type metadata accessor for RateLimitedAction(0);
    v125 = swift_dynamicCastClass(v98);
    if (v125)
    {
      v126 = v125;
      swift_retain(v98);
      sub_10032E3BC(v126, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for ArcadeSubscriptionStateAction(0);
    v127 = swift_dynamicCastClass(v98);
    if (v127)
    {
      v128 = v127;
      swift_retain(v98);
      sub_10032E884(v128, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for TabBadgeAction();
    if (swift_dynamicCastClass(v98))
    {
      swift_retain(v98);
      sub_100334AEC();
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for EngagementToggleAction(0);
    if (swift_dynamicCastClass(v98))
    {
      v130 = type metadata accessor for AppStoreEngagementManager(0, v129);
      v131 = type metadata accessor for BaseObjectGraph(0);
      swift_retain(v98);
      inject<A, B>(_:from:)(&aBlock, v130, v273, v130, v131);
      v133 = EngagementToggleAction.identifier.getter(v132);
      v135 = v134;
      v136 = EngagementToggleAction.value.getter() & 1;
      v137._countAndFlagsBits = v133;
      v137._object = v135;
      AppStoreEngagementManager.setIdentifier(_:isEnabled:)(v137, v136);
      swift_unknownObjectRelease(v41);
      swift_release_n(v98, 2);
      swift_release();
      swift_bridgeObjectRelease(v135);
      goto LABEL_40;
    }
    type metadata accessor for InvalidateAllWidgetsAction(0);
    if (swift_dynamicCastClass(v98))
    {
      swift_retain(v98);
      InvalidateAllWidgetsAction.run()();
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for CancelPreorderAction(0);
    if (swift_dynamicCastClass(v98))
    {
      swift_retain(v98);
      sub_100334C14();
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for AppLaunchTrampolineAction(0);
    v138 = swift_dynamicCastClass(v98);
    if (v138)
    {
      v139 = v138;
      swift_retain(v98);
      sub_10032EA68(v139, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for CreateCalendarEventAction(0);
    v140 = swift_dynamicCastClass(v98);
    if (v140)
    {
      v141 = v140;
      swift_retain(v98);
      sub_10032EC9C(v141, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for CopyTextAction(0);
    if (swift_dynamicCastClass(v98))
    {
      v142 = (void *)objc_opt_self(UIPasteboard);
      v143 = objc_msgSend(v142, "generalPasteboard", swift_retain(v98).n128_f64[0]);
      CopyTextAction.text.getter();
      v145 = v144;
      v146 = String._bridgeToObjectiveC()();
      objc_msgSend(v143, "setString:", v146, swift_bridgeObjectRelease(v145).n128_f64[0]);
      swift_unknownObjectRelease(v41);
      swift_release_n(v98, 2);

      goto LABEL_40;
    }
    type metadata accessor for LocalAskToBuyAction();
    v147 = swift_dynamicCastClass(v98);
    if (v147)
    {
      v148 = v147;
      v149 = (void *)objc_opt_self(APRequestHandler);
      v150 = swift_retain(v98);
      LocalAskToBuyAction.adamIdString.getter(v150);
      v152 = v151;
      v153 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v152);
      v154 = swift_allocObject(&unk_100738898, 32, 7);
      v155 = v274;
      *(_QWORD *)(v154 + 16) = v274;
      *(_QWORD *)(v154 + 24) = v148;
      v308 = sub_100335A4C;
      v309 = v154;
      aBlock = _NSConcreteStackBlock;
      v305 = 1107296256;
      v306 = sub_10002B92C;
      v307 = &unk_1007388B0;
      v156 = _Block_copy(&aBlock);
      swift_retain(v98);
      swift_retain(v155);
      objc_msgSend(v149, "localApproveRequestWithItemIdentifier:completion:", v153, v156, swift_release().n128_f64[0]);
      _Block_release(v156);
      swift_unknownObjectRelease(v41);
      swift_release_n(v98, 2);

      goto LABEL_40;
    }
    type metadata accessor for ClearAppUsageDataAction(0);
    if (swift_dynamicCastClass(v98))
    {
      v158 = type metadata accessor for OnDevicePersonalizationDataManager(0, v157);
      v159 = type metadata accessor for BaseObjectGraph(0);
      swift_retain(v98);
      v160 = v273;
      inject<A, B>(_:from:)(&aBlock, v158, v273, v158, v159);
      v161 = aBlock;
      OnDevicePersonalizationDataManager.clearData()();
      v162 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
      v163 = inject<A, B>(_:from:)(&aBlock, v162, v160, v162, v159);
      v164 = aBlock;
      dispatch thunk of AppStoreOnDeviceRecommendationsManager.clearData()(v163);
      swift_unknownObjectRelease(v41);
      swift_release_n(v98, 2);

      goto LABEL_40;
    }
    type metadata accessor for ClearSearchHistoryAction();
    if (swift_dynamicCastClass(v98))
    {
      v165 = type metadata accessor for OnDeviceSearchHistoryManager(0);
      swift_retain(v98);
      BaseObjectGraph.inject<A>(_:)(&aBlock, v165, v165);
      v166 = aBlock;
      OnDeviceSearchHistoryManager.clearData()();
      swift_unknownObjectRelease(v41);
      swift_release_n(v98, 2);

      goto LABEL_40;
    }
    type metadata accessor for UserNotificationsAuthorizationAction(0);
    if (swift_dynamicCastClass(v98))
    {
      type metadata accessor for ObjectGraph(0);
      if (swift_dynamicCastClass(v273))
      {
        swift_retain(v98);
        swift_retain(v273);
        sub_1000D18B8();
LABEL_80:
        swift_release_n(v98, 2);
LABEL_81:
        swift_release();
        swift_release();
LABEL_99:
        swift_unknownObjectRelease(v41);
        goto LABEL_40;
      }
      v169 = qword_1007F3450;
      swift_retain(v98);
      if (v169 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v170 = v280;
      sub_1000117A8(v280, (uint64_t)qword_100857618);
      v171 = sub_10000DF3C(&qword_1007FD430);
      v172 = type metadata accessor for LogMessage(0);
      v173 = swift_allocObject(v171, ((*(unsigned __int8 *)(*(_QWORD *)(v172 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v172 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v172 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v172 - 8) + 80) | 7);
      *(_OWORD *)(v173 + 16) = xmmword_10066FBA0;
      v174 = 0xD000000000000060;
      v175 = "Provided BaseObjectGraph is not an ObjectGraph, not running UserNotificationsAuthorizationAction";
      goto LABEL_98;
    }
    type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction();
    if (swift_dynamicCastClass(v98))
    {
      type metadata accessor for ObjectGraph(0);
      v167 = swift_dynamicCastClass(v273);
      if (v167)
      {
        v168 = v167;
        swift_retain(v98);
        swift_retain(v273);
        sub_100475F40(v168);
        goto LABEL_80;
      }
      v181 = qword_1007F3450;
      swift_retain(v98);
      if (v181 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v170 = v280;
      sub_1000117A8(v280, (uint64_t)qword_100857618);
      v182 = sub_10000DF3C(&qword_1007FD430);
      v183 = type metadata accessor for LogMessage(0);
      v173 = swift_allocObject(v182, ((*(unsigned __int8 *)(*(_QWORD *)(v183 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v183 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v183 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v183 - 8) + 80) | 7);
      *(_OWORD *)(v173 + 16) = xmmword_10066FBA0;
      v174 = 0xD00000000000006BLL;
      v175 = "Provided BaseObjectGraph is not an ObjectGraph, not running UserNotificationsAuthorizationWithPrewarmAction";
LABEL_98:
      LogMessage.init(stringLiteral:)(v174, (unint64_t)(v175 - 32) | 0x8000000000000000);
      Logger.info(_:)(v173, v170, &protocol witness table for OSLogger);
      swift_release_n(v98, 2);
      swift_bridgeObjectRelease(v173);
      goto LABEL_99;
    }
    type metadata accessor for UpdateGranularNotificationSettingsAction(0);
    v176 = swift_dynamicCastClass(v98);
    if (v176)
    {
      v177 = v176;
      type metadata accessor for ObjectGraph(0);
      v178 = swift_dynamicCastClass(v273);
      if (v178)
      {
        v179 = v178;
        swift_retain(v98);
        v180 = swift_retain(v273);
        sub_1003DE70C(v177, v179, v180);
        swift_release_n(v98, 2);
        goto LABEL_81;
      }
      v193 = qword_1007F3450;
      swift_retain(v98);
      if (v193 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v170 = v280;
      sub_1000117A8(v280, (uint64_t)qword_100857618);
      v194 = sub_10000DF3C(&qword_1007FD430);
      v195 = type metadata accessor for LogMessage(0);
      v173 = swift_allocObject(v194, ((*(unsigned __int8 *)(*(_QWORD *)(v195 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v195 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v195 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v195 - 8) + 80) | 7);
      *(_OWORD *)(v173 + 16) = xmmword_10066FBA0;
      v174 = 0xD000000000000064;
      v175 = "Provided BaseObjectGraph is not an ObjectGraph, not running UpdateGranularNotificationSettingsAction";
      goto LABEL_98;
    }
    type metadata accessor for FlowAction(0);
    v184 = swift_dynamicCastClass(v98);
    if (v184)
    {
      v185 = v184;
      v186 = swift_retain(v98);
      FlowAction.page.getter(v186);
      v187 = *(void (**)(char *, _QWORD, uint64_t))(v266 + 104);
      v188 = v269;
      v187(v265, enum case for FlowPage.arcadeWelcome(_:), v269);
      v189 = sub_10000E99C((unint64_t *)&unk_1007F79F0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPage, (uint64_t)&protocol conformance descriptor for FlowPage);
      dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v188, v189);
      dispatch thunk of RawRepresentable.rawValue.getter(&v310, v188, v189);
      v190 = v305;
      v191 = v311;
      if (aBlock == v310 && v305 == v311)
      {
        v192 = 1;
        v191 = v305;
      }
      else
      {
        v192 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v305, v310, v311, 0);
      }
      swift_bridgeObjectRelease(v190);
      v198 = swift_bridgeObjectRelease(v191);
      v199 = *(void (**)(char *, uint64_t, __n128))(v266 + 8);
      v200 = v269;
      v199(v265, v269, v198);
      ((void (*)(char *, uint64_t))v199)(v264, v200);
      if ((v192 & 1) != 0)
      {
        sub_10002EA08(v185, (uint64_t)v277, v201);
        v114 = v41;
        goto LABEL_39;
      }
      FlowAction.page.getter(v201);
      v202 = v269;
      v187(v267, enum case for FlowPage.gameCenterDashboard(_:), v269);
      dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v202, v189);
      dispatch thunk of RawRepresentable.rawValue.getter(&v310, v202, v189);
      v203 = v305;
      v204 = v311;
      if (aBlock == v310 && v305 == v311)
      {
        v205 = swift_bridgeObjectRelease_n(v305, 2);
        v206 = v269;
        v199(v267, v269, v205);
        ((void (*)(char *, uint64_t))v199)(v268, v206);
      }
      else
      {
        v207 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v305, v310, v311, 0);
        swift_bridgeObjectRelease(v203);
        v208 = swift_bridgeObjectRelease(v204);
        v209 = v269;
        v199(v267, v269, v208);
        ((void (*)(char *, uint64_t))v199)(v268, v209);
        if ((v207 & 1) == 0)
        {
          sub_10002F110(v185, (uint64_t)v277, v210);
          v114 = v41;
          goto LABEL_39;
        }
      }
      type metadata accessor for GameCenter(0);
      v211 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v213 = static OS_dispatch_queue.main.getter(v212);
      v307 = (void *)v211;
      v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
      aBlock = (void **)v213;
      static GameCenter.withLocalPlayer(on:_:)(&aBlock, sub_10002D3A4, 0, v214);
LABEL_110:
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&aBlock);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for TabChangeAction(0);
    v196 = swift_dynamicCastClass(v98);
    if (v196)
    {
      v197 = v196;
      swift_retain(v98);
      sub_10002AADC(v197, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for SheetAction(0);
    v215 = swift_dynamicCastClass(v98);
    if (v215)
    {
      v216 = v215;
      swift_retain(v98);
      sub_10002AC0C(v216, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for AlertAction(0);
    v217 = swift_dynamicCastClass(v98);
    if (v217)
    {
      v218 = v217;
      swift_retain(v98);
      sub_10002B980(v218, (uint64_t)v277, v273);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for AdTransparencyAction(0);
    if (swift_dynamicCastClass(v98))
    {
LABEL_117:
      swift_unknownObjectRelease(v41);
      goto LABEL_49;
    }
    type metadata accessor for ShareSheetAction(0);
    v219 = swift_dynamicCastClass(v98);
    if (v219)
    {
      v220 = v219;
      swift_retain(v98);
      sub_10002F524(v220, (uint64_t)v277);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for ReportConcernAction(0);
    v221 = swift_dynamicCastClass(v98);
    if (v221)
    {
      v222 = v221;
      swift_retain(v98);
      sub_10002F830(v222, (uint64_t)v277);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for ReviewSummaryReportConcernAction(0);
    v223 = swift_dynamicCastClass(v98);
    if (v223)
    {
      v224 = v223;
      swift_retain(v98);
      sub_10002F850(v224, (uint64_t)v277);
      v114 = v41;
      goto LABEL_39;
    }
    type metadata accessor for CompoundAction(0);
    if (!swift_dynamicCastClass(v98))
    {
      type metadata accessor for GameCenterDashboardAction();
      if (swift_dynamicCastClass(v98))
      {
        swift_retain(v98);
        sub_10002FADC();
        v114 = v41;
        goto LABEL_39;
      }
      type metadata accessor for GameCenterPlayerProfileAction(0);
      if (swift_dynamicCastClass(v98))
      {
        swift_retain(v98);
        sub_10002FCFC();
        v114 = v41;
        goto LABEL_39;
      }
      type metadata accessor for GameCenterAchievementsAction(0);
      v236 = swift_dynamicCastClass(v98);
      if (v236)
      {
        v237 = v236;
        type metadata accessor for GameCenter(0);
        v238 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
        v239 = swift_retain(v98);
        v240 = static OS_dispatch_queue.main.getter(v239);
        v307 = (void *)v238;
        v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
        aBlock = (void **)v240;
        v241 = (_QWORD *)swift_allocObject(&unk_100738870, 32, 7);
        v241[2] = v237;
        v242 = v274;
        v241[3] = v274;
        swift_retain(v98);
        v243 = swift_retain(v242);
        v244 = sub_100030284;
        goto LABEL_151;
      }
      type metadata accessor for GameCenterInvitePlayerAction(0);
      v226 = swift_dynamicCastClass(v98);
      if (v226)
      {
        v245 = v226;
        type metadata accessor for GameCenter(0);
        v246 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
        v247 = swift_retain(v98);
        v248 = static OS_dispatch_queue.main.getter(v247);
        v307 = (void *)v246;
        v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
        aBlock = (void **)v248;
        v241 = (_QWORD *)swift_allocObject(&unk_100738848, 40, 7);
        v249 = v273;
        v241[2] = v273;
        v241[3] = v245;
        v250 = v274;
        v241[4] = v274;
        swift_retain(v98);
        swift_retain(v250);
        v243 = swift_retain(v249);
        v244 = sub_100030248;
        goto LABEL_151;
      }
LABEL_147:
      type metadata accessor for GameCenterDenylistPlayerAction(v226);
      v252 = swift_dynamicCastClass(v98);
      if (v252)
      {
        v253 = v252;
        type metadata accessor for GameCenter(0);
        v254 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
        v255 = swift_retain(v98);
        v256 = static OS_dispatch_queue.main.getter(v255);
        v307 = (void *)v254;
        v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
        aBlock = (void **)v256;
        v257 = swift_retain(v98);
        static GameCenter.withLocalPlayer(on:_:)(&aBlock, sub_10003020C, v253, v257);
LABEL_152:
        swift_release();
        goto LABEL_110;
      }
      type metadata accessor for GameCenterLeaderboardsAction(0);
      v258 = swift_dynamicCastClass(v98);
      if (!v258)
      {
        if (sub_100029670())
        {
          dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(v98, v277, v273);
          swift_unknownObjectRelease(v41);
          swift_release();
          goto LABEL_49;
        }
        goto LABEL_117;
      }
      v259 = v258;
      type metadata accessor for GameCenter(0);
      v260 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v261 = swift_retain(v98);
      v262 = static OS_dispatch_queue.main.getter(v261);
      v307 = (void *)v260;
      v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
      aBlock = (void **)v262;
      v241 = (_QWORD *)swift_allocObject(&unk_100738820, 32, 7);
      v241[2] = v259;
      v263 = v274;
      v241[3] = v274;
      swift_retain(v98);
      v243 = swift_retain(v263);
      v244 = sub_100030204;
LABEL_151:
      static GameCenter.withLocalPlayer(on:_:)(&aBlock, v244, v241, v243);
      goto LABEL_152;
    }
    v225 = swift_retain(v98);
    v226 = CompoundAction.actions.getter(v225);
    v303 = v226;
    if (v226 >> 62)
    {
      if (v303 < 0)
        v251 = v303;
      else
        v251 = v303 & 0xFFFFFFFFFFFFFF8;
      v226 = _CocoaArrayWrapper.endIndex.getter(v251);
      v302 = v226;
      if (v226)
        goto LABEL_127;
    }
    else
    {
      v302 = *(_QWORD *)((v303 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v302)
      {
LABEL_127:
        if (v302 >= 1)
        {
          v227 = 0;
          v228 = v303 & 0xC000000000000001;
          v229 = enum case for ActionRunner.Origin.userInitiated(_:);
          v230 = v271;
          v231 = (uint64_t)v270;
          v232 = v272;
          do
          {
            if (v228)
            {
              v233 = specialized _ArrayBuffer._getElementSlowPath(_:)(v227, v303);
            }
            else
            {
              v233 = *(_QWORD *)(v303 + 8 * v227 + 32);
              v234 = swift_retain(v233);
            }
            ++v227;
            (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v230 + 104))(v231, v229, v232, v234);
            sub_100407E60(v233, (uint64_t)v277, v231, v273);
            v235 = swift_release();
            (*(void (**)(uint64_t, uint64_t, __n128))(v230 + 8))(v231, v232, v235);
          }
          while (v302 != v227);
          goto LABEL_145;
        }
        __break(1u);
        goto LABEL_147;
      }
    }
LABEL_145:
    swift_bridgeObjectRelease(v303);
    v114 = v116;
    goto LABEL_39;
  }
  swift_retain(v98);
  sub_1003346C8();
LABEL_38:
  v114 = v41;
LABEL_39:
  swift_unknownObjectRelease(v114);
  swift_release_n(v98, 2);
LABEL_40:
  (*(void (**)(char *, uint64_t))(v293 + 8))(v292, v294);
  return (*(uint64_t (**)(char *, uint64_t))(v284 + 8))(v295, v285);
}

uint64_t sub_10032C328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  objc_class *v9;
  _BYTE *v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[5];

  v4 = v3;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)&v17);

  if (!v18)
    return sub_100011088((uint64_t)&v17, (uint64_t *)&unk_100808370);
  sub_100010F3C(&v17, (uint64_t)v19);
  sub_1000194E4(a2, (uint64_t)&v17, &qword_1007F6E90);
  v9 = (objc_class *)type metadata accessor for HttpTemplateController();
  v10 = objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_okAction] = 0;
  v10[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_hasRequiredParameters] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_actionRunner] = v4;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_templateAction] = a1;
  sub_1000194E4((uint64_t)&v17, (uint64_t)&v10[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_actionSender], &qword_1007F6E90);
  v16.receiver = v10;
  v16.super_class = v9;
  swift_retain(a1);
  *(_QWORD *)&v11 = swift_retain(v4).n128_u64[0];
  v12 = objc_msgSendSuper2(&v16, "init", v11);
  sub_100011088((uint64_t)&v17, &qword_1007F6E90);
  v13 = type metadata accessor for ObjectGraph(0);
  v14 = swift_dynamicCastClassUnconditional(a3, v13, 0, 0, 0);
  sub_1004E02FC(v19, v14);

  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_10032C4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _BYTE v29[24];
  uint64_t v30;

  v4 = v3;
  v27 = a3;
  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AdamId(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2;
  sub_1000194E4(a2, (uint64_t)v29, &qword_1007F6E90);
  if (!v30)
  {
    v24 = v7;
    v25 = v6;
    sub_100011088((uint64_t)v29, &qword_1007F6E90);
LABEL_6:
    v17 = *(_QWORD *)(v4 + qword_100853F78 + 8);
    ObjectType = swift_getObjectType();
    OfferStateAction.adamId.getter(v19);
    v16 = dispatch thunk of AppStateController.stateMachine(forApp:)(v13, ObjectType, v17);
    v15 = v20;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v7 = v24;
    v6 = v25;
    goto LABEL_7;
  }
  v14 = sub_10000DF3C(&qword_1007F4B38);
  if (!swift_dynamicCast(v28, v29, (char *)&type metadata for Any + 8, v14, 6))
  {
    v24 = v7;
    v25 = v6;
    goto LABEL_6;
  }
  v16 = v28[0];
  v15 = v28[1];
LABEL_7:
  v21 = OfferStateAction.preferredActionFor(stateMachine:)(v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
  sub_100407E60(v21, v26, (uint64_t)v9, v27);
  swift_unknownObjectRelease(v16);
  v22 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v22);
}

uint64_t sub_10032C6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  char v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  int v50;
  __n128 v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, __n128);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  void (*v62)(char *, uint64_t);
  __n128 v64;
  char *v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  __n128 v75;
  uint64_t (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD v106[2];
  _BYTE v107[24];
  uint64_t v108;

  v100 = a3;
  v6 = type metadata accessor for ActionRunner.Origin(0);
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  __chkstk_darwin(v6);
  v90 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionMetrics(0, v8);
  __chkstk_darwin(v9);
  v89 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OpenableDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  v98 = v12;
  __chkstk_darwin(v11);
  v88 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - v15;
  v17 = type metadata accessor for LegacyAppState(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v95 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v99 = (char *)&v87 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v87 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v87 - v26;
  __chkstk_darwin(v28);
  v105 = (char *)&v87 - v29;
  v30 = (_QWORD *)type metadata accessor for AdamId(0);
  v101 = *(v30 - 1);
  v102 = v30;
  __chkstk_darwin(v30);
  v94 = (char *)&v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v87 - v33;
  v91 = a2;
  sub_1000194E4(a2, (uint64_t)v107, &qword_1007F6E90);
  v103 = v3;
  v96 = v16;
  if (v108)
  {
    v35 = sub_10000DF3C(&qword_1007F4B38);
    v36 = v18;
    if (swift_dynamicCast(v106, v107, (char *)&type metadata for Any + 8, v35, 6))
    {
      v38 = v106[0];
      v37 = v106[1];
      goto LABEL_6;
    }
  }
  else
  {
    v36 = v18;
    sub_100011088((uint64_t)v107, &qword_1007F6E90);
  }
  v39 = *(_QWORD *)(v3 + qword_100853F78 + 8);
  ObjectType = swift_getObjectType();
  OfferAction.adamId.getter(v41);
  v38 = dispatch thunk of AppStateController.stateMachine(forApp:)(v34, ObjectType, v39);
  v37 = v42;
  (*(void (**)(char *, id))(v101 + 8))(v34, v102);
LABEL_6:
  v43 = swift_getObjectType();
  v104 = a1;
  v44.n128_f64[0] = OfferAction.includeBetaApps.getter();
  v46 = v105;
  dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)(v45 & 1, v43, v37, v44);
  v47 = v36;
  v48 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v49 = v27;
  v48(v27, v46, v17);
  v50 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v27, v17);
  if (v50 != enum case for LegacyAppState.waiting(_:))
  {
    if (v50 == enum case for LegacyAppState.purchased(_:))
    {
      v54 = v99;
      v48(v99, v49, v17);
      (*(void (**)(char *, uint64_t))(v47 + 96))(v54, v17);
      v55 = type metadata accessor for PurchaseType(0);
      v56 = v47;
      v57 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v57 + 88))(v54, v55) != enum case for PurchaseType.preorder(_:))
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v55);
        goto LABEL_12;
      }
    }
    else if (v50 == enum case for LegacyAppState.updatable(_:) || v50 == enum case for LegacyAppState.downloadable(_:))
    {
      v48(v24, v27, v17);
      (*(void (**)(char *, uint64_t))(v47 + 96))(v24, v17);
      v51 = swift_bridgeObjectRelease(*((_QWORD *)v24 + 1));
      v56 = v47;
    }
    else
    {
      if (v50 == enum case for LegacyAppState.downloading(_:))
      {
        v48(v24, v27, v17);
        (*(void (**)(char *, uint64_t))(v47 + 96))(v24, v17);
        v52 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
        goto LABEL_8;
      }
      if (v50 == enum case for LegacyAppState.openable(_:))
      {
        v65 = v95;
        v48(v95, v27, v17);
        (*(void (**)(char *, uint64_t))(v47 + 96))(v65, v17);

        v66 = v97;
        v67 = v96;
        v68.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v98 + 32))(v96, v65, v97);
        v69 = v94;
        v70 = OfferAction.adamId.getter(v68);
        v71 = (void *)AdamId.numberValue.getter(v70);
        v72 = v69;
        v73 = v67;
        v74 = v98;
        (*(void (**)(char *, id))(v101 + 8))(v72, v102);
        if (v71)
        {
          v102 = v71;
          OfferAction.adamId.getter(v75);
          v76 = *(uint64_t (**)(char *, char *, uint64_t))(v74 + 16);
          v77 = v88;
          v78 = v76(v88, v73, v66);
          v79 = v89;
          static ActionMetrics.notInstrumented.getter(v78);
          v80 = type metadata accessor for OpenAppAction(0);
          swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
          v81 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(0, 0, v34, 1, v77, 0, v79);
          v83 = v92;
          v82 = v93;
          v84 = (uint64_t)v90;
          (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v90, enum case for ActionRunner.Origin.userInitiated(_:), v93);
          sub_100407E60(v81, v91, v84, v100);
          v66 = v97;
          swift_release();

          v85 = v84;
          v74 = v98;
          (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v85, v82);
        }
        v86 = swift_unknownObjectRelease(v38);
        (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v73, v66, v86);
        v62 = *(void (**)(char *, uint64_t))(v47 + 8);
        v62(v105, v17);
        return ((uint64_t (*)(char *, uint64_t))v62)(v49, v17);
      }
      v56 = v47;
      if (v50 != enum case for LegacyAppState.buyable(_:) && v50 != enum case for LegacyAppState.unknown(_:))
      {
LABEL_12:
        v58 = *(_QWORD *)(v103 + qword_100853F78 + 8);
        v59 = swift_getObjectType();
        OfferAction.adamId.getter(v60);
        dispatch thunk of AppStateController.refreshState(for:)(v34, v59, v58);
        v61 = swift_unknownObjectRelease(v38);
        (*(void (**)(char *, id, __n128))(v101 + 8))(v34, v102, v61);
        v62 = *(void (**)(char *, uint64_t))(v56 + 8);
        v62(v105, v17);
        return ((uint64_t (*)(char *, uint64_t))v62)(v49, v17);
      }
    }
    v53 = *(void (**)(char *, uint64_t, __n128))(v56 + 8);
    v53(v49, v17, v51);
    sub_10032F460(v104, v38, v37, v100);
    goto LABEL_20;
  }
  v48(v24, v27, v17);
  (*(void (**)(char *, uint64_t))(v47 + 96))(v24, v17);
  v52 = type metadata accessor for InstallationType(0);
LABEL_8:
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v24, v52);
  v53 = *(void (**)(char *, uint64_t, __n128))(v47 + 8);
  ((void (*)(char *, uint64_t))v53)(v27, v17);
  sub_100332E48(v104, 1, v38, v37);
LABEL_20:
  v64 = swift_unknownObjectRelease(v38);
  return ((uint64_t (*)(char *, uint64_t, __n128))v53)(v105, v17, v64);
}

void sub_10032CE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char *v36;
  __n128 v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  _QWORD *v47;
  void *v48;
  void **v49;
  uint64_t v50;
  uint64_t ObjectType;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __n128 v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void **v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void **v108;
  void **aBlock;
  uint64_t v110;
  uint64_t (*v111)(uint64_t);
  _QWORD *v112;
  uint64_t (*v113)(__n128);
  _QWORD *v114;

  v95 = a3;
  v91 = a2;
  v96 = (_QWORD *)*v3;
  v94 = type metadata accessor for ActionRunner.Origin(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetrics(0, v6);
  __chkstk_darwin(v7);
  v90 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for OpenableDestination(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v89 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LegacyAppState(0);
  v105 = *(_QWORD *)(v10 - 8);
  v106 = v10;
  __chkstk_darwin(v10);
  v104 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdamId(0);
  v101 = *(_QWORD *)(v12 - 8);
  v102 = v12;
  v13 = __chkstk_darwin(v12);
  v103 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSLogger(0, v13);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = InAppPurchaseAction.appBundleId.getter(v17);
  v22 = v21;
  v107 = a1;
  v23 = InAppPurchaseAction.productIdentifier.getter();
  v99 = v24;
  v100 = (void **)v23;
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v25 = sub_1000117A8(v15, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v25, v15);
  v26 = sub_10000DF3C(&qword_1007FD430);
  v27 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v28 = *(_QWORD *)(v27 + 72);
  v29 = *(unsigned __int8 *)(v27 + 80);
  v98 = v16;
  v30 = swift_allocObject(v26, ((v29 + 32) & ~v29) + 5 * v28, v29 | 7);
  v97 = v19;
  v31 = v30;
  *(_OWORD *)(v30 + 16) = xmmword_1006749A0;
  LogMessage.init(stringLiteral:)(0xD000000000000029, 0x8000000100634110);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100634140);
  v112 = &type metadata for String;
  aBlock = (void **)v20;
  v110 = v22;
  v32 = swift_bridgeObjectRetain(v22);
  static LogMessage.traceableSensitive(_:)(&aBlock, v32);
  sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
  LogMessage.init(stringLiteral:)(0x6D61644120504169, 0xEB000000003A4449);
  v112 = &type metadata for String;
  v34 = v99;
  v33 = (uint64_t)v100;
  aBlock = v100;
  v110 = v99;
  v35 = swift_bridgeObjectRetain(v99);
  static LogMessage.traceableSensitive(_:)(&aBlock, v35);
  sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
  v36 = v97;
  Logger.debug(_:)(v31, v15, &protocol witness table for OSLogger);
  v37 = swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t, __n128))(v98 + 8))(v36, v15, v37);
  swift_bridgeObjectRetain(v22);
  v38 = swift_bridgeObjectRetain(v34);
  v39 = InAppPurchaseAction.appTitle.getter(v38);
  v41 = v40;
  v42 = InAppPurchaseAction.productTitle.getter();
  v44 = v43;
  v45 = objc_allocWithZone((Class)SKPurchaseIntent);
  v46 = sub_100333968(v20, v22, v33, v34, v39, v41, v42, v44);
  v47 = (_QWORD *)swift_allocObject(&unk_100738A00, 48, 7);
  v47[2] = v20;
  v47[3] = v22;
  v47[4] = v33;
  v47[5] = v34;
  v113 = sub_1000CE0BC;
  v114 = v47;
  aBlock = _NSConcreteStackBlock;
  v110 = 1107296256;
  v111 = sub_1000BD6CC;
  v112 = &unk_100738A18;
  v48 = _Block_copy(&aBlock);
  objc_msgSend(v46, "send:", v48, swift_release().n128_f64[0]);
  _Block_release(v48);
  v49 = v108;
  v50 = *(uint64_t *)((char *)v108 + qword_100853F78 + 8);
  ObjectType = swift_getObjectType();
  v52 = v103;
  InAppPurchaseAction.appAdamId.getter(v53);
  v54 = dispatch thunk of AppStateController.stateMachine(forApp:)(v52, ObjectType, v50);
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v52, v102);
  v57 = swift_getObjectType();
  v58 = v104;
  v59 = dispatch thunk of AppStateMachine.currentState.getter(v57, v56);
  LOBYTE(v56) = LegacyAppState.isLocalApplication.getter(v59);
  v60 = (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v58, v106);
  if ((v56 & 1) != 0)
  {
    v61 = InAppPurchaseAction.minimumShortVersionSupportingInAppPurchaseFlow.getter(v60);
    if (v62)
    {
      v64 = v61;
      v65 = v62;
      InAppPurchaseAction.appBundleId.getter(v63);
      v67 = v66;
      v68 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v67);
      v69 = objc_msgSend((id)objc_opt_self(LSApplicationProxy), "applicationProxyForIdentifier:", v68);

      if (!v69)
      {
        __break(1u);
        return;
      }
      v70 = objc_msgSend(v69, "shortVersionString");

      if (v70)
      {
        v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
        v73 = v72;

        v74 = static VersionStringUtil.isShortVersionString(_:atLeast:)(v71, v73, v64, v65);
        swift_bridgeObjectRelease(v73);
        v75 = swift_bridgeObjectRelease(v65);
        if ((v74 & 1) != 0)
        {
          InAppPurchaseAction.appAdamId.getter(v75);
          v76 = v89;
          v77 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v87 + 104))(v89, enum case for OpenableDestination.app(_:), v88);
          v78 = v90;
          static ActionMetrics.notInstrumented.getter(v77);
          v79 = type metadata accessor for OpenAppAction(0);
          swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
          v80 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(0, 0, v52, 1, v76, 0, v78);
          v81 = v93;
          v82 = (uint64_t)v92;
          v83 = v94;
          (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v92, enum case for ActionRunner.Origin.userInitiated(_:), v94);
          sub_100407E60(v80, v91, v82, v95);
          swift_unknownObjectRelease(v54);
          swift_release();

          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v65);
      }
    }
  }
  v112 = v96;
  aBlock = v49;
  v84 = swift_retain(v49);
  v85 = InAppPurchaseAction.installRequiredAction.getter(v84);
  if (v85)
  {
    sub_100029820(v85, (uint64_t)&aBlock, v95);
    swift_unknownObjectRelease(v54);

    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(v54);

  }
  sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
}

void sub_10032D580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t updated;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  void (*v41)(void);
  double *v42;
  unint64_t v43;
  unint64_t v44;
  double *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  unint64_t v55;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  char *v65;
  void **v66;
  uint64_t *v67;
  char *v68;
  BOOL v69;
  void *v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  char *v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t ObjectType;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  double *v94;
  unint64_t v95;
  int64_t v96;
  char *v97;
  void *v98;
  Class isa;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  int64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  double *v122;
  uint64_t v123;
  void (*v124)(void);
  __int128 v125;
  _QWORD *v126;
  void **aBlock;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  uint64_t v132;

  v4 = v3;
  v6 = type metadata accessor for InstallationType(0);
  v118 = *(_QWORD *)(v6 - 8);
  v119 = v6;
  __chkstk_darwin(v6);
  v117 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AdamId(0);
  *(_QWORD *)&v125 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v116 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v103 - v11;
  __chkstk_darwin(v13);
  v123 = (uint64_t)&v103 - v14;
  v15 = sub_10000DF3C(&qword_1008083A0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v110 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v115 = (char *)&v103 - v19;
  __chkstk_darwin(v20);
  v109 = (char *)&v103 - v21;
  __chkstk_darwin(v22);
  v120 = (char *)&v103 - v23;
  __chkstk_darwin(v24);
  v121 = (char *)&v103 - v25;
  v27 = __chkstk_darwin(v26);
  v111 = (uint64_t)&v103 - v28;
  updated = UpdateAllAction.ordering.getter(v27);
  if (!updated)
  {
    v72 = *(void **)(v3 + qword_100853F98);
    v73 = swift_allocObject(&unk_100738A50, 32, 7);
    *(_QWORD *)(v73 + 16) = v3;
    *(_QWORD *)(v73 + 24) = a3;
    v131 = sub_10033548C;
    v132 = v73;
    aBlock = _NSConcreteStackBlock;
    v128 = 1107296256;
    v129 = sub_1004F4CFC;
    v130 = &unk_100738A68;
    v74 = _Block_copy(&aBlock);
    swift_retain(v4);
    swift_retain(a3);
    objc_msgSend(v72, "getUpdatesWithCompletionBlock:", v74, swift_release().n128_f64[0]);
    _Block_release(v74);
    return;
  }
  v30 = updated;
  v126 = &_swiftEmptySetSingleton;
  v114 = sub_100369DB0((uint64_t)_swiftEmptyArrayStorage);
  v31 = *(_QWORD *)(v30 + 16);
  v105 = v4;
  if (v31)
  {
    v107 = (uint64_t *)(v111 + *(int *)(v15 + 48));
    v32 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v104 = v30;
    v33 = v30 + v32;
    v106 = *(_QWORD *)(v16 + 72);
    v122 = _swiftEmptyArrayStorage;
    v34 = (uint64_t)v121;
    v108 = v12;
    do
    {
      v113 = v31;
      v112 = (char *)v33;
      v35 = v111;
      sub_1000194E4(v33, v111, &qword_1008083A0);
      v36 = *v107;
      v37 = v107[1];
      v38 = (uint64_t *)(v34 + *(int *)(v15 + 48));
      v39 = v125;
      v124 = *(void (**)(void))(v125 + 32);
      ((void (*)(uint64_t, uint64_t, uint64_t))v124)(v34, v35, v8);
      *v38 = v36;
      v38[1] = v37;
      v40 = (uint64_t *)&v120[*(int *)(v15 + 48)];
      v41 = *(void (**)(void))(v39 + 16);
      v41();
      *v40 = v36;
      v40[1] = v37;
      swift_bridgeObjectRetain_n(v37, 2);
      v42 = v122;
      if ((swift_isUniquelyReferenced_nonNull_native(v122) & 1) == 0)
        v42 = (double *)sub_100200A80(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
      v44 = *((_QWORD *)v42 + 2);
      v43 = *((_QWORD *)v42 + 3);
      if (v44 >= v43 >> 1)
        v42 = (double *)sub_100200A80((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
      *((_QWORD *)v42 + 2) = v44 + 1;
      v122 = v42;
      v45 = &v42[2 * v44];
      *((_QWORD *)v45 + 4) = v36;
      *((_QWORD *)v45 + 5) = v37;
      v46 = *(void (**)(char *, uint64_t))(v125 + 8);
      v46(v120, v8);
      v47 = (uint64_t)v109;
      v48 = (uint64_t *)&v109[*(int *)(v15 + 48)];
      v49 = v121;
      ((void (*)(char *, char *, uint64_t))v41)(v109, v121, v8);
      *v48 = v36;
      v48[1] = v37;
      v50 = v123;
      sub_10016E8E4(v123, v47);
      v46((char *)v50, v8);
      v51 = (uint64_t *)&v115[*(int *)(v15 + 48)];
      v41();
      *v51 = v36;
      v51[1] = v37;
      v52 = v15;
      v53 = (uint64_t *)&v110[*(int *)(v15 + 48)];
      ((void (*)(char *, char *, uint64_t))v41)(v110, v49, v8);
      *v53 = v36;
      v53[1] = v37;
      v54 = v108;
      v124();
      v55 = v114;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v114);
      aBlock = (void **)v55;
      v58 = sub_10036C324(v36, v37);
      v59 = *(_QWORD *)(v55 + 16);
      v60 = (v57 & 1) == 0;
      v61 = v59 + v60;
      if (__OFADD__(v59, v60))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v62 = v57;
      if (*(_QWORD *)(v55 + 24) >= v61)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_10010D1AC();
      }
      else
      {
        sub_100107B2C(v61, isUniquelyReferenced_nonNull_native);
        v63 = sub_10036C324(v36, v37);
        if ((v62 & 1) != (v64 & 1))
          goto LABEL_47;
        v58 = v63;
      }
      v65 = v54;
      v66 = aBlock;
      v15 = v52;
      if ((v62 & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 40))((char *)aBlock[7] + *(_QWORD *)(v125 + 72) * v58, v65, v8);
        v34 = (uint64_t)v121;
      }
      else
      {
        aBlock[(v58 >> 6) + 8] = (void *)((unint64_t)aBlock[(v58 >> 6) + 8] | (1 << v58));
        v67 = (uint64_t *)((char *)v66[6] + 16 * v58);
        *v67 = v36;
        v67[1] = v37;
        ((void (*)(char *, char *, uint64_t))v124)((char *)v66[7] + *(_QWORD *)(v125 + 72) * v58, v65, v8);
        v68 = (char *)v66[2];
        v69 = __OFADD__(v68, 1);
        v70 = v68 + 1;
        v34 = (uint64_t)v121;
        if (v69)
          goto LABEL_45;
        v66[2] = v70;
        swift_bridgeObjectRetain(v37);
      }
      v114 = (unint64_t)aBlock;
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_100011088(v34, &qword_1008083A0);
      v46(v115, v8);
      v33 = (uint64_t)&v112[v106];
      v31 = v113 - 1;
    }
    while (v113 != 1);
    swift_bridgeObjectRelease(v104);
    v71 = v126;
    v4 = v105;
  }
  else
  {
    swift_bridgeObjectRelease(v30);
    v122 = _swiftEmptyArrayStorage;
    v71 = &_swiftEmptySetSingleton;
  }
  v75 = v71[7];
  v112 = (char *)(v71 + 7);
  v76 = 1 << *((_BYTE *)v71 + 32);
  v77 = -1;
  if (v76 < 64)
    v77 = ~(-1 << v76);
  v78 = v77 & v75;
  v120 = (char *)(v4 + qword_100853F78);
  v113 = (unint64_t)(v76 + 63) >> 6;
  LODWORD(v115) = enum case for InstallationType.update(_:);
  v121 = (char *)v71;
  swift_bridgeObjectRetain(v71);
  v79 = 0;
  v80 = v125;
  v81 = v117;
  while (1)
  {
    if (v78)
    {
      v82 = __clz(__rbit64(v78));
      v78 &= v78 - 1;
      v124 = v79;
      v83 = v82 | ((_QWORD)v79 << 6);
      v84 = v121;
      goto LABEL_26;
    }
    v93 = (int64_t)v79 + 1;
    v84 = v121;
    v94 = v122;
    if (__OFADD__(v79, 1))
      goto LABEL_44;
    if (v93 >= v113)
    {
LABEL_42:
      swift_release();
      v98 = *(void **)(v105 + qword_100853F98);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v94);
      v100 = v126;
      v101 = swift_allocObject(&unk_100738AA0, 48, 7);
      *(_QWORD *)(v101 + 16) = v114;
      *(_QWORD *)(v101 + 24) = v100;
      v125 = *(_OWORD *)v120;
      *(_OWORD *)(v101 + 32) = v125;
      v131 = sub_1003354FC;
      v132 = v101;
      aBlock = _NSConcreteStackBlock;
      v128 = 1107296256;
      v129 = sub_10032FECC;
      v130 = &unk_100738AB8;
      v102 = _Block_copy(&aBlock);
      swift_unknownObjectRetain(v125);
      objc_msgSend(v98, "updateAllWithOrder:completionBlock:", isa, v102, swift_release().n128_f64[0]);
      _Block_release(v102);

      return;
    }
    v95 = *(_QWORD *)&v112[8 * v93];
    v96 = (int64_t)v79 + 1;
    if (!v95)
    {
      v96 = (int64_t)v79 + 2;
      if ((uint64_t)v79 + 2 >= v113)
        goto LABEL_42;
      v95 = *(_QWORD *)&v112[8 * v96];
      if (!v95)
      {
        v96 = (int64_t)v79 + 3;
        if ((uint64_t)v79 + 3 >= v113)
          goto LABEL_42;
        v95 = *(_QWORD *)&v112[8 * v96];
        if (!v95)
          break;
      }
    }
LABEL_41:
    v78 = (v95 - 1) & v95;
    v124 = (void (*)(void))v96;
    v83 = __clz(__rbit64(v95)) + (v96 << 6);
LABEL_26:
    v85 = v116;
    (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v116, *((_QWORD *)v84 + 6) + *(_QWORD *)(v80 + 72) * v83, v8);
    v86 = v8;
    v87 = v123;
    (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v123, v85, v86);
    v88 = *((_QWORD *)v120 + 1);
    ObjectType = swift_getObjectType();
    v91 = v118;
    v90 = v119;
    (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v81, v115, v119);
    dispatch thunk of AppStateController.setWaiting(for:installationType:)(v87, v81, ObjectType, v88);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v81, v90);
    v92 = v87;
    v8 = v86;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v92, v86);
    v79 = v124;
  }
  v97 = (char *)v79 + 4;
  if ((uint64_t)v79 + 4 >= v113)
    goto LABEL_42;
  v95 = *(_QWORD *)&v112[8 * (_QWORD)v97];
  if (v95)
  {
    v96 = (int64_t)v79 + 4;
    goto LABEL_41;
  }
  while (1)
  {
    v96 = (int64_t)(v97 + 1);
    if (__OFADD__(v97, 1))
      break;
    if (v96 >= v113)
      goto LABEL_42;
    v95 = *(_QWORD *)&v112[8 * v96];
    ++v97;
    if (v95)
      goto LABEL_41;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10032DF24(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _OWORD v62[2];

  v59 = a3;
  v56 = a2;
  v4 = sub_10000DF3C(&qword_1008083C8);
  __chkstk_darwin(v4);
  v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - v7;
  v9 = sub_10000DF3C((uint64_t *)&unk_1008083D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v58 = (uint64_t)&v52 - v13;
  v14 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AdamId(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v52 - v23;
  result = ArcadeAction.productId.getter(v22);
  if (v26)
  {
    v27 = v26;
    v55 = result;
    ArcadeAction.appAdamId.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      swift_bridgeObjectRelease(v27);
      return sub_100011088((uint64_t)v16, (uint64_t *)&unk_1008083B0);
    }
    else
    {
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v24, v16, v17);
      v29 = ArcadeAction.postSubscribeAction.getter(v28);
      v54 = v3;
      if (v29)
      {
        v30 = v29;
        v31 = swift_allocObject(&unk_1007388E8, 24, 7);
        v53 = v8;
        v32 = v31;
        swift_weakInit(v31 + 16);
        sub_1000194E4((uint64_t)v56, (uint64_t)v62, &qword_1007F6E90);
        v33 = (_QWORD *)swift_allocObject(&unk_100738C30, 72, 7);
        sub_10006C29C((uint64_t)v62, (uint64_t)(v33 + 2), &qword_1007F6E90);
        v34 = v59;
        v33[6] = v30;
        v33[7] = v34;
        v33[8] = v32;
        v8 = v53;
        v35 = swift_retain(v34);
        ArcadeSubscriptionManager.PaymentCallbacks.init(success:failure:)(sub_1003357E8, v33, 0, 0, v35);
        v36 = type metadata accessor for ArcadeSubscriptionManager.PaymentCallbacks(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 0, 1, v36);
        v37 = (uint64_t)v11;
        v38 = v58;
        sub_10006C29C(v37, v58, (uint64_t *)&unk_1008083D0);
      }
      else
      {
        v40 = type metadata accessor for ArcadeSubscriptionManager.PaymentCallbacks(0);
        v38 = v58;
        v39.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v58, 1, 1, v40);
      }
      v41 = type metadata accessor for ArcadeSubscriptionDecorator(0, v39);
      v42 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
      v43 = v42(v8, 1, 1, v41);
      ArcadeAction.subscriptionToken.getter(&v60, v43);
      if (v61)
      {
        sub_10003B8E8(&v60, v62);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v24, v17);
        sub_100010E9C((uint64_t)v62, (uint64_t)&v60);
        v44 = v59;
        swift_retain(v59);
        v45 = swift_bridgeObjectRetain(v27);
        v46 = v57;
        v56 = v42;
        v47 = v55;
        ArcadeSubscriptionDecorator.init(objectGraph:product:appAdamId:subscriptionToken:)(v44, v55, v27, v20, &v60, v45);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
        sub_100011088((uint64_t)v8, &qword_1008083C8);
        v56(v46, 0, 1, v41);
        v48 = (uint64_t)v46;
        v38 = v58;
        sub_10006C29C(v48, (uint64_t)v8, &qword_1008083C8);
      }
      else
      {
        sub_100011088((uint64_t)&v60, &qword_1007F6E90);
        v44 = v59;
        v47 = v55;
      }
      v49 = type metadata accessor for CommerceDialogHandler(0);
      v50 = type metadata accessor for BaseObjectGraph(0);
      inject<A, B>(_:from:)(v62, v49, v44, v49, v50);
      v51 = *(void **)&v62[0];
      ArcadeSubscriptionManager.purchaseSubscription(product:appAdamId:decorator:callbacks:dialogHandler:)(v47, v27, v24, v8, v38, *(_QWORD *)&v62[0]);
      swift_bridgeObjectRelease(v27);

      sub_100011088((uint64_t)v8, &qword_1008083C8);
      sub_100011088(v38, (uint64_t *)&unk_1008083D0);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v24, v17);
    }
  }
  return result;
}

uint64_t sub_10032E3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  double v33;
  __n128 v34;
  uint64_t v35;
  double v36;
  __n128 v37;
  char v38;
  double v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  _QWORD *v53;
  void (*v54)(_QWORD *, _QWORD, __n128);
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, __n128);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[5];

  v77 = a3;
  v81 = a2;
  v82 = a1;
  v3 = type metadata accessor for ActionRunner.Origin(0);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  __chkstk_darwin(v3);
  v78 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  __chkstk_darwin(v5);
  v73 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007FEC60);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - v15;
  v17 = type metadata accessor for LocalPreferences(0);
  static LocalPreferences.currentApplication.getter(v18);
  type metadata accessor for RateLimitedAction(0);
  static RateLimitedAction.preferencesKey.getter();
  v19 = sub_10000DF3C((uint64_t *)&unk_1008083E0);
  Preferences.subscript.getter(v84, v16, v17, v19, &protocol witness table for LocalPreferences);
  v20 = swift_release();
  v21 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
  v21(v16, v7, v20);
  v22 = v84[0];
  v23 = swift_bridgeObjectRelease(v84[0]);
  if (!v22)
  {
    static LocalPreferences.currentApplication.getter(v23);
    static RateLimitedAction.preferencesKey.getter();
    v84[0] = _swiftEmptyDictionarySingleton;
    Preferences.subscript.setter(v84, v16, v17, v19, &protocol witness table for LocalPreferences);
    v23 = swift_release();
  }
  static LocalPreferences.currentApplication.getter(v23);
  static RateLimitedAction.preferencesKey.getter();
  Preferences.subscript.getter(v84, v13, v17, v19, &protocol witness table for LocalPreferences);
  v24 = swift_release();
  v25 = ((uint64_t (*)(char *, uint64_t, __n128))v21)(v13, v7, v24);
  v27 = v84[0];
  if (!v84[0])
    goto LABEL_11;
  v28 = RateLimitedAction.actionKey.getter(v25);
  v30 = v29;
  if (!*(_QWORD *)(v27 + 16) || (v31 = sub_10036C324(v28, v29), (v32 & 1) == 0))
  {
    swift_bridgeObjectRelease(v27);
    v26 = swift_bridgeObjectRelease(v30);
LABEL_11:
    v37.n128_f64[0] = RateLimitedAction.rateLimit.getter(v25, v26);
    goto LABEL_12;
  }
  v33 = *(double *)(*(_QWORD *)(v27 + 56) + 8 * v31);
  swift_bridgeObjectRelease(v27);
  v34 = swift_bridgeObjectRelease(v30);
  v37.n128_f64[0] = RateLimitedAction.rateLimit.getter(v35, v34);
  if ((v38 & 1) == 0)
  {
    v39 = v36;
    v40 = v73;
    v41 = Date.init()(*(_QWORD *)&v36);
    v42 = Date.timeIntervalSince1970.getter(v41);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v40, v75);
    v37.n128_f64[0] = v42 - v33;
    if (v42 - v33 > v39)
    {
LABEL_12:
      static LocalPreferences.currentApplication.getter(v37);
      static RateLimitedAction.preferencesKey.getter();
      v52 = (void (*)(_QWORD, _QWORD))Preferences.subscript.modify(v84, v10, v17, v19, &protocol witness table for LocalPreferences);
      v54 = (void (*)(_QWORD *, _QWORD, __n128))v52;
      v55 = *v53;
      v76 = (uint64_t (*)(char *, uint64_t, __n128))v21;
      if (v55)
      {
        v56 = v53;
        v57 = v10;
        v58 = RateLimitedAction.actionKey.getter(v52);
        v60 = v59;
        v61 = v73;
        v62 = Date.init()(v58);
        v63 = Date.timeIntervalSince1970.getter(v62);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v61, v75);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v56);
        v83 = *v56;
        *v56 = 0x8000000000000000;
        sub_10010B86C(v58, v60, isUniquelyReferenced_nonNull_native, v63);
        v65 = *v56;
        *v56 = v83;
        swift_bridgeObjectRelease(v60);
        v66 = swift_bridgeObjectRelease(v65);
        v54(v84, 0, v66);
      }
      else
      {
        v57 = v10;
        v52(v84, 0);
      }
      v46 = v79;
      v45 = v80;
      v47 = v78;
      v67 = v77;
      v68 = swift_release();
      v69 = v76(v57, v7, v68);
      v70 = RateLimitedAction.primaryAction.getter(v69);
      (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v47, enum case for ActionRunner.Origin.userInitiated(_:), v45);
      v48 = v70;
      v49 = v81;
      v50 = (uint64_t)v47;
      v51 = v67;
      goto LABEL_16;
    }
  }
  result = RateLimitedAction.fallbackAction.getter(v37);
  if (!result)
    return result;
  v44 = result;
  v46 = v79;
  v45 = v80;
  v47 = v78;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for ActionRunner.Origin.userInitiated(_:), v80);
  v48 = v44;
  v49 = v81;
  v50 = (uint64_t)v47;
  v51 = v77;
LABEL_16:
  sub_100407E60(v48, v49, v50, v51);
  v71 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v47, v45, v71);
}

uint64_t sub_10032E884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (**v6)(_QWORD, _QWORD);
  __n128 v7;
  uint64_t v8;
  id *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v5 = type metadata accessor for ArcadeState(0);
  v6 = *(uint64_t (***)(_QWORD, _QWORD))(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (id *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  ArcadeSubscriptionManager.subscriptionState.getter(v7);
  v10 = ((uint64_t (**)(id *, uint64_t))v6)[11](v9, v5);
  if (v10 == enum case for ArcadeState.notSubscribed(_:))
  {
    v11 = ((uint64_t (**)(id *, uint64_t))v6)[12](v9, v5);
    v12 = ArcadeSubscriptionStateAction.notSubscribedAction.getter(v11);
    v13 = type metadata accessor for ArcadeIntroOfferState(0);
LABEL_7:
    result = (*(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
    goto LABEL_8;
  }
  v14 = v10;
  if (v10 == enum case for ArcadeState.purchasing(_:))
  {
    ((uint64_t (**)(id *, uint64_t))v6)[12](v9, v5);
    v15 = swift_release();
    result = ArcadeSubscriptionStateAction.purchasingAction.getter(v15);
    v12 = result;
    goto LABEL_8;
  }
  if (v10 == enum case for ArcadeState.subscribed(_:))
  {
    ((uint64_t (**)(id *, uint64_t))v6)[12](v9, v5);

    v9 = (id *)((char *)v9 + *(int *)(sub_10000DF3C(&qword_1008008F0) + 48));
    v12 = ArcadeSubscriptionStateAction.subscribedAction.getter();
    v13 = type metadata accessor for ArcadeTrialEnrolledState(0);
    goto LABEL_7;
  }
  v18 = enum case for ArcadeState.unknown(_:);
  result = ArcadeSubscriptionStateAction.unknownAction.getter();
  v12 = result;
  if (v14 != v18)
    result = ((uint64_t (**)(id *, uint64_t))v6)[1](v9, v5);
LABEL_8:
  if (v12)
  {
    swift_retain(v12);
    sub_100329538(v17, a2, a3);
    return swift_release_n(v12, 2);
  }
  return result;
}

void sub_10032EA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSURL *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  _BYTE v25[32];

  v23 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)ASCAppLaunchTrampoline), "init");
  AppLaunchTrampolineAction.bundleId.getter(v8);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  v12 = swift_bridgeObjectRelease(v10);
  AppLaunchTrampolineAction.payloadUrl.getter(v12);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) != 1)
  {
    URL._bridgeToObjectiveC()(v15);
    v16 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  }
  v18 = objc_msgSend(v8, "openApplicationWithBundleIdentifier:payloadURL:", v11, v16);

  v19 = swift_allocObject(&unk_1007388E8, 24, 7);
  swift_weakInit(v19 + 16);
  sub_1000194E4(v23, (uint64_t)v25, &qword_1007F6E90);
  v20 = (_QWORD *)swift_allocObject(&unk_100738C80, 72, 7);
  v20[2] = a1;
  v20[3] = v19;
  sub_10006C29C((uint64_t)v25, (uint64_t)(v20 + 4), &qword_1007F6E90);
  v20[8] = a3;
  aBlock[4] = sub_1003358F4;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10005553C;
  aBlock[3] = &unk_100738C98;
  v21 = _Block_copy(aBlock);
  swift_retain(a1);
  swift_retain(a3);
  objc_msgSend(v18, "addErrorBlock:", v21, swift_release().n128_f64[0]);
  _Block_release(v21);

}

uint64_t sub_10032EC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  _BYTE v18[32];
  __int128 v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[5];

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)&v19);

  if (!v20)
    return sub_100011088((uint64_t)&v19, (uint64_t *)&unk_100808370);
  sub_100010F3C(&v19, (uint64_t)v22);
  v8 = type metadata accessor for EventStoreManager();
  v9 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v19, v8, a3, v8, v9);
  v10 = (void *)v19;
  sub_10042D444();
  v11 = swift_allocObject(&unk_1007388E8, 24, 7);
  swift_weakInit(v11 + 16);
  sub_1000194E4(a2, (uint64_t)v18, &qword_1007F6E90);
  sub_100011020((uint64_t)v22, (uint64_t)&v19);
  v12 = (_QWORD *)swift_allocObject(&unk_100738CD0, 120, 7);
  v12[2] = a1;
  sub_10006C29C((uint64_t)v18, (uint64_t)(v12 + 3), &qword_1007F6E90);
  v12[7] = a3;
  v12[8] = v11;
  v12[9] = v10;
  sub_100010F3C(&v19, (uint64_t)(v12 + 10));
  v13 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  swift_retain(a1);
  swift_retain(a3);
  v14 = v10;
  v16 = static OS_dispatch_queue.main.getter(v15);
  v20 = v13;
  v21 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v19 = v16;
  Promise.then(perform:orCatchError:on:)(sub_100335958, v12, sub_100332078, 0, &v19);

  swift_release();
  swift_release();
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v19);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v22);
}

uint64_t sub_10032EE84(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD v37[3];
  uint64_t v38;

  v34 = a6;
  v35 = a3;
  v31 = a5;
  v32 = a4;
  v33 = type metadata accessor for ActionRunner.Origin(0);
  v30 = *(_QWORD *)(v33 - 8);
  v8 = __chkstk_darwin(v33);
  v29 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OSLogger(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a1;
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v14 = sub_1000117A8(v10, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = sub_10000DF3C(&qword_1007FD430);
  v16 = type metadata accessor for LogMessage(0);
  v17 = swift_allocObject(v15, ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))+ 6 * *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100671120;
  LogMessage.init(stringLiteral:)(0x6574656C706D6F43, 0xE900000000000064);
  v38 = type metadata accessor for HttpAction(0);
  v37[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v37);
  sub_100011088((uint64_t)v37, &qword_1007F6E90);
  LogMessage.init(stringLiteral:)(0x676E697375, 0xE500000000000000);
  v18 = type metadata accessor for Bag(0);
  v38 = v18;
  v19 = sub_1000117C0(v37);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v35, v18);
  static LogMessage.sensitive(_:)(v37);
  sub_100011088((uint64_t)v37, &qword_1007F6E90);
  LogMessage.init(stringLiteral:)(980709223, 0xE400000000000000);
  v38 = sub_100019574(0, &qword_100810CC0, AMSURLResult_ptr);
  v37[0] = v36;
  v20 = v36;
  static LogMessage.sensitive(_:)(v37);
  sub_100011088((uint64_t)v37, &qword_1007F6E90);
  Logger.debug(_:)(v17, v10, &protocol witness table for OSLogger);
  v21 = swift_bridgeObjectRelease(v17);
  v22 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v21);
  result = HttpAction.successAction.getter(v22);
  if (result)
  {
    v24 = result;
    v26 = (uint64_t)v29;
    v25 = v30;
    v27 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, enum case for ActionRunner.Origin.action(_:), v33);
    sub_100407E60(v24, v31, v26, v34);
    v28 = swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 8))(v26, v27, v28);
  }
  return result;
}

uint64_t sub_10032F1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[8];
  _QWORD v36[3];
  uint64_t v37;

  v29 = a3;
  v30 = a5;
  v28 = a4;
  v32 = a1;
  v31 = type metadata accessor for ActionRunner.Origin(0);
  v27 = *(_QWORD *)(v31 - 8);
  v6 = __chkstk_darwin(v31);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v13 = sub_1000117A8(v9, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10000DF3C(&qword_1007FD430);
  v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ 4 * *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_1006725D0;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x80000001006448B0);
  v37 = type metadata accessor for HttpAction(0);
  v36[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v36);
  sub_100011088((uint64_t)v36, &qword_1007F6E90);
  LogMessage.init(stringLiteral:)(0x3A6E6F73616572, 0xE700000000000000);
  swift_getErrorValue(v32, v35, &v33);
  v18 = v33;
  v17 = v34;
  v37 = v34;
  v19 = sub_1000117C0(v36);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v19, v18, v17);
  static LogMessage.sensitive(_:)(v36);
  sub_100011088((uint64_t)v36, &qword_1007F6E90);
  Logger.error(_:)(v16, v9, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v16);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  result = HttpAction.failureAction.getter(v21);
  if (result)
  {
    v23 = result;
    v24 = v27;
    v25 = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v8, enum case for ActionRunner.Origin.action(_:), v31);
    sub_100407E60(v23, v28, (uint64_t)v8, v30);
    v26 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v24 + 8))(v8, v25, v26);
  }
  return result;
}

uint64_t sub_10032F460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];

  v8 = sub_10000DF3C(&qword_100808380);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PurchaseIntent(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AdHeaderProvider();
  BaseObjectGraph.optional<A>(_:)(v34, v16, v16);
  if (v34[0])
  {
    swift_retain(v34[0]);
    v17 = sub_10000DF3C(&qword_100808388);
    Box.read<A>(with:)(v34, sub_10055B678, 0, v17);
    swift_release();
  }
  swift_unknownObjectRetain(a2);
  v18 = swift_retain(a1);
  PurchaseIntent.init(from:stateMachine:additionalHeaders:presentingSceneIdentifier:)(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_release();
    return sub_100011088((uint64_t)v11, &qword_100808380);
  }
  else
  {
    v33 = a4;
    v20.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    OfferAction.bundleId.getter(v20);
    if (v21
      && (v22 = v21,
          v23 = String._bridgeToObjectiveC()(),
          v24 = objc_msgSend((id)objc_opt_self(LSApplicationProxy), "applicationProxyForSystemPlaceholder:", v23), v24, v23, swift_bridgeObjectRelease(v22), v24))
    {
      sub_1003322B4(a1, a2, a3);
      v25 = swift_release();
    }
    else
    {
      dispatch thunk of Commerce.purchase(with:stateMachine:)(v15, a2, a3);
      v26 = swift_allocObject(&unk_1007388E8, 24, 7);
      swift_weakInit(v26 + 16);
      v27 = (_QWORD *)swift_allocObject(&unk_100738910, 40, 7);
      v27[2] = a1;
      v27[3] = v26;
      v28 = v33;
      v27[4] = v33;
      v29 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      swift_retain(a1);
      v30 = swift_retain(v28);
      v31 = static OS_dispatch_queue.main.getter(v30);
      v34[3] = v29;
      v34[4] = &protocol witness table for OS_dispatch_queue;
      v34[0] = v31;
      Promise.then(perform:orCatchError:on:)(sub_1003352A0, v27, sub_100332B58, 0, v34);
      swift_release();
      swift_release();
      swift_release();
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v34);
    }
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v25);
  }
}

void sub_10032F778(char a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  char *v58;
  void (*v59)(uint64_t, char *, uint64_t);
  uint64_t v60;
  uint64_t ObjectType;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  int64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  int64_t v87;
  unint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _QWORD *v105;

  v102 = a6;
  v103 = a7;
  v100 = a4;
  v101 = a2;
  v9 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdamId(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v94 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v95 = (char *)&v90 - v16;
  __chkstk_darwin(v17);
  v99 = (char *)&v90 - v18;
  __chkstk_darwin(v19);
  v98 = (uint64_t)&v90 - v20;
  v96 = v21;
  __chkstk_darwin(v22);
  v93 = (char *)&v90 - v23;
  v105 = &_swiftEmptySetSingleton;
  v91 = (uint64_t)a5;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v101 >> 62)
      goto LABEL_24;
    v24 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v101);
    for (; v24; v24 = _CocoaArrayWrapper.endIndex.getter(v47))
    {
      v25 = v101 & 0xC000000000000001;
      v26 = 4;
      v92 = (char *)v24;
      v97 = v101 & 0xC000000000000001;
      while (1)
      {
        v27 = v25
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26 - 4, v101)
            : *(id *)(v101 + 8 * v26);
        v28 = v27;
        v29 = v26 - 3;
        if (__OFADD__(v26 - 4, 1))
          break;
        if (objc_msgSend(v27, "status") == (id)1)
        {
          v30 = objc_msgSend(v28, "bundleID");
          if (!v30)
            goto LABEL_77;
          v31 = v30;
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
          v34 = v33;

          if (*(_QWORD *)(v100 + 16) && (v35 = sub_10036C324(v32, v34), (v36 & 1) != 0))
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v100 + 56) + *(_QWORD *)(v13 + 72) * v35, v12);
            v37 = 0;
          }
          else
          {
            v37 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v37, 1, v12);
          v38 = swift_bridgeObjectRelease(v34);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v38) == 1)
          {

            sub_100011088((uint64_t)v11, (uint64_t *)&unk_1008083B0);
          }
          else
          {
            v39 = v93;
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v93, v11, v12);
            v40 = v11;
            v41 = v99;
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v99, v39, v12);
            v42 = v98;
            v43 = (uint64_t)v41;
            v11 = v40;
            sub_10016E8E4(v98, v43);

            v44 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
            v44(v42, v12);
            v45 = v39;
            v24 = (uint64_t)v92;
            v44((uint64_t)v45, v12);
          }
          v25 = v97;
        }
        else
        {

        }
        ++v26;
        if (v29 == v24)
        {
          swift_bridgeObjectRelease(v101);
          v46 = v105;
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_24:
      if (v101 < 0)
        v47 = v101;
      else
        v47 = v101 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v101);
    }
    swift_bridgeObjectRelease(v101);
    v46 = &_swiftEmptySetSingleton;
  }
  else
  {
    v105 = a5;
    swift_bridgeObjectRetain(a5);
  }
LABEL_29:
  v48 = v46[7];
  v92 = (char *)(v46 + 7);
  v49 = 1 << *((_BYTE *)v46 + 32);
  v50 = -1;
  if (v49 < 64)
    v50 = ~(-1 << v49);
  v51 = v50 & v48;
  v93 = (char *)((unint64_t)(v49 + 63) >> 6);
  v97 = (unint64_t)v46;
  swift_bridgeObjectRetain(v46);
  v52 = 0;
  v53 = v98;
  v54 = v103;
  while (1)
  {
    if (v51)
    {
      v100 = (v51 - 1) & v51;
      v101 = v52;
      v55 = __clz(__rbit64(v51)) | (v52 << 6);
      v56 = v97;
      goto LABEL_33;
    }
    v70 = v52 + 1;
    v56 = v97;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    if (v70 >= (uint64_t)v93)
      goto LABEL_49;
    v71 = *(_QWORD *)&v92[8 * v70];
    v72 = v52 + 1;
    if (!v71)
    {
      v72 = v52 + 2;
      if (v52 + 2 >= (uint64_t)v93)
        goto LABEL_49;
      v71 = *(_QWORD *)&v92[8 * v72];
      if (!v71)
      {
        v72 = v52 + 3;
        if (v52 + 3 >= (uint64_t)v93)
          goto LABEL_49;
        v71 = *(_QWORD *)&v92[8 * v72];
        if (!v71)
          break;
      }
    }
LABEL_48:
    v100 = (v71 - 1) & v71;
    v101 = v72;
    v55 = __clz(__rbit64(v71)) + (v72 << 6);
LABEL_33:
    v57 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    v58 = v95;
    v57(v95, *(_QWORD *)(v56 + 48) + *(_QWORD *)(v13 + 72) * v55, v12);
    v59 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v59(v53, v58, v12);
    v60 = v102;
    ObjectType = swift_getObjectType();
    v62 = v13;
    v63 = v12;
    v64 = v99;
    v57(v99, v53, v63);
    v65 = *(unsigned __int8 *)(v62 + 80);
    v66 = (v65 + 32) & ~v65;
    v67 = swift_allocObject(&unk_100738AF0, v66 + v96, v65 | 7);
    *(_QWORD *)(v67 + 16) = v60;
    *(_QWORD *)(v67 + 24) = v54;
    v68 = v64;
    v12 = v63;
    v13 = v62;
    v59(v67 + v66, v68, v12);
    swift_unknownObjectRetain(v60);
    dispatch thunk of AppStateController.refreshDataSources(for:completion:)(v53, sub_1003352F4, v67, ObjectType, v54);
    v69 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v53, v12, v69);
    v51 = v100;
    v52 = v101;
  }
  v73 = v52 + 4;
  if (v52 + 4 < (uint64_t)v93)
  {
    v71 = *(_QWORD *)&v92[8 * v73];
    if (!v71)
    {
      while (1)
      {
        v72 = v73 + 1;
        if (__OFADD__(v73, 1))
          break;
        if (v72 >= (uint64_t)v93)
          goto LABEL_49;
        v71 = *(_QWORD *)&v92[8 * v72];
        ++v73;
        if (v71)
          goto LABEL_48;
      }
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    v72 = v52 + 4;
    goto LABEL_48;
  }
LABEL_49:
  swift_release();
  v74 = (uint64_t)v105;
  v75 = v91;
  if (v105[2] <= *(_QWORD *)(v91 + 16) >> 3)
  {
    v104 = (_BYTE *)v91;
    swift_bridgeObjectRetain(v91);
    sub_100333A64(v74);
    swift_bridgeObjectRelease(v74);
    v76 = v104;
  }
  else
  {
    swift_bridgeObjectRetain(v91);
    v76 = sub_100333CC8(v74, v75);
    swift_bridgeObjectRelease(v74);
  }
  v77 = 0;
  v78 = v76 + 56;
  v79 = 1 << v76[32];
  v80 = -1;
  if (v79 < 64)
    v80 = ~(-1 << v79);
  v81 = v80 & *((_QWORD *)v76 + 7);
  v82 = (unint64_t)(v79 + 63) >> 6;
  v83 = v94;
  while (2)
  {
    if (v81)
    {
      v84 = __clz(__rbit64(v81));
      v81 &= v81 - 1;
      v85 = v84 | (v77 << 6);
LABEL_56:
      (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v83, *((_QWORD *)v76 + 6) + *(_QWORD *)(v13 + 72) * v85, v12);
      v86 = swift_getObjectType();
      AppStateController.clearWaiting(for:)(v83, v86, v103);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v83, v12);
      continue;
    }
    break;
  }
  v87 = v77 + 1;
  if (__OFADD__(v77, 1))
    goto LABEL_74;
  if (v87 >= v82)
  {
LABEL_72:
    swift_release();
    return;
  }
  v88 = *(_QWORD *)&v78[8 * v87];
  ++v77;
  if (v88)
    goto LABEL_71;
  v77 = v87 + 1;
  if (v87 + 1 >= v82)
    goto LABEL_72;
  v88 = *(_QWORD *)&v78[8 * v77];
  if (v88)
    goto LABEL_71;
  v77 = v87 + 2;
  if (v87 + 2 >= v82)
    goto LABEL_72;
  v88 = *(_QWORD *)&v78[8 * v77];
  if (v88)
  {
LABEL_71:
    v81 = (v88 - 1) & v88;
    v85 = __clz(__rbit64(v88)) + (v77 << 6);
    goto LABEL_56;
  }
  v89 = v87 + 3;
  if (v89 >= v82)
    goto LABEL_72;
  v88 = *(_QWORD *)&v78[8 * v89];
  if (v88)
  {
    v77 = v89;
    goto LABEL_71;
  }
  while (1)
  {
    v77 = v89 + 1;
    if (__OFADD__(v89, 1))
      break;
    if (v77 >= v82)
      goto LABEL_72;
    v88 = *(_QWORD *)&v78[8 * v77];
    ++v89;
    if (v88)
      goto LABEL_71;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
}

void sub_10032FECC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, void *);
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v9 = sub_100019574(0, &qword_1008083A8, ASDJobResult_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  swift_retain(v7);
  v11 = a4;
  v8(a2, v10, a4);
  swift_release();
  swift_bridgeObjectRelease(v10);

}

void sub_10032FF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  __n128 v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  double *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  double *v45;
  char *v46;
  uint64_t v47;
  uint64_t updated;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _OWORD v62[2];

  v53 = a3;
  v54 = a2;
  v4 = sub_10000DF3C((uint64_t *)&unk_10080E250);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  __chkstk_darwin(v4);
  v61 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetrics(0, v6);
  __chkstk_darwin(v7);
  v52 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AdamId(0);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UpdatesSorter.Ordering(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v62[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v17 = _CocoaArrayWrapper.endIndex.getter(v27);
    v60 = v12;
    if (v17)
      goto LABEL_3;
LABEL_20:
    v25 = swift_bridgeObjectRelease(a1);
    v26 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  v60 = v12;
  if (!v17)
    goto LABEL_20;
LABEL_3:
  if (v17 < 1)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }
  v51 = v16;
  v55 = v14;
  for (i = 0; i != v17; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v21 = *(id *)(a1 + 8 * i + 32);
    v22 = v21;
    v23 = (unint64_t)objc_msgSend(v21, "updateState");
    if (v23 > 4 || ((1 << v23) & 0x19) == 0)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v19 = *(_QWORD *)(*(_QWORD *)&v62[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v22);
      specialized ContiguousArray._endMutation()(v20);
    }
  }
  v25 = swift_bridgeObjectRelease(a1);
  v26 = *(double **)&v62[0];
  v14 = v55;
  v16 = v51;
LABEL_21:
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, enum case for UpdatesSorter.Ordering.pendingUpdates(_:), v13, v25);
  v28 = static UpdatesSorter.sorted(updates:ordering:)(v26, v16);
  v29 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v29);
  if ((unint64_t)v28 >> 62)
    goto LABEL_37;
  v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v31 = _swiftEmptyArrayStorage;
    if (!v30)
      break;
    v55 = v28 & 0xC000000000000001;
    v32 = 4;
    while (1)
    {
      v33 = v55
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v28)
          : *(id *)(v28 + 8 * v32);
      v34 = v33;
      v35 = v32 - 3;
      if (__OFADD__(v32 - 4, 1))
        break;
      v36 = v28;
      AdamId.init(value:)(objc_msgSend(v33, "storeItemIdentifier"));
      v37 = objc_msgSend(v34, "bundleIdentifier");
      if (!v37)
        goto LABEL_42;
      v38 = v37;
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v41 = v40;

      v42 = (uint64_t *)(v61 + *(int *)(v59 + 48));
      (*(void (**)(void))(v56 + 32))();
      *v42 = v39;
      v42[1] = v41;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
        v31 = (double *)sub_10020215C(0, *((_QWORD *)v31 + 2) + 1, 1, (unint64_t)v31);
      v44 = *((_QWORD *)v31 + 2);
      v43 = *((_QWORD *)v31 + 3);
      v28 = v36;
      if (v44 >= v43 >> 1)
        v31 = (double *)sub_10020215C(v43 > 1, v44 + 1, 1, (unint64_t)v31);
      *((_QWORD *)v31 + 2) = v44 + 1;
      sub_10006C29C(v61, (uint64_t)v31+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v44, (uint64_t *)&unk_10080E250);

      ++v32;
      if (v35 == v30)
        goto LABEL_35;
    }
    __break(1u);
LABEL_37:
    if (v28 < 0)
      v49 = v28;
    else
      v49 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    v30 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v28);
  }
LABEL_35:
  swift_bridgeObjectRelease(v28);
  v45 = sub_100419F2C((uint64_t)v31);
  swift_bridgeObjectRelease(v31);
  v46 = v52;
  static ActionMetrics.notInstrumented.getter(v47);
  updated = type metadata accessor for UpdateAllAction(0);
  swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
  UpdateAllAction.init(ordering:actionMetrics:)(v45, v46);
  memset(v62, 0, sizeof(v62));
  sub_10032D580();
  swift_release();
  sub_100011088((uint64_t)v62, &qword_1007F6E90);
}

void sub_100330428(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t ObjectType;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  double v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD aBlock[6];
  _BYTE v90[40];

  v5 = v4;
  v85 = a3;
  v83 = a2;
  v8 = type metadata accessor for OSSignpostID(0);
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  __chkstk_darwin(v8);
  v86 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v74 - v11;
  v13 = type metadata accessor for AdamId(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v74 - v19;
  v21 = OpenAppAction.adamId.getter(v18);
  v22 = (void *)AdamId.numberValue.getter(v21);
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v20, v13);
  if (v22)
  {
    v82 = a4;
    v79 = v4;
    v25 = a1;
    v26 = *(_QWORD *)(v5 + qword_100853F78 + 8);
    v27 = v12;
    ObjectType = swift_getObjectType();
    v81 = v25;
    OpenAppAction.adamId.getter(v29);
    v30 = ObjectType;
    v31 = (uint64_t)v27;
    v32 = dispatch thunk of AppStateController.stateMachine(forApp:)(v16, v30, v26);
    v34 = v33;
    v23(v16, v13);
    v35 = swift_getObjectType();
    v80 = v32;
    v36 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter(v35, v34);
    v37 = v36 & v83;
    if ((v36 & v83 & 1) != 0)
      v38 = "RootActionRunner[ASDAppQuery.BetaApps]:handleOpenAppAction";
    else
      v38 = "RootActionRunner[ASDAppQuery]:handleOpenAppAction";
    if ((v37 & 1) != 0)
      v39 = 58;
    else
      v39 = 49;
    type metadata accessor for SignpostAggregator(0);
    v40 = static SignpostAggregator.log.getter();
    v41 = OSSignpostID.init(log:)(v40);
    v42 = static os_signpost_type_t.begin.getter(v41);
    v43 = (void *)static SignpostAggregator.log.getter();
    v78 = v38;
    v77 = v39;
    os_signpost(_:dso:log:name:signpostID:)(v42, &_mh_execute_header, v43, v38, v39, 2, v31);

    v44 = sub_10000DF3C(&qword_1007F5840);
    v45 = swift_allocObject(v44, 40, 7);
    *(_OWORD *)(v45 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v45 + 32) = v22;
    v83 = v37;
    aBlock[0] = v45;
    specialized Array._endMutation()(v45);
    v46 = aBlock[0];
    if ((v37 & 1) != 0)
      v47 = &selRef_queryForBetaAppsWithStoreItemIDs_;
    else
      v47 = &selRef_queryForStoreItemIDs_;
    sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    v75 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v46);
    v76 = objc_msgSend((id)objc_opt_self(ASDAppQuery), *v47, isa);

    v74 = swift_allocObject(&unk_1007388E8, 24, 7);
    swift_weakInit(v74 + 16);
    v53 = v87;
    v54 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v31, v88);
    sub_1000194E4(v85, (uint64_t)v90, &qword_1007F6E90);
    v55 = *(unsigned __int8 *)(v53 + 80);
    v56 = (v55 + 33) & ~v55;
    v57 = v56 + v84;
    v58 = (v56 + v84) & 0xFFFFFFFFFFFFFFF8;
    v59 = (v58 + 23) & 0xFFFFFFFFFFFFFFF8;
    v60 = (v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    v61 = (v60 + 39) & 0xFFFFFFFFFFFFFFF8;
    v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
    v63 = swift_allocObject(&unk_100738B18, v62 + 8, v55 | 7);
    v85 = v31;
    v64 = v63;
    v65 = v58 + v63;
    v66 = v77;
    *(_QWORD *)(v63 + 16) = v78;
    *(_QWORD *)(v63 + 24) = v66;
    *(_BYTE *)(v63 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v63 + v56, v86, v54);
    *(_BYTE *)(v64 + v57) = v83 & 1;
    *(_QWORD *)(v65 + 8) = v74;
    v67 = v81;
    *(_QWORD *)(v64 + v59) = v81;
    sub_10006C29C((uint64_t)v90, v64 + v60, &qword_1007F6E90);
    v68 = v82;
    *(_QWORD *)(v64 + v61) = v82;
    v69 = v75;
    *(_QWORD *)(v64 + v62) = v75;
    aBlock[4] = sub_1003356A0;
    aBlock[5] = v64;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100331664;
    aBlock[3] = &unk_100738B30;
    v70 = _Block_copy(aBlock);
    v71 = v69;
    swift_retain(v67);
    swift_retain(v68);
    *(_QWORD *)&v72 = swift_release().n128_u64[0];
    v73 = v76;
    objc_msgSend(v76, "executeQueryWithResultHandler:", v70, v72);
    _Block_release(v70);

    swift_unknownObjectRelease(v80);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v85, v88);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v48 = type metadata accessor for OSLogger(0, v24);
    sub_1000117A8(v48, (uint64_t)qword_100857618);
    v49 = sub_10000DF3C(&qword_1007FD430);
    v50 = type metadata accessor for LogMessage(0);
    v51 = swift_allocObject(v49, ((*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v50 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) | 7);
    *(_OWORD *)(v51 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000036, 0x8000000100644A60);
    Logger.error(_:)(v51, v48, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v51);
  }
}

void sub_1003309C4(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  void **v33;
  uint64_t v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void *v40;
  void *v41;
  void *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  __n128 v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void **v61;
  void **aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  void *v65;
  void (*v66)(uint64_t);
  _QWORD *v67;
  char v68[32];

  v60 = a8;
  v61 = a13;
  v58 = a12;
  v59 = a10;
  v19 = type metadata accessor for OSLogger(0, a2);
  v55 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v54 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for OpenableDestination(0);
  v56 = *(_QWORD *)(v21 - 8);
  v57 = v21;
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a9 + 16;
  v26 = static os_signpost_type_t.end.getter(v22);
  type metadata accessor for SignpostAggregator(0);
  v27 = (void *)static SignpostAggregator.log.getter();
  os_signpost(_:dso:log:name:signpostID:)(v26, &_mh_execute_header, v27, a4, a5, a6, a7);

  if (!a1)
  {
LABEL_18:
    if ((v60 & 1) != 0)
    {
      swift_beginAccess(v25, &aBlock, 0, 0);
      if (swift_weakLoadStrong(v25))
      {
        sub_100330428(v59, 0, a11, v58);
        swift_release();
      }
      return;
    }
    if (qword_1007F3450 == -1)
    {
LABEL_22:
      v45 = sub_1000117A8(v19, (uint64_t)qword_100857618);
      v47 = v54;
      v46 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v45, v19);
      v48 = sub_10000DF3C(&qword_1007FD430);
      v49 = type metadata accessor for LogMessage(0);
      v50 = swift_allocObject(v48, ((*(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v49 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80) | 7);
      *(_OWORD *)(v50 + 16) = xmmword_10066F860;
      LogMessage.init(stringLiteral:)(0xD000000000000016, 0x8000000100644B20);
      v65 = (void *)sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
      aBlock = v61;
      v51 = v61;
      static LogMessage.traceableSensitive(_:)(&aBlock, v52);
      sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
      LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001006449C0);
      Logger.error(_:)(v50, v19, &protocol witness table for OSLogger);
      v53 = swift_bridgeObjectRelease(v50);
      (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v47, v19, v53);
      return;
    }
LABEL_26:
    swift_once(&qword_1007F3450, sub_10060243C);
    goto LABEL_22;
  }
  if (!((unint64_t)a1 >> 62))
  {
    v28 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v28)
      goto LABEL_4;
    goto LABEL_17;
  }
  if (a1 >= 0)
    v44 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v44 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v44))
  {
LABEL_17:
    swift_bridgeObjectRelease(a1);
    goto LABEL_18;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_26;
  }
  v29 = *(id *)(a1 + 32);
LABEL_7:
  v30 = v29;
  swift_bridgeObjectRelease(a1);
  v31 = swift_allocObject(&unk_1007388E8, 24, 7);
  swift_beginAccess(v25, v68, 0, 0);
  swift_weakLoadStrong(v25);
  swift_weakInit(v31 + 16);
  swift_release();
  v32 = (_QWORD *)swift_allocObject(&unk_100738B68, 40, 7);
  v33 = v61;
  v32[2] = v61;
  v32[3] = v31;
  v34 = v58;
  v32[4] = v58;
  v35 = v33;
  swift_retain(v34);
  OpenAppAction.destination.getter(v36);
  v38 = v56;
  v37 = v57;
  v39 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v24, v57);
  if (v39 == enum case for OpenableDestination.app(_:))
  {
    v40 = (void *)objc_opt_self(ASDAppLibrary);
    v66 = sub_100335784;
    v67 = v32;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100129140;
    v65 = &unk_100738BA8;
    v41 = _Block_copy(&aBlock);
    swift_retain(v32);
    objc_msgSend(v40, "launchApp:withResultHandler:", v30, v41, swift_release().n128_f64[0]);
LABEL_11:

    swift_release();
    _Block_release(v41);
    return;
  }
  if (v39 == enum case for OpenableDestination.messages(_:))
  {
    v42 = (void *)objc_opt_self(ASDAppLibrary);
    v66 = sub_100335784;
    v67 = v32;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100129140;
    v65 = &unk_100738B80;
    v41 = _Block_copy(&aBlock);
    swift_retain(v32);
    objc_msgSend(v42, "launchMessagesExtensionForApp:withResultHandler:", v30, v41, swift_release().n128_f64[0]);
    goto LABEL_11;
  }

  v43 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v24, v37, v43);
}

void sub_100330F18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[3];
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;

  v45 = a3;
  v46 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0, v8);
  v47 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSLogger(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v36 = sub_1000117A8(v15, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v36, v15);
    v37 = sub_10000DF3C(&qword_1007FD430);
    v38 = type metadata accessor for LogMessage(0);
    v39 = swift_allocObject(v37, ((*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v38 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) | 7);
    *(_OWORD *)(v39 + 16) = xmmword_10066F870;
    LogMessage.init(stringLiteral:)(0xD000000000000013, 0x8000000100644B40);
    v49 = (void *)sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    aBlock[0] = a2;
    v40 = a2;
    static LogMessage.traceableSensitive(_:)(aBlock, v41);
    sub_100011088((uint64_t)aBlock, &qword_1007F6E90);
    Logger.error(_:)(v39, v15, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v39);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else if (a1 == 1)
  {
    v43 = v11;
    v44 = v7;
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v19 = sub_1000117A8(v15, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
    v20 = sub_10000DF3C(&qword_1007FD430);
    v21 = type metadata accessor for LogMessage(0);
    v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
    *(_OWORD *)(v22 + 16) = xmmword_10066F870;
    LogMessage.init(stringLiteral:)(0xD000000000000017, 0x8000000100644B60);
    v49 = (void *)sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    aBlock[0] = a2;
    v23 = a2;
    static LogMessage.traceableSensitive(_:)(aBlock, v24);
    sub_100011088((uint64_t)aBlock, &qword_1007F6E90);
    Logger.error(_:)(v22, v15, &protocol witness table for OSLogger);
    v25 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v25);
    sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter(v26);
    v28 = swift_allocObject(&unk_100738BE0, 32, 7);
    v30 = v45;
    v29 = v46;
    *(_QWORD *)(v28 + 16) = v45;
    *(_QWORD *)(v28 + 24) = v29;
    v50 = sub_10033579C;
    v51 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    v49 = &unk_100738BF8;
    v31 = _Block_copy(aBlock);
    swift_retain(v30);
    swift_retain(v29);
    v32 = swift_release();
    static DispatchQoS.unspecified.getter(v32);
    aBlock[0] = _swiftEmptyArrayStorage;
    v33 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v34 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
    v35 = sub_100033D68();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v6, v33);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v6);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v43);
  }
}

uint64_t sub_1003313D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  char v34[24];

  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AlertActionStyle(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v34, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v18 = result;
    v19._object = (void *)0x8000000100644B80;
    v31 = v4;
    v19._countAndFlagsBits = 0xD000000000000021;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v21 = localizedString(_:comment:)(v19, v20);
    v30 = v5;
    v32 = a2;
    v22._countAndFlagsBits = 0xD000000000000023;
    v22._object = (void *)0x8000000100644BB0;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v24 = localizedString(_:comment:)(v22, v23);
    static ActionMetrics.notInstrumented.getter(v24._countAndFlagsBits);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for AlertActionStyle.normal(_:), v9);
    v25 = type metadata accessor for AlertAction(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)(v21._countAndFlagsBits, v21._object, v24._countAndFlagsBits, v24._object, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 1, v12, 0, 0, 1, 0, v16);
    v33[3] = type metadata accessor for RootActionRunner(0);
    v33[0] = v18;
    v28 = v30;
    v27 = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v31);
    swift_retain(v18);
    sub_100407E60(v26, (uint64_t)v33, (uint64_t)v8, v32);
    swift_release();
    v29 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v8, v27, v29);
    return sub_100011088((uint64_t)v33, &qword_1007F6E90);
  }
  return result;
}

double sub_100331664(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100019574(0, &qword_100808398, ASDApp_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_1003316F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  double result;
  void *v11;
  _BYTE v12[24];
  uint64_t v13;

  sub_1000194E4(a1, (uint64_t)v12, &qword_1007F6E90);
  if (v13)
  {
    v8 = sub_100019574(0, (unint64_t *)&qword_100800038, UIResponder_ptr);
    if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v11;
      if (UIResponder.nearestActionRunner.getter())
      {
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a2, a1, a3);

        goto LABEL_9;
      }

    }
  }
  else
  {
    sub_100011088((uint64_t)v12, &qword_1007F6E90);
  }
  swift_beginAccess(a4 + 16, v12, 0, 0);
  if (!swift_weakLoadStrong(a4 + 16))
    return result;
  sub_100329538(a2, a1, a3);
LABEL_9:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100331808(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  Swift::String v19;
  __n128 v20;
  _QWORD v22[4];

  v3 = type metadata accessor for LogMessage.StringInterpolation(0, a2);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSLogger(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v11 = sub_1000117A8(v7, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10000DF3C(&qword_1007FD430);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
  v15._object = (void *)0x8000000100644C00;
  v15._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v16 = type metadata accessor for PreorderStatus(0);
  v22[3] = v16;
  v17 = sub_1000117C0(v22);
  v18.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v17, a1, v16);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v22, v18);
  sub_100011088((uint64_t)v22, &qword_1007F6E90);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  LogMessage.init(stringInterpolation:)(v6);
  Logger.info(_:)(v14, v7, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v20);
}

uint64_t sub_100331A04(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  Swift::String v24;
  __n128 v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[8];
  _QWORD v32[4];

  v7 = type metadata accessor for LogMessage.StringInterpolation(0, a4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v15 = sub_1000117A8(v11, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1);
  v19._object = (void *)0x8000000100644BE0;
  v19._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  swift_getErrorValue(a1, v31, &v29);
  v20 = v29;
  v21 = v30;
  v32[3] = v30;
  v22 = sub_1000117C0(v32);
  v23.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, v20, v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v32, v23);
  sub_100011088((uint64_t)v32, &qword_1007F6E90);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v10);
  Logger.error(_:)(v18, v11, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
  v26 = *(_QWORD *)(a2 + qword_100853F78 + 8);
  ObjectType = swift_getObjectType();
  return AppStateController.clearWaiting(for:)(a3, ObjectType, v26);
}

double sub_100331C40(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[8];
  _QWORD v30[4];

  v26 = a6;
  v9 = type metadata accessor for OSLogger(0, a2);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v13 = sub_1000117A8(v9, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10000DF3C(&qword_1007FD430);
  v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ 2 * *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100630AF0);
  swift_getErrorValue(a1, v29, &v27);
  v17 = v27;
  v18 = v28;
  v30[3] = v28;
  v19 = sub_1000117C0(v30);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
  static LogMessage.sensitive(_:)(v30);
  sub_100011088((uint64_t)v30, &qword_1007F6E90);
  Logger.error(_:)(v16, v9, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v16);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  v22 = AppLaunchTrampolineAction.fallbackAction.getter(v21);
  if (v22)
  {
    v24 = v22;
    swift_beginAccess(a4 + 16, v30, 0, 0);
    if (swift_weakLoadStrong(a4 + 16))
    {
      sub_100329538(v24, a5, v26);
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100331E60(_BYTE *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t CalendarEvent;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _BYTE v20[24];
  uint64_t v21;

  if (*a1 != 1)
  {
    CalendarEvent = CreateCalendarEventAction.notAuthorizedAction.getter(a2);
    if (!CalendarEvent)
      return result;
    v16 = CalendarEvent;
    sub_1000194E4(a4, (uint64_t)v20, &qword_1007F6E90);
    if (v21)
    {
      v17 = sub_100019574(0, (unint64_t *)&qword_100800038, UIResponder_ptr);
      if ((swift_dynamicCast(&v19, v20, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
      {
        v18 = v19;
        if (UIResponder.nearestActionRunner.getter())
        {
          dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(v16, a4, a5);

          goto LABEL_14;
        }

      }
    }
    else
    {
      sub_100011088((uint64_t)v20, &qword_1007F6E90);
    }
    swift_beginAccess(a6 + 16, v20, 0, 0);
    if (!swift_weakLoadStrong(a6 + 16))
    {
LABEL_15:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
    sub_100329538(v16, a4, a5);
LABEL_14:
    swift_release();
    goto LABEL_15;
  }
  if (qword_1007F2A50 != -1)
    swift_once(&qword_1007F2A50, sub_10042D584);
  v6 = qword_10080E820;
  v7 = unk_10080E828;
  sub_100011064(qword_10080E808, qword_10080E820);
  v8 = sub_10000DF3C(&qword_1007FD430);
  v9 = type metadata accessor for LogMessage(0);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100644C60);
  Logger.error(_:)(v10, v6, v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_100332078(uint64_t a1, __n128 a2)
{
  return sub_100332B74(a1, 0xD00000000000003ALL, 0x8000000100644C20, a2);
}

uint64_t sub_100332094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  _BYTE v26[8];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0, v6);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_weakInit(v26);
  swift_weakDestroy(v14);
  v15 = swift_allocObject(&unk_100738CF8, 32, 7);
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_1003359B4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100738D10;
  v16 = _Block_copy(aBlock);
  swift_retain(a3);
  swift_errorRetain(a1);
  v17 = swift_release();
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v20 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

void sub_1003322B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t ObjectType;
  int v28;
  __n128 v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  __n128 v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  double v49;
  id v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD aBlock[7];

  v4 = v3;
  v58 = a2;
  *(_QWORD *)&v59 = a3;
  v6 = type metadata accessor for LegacyAppState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for InstallationType(0);
  v61 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v62 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for AdamId(0);
  v11 = *(_QWORD *)(v60 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v60);
  v56 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v51 - v15;
  OfferAction.bundleId.getter(v14);
  if (v17)
  {
    v18 = v17;
    v54 = a1;
    v55 = v4;
    swift_bridgeObjectRetain(v17);
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend((id)objc_opt_self(LSApplicationProxy), "applicationProxyForSystemPlaceholder:", v19);

    swift_bridgeObjectRelease(v18);
    if (v20)
    {
      v21 = objc_allocWithZone((Class)ASDSystemAppRequest);
      v22 = String._bridgeToObjectiveC()();
      v23 = objc_msgSend(v21, "initWithBundleID:", v22, swift_bridgeObjectRelease(v18).n128_f64[0]);

      v25 = OfferAction.adamId.getter(v24);
      v26 = (void *)AdamId.numberValue.getter(v25);
      v52 = *(void (**)(char *, uint64_t))(v11 + 8);
      v52(v16, v60);
      objc_msgSend(v23, "setStoreItemID:", v26);

      v53 = v23;
      objc_msgSend(v23, "setUserInitiated:", 1);
      ObjectType = swift_getObjectType();
      dispatch thunk of AppStateMachine.currentState.getter(ObjectType, v59);
      v28 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      v51 = v11;
      if (v28 == enum case for LegacyAppState.downloadable(_:))
      {
        (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
        v29 = swift_bridgeObjectRelease(*((_QWORD *)v9 + 1));
        (*(void (**)(char *, _QWORD, uint64_t, __n128))(v61 + 104))(v62, enum case for InstallationType.redownload(_:), v57, v29);
        v30 = v55;
      }
      else
      {
        v31 = *(void (**)(char *, _QWORD, uint64_t))(v61 + 104);
        v30 = v55;
        if (v28 == enum case for LegacyAppState.buyable(_:) || v28 == enum case for LegacyAppState.unknown(_:))
        {
          v31(v62, enum case for InstallationType.purchase(_:), v57);
        }
        else
        {
          v31(v62, enum case for InstallationType.unknown(_:), v57);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
      }
      v32 = dispatch thunk of AppStateMachine.appStateController.getter(ObjectType, v59);
      if (v32)
      {
        v34 = v32;
        v35 = v33;
      }
      else
      {
        v34 = *(_QWORD *)(v30 + qword_100853F78);
        v35 = *(_QWORD *)(v30 + qword_100853F78 + 8);
        swift_unknownObjectRetain(v34);
      }
      v36 = v30;
      v37 = swift_getObjectType();
      OfferAction.adamId.getter(v38);
      dispatch thunk of AppStateController.setWaiting(for:installationType:)(v16, v62, v37, v35);
      v39 = v60;
      v40 = v52;
      v41.n128_f64[0] = ((double (*)(char *, uint64_t))v52)(v16, v60);
      OfferAction.adamId.getter(v41);
      v42 = v51;
      v43 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      v59 = *(_OWORD *)(v36 + qword_100853F78);
      v44 = v56;
      v43(v56, v16, v39);
      v45 = *(unsigned __int8 *)(v42 + 80);
      v46 = (v45 + 32) & ~v45;
      v47 = swift_allocObject(&unk_100738938, v46 + v12, v45 | 7);
      *(_OWORD *)(v47 + 16) = v59;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v47 + v46, v44, v39);
      aBlock[4] = sub_1003352B0;
      aBlock[5] = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002B92C;
      aBlock[3] = &unk_100738950;
      v48 = _Block_copy(aBlock);
      swift_unknownObjectRetain(v59);
      *(_QWORD *)&v49 = swift_release().n128_u64[0];
      v50 = v53;
      objc_msgSend(v53, "startWithErrorHandler:", v48, v49);
      _Block_release(v48);
      swift_unknownObjectRelease(v34);

      v40(v16, v39);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v57);
    }
    else
    {
      swift_bridgeObjectRelease(v18);
    }
  }
}

double sub_100332790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  unint64_t v26;
  Class isa;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  NSString v37;
  id v38;
  _BYTE v41[104];
  _OWORD v42[2];
  _BYTE v43[32];

  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for PurchaseResult(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == enum case for PurchaseResult.askToBuy(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    v19 = *(_QWORD *)v16;
    v20 = *((_QWORD *)v16 + 1);
    v21 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v22 = (void *)static AskToBuyRequestNotificationDetails.notificationName.getter();
    v23 = sub_10000DF3C(&qword_1007F98D0);
    inited = swift_initStackObject(v23, v41);
    *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
    *(_QWORD *)&v42[0] = static AskToBuyRequestNotificationDetails.adamIdKey.getter();
    *((_QWORD *)&v42[0] + 1) = v25;
    AnyHashable.init<A>(_:)(v42, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = type metadata accessor for AdamId(0);
    sub_1000117C0((_QWORD *)(inited + 72));
    AdamId.init(value:)(v19, v20);
    v26 = sub_100369F50(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "postNotificationName:object:userInfo:", v22, 0, isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

    return result;
  }
  if (v17 != enum case for PurchaseResult.completed(_:))
  {
    if (v17 != enum case for PurchaseResult.canceled(_:) && v17 != enum case for PurchaseResult.unknown(_:))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return result;
  }
  v28 = (*(uint64_t (**)(char *, uint64_t))(v13 + 96))(v16, v12);
  v29 = v16[2];
  v30 = OfferAction.buyCompletedAction.getter(v28);
  if (v30)
  {
    v31 = v30;
    swift_beginAccess(a3 + 16, v43, 0, 0);
    if (!swift_weakLoadStrong(a3 + 16))
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
      if (v29)
        goto LABEL_8;
      return result;
    }
    memset(v42, 0, sizeof(v42));
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for ActionRunner.Origin.userInitiated(_:), v7);
    sub_100407E60(v31, (uint64_t)v42, (uint64_t)v11, a4);
    swift_release();
    v32 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v32);
    sub_100011088((uint64_t)v42, &qword_1007F6E90);
  }
  if (v29)
  {
LABEL_8:
    v33 = type metadata accessor for InAppMessagesManager();
    v34 = type metadata accessor for BaseObjectGraph(0);
    inject<A, B>(_:from:)(v42, v33, a4, v33, v34);
    v35 = *(void **)(*(_QWORD *)&v42[0] + 16);
    v36 = objc_allocWithZone((Class)IAMCountableEvent);
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v36, "initWithName:", v37);

    objc_msgSend(v35, "receiveEvent:", v38);
    sub_1000E3D90();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100332B58(uint64_t a1, __n128 a2)
{
  return sub_100332B74(a1, 0xD00000000000001BLL, 0x80000001006448D0, a2);
}

uint64_t sub_100332B74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[8];
  _QWORD v23[4];

  v7 = type metadata accessor for OSLogger(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v11 = sub_1000117A8(v7, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10000DF3C(&qword_1007FD430);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(a2, a3);
  swift_getErrorValue(a1, v22, &v20);
  v15 = v20;
  v16 = v21;
  v23[3] = v21;
  v17 = sub_1000117C0(v23);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v17, v15, v16);
  static LogMessage.sensitive(_:)(v23);
  sub_100011088((uint64_t)v23, &qword_1007F6E90);
  Logger.error(_:)(v14, v7, &protocol witness table for OSLogger);
  v18 = swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v18);
}

uint64_t sub_100332D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = type metadata accessor for AdamId(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  if (!a1)
    return AppStateController.clearWaiting(for:)(a4, ObjectType, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_100738988, v14 + v10, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v11, v8);
  swift_unknownObjectRetain(a2);
  dispatch thunk of AppStateController.refreshDataSources(for:completion:)(a4, sub_1003352F4, v15, ObjectType, a3);
  return swift_release(v15);
}

void sub_100332E48(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  __n128 v21;
  uint64_t ObjectType;
  int v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  double v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  const char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD aBlock[7];

  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  v72 = v9;
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v69 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - v12;
  v14 = type metadata accessor for AdamId(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a1;
  v19 = OfferAction.adamId.getter(v16);
  v20 = (void *)AdamId.numberValue.getter(v19);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v20)
  {
    ObjectType = swift_getObjectType();
    v23 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter(ObjectType, a4) & a2;
    if ((v23 & 1) != 0)
      v24 = "RootActionRunner[ASDAppQuery.BetaApps]:cancelAction";
    else
      v24 = "RootActionRunner[ASDAppQuery]:cancelAction";
    if ((v23 & 1) != 0)
      v25 = 51;
    else
      v25 = 42;
    type metadata accessor for SignpostAggregator(0);
    v26 = static SignpostAggregator.log.getter();
    v27 = OSSignpostID.init(log:)(v26);
    v28 = static os_signpost_type_t.begin.getter(v27);
    v29 = (void *)static SignpostAggregator.log.getter();
    v63 = v25;
    v64 = v24;
    os_signpost(_:dso:log:name:signpostID:)(v28, &_mh_execute_header, v29, v24, v25, 2, v13);

    v30 = sub_10000DF3C(&qword_1007F5840);
    v31 = swift_allocObject(v30, 40, 7);
    *(_OWORD *)(v31 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v31 + 32) = v20;
    v65 = v23;
    v66 = a4;
    v67 = a3;
    aBlock[0] = v31;
    specialized Array._endMutation()(v31);
    v32 = aBlock[0];
    if ((v23 & 1) != 0)
      v33 = &selRef_queryForBetaAppsWithStoreItemIDs_;
    else
      v33 = &selRef_queryForStoreItemIDs_;
    sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    v61 = v20;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    v62 = objc_msgSend((id)objc_opt_self(ASDAppQuery), *v33, isa);

    v60 = swift_allocObject(&unk_1007388E8, 24, 7);
    swift_weakInit(v60 + 16);
    v39 = v71;
    v40 = v72;
    v41 = v69;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v13, v71);
    v42 = *(unsigned __int8 *)(v40 + 80);
    v43 = (v42 + 33) & ~v42;
    v44 = v43 + v10;
    v45 = (v43 + v10) & 0xFFFFFFFFFFFFFFF8;
    v68 = v13;
    v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
    v49 = swift_allocObject(&unk_1007389B0, v48 + 8, v42 | 7);
    v50 = v63;
    *(_QWORD *)(v49 + 16) = v64;
    *(_QWORD *)(v49 + 24) = v50;
    *(_BYTE *)(v49 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v49 + v43, v41, v39);
    *(_BYTE *)(v49 + v44) = v65 & 1;
    v51 = v61;
    *(_QWORD *)(v45 + v49 + 8) = v60;
    v52 = v70;
    *(_QWORD *)(v49 + v46) = v70;
    v53 = (_QWORD *)(v49 + v47);
    v54 = v66;
    v55 = v67;
    *v53 = v67;
    v53[1] = v54;
    *(_QWORD *)(v49 + v48) = v51;
    aBlock[4] = sub_1003353AC;
    aBlock[5] = v49;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100331664;
    aBlock[3] = &unk_1007389C8;
    v56 = _Block_copy(aBlock);
    v57 = v51;
    swift_retain(v52);
    swift_unknownObjectRetain(v55);
    *(_QWORD *)&v58 = swift_release().n128_u64[0];
    v59 = v62;
    objc_msgSend(v62, "executeQueryWithResultHandler:", v56, v58);
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v68, v39);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v34 = type metadata accessor for OSLogger(0, v21);
    sub_1000117A8(v34, (uint64_t)qword_100857618);
    v35 = sub_10000DF3C(&qword_1007FD430);
    v36 = type metadata accessor for LogMessage(0);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000003ELL, 0x80000001006448F0);
    Logger.error(_:)(v37, v34, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v37);
  }
}

void sub_100333308(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  __n128 v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;

  v50 = a12;
  v51 = a13;
  v48 = a10;
  v49 = a11;
  v20 = type metadata accessor for OSLogger(0, a2);
  v53 = *(_QWORD *)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v52 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = static os_signpost_type_t.end.getter(v21);
  type metadata accessor for SignpostAggregator(0);
  v24 = (void *)static SignpostAggregator.log.getter();
  os_signpost(_:dso:log:name:signpostID:)(v23, &_mh_execute_header, v24, a4, a5, a6, a7);

  if (a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v38 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v38 = a1;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v38))
        goto LABEL_4;
    }
    else
    {
      v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v25)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_7:
          v27 = v26;
          v28 = objc_msgSend(v26, "progress", swift_bridgeObjectRelease(a1).n128_f64[0]);
          if (v28)
          {
            v50 = v28;
            objc_msgSend(v28, "cancel");

          }
          else
          {
            if (qword_1007F3450 != -1)
              swift_once(&qword_1007F3450, sub_10060243C);
            v29 = sub_1000117A8(v20, (uint64_t)qword_100857618);
            v31 = v52;
            v30 = v53;
            (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v29, v20);
            v32 = sub_10000DF3C(&qword_1007FD430);
            v33 = type metadata accessor for LogMessage(0);
            v34 = swift_allocObject(v32, ((*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) | 7);
            *(_OWORD *)(v34 + 16) = xmmword_10066F860;
            LogMessage.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001006449A0);
            v55 = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
            v54[0] = v51;
            v35 = v51;
            static LogMessage.traceableSensitive(_:)(v54, v36);
            sub_100011088((uint64_t)v54, &qword_1007F6E90);
            LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x80000001006449E0);
            Logger.error(_:)(v34, v20, &protocol witness table for OSLogger);

            v37 = swift_bridgeObjectRelease(v34);
            (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v31, v20, v37);
          }
          return;
        }
        if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v26 = *(id *)(a1 + 32);
          goto LABEL_7;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease(a1);
  }
  if ((a8 & 1) == 0)
  {
    if (qword_1007F3450 == -1)
    {
LABEL_21:
      v39 = sub_1000117A8(v20, (uint64_t)qword_100857618);
      v41 = v52;
      v40 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v39, v20);
      v42 = sub_10000DF3C(&qword_1007FD430);
      v43 = type metadata accessor for LogMessage(0);
      v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
      *(_OWORD *)(v44 + 16) = xmmword_10066F860;
      LogMessage.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001006449A0);
      v55 = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
      v54[0] = v51;
      v45 = v51;
      static LogMessage.traceableSensitive(_:)(v54, v46);
      sub_100011088((uint64_t)v54, &qword_1007F6E90);
      LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001006449C0);
      Logger.error(_:)(v44, v20, &protocol witness table for OSLogger);
      v47 = swift_bridgeObjectRelease(v44);
      (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v41, v20, v47);
      return;
    }
LABEL_25:
    swift_once(&qword_1007F3450, sub_10060243C);
    goto LABEL_21;
  }
  swift_beginAccess(a9 + 16, v54, 0, 0);
  if (swift_weakLoadStrong(a9 + 16))
  {
    sub_100332E48(v48, 0, v49, v50);
    swift_release();
  }
}

uint64_t sub_1003337E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_100853F70;
  v2 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100853F78));

  swift_release(*(_QWORD *)(v0 + qword_100853F88));
  swift_release(*(_QWORD *)(v0 + qword_100853F90));

  return swift_release(*(_QWORD *)(v0 + qword_100808300));
}

uint64_t sub_100333880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = ActionRunner.deinit();
  swift_unknownObjectUnownedDestroy(v0 + qword_1007F4DD8);
  v1 = v0 + qword_100853F70;
  v2 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100853F78));

  swift_release(*(_QWORD *)(v0 + qword_100853F88));
  swift_release(*(_QWORD *)(v0 + qword_100853F90));

  swift_release(*(_QWORD *)(v0 + qword_100808300));
  return v0;
}

uint64_t sub_100333940()
{
  uint64_t v0;

  v0 = sub_100333880();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100333960()
{
  return type metadata accessor for RootActionRunner(0);
}

id sub_100333968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  NSString v13;
  NSString v14;
  NSString v15;
  NSString v16;
  id v17;

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
  {
    v15 = 0;
    if (a8)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  if (!a8)
    goto LABEL_5;
LABEL_3:
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a8);
LABEL_6:
  v17 = objc_msgSend(v8, "initWithBundleId:productIdentifier:appName:productName:", v13, v14, v15, v16);

  return v17;
}

void sub_100333A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AdamId(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v13 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_24;
      v22 = *(_QWORD *)(v25 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_24;
        v22 = *(_QWORD *)(v25 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v17)
            goto LABEL_24;
          v22 = *(_QWORD *)(v25 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1000B8EC4((uint64_t)v9, (uint64_t)v5);
    sub_100011088((uint64_t)v5, (uint64_t *)&unk_1008083B0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release();
    return;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_100333CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;

  v4 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AdamId(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v63 = (char *)&v57 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v64 = a1;
  v65 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v66 = v15;
  v67 = 0;
  v68 = v17 & v14;
  v62 = (char *)(a2 + 56);
  v22 = v18;
  v23 = swift_bridgeObjectRetain(v18);
  v24 = 0;
  v58 = v6;
  v61 = a2;
  v59 = v20;
  v60 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v25 = (v20 - 1) & v20;
  v26 = __clz(__rbit64(v20)) | (v24 << 6);
  v27 = v24;
  v28 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v26, v7, v23);
  v29 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v29, 1, v7);
    v64 = v22;
    v65 = v28;
    v66 = v21;
    v67 = v27;
    v68 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100172A9C(v22);
      sub_100011088((uint64_t)v6, (uint64_t *)&unk_1008083B0);
      return (void *)v61;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v63, v6, v7);
    v33 = v61;
    v34 = *(_QWORD *)(v61 + 40);
    v35 = sub_10000E99C(&qword_1007F9268, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v7, v35);
    v37 = -1 << *(_BYTE *)(v33 + 32);
    v38 = v36 & ~v37;
    if (((*(_QWORD *)&v62[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) != 0)
      break;
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v45(v63, v7);
    v24 = v67;
    v20 = v68;
    v22 = v64;
    v19 = v65;
    v21 = v66;
    v6 = v58;
    v59 = v68;
    v60 = v67;
    if (v68)
      goto LABEL_6;
LABEL_8:
    v27 = v24 + 1;
    if (__OFADD__(v24, 1))
      __break(1u);
    v28 = v19;
    v30 = (unint64_t)(v21 + 64) >> 6;
    if (v27 >= v30)
      goto LABEL_26;
    v31 = *(_QWORD *)(v19 + 8 * v27);
    if (v31)
      goto LABEL_11;
    v24 += 2;
    if (v27 + 1 >= v30)
      goto LABEL_36;
    v31 = *(_QWORD *)(v19 + 8 * v24);
    if (v31)
      goto LABEL_14;
    if (v27 + 2 >= v30)
    {
LABEL_26:
      v25 = 0;
      v29 = 1;
      v27 = v24;
    }
    else
    {
      v31 = *(_QWORD *)(v19 + 8 * (v27 + 2));
      if (v31)
      {
        v27 += 2;
        goto LABEL_11;
      }
      v24 = v27 + 3;
      if (v27 + 3 >= v30)
      {
        v25 = 0;
        v29 = 1;
        v27 += 2;
      }
      else
      {
        v31 = *(_QWORD *)(v19 + 8 * v24);
        if (v31)
        {
LABEL_14:
          v27 = v24;
LABEL_11:
          v25 = (v31 - 1) & v31;
          v26 = __clz(__rbit64(v31)) + (v27 << 6);
          goto LABEL_7;
        }
        v27 += 4;
        if (v27 >= v30)
          goto LABEL_26;
        v31 = *(_QWORD *)(v19 + 8 * v27);
        if (v31)
          goto LABEL_11;
        v27 = v30 - 1;
        v32 = v60 + 6;
        while (v30 != v32)
        {
          v31 = *(_QWORD *)(v19 + 8 * v32++);
          if (v31)
          {
            v27 = v32 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v25 = 0;
        v29 = 1;
      }
    }
  }
  v39 = v33;
  v40 = ~v37;
  v41 = *(_QWORD *)(v8 + 72);
  v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v42(v10, *(_QWORD *)(v39 + 48) + v41 * v38, v7);
    v43 = sub_10000E99C(&qword_1008083C0, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v44 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v63, v7, v43);
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
    v45(v10, v7);
    if ((v44 & 1) != 0)
      break;
    v38 = (v38 + 1) & v40;
    if (((*(_QWORD *)&v62[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v45)(v63, v7);
  v47 = *(_BYTE *)(v39 + 32);
  v48 = v47 & 0x3F;
  v49 = (1 << v47) + 63;
  v50 = v49 >> 6;
  v51 = 8 * (v49 >> 6);
  if (v48 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v49 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v62, v51);
    sub_100334284((unint64_t *)((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0)), v50, v39, v38, &v64);
    v53 = v52;
    swift_release();
    sub_100172A9C(v64);
  }
  else
  {
    v55 = (void *)swift_slowAlloc(v51, -1);
    memcpy(v55, v62, v51);
    sub_100334284((unint64_t *)v55, v50, v39, v38, &v64);
    v53 = v56;
    swift_release();
    sub_100172A9C(v64);
    swift_slowDealloc(v55, -1, -1);
  }
  return (void *)v53;
}

void sub_100334284(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  char v42;
  int64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;

  v51 = a2;
  v9 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdamId(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v59 = (char *)&v50 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v53 = a1;
  v54 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v57 = a3 + 56;
  v58 = a3;
  v55 = a5;
  while (2)
  {
    v52 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v56 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12, v17);
          v31 = 0;
          goto LABEL_8;
        }
        v43 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        v44 = (unint64_t)(v27 + 64) >> 6;
        if (v43 >= v44)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v45 = *(_QWORD *)(v25 + 8 * v43);
        if (v45)
          goto LABEL_17;
        if (v26 + 2 >= v44)
          goto LABEL_34;
        v45 = *(_QWORD *)(v25 + 8 * (v26 + 2));
        if (v45)
        {
          v43 = v26 + 2;
LABEL_17:
          v29 = (v45 - 1) & v45;
          v30 = __clz(__rbit64(v45)) + (v43 << 6);
          v26 = v43;
          goto LABEL_7;
        }
        if (v26 + 3 >= v44)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v45 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v45)
        {
          v43 = v26 + 3;
          goto LABEL_17;
        }
        v43 = v26 + 4;
        if (v26 + 4 < v44)
        {
          v45 = *(_QWORD *)(v25 + 8 * v43);
          if (v45)
            goto LABEL_17;
          v43 = v44 - 1;
          v48 = v26 + 5;
          while (v44 != v48)
          {
            v45 = *(_QWORD *)(v25 + 8 * v48++);
            if (v45)
            {
              v43 = v48 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v43;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v56;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_100011088((uint64_t)v11, (uint64_t *)&unk_1008083B0);
          v49 = v58;
          swift_retain(v58);
          sub_1005FE5F0(v53, v51, v52, v49);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v59, v11, v12);
        v32 = v58;
        v33 = *(_QWORD *)(v58 + 40);
        v34 = sub_10000E99C(&qword_1007F9268, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
        v35 = dispatch thunk of Hashable._rawHashValue(seed:)(v33, v12, v34);
        v36 = -1 << *(_BYTE *)(v32 + 32);
        v37 = v35 & ~v36;
        if (((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
          break;
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        v23(v59, v12);
        v11 = v54;
        a5 = v55;
      }
      v38 = ~v36;
      v39 = *(_QWORD *)(v13 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v40(v15, *(_QWORD *)(v58 + 48) + v39 * v37, v12);
        v41 = sub_10000E99C(&qword_1008083C0, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
        v42 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v59, v12, v41);
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
        v23(v15, v12);
        if ((v42 & 1) != 0)
          break;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_4;
      }
      v23(v59, v12);
      v46 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v54;
      v47 = *(unint64_t *)((char *)v53 + v46);
      *(unint64_t *)((char *)v53 + v46) = v47 & ~(1 << v37);
      a5 = v55;
    }
    while ((v47 & (1 << v37)) == 0);
    v22 = v52 - 1;
    if (__OFSUB__(v52, 1))
    {
LABEL_41:
      __break(1u);
      return;
    }
    if (v52 != 1)
      continue;
    break;
  }
}

void sub_1003346C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  id v6;
  void *v7;
  NSURL *v8;
  void *v9;
  void *v10;
  NSURL *v11;
  void *v12;
  uint64_t v13;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = ExternalUrlAction.isSensitive.getter(v2);
  v6 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  v7 = v6;
  if ((v5 & 1) != 0)
  {
    if (v6)
    {
      ExternalUrlAction.url.getter();
      URL._bridgeToObjectiveC()(v8);
      v10 = v9;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      objc_msgSend(v7, "openSensitiveURL:withOptions:", v10, 0);
LABEL_6:

      return;
    }
    __break(1u);
  }
  else if (v6)
  {
    ExternalUrlAction.url.getter();
    URL._bridgeToObjectiveC()(v11);
    v10 = v12;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    objc_msgSend(v7, "openURL:configuration:completionHandler:", v10, 0, 0);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_1003347F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  int v12;
  id *v13;
  id v14;
  void (*v15)(char *, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  NSDictionary v25;
  id v26;
  uint64_t v27;
  void *v28;
  _BYTE v29[24];
  uint64_t v30;

  v3 = type metadata accessor for FamilyCircleAction.EventType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  sub_1000194E4(a2, (uint64_t)v29, &qword_1007F6E90);
  if (!v30)
  {
    sub_100011088((uint64_t)v29, &qword_1007F6E90);
    return;
  }
  v10 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  if ((swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
    return;
  v11 = v28;
  FamilyCircleAction.eventType.getter();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v12 == enum case for FamilyCircleAction.EventType.initiate(_:))
  {
    v13 = (id *)&FACircleEventTypeInitiate;
  }
  else
  {
    if (v12 != enum case for FamilyCircleAction.EventType.addFamilyMember(_:))
    {
      v15 = *(void (**)(char *, uint64_t))(v4 + 8);
      v14 = FACircleEventTypeInitiate;
      v15(v6, v3);
      goto LABEL_10;
    }
    v13 = (id *)&FACircleEventTypeAddFamilyMemberV3;
  }
  v14 = *v13;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v16 = objc_msgSend(objc_allocWithZone((Class)FACircleContext), "initWithEventType:", v14);

  FamilyCircleAction.clientName.getter();
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setClientName:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21 = objc_msgSend(v20, "bundleIdentifier");

  objc_msgSend(v16, "setClientBundleID:", v21);
  v22 = FamilyCircleAction.additionalParameters.getter();
  if (v22)
  {
    v24 = v22;
    v25.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v25.super.isa = 0;
  }
  objc_msgSend(v16, "setAdditionalParameters:", v25.super.isa, v23);

  v26 = objc_msgSend(objc_allocWithZone((Class)FACircleStateController), "initWithPresenter:", v11);
  objc_msgSend(v26, "performWithContext:completion:", v16, 0);

}

uint64_t sub_100334AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for NavigationTab(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v14);

  v6 = v15;
  if (!v15)
    return sub_100011088((uint64_t)v14, (uint64_t *)&unk_100808370);
  v7 = v16;
  sub_100011064(v14, v15);
  v8 = TabBadgeAction.text.getter();
  v10 = v9;
  TabBadgeAction.navigationTab.getter();
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v7 + 40))(v8, v10, v4, v6, v7);
  v11 = swift_bridgeObjectRelease(v10);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v11);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v14);
}

uint64_t sub_100334C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD v21[5];

  v1 = v0;
  v2 = type metadata accessor for AdamId(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v21[-1] - v8;
  v10 = CancelPreorderAction.preorderAdamId.getter(v7);
  v11 = CancelPreorderAction.isArcade.getter(v10);
  dispatch thunk of Commerce.cancelPreorder(for:isArcade:)(v9, v11 & 1, v12);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_100738C58, v14 + v4, v13 | 7);
  *(_QWORD *)(v15 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, v5, v2);
  v16 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v17 = swift_retain(v1);
  v18 = static OS_dispatch_queue.main.getter(v17);
  v21[3] = v16;
  v21[4] = &protocol witness table for OS_dispatch_queue;
  v21[0] = v18;
  Promise.then(perform:orCatchError:on:)(sub_100331808, 0, sub_10033586C, v15, v21);
  swift_release();
  swift_release();
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_100334DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t updated;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char v32[24];

  v3 = v2;
  v6 = sub_10000DF3C(&qword_1008141F0);
  __chkstk_darwin(v6);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for MetricsPipeline(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (void *)(a2 + qword_100854078);
  swift_beginAccess(a2 + qword_100854078, v32, 0, 0);
  sub_1000194E4((uint64_t)v13, (uint64_t)v8, &qword_1008141F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_retain(v3);
    sub_100011088((uint64_t)v8, &qword_1008141F0);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v9);
    __break(1u);
    goto LABEL_7;
  }
  v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v14(v12, v8, v9);
  v14((char *)(v3 + qword_100853F70), v12, v9);
  v9 = *(_QWORD *)(a2 + qword_100854060);
  if (!v9)
  {
LABEL_7:
    v27 = sub_10000DF3C(&qword_1007FDEA0);
    swift_retain(v3);
    v17 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v27);
    __break(1u);
    goto LABEL_8;
  }
  v15 = *(_QWORD *)(a2 + qword_100854060 + 8);
  v16 = (uint64_t *)(v3 + qword_100853F78);
  *v16 = v9;
  v16[1] = v15;
  v17 = type metadata accessor for ArcadeSubscriptionManager(0);
  v13 = *(void **)(a2 + qword_100854068);
  if (!v13)
  {
LABEL_8:
    v28 = v17;
    swift_retain(v3);
    swift_unknownObjectRetain(v9);
    v18 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v28);
    __break(1u);
    goto LABEL_9;
  }
  *(_QWORD *)(v3 + qword_100853F80) = v13;
  v18 = type metadata accessor for ASKBagContract(0);
  v19 = *(_QWORD *)(a2 + qword_100854070);
  if (v19)
  {
    *(_QWORD *)(v3 + qword_100853F88) = v19;
    v20 = type metadata accessor for Commerce(0);
    v21 = type metadata accessor for ObjectGraph(0);
    swift_retain(v3);
    swift_unknownObjectRetain(v9);
    v22 = v13;
    swift_retain(v19);
    inject<A, B>(_:from:)(&v31, v20, a2, v20, v21);
    *(_QWORD *)(v3 + qword_100853F90) = v31;
    updated = type metadata accessor for UpdateStore(0);
    inject<A, B>(_:from:)(&v31, updated, a2, updated, v21);
    *(_QWORD *)(v3 + qword_100853F98) = v31;
    v24 = type metadata accessor for SearchGhostHintMetricsTracker(0);
    BaseObjectGraph.optional<A>(_:)(&v31, v24, v24);
    *(_QWORD *)(v3 + qword_100808300) = v31;
    swift_release(v3);
    v25 = swift_unknownObjectUnownedInit(v3 + qword_1007F4DD8, a1);
    return ActionRunner.init()(v25);
  }
LABEL_9:
  v29 = v18;
  swift_retain(v3);
  swift_unknownObjectRetain(v9);
  v30 = v13;
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v29);
  __break(1u);
  return result;
}

uint64_t sub_1003350CC()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003350D8(uint64_t a1)
{
  uint64_t v1;

  return sub_100332094(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003350E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003350F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003350F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for Bag(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v5));
  if (*(_QWORD *)(v0 + v6 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + v6));
  v8 = (v6 + 39) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_1003351B0(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Bag(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10032EE84(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100335220(uint64_t a1)
{
  uint64_t *v1;

  return sub_10032F1A4(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[8]);
}

uint64_t sub_100335230()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10033523C()
{
  return sub_1003354AC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_100335250()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10033525C()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100335268()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033528C()
{
  return sub_1003354AC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 40);
}

double sub_1003352A0(uint64_t a1)
{
  uint64_t *v1;

  return sub_100332790(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003352B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  return sub_100332D24(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1003352F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + v0;
  v8 = ((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v7 + 8));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v9));

  return swift_deallocObject(v0, v10 + 8, v6);
}

void sub_1003353AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v5 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = ((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_100333308(a1, v9, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + v6, *(_BYTE *)(v2 + v7), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100335454()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100335480()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_release);
}

void sub_10033548C(uint64_t a1)
{
  uint64_t v1;

  sub_10032FF6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100335494()
{
  return sub_1003354AC((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_unknownObjectRelease, 48);
}

uint64_t sub_1003354AC(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t a3)
{
  _QWORD *v3;

  a1(v3[2]);
  a1(v3[3]);
  a2(v3[4]);
  return swift_deallocObject(v3, a3, 7);
}

void sub_1003354FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10032F778(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_10033550C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100335580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v0 + ((v1 + 32) & ~v1);
  ObjectType = swift_getObjectType();
  return AppStateController.clearWaiting(for:)(v3, ObjectType, v2);
}

uint64_t sub_1003355DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = (v4 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + v0;
  v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  if (*(_QWORD *)(v0 + v8 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + v8));
  v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v9));

  return swift_deallocObject(v0, v10 + 8, v3 | 7);
}

void sub_1003356A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v5 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = ((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1003309C4(a1, v9, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + v6, *(unsigned __int8 *)(v2 + v7), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(v2 + v8), v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)), *(void ***)(v2 + ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100335750()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100335784(uint64_t a1)
{
  uint64_t v1;

  sub_100330F18(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100335790()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10033579C()
{
  uint64_t v0;

  return sub_1003313D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003357A4()
{
  _QWORD *v0;

  if (v0[5])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 2);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_1003357E8()
{
  uint64_t *v0;

  return sub_1003316F0((uint64_t)(v0 + 2), v0[6], v0[7], v0[8]);
}

uint64_t sub_1003357F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10033586C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  return sub_100331A04(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), v4);
}

uint64_t sub_1003358B0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  if (v0[7])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 4);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_1003358F4(uint64_t a1, __n128 a2)
{
  uint64_t *v2;

  return sub_100331C40(a1, a2, v2[2], v2[3], (uint64_t)(v2 + 4), v2[8]);
}

uint64_t sub_100335904()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  if (*(_QWORD *)(v0 + 48))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 120, 7);
}

double sub_100335958(_BYTE *a1, __n128 a2)
{
  uint64_t *v2;

  return sub_100331E60(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[7], v2[8]);
}

uint64_t sub_100335970()
{
  return sub_10033597C((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10033597C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1003359B4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (void (*)(uint64_t))LocalAskToBuyAction.completion.getter();
  v4 = v3;
  v2(v1);
  return swift_release(v4);
}

uint64_t sub_100335A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for PageFacets.Facet.Option(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageFacets.Facet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033B808(v2, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = &v14[*(int *)(sub_10000DF3C(&qword_100808490) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    Hasher._combine(_:)(1uLL);
    v16 = sub_10000E99C(&qword_100808548, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet, (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v16);
    v17 = sub_10000E99C(&qword_1008005D8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    Hasher._combine(_:)(0);
    v18 = sub_10000E99C(&qword_100808548, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet, (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Int sub_100335C78()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100335A50((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100335CB8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100335A50((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100335CF4(uint64_t a1, int a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  id v43;
  uint64_t v44;
  Class isa;
  id v46;
  Swift::String v47;
  Swift::String v48;
  void *object;
  NSString v50;
  uint64_t result;
  _BYTE v52[12];
  int v53;
  objc_class *ObjectType;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  _QWORD v58[3];
  objc_super v59;
  _BYTE v60[24];
  UIAction_optional v61;
  UIMenu_optional v62;

  v53 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_10000DF3C(&qword_1008141F0);
  __chkstk_darwin(v6);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for MetricsPipeline(0);
  v55 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v56 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10000DF3C((uint64_t *)&unk_100804D90);
  __chkstk_darwin(v11);
  v13 = &v52[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = &v3[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = (uint64_t)&v3[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets];
  v16 = type metadata accessor for PageFacets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v3[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions];
  v18 = v3;
  *(_QWORD *)v17 = sub_10036AD9C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_actionRunner] = 0;
  v19 = &v18[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_preselectionContentOffset];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v20 = OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_facetsPresenter;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_facetsPresenter] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_objectGraph] = a3;
  swift_retain(a1);
  v57 = a3;
  v21 = swift_retain(a3);
  PageFacetsPresenter.pageFacets.getter(v21);
  swift_beginAccess(v15, v60, 33, 0);
  sub_10033CB20((uint64_t)v13, v15);
  swift_endAccess(v60);
  v22 = *(_QWORD *)&v18[v20];
  v23 = swift_retain(v22);
  v24 = PageFacetsPresenter.selectedFacetOptions.getter(v23);
  swift_release(v22);
  swift_beginAccess(v17, v60, 1, 0);
  v25 = *(_QWORD *)v17;
  *(_QWORD *)v17 = v24;
  v26 = v53;
  swift_bridgeObjectRelease(v25);
  v18[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_showDoneButton] = v26;

  v27 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v59.receiver = v18;
  v59.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v59, "initWithCollectionViewLayout:", v27);

  v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_objectGraph];
  v30 = type metadata accessor for PageFacetMetricsActionRunner(0);
  v31 = swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  swift_unknownObjectUnownedInit(v31 + qword_100801498, v28);
  v32 = type metadata accessor for SearchGhostHintMetricsTracker(0);
  v33 = v28;
  swift_retain(v29);
  swift_retain(v31);
  BaseObjectGraph.optional<A>(_:)(v58, v32, v32);
  *(_QWORD *)(v31 + qword_1008014A8) = v58[0];
  v34 = v29 + qword_100854078;
  swift_beginAccess(v29 + qword_100854078, v58, 0, 0);
  v35 = v34;
  v36 = v55;
  sub_1000194E4(v35, (uint64_t)v8, &qword_1008141F0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v36 + 48))(v8, 1, v9) == 1)
  {
    sub_100011088((uint64_t)v8, &qword_1008141F0);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v9);
    __break(1u);
  }
  else
  {
    v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32);
    v38 = v56;
    v37(v56, v8, v9);
    v37((_BYTE *)(v31 + qword_1008014A0), v38, v9);
    swift_release(v31);
    v40 = ActionRunner.init()(v39);
    swift_release(v29);
    v41 = *(_QWORD *)&v33[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_actionRunner];
    *(_QWORD *)&v33[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_actionRunner] = v40;
    *(_QWORD *)&v42 = swift_release(v41).n128_u64[0];
    if ((v26 & 1) != 0)
    {
      v43 = objc_msgSend(v33, "navigationItem", v42);
      sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
      sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
      v44 = swift_allocObject(&unk_100738DE0, 24, 7);
      swift_unknownObjectWeakInit(v44 + 16);
      v61.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10033CB68, v44);
      v61.is_nil = 0;
      isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v61, v62).super.super.isa;
      objc_msgSend(v43, "setRightBarButtonItem:", isa);

    }
    v46 = objc_msgSend(v33, "navigationItem", v42);
    v47._object = (void *)0x8000000100644DC0;
    v47._countAndFlagsBits = 0xD000000000000019;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(v47, v48)._object;
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "setTitle:", v50, swift_bridgeObjectRelease(object).n128_f64[0]);

    swift_release(a1);
    swift_release(v57);
    return (uint64_t)v33;
  }
  return result;
}

void sub_100336254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_delegate;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_delegate);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v8 + 8))(v4, ObjectType, v8);

      swift_unknownObjectRelease(v7);
    }
    else
    {

    }
  }
}

void sub_100336314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for PageFacets(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10000DF3C((uint64_t *)&unk_100804D90);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10000DF3C(&qword_1008085B0);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets;
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets, v21, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1000194E4(v14, (uint64_t)v13, (uint64_t *)&unk_100804D90);
  sub_1000194E4(a1, v15, (uint64_t *)&unk_100804D90);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_100011088((uint64_t)v13, (uint64_t *)&unk_100804D90);
      return;
    }
  }
  else
  {
    sub_1000194E4((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_100804D90);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_10000E99C(&qword_1008085B8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets, (uint64_t)&protocol conformance descriptor for PageFacets);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_100011088((uint64_t)v13, (uint64_t *)&unk_100804D90);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100011088((uint64_t)v13, &qword_1008085B0);
LABEL_8:
  sub_10033656C();
}

void sub_10033656C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  Swift::OpaquePointer v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  double *v52;
  __n128 v53;
  uint64_t (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char v105[8];

  v0 = sub_10000DF3C(&qword_100808568);
  __chkstk_darwin(v0);
  v86 = (char *)&v75 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for PageFacetsViewController.Item(0);
  v103 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v101 = (uint64_t)&v75 - v6;
  v7 = type metadata accessor for PageFacets.Facet(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v102 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageFacets.FacetGroup(0, v9);
  v91 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v89 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_100804D90);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PageFacets(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v79 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10000DF3C(&qword_100808570);
  v78 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000E99C(&qword_100808578, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.FacetGroup, (uint64_t)&protocol conformance descriptor for PageFacets.FacetGroup);
  v22 = sub_10000E99C(&qword_100808580, type metadata accessor for PageFacetsViewController.Item, (uint64_t)&unk_1006857F0);
  v92 = v20;
  v90 = v11;
  v23 = v11;
  v104 = v2;
  v24 = v87;
  NSDiffableDataSourceSnapshot.init()(v23, v2, v21, v22);
  v25 = v24 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets;
  swift_beginAccess(v24 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets, v105, 0, 0);
  sub_1000194E4(v25, (uint64_t)v15, (uint64_t *)&unk_100804D90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100011088((uint64_t)v15, (uint64_t *)&unk_100804D90);
    v26 = *(void **)(v24 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource);
    if (v26)
    {
      v27 = v26;
      v28 = v92;
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v92, 1, 0, 0);

LABEL_33:
      (*(void (**)(char *, uint64_t))(v78 + 8))(v28, v93);
      return;
    }
    goto LABEL_36;
  }
  v77 = v17;
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v79, v15, v16);
  v30 = PageFacets.facetGroups.getter(v29);
  v85 = *(_QWORD *)(v30 + 16);
  if (v85)
  {
    v76 = v16;
    v31 = 0;
    v32 = *(unsigned __int8 *)(v91 + 80);
    v84 = (v32 + 32) & ~v32;
    v83 = v30 + v84;
    v82 = v32 | 7;
    v81 = xmmword_10066FBA0;
    v33 = v102;
    v94 = v8;
    v95 = v4;
    v80 = v30;
    while (v31 < *(_QWORD *)(v30 + 16))
    {
      v39 = v90;
      v40 = *(_QWORD *)(v91 + 72);
      v88 = v31;
      v41 = v83 + v40 * v31;
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
      v43 = v89;
      v42(v89, v41, v90);
      v44 = sub_10000DF3C(&qword_100808588);
      v45 = v84;
      v46._rawValue = (void *)swift_allocObject(v44, v40 + v84, v82);
      *((_OWORD *)v46._rawValue + 1) = v81;
      v42((char *)v46._rawValue + v45, (uint64_t)v43, v39);
      NSDiffableDataSourceSnapshot.appendSections(_:)(v46);
      v47 = swift_bridgeObjectRelease(v46._rawValue);
      v48 = PageFacets.FacetGroup.facets.getter(v47);
      v49 = v48;
      v50 = *(_QWORD *)(v48 + 16);
      if (v50)
      {
        v51 = 0;
        v100 = v48 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v52 = _swiftEmptyArrayStorage;
        v96 = v50;
        v97 = v48;
        while (v51 < *(_QWORD *)(v49 + 16))
        {
          v54 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16);
          v55 = v54(v33, v100 + *(_QWORD *)(v8 + 72) * v51, v7);
          if ((PageFacets.Facet.displayOptionsInline.getter(v55) & 1) != 0)
          {
            v56 = PageFacets.Facet.options.getter();
            v57 = *(_QWORD *)(v56 + 16);
            if (v57)
            {
              v99 = v51;
              v58 = v7;
              v59 = v56;
              v60 = type metadata accessor for PageFacets.Facet.Option(0);
              v61 = *(_QWORD *)(v60 - 8);
              v62 = *(unsigned __int8 *)(v61 + 80);
              v98 = v59;
              v63 = v59 + ((v62 + 32) & ~v62);
              v64 = *(_QWORD *)(v61 + 72);
              v65 = v101;
              do
              {
                v66 = v65 + *(int *)(sub_10000DF3C(&qword_100808490) + 48);
                v54((char *)v65, (unint64_t)v102, v58);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v66, v63, v60);
                swift_storeEnumTagMultiPayload(v65, v104, 1);
                if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
                  v52 = (double *)sub_100202170(0, *((_QWORD *)v52 + 2) + 1, 1, (unint64_t)v52);
                v68 = *((_QWORD *)v52 + 2);
                v67 = *((_QWORD *)v52 + 3);
                if (v68 >= v67 >> 1)
                  v52 = (double *)sub_100202170(v67 > 1, v68 + 1, 1, (unint64_t)v52);
                *((_QWORD *)v52 + 2) = v68 + 1;
                v69 = (uint64_t)v52
                    + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))
                    + *(_QWORD *)(v103 + 72) * v68;
                v65 = v101;
                sub_10033C718(v101, v69);
                v63 += v64;
                --v57;
              }
              while (v57);
              v53 = swift_bridgeObjectRelease(v98);
              v7 = v58;
              v8 = v94;
              v4 = v95;
              v33 = v102;
              v50 = v96;
              v49 = v97;
              v51 = v99;
            }
            else
            {
              v53 = swift_bridgeObjectRelease(v56);
            }
          }
          else
          {
            v54(v4, (unint64_t)v33, v7);
            swift_storeEnumTagMultiPayload(v4, v104, 0);
            if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
              v52 = (double *)sub_100202170(0, *((_QWORD *)v52 + 2) + 1, 1, (unint64_t)v52);
            v71 = *((_QWORD *)v52 + 2);
            v70 = *((_QWORD *)v52 + 3);
            if (v71 >= v70 >> 1)
              v52 = (double *)sub_100202170(v70 > 1, v71 + 1, 1, (unint64_t)v52);
            *((_QWORD *)v52 + 2) = v71 + 1;
            sub_10033C718((uint64_t)v4, (uint64_t)v52+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v71);
          }
          ++v51;
          (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v33, v7, v53);
          if (v51 == v50)
          {
            v34 = swift_bridgeObjectRelease(v49);
            goto LABEL_7;
          }
        }
        __break(1u);
        break;
      }
      v34 = swift_bridgeObjectRelease(v48);
      v52 = _swiftEmptyArrayStorage;
LABEL_7:
      v35 = v88 + 1;
      v36 = v90;
      v37 = v91;
      v38 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v91 + 56))(v86, 1, 1, v90, v34);
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v52, v38, v93);
      v31 = v35;
      swift_bridgeObjectRelease(v52);
      sub_100011088(v38, &qword_100808568);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v89, v36);
      v24 = v87;
      v30 = v80;
      if (v35 == v85)
      {
        swift_bridgeObjectRelease(v80);
        v16 = v76;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  swift_bridgeObjectRelease(v30);
LABEL_31:
  v72 = *(void **)(v24 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource);
  v73 = v79;
  if (v72)
  {
    v74 = v72;
    v28 = v92;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v92, 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v16);
    goto LABEL_33;
  }
LABEL_37:
  __break(1u);
}

void sub_100336D64(__n128 a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  Swift::OpaquePointer v23;
  void *rawValue;
  __n128 v25;
  void *v26;
  id v27;
  double *v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;

  v2 = v1;
  v3 = type metadata accessor for PageFacets.FacetGroup(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_100808570);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource;
  v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource];
  if (!v12)
    goto LABEL_12;
  v13 = v12;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v7);
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease(v14);
    v26 = *(void **)&v2[v11];
    if (v26)
      goto LABEL_6;
    goto LABEL_11;
  }
  v34 = v11;
  v35 = v2;
  v36 = v8;
  v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v33 = v14;
  v17 = v14 + v16;
  v18 = *(_QWORD *)(v4 + 72);
  v19 = v10;
  v20 = v7;
  v21 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  do
  {
    v21(v6, v17, v3);
    v22 = v4;
    v23._rawValue = (void *)NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v6, v20);
    NSDiffableDataSourceSnapshot.reloadItems(_:)(v23);
    rawValue = v23._rawValue;
    v4 = v22;
    v25 = swift_bridgeObjectRelease(rawValue);
    (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v6, v3, v25);
    v17 += v18;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease(v33);
  v2 = v35;
  v8 = v36;
  v7 = v20;
  v10 = v19;
  v26 = *(void **)&v35[v34];
  if (!v26)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_6:
  v27 = v26;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v10, 1, 0, 0);

  v28 = (double *)&v2[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_preselectionContentOffset];
  if ((v2[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_preselectionContentOffset + 16] & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return;
  }
  v30 = *v28;
  v29 = v28[1];
  v31 = objc_msgSend(v2, "collectionView");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "setContentOffset:", v30, v29);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v28 = 0.0;
    v28[1] = 0.0;
    *((_BYTE *)v28 + 16) = 1;
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100336FB4()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "collectionView");
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = sub_1003371CC();
  v9 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource];
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource] = v8;

  v10 = objc_msgSend(v0, "collectionView");
  if (v10)
  {
    v11 = v10;
    v12 = swift_allocObject(&unk_100738DE0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    v13 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    v17[4] = sub_10033C80C;
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_100252D24;
    v17[3] = &unk_100738DF8;
    v14 = _Block_copy(v17);
    v15 = objc_msgSend(v13, "initWithSectionProvider:", v14, swift_retain(v12).n128_f64[0]);
    _Block_release(v14);
    v16 = v18;
    swift_release(v12);
    objc_msgSend(v11, "setCollectionViewLayout:", v15, swift_release(v16).n128_f64[0]);

    sub_1003374CC();
    sub_10033656C();
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1003371CC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v1 = v0;
  v40 = sub_10000DF3C(&qword_1008085C0);
  v2 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v36 = v3;
  v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - v5;
  v38 = sub_10000DF3C(&qword_1008085C8);
  v7 = *(_QWORD *)(v38 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v38);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  v13 = swift_allocObject(&unk_100738DE0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
  v15 = type metadata accessor for PageFacetsViewController.Item(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10033C904, v13, v14, v15);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v18 = v17;
  v19 = swift_allocObject(&unk_100738DE0, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  v20 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
  v39 = v6;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v16, v18, sub_10033C90C, v19, v20);
  result = objc_msgSend(v1, "collectionView");
  if (result)
  {
    v22 = result;
    v23 = v38;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v38);
    v24 = *(unsigned __int8 *)(v7 + 80);
    v25 = (v24 + 16) & ~v24;
    v26 = swift_allocObject(&unk_100738ED0, v25 + v8, v24 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26 + v25, v9, v23);
    v27 = objc_allocWithZone((Class)sub_10000DF3C(&qword_1008085D0));
    v28 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v22, sub_10033C920, v26);
    v29 = v37;
    v30 = v39;
    v31 = v40;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v37, v39, v40);
    v32 = *(unsigned __int8 *)(v2 + 80);
    v33 = (v32 + 16) & ~v32;
    v34 = swift_allocObject(&unk_100738EF8, v33 + v36, v32 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v34 + v33, v29, v31);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_10033C9E0, v34);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v23);
    return (id)v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003374CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void (*v18)(char *, uint64_t, __n128);
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  void *v42;

  ObjectType = swift_getObjectType();
  v1 = sub_10000DF3C(&qword_100808590);
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v37 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DF3C((uint64_t *)&unk_1008123D0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_facetsPresenter);
  v9 = PageFacetsPresenter.onFacetStateDidChange.getter(v6);
  v10 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v12 = static OS_dispatch_queue.main.getter(v11);
  v41 = v10;
  v42 = &protocol witness table for OS_dispatch_queue;
  v40[0] = v12;
  v13 = sub_10000DF3C((uint64_t *)&unk_100804D80);
  v34 = v13;
  v14 = sub_100010F98((unint64_t *)&unk_1008123E0, (uint64_t *)&unk_100804D80, (const char *)&protocol conformance descriptor for AsyncEvent<A>);
  v15 = v13;
  v16 = ObjectType;
  EventEmitter.addObserver<A>(on:target:method:)(v40, v0, sub_1003398D0, 0, v15, ObjectType, v14);
  v17 = swift_release(v9);
  v18 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v18(v8, v5, v17);
  v19 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v40);
  v20 = PageFacetsPresenter.onSelectedFacetOptionsChanged.getter(v19);
  v22 = static OS_dispatch_queue.main.getter(v21);
  v41 = v10;
  v42 = &protocol witness table for OS_dispatch_queue;
  v40[0] = v22;
  EventEmitter.addObserver<A>(on:target:method:)(v40, v0, sub_100339924, 0, v34, v16, v14);
  v23 = swift_release(v20);
  v18(v8, v5, v23);
  v24 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v40);
  v25 = PageFacetsPresenter.onPerformPageFacetsChangeAction.getter(v24);
  v27 = static OS_dispatch_queue.main.getter(v26);
  v41 = v10;
  v42 = &protocol witness table for OS_dispatch_queue;
  v40[0] = v27;
  v28 = sub_10000DF3C(&qword_100808598);
  v29 = sub_100010F98((unint64_t *)&unk_1008123F0, &qword_100808598, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  v30 = v37;
  EventEmitter.addObserver<A>(on:target:method:)(v40, v0, sub_100339B0C, 0, v28, v16, v29);
  v31 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v30, v39, v31);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v40);
}

void sub_1003377B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t Strong;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  id v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  Class isa;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[24];

  v68 = a2;
  v65 = a1;
  v4 = sub_10000DF3C(&qword_100808570);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageFacets.FacetGroup(0, v5);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  __chkstk_darwin(v8);
  v59 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v60 = (char *)&v59 - v12;
  v13 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UICollectionLayoutListConfiguration(0, v19);
  v66 = *(_QWORD *)(v22 - 8);
  v67 = v22;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v18 + 104))(v21, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v17, v23);
  UICollectionLayoutListConfiguration.init(appearance:)(v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v13);
  UICollectionLayoutListConfiguration.headerMode.setter(v16);
  sub_100019574(0, (unint64_t *)&qword_100813540, NSCollectionLayoutSection_ptr);
  v26 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v25, v68);
  swift_beginAccess(a3 + 16, v70, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (!Strong)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v66 + 8))(v25, v67);
    return;
  }
  v28 = (void *)Strong;
  v29 = *(void **)(Strong + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource);
  v30 = v29;

  if (v29)
  {
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    v31 = v64;
    v32 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v64);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v31);
    if ((v65 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v32 + 16) > v65)
    {
      v34 = v61;
      v33 = v62;
      v35 = v59;
      (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v59, v32+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v61 + 72) * v65, v62);
      v36 = swift_bridgeObjectRelease(v32);
      v37 = v60;
      v38 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v34 + 32))(v60, v35, v33, v36);
      v39 = PageFacets.FacetGroup.title.getter(v38);
      if (v40)
      {
        v41 = v39;
        v42 = v40;
        swift_bridgeObjectRelease(v40);
        v43 = HIBYTE(v42) & 0xF;
        if ((v42 & 0x2000000000000000) == 0)
          v43 = v41 & 0xFFFFFFFFFFFFLL;
        if (v43)
        {
          v44 = (void *)objc_opt_self(NSCollectionLayoutDimension);
          v45 = objc_msgSend(v44, "fractionalWidthDimension:", 1.0);
          v46 = objc_msgSend(v44, "estimatedDimension:", 44.0);
          v47 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v45, v46);

          static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
          v49 = v48;
          v50 = v25;
          v51 = v47;
          v52 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v49);
          v53 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v51, v52, 1);

          v54 = sub_10000DF3C(&qword_1007F5840);
          v55 = swift_allocObject(v54, 40, 7);
          *(_OWORD *)(v55 + 16) = xmmword_10066FE60;
          *(_QWORD *)(v55 + 32) = v53;
          v69 = v55;
          specialized Array._endMutation()(v55);
          v56 = v69;
          sub_100019574(0, &qword_1007F49A0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
          v57 = v53;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v26, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v56).n128_f64[0]);

          v25 = v50;
        }
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
      goto LABEL_11;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100337C84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  __n128 v9;
  void *v10;
  _BYTE v11[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_100337CF8(a1, v9, a2, a3);

  }
}

uint64_t sub_100337CF8(void *a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  char *v56;
  int EnumCaseMultiPayload;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(char *, char *, uint64_t);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  char v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  NSString v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __n128 v108;
  void (*v109)(char *, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  double v132;
  _BOOL8 v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  void (*v141)(char *, _QWORD, uint64_t);
  char *v142;
  unint64_t v143;
  unint64_t v144;
  __n128 v145;
  char *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (**v156)();
  uint64_t v157;
  id v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  Swift::String v162;
  void *object;
  unint64_t v164;
  NSString v165;
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t);
  __n128 v168;
  uint64_t v169;
  uint64_t v170;
  __n128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  NSString v197;
  _QWORD *v198;
  char *v200;
  char *v201;
  char *v202;
  unint64_t v203;
  unint64_t v204;
  __n128 v205;
  uint64_t v206;
  char v207;
  __n128 v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t (*v238)(char *, char *, uint64_t);
  uint64_t v239;
  uint64_t v240;
  void *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  void *v255;

  v246 = (char *)a4;
  v241 = a1;
  v220 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, a2);
  v219 = *(_QWORD *)(v220 - 8);
  v4 = __chkstk_darwin(v220);
  v218 = (char *)&v211 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for UICellAccessory.Placement(0, v4);
  v225 = *(_QWORD *)(v226 - 8);
  v6 = __chkstk_darwin(v226);
  v221 = (char *)&v211 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v6);
  v228 = *(_QWORD *)(v229 - 8);
  v8 = __chkstk_darwin(v229);
  v227 = (char *)&v211 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = type metadata accessor for PageFacets.Facet.DisplayType(0, v8);
  v234 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v213 = (char *)&v211 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v214 = (char *)&v211 - v12;
  __chkstk_darwin(v13);
  v223 = (char *)&v211 - v14;
  __chkstk_darwin(v15);
  v224 = (char *)&v211 - v16;
  __chkstk_darwin(v17);
  v244 = (char *)&v211 - v18;
  __chkstk_darwin(v19);
  v233 = (char *)&v211 - v20;
  v21 = sub_10000DF3C(&qword_1007F74D0);
  v22 = __chkstk_darwin(v21);
  v235 = (char *)&v211 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v22);
  v216 = *(_QWORD *)(v217 - 8);
  v24 = __chkstk_darwin(v217);
  v215 = (char *)&v211 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for UICellAccessory.DisplayedState(0, v24);
  v236 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v230 = (char *)&v211 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = (uint64_t (*)(char *, char *, uint64_t))type metadata accessor for PageFacets.Facet.Option(0);
  v232 = (char *)*((_QWORD *)v238 - 1);
  __chkstk_darwin(v238);
  v231 = (char *)&v211 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for PageFacets.Facet(0);
  v248 = *(_QWORD *)(v28 - 8);
  v249 = v28;
  v29 = *(_QWORD *)(v248 + 64);
  __chkstk_darwin(v28);
  v222 = (char *)&v211 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v211 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v211 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v211 - v37;
  __chkstk_darwin(v39);
  v245 = (char *)&v211 - v40;
  v41 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v41);
  v43 = (char *)&v211 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v211 - v45;
  v48 = __chkstk_darwin(v47);
  v50 = (char *)&v211 - v49;
  v240 = type metadata accessor for UIListContentConfiguration(0, v48);
  v242 = *(_QWORD *)(v240 - 8);
  __chkstk_darwin(v240);
  v52 = (char *)&v211 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __chkstk_darwin(v53);
  v56 = (char *)&v211 - v55;
  static UIListContentConfiguration.cell()(v54);
  sub_10033B808((uint64_t)v246, (uint64_t)v50);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v50, v41);
  v243 = v50;
  if (EnumCaseMultiPayload != 1)
  {
    v245 = v35;
    v217 = (uint64_t)v52;
    v232 = v32;
    v246 = v56;
    sub_10033B808((uint64_t)v50, (uint64_t)v43);
    v238 = *(uint64_t (**)(char *, char *, uint64_t))(v248 + 16);
    v85 = v238(v38, v43, v249);
    v86 = v233;
    PageFacets.Facet.displayType.getter(v85);
    v87 = v234;
    v88 = v247;
    v216 = *(_QWORD *)(v234 + 104);
    ((void (*)(char *, _QWORD, uint64_t))v216)(v244, enum case for PageFacets.Facet.DisplayType.toggle(_:), v247);
    v89 = sub_10000E99C(&qword_1008005F0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v252, v88, v89);
    v231 = (char *)v89;
    dispatch thunk of RawRepresentable.rawValue.getter(&v250, v88, v89);
    v90 = v253;
    v91 = v251;
    v92 = v86;
    v212 = v43;
    if (v252 == v250 && v253 == v251)
    {
      v93 = v38;
      v94 = 1;
      v91 = v253;
    }
    else
    {
      v93 = v38;
      v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v252, v253, v250, v251, 0);
    }
    v105 = v247;
    v107 = v244;
    v106 = v245;
    swift_bridgeObjectRelease(v90);
    v108 = swift_bridgeObjectRelease(v91);
    v109 = *(void (**)(char *, uint64_t, __n128))(v87 + 8);
    v109(v107, v105, v108);
    v110 = ((uint64_t (*)(char *, uint64_t))v109)(v92, v105);
    if ((v94 & 1) != 0)
    {
      v111 = (uint64_t)v93;
      v112 = PageFacets.Facet.title.getter(v110);
      UIListContentConfiguration.text.setter(v112, v113, v114);
      sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
      v115 = swift_allocObject(&unk_100738DE0, 24, 7);
      v116 = v239;
      v117 = swift_unknownObjectWeakInit(v115 + 16);
      v118 = v106;
      v119 = v249;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v238)(v106, v111, v249, v117);
      v120 = v248;
      v121 = *(unsigned __int8 *)(v248 + 80);
      v122 = (v121 + 24) & ~v121;
      v123 = swift_allocObject(&unk_100738F20, v122 + v29, v121 | 7);
      *(_QWORD *)(v123 + 16) = v115;
      (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v123 + v122, v118, v119);
      v124 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10033CAC8, v123);
      v125 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "initWithFrame:primaryAction:", v124, 0.0, 0.0, 0.0, 0.0);

      v126 = (uint64_t *)(v116 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions);
      swift_beginAccess(v116 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions, &v252, 32, 0);
      v127 = *v126;
      v128 = *(_QWORD *)(v127 + 16);
      v211 = v111;
      if (v128 && (v129 = sub_10036C7DC(v111), (v130 & 1) != 0))
      {
        v131 = *(_QWORD *)(*(_QWORD *)(v127 + 56) + 8 * v129);
        *(_QWORD *)&v132 = swift_endAccess(&v252).n128_u64[0];
        v133 = *(_QWORD *)(v131 + 16) != 0;
      }
      else
      {
        *(_QWORD *)&v132 = swift_endAccess(&v252).n128_u64[0];
        v133 = 0;
      }
      v96 = v240;
      v150 = v241;
      v97 = v242;
      v104 = (uint64_t)v243;
      v151 = v235;
      v152 = v221;
      objc_msgSend(v125, "setOn:", v133, v132, v211);
      v153 = sub_10000DF3C(&qword_1007F74D8);
      v154 = type metadata accessor for UICellAccessory(0);
      v155 = swift_allocObject(v153, ((*(unsigned __int8 *)(*(_QWORD *)(v154 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v154 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v154 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v154 - 8) + 80) | 7);
      *(_OWORD *)(v155 + 16) = xmmword_10066FBA0;
      v156 = (uint64_t (**)())&v152[*(int *)(sub_10000DF3C((uint64_t *)&unk_1007F74F0) + 48)];
      (*(void (**)(char *, _QWORD, uint64_t))(v236 + 104))(v152, enum case for UICellAccessory.DisplayedState.always(_:), v237);
      *v156 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v156[1] = 0;
      (*(void (**)(char *, _QWORD, uint64_t))(v225 + 104))(v152, enum case for UICellAccessory.Placement.trailing(_:), v226);
      v157 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v151, 1, 1, v157);
      v158 = v125;
      v159 = v227;
      UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
      static UICellAccessory.customView(configuration:)(v159);
      (*(void (**)(char *, uint64_t))(v228 + 8))(v159, v229);
      v160 = UICollectionViewListCell.accessories.setter(v155);
      v252 = 0x2D7465636166;
      v253 = 0xE600000000000000;
      v161 = v211;
      v162._countAndFlagsBits = PageFacets.Facet.id.getter(v160);
      object = v162._object;
      String.append(_:)(v162);
      swift_bridgeObjectRelease(object);
      v164 = v253;
      v165 = String._bridgeToObjectiveC()();
      objc_msgSend(v150, "setAccessibilityIdentifier:", v165, swift_bridgeObjectRelease(v164).n128_f64[0]);

      v166 = v249;
      v167 = *(void (**)(uint64_t, uint64_t))(v248 + 8);
      v167(v161, v249);
      v167((uint64_t)v212, v166);
      goto LABEL_30;
    }
    v134 = v248;
    v135 = v249;
    v136 = *(char **)(v248 + 8);
    ((void (*)(char *, uint64_t))v136)(v93, v249);
    v137 = (uint64_t)v232;
    v138 = (*(uint64_t (**)(char *, char *, uint64_t))(v134 + 32))(v232, v212, v135);
    v139 = v224;
    PageFacets.Facet.displayType.getter(v138);
    v140 = v223;
    v141 = (void (*)(char *, _QWORD, uint64_t))v216;
    ((void (*)(char *, _QWORD, uint64_t))v216)(v223, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v105);
    v142 = v231;
    dispatch thunk of RawRepresentable.rawValue.getter(&v252, v105, v231);
    dispatch thunk of RawRepresentable.rawValue.getter(&v250, v105, v142);
    v143 = v253;
    v144 = v251;
    v245 = v136;
    if (v252 == v250 && v253 == v251)
    {
      v145 = swift_bridgeObjectRelease_n(v253, 2);
      v109(v140, v105, v145);
      ((void (*)(char *, uint64_t))v109)(v139, v105);
      v146 = v222;
      v238(v222, (char *)v137, v135);
      v147 = v135;
      v96 = v240;
      v148 = v241;
    }
    else
    {
      LODWORD(v248) = _stringCompareWithSmolCheck(_:_:expecting:)(v252, v253, v250, v251, 0);
      swift_bridgeObjectRelease(v143);
      v168 = swift_bridgeObjectRelease(v144);
      v109(v140, v105, v168);
      ((void (*)(char *, uint64_t))v109)(v139, v105);
      v146 = v222;
      v169 = v238(v222, (char *)v137, v135);
      v147 = v135;
      v170 = v105;
      v96 = v240;
      v148 = v241;
      v149 = v217;
      if ((v248 & 1) != 0)
        goto LABEL_26;
      v200 = v214;
      PageFacets.Facet.displayType.getter(v169);
      v201 = v213;
      v141(v213, enum case for PageFacets.Facet.DisplayType.multipleSelection(_:), v170);
      v202 = v231;
      dispatch thunk of RawRepresentable.rawValue.getter(&v252, v170, v231);
      dispatch thunk of RawRepresentable.rawValue.getter(&v250, v170, v202);
      v203 = v253;
      v204 = v251;
      if (v252 != v250 || v253 != v251)
      {
        v207 = _stringCompareWithSmolCheck(_:_:expecting:)(v252, v253, v250, v251, 0);
        swift_bridgeObjectRelease(v203);
        v208 = swift_bridgeObjectRelease(v204);
        v209 = v247;
        v109(v201, v247, v208);
        ((void (*)(char *, uint64_t))v109)(v200, v209);
        v210 = v245;
        ((void (*)(char *, uint64_t))v245)(v146, v249);
        v149 = v217;
        if ((v207 & 1) == 0)
        {
          ((void (*)(uint64_t, uint64_t))v210)(v137, v249);
          UICollectionViewListCell.accessories.setter(_swiftEmptyArrayStorage);
          v97 = v242;
          v104 = (uint64_t)v243;
LABEL_30:
          v56 = v246;
          goto LABEL_31;
        }
LABEL_27:
        static UIListContentConfiguration.valueCell()(v171);
        v97 = v242;
        v172 = (uint64_t)v246;
        (*(void (**)(char *, uint64_t))(v242 + 8))(v246, v96);
        v173 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v172, v149, v96);
        v174 = PageFacets.Facet.title.getter(v173);
        UIListContentConfiguration.text.setter(v174, v175, v176);
        v177 = (uint64_t *)(v239 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions);
        swift_beginAccess(v239 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions, &v250, 0, 0);
        v178 = *v177;
        swift_bridgeObjectRetain(v178);
        v179 = sub_1003393D8(v137, v178);
        v181 = v180;
        swift_bridgeObjectRelease(v178);
        UIListContentConfiguration.secondaryText.setter(v179, v181);
        v182 = sub_10000DF3C(&qword_1007F74D8);
        v183 = type metadata accessor for UICellAccessory(0);
        v184 = swift_allocObject(v182, ((*(unsigned __int8 *)(*(_QWORD *)(v183 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v183 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v183 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v183 - 8) + 80) | 7);
        *(_OWORD *)(v184 + 16) = xmmword_10066FBA0;
        v185 = v236;
        v186 = v230;
        v187 = v237;
        (*(void (**)(char *, _QWORD, uint64_t))(v236 + 104))(v230, enum case for UICellAccessory.DisplayedState.always(_:), v237);
        v188 = type metadata accessor for UICellAccessory.LayoutDimension(0);
        v189 = v235;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 56))(v235, 1, 1, v188);
        v190 = v218;
        UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v189, 0);
        static UICellAccessory.disclosureIndicator(displayed:options:)(v186, v190);
        (*(void (**)(char *, uint64_t))(v219 + 8))(v190, v220);
        v191 = v232;
        (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v187);
        v192 = UICollectionViewListCell.accessories.setter(v184);
        v193 = PageFacets.Facet.metricsParameterName.getter(v192);
        v104 = (uint64_t)v243;
        if (v194)
        {
          v195 = v194;
          v252 = 0x2D7465636166;
          v253 = 0xE600000000000000;
          String.append(_:)(*(Swift::String *)&v193);
          swift_bridgeObjectRelease(v195);
          v196 = v253;
          v197 = String._bridgeToObjectiveC()();
          objc_msgSend(v148, "setAccessibilityIdentifier:", v197, swift_bridgeObjectRelease(v196).n128_f64[0]);

        }
        ((void (*)(char *, uint64_t))v245)(v191, v249);
        goto LABEL_30;
      }
      v205 = swift_bridgeObjectRelease_n(v253, 2);
      v206 = v247;
      v109(v201, v247, v205);
      ((void (*)(char *, uint64_t))v109)(v200, v206);
      v136 = v245;
      v147 = v249;
    }
    v149 = v217;
LABEL_26:
    v171.n128_f64[0] = ((double (*)(char *, uint64_t))v136)(v146, v147);
    goto LABEL_27;
  }
  sub_10033B808((uint64_t)v50, (uint64_t)v46);
  v58 = &v46[*(int *)(sub_10000DF3C(&qword_100808490) + 48)];
  v59 = v248;
  v60 = (uint64_t)v245;
  (*(void (**)(char *, char *, uint64_t))(v248 + 32))(v245, v46, v249);
  v61 = v232;
  v62 = (uint64_t)v231;
  v63 = v238;
  v64.n128_f64[0] = (*((double (**)(char *, char *, uint64_t (*)(char *, char *, uint64_t)))v232 + 4))(v231, v58, v238);
  v65 = PageFacets.Facet.Option.title.getter(v64);
  UIListContentConfiguration.text.setter(v65, v66, v67);
  v68 = (uint64_t *)(v239 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions);
  swift_beginAccess(v239 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions, &v252, 32, 0);
  v69 = *v68;
  if (!*(_QWORD *)(*v68 + 16) || (v70 = sub_10036C7DC(v60), (v71 & 1) == 0))
  {
    v74 = v62;
    swift_endAccess(&v252);
    goto LABEL_10;
  }
  v72 = *(_QWORD *)(*(_QWORD *)(v69 + 56) + 8 * v70);
  swift_endAccess(&v252);
  swift_bridgeObjectRetain(v72);
  v73 = sub_100246974(v62, v72);
  swift_bridgeObjectRelease(v72);
  v74 = v62;
  if ((v73 & 1) == 0)
  {
LABEL_10:
    v77 = _swiftEmptyArrayStorage;
    goto LABEL_11;
  }
  v75 = sub_10000DF3C(&qword_1007F74D8);
  v76 = type metadata accessor for UICellAccessory(0);
  v77 = (double *)swift_allocObject(v75, ((*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v76 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) | 7);
  *((_OWORD *)v77 + 1) = xmmword_10066FBA0;
  v78 = v236;
  v79 = v230;
  v80 = v237;
  (*(void (**)(char *, _QWORD, uint64_t))(v236 + 104))(v230, enum case for UICellAccessory.DisplayedState.always(_:), v237);
  v81 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v82 = v235;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v235, 1, 1, v81);
  v83 = v215;
  UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v82, 0);
  static UICellAccessory.checkmark(displayed:options:)(v79, v83);
  (*(void (**)(char *, uint64_t))(v216 + 8))(v83, v217);
  v84 = v80;
  v63 = v238;
  v59 = v248;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v84);
LABEL_11:
  v96 = v240;
  v95 = v241;
  v97 = v242;
  v98 = UICollectionViewListCell.accessories.setter(v77);
  v99 = PageFacets.Facet.Option.metricsValue.getter(v98);
  if (v100)
  {
    v101 = v100;
    v252 = 0x2D7465636166;
    v253 = 0xE600000000000000;
    String.append(_:)(*(Swift::String *)&v99);
    swift_bridgeObjectRelease(v101);
    v102 = v253;
    v103 = String._bridgeToObjectiveC()();
    objc_msgSend(v95, "setAccessibilityIdentifier:", v103, swift_bridgeObjectRelease(v102).n128_f64[0]);

  }
  (*((void (**)(uint64_t, uint64_t (*)(char *, char *, uint64_t)))v61 + 1))(v74, v63);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v245, v249);
  v104 = (uint64_t)v243;
LABEL_31:
  sub_10033B534(v104);
  v254 = v96;
  v255 = &protocol witness table for UIListContentConfiguration;
  v198 = sub_1000117C0(&v252);
  (*(void (**)(_QWORD *, char *, uint64_t))(v97 + 16))(v198, v56, v96);
  UICollectionViewCell.contentConfiguration.setter(&v252);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v56, v96);
}

unint64_t sub_100338EAC(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t result;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  _BYTE v37[24];

  v34 = a1;
  v35 = a5;
  v7 = type metadata accessor for UIListContentConfiguration(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_100808570);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for PageFacets.FacetGroup(0, v13);
  v16 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6 += 16;
  swift_beginAccess(a6, v37, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a6);
  if (result)
  {
    v20 = (void *)result;
    v32 = v8;
    v21 = *(void **)(result + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource);
    if (v21)
    {
      v22 = v21;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      v23 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      result = IndexPath.subscript.getter(0);
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(_QWORD *)(v23 + 16))
      {
        v24 = v33;
        (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v23+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * result, v33);
        v25 = swift_bridgeObjectRelease(v23);
        v26 = static UIListContentConfiguration.groupedHeader()(v25);
        v27 = PageFacets.FacetGroup.title.getter(v26);
        UIListContentConfiguration.text.setter(v27, v28, v29);
        v36[3] = v7;
        v36[4] = &protocol witness table for UIListContentConfiguration;
        v30 = sub_1000117C0(v36);
        v31 = v32;
        (*(void (**)(_QWORD *, char *, uint64_t))(v32 + 16))(v30, v10, v7);
        UICollectionViewCell.contentConfiguration.setter(v36);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v24);
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003390DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_10000DF3C(&qword_100808558);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033B808(a3, (uint64_t)v9);
  v10 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
  v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v9, v11, v10);
  sub_100011088((uint64_t)v9, &qword_100808558);
  return v12;
}

void sub_1003391D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29[24];
  char v30[24];
  char v31[24];

  v5 = sub_10000DF3C(&qword_1008005E8);
  __chkstk_darwin(v5);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + 16;
  swift_beginAccess(v8, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (char *)Strong;
    swift_beginAccess(v8, v30, 0, 0);
    v11 = (void *)swift_unknownObjectWeakLoadStrong(v8);
    v12 = v11;
    if (v11)
    {
      v13 = objc_msgSend(v11, "collectionView");

      if (!v13)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v13, "contentOffset");
      v15 = v14;
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = &v10[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_preselectionContentOffset];
    *(_QWORD *)v18 = v15;
    *((_QWORD *)v18 + 1) = v17;
    v18[16] = v12 == 0;

  }
  swift_beginAccess(v8, v29, 0, 0);
  v19 = swift_unknownObjectWeakLoadStrong(v8);
  if (v19)
  {
    v20 = (void *)v19;
    v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_facetsPresenter);
    swift_retain(v21);

    v23 = PageFacets.Facet.options.getter(v22);
    v24 = *(_QWORD *)(v23 + 16);
    v25 = type metadata accessor for PageFacets.Facet.Option(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (v24)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v7, v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), v25);
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v7, v27, 1, v25);
    swift_bridgeObjectRelease(v23);
    PageFacetsPresenter.didSelect(option:in:)(v7, a3);
    swift_release(v21);
    sub_100011088((uint64_t)v7, &qword_1008005E8);
  }
}

uint64_t sub_1003393D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  double *v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  void *object;
  uint64_t v28;
  double *v29;
  int64_t v30;
  char *v31;
  double (*v32)(char *, char *, uint64_t);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  unint64_t v38;
  unint64_t v39;
  double *v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  double *v47;
  double (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  double *v51;

  v4 = type metadata accessor for PageFacets.Facet.Option(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if ((PageFacets.Facet.showsSelectedOptions.getter(v6) & 1) != 0)
  {
    if (*(_QWORD *)(a2 + 16) && (v10 = sub_10036C7DC(a1), (v11 & 1) != 0))
    {
      v12 = *(_QWORD **)(*(_QWORD *)(a2 + 56) + 8 * v10);
      v13 = v12[2];
      v14 = swift_bridgeObjectRetain(v12);
      v15 = PageFacets.Facet.options.getter(v14);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = swift_bridgeObjectRelease(v15);
      if (v13 == v16)
      {
        swift_bridgeObjectRelease(v12);
        v18._countAndFlagsBits = 0xD000000000000025;
        v18._object = (void *)0x8000000100644D50;
        v19._countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        return localizedString(_:comment:)(v18, v19)._countAndFlagsBits;
      }
      v28 = PageFacets.Facet.options.getter(v17);
      v29 = sub_10033C028(v28, v12);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v12);
      v30 = *((_QWORD *)v29 + 2);
      if (v30)
      {
        v51 = _swiftEmptyArrayStorage;
        sub_100021A14(0, v30, 0);
        v31 = (char *)v29 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        v49 = *(_QWORD *)(v5 + 72);
        v50 = v5;
        v32 = *(double (**)(char *, char *, uint64_t))(v5 + 16);
        v47 = v29;
        v48 = v32;
        do
        {
          v33.n128_f64[0] = v48(v8, v31, v4);
          v34 = PageFacets.Facet.Option.title.getter(v33);
          v36 = v35;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          v37 = v51;
          if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
          {
            sub_100021A14(0, *((_QWORD *)v37 + 2) + 1, 1);
            v37 = v51;
          }
          v39 = *((_QWORD *)v37 + 2);
          v38 = *((_QWORD *)v37 + 3);
          if (v39 >= v38 >> 1)
          {
            sub_100021A14(v38 > 1, v39 + 1, 1);
            v37 = v51;
          }
          *((_QWORD *)v37 + 2) = v39 + 1;
          v40 = &v37[2 * v39];
          *((_QWORD *)v40 + 4) = v34;
          *((_QWORD *)v40 + 5) = v36;
          v5 = v50;
          v31 += v49;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease(v47);
      }
      else
      {
        swift_bridgeObjectRelease(v29);
        v37 = _swiftEmptyArrayStorage;
      }
      v51 = v37;
      v41._object = (void *)0x8000000100644D30;
      v41._countAndFlagsBits = 0xD00000000000001DLL;
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      v43 = localizedString(_:comment:)(v41, v42);
      v44 = sub_10000DF3C(&qword_100802220);
      v45 = sub_100010F98((unint64_t *)&qword_1007FAFD0, &qword_100802220, (const char *)&protocol conformance descriptor for [A]);
      v9 = BidirectionalCollection<>.joined(separator:)(v43._countAndFlagsBits, v43._object, v44, v45);
      swift_bridgeObjectRelease(v37);
      object = v43._object;
    }
    else
    {
      v20 = ((uint64_t (*)(void))PageFacets.Facet.options.getter)();
      __chkstk_darwin(v20);
      *(&v47 - 2) = (double *)a1;
      v21 = sub_1003BC0B4((void (*)(uint64_t *__return_ptr, uint64_t, __n128))sub_10033CB08, (uint64_t)(&v47 - 4), v20);
      swift_bridgeObjectRelease(v20);
      if (!*((_QWORD *)v21 + 2))
      {
        swift_bridgeObjectRelease(v21);
        return 0;
      }
      v51 = v21;
      v22._object = (void *)0x8000000100644D30;
      v22._countAndFlagsBits = 0xD00000000000001DLL;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v24 = localizedString(_:comment:)(v22, v23);
      v25 = sub_10000DF3C(&qword_100802220);
      v26 = sub_100010F98((unint64_t *)&qword_1007FAFD0, &qword_100802220, (const char *)&protocol conformance descriptor for [A]);
      v9 = BidirectionalCollection<>.joined(separator:)(v24._countAndFlagsBits, v24._object, v25, v26);
      swift_bridgeObjectRelease(v21);
      object = v24._object;
    }
    swift_bridgeObjectRelease(object);
  }
  return v9;
}

uint64_t sub_1003397BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = sub_10000DF3C((uint64_t *)&unk_100804D90);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __chkstk_darwin(v6);
  v9 = &v12[-v8];
  PageFacetsPresenter.FacetsState.facets.getter(v7);
  v10 = a2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets;
  swift_beginAccess(a2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets, v13, 0, 0);
  sub_1000194E4(v10, (uint64_t)v5, (uint64_t *)&unk_100804D90);
  swift_beginAccess(v10, v12, 33, 0);
  sub_10033C8BC((uint64_t)v9, v10);
  swift_endAccess(v12);
  sub_100336314((uint64_t)v5);
  sub_100011088((uint64_t)v9, (uint64_t *)&unk_100804D90);
  return sub_100011088((uint64_t)v5, (uint64_t *)&unk_100804D90);
}

uint64_t (*sub_1003398D0(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100738EA8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_10033C8B4;
}

double (*sub_100339924(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100738E80, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_10033C864;
}

double sub_100339978(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __n128 v8;
  double result;
  _BYTE v10[24];

  v3 = PageFacetsPresenter.FacetsState.selectedFacetOptions.getter();
  v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions);
  swift_beginAccess(a2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions, v10, 1, 0);
  v5 = *v4;
  *v4 = v3;
  swift_bridgeObjectRetain(v3);
  sub_10033B8C4(v6, v5);
  LOBYTE(v4) = v7;
  v8 = swift_bridgeObjectRelease(v3);
  if ((v4 & 1) == 0)
    sub_100336D64(v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_100339A08(uint64_t a1, char *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  _QWORD v14[4];

  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v10 = result;
    v14[3] = ObjectType;
    v14[0] = a2;
    v11 = *(_QWORD *)&a2[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_objectGraph];
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
    v12 = a2;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v14, v8, v11);
    v13 = swift_release(v10);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v13);
    return sub_100011088((uint64_t)v14, &qword_1007F6E90);
  }
  return result;
}

uint64_t (*sub_100339B0C(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100738E30, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100738E58, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10033C814;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000ADE74;
}

uint64_t sub_100339B84(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

void sub_100339BA8(void *a1, uint64_t a2)
{
  char *v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, _QWORD, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __n128 v88;
  void (*v89)(char *, uint64_t, __n128);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  __n128 v105;
  void (*v106)(uint64_t, uint64_t, __n128);
  uint64_t v107;
  int v108;
  char *v109;
  void (*v110)(char *, uint64_t, __n128);
  char *v111;
  void (*v112)(char *, char *, uint64_t);
  __n128 v113;
  void (*v114)(char *, uint64_t, __n128);
  uint64_t (*v115)(char *, char *, uint64_t);
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char v121;
  __n128 v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  char v126;
  id v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, _QWORD, uint64_t);
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __n128 v152;
  uint64_t v153;
  Class isa;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  double *v159;
  char v160;
  __n128 v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  __n128 v173;
  void *v174;
  char *v175;
  char *v176;
  void (*v177)(char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  void *v187;
  uint64_t v188;
  id v189;
  __n128 v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  void (*v225)(uint64_t);
  void (*v226)(char *, uint64_t, __n128);
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  id v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void **aBlock;
  uint64_t v246;
  uint64_t (*v247)(uint64_t);
  void *v248;
  void (*v249)();
  uint64_t v250;
  void **v251;
  uint64_t v252;

  v235 = a1;
  v224 = type metadata accessor for DispatchWorkItemFlags(0);
  v223 = *(_QWORD *)(v224 - 8);
  v4 = __chkstk_darwin(v224);
  v222 = (char *)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for DispatchQoS(0, v4);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v219 = (char *)&v198 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = type metadata accessor for IndexPath(0);
  v215 = *(_QWORD *)(v216 - 8);
  v7 = __chkstk_darwin(v216);
  v213 = v8;
  v214 = (char *)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = type metadata accessor for DispatchTime(0, v7);
  v212 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v211 = (char *)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v217 = (char *)&v198 - v11;
  v12 = sub_10000DF3C(&qword_1007F74D0);
  v13 = __chkstk_darwin(v12);
  v203 = (char *)&v198 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v13);
  v204 = *(_QWORD *)(v205 - 8);
  v15 = __chkstk_darwin(v205);
  v202 = (char *)&v198 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for UICellAccessory.DisplayedState(0, v15);
  v200 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v198 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_1008005E8);
  v19 = __chkstk_darwin(v18);
  v209 = (char *)&v198 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for PageFacets.Facet.DisplayType(0, v19);
  v241 = *(_QWORD *)(v243 - 8);
  __chkstk_darwin(v243);
  v226 = (void (*)(char *, uint64_t, __n128))((char *)&v198 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v225 = (void (*)(uint64_t))((char *)&v198 - v23);
  __chkstk_darwin(v24);
  v26 = (char *)&v198 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v198 - v28;
  __chkstk_darwin(v30);
  v207 = (char *)&v198 - v31;
  __chkstk_darwin(v32);
  v206 = (char *)&v198 - v33;
  __chkstk_darwin(v34);
  v232 = (char *)&v198 - v35;
  __chkstk_darwin(v36);
  v227 = (char *)&v198 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v198 - v39;
  __chkstk_darwin(v41);
  v43 = (char *)&v198 - v42;
  v233 = type metadata accessor for PageFacets.Facet.Option(0);
  v236 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v229 = (uint64_t)&v198 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v240 = (char *)&v198 - v46;
  v244 = type metadata accessor for PageFacets.Facet(0);
  v238 = *(_QWORD *)(v244 - 8);
  __chkstk_darwin(v244);
  v208 = (char *)&v198 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v231 = (char *)&v198 - v49;
  __chkstk_darwin(v50);
  v239 = (char *)&v198 - v51;
  __chkstk_darwin(v52);
  v228 = (char *)&v198 - v53;
  __chkstk_darwin(v54);
  v230 = (uint64_t)&v198 - v55;
  __chkstk_darwin(v56);
  v237 = (char *)&v198 - v57;
  v58 = sub_10000DF3C(&qword_100808558);
  __chkstk_darwin(v58);
  v60 = (char *)&v198 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for PageFacetsViewController.Item(0);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v64 = (char *)&v198 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v65);
  v242 = (uint64_t)&v198 - v66;
  v234 = v2;
  v67 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource];
  if (!v67)
  {
    __break(1u);
    return;
  }
  v68 = v67;
  v210 = a2;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
  {
    sub_100011088((uint64_t)v60, &qword_100808558);
    return;
  }
  v69 = v242;
  sub_10033C718((uint64_t)v60, v242);
  sub_10033B808(v69, (uint64_t)v64);
  if (swift_getEnumCaseMultiPayload(v64, v61) == 1)
  {
    v70 = &v64[*(int *)(sub_10000DF3C(&qword_100808490) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v237, v64, v244);
    v71 = v233;
    v72 = (*(uint64_t (**)(char *, char *, uint64_t))(v236 + 32))(v240, v70, v233);
    PageFacets.Facet.displayType.getter(v72);
    v73 = *(char **)(v241 + 104);
    LODWORD(v208) = enum case for PageFacets.Facet.DisplayType.multipleSelection(_:);
    v74 = v243;
    ((void (*)(char *))v73)(v40);
    v75 = sub_10000E99C(&qword_1008005F0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v74, v75);
    dispatch thunk of RawRepresentable.rawValue.getter(&v251, v74, v75);
    v76 = v246;
    v77 = v252;
    v231 = v73;
    if (aBlock == v251 && v246 == v252)
    {
      v78 = 1;
      v77 = v246;
    }
    else
    {
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v246, v251, v252, 0);
    }
    swift_bridgeObjectRelease(v76);
    v88 = swift_bridgeObjectRelease(v77);
    v89 = *(void (**)(char *, uint64_t, __n128))(v241 + 8);
    v90 = v243;
    v89(v40, v243, v88);
    v226 = v89;
    ((void (*)(char *, uint64_t))v89)(v43, v90);
    v91 = v238;
    v92 = v230;
    v93 = v237;
    v94 = v244;
    v225 = *(void (**)(uint64_t))(v238 + 16);
    v225(v230);
    v95 = v236;
    v96 = *(void (**)(uint64_t, char *, uint64_t))(v236 + 16);
    v97 = v229;
    v96(v229, v240, v71);
    if ((v78 & 1) == 0)
    {
      v98 = &v234[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions];
      swift_beginAccess(&v234[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions], &aBlock, 32, 0);
      v99 = *(_QWORD *)v98;
      if (*(_QWORD *)(v99 + 16))
      {
        v92 = v230;
        v100 = sub_10036C7DC(v230);
        if ((v101 & 1) != 0)
        {
          v102 = *(_QWORD *)(*(_QWORD *)(v99 + 56) + 8 * v100);
          swift_endAccess(&aBlock);
          swift_bridgeObjectRetain(v102);
          v103 = v229;
          v104 = sub_100246974(v229, v102);
          v105 = swift_bridgeObjectRelease(v102);
          v95 = v236;
          v106 = *(void (**)(uint64_t, uint64_t, __n128))(v236 + 8);
          v106(v103, v71, v105);
          v241 = *(_QWORD *)(v238 + 8);
          v107 = ((uint64_t (*)(uint64_t, uint64_t))v241)(v92, v244);
          v239 = (char *)v106;
          if ((v104 & 1) != 0)
          {
            v108 = 0;
            v109 = v93;
            v110 = v226;
            v111 = v227;
            v112 = (void (*)(char *, char *, uint64_t))v225;
LABEL_33:
            PageFacets.Facet.displayType.getter(v107);
            v136 = v243;
            v137 = (void (*)(char *, _QWORD, uint64_t))v231;
            ((void (*)(char *, _QWORD, uint64_t))v231)(v232, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v243);
            dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v136, v75);
            dispatch thunk of RawRepresentable.rawValue.getter(&v251, v136, v75);
            v138 = v246;
            v139 = v252;
            if (aBlock == v251 && v246 == v252)
            {
              v140 = swift_bridgeObjectRelease_n(v246, 2);
              v141 = v243;
              v110(v232, v243, v140);
              ((void (*)(char *, uint64_t))v110)(v111, v141);
              v142 = v228;
              v143 = v244;
              v112(v228, v109, v244);
            }
            else
            {
              v144 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v246, v251, v252, 0);
              swift_bridgeObjectRelease(v138);
              v145 = swift_bridgeObjectRelease(v139);
              v146 = v243;
              v110(v232, v243, v145);
              ((void (*)(char *, uint64_t))v110)(v111, v146);
              v142 = v228;
              v143 = v244;
              v147 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v228, v109, v244);
              if ((v144 & 1) == 0)
              {
                v148 = v206;
                PageFacets.Facet.displayType.getter(v147);
                v137(v207, v208, v146);
                dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v146, v75);
                dispatch thunk of RawRepresentable.rawValue.getter(&v251, v146, v75);
                v149 = v246;
                v150 = v252;
                v151 = v146;
                if (aBlock != v251 || v246 != v252)
                {
                  v160 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v246, v251, v252, 0);
                  swift_bridgeObjectRelease(v149);
                  v161 = swift_bridgeObjectRelease(v150);
                  v110(v207, v151, v161);
                  ((void (*)(char *, uint64_t))v110)(v148, v151);
                  v162 = v244;
                  ((void (*)(char *, uint64_t))v241)(v228, v244);
                  if ((v160 & 1) == 0)
                  {
                    ((void (*)(char *, uint64_t))v239)(v240, v233);
                    v163 = v109;
                    v164 = v162;
LABEL_52:
                    ((void (*)(char *, uint64_t))v241)(v163, v164);
                    goto LABEL_53;
                  }
LABEL_41:
                  v153 = v210;
                  if (v108)
                  {
                    isa = IndexPath._bridgeToObjectiveC()().super.isa;
                    v155 = objc_msgSend(v235, "cellForItemAtIndexPath:", isa);

                    if (v155)
                    {
                      v156 = objc_opt_self(UICollectionViewListCell);
                      if (swift_dynamicCastObjCClass(v155, v156))
                      {
                        v157 = UICollectionViewListCell.accessories.getter();
                        v158 = *(_QWORD *)(v157 + 16);
                        swift_bridgeObjectRelease(v157);
                        if (v158)
                        {
                          v159 = _swiftEmptyArrayStorage;
                        }
                        else
                        {
                          v165 = sub_10000DF3C(&qword_1007F74D8);
                          v166 = type metadata accessor for UICellAccessory(0);
                          v159 = (double *)swift_allocObject(v165, ((*(unsigned __int8 *)(*(_QWORD *)(v166 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v166 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v166 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v166 - 8) + 80) | 7);
                          *((_OWORD *)v159 + 1) = xmmword_10066FBA0;
                          v167 = v200;
                          v168 = v199;
                          v169 = v201;
                          (*(void (**)(char *, _QWORD, uint64_t))(v200 + 104))(v199, enum case for UICellAccessory.DisplayedState.always(_:), v201);
                          v170 = type metadata accessor for UICellAccessory.LayoutDimension(0);
                          v171 = v203;
                          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v203, 1, 1, v170);
                          v172 = v202;
                          UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v171, 0);
                          static UICellAccessory.checkmark(displayed:options:)(v168, v172);
                          (*(void (**)(char *, uint64_t))(v204 + 8))(v172, v205);
                          (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v169);
                        }
                        UICollectionViewListCell.accessories.setter(v159);
                      }

                    }
                  }
                  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
                  v174 = (void *)static OS_dispatch_queue.main.getter(v173);
                  v175 = v211;
                  static DispatchTime.now()(v174);
                  v176 = v217;
                  + infix(_:_:)(v175, 0.05);
                  v177 = *(void (**)(char *, uint64_t))(v212 + 8);
                  v178 = v218;
                  v177(v175, v218);
                  v179 = v215;
                  v180 = v214;
                  v181 = v153;
                  v182 = v216;
                  (*(void (**)(char *, uint64_t, uint64_t))(v215 + 16))(v214, v181, v216);
                  v183 = *(unsigned __int8 *)(v179 + 80);
                  v184 = (v183 + 24) & ~v183;
                  v185 = swift_allocObject(&unk_100738D90, v184 + v213, v183 | 7);
                  v186 = v235;
                  *(_QWORD *)(v185 + 16) = v235;
                  (*(void (**)(uint64_t, char *, uint64_t))(v179 + 32))(v185 + v184, v180, v182);
                  v249 = sub_1001D058C;
                  v250 = v185;
                  aBlock = _NSConcreteStackBlock;
                  v246 = 1107296256;
                  v247 = sub_1000BD6CC;
                  v248 = &unk_100738DA8;
                  v187 = _Block_copy(&aBlock);
                  v188 = v250;
                  v189 = v186;
                  v190 = swift_release(v188);
                  v191 = v219;
                  static DispatchQoS.unspecified.getter(v190);
                  aBlock = (void **)_swiftEmptyArrayStorage;
                  v192 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
                  v193 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
                  v194 = sub_100010F98((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00, (const char *)&protocol conformance descriptor for [A]);
                  v195 = v222;
                  v196 = v193;
                  v197 = v224;
                  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v196, v194, v224, v192);
                  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v176, v191, v195, v187);
                  _Block_release(v187);

                  (*(void (**)(char *, uint64_t))(v223 + 8))(v195, v197);
                  (*(void (**)(char *, uint64_t))(v220 + 8))(v191, v221);
                  v177(v176, v178);
                  ((void (*)(char *, uint64_t))v239)(v240, v233);
                  v163 = v237;
                  v164 = v244;
                  goto LABEL_52;
                }
                v152 = swift_bridgeObjectRelease_n(v246, 2);
                v110(v207, v146, v152);
                ((void (*)(char *, uint64_t))v110)(v148, v146);
                v143 = v244;
                v142 = v228;
              }
            }
            ((void (*)(char *, uint64_t))v241)(v142, v143);
            goto LABEL_41;
          }
LABEL_32:
          v109 = v93;
          v111 = v227;
          v112 = (void (*)(char *, char *, uint64_t))v225;
          objc_msgSend(v235, "contentOffset");
          v132 = &v234[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_preselectionContentOffset];
          *(_QWORD *)v132 = v133;
          *((_QWORD *)v132 + 1) = v134;
          v132[16] = 0;
          v135 = (uint64_t)v209;
          v96((uint64_t)v209, v240, v71);
          v108 = 1;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v135, 0, 1, v71);
          PageFacetsPresenter.didSelect(option:in:)(v135, v93);
          v107 = sub_100011088(v135, &qword_1008005E8);
          v110 = v226;
          goto LABEL_33;
        }
        swift_endAccess(&aBlock);
        v94 = v244;
        v91 = v238;
        v95 = v236;
        v97 = v229;
      }
      else
      {
        swift_endAccess(&aBlock);
        v94 = v244;
        v91 = v238;
        v95 = v236;
        v97 = v229;
        v92 = v230;
      }
    }
    v239 = *(char **)(v95 + 8);
    ((void (*)(uint64_t, uint64_t))v239)(v97, v71);
    v241 = *(_QWORD *)(v91 + 8);
    ((void (*)(uint64_t, uint64_t))v241)(v92, v94);
    goto LABEL_32;
  }
  v79 = v238;
  v80 = v244;
  v81 = (*(uint64_t (**)(char *, char *, uint64_t))(v238 + 32))(v239, v64, v244);
  PageFacets.Facet.displayType.getter(v81);
  v82 = *(void (**)(char *, _QWORD, uint64_t))(v241 + 104);
  v83 = v243;
  v82(v26, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v243);
  v84 = sub_10000E99C(&qword_1008005F0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v83, v84);
  dispatch thunk of RawRepresentable.rawValue.getter(&v251, v83, v84);
  v85 = v246;
  v86 = v252;
  if (aBlock == v251 && v246 == v252)
  {
    v87 = 1;
    v86 = v246;
  }
  else
  {
    v87 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v246, v251, v252, 0);
  }
  swift_bridgeObjectRelease(v85);
  v113 = swift_bridgeObjectRelease(v86);
  v114 = *(void (**)(char *, uint64_t, __n128))(v241 + 8);
  v114(v26, v83, v113);
  ((void (*)(char *, uint64_t))v114)(v29, v83);
  v115 = *(uint64_t (**)(char *, char *, uint64_t))(v79 + 16);
  v116 = v231;
  v117 = v115(v231, v239, v80);
  if ((v87 & 1) != 0)
  {
    v118 = *(void (**)(char *, uint64_t))(v79 + 8);
    v118(v116, v80);
LABEL_25:
    v123 = (uint64_t)v208;
    v115(v208, v239, v80);
    v124 = v234;
    v125 = *(_QWORD *)&v234[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_facetsPresenter];
    v126 = v234[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_showDoneButton];
    v127 = objc_allocWithZone((Class)type metadata accessor for PageFacetOptionsViewController(0));
    swift_retain(v125);
    v128 = (char *)sub_1001D00B8(v123, v125, v126);
    swift_release(v125);
    v129 = &v128[OBJC_IVAR____TtC22SubscribePageExtension30PageFacetOptionsViewController_delegate];
    *((_QWORD *)v129 + 1) = &off_100738D70;
    swift_unknownObjectWeakAssign(v129, v124);
    v130 = (char *)objc_msgSend(v124, "navigationController");
    if (v130)
    {
      v131 = v130;
      objc_msgSend(v130, "pushViewController:animated:", v128, 1);

      v128 = v131;
    }

    goto LABEL_28;
  }
  PageFacets.Facet.displayType.getter(v117);
  v82((char *)v226, enum case for PageFacets.Facet.DisplayType.multipleSelection(_:), v83);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v83, v84);
  dispatch thunk of RawRepresentable.rawValue.getter(&v251, v83, v84);
  v119 = v246;
  v120 = v252;
  if (aBlock == v251 && v246 == v252)
  {
    v121 = 1;
    v120 = v246;
  }
  else
  {
    v121 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v246, v251, v252, 0);
  }
  swift_bridgeObjectRelease(v119);
  v122 = swift_bridgeObjectRelease(v120);
  v114((char *)v226, v83, v122);
  ((void (*)(void (*)(uint64_t), uint64_t))v114)(v225, v83);
  v118 = *(void (**)(char *, uint64_t))(v79 + 8);
  v118(v231, v80);
  if ((v121 & 1) != 0)
    goto LABEL_25;
LABEL_28:
  v118(v239, v80);
LABEL_53:
  sub_10033B534(v242);
}

uint64_t sub_10033B124()
{
  return type metadata accessor for PageFacetsViewController(0);
}

uint64_t type metadata accessor for PageFacetsViewController(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_100808478, (uint64_t)&nominal type descriptor for PageFacetsViewController);
}

void sub_10033B140(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100685760;
  sub_10033B1F4(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = &unk_100685778;
    v4[6] = &unk_100685790;
    v4[7] = &unk_100685778;
    v4[8] = &unk_1006857A8;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_10033B1F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100808488)
  {
    v2 = type metadata accessor for PageFacets(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100808488);
  }
}

uint64_t *sub_10033B248(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for PageFacets.Facet(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *(int *)(sub_10000DF3C(&qword_100808490) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PageFacets.Facet.Option(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = a1;
      v14 = a3;
      v15 = 1;
    }
    else
    {
      v13 = a1;
      v14 = a3;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_10033B334(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v4 = type metadata accessor for PageFacets.Facet(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a1 + *(int *)(sub_10000DF3C(&qword_100808490) + 48);
    v7 = type metadata accessor for PageFacets.Facet.Option(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_10033B3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for PageFacets.Facet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *(int *)(sub_10000DF3C(&qword_100808490) + 48);
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = type metadata accessor for PageFacets.Facet.Option(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v12);
  return a1;
}

uint64_t sub_10033B46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10033B534(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for PageFacets.Facet(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(sub_10000DF3C(&qword_100808490) + 48);
      v9 = a1 + v8;
      v10 = a2 + v8;
      v11 = type metadata accessor for PageFacets.Facet.Option(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v12);
  }
  return a1;
}

uint64_t sub_10033B534(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PageFacetsViewController.Item(uint64_t a1)
{
  return sub_10005C17C(a1, qword_100808508, (uint64_t)&nominal type descriptor for PageFacetsViewController.Item);
}

uint64_t sub_10033B584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for PageFacets.Facet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *(int *)(sub_10000DF3C(&qword_100808490) + 48);
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = type metadata accessor for PageFacets.Facet.Option(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v12);
  return a1;
}

uint64_t sub_10033B63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10033B534(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for PageFacets.Facet(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(sub_10000DF3C(&qword_100808490) + 48);
      v9 = a1 + v8;
      v10 = a2 + v8;
      v11 = type metadata accessor for PageFacets.Facet.Option(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v12);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FlowDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_10033B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10033B730(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[2];

  result = type metadata accessor for PageFacets.Facet(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v7[0] = v4;
    result = type metadata accessor for PageFacets.Facet.Option(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, v4, *(_QWORD *)(result - 8) + 64);
      v7[1] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v7);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10033B7C8()
{
  return sub_10000E99C(&qword_100808540, type metadata accessor for PageFacetsViewController.Item, (uint64_t)"q7\v");
}

uint64_t sub_10033B7F4()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_actionRunner));
}

uint64_t sub_10033B808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033B84C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char v5;
  __n128 v6;
  uint64_t result;
  uint64_t v8;

  v4 = PageFacets.Facet.defaultOptions.getter();
  v5 = sub_100246974(a1, v4);
  v6 = swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
  {
    result = PageFacets.Facet.Option.title.getter(v6);
  }
  else
  {
    result = 0;
    v8 = 0;
  }
  *a2 = result;
  a2[1] = v8;
  return result;
}

void sub_10033B8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int64_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for PageFacets.Facet(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C(&qword_1008085A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  if (a1 == a2)
  {
    v51 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v51 = 0;
    return;
  }
  v47 = a1;
  v48 = (char *)&v44 - v10;
  v50 = 0;
  v12 = *(_QWORD *)(a1 + 64);
  v45 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v46 = (unint64_t)(v13 + 63) >> 6;
  v44 = v46 - 1;
  v16 = (uint64_t *)&unk_1008085A8;
  v17 = v52;
  v18 = (uint64_t)v49;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v20 = (v15 - 1) & v15;
      v21 = v19 | (v50 << 6);
      v22 = (uint64_t)v48;
LABEL_8:
      v23 = v47;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v52 + 16))(v8, *(_QWORD *)(v47 + 48) + *(_QWORD *)(v52 + 72) * v21, v53, v11);
      v24 = *(_QWORD *)(v23 + 56);
      v25 = sub_10000DF3C(v16);
      v26 = *(_QWORD *)(v24 + 8 * v21);
      *(_QWORD *)&v8[*(int *)(v25 + 48)] = v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
      swift_bridgeObjectRetain(v26);
      goto LABEL_30;
    }
    v27 = v50 + 1;
    v22 = (uint64_t)v48;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 < v46)
    {
      v28 = *(_QWORD *)(v45 + 8 * v27);
      if (v28)
        goto LABEL_12;
      v29 = v50 + 2;
      ++v50;
      if (v27 + 1 < v46)
      {
        v28 = *(_QWORD *)(v45 + 8 * v29);
        if (v28)
          goto LABEL_15;
        v50 = v27 + 1;
        if (v27 + 2 < v46)
        {
          v28 = *(_QWORD *)(v45 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          v50 = v27 + 2;
          if (v27 + 3 < v46)
          {
            v28 = *(_QWORD *)(v45 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_12;
            }
            v29 = v27 + 4;
            v50 = v27 + 3;
            if (v27 + 4 < v46)
              break;
          }
        }
      }
    }
LABEL_29:
    v30 = sub_10000DF3C(v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 1, 1, v30);
    v20 = 0;
LABEL_30:
    sub_10033C86C((uint64_t)v8, v22);
    v31 = sub_10000DF3C(v16);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v22, 1, v31);
    v51 = v32 == 1;
    if (v32 == 1)
      return;
    v33 = v20;
    v34 = v16;
    v35 = *(int *)(v31 + 48);
    v36 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v18, v22, v53);
    v37 = *(_QWORD *)(v22 + v35);
    v38 = sub_10036C7DC(v18);
    LOBYTE(v35) = v39;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v36);
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease(v37);
      goto LABEL_36;
    }
    v40 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v38);
    swift_bridgeObjectRetain(v40);
    sub_1001CFD48(v41, v37);
    v43 = v42;
    swift_bridgeObjectRelease(v37);
    v11 = swift_bridgeObjectRelease(v40);
    v16 = v34;
    v15 = v33;
    if ((v43 & 1) == 0)
      return;
  }
  v28 = *(_QWORD *)(v45 + 8 * v29);
  if (v28)
  {
LABEL_15:
    v27 = v29;
LABEL_12:
    v20 = (v28 - 1) & v28;
    v21 = __clz(__rbit64(v28)) + (v27 << 6);
    v50 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v46)
    {
      v50 = v44;
      goto LABEL_29;
    }
    v28 = *(_QWORD *)(v45 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_10033BCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char v37;
  void (*v38)(uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v49 = (char *)a1;
  v50 = (char *)a2;
  v46 = type metadata accessor for PageFacets.Facet.Option(0);
  v2 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - v6;
  v8 = type metadata accessor for PageFacets.Facet(0);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  v20 = sub_10000DF3C(&qword_100808550);
  __chkstk_darwin(v20);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_10033B808((uint64_t)v49, (uint64_t)v22);
  sub_10033B808((uint64_t)v50, v24);
  if (swift_getEnumCaseMultiPayload(v22, v14) != 1)
  {
    sub_10033B808((uint64_t)v22, (uint64_t)v19);
    if (swift_getEnumCaseMultiPayload(v24, v14) != 1)
    {
      v42 = v47;
      v41 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v13, v24, v48);
      v37 = static PageFacets.Facet.== infix(_:_:)(v19, v13);
      v36 = *(void (**)(char *, uint64_t))(v42 + 8);
      v36(v13, v41);
      v39 = v19;
      v40 = v41;
      goto LABEL_10;
    }
    v16 = v19;
    goto LABEL_8;
  }
  v49 = v10;
  v50 = v4;
  v25 = v7;
  v26 = v2;
  v27 = v46;
  sub_10033B808((uint64_t)v22, (uint64_t)v16);
  v28 = *(int *)(sub_10000DF3C(&qword_100808490) + 48);
  v29 = &v16[v28];
  if (swift_getEnumCaseMultiPayload(v24, v14) != 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(&v16[v28], v27);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
    sub_100011088((uint64_t)v22, &qword_100808550);
LABEL_12:
    v37 = 0;
    return v37 & 1;
  }
  v45 = (char *)(v24 + v28);
  v30 = v47;
  v31 = v48;
  v32 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v49, v24, v48);
  v33 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v33(v25, v29, v27);
  v34 = (uint64_t)v50;
  v33(v50, v45, v27);
  v35 = v32;
  LOBYTE(v32) = static PageFacets.Facet.== infix(_:_:)(v16, v32);
  v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v16, v31);
  if ((v32 & 1) == 0)
  {
    v43 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v43(v34, v27);
    v43((uint64_t)v25, v27);
    v36((char *)v35, v31);
    sub_10033B534((uint64_t)v22);
    goto LABEL_12;
  }
  v37 = static PageFacets.Facet.Option.== infix(_:_:)(v25, v34);
  v38 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v38(v34, v27);
  v38((uint64_t)v25, v27);
  v39 = (char *)v35;
  v40 = v31;
LABEL_10:
  v36(v39, v40);
  sub_10033B534((uint64_t)v22);
  return v37 & 1;
}

double *sub_10033C028(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  double *result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, char *, uint64_t);
  double *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, uint64_t, uint64_t, __n128);
  uint64_t v44;
  double *v45;

  v5 = type metadata accessor for PageFacets.Facet.Option(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v35 - v13;
  result = _swiftEmptyArrayStorage;
  v45 = _swiftEmptyArrayStorage;
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v16 = 0;
    v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v18 = *(_QWORD *)(v6 + 72);
    v37 = v2;
    v38 = v17;
    v40 = a1 + v17;
    v43 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v44 = v18;
    v42 = a2 + 7;
    v19 = a2;
    do
    {
      v20 = v6;
      v43(v14, v40 + v44 * v16, v5, v12);
      if (v19[2]
        && (v21 = v19,
            v22 = v19[5],
            v23 = sub_10000E99C(&qword_1008005D8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option), v24 = dispatch thunk of Hashable._rawHashValue(seed:)(v22, v5, v23), v19 = v21, v25 = -1 << *((_BYTE *)v21 + 32), v26 = v24 & ~v25, ((*(_QWORD *)((char *)v42 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0))
      {
        v27 = ~v25;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v43)(v10, v19[6] + v26 * v44, v5);
          v28 = sub_10000E99C(&qword_1008005E0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
          v29 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v14, v5, v28);
          (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v5);
          if ((v29 & 1) != 0)
            break;
          v26 = (v26 + 1) & v27;
          v19 = v21;
          if (((*(_QWORD *)((char *)v42 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            goto LABEL_3;
        }
        v6 = v20;
        v30 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v30(v39, v14, v5);
        v31 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
        {
          sub_100021DDC(0, *((_QWORD *)v31 + 2) + 1, 1);
          v31 = v45;
        }
        v33 = *((_QWORD *)v31 + 2);
        v32 = *((_QWORD *)v31 + 3);
        v34 = v33 + 1;
        if (v33 >= v32 >> 1)
        {
          v36 = v33 + 1;
          sub_100021DDC(v32 > 1, v33 + 1, 1);
          v34 = v36;
          v31 = v45;
        }
        *((_QWORD *)v31 + 2) = v34;
        v30((char *)v31 + v38 + v33 * v44, v39, v5);
        v45 = v31;
        v19 = v21;
      }
      else
      {
LABEL_3:
        v6 = v20;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v5);
      }
      ++v16;
    }
    while (v16 != v41);
    return v45;
  }
  return result;
}

void sub_10033C32C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_pageFacets];
  v3 = type metadata accessor for PageFacets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_selectedFacetOptions;
  *(_QWORD *)&v0[v4] = sub_10036AD9C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_actionRunner] = 0;
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_preselectionContentOffset];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/PageFacetsViewController.swift", 53, 2, 71, 0);
  __break(1u);
}

void sub_10033C420(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for PageFacets.Facet.DisplayType(0, a2);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = type metadata accessor for PageFacets.Facet(0);
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_100808558);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PageFacetsViewController.Item(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v33 - v20;
  v22 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension24PageFacetsViewController_diffableDataSource);
  if (v22)
  {
    v23 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_100011088((uint64_t)v14, &qword_100808558);
    }
    else
    {
      sub_10033C718((uint64_t)v14, (uint64_t)v21);
      sub_10033B808((uint64_t)v21, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload(v18, v15) == 1)
      {
        sub_10033B534((uint64_t)v21);
        v24 = &v18[*(int *)(sub_10000DF3C(&qword_100808490) + 48)];
        v25 = type metadata accessor for PageFacets.Facet.Option(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
      }
      else
      {
        v27 = v35;
        v26 = v36;
        v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 32))(v11, v18, v36);
        PageFacets.Facet.displayType.getter(v28);
        v30 = v33;
        v29 = v34;
        (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for PageFacets.Facet.DisplayType.toggle(_:), v4);
        v31 = sub_10000E99C(&qword_100808560, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
        dispatch thunk of static Equatable.== infix(_:_:)(v8, v30, v4, v31);
        v32 = *(void (**)(char *, uint64_t))(v29 + 8);
        v32(v30, v4);
        v32(v8, v4);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
        sub_10033B534((uint64_t)v21);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10033C718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033C75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10033C7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10033C7E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10033C7E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10033C80C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003377B0(a1, a2, v2);
}

uint64_t sub_10033C814(uint64_t a1)
{
  uint64_t v1;

  return sub_100339A08(a1, *(char **)(v1 + 16));
}

uint64_t sub_10033C81C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033C840()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10033C864(uint64_t a1)
{
  uint64_t v1;

  return sub_100339978(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10033C86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1008085A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033C8B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003397BC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10033C8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100804D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10033C904(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100337C84(a1, a2, a3, v3);
}

unint64_t sub_10033C90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v5;

  return sub_100338EAC(a1, a5, a2, a3, a4, v5);
}

uint64_t sub_10033C914()
{
  return sub_10033C984(&qword_1008085C8);
}

uint64_t sub_10033C920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DF3C(&qword_1008085C8) - 8) + 80);
  return sub_1003390DC(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_10033C978()
{
  return sub_10033C984(&qword_1008085C0);
}

uint64_t sub_10033C984(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_10000DF3C(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10033C9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DF3C(&qword_1008085C0) - 8) + 80);
  v7 = v4 + ((v6 + 16) & ~v6);
  v8 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v7, a4, v8);
}

uint64_t sub_10033CA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PageFacets.Facet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10033CAC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageFacets.Facet(0) - 8) + 80);
  sub_1003391D0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10033CB08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10033B84C(a1, a2);
}

uint64_t sub_10033CB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100804D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10033CB68(uint64_t a1)
{
  uint64_t v1;

  sub_100336254(a1, v1);
}

ValueMetadata *type metadata accessor for LocalAskToBuyActionImplementation()
{
  return &type metadata for LocalAskToBuyActionImplementation;
}

uint64_t sub_10033CB90()
{
  return sub_10000E99C(&qword_1008085D8, (uint64_t (*)(uint64_t))&type metadata accessor for LocalAskToBuyAction, (uint64_t)&protocol conformance descriptor for Action);
}

uint64_t sub_10033CBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0, v7);
  v10 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C0EC4();
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_100739000, 40, 7);
  v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  aBlock[4] = sub_10033D05C;
  v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100739018;
  v16 = _Block_copy(aBlock);
  v17 = v26;
  swift_retain(a2);
  swift_errorRetain(a1);
  swift_retain(a3);
  v18 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v21 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v23);
}

uint64_t sub_10033CDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for ActionOutcome(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void (*)(uint64_t))LocalAskToBuyAction.completion.getter(v5);
  v10 = v9;
  v8(a2);
  swift_release(v10);
  if (a2)
  {
    swift_errorRetain(a2);
    Promise.reject(_:)(a2);
    return swift_errorRelease(a2);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for ActionOutcome.performed(_:), v3);
    Promise.resolve(_:)(v7);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

uint64_t sub_10033CEBC(uint64_t *a1)
{
  return sub_10033CEC4(*a1);
}

uint64_t sub_10033CEC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[5];
  uint64_t v13;

  v2 = sub_10000DF3C(&qword_100803510);
  v3 = Promise.__allocating_init()(v2);
  v4 = (void *)objc_opt_self(APRequestHandler);
  LocalAskToBuyAction.adamIdString.getter();
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = swift_allocObject(&unk_100738FB0, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v3;
  v12[4] = sub_10033D008;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10002B92C;
  v12[3] = &unk_100738FC8;
  v9 = _Block_copy(v12);
  v10 = v13;
  swift_retain(a1);
  swift_retain(v3);
  objc_msgSend(v4, "localApproveRequestWithItemIdentifier:completion:", v7, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

  return v3;
}

uint64_t sub_10033CFDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033D008(uint64_t a1)
{
  uint64_t v1;

  return sub_10033CBBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10033D010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10033D020(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10033D028()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_errorRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10033D05C()
{
  uint64_t v0;

  return sub_10033CDC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10033D0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void (**)(uint64_t))&Strong[OBJC_IVAR____TtC22SubscribePageExtension28SelectCategoryViewController_selectionHandler];
    if (v6)
    {
      v7 = *(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension28SelectCategoryViewController_selectionHandler
                            + 8];
      sub_100019320(*(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension28SelectCategoryViewController_selectionHandler], v7);

      v6(a1);
      sub_100019310((uint64_t)v6, v7);
    }
    else
    {

    }
  }
}

uint64_t type metadata accessor for SelectCategoryViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension28SelectCategoryViewController);
}

void sub_10033D2A8()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "viewDidLoad");
  v1 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "contentScaleFactor");
    v5 = v4;

    objc_msgSend(v1, "setScale:", v5);
    objc_msgSend(v1, "setPreferredRange:", 1);
    v6 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v1, 22.0, 22.0);
    v10[4] = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
    v11 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10002756C;
    v10[3] = &unk_100739090;
    v7 = _Block_copy(v10);
    v8 = objc_msgSend(v6, "imageWithActions:", v7, swift_release(v11).n128_f64[0]);

    _Block_release(v7);
    if ((swift_isEscapingClosureAtFileLocation(0, "", 111, 202, 43, 1) & 1) == 0)
    {
      v9 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_placeholderImage];
      *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_placeholderImage] = v8;

      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10033D57C(void *a1, uint64_t a2, const char **a3, uint64_t a4)
{
  const char *v6;
  id v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  v6 = *a3;
  v7 = v8.receiver;
  objc_msgSendSuper2(&v8, v6);
  ArtworkLoader.isOccluded.setter(a4);

}

id sub_10033D7AC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  __n128 v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  id v36;
  __n128 v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _QWORD v59[2];
  void (*v60)(char *, uint64_t);
  id v61;
  _OWORD v62[2];
  uint64_t v63;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v10);

  if (!v11)
  {
    v12 = objc_allocWithZone((Class)UITableViewCell);
    v13 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v12, "initWithStyle:reuseIdentifier:", 0, v13);

  }
  v14 = objc_msgSend(v11, "imageView");
  if (v14)
  {
    v16 = v14;
    v17 = objc_retain(*(id *)(v3
                            + OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_placeholderImage));
    objc_msgSend(v16, "setImage:", v17);

  }
  v18 = *(_QWORD **)(v3
                   + OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_dataSource);
  v59[1] = a2;
  v19 = IndexPath.row.getter(v15);
  IndexPath.appending(_:)(v19);
  v20 = v18[5];
  v21 = v18[6];
  v59[0] = v18 + 2;
  sub_100011064(v18 + 2, v20);
  v22 = dispatch thunk of TopChartsCategoriesPresenter.categoryArtwork(at:)(v9, v20, v21);
  v60 = *(void (**)(char *, uint64_t))(v7 + 8);
  v60(v9, v6);
  if (v22)
  {
    v23 = objc_msgSend(v11, "imageView");
    if (v23)
    {
      v24 = v23;
      v25 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_placeholderImage));
      objc_msgSend(v24, "setImage:", v25);

    }
    v26 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, 22.0, 22.0);
    v27 = objc_msgSend(v11, "imageView");
    if (v27)
    {
      v61 = v27;
      v28 = sub_10016ABFC();
      v29 = sub_100312EB8();
      AnyHashable.init<A>(_:)(&v61, v28, v29);
    }
    else
    {
      v63 = 0;
      memset(v62, 0, sizeof(v62));
    }
    v33 = swift_allocObject(&unk_100739078, 24, 7);
    *(_QWORD *)(v33 + 16) = v11;
    v34 = v11;
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v26, 2, 0, v62, sub_10033E540, v33, v35);
    swift_release(v22);
    swift_release(v26);
    swift_release(v33);
    sub_100011088((uint64_t)v62, (uint64_t *)&unk_1007F9850);
    v31 = (_QWORD *)v59[0];
  }
  else
  {
    v30 = objc_msgSend(v11, "imageView");
    v31 = (_QWORD *)v59[0];
    if (v30)
    {
      v32 = v30;
      objc_msgSend(v30, "setImage:", 0);

    }
  }
  v36 = objc_msgSend(v11, "textLabel");
  if (v36)
  {
    v38 = v36;
    v39 = IndexPath.row.getter(v37);
    IndexPath.appending(_:)(v39);
    v40 = v31;
    v41 = v18[5];
    v42 = v18[6];
    sub_100011064(v40, v41);
    dispatch thunk of TopChartsCategoriesPresenter.categoryTitle(at:)(v9, v41, v42);
    v44 = v43;
    v60(v9, v6);
    if (v44)
    {
      v46 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v45 = swift_bridgeObjectRelease(v44).n128_u64[0];
    }
    else
    {
      v46 = 0;
    }
    objc_msgSend(v38, "setText:", v46, v45);

    v31 = (_QWORD *)v59[0];
  }
  v47 = IndexPath.row.getter(v37);
  IndexPath.appending(_:)(v47);
  v48 = v18[5];
  v49 = v18[6];
  sub_100011064(v31, v48);
  v50 = dispatch thunk of TopChartsCategoriesPresenter.hasChildren(at:)(v9, v48, v49);
  v51 = v60;
  v60(v9, v6);
  if ((v50 & 1) != 0)
  {
    objc_msgSend(v11, "setAccessoryType:", 1);
  }
  else
  {
    v53 = IndexPath.row.getter(v52);
    IndexPath.appending(_:)(v53);
    v54 = v18[5];
    v55 = v18[6];
    sub_100011064(v31, v54);
    v56 = dispatch thunk of TopChartsCategoriesPresenter.isCategorySelected(at:)(v9, v54, v55);
    v51(v9, v6);
    if ((v56 & 1) != 0)
      v57 = 3;
    else
      v57 = 0;
    objc_msgSend(v11, "setAccessoryType:", v57);
  }
  return v11;
}

void sub_10033DF50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_10033E00C()
{
  return type metadata accessor for CategoryListViewController(0);
}

uint64_t type metadata accessor for CategoryListViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008086C0;
  if (!qword_1008086C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CategoryListViewController);
  return result;
}

uint64_t sub_10033E050(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100685970;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100685988;
    v4[4] = &unk_1006859A0;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10033E0E8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v3 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowDestination(0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (_QWORD *)((char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    objc_msgSend(v1, "setModalPresentationStyle:", 7, v7);
    v10 = objc_msgSend(v1, "popoverPresentationController");
    objc_msgSend(v10, "setBarButtonItem:", a1);

    sub_10050AC30((uint64_t)v19);
    v11 = v20;
    if (v20)
      goto LABEL_5;
    __break(1u);
  }
  sub_10050AC30((uint64_t)v19);
  v11 = v20;
  if (!v20)
  {
    __break(1u);
    return;
  }
LABEL_5:
  v12 = v21;
  sub_100011064(v19, v11);
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v6, 19);
  v13 = qword_1007F31E8;
  v14 = v1;
  if (v13 != -1)
    swift_once(&qword_1007F31E8, sub_10059EF30);
  v15 = type metadata accessor for FlowPresentationHints(0);
  v16 = sub_1000117A8(v15, (uint64_t)qword_100857130);
  v17 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v12 + 16))(v9, v16, 0, 0, v5, v11, v12);
  sub_100011088((uint64_t)v5, (uint64_t *)&unk_1008086D0);
  sub_10018E470((uint64_t)v9);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
}

void sub_10033E2E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t *v24;
  void (*v25)(char *);
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class ObjectType;

  v1 = v0;
  ObjectType = (Class)swift_getObjectType();
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD **)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_dataSource];
  v8 = IndexPath.row.getter(v4);
  IndexPath.appending(_:)(v8);
  v9 = v7[5];
  v10 = v7[6];
  sub_100011064(v7 + 2, v9);
  v11 = dispatch thunk of TopChartsCategoriesPresenter.hasChildren(at:)(v6, v9, v10);
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  if ((v11 & 1) != 0)
  {
    v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_artworkLoader];
    swift_unknownObjectRetain(v7);
    v14 = swift_retain(v13);
    v15 = IndexPath.row.getter(v14);
    IndexPath.appending(_:)(v15);
    v16 = (char *)sub_1005B6CD8((uint64_t)v7, v13, (uint64_t)v6, (char *)objc_allocWithZone(ObjectType));
    swift_unknownObjectRelease(v7);
    swift_release(v13);
    v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler];
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler
                       + 8];
    v19 = (uint64_t *)&v16[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler];
    v20 = *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler];
    v21 = *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler
                        + 8];
    *v19 = v17;
    v19[1] = v18;
    sub_100019320(v17, v18);
    sub_100019310(v20, v21);
    v22 = objc_msgSend(v1, "navigationController");
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, "pushViewController:animated:", v16, 1);

    }
  }
  else
  {
    v24 = (uint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler];
    v25 = *(void (**)(char *))&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_E8A3C8C9EB70237120159EB97F20AEB326CategoryListViewController_selectionHandler];
    if (v25)
    {
      v26 = v24[1];
      v27 = swift_retain(v26);
      v28 = IndexPath.row.getter(v27);
      IndexPath.appending(_:)(v28);
      v25(v6);
      sub_100019310((uint64_t)v25, v26);
      v12(v6, v2);
    }
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
    v29 = *v24;
    v30 = v24[1];
    *v24 = 0;
    v24[1] = 0;
    sub_100019310(v29, v30);
  }
}

uint64_t sub_10033E51C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10033E540(uint64_t a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(*(id *)(v1 + 16), "imageView");
  objc_msgSend(v3, "setImage:", a1);

}

uint64_t sub_10033E594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10033E5A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

BOOL sub_10033E5AC(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v4 = v3;
  v8 = type metadata accessor for Feature.iOS(0);
  v20[3] = v8;
  v20[4] = sub_1000365B4();
  v9 = sub_1000117C0(v20);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.iOS.shelves_2_0_reviews(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v20);
  v10 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
  if ((v8 & 1) == 0)
  {
    v10 = UITraitCollection.prefersAccessibilityLayouts.getter(v10);
    if ((v10 & 1) != 0)
      return 1;
  }
  if ((UITraitCollection.isSizeClassCompact.getter(v10) & 1) != 0)
    return 1;
  v12 = v4[14];
  v13 = v4[15];
  sub_100011064(v4 + 11, v12);
  v14 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v12, v13, a2, a3);
  v15 = v4[19];
  v16 = v4[20];
  sub_100011064(v4 + 16, v15);
  v17 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v15, v16, a2, a3);
  v18 = v4[3];
  v19 = v4[4];
  sub_100011064(v4, v18);
  return v17 + v14 + AnyDimension.value(with:)(a1, v18, v19) > a2;
}

uint64_t sub_10033E708@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void (*v25)(char *, uint64_t);
  _QWORD *v26;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void (*v34)(char *, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[6];

  v3 = v2;
  v38 = a2;
  v5 = type metadata accessor for HorizontalStack(0);
  v36 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for VerticalStack(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v36 - v17;
  v37 = v3 + 128;
  if ((a1 & 1) != 0)
  {
    VerticalStack.init(with:)(sub_1001E4044, 0, v16);
    sub_100011020(v3 + 88, (uint64_t)v50);
    sub_10033EC9C(v3, (uint64_t)&v39);
    v19 = swift_allocObject(&unk_1007390F0, 184, 7);
    v20 = v48;
    *(_OWORD *)(v19 + 144) = v47;
    *(_OWORD *)(v19 + 160) = v20;
    *(_QWORD *)(v19 + 176) = v49;
    v21 = v44;
    *(_OWORD *)(v19 + 80) = v43;
    *(_OWORD *)(v19 + 96) = v21;
    v22 = v46;
    *(_OWORD *)(v19 + 112) = v45;
    *(_OWORD *)(v19 + 128) = v22;
    v23 = v40;
    *(_OWORD *)(v19 + 16) = v39;
    *(_OWORD *)(v19 + 32) = v23;
    v24 = v42;
    *(_OWORD *)(v19 + 48) = v41;
    *(_OWORD *)(v19 + 64) = v24;
    VerticalStack.adding(_:with:)(v50, sub_10033ED50, v19);
    swift_release(v19);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
    v25 = *(void (**)(char *, uint64_t))(v12 + 8);
    v25(v14, v11);
    v26 = v38;
    v38[3] = v11;
    v26[4] = &protocol witness table for VerticalStack;
    sub_1000117C0(v26);
    VerticalStack.adding(_:with:)(v37, 0, 0);
    return ((uint64_t (*)(char *, uint64_t))v25)(v18, v11);
  }
  else
  {
    HorizontalStack.init(with:)(sub_1001C1B04, 0);
    sub_100011020(v3 + 88, (uint64_t)v50);
    sub_10033EC9C(v3, (uint64_t)&v39);
    v28 = swift_allocObject(&unk_1007390C8, 184, 7);
    v29 = v48;
    *(_OWORD *)(v28 + 144) = v47;
    *(_OWORD *)(v28 + 160) = v29;
    *(_QWORD *)(v28 + 176) = v49;
    v30 = v44;
    *(_OWORD *)(v28 + 80) = v43;
    *(_OWORD *)(v28 + 96) = v30;
    v31 = v46;
    *(_OWORD *)(v28 + 112) = v45;
    *(_OWORD *)(v28 + 128) = v31;
    v32 = v40;
    *(_OWORD *)(v28 + 16) = v39;
    *(_OWORD *)(v28 + 32) = v32;
    v33 = v42;
    *(_OWORD *)(v28 + 48) = v41;
    *(_OWORD *)(v28 + 64) = v33;
    HorizontalStack.adding(_:with:)(v50, sub_10033ECD4, v28);
    swift_release(v28);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
    v34 = *(void (**)(char *, uint64_t))(v36 + 8);
    v34(v7, v5);
    v35 = v38;
    v38[3] = v5;
    v35[4] = &protocol witness table for HorizontalStack;
    sub_1000117C0(v35);
    HorizontalStack.adding(_:with:)(v37, 0, 0);
    return ((uint64_t (*)(char *, uint64_t))v34)(v10, v5);
  }
}

uint64_t sub_10033EA40(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, __n128);
  _QWORD v26[5];
  char v27;

  v11 = type metadata accessor for DisjointStack(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v26[-1] - v16;
  v18 = sub_10033E5AC((uint64_t)a1, a4, a5);
  sub_10033EC9C(v5, (uint64_t)v26);
  if (v18)
  {
    sub_100045CF0(v26);
    v19 = 0;
  }
  else
  {
    v20 = v27;
    sub_100045CF0(v26);
    v19 = v20 ^ 1;
  }
  sub_10033E708(v18, v26);
  DisjointStack.init(with:)(0, 0);
  v21 = swift_allocObject(&unk_100739228, 17, 7);
  *(_BYTE *)(v21 + 16) = v19 & 1;
  DisjointStack.inserting(_:at:with:)(v26, 0, 1, sub_10033F28C, v21);
  v22 = swift_release(v21);
  v23 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
  v23(v14, v11, v22);
  sub_1003A62F0(a1, a2, a3, a4, a5);
  ((void (*)(char *, uint64_t))v23)(v17, v11);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
}

void sub_10033EBE4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  __n128 v8;
  uint64_t v9;

  v3 = type metadata accessor for DisjointStack.EdgePosition(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    v6[3] = type metadata accessor for ZeroDimension(0);
    v6[4] = &protocol witness table for ZeroDimension;
    v7 = sub_1000117C0(v6);
    v8 = static ZeroDimension.zero.getter(v7);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for DisjointStack.EdgePosition.anchored(_:), v3, v8);
    DisjointStack.Properties.leadingEdge.setter(v6);
  }
}

uint64_t sub_10033EC9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductTapToRateLayout(a2, a1);
  return a2;
}

uint64_t sub_10033ECD4()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_100011020(v0 + 16, (uint64_t)v2);
  return HorizontalStack.Properties.trailingSpacing.setter(v2);
}

uint64_t sub_10033ED14()
{
  _QWORD *v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 2);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 8);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 18);
  return swift_deallocObject(v0, 184, 7);
}

uint64_t sub_10033ED50()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_100011020(v0 + 64, (uint64_t)v2);
  return VerticalStack.Properties.bottomSpacing.setter(v2);
}

uint64_t destroy for ProductTapToRateLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 6);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 11);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 16);
}

uint64_t initializeWithCopy for ProductTapToRateLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 88, a2 + 88);
  v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 128, a2 + 128);
  return a1;
}

uint64_t assignWithCopy for ProductTapToRateLayout(uint64_t a1, uint64_t a2)
{
  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  sub_10001216C((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
  sub_10001216C((_QWORD *)(a1 + 88), (_QWORD *)(a2 + 88));
  sub_10001216C((_QWORD *)(a1 + 128), (_QWORD *)(a2 + 128));
  return a1;
}

uint64_t assignWithTake for ProductTapToRateLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 48));
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 128));
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductTapToRateLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductTapToRateLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductTapToRateLayout()
{
  return &type metadata for ProductTapToRateLayout;
}

uint64_t destroy for ProductTapToRateLayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 6);
}

uint64_t initializeWithCopy for ProductTapToRateLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ProductTapToRateLayout.Metrics(uint64_t a1, uint64_t a2)
{
  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  sub_10001216C((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
  return a1;
}

uint64_t assignWithTake for ProductTapToRateLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 48));
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductTapToRateLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductTapToRateLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductTapToRateLayout.Metrics()
{
  return &type metadata for ProductTapToRateLayout.Metrics;
}

double sub_10033F1D0(uint64_t a1, double a2, double a3)
{
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v6 = sub_10033E5AC(a1, a2, a3);
  sub_10033E708(v6, v11);
  v7 = v12;
  v8 = v13;
  sub_100011064(v11, v12);
  v9 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v7, v8, a2, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v11);
  return v9;
}

uint64_t sub_10033F27C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10033F28C(uint64_t a1)
{
  uint64_t v1;

  sub_10033EBE4(a1, *(_BYTE *)(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for ProductTapToRateLayout.Metrics.HorizontalAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10033F2E0 + 4 * byte_1006859C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10033F314 + 4 * byte_1006859C0[v4]))();
}

uint64_t sub_10033F314(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033F31C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10033F324);
  return result;
}

uint64_t sub_10033F330(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10033F338);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10033F33C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033F344(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductTapToRateLayout.Metrics.HorizontalAlignment()
{
  return &type metadata for ProductTapToRateLayout.Metrics.HorizontalAlignment;
}

unint64_t sub_10033F364()
{
  unint64_t result;

  result = qword_100808750;
  if (!qword_100808750)
  {
    result = swift_getWitnessTable(&unk_100685A94, &type metadata for ProductTapToRateLayout.Metrics.HorizontalAlignment);
    atomic_store(result, (unint64_t *)&qword_100808750);
  }
  return result;
}

uint64_t sub_10033F3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  __n128 v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v23;

  v2 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Shelf.ContentType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v11);
  KeyPath = swift_getKeyPath(&unk_100685B08);
  ReadOnlyLens.subscript.getter(KeyPath, v9);
  v15 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v16 == enum case for Shelf.ContentType.paragraph(_:)
    || v16 == enum case for Shelf.ContentType.titledParagraph(_:))
  {
    if (qword_1007F3400 != -1)
      swift_once(&qword_1007F3400, sub_1005F6A90);
    v18 = type metadata accessor for TitleHeaderView.Style(0);
    v19 = sub_1000117A8(v18, (uint64_t)qword_100857430);
    return sub_10033F5D4(v19, a1);
  }
  else
  {
    v20 = type metadata accessor for ShelfHeader.Configuration(0);
    v21.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
    sub_1005F4D04(0, 0, 0, 0, 0, (uint64_t)v4, a1, v21);
    sub_100130EEC((uint64_t)v4);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t type metadata accessor for ArticlePageShelfSupplementaryProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension37ArticlePageShelfSupplementaryProvider);
}

uint64_t sub_10033F5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TitleHeaderView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033F618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_10033F660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = type metadata accessor for UberedPageScrollObserver();
  v7 = swift_allocObject(v6, 89, 7);
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit(v7 + 16);
  *(_QWORD *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_BYTE *)(v7 + 88) = 1;
  *(_QWORD *)(v7 + 24) = a2;
  swift_unknownObjectWeakAssign(v8, v3);
  v9 = swift_allocObject(&unk_100739350, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = (_QWORD *)swift_allocObject(&unk_100739378, 40, 7);
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = v9;
  v12 = *(_QWORD *)(v7 + 40);
  v11 = *(_QWORD *)(v7 + 48);
  *(_QWORD *)(v7 + 40) = sub_1003402A8;
  *(_QWORD *)(v7 + 48) = v10;
  sub_100019310(v12, v11);
  v13 = swift_allocObject(&unk_100739350, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = (_QWORD *)swift_allocObject(&unk_1007393A0, 40, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = v13;
  v16 = *(_QWORD *)(v7 + 56);
  v15 = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v7 + 56) = sub_100340594;
  *(_QWORD *)(v7 + 64) = v14;
  sub_100019310(v16, v15);
  v17 = swift_allocObject(&unk_100739350, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = (_QWORD *)swift_allocObject(&unk_1007393C8, 40, 7);
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = v17;
  v20 = *(_QWORD *)(v7 + 72);
  v19 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v7 + 72) = sub_100340934;
  *(_QWORD *)(v7 + 80) = v18;
  sub_100019310(v20, v19);
  return v7;
}

uint64_t sub_10033F7E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10033F80C(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;

  v4 = v3;
  v8 = objc_msgSend(v3, "navigationItem");
  v26 = objc_msgSend(v8, "titleView");

  if (!v26)
    return;
  v9 = type metadata accessor for UberNavigationBarTitleView();
  if (!swift_dynamicCastClass(v26, v9))
  {
    v21 = v26;
LABEL_19:

    return;
  }
  v10 = objc_msgSend(v4, "navigationController");
  if (!v10)
  {
LABEL_17:
    v20 = 1;
    goto LABEL_18;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "viewControllers");

  v13 = sub_1000531A4();
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v22 = v14;
    else
      v22 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v14);
    if (v23)
      goto LABEL_6;
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    swift_bridgeObjectRelease(v14);
    goto LABEL_17;
  }
LABEL_6:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v14 + 32);
LABEL_9:
    v16 = v15;
    swift_bridgeObjectRelease(v14);
    v17 = v4;
    v18 = v16;
    v19 = static NSObject.== infix(_:_:)(v18, v17);

    v20 = v19 ^ 1;
LABEL_18:
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3) & v20;
    v25 = objc_msgSend(v4, "navigationController");
    sub_1002D93A4(v25, v24 & 1, a1 & 1);

    v21 = v25;
    goto LABEL_19;
  }
  __break(1u);
}

void sub_10033FA40(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  id v9;

  v5 = (void *)(*(uint64_t (**)(void))(a2 + 32))();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v7 = sub_100340E48();
  CompoundScrollObserver.addChild(_:)(v6, v7);

  v8 = objc_msgSend(v2, "navigationItem", swift_release(v6).n128_f64[0]);
  v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  objc_msgSend(v8, "setTitleView:", v9);

}

void sub_10033FB0C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void **aBlock;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  void *v25;
  void *v26;
  _QWORD *v27;

  if (((*(uint64_t (**)(void))(a2 + 72))() & 1) == 0)
  {
    v5 = objc_msgSend(v2, "navigationItem");
    v6 = objc_msgSend(v5, "titleView");

    if (v6)
    {
      v7 = type metadata accessor for UberNavigationBarTitleView();
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
        *(_BYTE *)(v8 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) = 0;

    }
  }
  sub_10033F80C(0, a1, a2);
  if ((sub_100340218() & 1) != 0)
  {
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 24);
    v10 = v9(a1, a2);
    *(_BYTE *)(v10 + 88) = 1;
    v11 = objc_msgSend(v2, "transitionCoordinator", swift_release(v10).n128_f64[0]);
    if (v11)
    {
      v12 = v11;
      v13 = swift_allocObject(&unk_100739350, 24, 7);
      swift_unknownObjectWeakInit(v13 + 16);
      v14 = (_QWORD *)swift_allocObject(&unk_1007395A8, 40, 7);
      v14[2] = a1;
      v14[3] = a2;
      v14[4] = v13;
      v26 = sub_100340E20;
      v27 = v14;
      aBlock = _NSConcreteStackBlock;
      v23 = 1107296256;
      v24 = sub_10033F618;
      v25 = &unk_1007395C0;
      v15 = _Block_copy(&aBlock);
      swift_release(v27);
      v16 = swift_allocObject(&unk_100739350, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16);
      v17 = (_QWORD *)swift_allocObject(&unk_1007395F8, 40, 7);
      v17[2] = a1;
      v17[3] = a2;
      v17[4] = v16;
      v26 = sub_100340E3C;
      v27 = v17;
      aBlock = _NSConcreteStackBlock;
      v23 = 1107296256;
      v24 = sub_10033F618;
      v25 = &unk_100739610;
      v18 = _Block_copy(&aBlock);
      objc_msgSend(v12, "animateAlongsideTransition:completion:", v15, v18, swift_release(v27).n128_f64[0]);
      _Block_release(v18);
      _Block_release(v15);
      swift_unknownObjectRelease(v12);
    }
    else
    {
      v19 = v9(a1, a2);
      v20 = objc_msgSend(v2, "collectionView");
      if (v20)
      {
        v21 = v20;
        sub_100319094(v20);
        swift_release(v19);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10033FDB4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend(v2, "navigationItem");
  v8 = objc_msgSend(v5, "titleView");

  if (v8)
  {
    v6 = type metadata accessor for UberNavigationBarTitleView();
    v7 = swift_dynamicCastClass(v8, v6);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) & 1) == 0)
      {
        *(_BYTE *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) = 1;
        sub_10033F80C(1, a1, a2);
      }
    }

  }
}

double sub_10033FE80(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  double result;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  void **v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void *v18;
  void *v19;
  _QWORD *v20;

  sub_10033F80C(0, a1, a2);
  v5 = objc_msgSend(v2, "presentedViewController");

  if (!v5)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2) & 1) != 0)
    {
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      sub_100318FD8();
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
    else
    {
      v8 = objc_msgSend(v2, "transitionCoordinator");
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      v10 = v9;
      if (v8)
      {
        v19 = sub_1002D44D8;
        v20 = (_QWORD *)v9;
        v15 = _NSConcreteStackBlock;
        v16 = 1107296256;
        v17 = sub_10033F618;
        v18 = &unk_100739520;
        v11 = _Block_copy(&v15);
        swift_release(v20);
        v12 = swift_allocObject(&unk_100739350, 24, 7);
        swift_unknownObjectWeakInit(v12 + 16);
        v13 = (_QWORD *)swift_allocObject(&unk_100739558, 40, 7);
        v13[2] = a1;
        v13[3] = a2;
        v13[4] = v12;
        v19 = sub_100340E14;
        v20 = v13;
        v15 = _NSConcreteStackBlock;
        v16 = 1107296256;
        v17 = sub_10033F618;
        v18 = &unk_100739570;
        v14 = _Block_copy(&v15);
        objc_msgSend(v8, "animateAlongsideTransition:completion:", v11, v14, swift_release(v20).n128_f64[0]);
        _Block_release(v14);
        _Block_release(v11);
        *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
      }
      else
      {
        sub_100318FD8();
        *(_QWORD *)&result = swift_release(v10).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_100340084(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[5];
  _QWORD *v10;

  sub_10033F80C(0, a2, a3);
  v6 = swift_allocObject(&unk_100739350, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = (_QWORD *)swift_allocObject(&unk_1007394E0, 40, 7);
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = v6;
  v9[4] = sub_100340E90;
  v10 = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10033F618;
  v9[3] = &unk_1007394F8;
  v8 = _Block_copy(v9);
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v8, 0, swift_release(v10).n128_f64[0]);
  _Block_release(v8);
}

uint64_t sub_100340174(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  char v4;
  uint64_t v5;
  char v6;

  v4 = a1;
  (*(void (**)(unint64_t))(a3 + 56))((a1 >> 5) & 1);
  v5 = (*(uint64_t (**)(BOOL))((swift_isaMask & *v3) + 0xC8))((v4 & 8) == 0);
  if ((v4 & 1) != 0
    || (v4 & 2) != 0 && (v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x168))(v5), (v5 & 1) != 0))
  {
    v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC0))(v5);
  }
  else
  {
    v6 = 0;
  }
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & *v3) + 0x1A0))(v6 & 1);
}

uint64_t sub_100340218()
{
  _QWORD *v0;
  void *v1;
  uint64_t result;
  void *v3;
  id v4;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x178))();

  if (v1)
    return 0;
  result = (uint64_t)objc_msgSend(v0, "navigationController");
  if (result)
  {
    v3 = (void *)result;
    v4 = objc_msgSend((id)result, "navigationBar");

    if (v4)
    {

      return 1;
    }
    return 0;
  }
  return result;
}

void sub_1003402A8(double a1, double a2)
{
  uint64_t *v2;

  sub_10034050C(v2[4], v2[2], v2[3], sub_1003402CC, a1, a2);
}

void sub_1003402CC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;
  uint64_t v31;

  v5 = v4;
  v10 = type metadata accessor for TimingCurve(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C(&qword_1007F9398);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&aBlock[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 < 0.5;
  v28 = a2;
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(a1) != v18)
  {
    v19 = fabs(a4);
    if (v19 >= 5.0)
      v20 = 1.0;
    else
      v20 = v19 / 5.0;
    aBlock[0] = 0x3FC999999999999ALL;
    v31 = 0x3FA999999999999ALL;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for TimingCurve.linear(_:), v10);
    Interpolator.init(fromValue:toValue:curve:)(aBlock, &v31, v13, &type metadata for CGFloat, &protocol witness table for CGFloat);
    Interpolator.value(forInput:)(aBlock, v14, v20);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v21 = *(double *)aBlock;
    v22 = (void *)objc_opt_self(UIView);
    v23 = (_QWORD *)swift_allocObject(&unk_100739490, 48, 7);
    v24 = v28;
    v23[2] = a1;
    v23[3] = v24;
    v23[4] = v5;
    v23[5] = v18;
    aBlock[4] = sub_100340DE4;
    v30 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_1007394A8;
    v25 = _Block_copy(aBlock);
    v26 = v30;
    v27 = v5;
    swift_release(v26);
    objc_msgSend(v22, "animateWithDuration:animations:", v25, v21);
    _Block_release(v25);
  }
}

void sub_10034050C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, double, double), double a5, double a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  _BYTE v14[24];

  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    a4(a2, a3, a5, a6);

  }
}

void sub_100340594(double a1, double a2)
{
  uint64_t *v2;

  sub_10034050C(v2[4], v2[2], v2[3], sub_1003405B8, a1, a2);
}

void sub_1003405B8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v4;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v8 = a3 < 0.5;
  if ((*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 8))() != v8)
  {
    v9 = (void *)objc_opt_self(UIView);
    v10 = (_QWORD *)swift_allocObject(&unk_100739440, 48, 7);
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v4;
    v10[5] = v8;
    v14[4] = sub_100340DE4;
    v15 = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_1000BD6CC;
    v14[3] = &unk_100739458;
    v11 = _Block_copy(v14);
    v12 = v15;
    v13 = v4;
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:animations:", v11, a4);
    _Block_release(v11);
  }
}

void sub_1003406BC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *Strong;
  void *v18;
  double v19;
  char v20;
  char v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v39;
  char v40[24];

  v10 = type metadata accessor for TimingCurve(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&aBlock[-1] - v15;
  swift_beginAccess(a1 + 16, v40, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong
    || (v18 = Strong,
        v19 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1D0))()),
        v21 = v20,
        v18,
        (v21 & 1) != 0))
  {
    if (a4 == 1.79769313e308)
      return;
  }
  else if (v19 == a4)
  {
    return;
  }
  v22 = static TimingCurve.easingCurve1.getter(Strong);
  v23 = TimingCurve.controlPoint1.getter(v22);
  v25 = v24;
  v26 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v27 = v26(v16, v10);
  v28 = static TimingCurve.easingCurve1.getter(v27);
  v29 = TimingCurve.controlPoint2.getter(v28);
  v31 = v30;
  v26(v13, v10);
  v32 = swift_allocObject(&unk_1007393F0, 48, 7);
  *(_QWORD *)(v32 + 16) = a2;
  *(_QWORD *)(v32 + 24) = a3;
  *(_QWORD *)(v32 + 32) = a1;
  *(double *)(v32 + 40) = a4;
  v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  aBlock[4] = sub_1003409E0;
  v39 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100739408;
  v34 = _Block_copy(aBlock);
  v35 = v39;
  swift_retain(a1);
  swift_release(v35);
  v36 = objc_msgSend(v33, "initWithDuration:controlPoint1:controlPoint2:animations:", v34, a5, v23, v25, v29, v31);
  _Block_release(v34);
  objc_msgSend(v36, "startAnimation");

}

uint64_t sub_100340910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100340934(double a1, double a2)
{
  uint64_t *v2;

  sub_1003406BC(v2[4], v2[2], v2[3], a1, a2);
}

void sub_100340940(uint64_t a1, double a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *Strong) + 0x1D8))(*(_QWORD *)&a2, 0);

  }
}

uint64_t sub_1003409BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003409E0()
{
  uint64_t v0;

  sub_100340940(*(_QWORD *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1003409F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100340A00(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100340A08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _BYTE v15[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (v10)
    {
      v11 = v10;
      sub_1000531A4();
      v12 = v9;
      v13 = v11;
      LOBYTE(v11) = static NSObject.== infix(_:_:)(v13, v12);

      if ((v11 & 1) != 0)
      {
        if (objc_msgSend(a1, "isCancelled"))
        {
          v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
          sub_100318FD8();
          swift_release(v14);
        }
      }
    }

  }
}

void sub_100340B18(uint64_t a1, uint64_t a2)
{
  void (*v3)(double, double);
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;

  v3 = *(void (**)(double, double))(a2 + 40);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 48);
    swift_retain(v4);
    v3(1.0, 0.0);
    sub_100019310((uint64_t)v3, v4);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "navigationController");

    if (v7)
    {
      v8 = objc_msgSend(v7, "navigationBar");

      objc_msgSend(v8, "_setTitleOpacity:", 1.0);
    }
  }
  *(_BYTE *)(a2 + 88) = 0;
}

void sub_100340BD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  _BYTE v17[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    if (objc_msgSend(a1, "isCancelled"))
    {
      v10 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
      if (v10)
      {
        v11 = v10;
        sub_1000531A4();
        v12 = v9;
        v13 = v11;
        LOBYTE(v11) = static NSObject.== infix(_:_:)(v13, v12);

        if ((v11 & 1) != 0 && (sub_100340218() & 1) != 0)
        {
          v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
          v15 = objc_msgSend(v12, "collectionView");
          if (!v15)
          {
            __break(1u);
            return;
          }
          v16 = v15;
          sub_100319094(v15);
          swift_release(v14);

        }
      }
    }

  }
}

void sub_100340D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  _BYTE v12[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    v10 = objc_msgSend(v8, "collectionView");
    if (v10)
    {
      v11 = v10;
      sub_100319094(v10);

      swift_release(v9);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100340DC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100340DE8()
{
  uint64_t *v0;

  sub_10021D648(v0[5], v0[2], *(_QWORD *)(v0[3] + 8));
}

void sub_100340E14(void *a1)
{
  uint64_t *v1;

  sub_100340BD4(a1, v1[4], v1[2], v1[3]);
}

void sub_100340E20(uint64_t a1)
{
  uint64_t *v1;

  sub_100340D18(a1, v1[4], v1[2], v1[3]);
}

void sub_100340E3C(void *a1)
{
  uint64_t *v1;

  sub_100340A08(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_100340E48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806010;
  if (!qword_100806010)
  {
    v1 = type metadata accessor for UberedPageScrollObserver();
    result = swift_getWitnessTable("%1\v", v1);
    atomic_store(result, (unint64_t *)&qword_100806010);
  }
  return result;
}

uint64_t sub_100340EE8()
{
  return sub_10000E99C((unint64_t *)&unk_1008088F0, type metadata accessor for GameCenterReengagementCollectionViewCell, (uint64_t)&unk_100685B80);
}

double sub_100340F14(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  double v14;
  id v15;
  id v16;
  __n128 v17;
  uint64_t v19;
  id v20;

  v6 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = GameCenterReengagement.lockup.getter(v8);
  if (v11)
  {
    v12 = v11;
    KeyPath = swift_getKeyPath(&unk_100685BD0);
    ItemLayoutContext.subscript.getter(&v20);
    *(_QWORD *)&v14 = swift_release(KeyPath).n128_u64[0];
    v15 = v20;
    v16 = objc_msgSend(v20, "userInterfaceIdiom", v14);

    if (v16 != (id)2)
    {
      type metadata accessor for SmallLockupView(0);
      sub_100353140((uint64_t)v10, v17);
      swift_getObjectType();
      a2 = sub_100193710((uint64_t)v10, a1, a2, a3);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    swift_release(v12);
  }
  return a2;
}

double sub_1003410AC(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(_QWORD);
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  id v78;
  __n128 v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  double v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  double v92;
  __n128 v93;
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_QWORD *, _QWORD, uint64_t);
  unsigned int v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[5];
  _QWORD v122[5];
  _QWORD v123[5];
  _BYTE v124[40];
  _BYTE v125[40];
  _BYTE v126[40];
  _QWORD v127[6];
  _QWORD v128[5];
  _QWORD v129[5];
  _QWORD v130[6];

  v3 = type metadata accessor for GameCenterReengagementLayout.Metrics(0, a2);
  v4 = __chkstk_darwin(v3);
  v111 = (uint64_t)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GameCenterReengagementLayout(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ItemLayoutContext(0);
  v108 = *(_QWORD *)(v10 - 8);
  v109 = v10;
  __chkstk_darwin(v10);
  v106 = v11;
  v107 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PageGrid(0);
  v104 = *(_QWORD *)(v12 - 8);
  v105 = v12;
  __chkstk_darwin(v12);
  v103 = (uint64_t *)((char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for FontUseCase(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for LabelPlaceholderCompatibility(0, v16);
  v112 = *(_QWORD *)(v119 - 8);
  v19 = __chkstk_darwin(v119);
  v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for GameCenterReengagement(0, v19);
  v23 = sub_10000E99C((unint64_t *)&unk_100808DC0, (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagement, (uint64_t)&protocol conformance descriptor for GameCenterReengagement);
  v120 = a1;
  ItemLayoutContext.typedModel<A>(as:)(v130, v22, v22, v23);
  v24 = v130[0];
  if (!v130[0])
    return 0.0;
  v101 = v7;
  v102 = v6;
  v99 = sub_1000826AC();
  v26 = GameCenterReengagement.badge.getter(v25);
  v98 = v27;
  v117 = sub_1000466E4();
  v118 = v24;
  if (qword_1007F2828 != -1)
    swift_once(&qword_1007F2828, sub_100417528);
  v100 = v9;
  v28 = sub_1000117A8(v14, (uint64_t)qword_100855D60);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v29(v18, v28, v14);
  KeyPath = swift_getKeyPath(&unk_100685BD0);
  ItemLayoutContext.subscript.getter(v130);
  swift_release(KeyPath);
  v31 = (void *)v130[0];
  v32 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v18, v130[0]);

  v116 = *(void (**)(char *, uint64_t))(v15 + 8);
  v116(v18, v14);
  v33 = type metadata accessor for Feature(0);
  v130[3] = v33;
  v115 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v130[4] = v115;
  v34 = sub_1000117C0(v130);
  v35 = *(void (**)(_QWORD))(*(_QWORD *)(v33 - 8) + 104);
  v114 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v113 = (void (*)(_QWORD *, _QWORD, uint64_t))v35;
  v35(v34);
  v36 = isFeatureEnabled(_:)(v130);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  v37 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v26, v98, v32, 4, 0, 0, 0, 0, v36 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v130, v37);
  v112 = *(_QWORD *)(v112 + 8);
  v38 = ((uint64_t (*)(char *, uint64_t))v112)(v21, v119);
  v39 = GameCenterReengagement.title.getter(v38);
  v41 = v40;
  if (qword_1007F2830 != -1)
    swift_once(&qword_1007F2830, sub_100417540);
  v42 = sub_1000117A8(v14, (uint64_t)qword_100855D78);
  v29(v18, v42, v14);
  v43 = swift_getKeyPath(&unk_100685BD0);
  ItemLayoutContext.subscript.getter(v129);
  swift_release(v43);
  v44 = (void *)v129[0];
  v45 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v18, v129[0]);

  v116(v18, v14);
  v129[3] = v33;
  v129[4] = v115;
  v46 = sub_1000117C0(v129);
  v113(v46, v114, v33);
  LOBYTE(v44) = isFeatureEnabled(_:)(v129);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v129);
  LOBYTE(v95) = v44 & 1;
  v47 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v39, v41, v45, 4, 0, 0, 0, 0, v95);
  LabelPlaceholderCompatibility.layoutTextView.getter(v129, v47);
  v48 = ((uint64_t (*)(char *, uint64_t))v112)(v21, v119);
  v49 = v29;
  v50 = GameCenterReengagement.subtitle.getter(v48);
  v52 = v51;
  if (qword_1007F2838 != -1)
    swift_once(&qword_1007F2838, sub_100417558);
  v53 = sub_1000117A8(v14, (uint64_t)qword_100855D90);
  v49(v18, v53, v14);
  v54 = swift_getKeyPath(&unk_100685BD0);
  v55 = v120;
  ItemLayoutContext.subscript.getter(v128);
  swift_release(v54);
  v56 = (void *)v128[0];
  v57 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v18, v128[0]);

  v116(v18, v14);
  v128[3] = v33;
  v128[4] = v115;
  v58 = sub_1000117C0(v128);
  v113(v58, v114, v33);
  v59 = isFeatureEnabled(_:)(v128);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v128);
  LOBYTE(v96) = v59 & 1;
  v60 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v50, v52, v57, 4, 0, 0, 0, 0, v96);
  LabelPlaceholderCompatibility.layoutTextView.getter(v128, v60);
  ((void (*)(char *, uint64_t))v112)(v21, v119);
  v61 = swift_getKeyPath(&unk_100685C00);
  v62 = v103;
  ItemLayoutContext.subscript.getter(v103);
  swift_release(v61);
  v63 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v65 = v64;
  (*(void (**)(_QWORD *, uint64_t))(v104 + 8))(v62, v105);
  v66 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  v67 = LayoutViewPlaceholder.init(measurements:)(v63, 255.0, 255.0, 0.0);
  v69 = v107;
  v68 = v108;
  v70 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v55, v109);
  v71 = *(unsigned __int8 *)(v68 + 80);
  v72 = (v71 + 24) & ~v71;
  v73 = (v106 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
  v74 = swift_allocObject(&unk_100739650, v73 + 8, v71 | 7);
  v75 = v118;
  *(_QWORD *)(v74 + 16) = v118;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v74 + v72, v69, v70);
  *(_QWORD *)(v74 + v73) = v110;
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  v76 = swift_retain(v75);
  v77 = LayoutViewPlaceholder.init(measureWith:)(sub_100341A3C, v74, v76);
  v78 = v99;
  v79 = swift_unknownObjectRetain(v99);
  v80 = v111;
  sub_100227098(v81, v111, v79);
  swift_unknownObjectRelease(v78);
  memset(v127, 0, 40);
  sub_100011020((uint64_t)v130, (uint64_t)v126);
  sub_100011020((uint64_t)v129, (uint64_t)v125);
  sub_100011020((uint64_t)v128, (uint64_t)v124);
  v123[3] = v66;
  v123[4] = &protocol witness table for LayoutViewPlaceholder;
  v119 = v67;
  v123[0] = v67;
  v82 = swift_getKeyPath(&unk_100685BD0);
  swift_retain(v67);
  ItemLayoutContext.subscript.getter(v122);
  swift_release(v82);
  v83 = (void *)v122[0];
  v84 = static Separator.thickness(compatibleWith:)(v122[0]);

  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  v85 = LayoutViewPlaceholder.init(representing:)(v63, v84);
  v122[3] = v66;
  v122[4] = &protocol witness table for LayoutViewPlaceholder;
  v121[4] = &protocol witness table for LayoutViewPlaceholder;
  v122[0] = v85;
  v121[3] = v66;
  v121[0] = v77;
  swift_retain(v77);
  v86 = v100;
  GameCenterReengagementLayout.init(metrics:badgeGlyph:badgeLabel:titleLabel:subtitleLabel:heroContent:separator:footer:)(v80, v127, v126, v125, v124, v123, v122, v121);
  v87 = swift_getKeyPath(&unk_100685C30);
  ItemLayoutContext.subscript.getter(v127);
  swift_release(v87);
  v88 = v127[0];
  v89 = sub_10000E99C((unint64_t *)&unk_100808900, (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagementLayout, (uint64_t)&protocol conformance descriptor for GameCenterReengagementLayout);
  v90 = v102;
  dispatch thunk of Measurable.measurements(fitting:in:)(v88, v102, v89, v63, v65);
  v92 = v91;
  swift_release(v75);
  swift_unknownObjectRelease(v78);
  swift_release(v119);
  swift_release(v77);
  v93 = swift_unknownObjectRelease(v88);
  (*(void (**)(char *, uint64_t, __n128))(v101 + 8))(v86, v90, v93);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v128);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v129);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  return v92;
}

uint64_t sub_1003419BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ItemLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_100341A3C(void *a1, double a2, double a3)
{
  type metadata accessor for ItemLayoutContext(0);
  return sub_100340F14(a1, a2, a3);
}

double sub_100341AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Shelf.ContentType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v12) <= a1)
    goto LABEL_4;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Shelf.ContentType.reviews(_:), v7);
  v15 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v10, v7, v15);
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v14, v7);
  v18 = 0.0;
  if ((v16 & 1) != 0)
  {
    v19 = type metadata accessor for ReviewsPagePresenter(0);
    v20 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v19, v20);
    v21 = sub_1002C5DFC();
    v17(v14, v7);
    if (!v21)
    {
LABEL_4:
      if (qword_1007F2A00 != -1)
        swift_once(&qword_1007F2A00, sub_10042D0F4);
      v22 = type metadata accessor for StaticDimension(0);
      v23 = sub_1000117A8(v22, (uint64_t)qword_100856150);
      static Dimensions.defaultRoundingRule.getter(v23);
      v18 = AnyDimension.value(in:rounded:)(v26, v6, v22, &protocol witness table for StaticDimension);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return v18;
}

id sub_100341D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;

  v1 = type metadata accessor for SystemImage(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 144);
  if (v5)
  {
    v6 = *(id *)(v0 + 144);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for SystemImage.chevronDown(_:), v1);
    v7 = (void *)static SystemImage.load(_:with:)(v4, 0);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v8 = *(void **)(v0 + 144);
    *(_QWORD *)(v0 + 144) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

void sub_100341DD0(id a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  id v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double (**v31)();
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  double (**v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t (**v53)();
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (**v60)();
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  unsigned __int8 *v80;
  __int16 v81;
  int v82;
  id v83;
  id v84;
  uint64_t v85;
  void (*v86)(uint64_t, char *, uint64_t);
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  char *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  _QWORD v104[4];
  char v105[24];
  _QWORD v106[6];

  v7 = v6;
  v101 = a3;
  v102 = a2;
  v12 = type metadata accessor for Shelf.ContentType(0);
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  __chkstk_darwin(v12);
  v96 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  *(_QWORD *)&v17 = __chkstk_darwin(v14).n128_u64[0];
  v18 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = a4;
  v19 = objc_msgSend(a4, "traitCollection", v17);
  v20 = UITraitCollection.isSizeClassRegular.getter(v19);
  v103 = a1;
  if ((v20 & 1) != 0)
  {
    v21 = UITraitCollection.prefersAccessibilityLayouts.getter(v20);

    v99 = v21 ^ 1;
    a1 = v103;
  }
  else
  {

    v99 = 0;
  }
  v22 = type metadata accessor for ProductReviewCollectionViewCell(0);
  v23 = (char *)swift_dynamicCastClass(a1, v22);
  if (!v23)
    goto LABEL_10;
  v95 = a6;
  v93 = v22;
  v92 = v23;
  v94 = v7;
  if ((v99 & 1) != 0)
  {
    v24 = v23;
    v25 = swift_allocObject(&unk_1007396B0, 24, 7);
    swift_weakInit(v25 + 16);
    v26 = v102;
    (*(void (**)(char *))(v15 + 16))((char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    v27 = *(unsigned __int8 *)(v15 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = swift_allocObject(&unk_1007397A0, v28 + v16, v27 | 7);
    *(_QWORD *)(v29 + 16) = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v29 + v28, (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
    v30 = *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension31ProductReviewCollectionViewCell_reviewsView];
    v31 = (double (**)())(v30 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler);
    v32 = *(_QWORD *)(v30 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler);
    v33 = *(_QWORD *)(v30 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler + 8);
    *v31 = sub_10034EE68;
    v31[1] = (double (*)())v29;
    v34 = v103;
    v35 = v103;
    swift_retain(v29);
    sub_100019310(v32, v33);
    v36 = (double (**)())(v30 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler);
    v37 = *(_QWORD *)(v30 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler);
    v38 = *(_QWORD *)(v30 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler + 8);
    *v36 = sub_10034EE68;
    v36[1] = (double (*)())v29;
    swift_retain(v29);
    v39 = v37;
    v40 = v38;
  }
  else
  {
    v85 = *(_QWORD *)&v23[OBJC_IVAR____TtC22SubscribePageExtension31ProductReviewCollectionViewCell_reviewsView];
    v41 = v85;
    v42 = swift_allocObject(&unk_1007396B0, 24, 7);
    v91 = a5;
    v43 = v42;
    swift_weakInit(v42 + 16);
    v90 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v44 = v102;
    v90((char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v102, v14);
    v45 = *(unsigned __int8 *)(v15 + 80);
    v46 = (v45 + 24) & ~v45;
    v47 = v45 | 7;
    v88 = v45 | 7;
    v48 = v16 + v46;
    v49 = v46;
    v89 = v46;
    v50 = (v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v87 = v50 + 8;
    v51 = swift_allocObject(&unk_100739750, v50 + 8, v47);
    *(_QWORD *)(v51 + 16) = v43;
    v86 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    v86(v51 + v49, v18, v14);
    v52 = v95;
    *(_QWORD *)(v51 + v50) = v95;
    v53 = (uint64_t (**)())(v41 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler);
    v54 = *(_QWORD *)(v41 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler);
    v55 = *(_QWORD *)(v41 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler + 8);
    *v53 = sub_10034ECF4;
    v53[1] = (uint64_t (*)())v51;
    v34 = v103;
    v56 = v103;
    v57 = v52;
    sub_100019310(v54, v55);
    v29 = swift_allocObject(&unk_1007396B0, 24, 7);
    swift_weakInit(v29 + 16);
    v26 = v44;
    v90(v18, v44, v14);
    v58 = swift_allocObject(&unk_100739778, v87, v88);
    *(_QWORD *)(v58 + 16) = v29;
    v59 = v85;
    v86(v58 + v89, v18, v14);
    *(_QWORD *)(v58 + v50) = v57;
    v60 = (uint64_t (**)())(v59 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler);
    v61 = *(_QWORD *)(v59 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler);
    v62 = *(_QWORD *)(v59 + OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler + 8);
    *v60 = sub_10034ED94;
    v60[1] = (uint64_t (*)())v58;
    v63 = v57;
    a5 = v91;
    swift_retain(v29);
    v39 = v61;
    v40 = v62;
  }
  sub_100019310(v39, v40);
  swift_release(v29);

  v64 = v34;
  v65 = v26;
  v66 = IndexPath.section.getter(v64);
  v67 = v94;
  v68 = type metadata accessor for ReviewsPagePresenter(0);
  v69 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  v70 = v96;
  dispatch thunk of ShelfPresenter.contentType(for:)(v66, v68, v69);
  v71 = sub_1002C5DFC();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v70, v98);
  if (v71)
  {

    a6 = v95;
    a1 = v103;
LABEL_10:
    sub_100344D1C((char *)a1, v102, v101, v100, a5, a6);
    return;
  }
  v72 = v67;
  dispatch thunk of BaseShelfPresenter.model(at:)(v106, v65);
  v73 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v74 = type metadata accessor for Review(0);
  swift_dynamicCast(v104, v106, v73, v74, 7);
  v75 = v104[0];
  if ((v99 & 1) != 0)
  {
LABEL_19:
    v81 = 0;
    LOWORD(v77) = 0;
    goto LABEL_20;
  }
  swift_beginAccess(v67 + 136, v105, 0, 0);
  v76 = *(_QWORD *)(v67 + 136);
  v77 = *(_QWORD *)(v76 + 16);
  if (v77)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v67 + 136));
    v78 = sub_10036C524(v65);
    if ((v79 & 1) != 0)
    {
      v80 = (unsigned __int8 *)(*(_QWORD *)(v76 + 56) + 2 * v78);
      v81 = *v80;
      v82 = v80[1];
      swift_bridgeObjectRelease(v76);
      if (v82)
        LOWORD(v77) = 256;
      else
        LOWORD(v77) = 0;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease(v76);
    goto LABEL_19;
  }
  v81 = 0;
LABEL_20:
  sub_100387440(v75, v77 | v81, *(_BYTE *)(v72 + 152), v100, (uint64_t)a5);
  v83 = v92;
  objc_msgSend(v92, "setNeedsLayout");
  v106[3] = v74;
  v106[4] = sub_10000E99C(&qword_1008107C0, (uint64_t (*)(uint64_t))&type metadata accessor for Review, (uint64_t)&protocol conformance descriptor for Review);
  v106[0] = v75;
  v104[3] = v93;
  v104[0] = v83;
  v84 = v64;
  swift_retain(v75);
  tryToFetch(artworkFor:into:on:asPartOf:)(v106, v104, v101, a5);

  swift_release(v75);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v104);
  sub_100011088((uint64_t)v106, (uint64_t *)&unk_1008027C0);
}

double sub_10034244C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  _BYTE v17[24];
  _QWORD v18[5];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + 16);
    swift_retain(v7);
    swift_release(v6);
    dispatch thunk of BaseShelfPresenter.model(at:)(v18, a2);
    swift_release(v7);
    v8 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v9 = type metadata accessor for Review(0);
    if ((swift_dynamicCast(&v16, v18, v8, v9, 6) & 1) != 0)
    {
      v10 = v16;
      swift_beginAccess(v3, v18, 0, 0);
      v11 = swift_weakLoadStrong(v3);
      if (v11)
      {
        v12 = v11;
        v14 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 120);
        v13 = *(_QWORD *)(v11 + 128);
        sub_100019320((uint64_t)v14, v13);
        v15 = swift_release(v12);
        if (v14)
        {
          v14(v10, a2, v15);
          sub_100019310((uint64_t)v14, v13);
        }
      }
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
  }
  return result;
}

void sub_10034256C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  __n128 v20;
  __int16 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v13 = a1 + 16;
  swift_beginAccess(a1 + 16, v38, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
    goto LABEL_8;
  v15 = Strong;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
  swift_beginAccess(v15 + 136, v37, 0, 0);
  v16 = *(_QWORD *)(v15 + 136);
  swift_bridgeObjectRetain(v16);
  swift_release(v15);
  if (!*(_QWORD *)(v16 + 16) || (v17 = sub_10036C524((uint64_t)v12), (v18 & 1) == 0))
  {
    v22 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v22);
LABEL_8:
    v21 = 1;
    goto LABEL_9;
  }
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v16 + 56) + 2 * v17 + 1);
  v20 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v20);
  if (v19)
    v21 = 257;
  else
    v21 = 1;
LABEL_9:
  swift_beginAccess(v13, v36, 0, 0);
  v23 = swift_weakLoadStrong(v13);
  if (v23)
  {
    v24 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_beginAccess(v24 + 136, v35, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v24 + 136));
    v34 = *(_QWORD *)(v24 + 136);
    *(_QWORD *)(v24 + 136) = 0x8000000000000000;
    sub_10010C3FC(v21, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    v26 = *(_QWORD *)(v24 + 136);
    *(_QWORD *)(v24 + 136) = v34;
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v27);
    swift_endAccess(v35);
    swift_release(v24);
  }
  v28 = sub_10000DF3C(&qword_100803400);
  v29 = *(unsigned __int8 *)(v7 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = swift_allocObject(v28, v30 + *(_QWORD *)(v7 + 72), v29 | 7);
  *(_OWORD *)(v31 + 16) = xmmword_10066FBA0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v31 + v30, a2, v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

}

void sub_1003427F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  unint64_t v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = a1 + 16;
  swift_beginAccess(a1 + 16, v34, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
    swift_beginAccess(Strong + 136, v33, 0, 0);
    v15 = *(_QWORD *)(Strong + 136);
    swift_bridgeObjectRetain(v15);
    swift_release(Strong);
    if (*(_QWORD *)(v15 + 16) && (v16 = sub_10036C524((uint64_t)v12), (v17 & 1) != 0))
      LOWORD(Strong) = *(unsigned __int8 *)(*(_QWORD *)(v15 + 56) + 2 * v16);
    else
      LOWORD(Strong) = 0;
    v18 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v18);
  }
  swift_beginAccess(v13, v32, 0, 0);
  v19 = swift_weakLoadStrong(v13);
  if (v19)
  {
    v20 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_beginAccess(v20 + 136, v31, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v20 + 136));
    v30 = *(_QWORD *)(v20 + 136);
    *(_QWORD *)(v20 + 136) = 0x8000000000000000;
    sub_10010C3FC(Strong | 0x100, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    v22 = *(_QWORD *)(v20 + 136);
    *(_QWORD *)(v20 + 136) = v30;
    v23 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
    swift_endAccess(v31);
    swift_release(v20);
  }
  v24 = sub_10000DF3C(&qword_100803400);
  v25 = *(unsigned __int8 *)(v7 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = swift_allocObject(v24, v26 + *(_QWORD *)(v7 + 72), v25 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_10066FBA0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v27 + v26, a2, v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

}

void sub_100342A60(char *a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t ObjectType;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  int v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  double (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char *v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  void *Strong;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  void (*v155)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void *, uint64_t, __n128, char *);
  __n128 v156;
  id v157;
  char v158;
  __n128 v159;
  void (*v160)(uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  __n128 v168;
  __n128 v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t (*v183)(uint64_t, uint64_t);
  char *v184;
  char *v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)();
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  void (*v206)(uint64_t (*)(uint64_t), uint64_t, void *, uint64_t, __n128);
  char *v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  void *v214;
  uint64_t v215;
  char *v216;
  id v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  char *v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  char *v235;
  void *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  void *v263;
  void *v264;
  id v265;
  char *v266;
  uint64_t v267;
  Swift::Int v268;
  __n128 v269;
  CGFloat v270;
  double v271;
  CGFloat v272;
  double v273;
  CGFloat v274;
  double v275;
  CGFloat v276;
  uint64_t v277;
  char *v278;
  unsigned int (*v279)(uint64_t, uint64_t, uint64_t);
  uint64_t v280;
  __n128 v281;
  uint64_t v282;
  uint64_t v283;
  __n128 v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t (*v292)(uint64_t, uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  __n128 v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  __n128 v302;
  uint64_t v303;
  uint64_t v304;
  __n128 v305;
  uint64_t v306;
  __n128 v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  int v315;
  __n128 v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  __n128 v321;
  uint64_t v322;
  void (*v323)(char *, uint64_t, uint64_t);
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  __n128 v327;
  char *v328;
  uint64_t v329;
  id v330;
  double v331;
  CGFloat v332;
  double v333;
  CGFloat v334;
  double v335;
  CGFloat v336;
  double v337;
  CGFloat v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  __n128 v348;
  char *v349;
  __n128 v350;
  uint64_t v351;
  char *v352;
  char *v353;
  CGFloat v354;
  __n128 v355;
  void (*v356)(char *, uint64_t, __n128);
  uint64_t v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  void (*v361)(char *, uint64_t, uint64_t);
  char *v362;
  char *v363;
  char *v364;
  char *v365;
  char *v366;
  char *v367;
  char *v368;
  uint64_t v369;
  char *v370;
  char *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  id v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  char *v394;
  char *v395;
  uint64_t v396;
  char *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  uint64_t v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  char *v411;
  void *v412;
  char *v413;
  char *v414;
  uint64_t v415;
  __int128 v416[2];
  uint64_t v417;
  __int128 v418;
  __int128 v419;
  uint64_t v420;
  void *v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  CGRect v425;
  CGRect v426;

  v7 = v6;
  v378 = a6;
  v414 = a5;
  v412 = a4;
  v406 = a3;
  v415 = a2;
  v405 = type metadata accessor for ImpressionMetrics.ID(0);
  v404 = *(_QWORD *)(v405 - 8);
  __chkstk_darwin(v405);
  v370 = (char *)&v360 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v407 = type metadata accessor for ImpressionMetrics(0);
  v413 = *(char **)(v407 - 8);
  __chkstk_darwin(v407);
  v389 = (char *)&v360 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v401 = (char *)&v360 - v12;
  __chkstk_darwin(v13);
  v398 = (char *)&v360 - v14;
  __chkstk_darwin(v15);
  v371 = (char *)&v360 - v16;
  __chkstk_darwin(v17);
  v373 = (char *)&v360 - v18;
  v376 = type metadata accessor for IndexSet(0);
  v375 = *(_QWORD *)(v376 - 8);
  __chkstk_darwin(v376);
  v374 = (char *)&v360 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v388 = type metadata accessor for ShelfBackground(0);
  v387 = *(_QWORD *)(v388 - 8);
  __chkstk_darwin(v388);
  v386 = (char *)&v360 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v385 = type metadata accessor for Shelf.PresentationHints(0);
  v384 = *(_QWORD *)(v385 - 8);
  __chkstk_darwin(v385);
  v383 = (char *)&v360 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C(&qword_1007F9668);
  __chkstk_darwin(v22);
  v382 = (char *)&v360 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v402 = type metadata accessor for ComponentLayoutOptions(0);
  v396 = *(_QWORD *)(v402 - 8);
  __chkstk_darwin(v402);
  v393 = (char *)&v360 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v399 = (char *)&v360 - v26;
  __chkstk_darwin(v27);
  v397 = (char *)&v360 - v28;
  v392 = type metadata accessor for IndexPath(0);
  v391 = *(_QWORD *)(v392 - 8);
  __chkstk_darwin(v392);
  v379 = v29;
  v394 = (char *)&v360 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v30);
  v32 = (char *)&v360 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v381 = sub_10000DF3C(&qword_1007F7D40);
  v380 = *(_QWORD *)(v381 - 8);
  __chkstk_darwin(v381);
  v400 = (char *)&v360 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v410 = type metadata accessor for Shelf.ContentType(0);
  v409 = *(_QWORD *)(v410 - 8);
  __chkstk_darwin(v410);
  v390 = (char *)&v360 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v395 = (char *)&v360 - v36;
  __chkstk_darwin(v37);
  v411 = (char *)&v360 - v38;
  v39 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v39);
  v377 = (char *)&v360 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v43 = (char *)&v360 - v42;
  __chkstk_darwin(v44);
  v46 = (char *)&v360 - v45;
  __chkstk_darwin(v47);
  v49 = (char *)&v360 - v48;
  __chkstk_darwin(v50);
  v52 = (char *)&v360 - v51;
  __chkstk_darwin(v53);
  v55 = (char *)&v360 - v54;
  v56 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v56);
  v58 = (char *)&v360 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v61 = (char *)&v360 - v60;
  *(_QWORD *)&v63 = __chkstk_darwin(v62).n128_u64[0];
  v403 = (char *)&v360 - v64;
  objc_msgSend(a1, "setBackgroundColor:", 0, v63);
  ObjectType = swift_getObjectType();
  v66 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView);
  if (v66)
    v67 = (char *)v66;
  else
    v67 = 0;
  v68 = a1;
  if (v66)
    v69 = (uint64_t)a1;
  else
    v69 = 0;
  v70 = v7;
  v71 = *(_QWORD *)(v7 + 16);
  if (!v69)
  {
    v364 = v52;
    v367 = v46;
    v363 = v49;
    v368 = v43;
    v365 = v58;
    v411 = v68;
    v366 = v61;
    v372 = v70;
    v91 = type metadata accessor for PurchasesContentPresenter(0);
    v92 = sub_10000E99C((unint64_t *)&qword_1007F75C0, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
    v93 = v415;
    v403 = (char *)v92;
    if ((dispatch thunk of ShelfPresenter.doesModelExist(for:)(v415, v91) & 1) == 0)
      return;
    v94 = swift_getObjectType();
    v79 = swift_conformsToProtocol2(v94, &protocol descriptor for AnyComponentView);
    v369 = v79;
    if (!v79)
    {
      __break(1u);
      goto LABEL_163;
    }
    v362 = v411;
    v408 = v71;
    dispatch thunk of ShelfPresenter.model(at:)(&v424, v93, v91, v403);
    v95 = v394;
    v361 = *(void (**)(char *, uint64_t, uint64_t))(v391 + 16);
    v361(v394, v93, v392);
    StatePath<A>.init(_:)(v95);
    v421 = *(void **)(v372 + 24);
    swift_retain(v421);
    v96 = sub_10000DF3C(&qword_100803430);
    v97 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
    v98 = WritableStateLens.init<A>(contentsOf:in:)(v32, &v421, &type metadata for Never, v96, v97);
    v99 = v397;
    ComponentLayoutOptions.init()(v98);
    v100 = sub_10034BBB4(v93, v412, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
    v102 = v396;
    v103 = v395;
    v104 = (uint64_t)v393;
    v105 = (uint64_t)v382;
    if ((v100 & 1) != 0)
    {
      static ComponentLayoutOptions.separatorHidden.getter();
      v106 = v399;
      sub_10003DB6C(v399, v104);
      v107 = *(double (**)(uint64_t, uint64_t))(v102 + 8);
      v108 = v402;
      v107(v104, v402);
      v101.n128_f64[0] = v107((uint64_t)v106, v108);
    }
    dispatch thunk of ShelfPresenter.itemBackground(forItemAt:)(v93, v91, v403, v101);
    v109 = type metadata accessor for ItemBackground(0);
    v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(v105, 1, v109);
    v111 = sub_100011088(v105, &qword_1007F9668);
    v382 = (char *)v91;
    if (v110 != 1)
    {
      static ComponentLayoutOptions.hasBackground.getter(v111);
      v112 = v399;
      sub_10003DB6C(v399, v104);
      v113 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v114 = v402;
      v113(v104, v402);
      v115 = v114;
      v91 = (uint64_t)v382;
      v111 = ((uint64_t (*)(char *, uint64_t))v113)(v112, v115);
    }
    v116 = IndexPath.section.getter(v111);
    v117 = v390;
    if (!v116)
    {
      static ComponentLayoutOptions.isFirstSection.getter(0);
      v118 = v399;
      sub_10003DB6C(v399, v104);
      v119 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v120 = v402;
      v119(v104, v402);
      v121 = v118;
      v117 = v390;
      v122 = v120;
      v91 = (uint64_t)v382;
      v116 = ((uint64_t (*)(char *, uint64_t))v119)(v121, v122);
    }
    v123 = IndexPath.section.getter(v116);
    v124 = v403;
    v125 = dispatch thunk of ShelfPresenter.contentType(for:)(v123, v91, v403);
    v126 = IndexPath.section.getter(v125);
    v127 = v124;
    v128 = (uint64_t)v393;
    v129 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v126, v91, v127);
    v130 = v409;
    v131 = v410;
    (*(void (**)(char *, char *, uint64_t))(v409 + 16))(v117, v103, v410);
    v132 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v117, v131);
    v133 = v399;
    v134 = v362;
    if (v132 == enum case for Shelf.ContentType.smallLockup(_:)
      || v132 == enum case for Shelf.ContentType.mediumLockup(_:))
    {
      goto LABEL_44;
    }
    if (v132 != enum case for Shelf.ContentType.largeLockup(_:))
    {
      if (v132 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        || v132 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        || v132 == enum case for Shelf.ContentType.action(_:))
      {
        goto LABEL_44;
      }
      if (v132 != enum case for Shelf.ContentType.ribbonBar(_:))
      {
        if (v132 == enum case for Shelf.ContentType.editorialCard(_:)
          || v132 == enum case for Shelf.ContentType.videoCard(_:))
        {
          goto LABEL_44;
        }
        if (v132 == enum case for Shelf.ContentType.brick(_:)
          || v132 == enum case for Shelf.ContentType.categoryBrick(_:))
        {
          goto LABEL_45;
        }
        if (v132 == enum case for Shelf.ContentType.reviews(_:)
          || v132 == enum case for Shelf.ContentType.appTrailerLockup(_:)
          || v132 == enum case for Shelf.ContentType.framedVideo(_:)
          || v132 == enum case for Shelf.ContentType.screenshotsLockup(_:)
          || v132 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
          || v132 == enum case for Shelf.ContentType.smallBreakout(_:))
        {
          goto LABEL_44;
        }
        if (v132 != enum case for Shelf.ContentType.editorialStoryCard(_:))
        {
          if (v132 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
            || v132 == enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
            || v132 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
            || v132 == enum case for Shelf.ContentType.posterLockup(_:)
            || v132 == enum case for Shelf.ContentType.smallContactCard(_:))
          {
            goto LABEL_44;
          }
          if (v132 != enum case for Shelf.ContentType.informationRibbon(_:))
          {
            if (v132 != enum case for Shelf.ContentType.appPromotion(_:))
            {
              (*(void (**)(char *, uint64_t))(v409 + 8))(v117, v410);
              goto LABEL_49;
            }
LABEL_44:
            if ((v129 & 1) != 0)
              goto LABEL_45;
LABEL_49:
            v157 = objc_msgSend(v412, "traitCollection");
            v158 = UITraitCollection.isSizeClassCompact.getter(v157);

            if ((v158 & 1) == 0)
            {
              LODWORD(v390) = 0;
LABEL_52:
              v162 = swift_getObjectType();
              v163 = IndexPath.section.getter(v162);
              v164 = v382;
              v165 = v403;
              v166 = dispatch thunk of ShelfPresenter.shelf(for:)(v163, v382, v403);
              v167 = v383;
              Shelf.presentationHints.getter(v168);
              v169 = swift_release(v166);
              v170 = v414;
              (*(void (**)(char **, char *, char *, char *, char *, void *, uint64_t, __n128))(v369 + 80))(&v424, v400, v414, v99, v167, v412, v162, v169);
              v171 = (*(uint64_t (**)(char *, uint64_t))(v384 + 8))(v167, v385);
              v172 = IndexPath.section.getter(v171);
              v173 = v386;
              dispatch thunk of ShelfPresenter.background(for:)(v172, v164, v165);
              v174 = (id)sub_10028B9EC();
              (*(void (**)(char *, uint64_t))(v387 + 8))(v173, v388);
              if (objc_msgSend(v134, "overrideUserInterfaceStyle") != v174)
                objc_msgSend(v134, "setOverrideUserInterfaceStyle:", v174);
              sub_100011020((uint64_t)&v424, (uint64_t)&v421);
              *((_QWORD *)&v419 + 1) = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
              *(_QWORD *)&v418 = v134;
              v43 = v134;
              tryToFetch(artworkFor:into:on:asPartOf:)(&v421, &v418, v406, v170);
              sub_100011088((uint64_t)&v421, (uint64_t *)&unk_1008027C0);
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v418);
              v175 = swift_getObjectType();
              v176 = swift_conformsToProtocol2(v175, &protocol descriptor for ExpandableTextCell);
              if (v176)
                v177 = v176;
              else
                v177 = 0;
              if (v176)
                v178 = v411;
              else
                v178 = 0;
              v179 = v413;
              v180 = v401;
              v181 = v394;
              if (v178)
              {
                v182 = swift_getObjectType();
                v183 = *(uint64_t (**)(uint64_t, uint64_t))(v177 + 8);
                v184 = v43;
                v185 = (char *)v183(v182, v177);
                v186 = (uint64_t *)&v185[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreTapHandler];
                v187 = *(_QWORD *)&v185[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreTapHandler];
                v188 = *(_QWORD *)&v185[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreTapHandler + 8];
                *v186 = 0;
                v186[1] = 0;
                sub_100019310(v187, v188);
                v189 = *(void **)&v185[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreButton];
                v190 = *v186;
                v191 = v186[1];
                if (v190)
                {
                  v192 = swift_allocObject(&unk_100739868, 32, 7);
                  *(_QWORD *)(v192 + 16) = v190;
                  *(_QWORD *)(v192 + 24) = v191;
                  v193 = sub_10006C410;
                }
                else
                {
                  v193 = 0;
                  v192 = 0;
                }
                sub_100019320(v190, v191);
                sub_100019310((uint64_t)v193, v192);
                objc_msgSend(v189, "setUserInteractionEnabled:", v190 != 0);

                v179 = v413;
                v180 = v401;
              }
              v194 = swift_getObjectType();
              v195 = swift_conformsToProtocol2(v194, &protocol descriptor for NestedShelfCell);
              if (v195)
                v196 = v195;
              else
                v196 = 0;
              if (v195)
                v197 = v411;
              else
                v197 = 0;
              if (v197)
              {
                v412 = (void *)swift_getObjectType();
                v198 = swift_allocObject(&unk_100739818, 24, 7);
                swift_weakInit(v198 + 16, v372);
                v199 = v392;
                v361(v181, v415, v392);
                v200 = v181;
                v201 = v391;
                v202 = *(unsigned __int8 *)(v391 + 80);
                v203 = (v202 + 16) & ~v202;
                v204 = (v379 + v203 + 7) & 0xFFFFFFFFFFFFFFF8;
                v205 = swift_allocObject(&unk_100739840, v204 + 8, v202 | 7);
                (*(void (**)(uint64_t, char *, uint64_t))(v201 + 32))(v205 + v203, v200, v199);
                *(_QWORD *)(v205 + v204) = v198;
                v206 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void *, uint64_t, __n128))(v196 + 16);
                v207 = v43;
                v208 = swift_retain(v198);
                v206(sub_10034EF54, v205, v412, v196, v208);
                v179 = v413;
                swift_release(v198);

                v180 = v401;
              }
              v209 = swift_getObjectType();
              v210 = swift_conformsToProtocol2(v209, &protocol descriptor for AnyVideoViewProviding);
              if (v210)
                v211 = v210;
              else
                v211 = 0;
              if (v210)
                v212 = v411;
              else
                v212 = 0;
              if (v212)
              {
                v213 = type metadata accessor for VideoPlaybackCoordinator(0);
                v214 = *(void **)&v414[qword_100854088];
                if (!v214)
                {
LABEL_164:
                  v358 = v213;
                  v359 = v43;
                  v226 = v358;
                  goto LABEL_165;
                }
                v215 = swift_getObjectType();
                v216 = v43;
                v217 = v214;
                v218 = (void *)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v215, v211);
                v220 = v219;
                v221 = *(_QWORD *)(v211 + 8);
                v222 = v216;
                dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v218, v220, v212, v221);

                v180 = v401;
              }
              *(_QWORD *)&v416[0] = v43;
              *((_QWORD *)&v416[0] + 1) = v369;
              v223 = v43;
              v224 = sub_10000DF3C(&qword_100808CE8);
              v225 = sub_10000DF3C(&qword_100808CD0);
              if (swift_dynamicCast(&v418, v416, v224, v225, 6))
              {
                sub_100010F3C(&v418, (uint64_t)&v421);
                v226 = type metadata accessor for VideoPlaybackCoordinator(0);
                v227 = *(void **)&v414[qword_100854088];
                v228 = v398;
                if (!v227)
                {
LABEL_165:
                  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v226);
                  __break(1u);
                  return;
                }
                sub_100011064(&v421, v422);
                v229 = v227;
                dispatch thunk of ManagedVideoViewProviding.registerVideos(with:)();

                _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v421);
              }
              else
              {
                v420 = 0;
                v419 = 0u;
                v418 = 0u;
                sub_100011088((uint64_t)&v418, &qword_100808CD8);
                v228 = v398;
              }
              v230 = swift_getObjectType();
              v231 = swift_conformsToProtocol2(v230, &protocol descriptor for PlayableView);
              if (v231)
                v232 = v231;
              else
                v232 = 0;
              if (v231)
                v233 = v411;
              else
                v233 = 0;
              if (v233)
              {
                v234 = type metadata accessor for PlaybackCoordinator(0);
                v235 = v223;
                BaseObjectGraph.optional<A>(_:)(&v421, v234, v234);
                v236 = v421;
                if (v421)
                {
                  v237 = v235;
                  v235 = v236;
                  dispatch thunk of PlaybackCoordinator.register(playableView:)(v233, v232);

                  v228 = v398;
                }

              }
              v238 = swift_getObjectType();
              v239 = swift_conformsToProtocol2(v238, &protocol descriptor for SearchAdDisplaying);
              if (v239)
                v240 = v239;
              else
                v240 = 0;
              if (v239)
                v241 = v411;
              else
                v241 = 0;
              if (v241)
              {
                sub_100011020((uint64_t)&v424, (uint64_t)&v418);
                v242 = v223;
                v243 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
                v244 = sub_10000DF3C(&qword_1007F4DC8);
                if (swift_dynamicCast(v416, &v418, v243, v244, 6))
                {
                  sub_100010F3C(v416, (uint64_t)&v421);
                  v245 = swift_getObjectType();
                  v246 = v422;
                  v247 = v423;
                  sub_100011064(&v421, v422);
                  v248 = v247;
                  v179 = v413;
                  v249 = dispatch thunk of SearchAdProviding.searchAd.getter(v246, v248);
                  v250 = v245;
                  v228 = v398;
                  dispatch thunk of SearchAdDisplaying.apply(searchAd:asPartOf:)(v249, v414, v250, v240);

                  v251 = v249;
                  v180 = v401;
                  swift_release(v251);
                  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v421);
                }
                else
                {
                  v417 = 0;
                  memset(v416, 0, sizeof(v416));

                  sub_100011088((uint64_t)v416, &qword_1007F4DC0);
                }
              }
              v252 = swift_getObjectType();
              v253 = swift_conformsToProtocol2(v252, &protocol descriptor for AnyAvatarShowcaseDisplaying);
              if (v253)
                v254 = v253;
              else
                v254 = 0;
              if (v253)
                v255 = v411;
              else
                v255 = 0;
              if (v255)
              {
                v256 = swift_getObjectType();
                v257 = v223;
                dispatch thunk of AnyAvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(&v424, v414, v256, v254);

              }
              v258 = IndexPath.section.getter(v253);
              v259 = dispatch thunk of ShelfPresenter.shelf(for:)(v258, v382, v403);
              v260 = v389;
              if ((_DWORD)v390)
              {
                v261 = (char *)objc_msgSend(v378, "collectionViewLayout");
                v262 = type metadata accessor for BaseCollectionCompositionalLayout();
                v263 = (void *)swift_dynamicCastClass(v261, v262);
                if (v263)
                {
                  v264 = v263;
                  v265 = objc_msgSend(v263, "_orthogonalScrollingSections");
                  v266 = v374;
                  static IndexSet._unconditionallyBridgeFromObjectiveC(_:)();

                  v268 = IndexPath.section.getter(v267);
                  LOBYTE(v265) = IndexSet.contains(_:)(v268);
                  (*(void (**)(char *, uint64_t))(v375 + 8))(v266, v376);
                  if ((v265 & 1) != 0)
                  {
                    v414 = v261;
                    objc_msgSend(v223, "frame");
                    v270 = v269.n128_f64[0];
                    v272 = v271;
                    v274 = v273;
                    v276 = v275;
                    v277 = (uint64_t)v364;
                    Shelf.impressionMetrics.getter(v269);
                    v278 = v179;
                    v279 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v179 + 6);
                    v280 = v407;
                    if (v279(v277, 1, v407) == 1)
                    {

                      v281 = swift_release(v259);
                      (*(void (**)(char *, uint64_t, __n128))(v409 + 8))(v395, v410, v281);
                      (*(void (**)(char *, uint64_t))(v396 + 8))(v397, v402);
                      (*(void (**)(char *, uint64_t))(v380 + 8))(v400, v381);
                      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v424);
                      sub_100011088(v277, (uint64_t *)&unk_1007F7740);
                      return;
                    }
                    v323 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v278 + 4);
                    v323(v373, v277, v280);
                    sub_100011020((uint64_t)&v424, (uint64_t)&v421);
                    v325 = v422;
                    v324 = v423;
                    sub_100011064(&v421, v422);
                    v326 = (uint64_t)v363;
                    dispatch thunk of ViewModel.impressionMetrics.getter(v325, *(_QWORD *)(v324 + 8));
                    if (v279(v326, 1, v280) == 1)
                    {

                      v327 = swift_release(v259);
                      (*((void (**)(char *, uint64_t, __n128))v278 + 1))(v373, v280, v327);
                      (*(void (**)(char *, uint64_t))(v409 + 8))(v395, v410);
                      (*(void (**)(char *, uint64_t))(v396 + 8))(v397, v402);
                      (*(void (**)(char *, uint64_t))(v380 + 8))(v400, v381);
                      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v424);
                      v303 = v326;
                      goto LABEL_135;
                    }
                    v328 = v371;
                    v329 = ((uint64_t (*)(char *, uint64_t, uint64_t))v323)(v371, v326, v280);
                    v330 = objc_msgSend(v264, "_layoutFrameForSection:", IndexPath.section.getter(v329));
                    v332 = v331;
                    v334 = v333;
                    v336 = v335;
                    v338 = v337;
                    objc_msgSend(v264, "_offsetForOrthogonalScrollingSection:", IndexPath.section.getter(v330));
                    v340 = v372;
                    v341 = *(_QWORD *)(v372 + 112);
                    v342 = v278;
                    v343 = v397;
                    if (v341)
                    {
                      v415 = v339;
                      swift_retain(v341);
                      v344 = v373;
                      ImpressionsCalculator.addElement(_:at:)(v373);
                      swift_release(v341);
                      v345 = *(_QWORD *)(v340 + 112);
                      v346 = v396;
                      v347 = v380;
                      if (v345)
                      {
                        v348 = swift_retain(v345);
                        v349 = v370;
                        ImpressionMetrics.id.getter(v348);
                        v341 = ImpressionsCalculator.childCalculator(for:)(v349);
                        v350 = swift_release(v345);
                        (*(void (**)(char *, uint64_t, __n128))(v404 + 8))(v349, v405, v350);
                        if (v341)
                        {
                          swift_retain(v341);
                          ImpressionsCalculator.viewBounds.setter(v351);
                          swift_release(v341);
                        }
                        v352 = v373;
                        v328 = v371;
                        v353 = v414;
                        v343 = v397;
                        goto LABEL_159;
                      }
                      v341 = 0;
                      v352 = v344;
                      v328 = v371;
                    }
                    else
                    {
                      v346 = v396;
                      v347 = v380;
                      v352 = v373;
                    }
                    v353 = v414;
LABEL_159:
                    v425.origin.x = v332;
                    v425.origin.y = v334;
                    v425.size.width = v336;
                    v425.size.height = v338;
                    v354 = -CGRectGetMinY(v425);
                    v426.origin.x = v270;
                    v426.origin.y = v272;
                    v426.size.width = v274;
                    v426.size.height = v276;
                    CGRectOffset(v426, 0.0, v354);
                    if (v341)
                    {
                      swift_retain(v341);
                      ImpressionsCalculator.addElement(_:at:)(v328);
                      swift_release(v341);
                    }
                    sub_10034D59C(&v421, v341);

                    swift_release(v341);
                    v355 = swift_release(v259);
                    v356 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v342 + 1);
                    v357 = v407;
                    v356(v328, v407, v355);
                    ((void (*)(char *, uint64_t))v356)(v352, v357);
                    (*(void (**)(char *, uint64_t))(v409 + 8))(v395, v410);
                    (*(void (**)(char *, uint64_t))(v346 + 8))(v343, v402);
                    (*(void (**)(char *, uint64_t))(v347 + 8))(v400, v381);
                    goto LABEL_146;
                  }
                }

              }
              v282 = swift_getObjectType();
              v283 = swift_conformsToProtocol2(v282, &protocol descriptor for NestedModelImpressionsRecording);
              if (v283)
                v285 = v283;
              else
                v285 = 0;
              if (v283)
                v286 = v411;
              else
                v286 = 0;
              if (v286)
              {
                v287 = v223;
                objc_msgSend(v287, "frame");
                v288 = sub_10034AFF0();
                v289 = swift_getObjectType();
                dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v288, v289, v285);

                v228 = v398;
              }
              v290 = (uint64_t)v367;
              Shelf.impressionMetrics.getter(v284);
              v291 = v290;
              v292 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v179 + 6);
              v293 = v290;
              v294 = v407;
              v295 = v292(v293, 1, v407);
              v296 = (uint64_t)v368;
              if (v295 == 1)
              {
                sub_100011088(v291, (uint64_t *)&unk_1007F7740);
              }
              else
              {
                (*((void (**)(char *, uint64_t, uint64_t))v179 + 4))(v228, v291, v294);
                v298 = *(_QWORD *)(v372 + 112);
                if (v298)
                {
                  objc_msgSend(v223, "frame", swift_retain(*(_QWORD *)(v372 + 112)).n128_f64[0]);
                  ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v228, 1);
                  v297 = swift_release(v298);
                }
                (*((void (**)(char *, uint64_t, __n128))v179 + 1))(v228, v294, v297);
              }
              v299 = v294;
              sub_100011020((uint64_t)&v424, (uint64_t)&v421);
              v301 = v422;
              v300 = v423;
              sub_100011064(&v421, v422);
              dispatch thunk of ViewModel.impressionMetrics.getter(v301, *(_QWORD *)(v300 + 8));
              if (v292(v296, 1, v299) == 1)
              {

                v302 = swift_release(v259);
                (*(void (**)(char *, uint64_t, __n128))(v409 + 8))(v395, v410, v302);
                (*(void (**)(char *, uint64_t))(v396 + 8))(v397, v402);
                (*(void (**)(char *, uint64_t))(v380 + 8))(v400, v381);
                _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v424);
                v303 = v296;
LABEL_135:
                sub_100011088(v303, (uint64_t *)&unk_1007F7740);
LABEL_147:
                _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v421);
                return;
              }
              v304 = v299;
              v305.n128_f64[0] = (*((double (**)(char *, uint64_t, uint64_t))v179 + 4))(v180, v296, v299);
              v306 = (uint64_t)v377;
              Shelf.impressionMetrics.getter(v305);
              if (v292(v306, 1, v304) == 1)
              {
                sub_100011088(v306, (uint64_t *)&unk_1007F7740);
                v308 = 1;
                v309 = v405;
                v310 = v404;
                v311 = (uint64_t)v366;
              }
              else
              {
                v311 = (uint64_t)v366;
                ImpressionMetrics.id.getter(v307);
                (*((void (**)(uint64_t, uint64_t))v179 + 1))(v306, v304);
                v308 = 0;
                v309 = v405;
                v310 = v404;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56))(v311, v308, 1, v309);
              v312 = *(_QWORD *)(v372 + 112);
              if (v312)
              {
                v313 = v311;
                v314 = (uint64_t)v365;
                sub_10034ECA8(v313, (uint64_t)v365);
                v315 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v310 + 48))(v314, 1, v309);
                v316 = swift_retain(v312);
                if (v315 == 1)
                {
                  sub_100011088(v314, &qword_100813520);
                  v317 = 0;
                  v318 = 0;
                }
                else
                {
                  v317 = ImpressionMetrics.ID.element.getter(v316);
                  v319 = v310;
                  v318 = v320;
                  (*(void (**)(uint64_t, uint64_t))(v319 + 8))(v314, v309);
                }
                ImpressionMetrics.withParentId(_:)(v317, v318);
                objc_msgSend(v223, "frame", swift_bridgeObjectRelease(v318).n128_f64[0]);
                ImpressionsCalculator.addElement(_:at:)(v260);
                v321 = swift_release(v312);
                (*((void (**)(char *, uint64_t, __n128))v179 + 1))(v260, v407, v321);
                v311 = (uint64_t)v366;
              }
              objc_msgSend(v223, "frame");
              v322 = *(_QWORD *)(v372 + 112);
              swift_retain(v322);
              sub_10034D59C(&v421, v322);

              swift_release(v322);
              swift_release(v259);
              sub_100011088(v311, &qword_100813520);
              (*((void (**)(char *, uint64_t))v179 + 1))(v180, v407);
              (*(void (**)(char *, uint64_t))(v409 + 8))(v395, v410);
              (*(void (**)(char *, uint64_t))(v396 + 8))(v397, v402);
              (*(void (**)(char *, uint64_t))(v380 + 8))(v400, v381);
LABEL_146:
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v424);
              goto LABEL_147;
            }
            static ComponentLayoutOptions.isSingleVerticalColumn.getter(v159);
            LODWORD(v390) = 0;
LABEL_51:
            sub_10003DB6C(v133, v128);
            v160 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
            v161 = v402;
            v160(v128, v402);
            v160((uint64_t)v133, v161);
            goto LABEL_52;
          }
        }
      }
    }
LABEL_45:
    static ComponentLayoutOptions.fixedHeightContainer.getter();
    LODWORD(v390) = 1;
    goto LABEL_51;
  }
  v400 = v67;
  v402 = v69;
  v72 = v68;
  v73 = IndexPath.section.getter(v72);
  v74 = type metadata accessor for PurchasesContentPresenter(0);
  v75 = sub_10000E99C((unint64_t *)&qword_1007F75C0, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
  v76 = dispatch thunk of ShelfPresenter.shelf(for:)(v73, v74, v75);
  v401 = v72;
  objc_msgSend(v72, "frame");
  v77 = v70;
  v78 = (char *)sub_10034AFF0();
  v79 = type metadata accessor for VideoPlaybackCoordinator(0);
  v43 = *(char **)&v414[qword_100854088];
  v80 = v77;
  v408 = v71;
  if (!v43)
  {
LABEL_163:
    v213 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v79);
    __break(1u);
    goto LABEL_164;
  }
  v81 = type metadata accessor for PlaybackCoordinator(0);
  v82 = v43;
  BaseObjectGraph.optional<A>(_:)(&v424, v81, v81);
  v83 = v424;
  Shelf.impressionMetrics.getter(v84);
  v85 = v413;
  v86 = v407;
  v87 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v413 + 6))(v55, 1, v407);
  v399 = v78;
  if (v87 == 1)
  {
    sub_100011088((uint64_t)v55, (uint64_t *)&unk_1007F7740);
    v89 = 1;
    v90 = (uint64_t)v403;
  }
  else
  {
    v90 = (uint64_t)v403;
    ImpressionMetrics.id.getter(v88);
    (*((void (**)(char *, uint64_t))v85 + 1))(v55, v86);
    v89 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v404 + 56))(v90, v89, 1, v405);
  v135 = v82;
  v413 = v135;
  v398 = v83;
  v136 = sub_10034B1E8(v90, v43, v83, 0);
  v138 = v137;

  sub_100011088(v90, &qword_100813520);
  v139 = v408;
  swift_retain(v408);
  v141 = IndexPath.section.getter(v140);
  v142 = v411;
  v143 = Shelf.contentType.getter();
  v144 = Shelf.ContentType.doesModelContainment.getter(v143);
  (*(void (**)(char *, uint64_t))(v409 + 8))(v142, v410);
  v145 = *(_QWORD *)(v80 + 24);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v80 + 48);
  v147 = sub_10000DF3C(&qword_100808D08);
  v148 = swift_allocObject(v147, 88, 7);
  *(_QWORD *)(v148 + 48) = 0;
  swift_unknownObjectWeakInit(v148 + 56, 0);
  *(_QWORD *)(v148 + 16) = v139;
  *(_QWORD *)(v148 + 24) = v141;
  *(_BYTE *)(v148 + 32) = v144 & 1;
  *(_QWORD *)(v148 + 40) = v145;
  *(_QWORD *)(v148 + 64) = v136;
  *(_QWORD *)(v148 + 72) = v138;
  v149 = v399;
  *(_QWORD *)(v148 + 80) = v399;
  swift_unknownObjectWeakAssign(v150, Strong);
  swift_retain(v149);
  swift_retain(v145);
  swift_unknownObjectRetain(v136);

  v151 = swift_getObjectType();
  v152 = IndexPath.section.getter(v151);
  v153 = sub_100010F98(&qword_100808D10, &qword_100808D08, byte_10068CBC0);
  v154 = v400;
  v155 = (void (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void *, uint64_t, __n128, char *))*((_QWORD *)v400 + 4);
  v156 = swift_retain(v148);
  v155(v76, v152, v406, v414, v148, v153, v412, v151, v156, v154);

  swift_release(v76);
  swift_release(v149);

  swift_unknownObjectRelease(v136);
  swift_release_n(v148, 2);

}

void sub_100344D1C(char *a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t ObjectType;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  int v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  double (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char *v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  __n128 v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  void *Strong;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  void (*v156)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void *, uint64_t, __n128, char *);
  __n128 v157;
  id v158;
  char v159;
  __n128 v160;
  void (*v161)(uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  __n128 v169;
  __n128 v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t (*v184)(uint64_t, uint64_t);
  char *v185;
  char *v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (*v194)();
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  void (*v207)(uint64_t (*)(uint64_t), uint64_t, void *, uint64_t, __n128);
  char *v208;
  __n128 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  void *v215;
  uint64_t v216;
  char *v217;
  id v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  char *v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  void *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  void *v264;
  void *v265;
  id v266;
  char *v267;
  uint64_t v268;
  Swift::Int v269;
  __n128 v270;
  CGFloat v271;
  double v272;
  CGFloat v273;
  double v274;
  CGFloat v275;
  double v276;
  CGFloat v277;
  uint64_t v278;
  char *v279;
  unsigned int (*v280)(uint64_t, uint64_t, uint64_t);
  uint64_t v281;
  __n128 v282;
  uint64_t v283;
  uint64_t v284;
  __n128 v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t (*v293)(uint64_t, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  int v296;
  uint64_t v297;
  __n128 v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  __n128 v303;
  uint64_t v304;
  uint64_t v305;
  __n128 v306;
  uint64_t v307;
  __n128 v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  __n128 v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  __n128 v322;
  uint64_t v323;
  void (*v324)(char *, uint64_t, uint64_t);
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  __n128 v328;
  char *v329;
  uint64_t v330;
  id v331;
  double v332;
  CGFloat v333;
  double v334;
  CGFloat v335;
  double v336;
  CGFloat v337;
  double v338;
  CGFloat v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  __n128 v349;
  char *v350;
  __n128 v351;
  uint64_t v352;
  char *v353;
  char *v354;
  CGFloat v355;
  __n128 v356;
  void (*v357)(char *, uint64_t, __n128);
  uint64_t v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  void (*v362)(char *, uint64_t, uint64_t);
  char *v363;
  char *v364;
  char *v365;
  char *v366;
  char *v367;
  char *v368;
  char *v369;
  uint64_t v370;
  char *v371;
  char *v372;
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  id v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  char *v396;
  uint64_t v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  void *v413;
  char *v414;
  char *v415;
  uint64_t v416;
  __int128 v417[2];
  uint64_t v418;
  __int128 v419;
  __int128 v420;
  uint64_t v421;
  void *v422;
  uint64_t v423;
  uint64_t v424;
  char *v425;
  CGRect v426;
  CGRect v427;

  v7 = v6;
  v379 = a6;
  v415 = a5;
  v413 = a4;
  v407 = a3;
  v416 = a2;
  v406 = type metadata accessor for ImpressionMetrics.ID(0);
  v405 = *(_QWORD *)(v406 - 8);
  __chkstk_darwin(v406);
  v371 = (char *)&v361 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v408 = type metadata accessor for ImpressionMetrics(0);
  v414 = *(char **)(v408 - 8);
  __chkstk_darwin(v408);
  v390 = (char *)&v361 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v402 = (char *)&v361 - v12;
  __chkstk_darwin(v13);
  v399 = (char *)&v361 - v14;
  __chkstk_darwin(v15);
  v372 = (char *)&v361 - v16;
  __chkstk_darwin(v17);
  v374 = (char *)&v361 - v18;
  v377 = type metadata accessor for IndexSet(0);
  v376 = *(_QWORD *)(v377 - 8);
  __chkstk_darwin(v377);
  v375 = (char *)&v361 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v389 = type metadata accessor for ShelfBackground(0);
  v388 = *(_QWORD *)(v389 - 8);
  __chkstk_darwin(v389);
  v387 = (char *)&v361 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v386 = type metadata accessor for Shelf.PresentationHints(0);
  v385 = *(_QWORD *)(v386 - 8);
  __chkstk_darwin(v386);
  v384 = (char *)&v361 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C(&qword_1007F9668);
  __chkstk_darwin(v22);
  v383 = (char *)&v361 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v403 = type metadata accessor for ComponentLayoutOptions(0);
  v397 = *(_QWORD *)(v403 - 8);
  __chkstk_darwin(v403);
  v394 = (char *)&v361 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v400 = (char *)&v361 - v26;
  __chkstk_darwin(v27);
  v398 = (char *)&v361 - v28;
  v393 = type metadata accessor for IndexPath(0);
  v392 = *(_QWORD *)(v393 - 8);
  __chkstk_darwin(v393);
  v380 = v29;
  v395 = (char *)&v361 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v30);
  v32 = (char *)&v361 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v382 = sub_10000DF3C(&qword_1007F7D40);
  v381 = *(_QWORD *)(v382 - 8);
  __chkstk_darwin(v382);
  v401 = (char *)&v361 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v411 = type metadata accessor for Shelf.ContentType(0);
  v410 = *(_QWORD *)(v411 - 8);
  __chkstk_darwin(v411);
  v391 = (char *)&v361 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v396 = (char *)&v361 - v36;
  __chkstk_darwin(v37);
  v412 = (char *)&v361 - v38;
  v39 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v39);
  v378 = (char *)&v361 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v43 = (char *)&v361 - v42;
  __chkstk_darwin(v44);
  v46 = (char *)&v361 - v45;
  __chkstk_darwin(v47);
  v49 = (char *)&v361 - v48;
  __chkstk_darwin(v50);
  v52 = (char *)&v361 - v51;
  __chkstk_darwin(v53);
  v55 = (char *)&v361 - v54;
  v56 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v56);
  v58 = (char *)&v361 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v61 = (char *)&v361 - v60;
  *(_QWORD *)&v63 = __chkstk_darwin(v62).n128_u64[0];
  v404 = (char *)&v361 - v64;
  objc_msgSend(a1, "setBackgroundColor:", 0, v63);
  ObjectType = swift_getObjectType();
  v66 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView);
  if (v66)
    v67 = (char *)v66;
  else
    v67 = 0;
  v68 = a1;
  if (v66)
    v69 = (uint64_t)a1;
  else
    v69 = 0;
  v70 = v7;
  v71 = *(_QWORD *)(v7 + 16);
  if (!v69)
  {
    v365 = v52;
    v368 = v46;
    v364 = v49;
    v369 = v43;
    v366 = v58;
    v412 = v68;
    v367 = v61;
    v373 = v70;
    v91 = type metadata accessor for ReviewsPagePresenter(0);
    v92 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    v93 = v416;
    v404 = (char *)v92;
    if ((dispatch thunk of ShelfPresenter.doesModelExist(for:)(v416, v91) & 1) == 0)
      return;
    v94 = swift_getObjectType();
    v79 = swift_conformsToProtocol2(v94, &protocol descriptor for AnyComponentView);
    v370 = v79;
    if (!v79)
    {
      __break(1u);
      goto LABEL_163;
    }
    v363 = v412;
    v409 = v71;
    dispatch thunk of ShelfPresenter.model(at:)(&v425, v93, v91, v404);
    v95 = v395;
    v362 = *(void (**)(char *, uint64_t, uint64_t))(v392 + 16);
    v362(v395, v93, v393);
    StatePath<A>.init(_:)(v95);
    v422 = *(void **)(v373 + 24);
    swift_retain(v422);
    v96 = sub_10000DF3C(&qword_100803430);
    v97 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
    v98 = WritableStateLens.init<A>(contentsOf:in:)(v32, &v422, &type metadata for Never, v96, v97);
    v99 = v398;
    ComponentLayoutOptions.init()(v98);
    v100 = sub_10034BBB4(v93, v413, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    v102 = v397;
    v103 = v396;
    v104 = (uint64_t)v394;
    v105 = (uint64_t)v383;
    if ((v100 & 1) != 0)
    {
      static ComponentLayoutOptions.separatorHidden.getter(v100);
      v106 = v400;
      sub_10003DB6C(v400, v104);
      v107 = *(double (**)(uint64_t, uint64_t))(v102 + 8);
      v108 = v403;
      v107(v104, v403);
      v101.n128_f64[0] = v107((uint64_t)v106, v108);
    }
    dispatch thunk of ShelfPresenter.itemBackground(forItemAt:)(v93, v91, v404, v101);
    v109 = type metadata accessor for ItemBackground(0);
    v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(v105, 1, v109);
    v111 = sub_100011088(v105, &qword_1007F9668);
    v383 = (char *)v91;
    if (v110 != 1)
    {
      static ComponentLayoutOptions.hasBackground.getter(v111);
      v112 = v400;
      sub_10003DB6C(v400, v104);
      v113 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v114 = v403;
      v113(v104, v403);
      v115 = v114;
      v91 = (uint64_t)v383;
      v111 = ((uint64_t (*)(char *, uint64_t))v113)(v112, v115);
    }
    v116 = IndexPath.section.getter(v111);
    v117 = v391;
    if (!v116)
    {
      static ComponentLayoutOptions.isFirstSection.getter(0);
      v118 = v400;
      sub_10003DB6C(v400, v104);
      v119 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v120 = v403;
      v119(v104, v403);
      v121 = v118;
      v117 = v391;
      v122 = v120;
      v91 = (uint64_t)v383;
      v116 = ((uint64_t (*)(char *, uint64_t))v119)(v121, v122);
    }
    v123 = IndexPath.section.getter(v116);
    v124 = v404;
    v125 = dispatch thunk of ShelfPresenter.contentType(for:)(v123, v91, v404);
    v126 = IndexPath.section.getter(v125);
    v127 = v124;
    v128 = (uint64_t)v394;
    v129 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v126, v91, v127);
    v130 = v410;
    v131 = v411;
    (*(void (**)(char *, char *, uint64_t))(v410 + 16))(v117, v103, v411);
    v132 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v117, v131);
    v133 = v400;
    v134 = v363;
    if ((_DWORD)v132 == enum case for Shelf.ContentType.smallLockup(_:)
      || (_DWORD)v132 == enum case for Shelf.ContentType.mediumLockup(_:))
    {
      goto LABEL_44;
    }
    if ((_DWORD)v132 != enum case for Shelf.ContentType.largeLockup(_:))
    {
      if ((_DWORD)v132 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        || (_DWORD)v132 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        || (_DWORD)v132 == enum case for Shelf.ContentType.action(_:))
      {
        goto LABEL_44;
      }
      if ((_DWORD)v132 != enum case for Shelf.ContentType.ribbonBar(_:))
      {
        if ((_DWORD)v132 == enum case for Shelf.ContentType.editorialCard(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.videoCard(_:))
        {
          goto LABEL_44;
        }
        if ((_DWORD)v132 == enum case for Shelf.ContentType.brick(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.categoryBrick(_:))
        {
          goto LABEL_45;
        }
        if ((_DWORD)v132 == enum case for Shelf.ContentType.reviews(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.appTrailerLockup(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.framedVideo(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.screenshotsLockup(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
          || (_DWORD)v132 == enum case for Shelf.ContentType.smallBreakout(_:))
        {
          goto LABEL_44;
        }
        if ((_DWORD)v132 != enum case for Shelf.ContentType.editorialStoryCard(_:))
        {
          if ((_DWORD)v132 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
            || (_DWORD)v132 == enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
            || (_DWORD)v132 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
            || (_DWORD)v132 == enum case for Shelf.ContentType.posterLockup(_:)
            || (_DWORD)v132 == enum case for Shelf.ContentType.smallContactCard(_:))
          {
            goto LABEL_44;
          }
          if ((_DWORD)v132 != enum case for Shelf.ContentType.informationRibbon(_:))
          {
            if ((_DWORD)v132 != enum case for Shelf.ContentType.appPromotion(_:))
            {
              (*(void (**)(char *, uint64_t))(v410 + 8))(v117, v411);
              goto LABEL_49;
            }
LABEL_44:
            if ((v129 & 1) != 0)
              goto LABEL_45;
LABEL_49:
            v158 = objc_msgSend(v413, "traitCollection");
            v159 = UITraitCollection.isSizeClassCompact.getter(v158);

            if ((v159 & 1) == 0)
            {
              LODWORD(v391) = 0;
LABEL_52:
              v163 = swift_getObjectType();
              v164 = IndexPath.section.getter(v163);
              v165 = v383;
              v166 = v404;
              v167 = dispatch thunk of ShelfPresenter.shelf(for:)(v164, v383, v404);
              v168 = v384;
              Shelf.presentationHints.getter(v169);
              v170 = swift_release(v167);
              v171 = v415;
              (*(void (**)(char **, char *, char *, char *, char *, void *, uint64_t, __n128))(v370 + 80))(&v425, v401, v415, v99, v168, v413, v163, v170);
              v172 = (*(uint64_t (**)(char *, uint64_t))(v385 + 8))(v168, v386);
              v173 = IndexPath.section.getter(v172);
              v174 = v387;
              dispatch thunk of ShelfPresenter.background(for:)(v173, v165, v166);
              v175 = (id)sub_10028B9EC();
              (*(void (**)(char *, uint64_t))(v388 + 8))(v174, v389);
              if (objc_msgSend(v134, "overrideUserInterfaceStyle") != v175)
                objc_msgSend(v134, "setOverrideUserInterfaceStyle:", v175);
              sub_100011020((uint64_t)&v425, (uint64_t)&v422);
              *((_QWORD *)&v420 + 1) = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
              *(_QWORD *)&v419 = v134;
              v43 = v134;
              tryToFetch(artworkFor:into:on:asPartOf:)(&v422, &v419, v407, v171);
              sub_100011088((uint64_t)&v422, (uint64_t *)&unk_1008027C0);
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v419);
              v176 = swift_getObjectType();
              v177 = swift_conformsToProtocol2(v176, &protocol descriptor for ExpandableTextCell);
              if (v177)
                v178 = v177;
              else
                v178 = 0;
              if (v177)
                v179 = v412;
              else
                v179 = 0;
              v180 = v414;
              v181 = v402;
              v182 = v395;
              if (v179)
              {
                v183 = swift_getObjectType();
                v184 = *(uint64_t (**)(uint64_t, uint64_t))(v178 + 8);
                v185 = v43;
                v186 = (char *)v184(v183, v178);
                v187 = (uint64_t *)&v186[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreTapHandler];
                v188 = *(_QWORD *)&v186[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreTapHandler];
                v189 = *(_QWORD *)&v186[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreTapHandler + 8];
                *v187 = 0;
                v187[1] = 0;
                sub_100019310(v188, v189);
                v190 = *(void **)&v186[OBJC_IVAR____TtC22SubscribePageExtension18ExpandableTextView_moreButton];
                v191 = *v187;
                v192 = v187[1];
                if (v191)
                {
                  v193 = swift_allocObject(&unk_1007397F0, 32, 7);
                  *(_QWORD *)(v193 + 16) = v191;
                  *(_QWORD *)(v193 + 24) = v192;
                  v194 = sub_100030368;
                }
                else
                {
                  v194 = 0;
                  v193 = 0;
                }
                sub_100019320(v191, v192);
                sub_100019310((uint64_t)v194, v193);
                objc_msgSend(v190, "setUserInteractionEnabled:", v191 != 0);

                v180 = v414;
                v181 = v402;
              }
              v195 = swift_getObjectType();
              v196 = swift_conformsToProtocol2(v195, &protocol descriptor for NestedShelfCell);
              if (v196)
                v197 = v196;
              else
                v197 = 0;
              if (v196)
                v198 = v412;
              else
                v198 = 0;
              if (v198)
              {
                v413 = (void *)swift_getObjectType();
                v199 = swift_allocObject(&unk_100739700, 24, 7);
                swift_weakInit(v199 + 16);
                v200 = v393;
                v362(v182, v416, v393);
                v201 = v182;
                v202 = v392;
                v203 = *(unsigned __int8 *)(v392 + 80);
                v204 = (v203 + 16) & ~v203;
                v205 = (v380 + v204 + 7) & 0xFFFFFFFFFFFFFFF8;
                v206 = swift_allocObject(&unk_1007397C8, v205 + 8, v203 | 7);
                (*(void (**)(uint64_t, char *, uint64_t))(v202 + 32))(v206 + v204, v201, v200);
                *(_QWORD *)(v206 + v205) = v199;
                v207 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void *, uint64_t, __n128))(v197 + 16);
                v208 = v43;
                v209 = swift_retain(v199);
                v207(sub_10034EE9C, v206, v413, v197, v209);
                v180 = v414;
                swift_release(v199);

                v181 = v402;
              }
              v210 = swift_getObjectType();
              v211 = swift_conformsToProtocol2(v210, &protocol descriptor for AnyVideoViewProviding);
              if (v211)
                v212 = v211;
              else
                v212 = 0;
              if (v211)
                v213 = v412;
              else
                v213 = 0;
              if (v213)
              {
                v214 = type metadata accessor for VideoPlaybackCoordinator(0);
                v215 = *(void **)&v415[qword_100854088];
                if (!v215)
                {
LABEL_164:
                  v359 = v214;
                  v360 = v43;
                  v227 = v359;
                  goto LABEL_165;
                }
                v216 = swift_getObjectType();
                v217 = v43;
                v218 = v215;
                v219 = (void *)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v216, v212);
                v221 = v220;
                v222 = *(_QWORD *)(v212 + 8);
                v223 = v217;
                dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v219, v221, v213, v222);

                v181 = v402;
              }
              *(_QWORD *)&v417[0] = v43;
              *((_QWORD *)&v417[0] + 1) = v370;
              v224 = v43;
              v225 = sub_10000DF3C(&qword_100808CE8);
              v226 = sub_10000DF3C(&qword_100808CD0);
              if (swift_dynamicCast(&v419, v417, v225, v226, 6))
              {
                sub_100010F3C(&v419, (uint64_t)&v422);
                v227 = type metadata accessor for VideoPlaybackCoordinator(0);
                v228 = *(void **)&v415[qword_100854088];
                v229 = v399;
                if (!v228)
                {
LABEL_165:
                  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v227);
                  __break(1u);
                  return;
                }
                sub_100011064(&v422, v423);
                v230 = v228;
                dispatch thunk of ManagedVideoViewProviding.registerVideos(with:)();

                _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v422);
              }
              else
              {
                v421 = 0;
                v420 = 0u;
                v419 = 0u;
                sub_100011088((uint64_t)&v419, &qword_100808CD8);
                v229 = v399;
              }
              v231 = swift_getObjectType();
              v232 = swift_conformsToProtocol2(v231, &protocol descriptor for PlayableView);
              if (v232)
                v233 = v232;
              else
                v233 = 0;
              if (v232)
                v234 = v412;
              else
                v234 = 0;
              if (v234)
              {
                v235 = type metadata accessor for PlaybackCoordinator(0);
                v236 = v224;
                BaseObjectGraph.optional<A>(_:)(&v422, v235, v235);
                v237 = v422;
                if (v422)
                {
                  v238 = v236;
                  v236 = v237;
                  dispatch thunk of PlaybackCoordinator.register(playableView:)(v234, v233);

                  v229 = v399;
                }

              }
              v239 = swift_getObjectType();
              v240 = swift_conformsToProtocol2(v239, &protocol descriptor for SearchAdDisplaying);
              if (v240)
                v241 = v240;
              else
                v241 = 0;
              if (v240)
                v242 = v412;
              else
                v242 = 0;
              if (v242)
              {
                sub_100011020((uint64_t)&v425, (uint64_t)&v419);
                v243 = v224;
                v244 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
                v245 = sub_10000DF3C(&qword_1007F4DC8);
                if (swift_dynamicCast(v417, &v419, v244, v245, 6))
                {
                  sub_100010F3C(v417, (uint64_t)&v422);
                  v246 = swift_getObjectType();
                  v247 = v423;
                  v248 = v424;
                  sub_100011064(&v422, v423);
                  v249 = v248;
                  v180 = v414;
                  v250 = dispatch thunk of SearchAdProviding.searchAd.getter(v247, v249);
                  v251 = v246;
                  v229 = v399;
                  dispatch thunk of SearchAdDisplaying.apply(searchAd:asPartOf:)(v250, v415, v251, v241);

                  v252 = v250;
                  v181 = v402;
                  swift_release(v252);
                  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v422);
                }
                else
                {
                  v418 = 0;
                  memset(v417, 0, sizeof(v417));

                  sub_100011088((uint64_t)v417, &qword_1007F4DC0);
                }
              }
              v253 = swift_getObjectType();
              v254 = swift_conformsToProtocol2(v253, &protocol descriptor for AnyAvatarShowcaseDisplaying);
              if (v254)
                v255 = v254;
              else
                v255 = 0;
              if (v254)
                v256 = v412;
              else
                v256 = 0;
              if (v256)
              {
                v257 = swift_getObjectType();
                v258 = v224;
                dispatch thunk of AnyAvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(&v425, v415, v257, v255);

              }
              v259 = IndexPath.section.getter(v254);
              v260 = dispatch thunk of ShelfPresenter.shelf(for:)(v259, v383, v404);
              v261 = v390;
              if ((_DWORD)v391)
              {
                v262 = (char *)objc_msgSend(v379, "collectionViewLayout");
                v263 = type metadata accessor for BaseCollectionCompositionalLayout();
                v264 = (void *)swift_dynamicCastClass(v262, v263);
                if (v264)
                {
                  v265 = v264;
                  v266 = objc_msgSend(v264, "_orthogonalScrollingSections");
                  v267 = v375;
                  static IndexSet._unconditionallyBridgeFromObjectiveC(_:)();

                  v269 = IndexPath.section.getter(v268);
                  LOBYTE(v266) = IndexSet.contains(_:)(v269);
                  (*(void (**)(char *, uint64_t))(v376 + 8))(v267, v377);
                  if ((v266 & 1) != 0)
                  {
                    v415 = v262;
                    objc_msgSend(v224, "frame");
                    v271 = v270.n128_f64[0];
                    v273 = v272;
                    v275 = v274;
                    v277 = v276;
                    v278 = (uint64_t)v365;
                    Shelf.impressionMetrics.getter(v270);
                    v279 = v180;
                    v280 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v180 + 6);
                    v281 = v408;
                    if (v280(v278, 1, v408) == 1)
                    {

                      v282 = swift_release(v260);
                      (*(void (**)(char *, uint64_t, __n128))(v410 + 8))(v396, v411, v282);
                      (*(void (**)(char *, uint64_t))(v397 + 8))(v398, v403);
                      (*(void (**)(char *, uint64_t))(v381 + 8))(v401, v382);
                      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v425);
                      sub_100011088(v278, (uint64_t *)&unk_1007F7740);
                      return;
                    }
                    v324 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v279 + 4);
                    v324(v374, v278, v281);
                    sub_100011020((uint64_t)&v425, (uint64_t)&v422);
                    v326 = v423;
                    v325 = v424;
                    sub_100011064(&v422, v423);
                    v327 = (uint64_t)v364;
                    dispatch thunk of ViewModel.impressionMetrics.getter(v326, *(_QWORD *)(v325 + 8));
                    if (v280(v327, 1, v281) == 1)
                    {

                      v328 = swift_release(v260);
                      (*((void (**)(char *, uint64_t, __n128))v279 + 1))(v374, v281, v328);
                      (*(void (**)(char *, uint64_t))(v410 + 8))(v396, v411);
                      (*(void (**)(char *, uint64_t))(v397 + 8))(v398, v403);
                      (*(void (**)(char *, uint64_t))(v381 + 8))(v401, v382);
                      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v425);
                      v304 = v327;
                      goto LABEL_135;
                    }
                    v329 = v372;
                    v330 = ((uint64_t (*)(char *, uint64_t, uint64_t))v324)(v372, v327, v281);
                    v331 = objc_msgSend(v265, "_layoutFrameForSection:", IndexPath.section.getter(v330));
                    v333 = v332;
                    v335 = v334;
                    v337 = v336;
                    v339 = v338;
                    objc_msgSend(v265, "_offsetForOrthogonalScrollingSection:", IndexPath.section.getter(v331));
                    v341 = v373;
                    v342 = *(_QWORD *)(v373 + 112);
                    v343 = v279;
                    v344 = v398;
                    if (v342)
                    {
                      v416 = v340;
                      swift_retain(v342);
                      v345 = v374;
                      ImpressionsCalculator.addElement(_:at:)(v374);
                      swift_release(v342);
                      v346 = *(_QWORD *)(v341 + 112);
                      v347 = v397;
                      v348 = v381;
                      if (v346)
                      {
                        v349 = swift_retain(v346);
                        v350 = v371;
                        ImpressionMetrics.id.getter(v349);
                        v342 = ImpressionsCalculator.childCalculator(for:)(v350);
                        v351 = swift_release(v346);
                        (*(void (**)(char *, uint64_t, __n128))(v405 + 8))(v350, v406, v351);
                        if (v342)
                        {
                          swift_retain(v342);
                          ImpressionsCalculator.viewBounds.setter(v352);
                          swift_release(v342);
                        }
                        v353 = v374;
                        v329 = v372;
                        v354 = v415;
                        v344 = v398;
                        goto LABEL_159;
                      }
                      v342 = 0;
                      v353 = v345;
                      v329 = v372;
                    }
                    else
                    {
                      v347 = v397;
                      v348 = v381;
                      v353 = v374;
                    }
                    v354 = v415;
LABEL_159:
                    v426.origin.x = v333;
                    v426.origin.y = v335;
                    v426.size.width = v337;
                    v426.size.height = v339;
                    v355 = -CGRectGetMinY(v426);
                    v427.origin.x = v271;
                    v427.origin.y = v273;
                    v427.size.width = v275;
                    v427.size.height = v277;
                    CGRectOffset(v427, 0.0, v355);
                    if (v342)
                    {
                      swift_retain(v342);
                      ImpressionsCalculator.addElement(_:at:)(v329);
                      swift_release(v342);
                    }
                    sub_10034D59C(&v422, v342);

                    swift_release(v342);
                    v356 = swift_release(v260);
                    v357 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v343 + 1);
                    v358 = v408;
                    v357(v329, v408, v356);
                    ((void (*)(char *, uint64_t))v357)(v353, v358);
                    (*(void (**)(char *, uint64_t))(v410 + 8))(v396, v411);
                    (*(void (**)(char *, uint64_t))(v347 + 8))(v344, v403);
                    (*(void (**)(char *, uint64_t))(v348 + 8))(v401, v382);
                    goto LABEL_146;
                  }
                }

              }
              v283 = swift_getObjectType();
              v284 = swift_conformsToProtocol2(v283, &protocol descriptor for NestedModelImpressionsRecording);
              if (v284)
                v286 = v284;
              else
                v286 = 0;
              if (v284)
                v287 = v412;
              else
                v287 = 0;
              if (v287)
              {
                v288 = v224;
                objc_msgSend(v288, "frame");
                v289 = sub_10034AFF0();
                v290 = swift_getObjectType();
                dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v289, v290, v286);

                v229 = v399;
              }
              v291 = (uint64_t)v368;
              Shelf.impressionMetrics.getter(v285);
              v292 = v291;
              v293 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v180 + 6);
              v294 = v291;
              v295 = v408;
              v296 = v293(v294, 1, v408);
              v297 = (uint64_t)v369;
              if (v296 == 1)
              {
                sub_100011088(v292, (uint64_t *)&unk_1007F7740);
              }
              else
              {
                (*((void (**)(char *, uint64_t, uint64_t))v180 + 4))(v229, v292, v295);
                v299 = *(_QWORD *)(v373 + 112);
                if (v299)
                {
                  objc_msgSend(v224, "frame", swift_retain(*(_QWORD *)(v373 + 112)).n128_f64[0]);
                  ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v229, 1);
                  v298 = swift_release(v299);
                }
                (*((void (**)(char *, uint64_t, __n128))v180 + 1))(v229, v295, v298);
              }
              v300 = v295;
              sub_100011020((uint64_t)&v425, (uint64_t)&v422);
              v302 = v423;
              v301 = v424;
              sub_100011064(&v422, v423);
              dispatch thunk of ViewModel.impressionMetrics.getter(v302, *(_QWORD *)(v301 + 8));
              if (v293(v297, 1, v300) == 1)
              {

                v303 = swift_release(v260);
                (*(void (**)(char *, uint64_t, __n128))(v410 + 8))(v396, v411, v303);
                (*(void (**)(char *, uint64_t))(v397 + 8))(v398, v403);
                (*(void (**)(char *, uint64_t))(v381 + 8))(v401, v382);
                _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v425);
                v304 = v297;
LABEL_135:
                sub_100011088(v304, (uint64_t *)&unk_1007F7740);
LABEL_147:
                _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v422);
                return;
              }
              v305 = v300;
              v306.n128_f64[0] = (*((double (**)(char *, uint64_t, uint64_t))v180 + 4))(v181, v297, v300);
              v307 = (uint64_t)v378;
              Shelf.impressionMetrics.getter(v306);
              if (v293(v307, 1, v305) == 1)
              {
                sub_100011088(v307, (uint64_t *)&unk_1007F7740);
                v309 = 1;
                v310 = v406;
                v311 = v405;
                v312 = (uint64_t)v367;
              }
              else
              {
                v312 = (uint64_t)v367;
                ImpressionMetrics.id.getter(v308);
                (*((void (**)(uint64_t, uint64_t))v180 + 1))(v307, v305);
                v309 = 0;
                v310 = v406;
                v311 = v405;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v311 + 56))(v312, v309, 1, v310);
              v313 = *(_QWORD *)(v373 + 112);
              if (v313)
              {
                v314 = v312;
                v315 = (uint64_t)v366;
                sub_10034ECA8(v314, (uint64_t)v366);
                v316 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v311 + 48))(v315, 1, v310);
                v317 = swift_retain(v313);
                if (v316 == 1)
                {
                  sub_100011088(v315, &qword_100813520);
                  v318 = 0;
                  v319 = 0;
                }
                else
                {
                  v318 = ImpressionMetrics.ID.element.getter(v317);
                  v320 = v311;
                  v319 = v321;
                  (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v315, v310);
                }
                ImpressionMetrics.withParentId(_:)(v318, v319);
                objc_msgSend(v224, "frame", swift_bridgeObjectRelease(v319).n128_f64[0]);
                ImpressionsCalculator.addElement(_:at:)(v261);
                v322 = swift_release(v313);
                (*((void (**)(char *, uint64_t, __n128))v180 + 1))(v261, v408, v322);
                v312 = (uint64_t)v367;
              }
              objc_msgSend(v224, "frame");
              v323 = *(_QWORD *)(v373 + 112);
              swift_retain(v323);
              sub_10034D59C(&v422, v323);

              swift_release(v323);
              swift_release(v260);
              sub_100011088(v312, &qword_100813520);
              (*((void (**)(char *, uint64_t))v180 + 1))(v181, v408);
              (*(void (**)(char *, uint64_t))(v410 + 8))(v396, v411);
              (*(void (**)(char *, uint64_t))(v397 + 8))(v398, v403);
              (*(void (**)(char *, uint64_t))(v381 + 8))(v401, v382);
LABEL_146:
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v425);
              goto LABEL_147;
            }
            static ComponentLayoutOptions.isSingleVerticalColumn.getter(v160);
            LODWORD(v391) = 0;
LABEL_51:
            sub_10003DB6C(v133, v128);
            v161 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
            v162 = v403;
            v161(v128, v403);
            v161((uint64_t)v133, v162);
            goto LABEL_52;
          }
        }
      }
    }
LABEL_45:
    static ComponentLayoutOptions.fixedHeightContainer.getter(v132);
    LODWORD(v391) = 1;
    goto LABEL_51;
  }
  v401 = v67;
  v403 = v69;
  v72 = v68;
  v73 = IndexPath.section.getter(v72);
  v74 = type metadata accessor for ReviewsPagePresenter(0);
  v75 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  v76 = dispatch thunk of ShelfPresenter.shelf(for:)(v73, v74, v75);
  v402 = v72;
  objc_msgSend(v72, "frame");
  v77 = v70;
  v78 = (char *)sub_10034AFF0();
  v79 = type metadata accessor for VideoPlaybackCoordinator(0);
  v43 = *(char **)&v415[qword_100854088];
  v80 = v77;
  v409 = v71;
  if (!v43)
  {
LABEL_163:
    v214 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v79);
    __break(1u);
    goto LABEL_164;
  }
  v81 = type metadata accessor for PlaybackCoordinator(0);
  v82 = v43;
  BaseObjectGraph.optional<A>(_:)(&v425, v81, v81);
  v83 = v425;
  Shelf.impressionMetrics.getter(v84);
  v85 = v414;
  v86 = v408;
  v87 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v414 + 6))(v55, 1, v408);
  v400 = v78;
  if (v87 == 1)
  {
    sub_100011088((uint64_t)v55, (uint64_t *)&unk_1007F7740);
    v89 = 1;
    v90 = (uint64_t)v404;
  }
  else
  {
    v90 = (uint64_t)v404;
    ImpressionMetrics.id.getter(v88);
    (*((void (**)(char *, uint64_t))v85 + 1))(v55, v86);
    v89 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v405 + 56))(v90, v89, 1, v406);
  v135 = v82;
  v414 = v135;
  v399 = v83;
  v136 = sub_10034B1E8(v90, v43, v83, 0);
  v138 = v137;

  sub_100011088(v90, &qword_100813520);
  v139 = v409;
  swift_retain(v409);
  v141 = IndexPath.section.getter(v140);
  v142 = v412;
  v144 = Shelf.contentType.getter(v143);
  v145 = Shelf.ContentType.doesModelContainment.getter(v144);
  (*(void (**)(char *, uint64_t))(v410 + 8))(v142, v411);
  v146 = *(_QWORD *)(v80 + 24);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v80 + 48);
  v148 = sub_10000DF3C(&qword_100808CF0);
  v149 = swift_allocObject(v148, 88, 7);
  *(_QWORD *)(v149 + 48) = 0;
  swift_unknownObjectWeakInit(v149 + 56);
  *(_QWORD *)(v149 + 16) = v139;
  *(_QWORD *)(v149 + 24) = v141;
  *(_BYTE *)(v149 + 32) = v145 & 1;
  *(_QWORD *)(v149 + 40) = v146;
  *(_QWORD *)(v149 + 64) = v136;
  *(_QWORD *)(v149 + 72) = v138;
  v150 = v400;
  *(_QWORD *)(v149 + 80) = v400;
  swift_unknownObjectWeakAssign(v151, Strong);
  swift_retain(v150);
  swift_retain(v146);
  swift_unknownObjectRetain(v136);

  v152 = swift_getObjectType();
  v153 = IndexPath.section.getter(v152);
  v154 = sub_100010F98(&qword_100808CF8, &qword_100808CF0, byte_10068CBC0);
  v155 = v401;
  v156 = (void (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void *, uint64_t, __n128, char *))*((_QWORD *)v401 + 4);
  v157 = swift_retain(v149);
  v156(v76, v153, v407, v415, v149, v154, v413, v152, v157, v155);

  swift_release(v76);
  swift_release(v150);

  swift_unknownObjectRelease(v136);
  swift_release_n(v149, 2);

}

void sub_100346FD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;
  _QWORD v16[4];

  v10 = IndexPath.section.getter(a1);
  if (v10 >= dispatch thunk of BaseShelfPresenter.sectionCount.getter(v11)
    && (v12 = type metadata accessor for ProductReviewCollectionViewCell(0), swift_dynamicCastClass(a1, v12)))
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(a5, "cellForItemAtIndexPath:", isa);

    if (v14)
    v16[3] = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
    v16[0] = a1;
    v15 = a1;
    tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v16, a3, a4, v14 == 0);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
  }
  else
  {
    sub_10034DF14(a1, a2, a3, a4, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  }
}

double sub_100347110(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  unint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  unsigned __int8 *v58;
  int v59;
  int v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  char v71[24];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v66 = a4;
  v70 = a3;
  v63 = a2;
  v65 = type metadata accessor for IndexPath(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Shelf.ContentType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - v16;
  v67 = v4;
  v68 = a1;
  v18 = *(_QWORD *)(v4 + 16);
  v20 = IndexPath.section.getter(v19);
  v62 = v18;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v14, enum case for Shelf.ContentType.reviews(_:), v8);
  v21 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v69 = v17;
  dispatch thunk of RawRepresentable.rawValue.getter(&v75, v8, v21);
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v8, v21);
  v22 = v76;
  v23 = v74;
  if (v75 == v73 && v76 == v74)
  {
    v24 = 1;
    v23 = v76;
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v76, v73, v74, 0);
  }
  swift_bridgeObjectRelease(v22);
  v25 = swift_bridgeObjectRelease(v23);
  v26 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v26(v14, v8, v25);
  v27 = v64;
  v28 = v68;
  v29 = v65;
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 16))(v7, v68, v65);
  if ((v24 & 1) != 0)
  {
    v31 = IndexPath.section.getter(v30);
    v32 = type metadata accessor for ReviewsPagePresenter(0);
    v33 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    dispatch thunk of ShelfPresenter.contentType(for:)(v31, v32, v33);
    v34 = sub_1002C5DFC();
    ((void (*)(char *, uint64_t))v26)(v11, v8);
    v35 = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v7, v29);
    v36 = (uint64_t)v69;
    v37 = v67;
    if (!v34)
    {
      v38 = IndexPath.section.getter(v35);
      v39 = dispatch thunk of BaseShelfPresenter.doesShelfExist(for:)(v38);
      v40 = v70;
      if ((v39 & 1) != 0)
      {
        v41 = IndexPath.section.getter(v39);
        v42 = sub_10034D470(v41, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      }
      else
      {
        v42 = 0;
      }
      sub_10034CF18(v36, 0, v42, v40, v66);
      v46 = v45;
      dispatch thunk of BaseShelfPresenter.model(at:)(&v75, v28);
      swift_getObjectType();
      v47 = objc_msgSend(v40, "traitCollection");
      v48 = UITraitCollection.isSizeClassRegular.getter(v47);
      if ((v48 & 1) != 0)
      {
        v49 = UITraitCollection.prefersAccessibilityLayouts.getter(v48);

        if ((v49 & 1) == 0)
        {
          if (qword_1007F1D18 != -1)
            swift_once(&qword_1007F1D18, sub_10034C1F4);
          v50 = qword_100808910;
          type metadata accessor for ProductReviewView();
          v51.n128_u64[0] = v46;
          v43 = sub_100387FA4(v50, 0, 0, v40, v51);
LABEL_26:
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v75);
          goto LABEL_11;
        }
      }
      else
      {

      }
      sub_100011020((uint64_t)&v75, (uint64_t)&v73);
      v52 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v53 = type metadata accessor for Review(0);
      swift_dynamicCast(&v72, &v73, v52, v53, 7);
      v54 = v72;
      swift_beginAccess(v37 + 136, v71, 0, 0);
      v55 = *(_QWORD *)(v37 + 136);
      if (*(_QWORD *)(v55 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v37 + 136));
        v56 = sub_10036C524(v28);
        if ((v57 & 1) != 0)
        {
          v58 = (unsigned __int8 *)(*(_QWORD *)(v55 + 56) + 2 * v56);
          v59 = *v58;
          v60 = v58[1];
        }
        else
        {
          v59 = 0;
          v60 = 0;
        }
        swift_bridgeObjectRelease(v55);
      }
      else
      {
        v59 = 0;
        v60 = 0;
      }
      type metadata accessor for ProductReviewView();
      v61.n128_u64[0] = v46;
      v43 = sub_100387FA4(v54, v59, v60, v40, v61);
      swift_release(v54);
      goto LABEL_26;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v29);
    v36 = (uint64_t)v69;
  }
  v43 = sub_100347E1C(v28, v63, v70, (uint64_t)v66);
LABEL_11:
  ((void (*)(uint64_t, uint64_t))v26)(v36, v8);
  return v43;
}

double sub_100347618(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  double (*v56)(uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(uint64_t, uint64_t);
  void *v66;
  id v67;
  char v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  __n128 v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[6];

  v110 = a4;
  v116 = a2;
  v117 = a3;
  v109 = type metadata accessor for Shelf.PresentationHints(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v106 = (char *)&v102 - v8;
  v9 = sub_10000DF3C(&qword_1007F9668);
  __chkstk_darwin(v9);
  v112 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for ComponentLayoutOptions(0);
  v126 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v124 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v123 = (char *)&v102 - v13;
  __chkstk_darwin(v14);
  v125 = (char *)&v102 - v15;
  v119 = type metadata accessor for IndexPath(0);
  v111 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v18);
  v20 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_10000DF3C(&qword_10080FCC0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v122 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Shelf.ContentType(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v4;
  v27 = IndexPath.section.getter(v26);
  v28 = type metadata accessor for PurchasesContentPresenter(0);
  v29 = sub_10000E99C((unint64_t *)&qword_1007F75C0, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
  dispatch thunk of ShelfPresenter.contentType(for:)(v27, v28, v29);
  v30 = sub_1002C5474();
  if (v30)
  {
    v103 = v31;
    v104 = v30;
    v120 = v25;
    v118 = v23;
    v105 = v22;
    v32 = IndexPath.section.getter(v30);
    v33 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v32, v28, v29);
    if ((v33 & 1) != 0)
    {
      v34 = IndexPath.section.getter(v33);
      v33 = sub_10034D470(v34, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
      v35 = v33;
    }
    else
    {
      v35 = 0;
    }
    v37 = v119;
    v38 = IndexPath.section.getter(v33);
    v39 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v38, v28, v29);
    if ((v39 & 1) != 0)
    {
      v40 = IndexPath.section.getter(v39);
      v119 = dispatch thunk of ShelfPresenter.shelf(for:)(v40, v28, v29);
    }
    else
    {
      v119 = 0;
    }
    v41 = v110;
    v110 = (void *)v35;
    v42 = v117;
    sub_10034CF18((uint64_t)v120, 0, v35, v117, v41);
    v44 = v43;
    v46 = v45;
    dispatch thunk of ShelfPresenter.model(at:)(v128, a1, v28, v29);
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v17, a1, v37);
    StatePath<A>.init(_:)(v17);
    v127 = *(_QWORD *)(v121 + 24);
    swift_retain(v127);
    v47 = sub_10000DF3C(&qword_100803430);
    v48 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
    v49 = StateLens.init<A>(contentsOf:in:)(v20, &v127, &type metadata for Never, v47, v48);
    ComponentLayoutOptions.init()(v49);
    v50 = sub_10034C06C(a1, v42, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
    v52 = v115;
    if ((v50 & 1) != 0)
    {
      v53 = (uint64_t)v124;
      static ComponentLayoutOptions.separatorHidden.getter();
      v121 = a1;
      v54 = v42;
      v55 = v123;
      sub_10003DB6C(v123, v53);
      v56 = *(double (**)(uint64_t, uint64_t))(v126 + 8);
      v56(v53, v52);
      v57 = v55;
      v42 = v54;
      a1 = v121;
      v51.n128_f64[0] = v56((uint64_t)v57, v52);
    }
    v58 = (uint64_t)v112;
    dispatch thunk of ShelfPresenter.itemBackground(forItemAt:)(a1, v28, v29, v51);
    v59 = type metadata accessor for ItemBackground(0);
    v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59);
    v61 = sub_100011088(v58, &qword_1007F9668);
    v62 = v116;
    if (v60 != 1)
    {
      v63 = (uint64_t)v124;
      static ComponentLayoutOptions.hasBackground.getter(v61);
      v64 = v123;
      sub_10003DB6C(v123, v63);
      v65 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
      v65(v63, v52);
      v65((uint64_t)v64, v52);
    }
    v66 = v42;
    v67 = objc_msgSend(v42, "traitCollection");
    v68 = UITraitCollection.isSizeClassCompact.getter(v67);

    v71 = v105;
    if ((v68 & 1) != 0)
    {
      v72 = (uint64_t)v124;
      static ComponentLayoutOptions.isSingleVerticalColumn.getter(v70);
      v73 = v123;
      sub_10003DB6C(v123, v72);
      v74 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
      v74(v72, v52);
      v69 = ((uint64_t (*)(char *, uint64_t))v74)(v73, v52);
    }
    v75 = IndexPath.section.getter(v69);
    v76 = v125;
    v77 = v118;
    if (!v75)
    {
      v78 = (uint64_t)v124;
      static ComponentLayoutOptions.isFirstSection.getter(0);
      v79 = v123;
      sub_10003DB6C(v123, v78);
      v80 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
      v80(v78, v52);
      v80((uint64_t)v79, v52);
    }
    v81 = v119;
    if (v119)
    {
      v82 = swift_retain(v119);
      v83 = v62;
      v84 = v106;
      Shelf.presentationHints.getter(v82);
      swift_release(v81);
      v85 = v107;
      static Shelf.PresentationHints.showSupplementaryText.getter(v86);
      v87 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
      v88 = v109;
      v89 = dispatch thunk of SetAlgebra.isSuperset(of:)(v85, v109, v87);
      v90 = *(void (**)(char *, uint64_t))(v108 + 8);
      v91 = v85;
      v77 = v118;
      v90(v91, v88);
      v92 = v84;
      v62 = v83;
      v93 = v88;
      v81 = v119;
      v94 = ((uint64_t (*)(char *, uint64_t))v90)(v92, v93);
      if ((v89 & 1) != 0)
      {
        v95 = (uint64_t)v124;
        static ComponentLayoutOptions.showSupplementaryText.getter(v94);
        v96 = v123;
        sub_10003DB6C(v123, v95);
        v97 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
        v98 = v95;
        v81 = v119;
        v97(v98, v52);
        v97((uint64_t)v96, v52);
      }
    }
    v99 = v122;
    v36 = (*(double (**)(_QWORD *, void *, char *, uint64_t, char *, void *, double, double))(v103 + 72))(v128, v110, v122, v62, v76, v66, v44, v46);
    v100 = swift_release(v81);
    (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v76, v52, v100);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v99, v114);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v128);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v120, v71);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    return 0.0;
  }
  return v36;
}

double sub_100347E1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  double (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  void (*v65)(uint64_t, uint64_t);
  id v66;
  char v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(uint64_t, uint64_t);
  char *v75;
  void (*v76)(uint64_t, uint64_t);
  __n128 v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  char *v87;
  void (*v88)(uint64_t, uint64_t);
  char *v89;
  __n128 v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[5];

  v102 = a4;
  v118 = a3;
  v113 = a2;
  v101 = type metadata accessor for Shelf.PresentationHints(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v98 = (char *)&v93 - v8;
  v9 = sub_10000DF3C(&qword_1007F9668);
  __chkstk_darwin(v9);
  v108 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for ComponentLayoutOptions(0);
  v119 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v103 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v117 = (char *)&v93 - v13;
  __chkstk_darwin(v14);
  v111 = (char *)&v93 - v15;
  v105 = type metadata accessor for IndexPath(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v18);
  v106 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C(&qword_10080FCC0);
  v109 = *(_QWORD *)(v20 - 8);
  v110 = v20;
  __chkstk_darwin(v20);
  v116 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Shelf.ContentType(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v93 - v27;
  v107 = v4;
  v30 = IndexPath.section.getter(v29);
  v31 = type metadata accessor for ReviewsPagePresenter(0);
  v32 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  dispatch thunk of ShelfPresenter.contentType(for:)(v30, v31, v32);
  v33 = sub_1002C5474();
  if (v33)
  {
    v95 = v34;
    v96 = v33;
    v114 = v23;
    v115 = v28;
    v97 = v22;
    v35 = IndexPath.section.getter(v33);
    v36 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v35, v31, v32);
    if ((v36 & 1) != 0
      && (v37 = IndexPath.section.getter(v36),
          v36 = dispatch thunk of ShelfPresenter.sectionCount.getter(v31, v32),
          v37 < v36))
    {
      v36 = dispatch thunk of ShelfPresenter.isShelfHidden(for:)(v37, v31, v32);
      v38 = (uint64_t)v103;
      v39 = (void *)v102;
      if ((v36 & 1) != 0)
      {
        v40 = 0;
      }
      else
      {
        v94 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v37, v31, v32);
        dispatch thunk of ShelfPresenter.contentType(for:)(v37, v31, v32);
        v92 = sub_1002C5DFC();
        v36 = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v25, v97);
        if (v92)
          v40 = 1;
        else
          v40 = v94;
      }
    }
    else
    {
      v40 = 0;
      v38 = (uint64_t)v103;
      v39 = (void *)v102;
    }
    v41 = IndexPath.section.getter(v36);
    v42 = dispatch thunk of ShelfPresenter.doesShelfExist(for:)(v41, v31, v32);
    if ((v42 & 1) != 0)
    {
      v43 = IndexPath.section.getter(v42);
      v102 = dispatch thunk of ShelfPresenter.shelf(for:)(v43, v31, v32);
    }
    else
    {
      v102 = 0;
    }
    v103 = (char *)v40;
    v45 = v118;
    sub_10034CF18((uint64_t)v115, 0, v40, v118, v39);
    v47 = v46;
    v49 = v48;
    dispatch thunk of ShelfPresenter.model(at:)(v121, a1, v31, v32);
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v17, a1, v105);
    v50 = v106;
    StatePath<A>.init(_:)(v17);
    v120 = *(_QWORD *)(v107 + 24);
    swift_retain(v120);
    v51 = sub_10000DF3C(&qword_100803430);
    v52 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
    v53 = StateLens.init<A>(contentsOf:in:)(v50, &v120, &type metadata for Never, v51, v52);
    v54 = v111;
    ComponentLayoutOptions.init()(v53);
    v55 = sub_10034C06C(a1, v45, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    v57 = v112;
    if ((v55 & 1) != 0)
    {
      static ComponentLayoutOptions.separatorHidden.getter(v55);
      v58 = v117;
      sub_10003DB6C(v117, v38);
      v59 = *(double (**)(uint64_t, uint64_t))(v119 + 8);
      v59(v38, v57);
      v56.n128_f64[0] = v59((uint64_t)v58, v57);
    }
    v60 = (uint64_t)v108;
    dispatch thunk of ShelfPresenter.itemBackground(forItemAt:)(a1, v31, v32, v56);
    v61 = type metadata accessor for ItemBackground(0);
    v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v60, 1, v61);
    v63 = sub_100011088(v60, &qword_1007F9668);
    if (v62 != 1)
    {
      static ComponentLayoutOptions.hasBackground.getter(v63);
      v64 = v117;
      sub_10003DB6C(v117, v38);
      v65 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
      v65(v38, v57);
      v65((uint64_t)v64, v57);
    }
    v66 = objc_msgSend(v118, "traitCollection");
    v67 = UITraitCollection.isSizeClassCompact.getter(v66);

    v70 = v97;
    v71 = v114;
    v72 = v102;
    if ((v67 & 1) != 0)
    {
      static ComponentLayoutOptions.isSingleVerticalColumn.getter(v69);
      v73 = v117;
      sub_10003DB6C(v117, v38);
      v74 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
      v74(v38, v57);
      v68 = ((uint64_t (*)(char *, uint64_t))v74)(v73, v57);
    }
    if (!IndexPath.section.getter(v68))
    {
      static ComponentLayoutOptions.isFirstSection.getter(0);
      v75 = v117;
      sub_10003DB6C(v117, v38);
      v76 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
      v76(v38, v57);
      v76((uint64_t)v75, v57);
    }
    if (v72)
    {
      v77 = swift_retain(v72);
      v78 = v98;
      Shelf.presentationHints.getter(v77);
      swift_release(v72);
      v79 = v99;
      static Shelf.PresentationHints.showSupplementaryText.getter(v80);
      v81 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
      v82 = v101;
      v83 = dispatch thunk of SetAlgebra.isSuperset(of:)(v79, v101, v81);
      v84 = *(void (**)(char *, uint64_t))(v100 + 8);
      v85 = v79;
      v71 = v114;
      v84(v85, v82);
      v86 = ((uint64_t (*)(char *, uint64_t))v84)(v78, v82);
      if ((v83 & 1) != 0)
      {
        static ComponentLayoutOptions.showSupplementaryText.getter(v86);
        v87 = v117;
        sub_10003DB6C(v117, v38);
        v88 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
        v88(v38, v57);
        v88((uint64_t)v87, v57);
      }
    }
    v89 = v116;
    v44 = (*(double (**)(_QWORD *, char *, char *, uint64_t, char *, void *, double, double))(v95 + 72))(v121, v103, v116, v113, v54, v118, v47, v49);
    v90 = swift_release(v72);
    (*(void (**)(char *, uint64_t, __n128))(v119 + 8))(v54, v57, v90);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v89, v110);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v121);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v115, v70);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    return 0.0;
  }
  return v44;
}

double sub_1003486A4(uint64_t a1, void *a2, __n128 a3)
{
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(a3) <= a1
    || dispatch thunk of BaseShelfPresenter.numberOfRows(for:)(a1))
  {
    return sub_100348710(a1, a2);
  }
  else
  {
    return UIEdgeInsetsZero.top;
  }
}

double sub_100348710(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double top;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  char v41;
  uint64_t v42;
  char *v43;
  int v44;
  char v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;

  v52 = a2;
  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v50 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  __chkstk_darwin(v11);
  v51 = (char *)&v47 - v12;
  v13 = type metadata accessor for FloatingPointRoundingRule(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v2;
  v17 = type metadata accessor for ReviewsPagePresenter(0);
  v18 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v17, v18) > a1)
  {
    v47 = v7;
    if (qword_1007F2A38 != -1)
      swift_once(&qword_1007F2A38, sub_10042D16C);
    v20 = type metadata accessor for EdgeInsetsDimension(0, v19);
    v21 = sub_1000117A8(v20, (uint64_t)qword_1008561F8);
    static Dimensions.defaultRoundingRule.getter(v21);
    v22 = v52;
    EdgeInsetsDimension.value(in:rounded:)(v52, v16);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    dispatch thunk of ShelfPresenter.title(for:)(a1, v17, v18);
    v24 = v23;
    swift_bridgeObjectRelease(v23);
    top = 0.0;
    if (!v24)
    {
      if (a1 >= 1)
        v26 = a1 - 1;
      else
        v26 = 0;
      top = sub_10034B4A8(a1, v26, a1 < 1, (uint64_t)v22, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    }
    v27 = dispatch thunk of ShelfPresenter.sectionCount.getter(v17, v18);
    if (a1 + 1 < v27)
      v28 = a1 + 1;
    else
      v28 = 0;
    sub_1005523FC(a1, v28, a1 + 1 >= v27, v22);
    v29 = v51;
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v17, v18);
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v17, v18);
    v30 = sub_1002C5DFC();
    v31 = v49;
    v32 = *(void (**)(char *, uint64_t))(v50 + 8);
    v32(v10, v49);
    if (v30)
    {
      v33 = v29;
LABEL_46:
      v32(v33, v31);
      return top;
    }
    v34 = sub_1002C5474();
    v36 = v29;
    if (!v34)
    {
      top = UIEdgeInsetsZero.top;
      v33 = v29;
      goto LABEL_46;
    }
    v37 = v34;
    v38 = v35;
    objc_msgSend(v52, "pageMarginInsets");
    v40 = v39;
    v41 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(a1, v17, v18);
    v42 = v50;
    v43 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v36, v31);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v43, v31);
    if (v44 != enum case for Shelf.ContentType.smallLockup(_:)
      && v44 != enum case for Shelf.ContentType.mediumLockup(_:))
    {
      if (v44 == enum case for Shelf.ContentType.largeLockup(_:))
      {
LABEL_23:
        v45 = 1;
LABEL_45:
        (*(void (**)(_QWORD, id, uint64_t, uint64_t, double, double))(v38 + 32))(v45 & 1, v52, v37, v38, v40, v40);
        v33 = v51;
        goto LABEL_46;
      }
      if (v44 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        && v44 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        && v44 != enum case for Shelf.ContentType.action(_:))
      {
        if (v44 == enum case for Shelf.ContentType.ribbonBar(_:))
          goto LABEL_23;
        if (v44 != enum case for Shelf.ContentType.editorialCard(_:)
          && v44 != enum case for Shelf.ContentType.videoCard(_:))
        {
          v45 = 1;
          if (v44 == enum case for Shelf.ContentType.brick(_:)
            || v44 == enum case for Shelf.ContentType.categoryBrick(_:))
          {
            goto LABEL_45;
          }
          if (v44 != enum case for Shelf.ContentType.reviews(_:)
            && v44 != enum case for Shelf.ContentType.appTrailerLockup(_:)
            && v44 != enum case for Shelf.ContentType.framedVideo(_:)
            && v44 != enum case for Shelf.ContentType.screenshotsLockup(_:)
            && v44 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
            && v44 != enum case for Shelf.ContentType.smallBreakout(_:))
          {
            if (v44 == enum case for Shelf.ContentType.editorialStoryCard(_:))
              goto LABEL_23;
            if (v44 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
              && v44 != enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
              && v44 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
              && v44 != enum case for Shelf.ContentType.posterLockup(_:)
              && v44 != enum case for Shelf.ContentType.smallContactCard(_:))
            {
              if (v44 != enum case for Shelf.ContentType.informationRibbon(_:))
              {
                v45 = v41;
                if (v44 != enum case for Shelf.ContentType.appPromotion(_:))
                {
                  v32(v47, v31);
                  v45 = 0;
                }
                goto LABEL_45;
              }
              goto LABEL_23;
            }
          }
        }
      }
    }
    v45 = v41;
    goto LABEL_45;
  }
  return UIEdgeInsetsZero.top;
}

id sub_100348CC8(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  double v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  int *v36;
  void (*v37)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v38)(_QWORD, _QWORD, _QWORD, _QWORD);
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;

  v8 = type metadata accessor for TitleHeaderView.Style(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v9) > a1)
  {
    v13 = dispatch thunk of ReviewsPagePresenter.sortActionTitle(for:)(a1);
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      v54 = dispatch thunk of BaseShelfPresenter.title(for:)(a1);
      v55 = v17;
      v18 = sub_100341D00();
      if (qword_1007F1218 != -1)
        swift_once(&qword_1007F1218, sub_1000F15E8);
      v19 = *(double *)&qword_1008519D0;
      v20 = sub_100341D00();
      objc_msgSend(v20, "contentInsets");
      v22 = v21;

      v53[1] = swift_getObjectType();
      v23 = objc_msgSend(a2, "traitCollection");
      v24 = sub_1000F1BCC(a3, a4, v19 - v22, v15, v16, (uint64_t)v18, 0, (uint64_t)v23);
      v26 = v25;

      objc_msgSend(a2, "pageMarginInsets", swift_bridgeObjectRelease(v16).n128_f64[0]);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      if (a1 >= 1)
        v34 = a1 - 1;
      else
        v34 = 0;
      v35 = v27
          + sub_10034B4A8(a1, v34, a1 < 1, (uint64_t)a2, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      type metadata accessor for TitleHeaderView(0);
      v36 = (int *)dispatch thunk of BaseShelfPresenter.eyebrow(for:)(a1);
      v38 = v37;
      v39 = (_OWORD *)dispatch thunk of BaseShelfPresenter.eyebrowArtwork(for:)(a1);
      v40 = dispatch thunk of BaseShelfPresenter.titleArtwork(for:)(a1);
      sub_100603E8C(a1, a2, (uint64_t)v11);
      v41 = v55;
      v42 = sub_1000ED634(v36, v38, v39, v54, v55, v40, 0, 0, a3, a4, v24, v26, v35, v29, v31, v33, 0, 0, 2,
              (uint64_t)v11,
              1,
              a2);
      v44 = v43;
      swift_release(v40);
      swift_release(v39);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v41);
      sub_10002F0D4((uint64_t)v11, type metadata accessor for TitleHeaderView.Style);
      v45 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v46 = objc_msgSend(v45, "absoluteDimension:", v42);
      v47 = objc_msgSend(v45, "absoluteDimension:", v44);
      v48 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v46, v47);

      static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      v50 = v49;
      v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v50);
      v12 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v48, v51, 1);

    }
    else
    {
      return 0;
    }
  }
  return v12;
}

double *sub_10034909C(uint64_t a1, void *a2, void *a3)
{
  double *v6;
  double v7;
  double v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double *v15;

  v6 = sub_100349170(a1, a2, a3);
  v15 = v6;
  objc_msgSend(a3, "bounds");
  v9 = sub_100348CC8(a1, a2, v7, v8);
  if (v9)
  {
    v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)(((unint64_t)v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)(((unint64_t)v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
    specialized Array._endMutation()(v13);

    return v15;
  }
  return v6;
}

double *sub_100349170(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v6 = type metadata accessor for ReviewsPagePresenter(0);
  v7 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  dispatch thunk of ShelfPresenter.title(for:)(a1, v6, v7);
  v9 = v8;
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (!v9)
    return _swiftEmptyArrayStorage;
  objc_msgSend(a3, "bounds", v10);
  v12 = v11;
  sub_10034B854(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter, (void (*)(uint64_t, id))sub_100603E8C);
  v14 = v13;
  v15 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v16 = objc_msgSend(v15, "absoluteDimension:", v12);
  v17 = objc_msgSend(v15, "absoluteDimension:", v14);
  v18 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v16, v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v20 = v19;
  v21 = v18;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v21, v22, 1);

  v24 = sub_10000DF3C(&qword_1007F5840);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v25 + 32) = v23;
  v28 = v25;
  specialized Array._endMutation()(v25);
  v26 = v28;

  return (double *)v26;
}

void sub_100349388(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  double *v39;
  uint64_t (**v40)();
  uint64_t v41;
  void *v42;
  uint64_t (*v43)();
  uint64_t (*v44)();
  __n128 v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  NSString v51;
  uint64_t v52;
  double v53;
  id v54;
  double v55;
  double v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t (**v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void *v84;

  v84 = a5;
  v11 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v14);
  v83 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007FAFB0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v17) <= a4)
    goto LABEL_9;
  v20 = dispatch thunk of ReviewsPagePresenter.sortActionTitle(for:)(a4);
  if (!v21)
    goto LABEL_9;
  v80 = v20;
  v81 = v21;
  v82 = v13;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v22 == a2 && v23 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v22, v23, 0);
    swift_bridgeObjectRelease(v25);
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease(v81);
LABEL_9:
      sub_1003499E4(a1, a2, a3, a4, v84, a6);
      return;
    }
  }
  v27 = type metadata accessor for TitleHeaderView(0);
  v28 = (_QWORD *)swift_dynamicCastClassUnconditional(a1, v27, 0, 0, 0);
  v79 = a1;
  v29 = (uint64_t)v84;
  objc_msgSend(v84, "pageMarginInsets");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  if (a4 >= 1)
    v37 = a4 - 1;
  else
    v37 = 0;
  v38 = v30
      + sub_10034B4A8(a4, v37, a4 < 1, v29, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  objc_msgSend(v28, "setLayoutMargins:", v38, v32, v34, v36);
  v39 = (double *)((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset);
  *v39 = v38;
  v39[1] = v32;
  v39[2] = v34;
  v39[3] = v36;
  objc_msgSend(v28, "setNeedsLayout");
  v40 = (uint64_t (**)())((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines);
  v41 = *(_QWORD *)((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines + 8);
  *v40 = sub_100158F34;
  v40[1] = 0;
  swift_release(v41);
  v42 = *(void **)((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel);
  v44 = *v40;
  v43 = v40[1];
  v45 = swift_retain(v43);
  v46 = ((uint64_t (*)(_QWORD *, __n128))v44)(v28, v45);
  objc_msgSend(v42, "setNumberOfLines:", v46, swift_release(v43).n128_f64[0]);
  v47 = v42;
  dispatch thunk of BaseShelfPresenter.title(for:)(a4);
  if (v48)
  {
    v50 = v48;
    v51 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v49 = swift_bridgeObjectRelease(v50).n128_u64[0];
  }
  else
  {
    v51 = 0;
  }
  v52 = (uint64_t)v82;
  objc_msgSend(v47, "setText:", v51, v49);

  if (qword_1007F1218 != -1)
    swift_once(&qword_1007F1218, sub_1000F15E8);
  v53 = *(double *)&qword_1008519D0;
  v54 = sub_100341D00();
  objc_msgSend(v54, "contentInsets");
  v56 = v55;

  v57 = sub_100341D00();
  v58 = v81;
  *(_QWORD *)v19 = v80;
  *((_QWORD *)v19 + 1) = v58;
  *((_QWORD *)v19 + 2) = v57;
  *((double *)v19 + 3) = v53 - v56;
  v59 = type metadata accessor for Accessory(0);
  swift_storeEnumTagMultiPayload(v19, v59, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v19, 0, 1, v59);
  (*(void (**)(char *, uint64_t))((swift_isaMask & *v28) + 0x268))(v19, a6);
  sub_100011088((uint64_t)v19, &qword_1007FAFB0);
  v60 = *(void **)((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView);
  if (v60)
  {
    v61 = type metadata accessor for HeaderButton(0);
    v62 = swift_dynamicCastClass(v60, v61);
    if (v62)
    {
      v63 = (void *)v62;
      sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      v64 = qword_1007F2180;
      v65 = v60;
      if (v64 != -1)
        swift_once(&qword_1007F2180, sub_1004137FC);
      v66 = type metadata accessor for FontUseCase(0);
      v67 = sub_1000117A8(v66, (uint64_t)qword_100854980);
      v68 = objc_msgSend(v84, "traitCollection");
      v69 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v67, v68);

      v70 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithFont:", v69);
      objc_msgSend(v63, "setPreferredSymbolConfiguration:forImageInState:", v70, 0);

      v52 = (uint64_t)v82;
    }
  }
  v71 = swift_allocObject(&unk_1007396B0, 24, 7);
  swift_weakInit(v71 + 16);
  v72 = (uint64_t (**)(uint64_t))((char *)v28
                                         + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
  v73 = *(_QWORD *)((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
  v74 = *(_QWORD *)((char *)v28 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction + 8);
  *v72 = sub_10034C9FC;
  v72[1] = (uint64_t (*)(uint64_t))v71;
  sub_100019310(v73, v74);
  objc_msgSend(v28, "setBackgroundColor:", 0);
  v75 = type metadata accessor for ShelfHeader.Configuration(0);
  v76.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v52, 1, 1, v75);
  v77 = v83;
  sub_1005F4D04(0, 0, 0, 0, 0, v52, v83, v76);
  sub_100011088(v52, &qword_1007FAFE0);
  (*(void (**)(uint64_t))((swift_isaMask & *v28) + 0x1C8))(v77);
  v78 = objc_msgSend(v28, "layer");
  objc_msgSend(v78, "setZPosition:", 0.0);

}

void sub_1003499E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  double v65;
  double v66;
  double v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  NSString v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  double v96;
  double v97;
  double v98;
  char *v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t (**v108)(void *);
  uint64_t v109;
  void *v110;
  uint64_t (*v111)(void *);
  uint64_t (*v112)(void *);
  __n128 v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  void (*v127)(char *, uint64_t);
  __n128 v128;
  _QWORD *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(_QWORD *, uint64_t);
  id v143;
  uint64_t v144;
  uint64_t v145;
  double (**v146)(uint64_t);
  uint64_t v147;
  uint64_t v148;
  void *v149;
  id v150;
  uint64_t v151;
  void *v152;
  id v153;
  id v154;
  __n128 v155;
  uint64_t v156;
  double v157;
  uint64_t v158;
  NSString v159;
  double v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  char *v165;
  double v166;
  double v167;
  double v168;
  double v169;
  double v170;
  double v171;
  double v172;
  uint64_t v173;
  double v174;
  double *v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  id v182;
  uint64_t ObjectType;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  id v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  uint64_t v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  __n128 v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  BOOL v223;
  __n128 v224;
  uint64_t v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  void *v239;
  void *v240;
  _QWORD *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  id v253;
  _QWORD v254[3];
  uint64_t v255;
  _UNKNOWN **v256;
  char v257[8];

  v7 = v6;
  v250 = a6;
  v251 = a4;
  v253 = a1;
  v246 = *v6;
  v233 = type metadata accessor for ShelfBackground(0);
  v232 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v12 = (void **)((char *)&v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (void **)((char *)&v227 - v14);
  __chkstk_darwin(v16);
  v231 = (char *)&v227 - v17;
  v18 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v18);
  v20 = (char *)&v227 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Shelf.PresentationHints(0);
  v236 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v235 = (char *)&v227 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v234 = (char *)&v227 - v25;
  v245 = type metadata accessor for Artwork.Crop(0, v24);
  v244 = *(_QWORD *)(v245 - 8);
  __chkstk_darwin(v245);
  v243 = (char *)&v227 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v27);
  v242 = (uint64_t)&v227 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v230);
  v249 = (uint64_t)&v227 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v32 = v31;
  if (v30 == a2 && v31 == a3)
  {
    swift_bridgeObjectRelease(a3);
    goto LABEL_5;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, a2, a3, 0);
  swift_bridgeObjectRelease(v32);
  if ((v33 & 1) != 0)
  {
LABEL_5:
    v34 = type metadata accessor for InteractiveTitleHeaderView(0);
    v35 = v253;
    v36 = swift_dynamicCastClass(v253, v34);
    v228 = v34;
    if (v36)
    {
      v239 = (void *)v36;
      v37 = *(void **)(v36 + OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_titleView);
      v38 = v35;
    }
    else
    {
      v39 = type metadata accessor for TitleHeaderView(0);
      v37 = (void *)swift_dynamicCastClassUnconditional(v35, v39, 0, 0, 0);
      v239 = 0;
    }
    v40 = v251;
    v240 = a5;
    v41 = type metadata accessor for ArtworkLoader(0);
    v42 = *(_QWORD *)(v250 + qword_100854050);
    if (v42)
    {
      v229 = v21;
      v238 = v20;
      v241 = v7;
      v43 = v7[2];
      v44 = (void *)type metadata accessor for ReviewsPagePresenter(0);
      v45 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      v46 = v37;
      v247 = v42;
      swift_retain(v42);
      v47 = dispatch thunk of ShelfPresenter.eyebrowArtwork(for:)(v40, v44, v45);
      v48 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork;
      v49 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork);
      swift_retain(v49);
      sub_1000E6A44(v47);
      v50 = *(_QWORD *)((char *)v46 + v48);
      *(_QWORD *)((char *)v46 + v48) = v47;
      swift_retain(v47);
      swift_release(v50);
      sub_1000E6A58(v49, v51);
      swift_release(v49);
      swift_release(v47);
      v248 = v43;
      v252 = v45;
      v253 = v44;
      v52 = dispatch thunk of ShelfPresenter.eyebrow(for:)(v40, v44, v45);
      v54 = v53;
      v55 = (_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText);
      v56 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText);
      v57 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8);
      swift_bridgeObjectRetain(v57);
      sub_1000E6570(v52, v54);
      v58 = v55[1];
      *v55 = v52;
      v55[1] = v54;
      swift_bridgeObjectRelease(v58);
      sub_1000E65F0(v56, v57);
      v59 = swift_bridgeObjectRelease(v57);
      v60 = *(_QWORD *)((char *)v46 + v48);
      if (v60)
      {
        v61 = *(void **)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView);
        if (v61)
        {
          v62 = v249;
          (*(void (**)(__n128))((swift_isaMask & *v46) + 0x1C0))(v59);
          v63 = v242;
          sub_10034CA4C(v62, v242);
          swift_retain(v60);
          v64 = v61;
          sub_10002F0D4(v62, type metadata accessor for TitleHeaderView.Style);
          v65 = sub_1004EFDE8(v60, v63, (uint64_t)v46);
          v67 = v66;
          sub_10002F0D4(v63, type metadata accessor for TitleHeaderView.TextConfiguration);
          v68 = v243;
          v70 = Artwork.crop.getter(v69);
          v71 = Artwork.Crop.preferredContentMode.getter(v70);
          (*(void (**)(char *, uint64_t))(v244 + 8))(v68, v245);
          v72 = Artwork.config(_:mode:prefersLayeredImage:)(v71, 0, v65, v67);
          v73 = type metadata accessor for ArtworkView(0);
          v74 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v72, 2, 1, v64, v73, v74);
          swift_release(v60);

          swift_release(v72);
        }
      }
      v76 = v251;
      v75 = v252;
      v77 = v253;
      v78 = dispatch thunk of ShelfPresenter.titleArtwork(for:)(v251, v253, v252);
      v79 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork;
      v80 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork);
      swift_retain(v80);
      sub_1000E6BC4(v78);
      v81 = *(_QWORD *)((char *)v46 + v79);
      *(_QWORD *)((char *)v46 + v79) = v78;
      swift_retain(v78);
      swift_release(v81);
      sub_1000E6CC8(v80, v82);
      swift_release(v80);
      swift_release(v78);
      v237 = *(_QWORD *)((char *)v46 + v79);
      v83 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel;
      v84 = *(id *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel);
      dispatch thunk of ShelfPresenter.title(for:)(v76, v77, v75);
      if (v85)
      {
        v87 = v85;
        v88 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v86 = swift_bridgeObjectRelease(v87).n128_u64[0];
      }
      else
      {
        v88 = 0;
      }
      v89 = v238;
      v90 = v246;
      objc_msgSend(v84, "setText:", v88, v86);

      v91 = *(_QWORD *)((char *)v46 + v79);
      if (v91)
      {
        v92 = *(void **)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView);
        if (v92)
        {
          v93 = v249;
          (*(void (**)(void))((swift_isaMask & *v46) + 0x1C0))();
          v94 = v242;
          sub_10034CA4C(v93 + *(int *)(v230 + 20), v242);
          swift_retain(v91);
          v95 = v92;
          sub_10002F0D4(v93, type metadata accessor for TitleHeaderView.Style);
          v96 = sub_1004EFDE8(v91, v94, (uint64_t)v46);
          v98 = v97;
          sub_10002F0D4(v94, type metadata accessor for TitleHeaderView.TextConfiguration);
          v99 = v243;
          v101 = Artwork.crop.getter(v100);
          v102 = Artwork.Crop.preferredContentMode.getter(v101);
          (*(void (**)(char *, uint64_t))(v244 + 8))(v99, v245);
          v103 = Artwork.config(_:mode:prefersLayeredImage:)(v102, 0, v96, v98);
          v104 = type metadata accessor for ArtworkView(0);
          v105 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v103, 2, 1, v95, v104, v105);
          swift_release(v91);

          swift_release(v103);
        }
      }
      v106 = v237 != 0;
      v107 = swift_allocObject(&unk_1007396D8, 32, 7);
      *(_BYTE *)(v107 + 16) = v106;
      *(_QWORD *)(v107 + 24) = v90;
      v108 = (uint64_t (**)(void *))((char *)v46
                                             + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines);
      v109 = *(_QWORD *)((char *)v46
                       + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines
                       + 8);
      *v108 = sub_10034CA14;
      v108[1] = (uint64_t (*)(void *))v107;
      swift_retain(v107);
      swift_release(v109);
      v110 = *(void **)((char *)v46 + v83);
      v112 = *v108;
      v111 = v108[1];
      v113 = swift_retain(v111);
      v114 = ((uint64_t (*)(_QWORD *, __n128))v112)(v46, v113);
      objc_msgSend(v110, "setNumberOfLines:", v114, swift_release(v111).n128_f64[0]);
      swift_release(v107);
      v116 = v252;
      v115 = v253;
      v117 = dispatch thunk of ShelfPresenter.seeAllAction(for:)(v76, v253, v252);
      if (v117)
      {
        v118 = v117;
        v119 = dispatch thunk of ShelfPresenter.shelf(for:)(v76, v115, v116);
        v120 = v234;
        Shelf.presentationHints.getter(v121);
        swift_release(v119);
        v122 = v235;
        static Shelf.PresentationHints.accessoriesFollowBackground.getter(v123);
        v124 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
        v125 = v229;
        v126 = dispatch thunk of SetAlgebra.isSuperset(of:)(v122, v229, v124);
        v127 = *(void (**)(char *, uint64_t))(v236 + 8);
        v127(v122, v125);
        v127(v120, v125);
        v129 = v241;
        if ((v126 & 1) != 0)
        {
          v130 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
          v131 = (void *)static UIColor.primaryText.getter(v130);
        }
        else
        {
          v131 = 0;
        }
        Action.title.getter(v128);
        *v89 = v139;
        v89[1] = v140;
        v89[2] = v131;
        v141 = type metadata accessor for Accessory(0);
        v89[3] = 0;
        v89[4] = 0;
        swift_storeEnumTagMultiPayload(v89, v141, 0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v89, 0, 1, v141);
        v142 = *(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v46) + 0x268);
        v143 = v131;
        v142(v89, v250);
        sub_100011088((uint64_t)v89, &qword_1007FAFB0);
        v144 = swift_allocObject(&unk_100739700, 24, 7);
        swift_weakInit(v144 + 16);
        v145 = swift_allocObject(&unk_100739728, 32, 7);
        *(_QWORD *)(v145 + 16) = v144;
        *(_QWORD *)(v145 + 24) = v76;
        v146 = (double (**)(uint64_t))((char *)v46
                                               + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
        v147 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
        v148 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction + 8);
        *v146 = sub_10034CA44;
        v146[1] = (double (*)(uint64_t))v145;
        swift_retain(v144);
        sub_100019310(v147, v148);
        swift_release(v144);
        swift_release(v118);

      }
      else
      {
        v132 = type metadata accessor for Accessory(0);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v89, 1, 1, v132);
        (*(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v46) + 0x268))(v89, v250);
        sub_100011088((uint64_t)v89, &qword_1007FAFB0);
        v133 = (_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
        v134 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction);
        v135 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction + 8);
        *v133 = 0;
        v133[1] = 0;
        sub_100019310(v134, v135);
        v129 = v241;
      }
      v149 = v240;
      v150 = v239;
      v151 = v249;
      sub_100603E8C(v76, v240, v249);
      (*(void (**)(uint64_t))((swift_isaMask & *v46) + 0x1C8))(v151);
      v152 = *(void **)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);
      v153 = v253;
      if (v152)
      {
        v154 = v152;
        dispatch thunk of ShelfPresenter.subtitle(for:)(v76, v153, v252, v155);
        if (v156)
        {
          v158 = v156;
          v159 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v157 = swift_bridgeObjectRelease(v158).n128_u64[0];
        }
        else
        {
          v159 = 0;
        }
        objc_msgSend(v154, "setText:", v159, v157);

      }
      if (v150)
      {
        *(_QWORD *)&v160 = swift_beginAccess(v129 + 8, v257, 0, 0).n128_u64[0];
        v161 = v129[8];
        if (*(_QWORD *)(v161 + 16))
        {
          v162 = sub_10036C110(v76);
          if ((v163 & 1) != 0)
          {
            v164 = *(_QWORD *)(*(_QWORD *)(v161 + 56) + 8 * v162);
            v255 = v228;
            v256 = &off_100728710;
            v254[0] = v150;
            v150 = v150;
            swift_retain(v164);
            sub_1001B96E4((uint64_t)v254);
            swift_release(v164);
            sub_100011088((uint64_t)v254, (uint64_t *)&unk_1007FFFB0);
          }
        }
      }
      else
      {
        v165 = v231;
        dispatch thunk of ShelfPresenter.background(for:)(v76, v153, v252);
        objc_msgSend(v46, "setOverrideUserInterfaceStyle:", sub_10028B9EC());
        (*(void (**)(char *, uint64_t))(v232 + 8))(v165, v233);
      }
      objc_msgSend(v149, "pageMarginInsets", v160);
      v168 = v167;
      v170 = v169;
      v172 = v171;
      if (v76 >= 1)
        v173 = v76 - 1;
      else
        v173 = 0;
      v174 = v166
           + sub_10034B4A8(v76, v173, v76 < 1, (uint64_t)v149, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      objc_msgSend(v46, "setLayoutMargins:", v174, v168, v170, v172);
      v175 = (double *)((char *)v46 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset);
      *v175 = v174;
      v175[1] = v168;
      v175[2] = v170;
      v175[3] = v172;
      objc_msgSend(v46, "setNeedsLayout");
      objc_msgSend(v46, "setNeedsLayout");
      swift_release(v247);

      return;
    }
LABEL_86:
    v225 = v41;
    v226 = v37;
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v225);
    __break(1u);
    return;
  }
  v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v138 = v137;
  if (v136 == a2 && v137 == a3)
  {
    swift_bridgeObjectRelease(a3);
LABEL_43:
    v177 = type metadata accessor for InfiniteScrollFooterView();
    objc_msgSend(*(id *)(swift_dynamicCastClassUnconditional(v253, v177, 0, 0, 0)+ OBJC_IVAR____TtC22SubscribePageExtension24InfiniteScrollFooterView_activityIndicator), "startAnimating");
    return;
  }
  v176 = _stringCompareWithSmolCheck(_:_:expecting:)(v136, v137, a2, a3, 0);
  swift_bridgeObjectRelease(v138);
  if ((v176 & 1) != 0)
    goto LABEL_43;
  type metadata accessor for MaterialGradientSectionBackgroundView();
  v178 = static UICollectionReusableView.elementKind.getter();
  v180 = v179;
  if (v178 == a2 && v179 == a3)
    goto LABEL_46;
  v181 = _stringCompareWithSmolCheck(_:_:expecting:)(v178, v179, a2, a3, 0);
  swift_bridgeObjectRelease(v180);
  if ((v181 & 1) != 0)
    goto LABEL_48;
  type metadata accessor for GradientSectionBackgroundView();
  v192 = static UICollectionReusableView.elementKind.getter();
  v194 = v193;
  if (v192 == a2 && v193 == a3)
    goto LABEL_46;
  v195 = _stringCompareWithSmolCheck(_:_:expecting:)(v192, v193, a2, a3, 0);
  swift_bridgeObjectRelease(v194);
  if ((v195 & 1) != 0)
    goto LABEL_48;
  type metadata accessor for ArtworkSectionBackgroundView();
  v196 = static UICollectionReusableView.elementKind.getter();
  v198 = v197;
  if (v196 == a2 && v197 == a3)
  {
LABEL_46:
    swift_bridgeObjectRelease(a3);
    goto LABEL_48;
  }
  v199 = _stringCompareWithSmolCheck(_:_:expecting:)(v196, v197, a2, a3, 0);
  swift_bridgeObjectRelease(v198);
  if ((v199 & 1) != 0)
  {
LABEL_48:
    v182 = v253;
    ObjectType = swift_getObjectType();
    v184 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SectionBackgroundView);
    if (v184)
      v185 = v184;
    else
      v185 = 0;
    if (v184)
      v186 = v182;
    else
      v186 = 0;
    if (v186)
    {
      v187 = swift_getObjectType();
      v188 = type metadata accessor for ReviewsPagePresenter(0);
      v189 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      v190 = v182;
      v191 = v231;
      dispatch thunk of ShelfPresenter.background(for:)(v251, v188, v189);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, CGFloat, CGFloat, CGFloat, CGFloat))(v185 + 8))(v191, v250, v187, v185, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

      (*(void (**)(char *, uint64_t))(v232 + 8))(v191, v233);
    }
    return;
  }
  v200 = type metadata accessor for InteractiveSectionBackgroundView(0);
  v201 = static UICollectionReusableView.elementKind.getter();
  v203 = v202;
  if (v201 == a2 && v202 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v204 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v202, a2, a3, 0);
    swift_bridgeObjectRelease(v203);
    if ((v204 & 1) == 0)
    {
      if (a2 == 0x676B636142706F74 && a3 == 0xED0000646E756F72
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x676B636142706F74, 0xED0000646E756F72, a2, a3, 0) & 1) != 0)
      {
        v213 = type metadata accessor for ReviewsPagePresenter(0);
        v214 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
        v215 = dispatch thunk of ShelfPresenter.background(for:)(0, v213, v214);
        v216 = v232;
        v217 = v233;
        if ((*(unsigned int (**)(void **, uint64_t, __n128))(v232 + 88))(v15, v233, v215) != enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v216 + 8))(v15, v217);
          return;
        }
        (*(void (**)(void **, uint64_t))(v216 + 96))(v15, v217);
        v218 = *v15;
        v219 = (char *)v15 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
      }
      else
      {
        if ((a2 != 0xD000000000000010 || a3 != 0x8000000100637E90)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100637E90, a2, a3, 0) & 1) == 0)
        {
          return;
        }
        v37 = (void *)type metadata accessor for ReviewsPagePresenter(0);
        v221 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
        if (dispatch thunk of ShelfPresenter.sectionCount.getter(v37, v221) < 1)
          return;
        v222 = dispatch thunk of ShelfPresenter.sectionCount.getter(v37, v221);
        v223 = __OFSUB__(v222, 1);
        v41 = v222 - 1;
        if (v223)
        {
          __break(1u);
          goto LABEL_86;
        }
        v224 = dispatch thunk of ShelfPresenter.background(for:)(v41, v37, v221);
        if ((*(unsigned int (**)(void **, uint64_t, __n128))(v232 + 88))(v12, v233, v224) != enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v232 + 8))(v12, v233);
          return;
        }
        (*(void (**)(void **, uint64_t))(v232 + 96))(v12, v233);
        v218 = *v12;
        v219 = (char *)v12 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
      }
      v220 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v220 - 8) + 8))(v219, v220);
      objc_msgSend(v253, "setBackgroundColor:", v218);

      return;
    }
  }
  v205 = v253;
  v206 = swift_dynamicCastClass(v253, v200);
  if (v206)
  {
    v207 = v206;
    swift_beginAccess(v7 + 8, v257, 0, 0);
    v208 = v7[8];
    if (*(_QWORD *)(v208 + 16))
    {
      v209 = sub_10036C110(v251);
      if ((v210 & 1) != 0)
      {
        v211 = *(_QWORD *)(*(_QWORD *)(v208 + 56) + 8 * v209);
        v255 = v200;
        v256 = &off_10073B9C0;
        v254[0] = v207;
        v212 = v205;
        swift_retain(v211);
        sub_1001B96E4((uint64_t)v254);
        swift_release(v211);
        sub_100011088((uint64_t)v254, (uint64_t *)&unk_1007FFFB0);
      }
    }
  }
}

uint64_t sub_10034AD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 16);
    swift_retain(v6);
    swift_release(v5);
    dispatch thunk of ReviewsPagePresenter.performSortAction(sender:)(a1);
    return swift_release(v6);
  }
  return result;
}

id sub_10034ADF8(int a1, int a2, id a3)
{
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  if (a3)
  {
    v11 = *(_QWORD *)(v3 + 24);
    v5 = a3;
    swift_retain(v11);
    v6 = sub_10000DF3C(&qword_100803430);
    v7 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
    StateStore.performTransaction<A>(_:)(sub_10034C764, &v10, v6, (char *)&type metadata for () + 8, v7);
    v8 = v11;

    swift_release(v8);
  }
  return objc_msgSend(a3, "reloadData");
}

void sub_10034AEE8()
{
  uint64_t v0;

  sub_100019310(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));

}

uint64_t sub_10034AF0C()
{
  uint64_t v0;

  v0 = sub_100603514();
  sub_100019310(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));

  return swift_deallocClassInstance(v0, 153, 7);
}

uint64_t type metadata accessor for ReviewsPageDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100808940;
  if (!qword_100808940)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReviewsPageDataSource);
  return result;
}

uint64_t sub_10034AF90(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_100685CB8;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = &unk_100685CD0;
  v2[3] = &unk_100685CE8;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 728);
}

uint64_t sub_10034AFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for ImpressionMetrics.ID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Shelf.impressionMetrics.getter(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F7740);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  v14 = *(_QWORD *)(v0 + 112);
  if (!v14
    || (swift_retain(*(_QWORD *)(v1 + 112)),
        ImpressionsCalculator.addElement(_:at:)(v13),
        swift_release(v14),
        (v15 = *(_QWORD *)(v1 + 112)) == 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return 0;
  }
  v16 = swift_retain(v15);
  ImpressionMetrics.id.getter(v16);
  v17 = ImpressionsCalculator.makeChildCalculator(for:)(v5);
  v18 = swift_release(v15);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v17;
}

uint64_t sub_10034B1E8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void *v36;
  uint64_t v37;

  v36 = a3;
  v37 = a4;
  v7 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ImpressionMetrics.ID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  v18 = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  v20 = *(_QWORD *)(v4 + 112);
  if (!v20)
  {
LABEL_4:
    if (!a2)
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_10034ECA8(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100011088((uint64_t)v9, &qword_100813520);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v32 = type metadata accessor for ImpressionIdScrollObserver(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = swift_retain_n(v20, 2);
  v34 = ImpressionIdScrollObserver.init(_:impressionID:collectionView:)(v33, v13, 0);
  CompoundScrollObserver.addChild(_:)(v34, &protocol witness table for ImpressionIdScrollObserver);
  swift_release(v20);
  v35 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v16, v10, v35);
  if (a2)
  {
LABEL_5:
    v21 = type metadata accessor for VideoPlaybackScrollObserver(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v22 = a2;
    v23 = VideoPlaybackScrollObserver.init(_:)(a2);
    CompoundScrollObserver.addChild(_:)(v23, &protocol witness table for VideoPlaybackScrollObserver);

    v19 = swift_release(v23);
  }
LABEL_6:
  v25 = v36;
  v24 = v37;
  if (v36)
  {
    v26 = type metadata accessor for PlaybackScrollObserver(0, v19);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v27 = v25;
    v28 = PlaybackScrollObserver.init(_:)(v25);
    CompoundScrollObserver.addChild(_:)(v28, &protocol witness table for PlaybackScrollObserver);

    swift_release(v28);
  }
  if (v24)
  {
    v29 = sub_10000E99C(&qword_100808D00, type metadata accessor for InteractiveSectionBackgroundScrollCoordinator, (uint64_t)&unk_10067A908);
    swift_retain(v24);
    CompoundScrollObserver.addChild(_:)(v30, v29);
    swift_release(v24);
  }
  return v18;
}

double sub_10034B4A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (**v18)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double v35;
  __n128 v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(char *, char *, char *, uint64_t, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  char v47;
  char v48;
  __n128 v49;
  void (*v50)(char *, uint64_t, __n128);
  __n128 v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v59 = a1;
  v60 = a7;
  v62 = a4;
  LODWORD(v61) = a3;
  v55 = a2;
  v9 = type metadata accessor for ShelfBackground(0);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v54 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - v12;
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Shelf.ContentType(0);
  v18 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = ((uint64_t (*)(_QWORD, __n128))a5)(0, v19);
  v23 = sub_10000E99C(a6, a5, v60);
  v24 = dispatch thunk of ShelfPresenter.shelf(for:)(v59, v22, v23);
  Shelf.contentType.getter();
  v56 = v13;
  if ((v61 & 1) != 0)
  {
    v18[7](v16, 1, 1, v17);
    v31 = v57;
    v29 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v13, enum case for ShelfBackground.none(_:), v58);
    v30 = v17;
    v28 = v31;
  }
  else
  {
    v61 = v21;
    v25 = v16;
    v26 = v55;
    dispatch thunk of ShelfPresenter.contentType(for:)(v55, v22, v23);
    v18[7](v25, 0, 1, v17);
    v27 = v26;
    v16 = v25;
    v21 = v61;
    dispatch thunk of ShelfPresenter.background(for:)(v27, v22, v23);
    v28 = v57;
    v29 = v58;
    v30 = v17;
  }
  if (!sub_1002C5DFC()
    || (v33 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 16))(v24, v16, v62), (v34 & 1) != 0))
  {
    v38 = sub_1002C5474();
    if (v38)
    {
      v40 = v38;
      v41 = v39;
      v61 = (char *)v18;
      v42 = v28;
      v43 = v54;
      Shelf.background.getter();
      v44 = *(uint64_t (**)(char *, char *, char *, uint64_t, uint64_t, uint64_t))(v41 + 48);
      v60 = v30;
      v45 = v56;
      *(double *)&v46 = COERCE_DOUBLE(v44(v16, v56, v43, v62, v40, v41));
      v48 = v47;
      v49 = swift_release(v24);
      v50 = *(void (**)(char *, uint64_t, __n128))(v42 + 8);
      v50(v43, v29, v49);
      ((void (*)(char *, uint64_t))v50)(v45, v29);
      sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F53A0);
      (*((void (**)(char *, uint64_t))v61 + 1))(v21, v60);
      v37 = 0.0;
      if ((v48 & 1) == 0)
        return *(double *)&v46;
    }
    else
    {
      v51 = swift_release(v24);
      (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v56, v29, v51);
      sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F53A0);
      ((void (*)(char *, uint64_t))v18[1])(v21, v30);
      return 0.0;
    }
  }
  else
  {
    v35 = *(double *)&v33;
    v36 = swift_release(v24);
    v37 = v35;
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v56, v29, v36);
    sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F53A0);
    ((void (*)(char *, uint64_t))v18[1])(v21, v30);
  }
  return v37;
}

double sub_10034B830(uint64_t a1, void *a2, void *a3)
{
  return sub_10034B854(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter, (void (*)(uint64_t, id))sub_100603E70);
}

double sub_10034B854(uint64_t a1, id a2, void *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(uint64_t, id))
{
  uint64_t v7;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  int *v45;
  void (*v46)(_QWORD, _QWORD, _QWORD, _QWORD);
  _OWORD *v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v54;
  void *v56;
  void (*v57)(_QWORD, _QWORD, _QWORD, _QWORD);
  int *v58;
  id ObjectType;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, id);
  char *v64;

  v63 = a7;
  v14 = type metadata accessor for TitleHeaderView.Style(0);
  v15 = __chkstk_darwin(v14);
  v64 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v7;
  v17 = ((uint64_t (*)(_QWORD, __n128))a4)(0, v15);
  v18 = sub_10000E99C(a5, a4, a6);
  v19 = 0.0;
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v17, v18) <= a1)
    return 0.0;
  objc_msgSend(a3, "bounds");
  v21 = v20;
  v23 = v22;
  v24 = dispatch thunk of ShelfPresenter.title(for:)(a1, v17, v18);
  if (v25)
  {
    v60 = v24;
    v61 = v25;
    v26 = dispatch thunk of ShelfPresenter.seeAllAction(for:)(a1, v17, v18);
    if (v26)
    {
      v28 = v26;
      v58 = (int *)Action.title.getter(v27);
      ObjectType = a2;
      v30 = v29;
      v31 = objc_msgSend(ObjectType, "traitCollection");
      v32 = sub_1000F1BCC(v21, v23, 0.0, (uint64_t)v58, v30, 0, 0, (uint64_t)v31);
      v19 = v33;

      swift_release(v28);
      v34 = v30;
      a2 = ObjectType;
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      v32 = 0.0;
    }
    ObjectType = (id)swift_getObjectType();
    objc_msgSend(a2, "pageMarginInsets");
    v37 = v36;
    v39 = v38;
    v41 = v40;
    if (a1 >= 1)
      v42 = a1 - 1;
    else
      v42 = 0;
    v43 = v35 + sub_10034B4A8(a1, v42, a1 < 1, (uint64_t)a2, a4, a5, a6);
    v44 = dispatch thunk of ShelfPresenter.titleArtwork(for:)(a1, v17, v18);
    v45 = (int *)dispatch thunk of ShelfPresenter.eyebrow(for:)(a1, v17, v18);
    v57 = v46;
    v58 = v45;
    v47 = (_OWORD *)dispatch thunk of ShelfPresenter.eyebrowArtwork(for:)(a1, v17, v18);
    v48 = objc_msgSend(a2, "traitCollection");
    v49 = UITraitCollection.prefersAccessibilityLayouts.getter(v48);

    if (v44)
      v50 = 1;
    else
      v50 = 2;
    if ((v49 & 1) != 0)
      v51 = 0;
    else
      v51 = v50;
    type metadata accessor for TitleHeaderView(0);
    v52 = (uint64_t)v64;
    v63(a1, a2);
    v56 = a2;
    v53 = v57;
    v54 = v61;
    v21 = sub_1000ED634(v58, v57, v47, v60, v61, v44, 0, 0, v21, v23, v32, v19, v43, v37, v39, v41, 0, 0, v51,
            v52,
            1,
            v56);
    swift_bridgeObjectRelease(v54);
    swift_release(v47);
    swift_bridgeObjectRelease(v53);
    swift_release(v44);
    sub_10002F0D4(v52, type metadata accessor for TitleHeaderView.Style);
  }
  return v21;
}

uint64_t sub_10034BBB4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v29;
  BOOL v30;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  char *v51;
  void *v52;

  v52 = a2;
  v9 = type metadata accessor for Shelf.ContentType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v51 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - v16;
  v48 = v5;
  v19 = IndexPath.section.getter(v18);
  v20 = a3(0);
  v49 = a4;
  v50 = a5;
  v21 = a4;
  v22 = v20;
  v23 = sub_10000E99C(v21, a3, a5);
  v24 = dispatch thunk of ShelfPresenter.contentType(for:)(v19, v22, v23);
  v25 = IndexPath.section.getter(v24);
  v26 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v25, v22, v23);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v9);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v14, v9);
  if (v27 == enum case for Shelf.ContentType.smallLockup(_:) || v27 == enum case for Shelf.ContentType.mediumLockup(_:))
    goto LABEL_15;
  if (v27 == enum case for Shelf.ContentType.largeLockup(_:))
  {
LABEL_6:
    v29 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_16:
    v33 = IndexPath.section.getter(v29);
    v34 = dispatch thunk of ShelfPresenter.rowsPerColumn(for:)(v33, v22, v23);
    result = IndexPath.item.getter(v34);
    if (__OFADD__(result, 1))
    {
      __break(1u);
    }
    else if (v34)
    {
      if (result != 0x7FFFFFFFFFFFFFFFLL || v34 != -1)
        return (result + 1) % v34 == 0;
      goto LABEL_55;
    }
    __break(1u);
    goto LABEL_53;
  }
  v30 = v27 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
     || v27 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:);
  if (v30 || v27 == enum case for Shelf.ContentType.action(_:))
    goto LABEL_15;
  if (v27 == enum case for Shelf.ContentType.ribbonBar(_:))
    goto LABEL_6;
  if (v27 == enum case for Shelf.ContentType.editorialCard(_:) || v27 == enum case for Shelf.ContentType.videoCard(_:))
    goto LABEL_15;
  if (v27 == enum case for Shelf.ContentType.brick(_:) || v27 == enum case for Shelf.ContentType.categoryBrick(_:))
    goto LABEL_6;
  if (v27 == enum case for Shelf.ContentType.reviews(_:)
    || v27 == enum case for Shelf.ContentType.appTrailerLockup(_:)
    || v27 == enum case for Shelf.ContentType.framedVideo(_:)
    || v27 == enum case for Shelf.ContentType.screenshotsLockup(_:)
    || v27 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
    || v27 == enum case for Shelf.ContentType.smallBreakout(_:))
  {
    goto LABEL_15;
  }
  if (v27 == enum case for Shelf.ContentType.editorialStoryCard(_:))
    goto LABEL_6;
  if (v27 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
    || v27 == enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
    || v27 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
    || v27 == enum case for Shelf.ContentType.posterLockup(_:)
    || v27 == enum case for Shelf.ContentType.smallContactCard(_:))
  {
    goto LABEL_15;
  }
  if (v27 == enum case for Shelf.ContentType.informationRibbon(_:))
    goto LABEL_6;
  if (v27 == enum case for Shelf.ContentType.appPromotion(_:))
  {
LABEL_15:
    v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v29 = v32(v17, v9);
    if ((v26 & 1) != 0)
      goto LABEL_16;
  }
  else
  {
    v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v32(v14, v9);
    v29 = v32(v17, v9);
  }
  v37 = IndexPath.section.getter(v29);
  v38 = sub_10034D470(v37, a3, v49, v50);
  v39 = IndexPath.section.getter(v38);
  v40 = (uint64_t)v51;
  v41 = dispatch thunk of ShelfPresenter.contentType(for:)(v39, v22, v23);
  v42 = IndexPath.section.getter(v41);
  v43 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v42, v22, v23);
  v44 = sub_10034CAC8(v40, v43, v52);
  result = v32((char *)v40, v9);
  if (__OFSUB__(v38, 1))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (!v44)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v38 == 0x8000000000000001 && v44 == -1)
    goto LABEL_58;
  v45 = (v38 - 1) % v44;
  v46 = v45 + 1;
  if (__OFADD__(v45, 1))
    goto LABEL_56;
  result = IndexPath.item.getter(result);
  if (__OFSUB__(v38, v46))
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    return result;
  }
  return result >= v38 - v46;
}

uint64_t sub_10034C06C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v26 = a2;
  v8 = type metadata accessor for Shelf.ContentType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = IndexPath.section.getter(v12);
  v14 = a3(0);
  v15 = sub_10000E99C(a4, a3, a5);
  v16 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v13, v14, v15);
  v17 = IndexPath.section.getter(v16);
  v18 = dispatch thunk of ShelfPresenter.contentType(for:)(v17, v14, v15);
  v19 = IndexPath.section.getter(v18);
  v20 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v19, v14, v15);
  v21 = sub_10034CAC8((uint64_t)v11, v20, v26);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!v21)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v16 == 0x8000000000000001 && v21 == -1)
    goto LABEL_12;
  v23 = (v16 - 1) % v21;
  v24 = v23 + 1;
  if (!__OFADD__(v23, 1))
  {
    result = IndexPath.item.getter(result);
    if (!__OFSUB__(v16, v24))
      return result >= v16 - v24;
    goto LABEL_11;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10034C1F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];
  uint64_t v11;
  _BYTE v12[40];

  v0 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = 1;
  AnyHashable.init<A>(_:)(&v11, &type metadata for Int, &protocol witness table for Int);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  v8 = type metadata accessor for Review(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  HIWORD(v10[1]) = -4864;
  strcpy((char *)v10, "Date - Author");
  result = Review.init(id:title:date:dateText:badge:contents:rating:reviewerName:dateAuthorText:response:moreAction:flowPreviewActionsConfiguration:impressionMetrics:voteActions:)(v12, 0x656C746954, 0xE500000000000000, v5, 1702125892, 0xE400000000000000, 0, 0, 0xD00000000000032ELL, 0x80000001006450C0, 5, 0x726F68747541, 0xE600000000000000, v10[0], v10[1], 0, 0, 0, v2,
             _swiftEmptyArrayStorage);
  qword_100808910 = result;
  return result;
}

void sub_10034C3B8(void *a1, uint64_t a2)
{
  sub_10034C3CC(a1, a2);
}

void sub_10034C3CC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t ObjectType;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[40];
  uint64_t v51;

  v3 = v2;
  v44 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v41 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v7);
  v49 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for IndexPath(0);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v40 = (char *)v38 - v13;
  v45 = a1;
  v14 = objc_msgSend(a1, "visibleCells", v12);
  v15 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v37 = v16;
    else
      v37 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v17 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v16);
    if (v17)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease(v16);
    return;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_24;
LABEL_3:
  if (v17 >= 1)
  {
    v38[1] = v3;
    v39 = v16;
    v18 = 0;
    v47 = v16 & 0xC000000000000001;
    while (1)
    {
      if (v47)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
      else
        v19 = *(id *)(v16 + 8 * v18 + 32);
      v20 = v19;
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView))
        v22 = v20;
      else
        v22 = 0;
      if (v22)
      {
        v23 = objc_msgSend(v45, "indexPathForCell:", v20);
        if (!v23)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v49, 1, 1, v48);
LABEL_18:

          sub_100011088(v49, &qword_1007F5520);
          goto LABEL_6;
        }
        v24 = v23;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v23);

        v25 = v46;
        v26 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 32);
        v28 = v48;
        v27 = v49;
        v26(v49, v10, v48);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v28);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v28) == 1)
          goto LABEL_18;
        v29 = v40;
        v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v40, v49, v48);
        v51 = IndexPath.section.getter(v30);
        AnyHashable.init<A>(_:)(&v51, &type metadata for Int, &protocol witness table for Int);
        v31 = v17;
        v32 = v10;
        v33 = v41;
        StatePath.init(component:)(v50, &type metadata for AnyHashable);
        v34 = v46;
        TransientStateStore.removeState(at:recursively:)(v33, 0);

        v35 = v33;
        v10 = v32;
        v17 = v31;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
        v36 = v29;
        v16 = v39;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v48);
      }
      else
      {

      }
LABEL_6:
      if (v17 == ++v18)
      {
        swift_bridgeObjectRelease(v16);
        return;
      }
    }
  }
  __break(1u);
}

void sub_10034C764()
{
  uint64_t v0;

  sub_10034C3CC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10034C77C(void *a1, char a2)
{
  id v3;
  char v4;
  uint64_t v5;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

  v5 = 1;
  if ((a2 & 1) == 0)
    v5 = 2;
  if ((v4 & 1) != 0)
    return 0;
  else
    return v5;
}

double sub_10034C7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(Strong + 16);
    swift_retain(v8);
    swift_release(v7);
    v9 = type metadata accessor for ReviewsPagePresenter(0);
    v10 = sub_10000E99C(&qword_1007FD0B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    dispatch thunk of ShelfPresenter.didSelectSeeAll(for:)(a3, v9, v10);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_10034C884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE v25[24];

  v24 = a6;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_10066F870;
  *(_QWORD *)(v15 + 32) = IndexPath.section.getter(v15);
  *(_QWORD *)(v15 + 40) = a1;
  IndexPath.init(arrayLiteral:)(v15);
  swift_beginAccess(a3 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (Strong)
  {
    v18 = Strong;
    v19 = *(_QWORD *)(Strong + 16);
    swift_retain(v19);
    v20 = swift_release(v18);
    v21 = ((uint64_t (*)(_QWORD, __n128))a4)(0, v20);
    v22 = sub_10000E99C(a5, a4, v24);
    dispatch thunk of ShelfPresenter.didSelectNestedItem(at:)(v13, v21, v22);
    v17 = swift_release(v19);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v17);
}

uint64_t sub_10034C9D8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034C9FC(uint64_t a1)
{
  uint64_t v1;

  return sub_10034AD7C(a1, v1);
}

uint64_t sub_10034CA04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034CA14(void *a1)
{
  uint64_t v1;

  return sub_10034C77C(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_10034CA20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10034CA44(uint64_t a1)
{
  uint64_t v1;

  return sub_10034C7D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10034CA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034CA90(uint64_t a1)
{
  return sub_10034D470(a1, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
}

void sub_10034CAAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10034DF14(a1, a2, a3, a4, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
}

uint64_t sub_10034CAC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  uint64_t result;
  int v17;
  int v18;
  id v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  int v29;
  uint64_t v30;

  v30 = a2;
  v5 = type metadata accessor for Shelf.ContentType(0);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v27 - v11;
  v13 = (void (*)(char *, uint64_t, uint64_t, __n128))v6[2];
  v13((char *)&v27 - v11, a1, v5, v10);
  v14 = (uint64_t (*)(char *, uint64_t))v6[11];
  v15 = v14(v12, v5);
  result = 0;
  v17 = enum case for Shelf.ContentType.reviewsContainer(_:);
  v18 = enum case for Shelf.ContentType.smallStoryCard(_:);
  if (v15 != enum case for Shelf.ContentType.reviewsContainer(_:)
    && v15 != enum case for Shelf.ContentType.smallStoryCard(_:)
    && v15 != enum case for Shelf.ContentType.personalizationFeedbackContainer(_:)
    && v15 != enum case for Shelf.ContentType.informationRibbon(_:))
  {
    v29 = enum case for Shelf.ContentType.personalizationFeedbackContainer(_:);
    v28 = (void (*)(char *, uint64_t))v6[1];
    v28(v12, v5);
    swift_getObjectType();
    v22 = objc_msgSend(a3, "traitCollection");
    ((void (*)(char *, uint64_t, uint64_t))v13)(v8, a1, v5);
    v23 = v14(v8, v5);
    if (v23 == enum case for Shelf.ContentType.artwork(_:)
      || v23 == enum case for Shelf.ContentType.ribbonBar(_:)
      || v23 == enum case for Shelf.ContentType.paragraph(_:)
      || v23 == enum case for Shelf.ContentType.footnote(_:)
      || v23 == enum case for Shelf.ContentType.titledParagraph(_:)
      || v23 == v17
      || v23 == enum case for Shelf.ContentType.reviewSummary(_:)
      || v23 == enum case for Shelf.ContentType.editorialLink(_:)
      || v23 == enum case for Shelf.ContentType.quote(_:)
      || v23 == enum case for Shelf.ContentType.framedArtwork(_:)
      || v23 == enum case for Shelf.ContentType.screenshots(_:)
      || v23 == enum case for Shelf.ContentType.appShowcase(_:)
      || v23 == enum case for Shelf.ContentType.inAppPurchaseShowcase(_:)
      || v23 == enum case for Shelf.ContentType.linkableText(_:)
      || v23 == enum case for Shelf.ContentType.framedVideo(_:)
      || v23 == enum case for Shelf.ContentType.productDescription(_:)
      || v23 == enum case for Shelf.ContentType.banner(_:)
      || v23 == enum case for Shelf.ContentType.roundedButton(_:)
      || v23 == enum case for Shelf.ContentType.titledButtonStack(_:)
      || v23 == v18
      || v23 == v29
      || v23 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
      || v23 == enum case for Shelf.ContentType.upsellBreakout(_:)
      || v23 == enum case for Shelf.ContentType.smallBreakout(_:)
      || v23 == enum case for Shelf.ContentType.arcadeFooter(_:)
      || v23 == enum case for Shelf.ContentType.editorialQuote(_:)
      || v23 == enum case for Shelf.ContentType.gameCenterReengagement(_:)
      || v23 == enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
      || v23 == enum case for Shelf.ContentType.preorderDisclaimer(_:)
      || v23 == enum case for Shelf.ContentType.privacyHeader(_:)
      || v23 == enum case for Shelf.ContentType.privacyFooter(_:)
      || v23 == enum case for Shelf.ContentType.privacyCategory(_:)
      || v23 == enum case for Shelf.ContentType.privacyDefinition(_:)
      || v23 == enum case for Shelf.ContentType.heroCarousel(_:)
      || v23 == enum case for Shelf.ContentType.unifiedMessage(_:)
      || (v24 = ((uint64_t (*)(char *, uint64_t))v28)(v8, v5),
          v25 = UITraitCollection.isSizeClassRegular.getter(v24),
          (v25 & 1) == 0))
    {

    }
    else
    {
      v26 = UITraitCollection.prefersAccessibilityLayouts.getter(v25);

      if ((v26 & 1) == 0)
        return sub_100151C1C(v30, a3, a1);
    }
    return 1;
  }
  return result;
}

void sub_10034CF18(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t);
  int v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  int v32;
  _QWORD v33[2];

  v10 = type metadata accessor for Shelf.ContentType(0);
  v11 = *(_QWORD **)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)v33 - v16;
  objc_msgSend(a5, "bounds", v15);
  CGSize.subtracting(insets:)(objc_msgSend(a5, "safeAreaInsets"));
  if ((a2 & 1) == 0)
  {
    v18 = sub_1002C5474();
    if (v18)
    {
      v20 = v18;
      v21 = v19;
      v33[1] = swift_getObjectType();
      objc_msgSend(a4, "pageMarginInsets");
      (*(void (**)(_QWORD, void *, uint64_t, uint64_t, double))(v21 + 32))(0, a4, v20, v21, v22);
      v23 = objc_msgSend(a4, "traitCollection");
      v24 = (void (*)(char *, uint64_t, uint64_t))v11[2];
      v24(v17, a1, v10);
      v25 = (uint64_t (*)(char *, uint64_t))v11[11];
      v26 = v25(v17, v10);
      if (v26 == enum case for Shelf.ContentType.artwork(_:)
        || v26 == enum case for Shelf.ContentType.ribbonBar(_:)
        || v26 == enum case for Shelf.ContentType.paragraph(_:)
        || v26 == enum case for Shelf.ContentType.footnote(_:)
        || v26 == enum case for Shelf.ContentType.titledParagraph(_:)
        || v26 == enum case for Shelf.ContentType.reviewsContainer(_:)
        || v26 == enum case for Shelf.ContentType.reviewSummary(_:)
        || v26 == enum case for Shelf.ContentType.editorialLink(_:)
        || v26 == enum case for Shelf.ContentType.quote(_:)
        || v26 == enum case for Shelf.ContentType.framedArtwork(_:)
        || v26 == enum case for Shelf.ContentType.screenshots(_:)
        || v26 == enum case for Shelf.ContentType.appShowcase(_:)
        || v26 == enum case for Shelf.ContentType.inAppPurchaseShowcase(_:)
        || v26 == enum case for Shelf.ContentType.linkableText(_:)
        || v26 == enum case for Shelf.ContentType.framedVideo(_:)
        || v26 == enum case for Shelf.ContentType.productDescription(_:)
        || v26 == enum case for Shelf.ContentType.banner(_:)
        || v26 == enum case for Shelf.ContentType.roundedButton(_:)
        || v26 == enum case for Shelf.ContentType.titledButtonStack(_:)
        || v26 == enum case for Shelf.ContentType.smallStoryCard(_:)
        || v26 == enum case for Shelf.ContentType.personalizationFeedbackContainer(_:)
        || v26 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
        || v26 == enum case for Shelf.ContentType.upsellBreakout(_:)
        || v26 == enum case for Shelf.ContentType.smallBreakout(_:)
        || v26 == enum case for Shelf.ContentType.arcadeFooter(_:)
        || v26 == enum case for Shelf.ContentType.editorialQuote(_:)
        || v26 == enum case for Shelf.ContentType.gameCenterReengagement(_:)
        || v26 == enum case for Shelf.ContentType.gameCenterPlayerGameAchievementSummary(_:)
        || v26 == enum case for Shelf.ContentType.preorderDisclaimer(_:)
        || v26 == enum case for Shelf.ContentType.privacyHeader(_:)
        || v26 == enum case for Shelf.ContentType.privacyFooter(_:)
        || v26 == enum case for Shelf.ContentType.privacyCategory(_:)
        || v26 == enum case for Shelf.ContentType.privacyDefinition(_:)
        || v26 == enum case for Shelf.ContentType.heroCarousel(_:)
        || v26 == enum case for Shelf.ContentType.unifiedMessage(_:)
        || (v27 = (void (*)(char *, uint64_t))v11[1],
            v28 = ((uint64_t (*)(char *, uint64_t))v27)(v17, v10),
            v29 = UITraitCollection.isSizeClassRegular.getter(v28),
            (v29 & 1) == 0))
      {

      }
      else
      {
        v30 = UITraitCollection.prefersAccessibilityLayouts.getter(v29);

        if ((v30 & 1) == 0)
        {
          v31 = sub_10034CAC8(a1, a3, a4);
          v24(v13, a1, v10);
          v32 = v25(v13, v10);
          if (v32 != enum case for Shelf.ContentType.annotation(_:)
            && v32 != enum case for Shelf.ContentType.productCapability(_:)
            && v32 != enum case for Shelf.ContentType.productPageLink(_:)
            && v32 != enum case for Shelf.ContentType.privacyType(_:))
          {
            v27(v13, v10);
            PageTraitEnvironment.pageColumnMargin.getter();
            if (!__OFSUB__(v31, 1))
              return;
            __break(1u);
LABEL_51:
            __break(1u);
            return;
          }
          if (__OFSUB__(v31, 1))
            goto LABEL_51;
        }
      }
    }
  }
}

uint64_t sub_10034D470(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = type metadata accessor for Shelf.ContentType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = ((uint64_t (*)(_QWORD, __n128))a2)(0, v10);
  v14 = sub_10000E99C(a3, a2, a4);
  v15 = dispatch thunk of ShelfPresenter.sectionCount.getter(v13, v14);
  result = 0;
  if (v15 > a1)
  {
    if ((dispatch thunk of ShelfPresenter.isShelfHidden(for:)(a1, v13, v14) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v17 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(a1, v13, v14);
      dispatch thunk of ShelfPresenter.contentType(for:)(a1, v13, v14);
      v18 = sub_1002C5DFC();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if (v18)
        return 1;
      else
        return v17;
    }
  }
  return result;
}

uint64_t sub_10034D59C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __int128 v58[2];
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;

  v55 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v57 = (uint64_t)&v48 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - v12;
  v14 = type metadata accessor for ImpressionMetrics(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v52 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v56 = (char *)&v48 - v18;
  sub_100011020((uint64_t)a1, (uint64_t)v60);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v20 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v58, v60, v19, v20, 6))
  {
    v54 = v10;
    v53 = v5;
    sub_100010F3C(v58, (uint64_t)v63);
    v21 = v64;
    v22 = v65;
    sub_100011064(v63, v64);
    v23 = dispatch thunk of ComponentModelContainer.children.getter(v21, v22);
    if (v23)
    {
      v49 = v23;
      v24 = *(_QWORD *)(v23 + 16);
      if (v24)
      {
        v25 = v49 + 32;
        v51 = v15;
        v50 = a1;
        do
        {
          sub_100011020(v25, (uint64_t)v60);
          v27 = v61;
          v26 = v62;
          sub_100011064(v60, v61);
          dispatch thunk of ViewModel.impressionMetrics.getter(v27, *(_QWORD *)(v26 + 8));
          v28 = v15;
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
          if (v29((uint64_t)v13, 1, v14) == 1)
          {
            sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F7740);
            v15 = v28;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v56, v13, v14);
            v31 = a1[3];
            v30 = a1[4];
            sub_100011064(a1, v31);
            v32 = v31;
            v33 = (uint64_t)v54;
            dispatch thunk of ViewModel.impressionMetrics.getter(v32, *(_QWORD *)(v30 + 8));
            if (v29(v33, 1, v14) == 1)
            {
              sub_100011088(v33, (uint64_t *)&unk_1007F7740);
              v35 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v57, 1, 1, v35);
            }
            else
            {
              v36 = v57;
              ImpressionMetrics.id.getter(v34);
              (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v33, v14);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
            }
            v38 = (uint64_t)v53;
            v15 = v28;
            if (v55)
            {
              sub_10034ECA8(v57, (uint64_t)v53);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v41 = ImpressionMetrics.ID.element.getter();
                v42 = v43;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
              }
              a1 = v50;
              v44 = v52;
              v45 = v56;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.addElement(_:at:)(v44);
              v15 = v51;
              v46 = *(void (**)(char *, uint64_t))(v51 + 8);
              v46(v44, v14);
              sub_100011088(v57, &qword_100813520);
              v46(v45, v14);
            }
            else
            {
              sub_100011088(v57, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v28 + 8))(v56, v14);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v60);
          v25 += 40;
          --v24;
        }
        while (v24);
      }
      swift_bridgeObjectRelease(v49);
    }
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v63);
  }
  else
  {
    v59 = 0;
    memset(v58, 0, sizeof(v58));
    return sub_100011088((uint64_t)v58, &qword_100809100);
  }
}

uint64_t sub_10034DA84(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  __int128 v60[2];
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;

  v57 = a2;
  v3 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v50 - v7;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - v12;
  v14 = type metadata accessor for ImpressionMetrics(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v54 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v58 = (char *)&v50 - v18;
  sub_100011020((uint64_t)a1, (uint64_t)v62);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v20 = sub_10000DF3C(&qword_100808CE0);
  if (swift_dynamicCast(v60, v62, v19, v20, 6))
  {
    v55 = v5;
    v56 = v10;
    sub_100010F3C(v60, (uint64_t)v65);
    v21 = v66;
    v22 = v67;
    sub_100011064(v65, v66);
    v23 = dispatch thunk of ComponentModelContainer.children.getter(v21, v22);
    if (v23)
    {
      v51 = v23;
      v24 = *(_QWORD *)(v23 + 16);
      if (v24)
      {
        v25 = v51 + 32;
        v53 = v15;
        v52 = a1;
        do
        {
          sub_100011020(v25, (uint64_t)v62);
          v27 = v63;
          v26 = v64;
          sub_100011064(v62, v63);
          dispatch thunk of ViewModel.impressionMetrics.getter(v27, *(_QWORD *)(v26 + 8));
          v28 = v15;
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
          if (v29((uint64_t)v13, 1, v14) == 1)
          {
            sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F7740);
            v15 = v28;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v58, v13, v14);
            v31 = a1[3];
            v30 = a1[4];
            sub_100011064(a1, v31);
            v32 = v31;
            v33 = (uint64_t)v56;
            dispatch thunk of ViewModel.impressionMetrics.getter(v32, *(_QWORD *)(v30 + 8));
            if (v29(v33, 1, v14) == 1)
            {
              sub_100011088(v33, (uint64_t *)&unk_1007F7740);
              v35 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v59, 1, 1, v35);
            }
            else
            {
              v36 = v59;
              ImpressionMetrics.id.getter(v34);
              (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v33, v14);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
            }
            v38 = (uint64_t)v55;
            v15 = v28;
            if (v57)
            {
              sub_10034ECA8(v59, (uint64_t)v55);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100011088(v38, &qword_100813520);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v44;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
              }
              a1 = v52;
              v45 = v54;
              v46 = v58;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              v47 = swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v15 = v53;
              v48 = *(void (**)(char *, uint64_t))(v53 + 8);
              v48(v45, v14);
              sub_100011088(v59, &qword_100813520);
              v48(v46, v14);
            }
            else
            {
              sub_100011088(v59, &qword_100813520);
              (*(void (**)(char *, uint64_t))(v28 + 8))(v58, v14);
            }
          }
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
          v25 += 40;
          --v24;
        }
        while (v24);
      }
      swift_bridgeObjectRelease(v51);
    }
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v65);
  }
  else
  {
    v61 = 0;
    memset(v60, 0, sizeof(v60));
    return sub_100011088((uint64_t)v60, &qword_100809100);
  }
}

void sub_10034DF14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(char *, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  char *v136;
  uint64_t v137;
  __n128 v138;
  __n128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  __n128 v162;
  __n128 v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  __int128 v190[2];
  uint64_t v191;
  id v192;
  _QWORD v193[3];
  uint64_t v194;
  uint64_t v195;

  v14 = sub_10000DF3C(&qword_100813520);
  __chkstk_darwin(v14);
  v175 = (uint64_t)&v166 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v178 = (uint64_t)&v166 - v17;
  v18 = type metadata accessor for IndexPath(0);
  v182 = *(_QWORD *)(v18 - 8);
  v183 = v18;
  __chkstk_darwin(v18);
  v179 = (char *)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v20);
  v174 = (char *)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v176 = (char *)&v166 - v23;
  __chkstk_darwin(v24);
  v185 = (char *)&v166 - v25;
  v26 = type metadata accessor for ImpressionMetrics(0);
  v186 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v173 = (char *)&v166 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v177 = (char *)&v166 - v29;
  __chkstk_darwin(v30);
  v180 = (char *)&v166 - v31;
  v187 = type metadata accessor for Shelf.ContentType(0);
  v32 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v181 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v184 = (char *)&v166 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v166 - v37;
  v189 = a2;
  if (IndexPath.count.getter(v39) < 2)
    return;
  v172 = v32;
  v167 = v26;
  v40 = *(_QWORD *)(v188 + 16);
  v41 = a5(0);
  v42 = sub_10000E99C(a6, a5, a7);
  v170 = v40;
  v169 = v41;
  v168 = v42;
  LODWORD(v40) = dispatch thunk of ShelfPresenter.doesModelExist(for:)(v189, v41);
  v43 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr);
  v194 = v43;
  v193[0] = a1;
  v44 = a1;
  v171 = v40;
  tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v193, a3, a4, v40 & 1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v193);
  ObjectType = swift_getObjectType();
  v46 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyVideoViewProviding);
  if (v46)
    v47 = v46;
  else
    v47 = 0;
  if (v46)
    v48 = v44;
  else
    v48 = 0;
  if (v48)
  {
    v49 = type metadata accessor for VideoPlaybackCoordinator(0);
    v50 = a4;
    v51 = *(void **)(a4 + qword_100854088);
    if (!v51)
    {
      v164 = v49;
      v165 = v44;
      v62 = v164;
      goto LABEL_102;
    }
    v52 = swift_getObjectType();
    v53 = v44;
    v54 = v51;
    v55 = (void *)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v52, v47);
    v57 = v56;
    v58 = *(_QWORD *)(v47 + 8);
    v59 = v53;
    dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v55, v57, v48, v58, 1);

    a4 = v50;
  }
  v192 = v44;
  v60 = v44;
  v61 = sub_10000DF3C(&qword_100808CD0);
  if (swift_dynamicCast(v190, &v192, v43, v61, 6))
  {
    sub_100010F3C(v190, (uint64_t)v193);
    v62 = type metadata accessor for VideoPlaybackCoordinator(0);
    v63 = *(void **)(a4 + qword_100854088);
    if (v63)
    {
      sub_100011064(v193, v194);
      v64 = v63;
      dispatch thunk of ManagedVideoViewProviding.unregisterVideos(with:)();

      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v193);
      goto LABEL_15;
    }
LABEL_102:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v62);
    __break(1u);
    return;
  }
  v191 = 0;
  memset(v190, 0, sizeof(v190));
  sub_100011088((uint64_t)v190, &qword_100808CD8);
LABEL_15:
  v65 = swift_getObjectType();
  v66 = swift_conformsToProtocol2(v65, &protocol descriptor for PlayableView);
  if (v66)
    v67 = v66;
  else
    v67 = 0;
  if (v66)
    v68 = v44;
  else
    v68 = 0;
  if (v68)
  {
    v69 = type metadata accessor for PlaybackCoordinator(0);
    v70 = v60;
    BaseObjectGraph.optional<A>(_:)(v193, v69, v69);
    v71 = (void *)v193[0];
    if (v193[0])
    {
      v72 = v70;
      v70 = v71;
      dispatch thunk of PlaybackCoordinator.unregister(playableView:)(v68, v67);

    }
  }
  v73 = swift_getObjectType();
  v74 = swift_conformsToProtocol2(v73, &protocol descriptor for AnyAvatarShowcaseDisplaying);
  if (v74)
    v75 = v74;
  else
    v75 = 0;
  if (v74)
    v76 = v44;
  else
    v76 = 0;
  if (v76)
  {
    v77 = swift_getObjectType();
    v78 = v60;
    dispatch thunk of AnyAvatarShowcaseDisplaying.unapply()(v77, v75);

  }
  v79 = swift_getObjectType();
  v80 = swift_conformsToProtocol2(v79, &protocol descriptor for TeardownProviding);
  if (v80)
    v81 = v80;
  else
    v81 = 0;
  if (v80)
    v82 = v44;
  else
    v82 = 0;
  if (v82)
  {
    v83 = swift_getObjectType();
    v84 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
    v85 = v60;
    v84(v83, v81);

  }
  v86 = v172;
  if ((v171 & 1) != 0)
  {
    v87 = swift_getObjectType();
    v88 = swift_conformsToProtocol2(v87, &protocol descriptor for ComponentContainerView);
    if (v88)
      v89 = v88;
    else
      v89 = 0;
    if (v88)
      v90 = v44;
    else
      v90 = 0;
    if (v90)
    {
      v91 = swift_getObjectType();
      v92 = *(void (**)(uint64_t, uint64_t))(v89 + 40);
      v93 = v60;
      v92(v91, v89);

    }
    v94 = v189;
    v95 = IndexPath.section.getter(v88);
    v96 = v169;
    v97 = v168;
    dispatch thunk of ShelfPresenter.contentType(for:)(v95, v169, v168);
    v98 = sub_1002C5DFC();
    v99 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
    v100 = v38;
    v101 = v187;
    v102 = v99(v100, v187);
    v103 = IndexPath.section.getter(v102);
    if (v98)
    {
      v104 = dispatch thunk of ShelfPresenter.shelf(for:)(v103, v96, v97);
      v105 = (uint64_t)v185;
      Shelf.impressionMetrics.getter(v106);
      v107 = v186;
      v108 = v167;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48))(v105, 1, v167) == 1)
      {
        swift_release(v104);
        sub_100011088(v105, (uint64_t *)&unk_1007F7740);
      }
      else
      {
        v136 = v180;
        (*(void (**)(char *, uint64_t, uint64_t))(v107 + 32))(v180, v105, v108);
        v137 = *(_QWORD *)(v188 + 112);
        if (v137)
        {
          v138 = swift_retain(*(_QWORD *)(v188 + 112));
          ImpressionsCalculator.removeElement(_:)(v136, v138);
          swift_release(v137);
          v139 = swift_release(v104);
          (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v136, v108, v139);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v107 + 8))(v136, v108);
          swift_release(v104);
        }
      }
      return;
    }
    v109 = v101;
    v110 = v96;
    v111 = v184;
    v112 = dispatch thunk of ShelfPresenter.contentType(for:)(v103, v110, v97);
    v113 = IndexPath.section.getter(v112);
    v114 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(v113, v110, v97);
    v115 = v181;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v181, v111, v109);
    v116 = (*(uint64_t (**)(char *, uint64_t))(v86 + 88))(v115, v109);
    v117 = v182;
    v118 = v183;
    v119 = v97;
    v120 = (void (*)(char *, uint64_t))v99;
    if (v116 == enum case for Shelf.ContentType.smallLockup(_:)
      || v116 == enum case for Shelf.ContentType.mediumLockup(_:))
    {
      goto LABEL_78;
    }
    if (v116 == enum case for Shelf.ContentType.largeLockup(_:))
      goto LABEL_87;
    if (v116 == enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
      || v116 == enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
      || v116 == enum case for Shelf.ContentType.action(_:))
    {
      goto LABEL_78;
    }
    if (v116 == enum case for Shelf.ContentType.ribbonBar(_:))
      goto LABEL_87;
    if (v116 == enum case for Shelf.ContentType.editorialCard(_:)
      || v116 == enum case for Shelf.ContentType.videoCard(_:))
    {
      goto LABEL_78;
    }
    if (v116 == enum case for Shelf.ContentType.brick(_:) || v116 == enum case for Shelf.ContentType.categoryBrick(_:))
      goto LABEL_87;
    if (v116 == enum case for Shelf.ContentType.reviews(_:)
      || v116 == enum case for Shelf.ContentType.appTrailerLockup(_:)
      || v116 == enum case for Shelf.ContentType.framedVideo(_:)
      || v116 == enum case for Shelf.ContentType.screenshotsLockup(_:)
      || v116 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
      || v116 == enum case for Shelf.ContentType.smallBreakout(_:))
    {
      goto LABEL_78;
    }
    if (v116 == enum case for Shelf.ContentType.editorialStoryCard(_:))
      goto LABEL_87;
    if (v116 == enum case for Shelf.ContentType.mixedMediaLockup(_:)
      || v116 == enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
      || v116 == enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
      || v116 == enum case for Shelf.ContentType.posterLockup(_:)
      || v116 == enum case for Shelf.ContentType.smallContactCard(_:))
    {
      goto LABEL_78;
    }
    if (v116 == enum case for Shelf.ContentType.informationRibbon(_:))
      goto LABEL_87;
    if (v116 == enum case for Shelf.ContentType.appPromotion(_:))
    {
LABEL_78:
      if ((v114 & 1) != 0)
        goto LABEL_87;
    }
    else
    {
      v99(v115, v187);
    }
    v121 = v169;
    v122 = dispatch thunk of ShelfPresenter.sectionCount.getter(v169, v119);
    v123 = IndexPath.section.getter(v122);
    v124 = v179;
    v125 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 16))(v179, v94, v118);
    if (v123 >= v122)
    {
      (*(void (**)(char *, uint64_t))(v117 + 8))(v124, v118);
    }
    else
    {
      v126 = IndexPath.item.getter(v125);
      v127 = IndexPath.section.getter(v126);
      v128 = dispatch thunk of ShelfPresenter.numberOfRows(for:)(v127, v121, v168);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v124, v118);
      if (v126 < v128)
      {
        dispatch thunk of ShelfPresenter.model(at:)(v193, v94, v121, v168);
        v129 = v194;
        v130 = v195;
        sub_100011064(v193, v194);
        v131 = v129;
        v132 = (uint64_t)v176;
        dispatch thunk of ViewModel.impressionMetrics.getter(v131, *(_QWORD *)(v130 + 8));
        v133 = v186;
        v134 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48);
        v135 = v167;
        if (v134(v132, 1, v167) == 1)
        {
          v120(v111, v187);
          sub_100011088(v132, (uint64_t *)&unk_1007F7740);
        }
        else
        {
          v140 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 32))(v177, v132, v135);
          v141 = IndexPath.section.getter(v140);
          v142 = dispatch thunk of ShelfPresenter.shelf(for:)(v141, v121, v168);
          v143 = (uint64_t)v174;
          Shelf.impressionMetrics.getter(v144);
          if (v134(v143, 1, v135) == 1)
          {
            sub_100011088(v143, (uint64_t *)&unk_1007F7740);
            v146 = type metadata accessor for ImpressionMetrics.ID(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v178, 1, 1, v146);
          }
          else
          {
            v147 = v178;
            ImpressionMetrics.id.getter(v145);
            (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v143, v135);
            v148 = type metadata accessor for ImpressionMetrics.ID(0);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v147, 0, 1, v148);
          }
          v149 = v175;
          v150 = *(_QWORD *)(v188 + 112);
          if (v150)
          {
            sub_10034ECA8(v178, v175);
            v151 = type metadata accessor for ImpressionMetrics.ID(0);
            v152 = *(_QWORD *)(v151 - 8);
            v153 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v149, 1, v151);
            v154 = swift_retain(v150);
            if (v153 == 1)
            {
              sub_100011088(v149, &qword_100813520);
              v155 = 0;
              v156 = 0;
            }
            else
            {
              v155 = ImpressionMetrics.ID.element.getter(v154);
              v156 = v160;
              (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v149, v151);
            }
            v111 = v184;
            v161 = v173;
            v159 = v177;
            ImpressionMetrics.withParentId(_:)(v155, v156);
            v162 = swift_bridgeObjectRelease(v156);
            ImpressionsCalculator.removeElement(_:)(v161, v162);
            v163 = swift_release(v150);
            v158 = v186;
            (*(void (**)(char *, uint64_t, __n128))(v186 + 8))(v161, v135, v163);
            v157 = *(_QWORD *)(v188 + 112);
          }
          else
          {
            v157 = 0;
            v158 = v186;
            v159 = v177;
          }
          swift_retain(v157);
          sub_10034DA84(v193, v157);
          swift_release(v142);
          swift_release(v157);
          sub_100011088(v178, &qword_100813520);
          (*(void (**)(char *, uint64_t))(v158 + 8))(v159, v135);
          v120(v111, v187);
        }
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v193);
        return;
      }
    }
LABEL_87:
    v99(v111, v187);
  }
}

uint64_t sub_10034ECA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_100813520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034ECF4()
{
  return sub_10034EDA0((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_10034256C);
}

uint64_t sub_10034ED04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10034ED94()
{
  return sub_10034EDA0((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_1003427F8);
}

uint64_t sub_10034EDA0(uint64_t (*a1)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10034EDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10034EE68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_10034244C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10034EE9C(uint64_t a1)
{
  return sub_10034EF70(a1, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_1007FD0B8, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
}

uint64_t sub_10034EEB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034EEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10034EF54(uint64_t a1)
{
  return sub_10034EF70(a1, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (unint64_t *)&qword_1007F75C0, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
}

uint64_t sub_10034EF70(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_10034C884(a1, v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)), a2, a3, a4);
}

ValueMetadata *type metadata accessor for ClearAppUsageDataActionImplementation()
{
  return &type metadata for ClearAppUsageDataActionImplementation;
}

unint64_t sub_10034F00C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808D18;
  if (!qword_100808D18)
  {
    v1 = type metadata accessor for ClearAppUsageDataAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100808D18);
  }
  return result;
}

uint64_t sub_10034F054(uint64_t a1, uint64_t a2)
{
  return sub_10034F05C(a2);
}

uint64_t sub_10034F05C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;

  v2 = type metadata accessor for ActionOutcome(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OnDevicePersonalizationDataManager(0, v4);
  v8 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(&v16, v7, a1, v7, v8);
  v9 = v16;
  OnDevicePersonalizationDataManager.clearData()();
  v10 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
  v11 = inject<A, B>(_:from:)(&v16, v10, a1, v10, v8);
  v12 = v16;
  dispatch thunk of AppStoreOnDeviceRecommendationsManager.clearData()(v11);
  sub_10000DF3C(&qword_100803510);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for ActionOutcome.performed(_:), v2);
  v13 = Promise.__allocating_init(value:)(v6);

  return v13;
}

uint64_t type metadata accessor for GenericPageLayoutSectionProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_100808D20;
  if (!qword_100808D20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GenericPageLayoutSectionProvider);
  return result;
}

uint64_t sub_10034F1B4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_100853FB8);
}

id sub_10034F1F0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t (*)(), char *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v23;
  __n128 v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t (*v44)(void);
  uint64_t v45;

  v42 = a8;
  v40 = a6;
  v41 = a7;
  v39 = a5;
  v14 = type metadata accessor for Shelf.ContentType(0);
  v38 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v37 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a3;
  v33 = a2;
  v44 = a2;
  v45 = a3;
  v21 = type metadata accessor for BasePageLayoutSectionProvider(0, v18);
  v22 = (uint64_t (*)(uint64_t, uint64_t (*)(), char *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))method lookup function for BasePageLayoutSectionProvider(v21, &method descriptor for BasePageLayoutSectionProvider.layoutSection(for:with:in:shelfLayoutSpacingProvider:shelfSupplementaryProvider:itemSupplementaryProvider:asPartOf:));
  v34 = a10;
  v35 = a9;
  v36 = a4;
  v23 = (id)v22(a1, sub_100257FBC, v43, a4, v39, v40, v41, v42, a9, a10);
  ShelfLayoutContext.shelf.getter(v24);
  KeyPath = swift_getKeyPath(&unk_100685DF0);
  ReadOnlyLens.subscript.getter(KeyPath, v17);
  v26 = v38;
  v27 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v20, v17, v27);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v16, v14);
  if (v28 == enum case for Shelf.ContentType.ribbonBar(_:))
  {

    v29 = v33();
    v30 = sub_10034F7BC(a1, v29, v36, v39, v40, v41, v42, v35, v34);
    swift_bridgeObjectRelease(v29);

    return (id)v30;
  }
  else if (v28 == enum case for Shelf.ContentType.smallContactCard(_:))
  {
    objc_msgSend(v23, "setOrthogonalScrollingBehavior:", 2);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v14);
  }
  return v23;
}

id sub_10034F43C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t ObjectType;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  Class v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v44 = a5;
  v43 = a3;
  v40 = a2;
  v13 = type metadata accessor for PageGrid(0);
  v41 = *(_QWORD *)(v13 - 8);
  v42 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", a1);
  ObjectType = swift_getObjectType();
  v18 = dispatch thunk of ShelfSupplementaryProvider.supplementaryItems(for:shelfLayoutSpacingProvider:asPartOf:)(a4, a6, a9, ObjectType, a8);
  sub_100019574(0, &qword_1007F49A0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = dispatch thunk of ShelfSupplementaryProvider.decorationItems(for:shelfLayoutSpacingProvider:asPartOf:)(a4, a6, a9, ObjectType, a8);
  sub_100019574(0, &qword_100808D78, NSCollectionLayoutDecorationItem_ptr);
  v21 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setDecorationItems:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v23 = ShelfLayoutContext.contentPageGrid.getter(v22);
  PageGrid.horizontalDirectionalMargins.getter(v23);
  v25 = v24;
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
  v28 = a6[3];
  v29 = a6[4];
  sub_100011064(a6, v28);
  v30 = ShelfLayoutSpacingProvider.topPaddingValue(in:)(a4, v28, v29);
  v31 = a6[3];
  v32 = a6[4];
  sub_100011064(a6, v31);
  v33 = objc_msgSend(v16, "setContentInsets:", v30, v25, ShelfLayoutSpacingProvider.bottomPaddingValue(in:)(a4, v31, v32), v27);
  if ((v43 & 1) == 0)
    v33 = objc_msgSend(v16, "setOrthogonalScrollingBehavior:", v40);
  v34 = BasePageLayoutSectionProvider.visibleItemsObserverProviders.getter(v33);
  v35 = (void *)Array<A>.visibleItemsTransformer(for:observing:asPartOf:)(a4, v44, a9, v34);
  v37 = v36;
  v38 = swift_bridgeObjectRelease(v34).n128_u64[0];
  if (v35)
  {
    aBlock[4] = v35;
    v46 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100378E60;
    aBlock[3] = &unk_100739918;
    v35 = _Block_copy(aBlock);
    v38 = swift_release(v46).n128_u64[0];
  }
  objc_msgSend(v16, "setVisibleItemsInvalidationHandler:", v35, *(double *)&v38, v40);
  _Block_release(v35);
  return v16;
}

uint64_t sub_10034F738(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _BYTE v11[40];

  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_100011020((uint64_t)a1, (uint64_t)v11);
  v9 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v11, a2, a3, a4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  return v9;
}

uint64_t sub_10034F7BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, __n128);
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t (*v38)(uint64_t, unint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_class *v42;
  char *v43;
  double *v44;
  id v45;
  objc_class *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  __n128 v54;
  objc_class *v55;
  double *v56;
  double v57;
  double v58;
  void *v59;
  uint64_t result;
  void *v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  double v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  Class v73;
  id v74;
  id v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  objc_class *v86;
  objc_class *v87;
  void *v88;
  double v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  unint64_t v95;
  Class isa;
  id v97;
  void *v98;
  double v99;
  uint64_t v100;
  objc_class *v101;
  void *v102;
  double v103;
  id v104;
  double *v105;
  objc_class *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t ObjectType;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  __int128 v120;
  objc_super v121;
  uint64_t v122;
  unint64_t v123;

  v107 = a8;
  v119 = a7;
  v111 = a5;
  v112 = a6;
  v110 = a4;
  v109 = a3;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v11);
  v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ItemLayoutContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for PageGrid(0);
  v18 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v117 = (uint64_t)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = (unint64_t)_swiftEmptyArrayStorage;
  v21 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)&v120 = v15;
  v113 = a2;
  v114 = a1;
  v108 = v21;
  if (v21)
  {
    ObjectType = v18;
    v116 = v13;
    v22 = type metadata accessor for RibbonBarItem(0);
    v23 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v24 = *(_QWORD *)(v15 + 72);
    v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
    v26 = swift_bridgeObjectRetain(a2);
    v27 = v21;
    do
    {
      v25(v17, v23, v14, v26);
      v29 = sub_1003502EC();
      ItemLayoutContext.typedModel<A>(as:)(&v122, v22, v22, v29);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v31 = v122;
      if (v122)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v33 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v32 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v33 >= v32 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
        v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
        specialized Array._endMutation()(v28);
        v15 = v120;
      }
      v23 += v24;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease(v113);
    v34 = (_QWORD *)v123;
    a1 = v114;
    v18 = ObjectType;
    v13 = v116;
  }
  else
  {
    v34 = _swiftEmptyArrayStorage;
  }
  v35 = v117;
  v36 = ShelfLayoutContext.contentPageGrid.getter(v19);
  v37 = PageGrid.containerWidth.getter(v36);
  v38 = *(uint64_t (**)(uint64_t, unint64_t))(v18 + 8);
  v39 = v118;
  v40 = v38(v35, v118);
  v41 = ShelfLayoutContext.traitCollection.getter(v40);
  v42 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v43 = (char *)objc_allocWithZone(v42);
  v44 = (double *)&v43[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v44 = v37;
  v44[1] = 1.79769313e308;
  *(_QWORD *)&v43[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v41;
  v121.receiver = v43;
  v121.super_class = v42;
  v45 = objc_msgSendSuper2(&v121, "init");
  v46 = (objc_class *)objc_msgSend(v45, "traitCollection");

  ShelfLayoutContext.contentPageGrid.getter(v47);
  v48 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v49 = v38(v35, v39);
  v50 = ShelfLayoutContext.contentPageGrid.getter(v49);
  v51 = PageGrid.horizontalMargins.getter(v50);
  v53 = v52;
  v54 = ((__n128 (*)(uint64_t, unint64_t, double))v38)(v35, v39, v51);
  v55 = v46;
  v54.n128_f64[0] = v48;
  v56 = sub_1001857DC((uint64_t)v34, v46, v54, v53);
  swift_bridgeObjectRelease(v34);
  if ((Array.isNotEmpty.getter(v56, &type metadata for CGFloat) & 1) == 0)
  {
    swift_bridgeObjectRelease(v56);
    sub_100019574(0, (unint64_t *)&qword_100813540, NSCollectionLayoutSection_ptr);
    v79 = type metadata accessor for ShelfLayoutContext(0);
    v80 = *(_QWORD *)(v79 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v13, a1, v79);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v13, 0, 1, v79);
    v81 = (id)static NSCollectionLayoutSection.emptyLayoutSection(for:)(v13);

    sub_1000E391C((uint64_t)v13);
    return (uint64_t)v81;
  }
  v117 = a9;
  sub_100185310(v46, 0, 0, 0, 0, 1, JUMeasuringSizeExpanded[0], JUMeasuringSizeExpanded[1]);
  v58 = v57;
  v123 = (unint64_t)_swiftEmptyArrayStorage;
  v118 = *((_QWORD *)v56 + 2);
  v106 = v46;
  v105 = v56;
  if (!v118)
  {
    v65 = 0.0;
LABEL_21:
    swift_bridgeObjectRelease(v105);
    v82 = (double)(uint64_t)(v118 - 1);
    type metadata accessor for RibbonBarItemCellLayout(0);
    v83 = static RibbonBarItemCellLayout.interItemSpacing.getter();
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v84 = sub_10000DF3C(&qword_1007F5840);
    v85 = swift_allocObject(v84, 40, 7);
    v120 = xmmword_10066FE60;
    *(_OWORD *)(v85 + 16) = xmmword_10066FE60;
    v86 = v106;
    *(_QWORD *)(v85 + 32) = v106;
    v87 = v86;
    v88 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v85);
    v89 = Double.rawValue(in:)(v83);

    v90 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v91 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v92 = objc_msgSend(v91, "absoluteDimension:", v65 + v89 * v82);
    v93 = objc_msgSend(v91, "absoluteDimension:", v58);
    v94 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v92, v93);

    v95 = v123;
    sub_100019574(0, (unint64_t *)&qword_100800DA0, NSCollectionLayoutItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v97 = objc_msgSend(v90, "horizontalGroupWithLayoutSize:subitems:", v94, isa, swift_bridgeObjectRelease(v95).n128_f64[0]);

    v98 = (void *)objc_opt_self(NSCollectionLayoutSpacing);
    v99 = static RibbonBarItemCellLayout.interItemSpacing.getter();
    v100 = swift_allocObject(v84, 40, 7);
    *(_OWORD *)(v100 + 16) = v120;
    *(_QWORD *)(v100 + 32) = v87;
    v101 = v87;
    v102 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v100);
    v103 = Double.rawValue(in:)(v99);

    v104 = objc_msgSend(v98, "fixedSpacing:", v103);
    objc_msgSend(v97, "setInterItemSpacing:", v104);

    v81 = sub_10034F43C((uint64_t)v97, 1, 0, v114, v109, v110, v111, v112, v117);
    return (uint64_t)v81;
  }
  v59 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v116 = (char *)objc_opt_self(NSCollectionLayoutSize);
  ObjectType = swift_getObjectType();
  result = objc_opt_self(NSCollectionLayoutItem);
  if (v108)
  {
    if (v118 <= v108)
    {
      v61 = (void *)result;
      v62 = 0;
      v63 = v56 + 4;
      v64 = v113 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v65 = 0.0;
      v66 = v107;
      do
      {
        v67 = v63[v62];
        v68 = objc_msgSend(v59, "absoluteDimension:", v67, v105);
        v69 = objc_msgSend(v59, "absoluteDimension:", v58);
        v70 = objc_msgSend(v116, "sizeWithWidthDimension:heightDimension:", v68, v69);

        v71 = dispatch thunk of ItemSupplementaryProvider.supplementaryItems(for:asPartOf:)(v64 + *(_QWORD *)(v120 + 72) * v62, v117, ObjectType, v66);
        sub_100019574(0, &qword_1007F49D0, NSCollectionLayoutSupplementaryItem_ptr);
        v72 = v70;
        v73 = Array._bridgeToObjectiveC()().super.isa;
        v74 = objc_msgSend(v61, "itemWithLayoutSize:supplementaryItems:", v72, v73, swift_bridgeObjectRelease(v71).n128_f64[0]);

        v75 = v74;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
        v77 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v76 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v77 >= v76 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
        ++v62;
        v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
        specialized Array._endMutation()(v78);

        v65 = v65 + v67;
      }
      while (v118 != v62);
      goto LABEL_21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10035005C()
{
  return type metadata accessor for GenericPageLayoutSectionProvider(0);
}

id sub_100350064(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t (*)(), char *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  __n128 v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t (*v50)();
  char *v51;
  char v52;
  uint64_t (*v53)(void);
  uint64_t v54;

  v47 = a5;
  v48 = a6;
  v46 = a3;
  v42 = a2;
  v43 = a9;
  v15 = type metadata accessor for Shelf.ContentType(0);
  v45 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v44 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a10;
  v53 = a10;
  v54 = a11;
  v37 = a11;
  v50 = sub_100030368;
  v51 = &v52;
  v22 = type metadata accessor for BasePageLayoutSectionProvider(0, v19);
  v23 = (uint64_t (*)(uint64_t, uint64_t (*)(), char *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))method lookup function for BasePageLayoutSectionProvider(v22, &method descriptor for BasePageLayoutSectionProvider.layoutSection(for:with:in:shelfLayoutSpacingProvider:shelfSupplementaryProvider:itemSupplementaryProvider:asPartOf:));
  v39 = a8;
  v34 = a8;
  v24 = v42;
  v41 = a7;
  v40 = a4;
  v25 = (id)v23(a1, sub_1000283D0, v49, v42, v46, a4, v47, v48, a7, v34);
  v38 = a1;
  ShelfLayoutContext.shelf.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100685DF0);
  ReadOnlyLens.subscript.getter(KeyPath, v18);
  v28 = v45;
  v29 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v21, v18, v29);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v17, v15);
  if (v30 == enum case for Shelf.ContentType.ribbonBar(_:))
  {

    v31 = v36();
    v32 = sub_10034F7BC(v38, v31, v24, v46, v40, v47, v48, v41, v39);
    swift_bridgeObjectRelease(v31);

    return (id)v32;
  }
  else if (v30 == enum case for Shelf.ContentType.smallContactCard(_:))
  {
    objc_msgSend(v25, "setOrthogonalScrollingBehavior:", 2);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v15);
  }
  return v25;
}

unint64_t sub_1003502EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808D70;
  if (!qword_100808D70)
  {
    v1 = type metadata accessor for RibbonBarItem(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for RibbonBarItem, v1);
    atomic_store(result, (unint64_t *)&qword_100808D70);
  }
  return result;
}

id sub_100350334(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t (*)(), char *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  __n128 v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t (*v50)();
  char *v51;
  char v52;
  uint64_t (*v53)(void);
  uint64_t v54;

  v47 = a5;
  v48 = a6;
  v46 = a3;
  v42 = a2;
  v43 = a9;
  v15 = type metadata accessor for Shelf.ContentType(0);
  v45 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v44 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a10;
  v53 = a10;
  v54 = a11;
  v37 = a11;
  v50 = sub_100030368;
  v51 = &v52;
  v22 = type metadata accessor for BasePageLayoutSectionProvider(0, v19);
  v23 = (uint64_t (*)(uint64_t, uint64_t (*)(), char *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))method lookup function for BasePageLayoutSectionProvider(v22, &method descriptor for BasePageLayoutSectionProvider.layoutSection(for:with:in:shelfLayoutSpacingProvider:shelfSupplementaryProvider:itemSupplementaryProvider:asPartOf:));
  v39 = a8;
  v34 = a8;
  v24 = v42;
  v41 = a7;
  v40 = a4;
  v25 = (id)v23(a1, sub_100257FBC, v49, v42, v46, a4, v47, v48, a7, v34);
  v38 = a1;
  ShelfLayoutContext.shelf.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100685DF0);
  ReadOnlyLens.subscript.getter(KeyPath, v18);
  v28 = v45;
  v29 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v21, v18, v29);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v17, v15);
  if (v30 == enum case for Shelf.ContentType.ribbonBar(_:))
  {

    v31 = v36();
    v32 = sub_10034F7BC(v38, v31, v24, v46, v40, v47, v48, v41, v39);
    swift_bridgeObjectRelease(v31);

    return (id)v32;
  }
  else if (v30 == enum case for Shelf.ContentType.smallContactCard(_:))
  {
    objc_msgSend(v25, "setOrthogonalScrollingBehavior:", 2);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v15);
  }
  return v25;
}

uint64_t sub_1003505B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003505C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003505D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  __n128 v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];

  v58 = a1;
  v57 = type metadata accessor for ComponentSeparator.Position(0);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v56 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  __chkstk_darwin(v2);
  v50 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1007F55F0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007FAAC0);
  v47 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MediumLockupLayout.Metrics(0, v8);
  v53 = *(_QWORD *)(v11 - 8);
  v54 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100685E48);
  ItemLayoutContext.subscript.getter(v17);
  swift_release(KeyPath);
  v19 = swift_getKeyPath(&unk_100685E78);
  ReadOnlyLens.subscript.getter(v19, v14);
  v20 = swift_release(v19);
  v21 = (*(uint64_t (**)(_QWORD *, uint64_t, __n128))(v15 + 8))(v17, v14, v20);
  v22 = v61[0];
  if (v61[0] && (v23 = ShelfHeader.hasTrailingArtwork.getter(v21), swift_release(v22), (v23 & 1) != 0))
  {
    v24 = type metadata accessor for ComponentSeparator(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v58, 1, 1, v24);
  }
  else
  {
    v26 = swift_getKeyPath(&unk_100685EA8);
    ItemLayoutContext.subscript.getter(v61);
    v27 = swift_release(v26);
    v28 = (void *)v61[0];
    sub_1001FB110((uint64_t)v13, v27);

    v29 = swift_getKeyPath(&unk_100685EA8);
    ItemLayoutContext.subscript.getter(v61);
    swift_release(v29);
    v30 = (void *)v61[0];
    LOBYTE(v29) = UITraitCollection.prefersAccessibilityLayouts.getter(v31);

    v32 = 0.0;
    if ((v29 & 1) == 0)
    {
      MediumLockupLayout.Metrics.artworkSize.getter();
      v33 = swift_getKeyPath(&unk_100685ED8);
      ItemLayoutContext.subscript.getter(&v60);
      swift_release(v33);
      v34 = v60;
      v59 = v60;
      Conditional.evaluate(with:)(&v59, v7);
      v35 = swift_unknownObjectRelease(v34);
      v36 = (*(uint64_t (**)(char *, uint64_t, __n128))(v47 + 8))(v10, v7, v35);
      v37 = *(double *)v61;
      MediumLockupLayout.Metrics.artworkMargin.getter(v36);
      v38 = swift_getKeyPath(&unk_100685ED8);
      ItemLayoutContext.subscript.getter(&v60);
      swift_release(v38);
      v39 = v60;
      v40 = v50;
      static Dimensions.defaultRoundingRule.getter(v41);
      v42 = Conditional<>.value(in:rounded:)(v39, v40);
      v43 = swift_unknownObjectRelease(v39);
      (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v40, v52, v43);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v49);
      v32 = v37 + v42;
    }
    v44 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v56, enum case for ComponentSeparator.Position.bottom(_:), v57);
    v45 = v58;
    ComponentSeparator.init(position:leadingInset:trailingInset:)(v44, v32, 0.0);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v54);
    v46 = type metadata accessor for ComponentSeparator(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
  }
}

uint64_t sub_100350A0C()
{
  uint64_t v0;
  uint64_t inited;
  NSString *v2;
  NSString *v3;
  NSString *v4;
  NSString *v5;
  NSString *v6;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = sub_10000DF3C((uint64_t *)&unk_100811BA0);
  inited = swift_initStackObject(v0, &v12);
  *(_OWORD *)(inited + 16) = xmmword_100671120;
  *(_QWORD *)(inited + 32) = UIActivityTypeAirDrop;
  *(_QWORD *)(inited + 40) = UIActivityTypeCopyToPasteboard;
  *(_QWORD *)(inited + 48) = UIActivityTypeMessage;
  *(_QWORD *)(inited + 56) = UIActivityTypePostToFacebook;
  *(_QWORD *)(inited + 64) = UIActivityTypePostToTwitter;
  *(_QWORD *)(inited + 72) = UIActivityTypePostToWeibo;
  v2 = UIActivityTypeAirDrop;
  v3 = UIActivityTypeCopyToPasteboard;
  v4 = UIActivityTypeMessage;
  v5 = UIActivityTypePostToFacebook;
  v6 = UIActivityTypePostToTwitter;
  v7 = UIActivityTypePostToWeibo;
  sub_100172D78(inited);
  v9 = v8;
  swift_setDeallocating(inited);
  type metadata accessor for ActivityType(0);
  result = swift_arrayDestroy(inited + 32, 6, v10);
  qword_100808D80 = v9;
  return result;
}

id sub_100350CE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextActivityItemProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TextActivityItemProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension24TextActivityItemProvider);
}

uint64_t ArcadeSubscribePageLayout.init(metrics:headerView:contentView:detailsView:offerButton:dismissButton:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, void *a7@<X8>)
{
  memcpy(a7, __src, 0x108uLL);
  sub_100350DFC(a2, (uint64_t)a7 + 264);
  sub_100350DFC(a3, (uint64_t)a7 + 304);
  sub_100010F3C(a4, (uint64_t)a7 + 344);
  sub_100010F3C(a5, (uint64_t)a7 + 384);
  return sub_100010F3C(a6, (uint64_t)a7 + 424);
}

uint64_t sub_100350DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007FAF60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AppPromotionFormattedDateLayout.Metrics.textBottomSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppPromotionFormattedDateLayout.Metrics.textBottomSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ArcadeSubscribePageLayout.Metrics.detailsMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void ArcadeSubscribePageLayout.Metrics.detailsMargins.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[10] = a1;
  v4[11] = a2;
  v4[12] = a3;
  v4[13] = a4;
}

uint64_t (*AppPromotionFormattedDateLayout.Metrics.liveIndicatorTrailingMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ArcadeSubscribePageLayout.Metrics.offerButtonMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void ArcadeSubscribePageLayout.Metrics.offerButtonMargins.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[19] = a1;
  v4[20] = a2;
  v4[21] = a3;
  v4[22] = a4;
}

uint64_t ArcadeSubscribePageLayout.Metrics.buttonsSpacing.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 184);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*ArcadeSubscribePageLayout.Metrics.buttonsSpacing.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ArcadeSubscribePageLayout.Metrics.bottomSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 224);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*ArcadeSubscribePageLayout.Metrics.bottomSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

_OWORD *ArcadeSubscribePageLayout.metrics.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;

  return sub_100350F50(v1, a1);
}

_OWORD *sub_100350F50(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ArcadeSubscribePageLayout.Metrics(a2, a1);
  return a2;
}

uint64_t ArcadeSubscribePageLayout.headerView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000B9BD4(v1 + 264, a1);
}

uint64_t ArcadeSubscribePageLayout.contentView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000B9BD4(v1 + 304, a1);
}

uint64_t ArcadeSubscribePageLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 384, a1);
}

uint64_t ArcadeSubscribePageLayout.dismissButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1 + 424, a1);
}

double ArcadeSubscribePageLayout.contentViewSize(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  swift_getObjectType();
  return sub_100351B00(a1, v3, a2, a3);
}

_QWORD *ArcadeSubscribePageLayout.placeChildren(relativeTo:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat MinY;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  CGFloat v36;
  CGFloat MinX;
  CGFloat Width;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double MaxY;
  char *v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double Height;
  double v64;
  double v65;
  double v66;
  uint64_t v68;
  uint64_t v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  char *v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  CGFloat v77;
  CGFloat v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[56];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v7 = v6;
  *(_QWORD *)&v74 = a2;
  v13 = type metadata accessor for LayoutRect(0);
  *(_QWORD *)&v75 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v73 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FloatingPointRoundingRule(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B9BD4(v7 + 264, (uint64_t)&v85);
  v19 = v87;
  v76 = v13;
  if (v87)
  {
    sub_100010F3C(&v85, (uint64_t)&v79);
    v20 = v80;
    v21 = v81;
    sub_100011064(&v79, v80);
    v22 = Measurable.measuredSize(fitting:in:)(a1, v20, *(_QWORD *)(v21 + 8), a5, a6);
    v24 = v23;
    v93.origin.x = a3;
    v93.origin.y = a4;
    v93.size.width = a5;
    v93.size.height = a6;
    v25 = CGRectGetMidX(v93) + v22 * -0.5;
    v94.origin.x = a3;
    v94.origin.y = a4;
    v94.size.width = a5;
    v94.size.height = a6;
    MinY = CGRectGetMinY(v94);
    v28 = v80;
    v27 = v81;
    sub_100011064(&v79, v80);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v28, v27);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v79);
  }
  else
  {
    sub_1001246D4((uint64_t)&v85);
    v25 = 0.0;
    MinY = 0.0;
    v22 = 0.0;
    v24 = 0.0;
  }
  sub_1000B9BD4(v7 + 304, (uint64_t)&v85);
  v29 = v87;
  v77 = a3;
  v78 = a4;
  if (v87)
  {
    v71 = v25;
    v72 = v24;
    v69 = v87;
    sub_100010F3C(&v85, (uint64_t)&v79);
    swift_getObjectType();
    sub_100351B00(a1, v7, a5, a6);
    v31 = v30;
    v32 = *(_QWORD *)(v7 + 24);
    v33 = *(_QWORD *)(v7 + 32);
    sub_100011064((_QWORD *)v7, v32);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v32);
    v34 = AnyDimension.value(in:rounded:)(a1, v18, v32, v33);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (v19)
    {
      v95.origin.x = v71;
      v95.size.height = v72;
      v95.origin.y = MinY;
      v95.size.width = v22;
      v34 = v34 + CGRectGetMaxY(v95);
    }
    v35 = v75;
    v96.origin.x = a3;
    v96.origin.y = a4;
    v96.size.width = a5;
    v96.size.height = a6;
    v36 = a4;
    MinX = CGRectGetMinX(v96);
    v97.origin.x = a3;
    v97.origin.y = v36;
    v97.size.width = a5;
    v97.size.height = a6;
    Width = CGRectGetWidth(v97);
    v39 = v80;
    v40 = v81;
    sub_100011064(&v79, v80);
    v70 = MinX;
    v71 = v34;
    v72 = v31;
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v39, v40);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v79);
    v29 = v69;
  }
  else
  {
    sub_1001246D4((uint64_t)&v85);
    v70 = 0.0;
    v71 = 0.0;
    Width = 0.0;
    v72 = 0.0;
    v35 = v75;
  }
  v75 = *(_OWORD *)(v7 + 80);
  v41 = *(_QWORD *)(v7 + 96);
  v42 = *(_QWORD *)(v7 + 104);
  sub_100011020(v7 + 112, (uint64_t)v88);
  v74 = *(_OWORD *)(v7 + 152);
  v44 = *(_QWORD *)(v7 + 168);
  v43 = *(_QWORD *)(v7 + 176);
  sub_100011020(v7 + 184, (uint64_t)&v91);
  sub_100011020(v7 + 224, (uint64_t)&v92);
  v85 = v75;
  v86 = v41;
  v87 = v42;
  *(_OWORD *)&v88[40] = v74;
  v89 = v44;
  v90 = v43;
  sub_100351D7C(&v85, &v79);
  sub_100011020(v7 + 344, (uint64_t)&v82);
  sub_100011020(v7 + 384, (uint64_t)&v83);
  sub_100011020(v7 + 424, (uint64_t)&v84);
  swift_getObjectType();
  sub_100351DB0(a1, (uint64_t)&v79, a5, a6);
  v46 = v45;
  if (!v29)
    goto LABEL_12;
  v47 = v70;
  v48 = v71;
  v98.origin.x = v70;
  v98.origin.y = v71;
  v98.size.width = Width;
  v49 = v72;
  v98.size.height = v72;
  v50 = v46 + CGRectGetMaxY(v98);
  v99.origin.x = v77;
  v99.origin.y = v78;
  v99.size.width = a5;
  v99.size.height = a6;
  if (CGRectGetMaxY(v99) < v50)
  {
    v100.origin.x = v47;
    v100.origin.y = v48;
    v100.size.width = Width;
    v100.size.height = v49;
    MaxY = CGRectGetMaxY(v100);
    v52 = v73;
    v54 = v77;
    v53 = v78;
  }
  else
  {
LABEL_12:
    v54 = v77;
    v53 = v78;
    v101.origin.x = v77;
    v101.origin.y = v78;
    v101.size.width = a5;
    v101.size.height = a6;
    MaxY = CGRectGetMaxY(v101) - v46;
    v52 = v73;
  }
  v102.origin.x = v54;
  v102.origin.y = v53;
  v102.size.width = a5;
  v102.size.height = a6;
  v55 = CGRectGetMinX(v102);
  v103.origin.x = v54;
  v103.origin.y = v53;
  v103.size.width = a5;
  v103.size.height = a6;
  v56 = CGRectGetWidth(v103);
  v57 = sub_1003515B0(a1, v55, MaxY, v56, v46);
  v58 = LayoutRect.origin.getter(v57);
  v60 = v59;
  LayoutRect.size.getter(v58);
  v62 = v60 + v61;
  v104.origin.x = v54;
  v104.origin.y = v53;
  v104.size.width = a5;
  v104.size.height = a6;
  Height = CGRectGetHeight(v104);
  if (v62 <= Height)
    v62 = Height;
  v105.origin.x = v54;
  v105.origin.y = v53;
  v105.size.width = a5;
  v105.size.height = a6;
  v64 = CGRectGetMinX(v105);
  v106.origin.x = v54;
  v106.origin.y = v53;
  v106.size.width = a5;
  v106.size.height = a6;
  v65 = CGRectGetMinY(v106);
  v107.origin.x = v54;
  v107.origin.y = v53;
  v107.size.width = a5;
  v107.size.height = a6;
  v66 = CGRectGetWidth(v107);
  LayoutRect.init(representing:)(v64, v65, v66, v62);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v52, v76);
  sub_1003520A8(&v79);
  return sub_1003520D4(&v85);
}

uint64_t sub_1003515B0(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  double v23;
  double Height;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double Width;
  double v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  uint64_t v49;
  uint64_t v50;
  CGFloat v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  double v64;
  CGFloat v65;
  double v66;
  double v67;
  double v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;

  v6 = v5;
  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(double *)(v5 + 8);
  v17 = *(double *)(v5 + 16);
  v18 = *(double *)(v5 + 24);
  v67 = *(double *)v5;
  v68 = v17;
  v19 = (_QWORD *)(v5 + 104);
  v20 = *(_QWORD *)(v5 + 128);
  v21 = *(_QWORD *)(v6 + 136);
  sub_100011064(v19, v20);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v20);
  v66 = AnyDimension.value(in:rounded:)(a1, v15, v20, v21);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v15, v12);
  v69.origin.x = a2;
  v69.origin.y = a3;
  v69.size.width = a4;
  v69.size.height = a5;
  v23 = CGRectGetWidth(v69) - v16 - v18;
  v70.origin.x = a2;
  v70.origin.y = a3;
  v70.size.width = a4;
  v70.size.height = a5;
  Height = CGRectGetHeight(v70);
  v25 = *(_QWORD *)(v6 + 208);
  v26 = *(_QWORD *)(v6 + 216);
  sub_100011064((_QWORD *)(v6 + 184), v25);
  v27 = Measurable.measuredSize(fitting:in:)(a1, v25, *(_QWORD *)(v26 + 8), v23, Height);
  v29 = v28;
  v71.origin.x = a2;
  v71.origin.y = a3;
  v71.size.width = a4;
  v71.size.height = a5;
  v30 = CGRectGetMidX(v71) + v27 * -0.5;
  v72.origin.x = a2;
  v72.origin.y = a3;
  v72.size.width = a4;
  v72.size.height = a5;
  v31 = v67 + CGRectGetMinY(v72);
  v32 = *(_QWORD *)(v6 + 208);
  v33 = *(_QWORD *)(v6 + 216);
  sub_100011064((_QWORD *)(v6 + 184), v32);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v32, v33);
  v65 = v30;
  v73.origin.x = v30;
  v73.origin.y = v31;
  v73.size.width = v27;
  v67 = v29;
  v73.size.height = v29;
  CGRectGetMaxY(v73);
  v34 = *(_QWORD *)(v6 + 248);
  v35 = *(_QWORD *)(v6 + 256);
  sub_100011064((_QWORD *)(v6 + 224), v34);
  if ((dispatch thunk of LayoutView.isHidden.getter(v34, v35) & 1) != 0)
  {
    v36 = *(_QWORD *)(v6 + 248);
    v37 = *(_QWORD *)(v6 + 256);
    sub_100011064((_QWORD *)(v6 + 224), v36);
    dispatch thunk of LayoutView.frame.setter(v36, v37);
  }
  else
  {
    v38 = *(_QWORD *)(v6 + 56);
    v39 = *(_QWORD *)(v6 + 64);
    sub_100011064((_QWORD *)(v6 + 32), v38);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v38);
    v40 = AnyDimension.value(in:rounded:)(a1, v15, v38, v39);
    v64 = v40;
    v22(v15, v12);
    v74.origin.x = a2;
    v74.origin.y = a3;
    v74.size.width = a4;
    v74.size.height = a5;
    v41 = CGRectGetWidth(v74) - *(double *)(v6 + 80) - *(double *)(v6 + 96);
    v42 = *(_QWORD *)(v6 + 248);
    v43 = *(_QWORD *)(v6 + 256);
    sub_100011064((_QWORD *)(v6 + 224), v42);
    v75.origin.x = a2;
    v75.origin.y = a3;
    v75.size.width = a4;
    v75.size.height = a5;
    Width = CGRectGetWidth(v75);
    v45 = Measurable.measuredSize(fitting:in:)(a1, v42, *(_QWORD *)(v43 + 8), Width, v40);
    if (v41 <= v45)
      v41 = v45;
    v76.origin.x = a2;
    v76.origin.y = a3;
    v76.size.width = a4;
    v76.size.height = a5;
    v46 = CGRectGetWidth(v76);
    if (v46 < v41)
      v41 = v46;
    v77.origin.x = a2;
    v77.origin.y = a3;
    v77.size.width = a4;
    v77.size.height = a5;
    v47 = CGRectGetMidX(v77) + v41 * -0.5;
    v78.origin.x = v65;
    v78.origin.y = v31;
    v78.size.width = v27;
    v78.size.height = v67;
    v48 = v68 + CGRectGetMaxY(v78);
    v49 = *(_QWORD *)(v6 + 248);
    v50 = *(_QWORD *)(v6 + 256);
    sub_100011064((_QWORD *)(v6 + 224), v49);
    v51 = v64;
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v49, v50);
    v79.origin.x = v47;
    v79.origin.y = v48;
    v79.size.width = v41;
    v79.size.height = v51;
    CGRectGetMaxY(v79);
  }
  v52 = (_QWORD *)(v6 + 264);
  v53 = *(_QWORD *)(v6 + 288);
  v54 = *(_QWORD *)(v6 + 296);
  sub_100011064((_QWORD *)(v6 + 264), v53);
  v55 = dispatch thunk of LayoutView.isHidden.getter(v53, v54);
  v56 = *(_QWORD *)(v6 + 288);
  v57 = *(_QWORD *)(v6 + 296);
  sub_100011064((_QWORD *)(v6 + 264), v56);
  if ((v55 & 1) != 0)
  {
    v58 = v56;
    v59 = v57;
  }
  else
  {
    Measurable.measuredSize(fitting:in:)(a1, v56, *(_QWORD *)(v57 + 8), a4, a5);
    v80.origin.x = a2;
    v80.origin.y = a3;
    v80.size.width = a4;
    v80.size.height = a5;
    CGRectGetMidX(v80);
    v61 = *(_QWORD *)(v6 + 288);
    v60 = *(_QWORD *)(v6 + 296);
    sub_100011064(v52, v61);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    v58 = v61;
    v59 = v60;
  }
  dispatch thunk of LayoutView.frame.setter(v58, v59);
  return LayoutRect.init(representing:)(a2, a3, a4, a5);
}

double sub_100351AB8(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  swift_getObjectType();
  return sub_100351DB0(a1, v3, a2, a3);
}

double sub_100351B00(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[11];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[56];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_OWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  sub_100011020(a2 + 112, (uint64_t)v39);
  v25 = *(_OWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 168);
  v15 = *(_QWORD *)(a2 + 176);
  sub_100011020(a2 + 184, (uint64_t)&v42);
  sub_100011020(a2 + 224, (uint64_t)&v43);
  v36 = v26;
  v37 = v12;
  v38 = v13;
  *(_OWORD *)&v39[40] = v25;
  v40 = v14;
  v41 = v15;
  sub_100351D7C(&v36, v32);
  sub_100011020(a2 + 344, (uint64_t)&v33);
  sub_100011020(a2 + 384, (uint64_t)&v34);
  sub_100011020(a2 + 424, (uint64_t)&v35);
  v16 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  sub_100011064((_QWORD *)a2, v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  AnyDimension.value(in:rounded:)(a1, v11, v16, v17);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  sub_100351DB0(a1, (uint64_t)v32, a3, a4);
  sub_1000B9BD4(a2 + 264, (uint64_t)&v27);
  if (v28)
  {
    sub_100010F3C(&v27, (uint64_t)v29);
    v19 = v30;
    v20 = v31;
    sub_100011064(v29, v30);
    Measurable.measuredSize(fitting:in:)(a1, v19, *(_QWORD *)(v20 + 8), a3, a4);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v29);
  }
  else
  {
    sub_1001246D4((uint64_t)&v27);
  }
  v21 = (_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  sub_100011064(v21, v22);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
  AnyDimension.value(in:rounded:)(a1, v11, v22, v23);
  v18(v11, v8);
  sub_1003520A8(v32);
  sub_1003520D4(&v36);
  return a3;
}

_OWORD *sub_100351D7C(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(a2, a1);
  return a2;
}

double sub_100351DB0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  _OWORD v40[16];
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 - *(double *)(a2 + 8) - *(double *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 208);
  v14 = *(_QWORD *)(a2 + 216);
  sub_100011064((_QWORD *)(a2 + 184), v13);
  Measurable.measuredSize(fitting:in:)(a1, v13, *(_QWORD *)(v14 + 8), v12, a4);
  v15 = *(_QWORD *)(a2 + 168);
  v16 = *(_QWORD *)(a2 + 176);
  sub_100011064((_QWORD *)(a2 + 144), v15);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15);
  AnyDimension.value(in:rounded:)(a1, v11, v15, v16);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v18 = *(_QWORD *)(a2 + 248);
  v19 = *(_QWORD *)(a2 + 256);
  sub_100011064((_QWORD *)(a2 + 224), v18);
  v20 = dispatch thunk of LayoutView.isHidden.getter(v18, v19);
  v39 = v8;
  if ((v20 & 1) != 0)
  {
    v21 = v17;
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 56);
    v23 = *(_QWORD *)(a2 + 64);
    sub_100011064((_QWORD *)(a2 + 32), v22);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    AnyDimension.value(in:rounded:)(a1, v11, v22, v23);
    v24 = v8;
    v21 = v17;
    v17(v11, v24);
  }
  v25 = *(_QWORD *)(a2 + 288);
  v26 = *(_QWORD *)(a2 + 296);
  sub_100011064((_QWORD *)(a2 + 264), v25);
  if ((dispatch thunk of LayoutView.isHidden.getter(v25, v26) & 1) == 0)
  {
    v27 = *(_QWORD *)(a2 + 288);
    v28 = *(_QWORD *)(a2 + 296);
    sub_100011064((_QWORD *)(a2 + 264), v27);
    Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  }
  v29 = *(_QWORD *)(a2 + 248);
  v30 = *(_QWORD *)(a2 + 256);
  sub_100011064((_QWORD *)(a2 + 224), v29);
  v31 = dispatch thunk of LayoutView.isHidden.getter(v29, v30);
  sub_10035310C((_OWORD *)a2, v40);
  if ((v31 & 1) != 0)
  {
    sub_1003520A8(v40);
  }
  else
  {
    v32 = v42;
    v33 = v43;
    sub_100011064(v41, v42);
    v34 = dispatch thunk of LayoutView.isHidden.getter(v32, v33);
    sub_1003520A8(v40);
    if ((v34 & 1) == 0)
    {
      v35 = (_QWORD *)(a2 + 104);
      v36 = *(_QWORD *)(a2 + 128);
      v37 = *(_QWORD *)(a2 + 136);
      sub_100011064(v35, v36);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v36);
      AnyDimension.value(in:rounded:)(a1, v11, v36, v37);
      v21(v11, v39);
    }
  }
  return a3;
}

_QWORD *sub_1003520A8(_QWORD *a1)
{
  destroy for ArcadeSubscribePageLayout.OfferDetailsSublayout(a1);
  return a1;
}

_QWORD *sub_1003520D4(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 18);
  return a1;
}

uint64_t destroy for ArcadeSubscribePageLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 14);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 23);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 28);
  if (a1[36])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 33);
  if (a1[41])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 38);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 43);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 48);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 53);
}

uint64_t initializeWithCopy for ArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 112, a2 + 112);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 208) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 184, a2 + 184);
  v9 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 248) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 224, a2 + 224);
  v10 = (_OWORD *)(a1 + 264);
  v11 = (_OWORD *)(a2 + 264);
  v12 = *(_QWORD *)(a2 + 288);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 288) = v12;
    *(_QWORD *)(a1 + 296) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 280);
    *v10 = *v11;
    *(_OWORD *)(a1 + 280) = v14;
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  }
  v15 = (_OWORD *)(a1 + 304);
  v16 = (_OWORD *)(a2 + 304);
  v17 = *(_QWORD *)(a2 + 328);
  if (v17)
  {
    v18 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 328) = v17;
    *(_QWORD *)(a1 + 336) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 320);
    *v15 = *v16;
    *(_OWORD *)(a1 + 320) = v19;
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  }
  v20 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 368) = v20;
  (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 344, a2 + 344);
  v21 = *(_QWORD *)(a2 + 408);
  v22 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v21;
  *(_QWORD *)(a1 + 416) = v22;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 384, a2 + 384);
  v23 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 448) = v23;
  (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 424, a2 + 424);
  return a1;
}

uint64_t assignWithCopy for ArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  sub_10001216C((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_10001216C((_QWORD *)(a1 + 112), (_QWORD *)(a2 + 112));
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  sub_10001216C((_QWORD *)(a1 + 184), (_QWORD *)(a2 + 184));
  sub_10001216C((_QWORD *)(a1 + 224), (_QWORD *)(a2 + 224));
  v4 = *(_QWORD *)(a2 + 288);
  if (*(_QWORD *)(a1 + 288))
  {
    if (v4)
    {
      sub_10001216C((_QWORD *)(a1 + 264), (_QWORD *)(a2 + 264));
      goto LABEL_8;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 264));
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 288) = v4;
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 264, a2 + 264);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 264);
  v6 = *(_OWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 264) = v5;
  *(_OWORD *)(a1 + 280) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 328);
  if (!*(_QWORD *)(a1 + 328))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 328) = v7;
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 304, a2 + 304);
      goto LABEL_15;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 304);
    v9 = *(_OWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 304) = v8;
    *(_OWORD *)(a1 + 320) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 304));
    goto LABEL_14;
  }
  sub_10001216C((_QWORD *)(a1 + 304), (_QWORD *)(a2 + 304));
LABEL_15:
  sub_10001216C((_QWORD *)(a1 + 344), (_QWORD *)(a2 + 344));
  sub_10001216C((_QWORD *)(a1 + 384), (_QWORD *)(a2 + 384));
  sub_10001216C((_QWORD *)(a1 + 424), (_QWORD *)(a2 + 424));
  return a1;
}

void *initializeWithTake for ArcadeSubscribePageLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t assignWithTake for ArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 112));
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 184));
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 224));
  v7 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v7;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  if (*(_QWORD *)(a1 + 288))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 264));
  v8 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v8;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  if (*(_QWORD *)(a1 + 328))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 304));
  v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 344));
  v10 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v10;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 384));
  v11 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v11;
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 424));
  v12 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v12;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeSubscribePageLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 464))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 464) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 464) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout()
{
  return &type metadata for ArcadeSubscribePageLayout;
}

uint64_t destroy for ArcadeSubscribePageLayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 14);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 23);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 28);
}

_OWORD *initializeWithCopy for ArcadeSubscribePageLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  v7 = *(_OWORD *)((char *)a2 + 136);
  *(_OWORD *)((char *)a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 7), (uint64_t)(a2 + 7));
  *(_OWORD *)((char *)a1 + 152) = *(_OWORD *)((char *)a2 + 152);
  *(_OWORD *)((char *)a1 + 168) = *(_OWORD *)((char *)a2 + 168);
  v8 = a2[13];
  a1[13] = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)a1 + 184, (uint64_t)a2 + 184);
  v9 = *(_OWORD *)((char *)a2 + 248);
  *(_OWORD *)((char *)a1 + 248) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 14), (uint64_t)(a2 + 14));
  return a1;
}

_QWORD *assignWithCopy for ArcadeSubscribePageLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  sub_10001216C(a1 + 5, a2 + 5);
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_10001216C(a1 + 14, a2 + 14);
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  a1[22] = a2[22];
  sub_10001216C(a1 + 23, a2 + 23);
  sub_10001216C(a1 + 28, a2 + 28);
  return a1;
}

void *initializeWithTake for ProductRatingsCompactDetailsLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

uint64_t assignWithTake for ArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 112));
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 184));
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 224));
  v7 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v7;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsCompactDetailsLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 264))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsCompactDetailsLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 264) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 264) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout.Metrics()
{
  return &type metadata for ArcadeSubscribePageLayout.Metrics;
}

uint64_t destroy for ArcadeSubscribePageLayout.OfferDetailsSublayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 18);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 23);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 28);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 33);
}

_OWORD *initializeWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
  *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
  v6 = a2[8];
  a1[8] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)a1 + 104, (uint64_t)a2 + 104);
  v7 = *(_OWORD *)((char *)a2 + 168);
  *(_OWORD *)((char *)a1 + 168) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
  v8 = a2[13];
  a1[13] = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)a1 + 184, (uint64_t)a2 + 184);
  v9 = *(_OWORD *)((char *)a2 + 248);
  *(_OWORD *)((char *)a1 + 248) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 14), (uint64_t)(a2 + 14));
  v10 = a2[18];
  a1[18] = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))((uint64_t)a1 + 264, (uint64_t)a2 + 264);
  return a1;
}

_QWORD *assignWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_10001216C(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  sub_10001216C(a1 + 13, a2 + 13);
  sub_10001216C(a1 + 18, a2 + 18);
  sub_10001216C(a1 + 23, a2 + 23);
  sub_10001216C(a1 + 28, a2 + 28);
  sub_10001216C(a1 + 33, a2 + 33);
  return a1;
}

uint64_t assignWithTake for ArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 32));
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 104));
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 144));
  v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 184));
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 224));
  v7 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v7;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 264));
  v8 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v8;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 304))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 304) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 304) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout.OfferDetailsSublayout()
{
  return &type metadata for ArcadeSubscribePageLayout.OfferDetailsSublayout;
}

uint64_t destroy for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 13);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 18);
}

_OWORD *initializeWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
  *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
  v6 = a2[8];
  a1[8] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)a1 + 104, (uint64_t)a2 + 104);
  v7 = *(_OWORD *)((char *)a2 + 168);
  *(_OWORD *)((char *)a1 + 168) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
  return a1;
}

_QWORD *assignWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_10001216C(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  sub_10001216C(a1 + 13, a2 + 13);
  sub_10001216C(a1 + 18, a2 + 18);
  return a1;
}

__n128 initializeWithTake for ProductRatingsRegularLayout(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 32));
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 104));
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 144));
  v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics()
{
  return &type metadata for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics;
}

_OWORD *sub_10035310C(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout(a2, a1);
  return a2;
}

uint64_t sub_100353140@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v16[5];
  _QWORD v17[3];
  void *v18;
  void *v19;

  v3 = type metadata accessor for FontSource(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v7 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_100852280);
  v9.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v8, v7);
  Lockup.subtitle.getter(v9);
  v11 = v10;
  swift_bridgeObjectRelease(v10);
  if (!v11)
  {
    if (qword_1007F21B0 != -1)
      swift_once(&qword_1007F21B0, sub_10041388C);
    v12 = type metadata accessor for FontUseCase(0);
    v13 = sub_1000117A8(v12, (uint64_t)qword_100854A10);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v13, v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for FontSource.useCase(_:), v3);
    v18 = (void *)type metadata accessor for StaticDimension(0);
    v19 = &protocol witness table for StaticDimension;
    sub_1000117C0(v17);
    v16[3] = v3;
    v16[4] = &protocol witness table for FontSource;
    v14 = sub_1000117C0(v16);
    (*(void (**)(_QWORD *, char *, uint64_t))(v4 + 16))(v14, v6, v3);
    StaticDimension.init(_:scaledLike:)(v16, 16.0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    SmallLockupLayout.Metrics.headingSpace.setter(v17);
  }
  v18 = &type metadata for Double;
  v19 = &protocol witness table for Double;
  v17[0] = 0;
  SmallLockupLayout.Metrics.bottomSpace.setter(v17);
  SmallLockupLayout.Metrics.artworkSize.setter(48.0, 48.0);
  v18 = &type metadata for Double;
  v19 = &protocol witness table for Double;
  v17[0] = 0x4028000000000000;
  return SmallLockupLayout.Metrics.artworkMargin.setter(v17);
}

double sub_100353348(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v20;

  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = GameCenterReengagement.lockup.getter(v11);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(a5, "traitCollection");
    v17 = objc_msgSend(v16, "userInterfaceIdiom");

    if (v17 == (id)2)
    {
      swift_release(v15);
    }
    else
    {
      type metadata accessor for SmallLockupView(0);
      sub_100353140((uint64_t)v13, v18);
      swift_getObjectType();
      a2 = sub_100193710((uint64_t)v13, a1, a2, a3);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      swift_release(v15);
    }
  }
  return a2;
}

void sub_1003534B4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  void *v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  NSString v57;
  void *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  objc_class *v76;
  char *v77;
  uint64_t v78;
  double v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  __n128 v108;
  void (*v109)(char *, uint64_t, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  double v128;
  double v129;
  __n128 v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  char *v137;
  uint64_t v138;
  double v139;
  uint64_t v140;
  double v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  double (*v153)(uint64_t, uint64_t);
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  objc_super v167;
  _BYTE v168[32];

  v7 = v6;
  v166 = a3;
  v9 = type metadata accessor for Artwork.Crop(0, a1);
  v156 = *(_QWORD *)(v9 - 8);
  v157 = v9;
  __chkstk_darwin(v9);
  v155 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v11);
  v162 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v13);
  v163 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v15);
  v161 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v17);
  v160 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v19);
  v159 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Artwork.Style(0, v25);
  __chkstk_darwin(v26);
  v165 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10000DF3C(&qword_100808E20);
  *(_QWORD *)&v29 = __chkstk_darwin(v28).n128_u64[0];
  v31 = (char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = objc_msgSend(a6, "snapshotPageTraitEnvironment", v29);
  v33 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_pageTraits];
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_pageTraits] = v32;
  swift_unknownObjectRetain(v32);
  objc_msgSend(v7, "setNeedsLayout", swift_unknownObjectRelease(v33).n128_f64[0]);
  v34 = swift_unknownObjectRelease(v32);
  v35 = (void *)GameCenterReengagement.backgroundColor.getter(v34);
  objc_msgSend(v7, "setBackgroundColor:", v35);

  GameCenterReengagement.badgeGlyph.getter();
  if (v36)
  {
    v37 = v36;
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
  }
  else
  {
    v38 = 0;
  }
  v39 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v38);

  v40 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_badgeGlyph];
  if (v39)
  {
    objc_msgSend(v40, "setImage:", v39);

  }
  else
  {
    objc_msgSend(v40, "setImage:", 0);
  }
  v42 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_badge];
  GameCenterReengagement.badge.getter(v41);
  if (v43)
  {
    v45 = v43;
    v46 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v45).n128_u64[0];
  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v42, "setText:", v46, v44);

  v47 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_title];
  GameCenterReengagement.title.getter(v48);
  v50 = v49;
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "setText:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  v52 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_subtitle];
  GameCenterReengagement.subtitle.getter(v53);
  v164 = v21;
  if (v54)
  {
    v56 = v54;
    v57 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v56).n128_u64[0];
  }
  else
  {
    v57 = 0;
  }
  objc_msgSend(v52, "setText:", v57, v55);

  v58 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_heroContent];
  v59.n128_f64[0] = GameCenterReengagement.achievement.getter();
  v60 = type metadata accessor for Achievement(0, v59);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v31, 0, 1, v60);
  v61 = AchievementCard.model.setter(v31);
  v62 = dispatch thunk of GameCenterReengagement.clickAction.getter(v61);
  v158 = v24;
  if (v62)
  {
    v63 = v62;
    v64 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_button];
    v65 = swift_allocObject(&unk_100739C68, 24, 7);
    swift_unknownObjectWeakInit(v65 + 16);
    v66 = (_QWORD *)swift_allocObject(&unk_100739C90, 40, 7);
    v66[2] = v65;
    v66[3] = v63;
    v67 = v166;
    v66[4] = v166;
    swift_retain(v65);
    swift_retain(v67);
    v68 = swift_retain(v63);
    dispatch thunk of Button.primaryActionHandler.setter(sub_1003542F0, v66, v68);
    v69 = swift_release(v65);
    Action.title.getter(v69);
    if (v70)
    {
      v72 = v70;
      v73 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v71 = swift_bridgeObjectRelease(v72).n128_u64[0];
    }
    else
    {
      v73 = 0;
    }
    objc_msgSend(v64, "setTitle:forState:", v73, 0, v71);
    swift_release(v63);

  }
  else
  {
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_button], "setHidden:", 1);
  }
  v74 = dispatch thunk of GameCenterReengagement.heroAction.getter(objc_msgSend(v58, "removeAllGestureRecognizers"));
  if (v74)
  {
    v75 = v74;
    v76 = (objc_class *)type metadata accessor for TapActionGestureRecognizer();
    v77 = (char *)objc_allocWithZone(v76);
    *(_QWORD *)&v77[OBJC_IVAR____TtC22SubscribePageExtension26TapActionGestureRecognizer_action] = v75;
    v78 = v166;
    *(_QWORD *)&v77[OBJC_IVAR____TtC22SubscribePageExtension26TapActionGestureRecognizer_objectGraph] = v166;
    v167.receiver = v77;
    v167.super_class = v76;
    swift_retain(v78);
    *(_QWORD *)&v79 = swift_retain(v75).n128_u64[0];
    v80 = objc_msgSendSuper2(&v167, "initWithTarget:action:", 0, 0, v79);
    objc_msgSend(v80, "addTarget:action:", v80, "execute");
    objc_msgSend(v58, "addGestureRecognizer:", v80);
    swift_release(v75);

  }
  v81 = GameCenterReengagement.backgroundArtwork.getter();
  if (v81)
  {
    v82 = v81;
    v83 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_backgroundImage];
    objc_msgSend(v83, "setHidden:", 0);
    objc_msgSend(v7, "frame");
    v85 = ceil(v84 / 3.0);
    objc_msgSend(v7, "frame");
    v87 = Artwork.config(using:)(v85, ceil(v86 / 3.0));
    v88 = v165;
    Artwork.style.getter(v87);
    v89 = ArtworkView.style.setter(v88);
    *(_QWORD *)&v90 = Artwork.contentMode.getter(v89).n128_u64[0];
    v92 = ArtworkLoaderConfig.size.getter(objc_msgSend(v83, "setContentMode:", v91, v90));
    v94 = ArtworkView.imageSize.setter(v92, v93);
    v95 = Artwork.backgroundColor.getter(v94);
    if (!v95)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v95 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v95);
    v96 = type metadata accessor for ArtworkLoader(0);
    v97 = *(_QWORD *)(v166 + qword_100854050);
    if (!v97)
    {
      v145 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v96);
      __break(1u);
      goto LABEL_36;
    }
    v98 = type metadata accessor for ArtworkView(0);
    v99 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    swift_retain(v97);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v87, 2, 1, v83, v98, v99);
    swift_release(v82);
    swift_release(v87);
    v100 = swift_release(v97);
  }
  else
  {
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_backgroundImage], "setHidden:", 1);
  }
  v101 = GameCenterReengagement.lockup.getter(v100);
  v103 = v164;
  if (!v101)
    return;
  v104 = v101;
  v105 = *(char **)&v7[OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_lockup];
  v106 = (uint64_t)v158;
  sub_100353140((uint64_t)v158, v102);
  v107 = &v105[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics];
  v108 = swift_beginAccess(&v105[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics], v168, 33, 0);
  v109 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 24);
  v154 = v107;
  v109(v107, v106, v103, v108);
  swift_endAccess(v168);
  objc_msgSend(v105, "setNeedsLayout");
  v153 = *(double (**)(uint64_t, uint64_t))(v22 + 8);
  v153(v106, v103);
  v110 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  v111 = (uint64_t)v159;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v159, 1, 1, v110);
  v112 = type metadata accessor for OfferStyle(0);
  v113 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56);
  v152 = v22;
  v114 = (uint64_t)v160;
  v113(v160, 1, 1, v112);
  v115 = type metadata accessor for OfferEnvironment(0);
  v116 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v161, 1, 1, v115);
  v117 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v118 = (uint64_t)v163;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v163, 1, 1, v117);
  v119 = type metadata accessor for OfferTint(0);
  v120 = (uint64_t)v162;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v162, 1, 1, v119);
  sub_10054F220(v104, v105, v111, v166, 0, 0, v114, v116, v120, v118);
  sub_100011088(v120, (uint64_t *)&unk_1007F76F0);
  v105[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  sub_100192BDC();
  objc_msgSend(v105, "setNeedsLayout");
  sub_100011088(v118, (uint64_t *)&unk_1007F7C10);
  sub_100011088(v116, (uint64_t *)&unk_1007F7C20);
  sub_100011088(v114, (uint64_t *)&unk_1007F7700);
  v121 = v111;
  v122 = v104;
  sub_100011088(v121, (uint64_t *)&unk_1007F7710);
  v124 = Lockup.icon.getter(v123);
  if (v124)
  {
    v125 = v124;
    v126 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v152 + 16))(v106, v154, v103);
    v127 = SmallLockupLayout.Metrics.artworkSize.getter(v126);
    v129 = v128;
    v130.n128_f64[0] = v153(v106, v103);
    v131 = v155;
    v132 = Artwork.crop.getter(v130);
    v133 = Artwork.Crop.preferredContentMode.getter(v132);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v131, v157);
    v134 = Artwork.config(_:mode:prefersLayeredImage:)(v133, 0, v127, v129);
    v135 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
    v136 = *(id *)&v105[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView];
    v137 = v165;
    Artwork.style.getter(v136);
    v138 = ArtworkView.style.setter(v137);
    *(_QWORD *)&v139 = Artwork.contentMode.getter(v138).n128_u64[0];
    v141 = ArtworkLoaderConfig.size.getter(objc_msgSend(v136, "setContentMode:", v140, v139));
    v143 = ArtworkView.imageSize.setter(v141, v142);
    v144 = Artwork.backgroundColor.getter(v143);
    if (!v144)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v144 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v144);

    objc_msgSend(v105, "setContentMode:", objc_msgSend(v7, "contentMode"));
    v145 = type metadata accessor for ArtworkLoader(0);
    v146 = *(_QWORD *)(v166 + qword_100854050);
    if (v146)
    {
      v147 = *(void **)&v105[v135];
      v148 = type metadata accessor for ArtworkView(0);
      v149 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      swift_retain(v146);
      v150 = v147;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v134, 2, 1, v150, v148, v149);
      swift_release(v125);
      swift_release(v134);
      swift_release(v146);

      goto LABEL_33;
    }
LABEL_36:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v145);
    __break(1u);
    return;
  }
LABEL_33:
  swift_release(v122);
}

void sub_1003540D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  __n128 v17;
  _BYTE v19[24];
  __int128 v20;
  __int128 v21;
  _BYTE v22[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v19, 0, 0);
      v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        v15 = (void *)v14;
        v16 = objc_retain(*(id *)(v14
                                + OBJC_IVAR____TtC22SubscribePageExtension40GameCenterReengagementCollectionViewCell_button));

        *((_QWORD *)&v21 + 1) = type metadata accessor for DynamicTypeButton(0);
        *(_QWORD *)&v20 = v16;
      }
      else
      {
        v20 = 0u;
        v21 = 0u;
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v20, v9, a3);
      v17 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v17);
      sub_100011088((uint64_t)&v20, &qword_1007F6E90);
    }
  }
}

double sub_100354240(uint64_t *a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1003542FC(*a1, a2, a3, a5, a7, a8);
}

void sub_100354254(uint64_t *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  sub_1003534B4(a2, *a1, a4, a5, a6, a7);
}

uint64_t sub_10035426C()
{
  return sub_10000E99C((unint64_t *)&unk_100808DC0, (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagement, (uint64_t)&protocol conformance descriptor for GameCenterReengagement);
}

uint64_t sub_100354298()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003542BC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1003542F0()
{
  uint64_t *v0;

  sub_1003540D4(v0[2], v0[3], v0[4]);
}

double sub_1003542FC(uint64_t a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v8;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(_QWORD);
  char v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  id v61;
  double v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  __n128 v68;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t);
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD v84[5];
  _QWORD v85[5];
  _QWORD v86[5];
  _BYTE v87[40];
  _BYTE v88[40];
  _BYTE v89[40];
  _BYTE v90[32];
  uint64_t v91;
  _QWORD v92[5];
  _QWORD v93[5];
  _QWORD v94[6];

  v8 = a2.n128_f64[0];
  v10 = type metadata accessor for GameCenterReengagementLayout.Metrics(0, a2);
  v11 = __chkstk_darwin(v10);
  v73 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GameCenterReengagementLayout(0, v11);
  v75 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  v14 = __chkstk_darwin(v13);
  v74 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for LabelPlaceholderCompatibility(0, v14);
  v16 = *(_QWORD *)(v83 - 8);
  v17 = __chkstk_darwin(v83);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = GameCenterReengagement.badge.getter(v17);
  v22 = v21;
  v23 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F2828 != -1)
    swift_once(&qword_1007F2828, sub_100417528);
  v81 = type metadata accessor for FontUseCase(0);
  v24 = sub_1000117A8(v81, (uint64_t)qword_100855D60);
  v25 = objc_msgSend(a6, "traitCollection");
  v82 = a6;
  v26 = v25;
  v27 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v24, v25);

  v28 = type metadata accessor for Feature(0);
  v94[3] = v28;
  v80 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v94[4] = v80;
  v29 = sub_1000117C0(v94);
  v30 = *(void (**)(_QWORD))(*(_QWORD *)(v28 - 8) + 104);
  v79 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v78 = (void (*)(_QWORD *, _QWORD, uint64_t))v30;
  v30(v29);
  v31 = isFeatureEnabled(_:)(v94);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v94);
  v32 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v20, v22, v27, 4, 0, 0, 0, 0, v31 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v94, v32);
  v77 = v23;
  v33 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v34 = v33(v19, v83);
  v35 = GameCenterReengagement.title.getter(v34);
  v37 = v36;
  if (qword_1007F2830 != -1)
    swift_once(&qword_1007F2830, sub_100417540);
  v38 = sub_1000117A8(v81, (uint64_t)qword_100855D78);
  v39 = objc_msgSend(v82, "traitCollection");
  v40 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v38, v39);

  v93[3] = v28;
  v93[4] = v80;
  v41 = sub_1000117C0(v93);
  v78(v41, v79, v28);
  LOBYTE(v39) = isFeatureEnabled(_:)(v93);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v93);
  LOBYTE(v70) = v39 & 1;
  v42 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v35, v37, v40, 4, 0, 0, 0, 0, v70);
  LabelPlaceholderCompatibility.layoutTextView.getter(v93, v42);
  v43 = v33(v19, v83);
  v44 = a1;
  v45 = GameCenterReengagement.subtitle.getter(v43);
  v47 = v46;
  if (qword_1007F2838 != -1)
    swift_once(&qword_1007F2838, sub_100417558);
  v48 = sub_1000117A8(v81, (uint64_t)qword_100855D90);
  v49 = v82;
  v50 = objc_msgSend(v82, "traitCollection");
  v51 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v48, v50);

  v92[3] = v28;
  v92[4] = v80;
  v52 = sub_1000117C0(v92);
  v78(v52, v79, v28);
  LOBYTE(v50) = isFeatureEnabled(_:)(v92);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v92);
  LOBYTE(v71) = v50 & 1;
  v53 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v45, v47, v51, 4, 0, 0, 0, 0, v71);
  LabelPlaceholderCompatibility.layoutTextView.getter(v92, v53);
  v33(v19, v83);
  v54 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v55 = LayoutViewPlaceholder.init(measurements:)(v8, 255.0, 255.0, 0.0);
  v56 = (_QWORD *)swift_allocObject(&unk_100739CB8, 40, 7);
  v56[2] = v44;
  v56[3] = v49;
  v56[4] = v72;
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  swift_retain(v44);
  v57 = swift_unknownObjectRetain(v49);
  v58 = LayoutViewPlaceholder.init(measureWith:)(sub_1003549B8, v56, v57);
  v59 = v73;
  sub_100227098(v49, v73, v60);
  v91 = 0;
  memset(v90, 0, sizeof(v90));
  sub_100011020((uint64_t)v94, (uint64_t)v89);
  sub_100011020((uint64_t)v93, (uint64_t)v88);
  sub_100011020((uint64_t)v92, (uint64_t)v87);
  v86[3] = v54;
  v86[4] = &protocol witness table for LayoutViewPlaceholder;
  v86[0] = v55;
  v61 = objc_msgSend(v49, "traitCollection", swift_retain(v55).n128_f64[0]);
  v62 = static Separator.thickness(compatibleWith:)();

  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v63 = LayoutViewPlaceholder.init(representing:)(v8, v62);
  v85[3] = v54;
  v85[4] = &protocol witness table for LayoutViewPlaceholder;
  v84[4] = &protocol witness table for LayoutViewPlaceholder;
  v85[0] = v63;
  v84[3] = v54;
  v84[0] = v58;
  swift_retain(v58);
  v64 = v74;
  GameCenterReengagementLayout.init(metrics:badgeGlyph:badgeLabel:titleLabel:subtitleLabel:heroContent:separator:footer:)(v59, v90, v89, v88, v87, v86, v85, v84);
  v65 = sub_10000E99C((unint64_t *)&unk_100808900, (uint64_t (*)(uint64_t))&type metadata accessor for GameCenterReengagementLayout, (uint64_t)&protocol conformance descriptor for GameCenterReengagementLayout);
  v66 = v76;
  v67 = dispatch thunk of Measurable.measurements(fitting:in:)(v49, v76, v65, v8, a3);
  swift_release(v55);
  v68 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v75 + 8))(v64, v66, v68);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v92);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v93);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v94);
  return v67;
}

uint64_t sub_10035498C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003549B8(void *a1, double a2, double a3)
{
  uint64_t v3;

  return sub_100353348(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

void sub_1003549C4(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  void *Strong;
  char *v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  __n128 v34;
  _BYTE v35[24];

  swift_beginAccess(a1, v35, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(v8, "navigationController");
    if (!v9)
    {

      goto LABEL_20;
    }
    v10 = v9;
    v11 = objc_msgSend(v9, "viewControllers");

    v12 = sub_1000531A4();
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v24 = v3;
      else
        v24 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v25 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v3);
      if (v25)
        goto LABEL_5;
    }
    else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v3 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v13 = *(id *)(v3 + 32);
      }
      v14 = v13;
      swift_bridgeObjectRelease(v3);
      v3 = v8;
      v15 = v14;
      v16 = static NSObject.== infix(_:_:)(v15, v3);

      if ((v16 & 1) != 0)
      {
        v17 = (id)v3;
        v18 = objc_msgSend(v17, "view");
        if (!v18)
        {
LABEL_36:
          __break(1u);
          return;
        }
        v3 = (uint64_t)v18;
        v19 = type metadata accessor for InsetCollectionViewControllerContentView();
        v20 = swift_dynamicCastClass(v3, v19);
        if (!v20)
        {
LABEL_35:

          goto LABEL_36;
        }
        v21 = *(_BYTE *)(v20
                       + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

        if ((v21 & 1) == 0 && (a2 & 1) != 0)
        {
          v22 = a3 & 1;
          v23 = 1.0;
LABEL_29:
          sub_10009D83C(v22, v23);
LABEL_30:

          return;
        }
      }
LABEL_20:
      v26 = *(_QWORD *)&v8[qword_100851128];
      if (!v26 || !*(_QWORD *)&v8[qword_100851120])
      {
        v23 = 0.0;
        if ((a2 & 1) != 0)
          v23 = 1.0;
        v22 = 0;
        goto LABEL_29;
      }
      v27 = objc_msgSend(v8, "collectionView", swift_retain(*(_QWORD *)&v8[qword_100851128]).n128_f64[0]);
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, "_systemContentInset");
        v30 = v29;
        objc_msgSend(v28, "contentOffset");
        v32 = v31;
        v33 = objc_msgSend(v28, "contentInset");
        v34.n128_f64[0] = fmin((v30 + v32 + v34.n128_f64[0] - *(double *)(v26 + 32)) / *(double *)(v26 + 40), 1.0);
        if (v34.n128_f64[0] < 0.0)
          v34.n128_f64[0] = 0.0;
        (*(void (**)(id, __n128))(v26 + 16))(v33, v34);
        swift_release(v26);

        goto LABEL_30;
      }
      goto LABEL_34;
    }

    swift_bridgeObjectRelease(v3);
    goto LABEL_20;
  }
}

id sub_100354C98()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
  qword_100853FC8 = (uint64_t)result;
  return result;
}

void sub_100354CD0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.05);

  qword_100853FD0 = (uint64_t)v1;
}

id sub_100354D38(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR____TtC22SubscribePageExtension38CondensedSearchEditorialBackgroundView_isBorderHidden] = 0;
  v20.receiver = v4;
  v20.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v11 = qword_1007F1D28;
  v12 = v10;
  if (v11 != -1)
    swift_once(&qword_1007F1D28, sub_100354C98);
  objc_msgSend(v12, "setBackgroundColor:", qword_100853FC8);
  v13 = objc_msgSend(v12, "layer");
  if (qword_1007F1D30 != -1)
    swift_once(&qword_1007F1D30, sub_100354CD0);
  v14 = objc_msgSend((id)qword_100853FD0, "CGColor");
  objc_msgSend(v13, "setBorderColor:", v14);

  v15 = objc_msgSend(v12, "layer");
  v16 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v16, "scale");
  v18 = v17;

  objc_msgSend(v15, "setBorderWidth:", 1.0 / v18);
  objc_msgSend(v12, "_setContinuousCornerRadius:", 16.0);

  return v12;
}

void sub_100354F9C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (a1)
    v3 = objc_msgSend(a1, "userInterfaceStyle");
  else
    v3 = 0;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");

  if ((!a1 || v3 != v5)
    && (*((_BYTE *)v1 + OBJC_IVAR____TtC22SubscribePageExtension38CondensedSearchEditorialBackgroundView_isBorderHidden) & 1) == 0)
  {
    v6 = objc_msgSend(v1, "layer");
    if (qword_1007F1D30 != -1)
      swift_once(&qword_1007F1D30, sub_100354CD0);
    v7 = objc_msgSend((id)qword_100853FD0, "CGColor");
    objc_msgSend(v6, "setBorderColor:", v7);

  }
}

uint64_t type metadata accessor for CondensedSearchEditorialBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension38CondensedSearchEditorialBackgroundView);
}

uint64_t sub_100355154()
{
  return InAppPurchaseIconLayout.Metrics.overallSize.getter();
}

uint64_t sub_10035518C(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  char v7;

  v2 = v1;
  if (a1)
    v3 = objc_msgSend(a1, "superview");
  else
    v3 = 0;
  v4 = objc_msgSend(v2, "contentView");
  v5 = v4;
  if (v3)
  {
    if (v4)
    {
      sub_10000EF74();
      v6 = v3;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

    }
    else
    {
      v7 = 0;
      v5 = v3;
    }
  }
  else
  {
    if (!v4)
    {
      v7 = 1;
      return v7 & 1;
    }
    v7 = 0;
  }

  return v7 & 1;
}

id sub_1003554F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100355574()
{
  return type metadata accessor for VideoCollectionViewCell(0);
}

uint64_t type metadata accessor for VideoCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100808E80;
  if (!qword_100808E80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VideoCollectionViewCell);
  return result;
}

uint64_t sub_1003555B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for VideoConfiguration(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10035562C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView);
}

void sub_10035563C(void *a1)
{
  sub_100355838((uint64_t)a1);

}

void (*sub_100355660(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView);
  return sub_1003556A0;
}

void sub_1003556A0(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_100355838((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_100355838(*a1);
    v3 = v4;
  }

}

uint64_t sub_1003556F8(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100686260, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10035572C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100686260, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

void (*sub_100355778(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(byte_100686260, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001DF34;
}

uint64_t sub_1003557E0()
{
  return sub_10000E99C(&qword_1007FB3C0, type metadata accessor for VideoCollectionViewCell, (uint64_t)&unk_1006861F0);
}

uint64_t sub_10035580C()
{
  return sub_10000E99C(&qword_100808E90, type metadata accessor for VideoCollectionViewCell, (uint64_t)&unk_100686220);
}

void sub_100355838(uint64_t a1)
{
  char *v1;
  char *v3;
  void *Strong;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = &v1[OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView]);
  v5 = Strong;
  if (Strong)
  {
    sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    Strong = v5;
  }
  v6 = sub_10035518C(Strong);

  if ((v6 & 1) != 0)
  {
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
  }
  v9 = swift_unknownObjectWeakAssign(v3, a1);
  v10 = swift_unknownObjectWeakLoadStrong(v9);
  if (v10)
  {
    v12 = (id)v10;
    v11 = objc_msgSend(v1, "contentView");
    objc_msgSend(v11, "addSubview:", v12);

    objc_msgSend(v1, "setNeedsLayout");
  }
}

uint64_t ButtonPlaceholder.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder____lazy_storage___button) = 0;
  v4 = v3 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration;
  v5 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v3;
}

uint64_t ButtonPlaceholder.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder____lazy_storage___button) = 0;
  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration;
  v4 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t ButtonPlaceholder.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration;
  v4 = type metadata accessor for UIButton.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_100355A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder____lazy_storage___button;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder____lazy_storage___button);
  if (v7)
  {
    v8 = *(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder____lazy_storage___button);
  }
  else
  {
    sub_100355D8C();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration, v2);
    v9 = (void *)UIButton.init(configuration:primaryAction:)(v5, 0);
    v10 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v9;
    v8 = v9;

    v7 = 0;
  }
  v11 = v7;
  return v8;
}

double ButtonPlaceholder.measure(toFit:with:)(double a1, double a2)
{
  id v4;
  double v5;

  v4 = sub_100355A64();
  v5 = UIButton.measure(toFit:with:)(a1, a2);

  return v5;
}

uint64_t ButtonPlaceholder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration;
  v2 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t ButtonPlaceholder.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration;
  v2 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

double sub_100355C60(double a1, double a2)
{
  id v4;
  double v5;

  v4 = sub_100355A64();
  v5 = UIButton.measure(toFit:with:)(a1, a2);

  return v5;
}

uint64_t sub_100355CD4()
{
  return type metadata accessor for ButtonPlaceholder(0);
}

uint64_t type metadata accessor for ButtonPlaceholder(uint64_t a1)
{
  uint64_t result;

  result = qword_100808EC8;
  if (!qword_100808EC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ButtonPlaceholder);
  return result;
}

uint64_t sub_100355D18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UIButton.Configuration(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_100355D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080E4C0;
  if (!qword_10080E4C0)
  {
    v1 = objc_opt_self(UIButton);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080E4C0);
  }
  return result;
}

uint64_t *sub_100355DCC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SearchLandingPageGridProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for SearchLandingPageGridProvider(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for ProductPageGridProvider()
{
  return &type metadata for ProductPageGridProvider;
}

uint64_t sub_100355EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>)
{
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t KeyPath;
  uint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, uint64_t, __n128);
  uint64_t v52;
  unsigned int *v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  int v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  char *v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  __n128 v108;
  char v110;
  char *v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  __n128 v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t *v140;
  __n128 v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __n128 v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  unint64_t v180;

  v166 = a5;
  v167 = a4;
  v174 = a3;
  v171 = a6;
  v162 = type metadata accessor for AppPlatform(0);
  v161 = *(_QWORD *)(v162 - 8);
  v20 = __chkstk_darwin(v162);
  v160 = (char *)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Shelf.ContentsMetadata(0, v20);
  v168 = *(_QWORD *)(v22 - 8);
  v169 = v22;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v150 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for ProductMediaMetadata(0, v23);
  v157 = *(_QWORD *)(v159 - 8);
  v26 = __chkstk_darwin(v159);
  v158 = (char *)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for ProductReview.ReviewSource(0, v26);
  v150 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v151 = (char *)&v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_10000DF3C(&qword_1007F4A70);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v150 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v153 = (char *)&v150 - v31;
  v32 = type metadata accessor for Shelf.ContentType(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v150 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for PageGrid.Direction(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v170 = (char *)&v150 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v150 - v40;
  v42 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v42);
  v165 = (uint64_t)&v150 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v163 = v46;
  v47 = (char *)&v150 + *(int *)(v46 + 48) - v45;
  v175 = (uint64_t)&v150 - v45;
  sub_1000207A8(a2, (uint64_t)&v150 - v45);
  v164 = v47;
  sub_1000207A8(v174, (uint64_t)v47);
  KeyPath = swift_getKeyPath(&unk_100686440);
  v49 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  ReadOnlyLens.subscript.getter(KeyPath, v49);
  v50 = swift_release(KeyPath);
  v172 = v37;
  v51 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v37 + 104);
  v52 = a1;
  if ((_BYTE)v178)
    v53 = (unsigned int *)&enum case for PageGrid.Direction.horizontal(_:);
  else
    v53 = (unsigned int *)&enum case for PageGrid.Direction.vertical(_:);
  v54 = *v53;
  v173 = v41;
  v174 = v36;
  v51(v41, v54, v36, v50);
  v55 = swift_getKeyPath(&unk_100686410);
  ReadOnlyLens.subscript.getter(v55, v49);
  v56 = swift_release(v55);
  v57 = (*(uint64_t (**)(char *, uint64_t, __n128))(v33 + 88))(v35, v32, v56);
  if (v57 != enum case for Shelf.ContentType.productMediaItem(_:))
  {
    if (v57 == enum case for Shelf.ContentType.productReview(_:))
    {
      v86 = type metadata accessor for Feature.iOS(0);
      *((_QWORD *)&v179 + 1) = v86;
      v180 = sub_1000365B4();
      v87 = sub_1000117C0(&v178);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v86 - 8) + 104))(v87, enum case for Feature.iOS.review_summarization(_:), v86);
      LOBYTE(v86) = isFeatureEnabled(_:)(&v178);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v178);
      v73 = v172;
      v72 = v173;
      if ((v86 & 1) != 0)
      {
        v88 = swift_getKeyPath(&unk_1006864A0);
        ReadOnlyLens.subscript.getter(v88, v49);
        swift_release(v88);
        v89 = v177;
        if (*(_QWORD *)(v177 + 16))
        {
          sub_100011020(v177 + 32, (uint64_t)&v178);
        }
        else
        {
          v180 = 0;
          v178 = 0u;
          v179 = 0u;
        }
        v111 = v170;
        swift_bridgeObjectRelease(v89);
        if (*((_QWORD *)&v179 + 1))
        {
          v112 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
          v114 = type metadata accessor for ProductReview(0, v113);
          v115 = swift_dynamicCast(&v176, &v178, v112, v114, 6);
          if ((v115 & 1) != 0)
          {
            v116 = v176;
            v117 = v151;
            ProductReview.source.getter(v115);
            v118 = v150;
            v119 = v152;
            v120 = (*(uint64_t (**)(_QWORD *, uint64_t))(v150 + 88))(v117, v152);
            v71 = v174;
            if (v120 == enum case for ProductReview.ReviewSource.editorsChoice(_:))
            {
              (*(void (**)(_QWORD *, uint64_t))(v118 + 96))(v117, v119);
              v121 = swift_release(*v117);
              (*(void (**)(char *, char *, uint64_t, __n128))(v73 + 16))(v111, v72, v71, v121);
              if (qword_1007F1898 != -1)
                swift_once(&qword_1007F1898, sub_10024F308);
              v122 = qword_100802E20;
              swift_bridgeObjectRetain(qword_100802E20);
              v123 = 0x65656C426C6C7566;
              v124 = 0xE900000000000064;
              v125 = v111;
              v126 = a7;
              v127 = a8;
              v128 = a9;
              v129 = a10;
              v130 = a11;
              v131 = a12;
              v132 = v122;
            }
            else
            {
              if (v120 != enum case for ProductReview.ReviewSource.reviewSummary(_:))
              {
                (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v111, v72, v174);
                v142 = sub_10039DD30(v167, 0);
                PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000017, 0x8000000100645690, v111, 0, v142, a7, a8, a9, a10, a11, a12);
                v143 = swift_release(v116);
                (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v72, v71, v143);
                sub_100011088(v175, &qword_1007F4A60);
                return (*(uint64_t (**)(_QWORD *, uint64_t))(v118 + 8))(v117, v119);
              }
              (*(void (**)(_QWORD *, uint64_t))(v118 + 96))(v117, v119);
              v141 = swift_release(*v117);
              (*(void (**)(char *, char *, uint64_t, __n128))(v73 + 16))(v111, v72, v71, v141);
              v132 = sub_10039DD30(v167, 1);
              v124 = 0x8000000100645690;
              v126 = a7;
              v127 = a8;
              v128 = a9;
              v129 = a10;
              v130 = a11;
              v131 = a12;
              v123 = 0xD000000000000017;
              v125 = v111;
            }
            PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(v123, v124, v125, 0, v132, v126, v127, v128, v129, v130, v131);
            swift_release(v116);
LABEL_53:
            (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v71);
            goto LABEL_54;
          }
        }
        else
        {
          sub_100011088((uint64_t)&v178, (uint64_t *)&unk_1008027C0);
        }
      }
      v133 = v166;
      *(_QWORD *)&v178 = v166;
      v134 = v165;
      v135 = v165 + *(int *)(v163 + 48);
      v136 = v175;
      sub_1000207A8(v175, v165);
      sub_1000207A8((uint64_t)v164, v135);
      v137 = sub_1000CB84C();
      swift_retain(v133);
      PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, v134, v135, v167, &type metadata for GenericPageGridProvider, v137, a7, a8, a9, a10, a11, a12);
      v138 = swift_release(v133);
      (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v72, v174, v138);
      sub_100011088(v136, &qword_1007F4A60);
      sub_100011088(v135, &qword_1007F4A68);
      v139 = v134;
      v140 = &qword_1007F4A68;
      return sub_100011088(v139, v140);
    }
    if (v57 != enum case for Shelf.ContentType.productBadge(_:))
    {
      v103 = v166;
      *(_QWORD *)&v178 = v166;
      v104 = v165;
      v105 = v165 + *(int *)(v163 + 48);
      v106 = v175;
      sub_1000207A8(v175, v165);
      sub_1000207A8((uint64_t)v164, v105);
      v107 = sub_1000CB84C();
      swift_retain(v103);
      PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, v104, v105, v167, &type metadata for GenericPageGridProvider, v107, a7, a8, a9, a10, a11, a12);
      v108 = swift_release(v103);
      (*(void (**)(char *, uint64_t, __n128))(v172 + 8))(v173, v174, v108);
      sub_100011088(v106, &qword_1007F4A60);
      sub_100011088(v105, &qword_1007F4A68);
      sub_100011088(v104, &qword_1007F4A68);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    }
    v95 = (uint64_t)v153;
    static PageGrid.DirectionalValue<>.zero.getter(v58);
    v96 = (uint64_t)v154;
    static PageGrid.DirectionalValue<>.zero.getter(v97);
    v91 = v172;
    v90 = v173;
    v98 = v170;
    v93 = v174;
    (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v170, v173, v174);
    v99 = sub_100530AD4(v95, v96);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6D6F74737563, 0xE600000000000000, v98, 0, v99, a7, a8, a9, a10, a11, a12);
    v100 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
    v101 = v96;
    v102 = v156;
    v100(v101, v156);
    v100(v95, v102);
LABEL_21:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v93);
LABEL_54:
    v140 = &qword_1007F4A60;
    v139 = v175;
    return sub_100011088(v139, v140);
  }
  v59 = swift_getKeyPath(&unk_100686470);
  ReadOnlyLens.subscript.getter(v59, v49);
  v60 = swift_release(v59);
  v62 = v168;
  v61 = v169;
  if ((*(unsigned int (**)(char *, unint64_t, __n128))(v168 + 88))(v25, v169, v60) != enum case for Shelf.ContentsMetadata.productMedia(_:))
  {
    (*(void (**)(char *, unint64_t))(v62 + 8))(v25, v61);
    v91 = v172;
    v90 = v173;
    v92 = v170;
    v93 = v174;
    (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v170, v173, v174);
    if (qword_1007F1130 != -1)
      swift_once(&qword_1007F1130, sub_1000BEC28);
    v94 = qword_1008517B8;
    swift_bridgeObjectRetain(qword_1008517B8);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x72476E6769736564, 0xEB00000000416469, v92, 0, v94, a7, a8, a9, a10, a11, a12);
    goto LABEL_21;
  }
  (*(void (**)(char *, unint64_t))(v62 + 96))(v25, v61);
  v63 = v157;
  v64 = v158;
  v65 = v159;
  v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v157 + 32))(v158, v25, v159);
  v67 = ProductMediaMetadata.platform.getter(v66);
  v68 = v160;
  MediaPlatform.appPlatform.getter(v67);
  v69 = swift_release(v67);
  v70 = (*(uint64_t (**)(char *, uint64_t, __n128))(v161 + 88))(v68, v162, v69);
  v72 = v173;
  v71 = v174;
  v73 = v172;
  v74 = v170;
  if ((_DWORD)v70 == enum case for AppPlatform.phone(_:))
    goto LABEL_24;
  if ((_DWORD)v70 == enum case for AppPlatform.pad(_:))
  {
    v75 = ProductMediaMetadata.hasPortraitMedia.getter(v70);
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v74, v72, v71);
    if ((v75 & 1) != 0)
    {
      if (qword_1007F14E8 != -1)
        swift_once(&qword_1007F14E8, sub_1001943FC);
      v76 = qword_1007FE980;
      swift_bridgeObjectRetain(qword_1007FE980);
      v77 = 0xEB00000000446469;
      v78 = 0x72476E6769736564;
      v79 = v74;
      v80 = a7;
      v81 = a8;
      v82 = a9;
      v83 = a10;
      v84 = a11;
      v85 = a12;
      goto LABEL_52;
    }
    goto LABEL_48;
  }
  if ((_DWORD)v70 == enum case for AppPlatform.messages(_:))
  {
LABEL_24:
    v110 = ProductMediaMetadata.hasPortraitMedia.getter(v70);
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v74, v72, v71);
    if ((v110 & 1) != 0)
    {
      if (qword_1007F2B18 != -1)
        swift_once(&qword_1007F2B18, sub_1004523C4);
      v76 = qword_1008107D8;
      swift_bridgeObjectRetain(qword_1008107D8);
      v77 = 0x8000000100645670;
      v80 = a7;
      v81 = a8;
      v82 = a9;
      v83 = a10;
      v84 = a11;
      v85 = a12;
      v78 = 0xD000000000000017;
      v79 = v74;
      goto LABEL_52;
    }
    goto LABEL_48;
  }
  if ((_DWORD)v70 == enum case for AppPlatform.watch(_:))
  {
    (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v170, v173, v174);
    if (qword_1007F1B28 != -1)
      swift_once(&qword_1007F1B28, sub_1002DC3D0);
    v76 = qword_1008063A0;
    swift_bridgeObjectRetain(qword_1008063A0);
    v78 = 0x72476E6769736564;
    v77 = 0xEF68637461576469;
    goto LABEL_51;
  }
  if ((_DWORD)v70 == enum case for AppPlatform.tv(_:)
    || (_DWORD)v70 == enum case for AppPlatform.mac(_:)
    || (_DWORD)v70 == enum case for AppPlatform.vision(_:))
  {
    (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v170, v173, v174);
LABEL_48:
    if (qword_1007F1130 != -1)
      swift_once(&qword_1007F1130, sub_1000BEC28);
    v76 = qword_1008517B8;
    swift_bridgeObjectRetain(qword_1008517B8);
    v78 = 0x72476E6769736564;
    v77 = 0xEB00000000416469;
LABEL_51:
    v79 = v74;
    v80 = a7;
    v81 = a8;
    v82 = a9;
    v83 = a10;
    v84 = a11;
    v85 = a12;
LABEL_52:
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(v78, v77, v79, 0, v76, v80, v81, v82, v83, v84, v85);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    goto LABEL_53;
  }
  v144 = v166;
  *(_QWORD *)&v178 = v166;
  v145 = v165;
  v170 = (char *)(v165 + *(int *)(v163 + 48));
  v146 = (uint64_t)v170;
  sub_1000207A8(v175, v165);
  sub_1000207A8((uint64_t)v164, v146);
  v169 = sub_1000CB84C();
  swift_retain(v144);
  v147 = v52;
  v148 = (uint64_t)v170;
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v147, v145, v170, v167, &type metadata for GenericPageGridProvider, v169, a7, a8, a9, a10, a11, a12);
  v149 = swift_release(v144);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v64, v65, v149);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v71);
  sub_100011088(v175, &qword_1007F4A60);
  sub_100011088(v148, &qword_1007F4A68);
  sub_100011088(v145, &qword_1007F4A68);
  return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v160, v162);
}

uint64_t sub_100356E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>, double a13@<D5>)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a6;
  v45 = a5;
  v48 = a4;
  v46 = a7;
  v22 = type metadata accessor for Shelf.ContentType(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v26);
  v28 = (char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v43 - v30;
  v33 = (char *)&v43 + *(int *)(v32 + 48) - v30;
  sub_1000207A8(a2, (uint64_t)&v43 - v30);
  sub_1000207A8(a3, (uint64_t)v33);
  KeyPath = swift_getKeyPath(&unk_100686410);
  v35 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v47 = a1;
  ReadOnlyLens.subscript.getter(KeyPath, v35);
  v36 = swift_release(KeyPath);
  if ((*(unsigned int (**)(char *, uint64_t, __n128))(v23 + 88))(v25, v22, v36) == enum case for Shelf.ContentType.productBadge(_:))
  {
    v49 = v45;
    v50 = v44;
    v37 = (uint64_t)&v28[*(int *)(v26 + 48)];
    sub_1000207A8((uint64_t)v31, (uint64_t)v28);
    sub_1000207A8((uint64_t)v33, v37);
    v38 = sub_1003572C8();
    PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v47, v28, v37, v48, &type metadata for ProductPageGridProvider, v38, a8, a9, a10, a11, a12, a13);
    sub_100011088((uint64_t)v31, &qword_1007F4A60);
    sub_100011088(v37, &qword_1007F4A68);
    return sub_100011088((uint64_t)v28, &qword_1007F4A68);
  }
  else
  {
    v40 = v45;
    v49 = v45;
    v41 = (uint64_t)&v28[*(int *)(v26 + 48)];
    sub_1000207A8((uint64_t)v31, (uint64_t)v28);
    sub_1000207A8((uint64_t)v33, v41);
    v42 = sub_1000CB84C();
    swift_retain(v40);
    PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v47, v28, v41, v48, &type metadata for GenericPageGridProvider, v42, a8, a9, a10, a11, a12, a13);
    swift_release(v40);
    sub_100011088((uint64_t)v31, &qword_1007F4A60);
    sub_100011088(v41, &qword_1007F4A68);
    sub_100011088((uint64_t)v28, &qword_1007F4A68);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
}

uint64_t sub_100357120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_1003572C8();
  return PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1003571D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_1003572C8();
  return PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_100357280(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10035731C();
  return PageGridCaching<>.invalidateCache()(a1, v4, a2);
}

uint64_t sub_1003572B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t *v11;

  return sub_100355EA8(a1, a2, a3, a4, *v11, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1003572C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t *v11;

  return sub_100356E30(a1, a2, a3, a4, *v11, v11[1], a5, a6, a7, a8, a9, a10, a11);
}

unint64_t sub_1003572C8()
{
  unint64_t result;

  result = qword_100808F80;
  if (!qword_100808F80)
  {
    result = swift_getWitnessTable(&unk_1006863A0, &type metadata for ProductPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_100808F80);
  }
  return result;
}

unint64_t sub_10035731C()
{
  unint64_t result;

  result = qword_100808F88;
  if (!qword_100808F88)
  {
    result = swift_getWitnessTable(&unk_100686378, &type metadata for ProductPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_100808F88);
  }
  return result;
}

uint64_t sub_100357360()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  _QWORD v44[5];
  _QWORD v45[3];
  void *v46;
  void *v47;
  _QWORD v48[6];

  v40 = type metadata accessor for PlatformSelectorViewLayout.Metrics.AccessoryAlignment(0);
  v39 = *(_QWORD *)(v40 - 8);
  v0 = __chkstk_darwin(v40);
  v41 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for FontSource(0, v0);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticDimension(0);
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v43 = (char *)&v36 - v9;
  v11 = __chkstk_darwin(v10);
  v42 = (char *)&v36 - v12;
  v13 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v11);
  sub_100045464(v13, qword_100808F90);
  v38 = sub_1000117A8(v13, (uint64_t)qword_100808F90);
  v48[3] = &type metadata for Double;
  v48[4] = &protocol witness table for Double;
  v48[0] = 0x4024000000000000;
  if (qword_1007F2300 != -1)
    swift_once(&qword_1007F2300, sub_1004147D0);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_1000117A8(v14, (uint64_t)qword_100854DE8);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16(v5, v15, v14);
  v17 = enum case for FontSource.useCase(_:);
  v18 = (void (*)(char *, uint64_t, uint64_t))v3[13];
  v18(v5, enum case for FontSource.useCase(_:), v2);
  v46 = (void *)v2;
  v47 = &protocol witness table for FontSource;
  v19 = sub_1000117C0(v45);
  v20 = (void (*)(_QWORD *, char *, uint64_t))v3[2];
  v20(v19, v5, v2);
  StaticDimension.init(_:scaledLike:)(v45, 20.0);
  v21 = (void (*)(char *, uint64_t))v3[1];
  v21(v5, v2);
  v16(v5, v15, v14);
  v18(v5, v17, v2);
  v46 = (void *)v2;
  v47 = &protocol witness table for FontSource;
  v22 = sub_1000117C0(v45);
  v20(v22, v5, v2);
  StaticDimension.init(_:scaledLike:)(v45, 22.0);
  v21(v5, v2);
  v16(v5, v15, v14);
  v18(v5, v17, v2);
  v46 = (void *)v2;
  v47 = &protocol witness table for FontSource;
  v23 = sub_1000117C0(v45);
  v20(v23, v5, v2);
  v24 = v37;
  StaticDimension.init(_:scaledLike:)(v45, 10.0);
  v21(v5, v2);
  v47 = &protocol witness table for Double;
  v46 = &type metadata for Double;
  v45[0] = 0x4024000000000000;
  v25 = v24;
  if (qword_1007F1D40 != -1)
    swift_once(&qword_1007F1D40, sub_10035774C);
  objc_msgSend((id)qword_100808FA8, "contentInsets");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, enum case for PlatformSelectorViewLayout.Metrics.AccessoryAlignment.inline(_:), v40);
  v44[3] = &type metadata for Double;
  v44[4] = &protocol witness table for Double;
  v44[0] = 0x402C000000000000;
  return PlatformSelectorViewLayout.Metrics.init(badgeHorizontalPadding:textSpaceWhenInline:textSpaceWhenExclusiveLine:badgeSpaceExclusiveLine:accessoryHorizontalPadding:accessoryContentInsets:accessoryAlignment:bottomSpacer:)(v48, v42, v43, v25, v45, v34, v44, v27, v29, v31, v33);
}

uint64_t sub_10035774C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for SystemImage.chevronDown(_:), v0);
  v4 = static SystemImage.load(_:with:)(v3, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100808FA8 = v4;
  return result;
}

uint64_t sub_1003577EC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  result = static UIColor.secondaryText.getter(v0);
  qword_100853FF0 = result;
  return result;
}

char *sub_10035782C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  char *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  char *v59;
  uint64_t *v60;
  id v61;
  id v62;
  _BYTE v63[12];
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t, uint64_t);
  char *v68;
  objc_class *ObjectType;
  uint64_t v70;
  char v71[56];
  objc_super v72;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v13);
  v15 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_numberOfBadges] = 0;
  v16 = &v4[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_didSelectHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = qword_1007F2300;
  v68 = v4;
  if (v17 != -1)
    swift_once(&qword_1007F2300, sub_1004147D0);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_1000117A8(v18, (uint64_t)qword_100854DE8);
  v20 = *(_QWORD *)(v18 - 8);
  v67 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
  v65 = v19;
  v67(v15, v19, v18);
  v21 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v21(v15, 0, 1, v18);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 104);
  v64 = enum case for DirectionalTextAlignment.none(_:);
  v66 = v9;
  v23(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  v26 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v27 = v68;
  *(_QWORD *)&v68[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel] = v26;
  v28 = v19;
  v29 = v67;
  v67(v15, v28, v18);
  v21(v15, 0, 1, v18);
  v30 = v22;
  v31 = v66;
  v23(v12, v30, v66);
  v32 = objc_allocWithZone(v24);
  *(_QWORD *)&v27[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v29(v15, v65, v18);
  v21(v15, 0, 1, v18);
  v23(v12, v64, v31);
  v33 = objc_allocWithZone(v24);
  *(_QWORD *)&v27[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v34 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v27[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_accessoryImageView] = v34;

  v72.receiver = v27;
  v72.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v72, "initWithFrame:", a1, a2, a3, a4);
  v36 = sub_10000DF3C(&qword_1007F5840);
  inited = swift_initStackObject(v36, v71);
  *(_OWORD *)(inited + 16) = xmmword_1006710E0;
  v38 = *(uint64_t **)&v35[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel];
  *(_QWORD *)(inited + 32) = v38;
  v39 = *(void **)&v35[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel];
  *(_QWORD *)(inited + 40) = v39;
  v40 = *(void **)&v35[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel];
  *(_QWORD *)(inited + 48) = v40;
  v70 = inited;
  specialized Array._endMutation()(inited);
  v41 = v70;
  v42 = v70 & 0xC000000000000001;
  if ((v70 & 0xC000000000000001) != 0)
  {
    v59 = v35;
    v60 = v38;
    v61 = v39;
    v62 = v40;
    v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
LABEL_6:
    v38 = &qword_1007F1000;
    if (qword_1007F1D48 == -1)
      goto LABEL_7;
    goto LABEL_20;
  }
  if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v27 = (char *)*(id *)(v70 + 32);
    v43 = v35;
    v44 = v38;
    v45 = v39;
    v46 = v40;
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  swift_once(&qword_1007F1D48, sub_1003577EC);
LABEL_7:
  objc_msgSend(v27, "setTextColor:", qword_100853FF0);
  objc_msgSend(v35, "addSubview:", v27);

  if (v42)
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v41);
  else
    v47 = *(id *)(v41 + 40);
  v48 = v47;
  if (v38[425] != -1)
    swift_once(&qword_1007F1D48, sub_1003577EC);
  objc_msgSend(v48, "setTextColor:", qword_100853FF0);
  objc_msgSend(v35, "addSubview:", v48);

  if (v42)
    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v41);
  else
    v49 = *(id *)(v41 + 48);
  v50 = v49;
  if (v38[425] != -1)
    swift_once(&qword_1007F1D48, sub_1003577EC);
  objc_msgSend(v50, "setTextColor:", qword_100853FF0);
  objc_msgSend(v35, "addSubview:", v50);
  swift_bridgeObjectRelease(v41);

  v51 = *(void **)&v35[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_accessoryImageView];
  objc_msgSend(v51, "setTintColor:", qword_100853FF0);
  objc_msgSend(v35, "addSubview:", v51);
  v52 = v35;
  objc_msgSend(v52, "layoutMargins");
  v54 = v53;
  objc_msgSend(v52, "layoutMargins");
  v56 = v55;
  objc_msgSend(v52, "layoutMargins");
  objc_msgSend(v52, "setLayoutMargins:", v54, 0.0, v56);

  v57 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v52, "didTapSelectorView");
  objc_msgSend(v52, "addGestureRecognizer:", v57);

  return v52;
}

uint64_t sub_100357F28()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  __n128 v25;
  double v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  _QWORD v36[5];
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  v3 = __chkstk_darwin(v2);
  v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlatformSelectorViewLayout(0);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BadgeDisplayStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v29 - v18;
  v37.receiver = v0;
  v37.super_class = ObjectType;
  v31 = ObjectType;
  objc_msgSendSuper2(&v37, "layoutSubviews", v17);
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_numberOfBadges], v0, 0, 1);
  v20 = sub_1003581DC((uint64_t)v19);
  sub_100358308((uint64_t)v20);
  if (qword_1007F1D38 != -1)
    swift_once(&qword_1007F1D38, sub_100357360);
  v21 = sub_1000117A8(v5, (uint64_t)qword_100808F90);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v19, v12);
  v36[3] = type metadata accessor for DynamicTypeLabel(0);
  v36[4] = &protocol witness table for UILabel;
  v36[0] = v20;
  v22 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_accessoryImageView];
  v35[3] = sub_100019574(0, (unint64_t *)&qword_1007FE190, UIImageView_ptr);
  v35[4] = &protocol witness table for UIView;
  v35[0] = v22;
  v23 = v20;
  v24 = v22;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v8, v15, v36, v35, v25);
  v26 = LayoutMarginsAware<>.layoutFrame.getter(v31);
  v27 = v32;
  PlatformSelectorViewLayout.placeChildren(relativeTo:in:)(v0, v26);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v34);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
}

id sub_1003581DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  void (*v10)(char *, uint64_t);
  id v11;
  uint64_t v12;

  v3 = type metadata accessor for BadgeDisplayStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for BadgeDisplayStyle.left(_:))
  {
    v8 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel;
    return *(id *)(v1 + v8);
  }
  if (v7 == enum case for BadgeDisplayStyle.above(_:))
  {
    v8 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
    return *(id *)(v1 + v8);
  }
  if (v7 == enum case for BadgeDisplayStyle.inline(_:))
  {
    v8 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel;
    return *(id *)(v1 + v8);
  }
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel));
  v10(v6, v3);
  return v11;
}

id sub_100358308(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  char v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel);
  type metadata accessor for DynamicTypeLabel(0);
  v4 = v3;
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  objc_msgSend(v4, "setHidden:", (v5 & 1) == 0);
  v6 = objc_retain(*(id *)(v1
                         + OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel));
  v7 = static NSObject.== infix(_:_:)(a1, v6);

  objc_msgSend(v6, "setHidden:", (v7 & 1) == 0);
  v8 = objc_retain(*(id *)(v1
                         + OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel));
  LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v8);

  return objc_msgSend(v8, "setHidden:", (a1 & 1) == 0);
}

uint64_t sub_10035842C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = type metadata accessor for AppPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MediaPlatform.appPlatform.getter(v4);
  v8 = AppPlatform.rawValue.getter(v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v8;
  a1[1] = v10;
  return result;
}

uint64_t type metadata accessor for PlatformSelectorView()
{
  return objc_opt_self(_TtC22SubscribePageExtension20PlatformSelectorView);
}

uint64_t sub_100358610(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  NSString *v22;
  id v23;
  NSString *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[112];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F2300 != -1)
    swift_once(&qword_1007F2300, sub_1004147D0);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100854DE8);
  v11 = objc_msgSend(a2, "traitCollection");
  v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v10, v11);

  v30 = sub_100019574(0, (unint64_t *)&unk_1007F4D50, NSAttributedString_ptr);
  v31 = a1;
  v13 = objc_msgSend(a2, "traitCollection", swift_bridgeObjectRetain(a1).n128_f64[0]);
  if (qword_1007F1D38 != -1)
    swift_once(&qword_1007F1D38, sub_100357360);
  v15 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v14);
  sub_1000117A8(v15, (uint64_t)qword_100808F90);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v33);
  v16 = v34;
  v17 = v35;
  sub_100011064(v33, v34);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  v18 = AnyDimension.value(in:rounded:)(a2, v7, v16, v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v19, v32);
  *(_OWORD *)(inited + 16) = xmmword_10066F870;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v21 = qword_1007F1D48;
  v22 = NSFontAttributeName;
  v23 = v12;
  v24 = NSForegroundColorAttributeName;
  if (v21 != -1)
    swift_once(&qword_1007F1D48, sub_1003577EC);
  v25 = (void *)qword_100853FF0;
  *(_QWORD *)(inited + 104) = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v25;
  v26 = v25;
  v27 = sub_1003699BC(inited);
  v28 = NSAttributedString.init(images:for:adjustsImageSizeForAccessibilityContentSizeCategory:interItemSpacing:defaultAttributes:imagesShouldRenderAsTemplates:)(v31, v13, 1, v27, 0, v18);

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v33);
  return v28;
}

double sub_1003588F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, char a7, void *a8, __n128 a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  __n128 v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  objc_class *v56;
  id v57;
  void *v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  id v68;
  __n128 v69;
  char *v70;
  id v71;
  double v72;
  double v73;
  double v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  _QWORD v99[5];
  _QWORD v100[3];
  objc_class *v101;
  void *v102;

  v98 = a8;
  v84 = a4;
  v83 = a3;
  v14 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, a9);
  v90 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v91 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PlatformSelectorViewLayout(0);
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  __chkstk_darwin(v16);
  v94 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for DirectionalTextAlignment(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v88 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v19);
  v85 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for BadgeDisplayStyle(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v89 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v97 = (char *)&v82 - v23;
  v82 = type metadata accessor for FloatingPointRoundingRule(0);
  v24 = *(_QWORD *)(v82 - 8);
  v25 = __chkstk_darwin(v82);
  v27 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) != 0)
  {
    if (qword_1007F1D40 != -1)
      swift_once(&qword_1007F1D40, sub_10035774C);
    objc_msgSend((id)qword_100808FA8, "size");
    v28 = v25.n128_f64[0];
  }
  else
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v81 = a2;
      else
        v81 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v29 = _CocoaArrayWrapper.endIndex.getter(v81);
      v25 = swift_bridgeObjectRelease(a2);
    }
    else
    {
      v29 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v28 = 0.0;
    if (v29 > 1)
    {
      type metadata accessor for MediaPlatform(0, v25);
      v30 = sub_10000DF3C(&qword_1007F5840);
      v31 = swift_allocObject(v30, 40, 7);
      *(_OWORD *)(v31 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v31 + 32) = a1;
      v100[0] = v31;
      specialized Array._endMutation()(v31);
      v32 = v100[0];
      v33 = swift_retain(a1);
      v34 = static MediaPlatform.systemImages(platforms:)(v32, v33);
      swift_bridgeObjectRelease(v32);
      goto LABEL_10;
    }
  }
  v83 = a5;
  v84 = a6;
  type metadata accessor for MediaPlatform(0, v25);
  v34 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if (qword_1007F1D38 != -1)
    swift_once(&qword_1007F1D38, sub_100357360);
  v36 = v14;
  v37 = sub_1000117A8(v14, (uint64_t)qword_100808F90);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v100);
  v38 = (uint64_t)v101;
  v39 = v102;
  sub_100011064(v100, (uint64_t)v101);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v38);
  v40 = AnyDimension.value(in:rounded:)(v98, v27, v38, v39);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v82);
  sub_10035994C(v34, v40);
  v42 = v41;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v100);
  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v80 = v34;
    else
      v80 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v43 = _CocoaArrayWrapper.endIndex.getter(v80);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v43 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v45 = v97;
  v44 = v98;
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(v43, v98, v42, 0);
  v46 = (void *)sub_100358610(v34, v44);
  v47 = swift_bridgeObjectRelease(v34);
  v48 = v84;
  v84 = v46;
  v49 = (char *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v83, v48, v46, v37, v45, v44, v47);
  v50 = v36;
  if (qword_1007F2300 != -1)
    swift_once(&qword_1007F2300, sub_1004147D0);
  v51 = type metadata accessor for FontUseCase(0);
  v52 = sub_1000117A8(v51, (uint64_t)qword_100854DE8);
  v53 = *(_QWORD *)(v51 - 8);
  v54 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v85, v52, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v51);
  v55 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v88, enum case for DirectionalTextAlignment.none(_:), v87);
  v56 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v57 = objc_allocWithZone(v56);
  v58 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v54, 0, 4, 0, 0, v55, 0, 0);
  objc_msgSend(v58, "setAttributedText:", v49);
  v88 = v49;
  if (qword_1007F1D40 != -1)
    swift_once(&qword_1007F1D40, sub_10035774C);
  objc_msgSend((id)qword_100808FA8, "size");
  v60 = v59;
  v61 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  v62 = LayoutViewPlaceholder.init(representing:)(v28, v60);
  v63 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v91, v37, v50);
  v64 = v92;
  v65 = v89;
  v66 = v97;
  v67 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v89, v97, v93);
  v101 = v56;
  v102 = &protocol witness table for UILabel;
  v100[0] = v58;
  v99[3] = v61;
  v99[4] = &protocol witness table for LayoutViewPlaceholder;
  v99[0] = v62;
  v68 = v58;
  v69 = swift_retain(v62);
  v70 = v94;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v63, v65, v100, v99, v69);
  v71 = v98;
  v72 = CGSize.subtracting(insets:)(objc_msgSend(v98, "pageMarginInsets"));
  v74 = v73;
  v75 = sub_100359A44();
  v76 = v96;
  dispatch thunk of Measurable.measurements(fitting:in:)(v71, v96, v75, v72, v74);
  v78 = CGSize.adding(outsets:)(v77);

  swift_release(v62);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v70, v76);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v67);
  return v78;
}

uint64_t sub_100359094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, id a8, unsigned __int8 a9, char *a10)
{
  uint64_t v10;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(void);
  uint64_t v63;
  int v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  __n128 v71;
  void *v72;
  char *v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id ObjectType;
  id v105;
  char *v106;
  char *v107;
  uint64_t v108;
  _OWORD v109[2];
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  v103 = a5;
  v106 = a10;
  ObjectType = (id)swift_getObjectType();
  v96 = type metadata accessor for AutomationSemantics(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v92 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v95 = (char *)&v89 - v20;
  v21 = type metadata accessor for BadgeDisplayStyle(0);
  v108 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v107 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v89 - v24;
  v26 = type metadata accessor for FloatingPointRoundingRule(0);
  v100 = *(_QWORD *)(v26 - 8);
  v101 = v26;
  v27 = __chkstk_darwin(v26);
  v99 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v102) = a7;
  if ((a7 & 1) == 0)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v33 = a2;
      else
        v33 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      v27 = swift_bridgeObjectRelease(a2);
      if (v34 > 1)
        goto LABEL_4;
    }
    else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
    {
LABEL_4:
      type metadata accessor for MediaPlatform(0, v27);
      v29 = sub_10000DF3C(&qword_1007F5840);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v30 + 32) = a1;
      *(_QWORD *)&v110 = v30;
      specialized Array._endMutation()(v30);
      v10 = v110;
      v31 = swift_retain(a1);
      v32 = static MediaPlatform.systemImages(platforms:)(v10, v31);
      swift_bridgeObjectRelease(v10);
      v103 = a3;
      a6 = a4;
      goto LABEL_10;
    }
  }
  type metadata accessor for MediaPlatform(0, v27);
  v32 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0)
      v87 = v32;
    else
      v87 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v36 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v36 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v93 = a2;
  v105 = a8;
  if (v36)
  {
    *(_QWORD *)&v110 = _swiftEmptyArrayStorage;
    v37 = &v110;
    specialized ContiguousArray.reserveCapacity(_:)(v36);
    if (v36 < 0)
    {
      __break(1u);
LABEL_52:
      swift_once(&qword_1007F1D40, sub_10035774C);
      goto LABEL_23;
    }
    v38 = 0;
    do
    {
      if ((v32 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v32);
      else
        v39 = *(id *)(v32 + 8 * v38 + 32);
      v40 = v39;
      ++v38;
      v41 = objc_msgSend(v39, "imageWithRenderingMode:", 2);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v43 = *(_QWORD *)(v110 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
      specialized ContiguousArray._endMutation()(v44);
    }
    while (v36 != v38);
    v10 = v110;
    swift_bridgeObjectRelease(v32);
    a8 = v105;
  }
  else
  {
    swift_bridgeObjectRelease(v32);
    v10 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v37 = *(__int128 **)&v106[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_accessoryImageView];
  if ((v102 & 1) == 0)
  {
    v45 = 0;
    goto LABEL_25;
  }
  if (qword_1007F1D40 != -1)
    goto LABEL_52;
LABEL_23:
  v45 = (id)qword_100808FA8;
LABEL_25:
  objc_msgSend(v37, "setImage:", v45);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v88 = v10;
    else
      v88 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v46 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v46 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v106[OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_numberOfBadges] = v46;
  ObjectType = (id)sub_100358610(v10, a8);
  if (qword_1007F1D38 != -1)
    swift_once(&qword_1007F1D38, sub_100357360);
  v91 = a9;
  v48 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v47);
  v102 = sub_1000117A8(v48, (uint64_t)qword_100808F90);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(&v110);
  v49 = *((_QWORD *)&v111 + 1);
  v50 = v112;
  sub_100011064(&v110, *((uint64_t *)&v111 + 1));
  v51 = v99;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49);
  v52 = AnyDimension.value(in:rounded:)(a8, v51, v49, v50);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v51, v101);
  sub_10035994C(v10, v52);
  v54 = v53;
  swift_bridgeObjectRelease(v10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v110);
  v55 = sub_10000DF3C(&qword_100809010);
  v56 = v108;
  v57 = *(_QWORD *)(v108 + 72);
  v58 = *(unsigned __int8 *)(v108 + 80);
  v59 = (v58 + 32) & ~v58;
  v60 = swift_allocObject(v55, v59 + 3 * v57, v58 | 7);
  *(_OWORD *)(v60 + 16) = xmmword_10066F860;
  v90 = v60;
  v61 = v60 + v59;
  v62 = *(void (**)(void))(v56 + 104);
  LODWORD(v101) = enum case for BadgeDisplayStyle.above(_:);
  ((void (*)(uint64_t))v62)(v61);
  v98 = enum case for BadgeDisplayStyle.inline(_:);
  ((void (*)(uint64_t))v62)(v61 + v57);
  v63 = v61 + 2 * v57;
  *(_QWORD *)v63 = v54;
  *(_BYTE *)(v63 + 8) = 0;
  v64 = enum case for BadgeDisplayStyle.left(_:);
  v62();
  v65 = v56;
  v99 = (char *)OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
  v100 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel;
  v97 = OBJC_IVAR____TtC22SubscribePageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v67 = 3;
  v89 = v61;
  v66(v25, v61, v21);
  while (1)
  {
    v73 = v107;
    v66(v107, (uint64_t)v25, v21);
    v74 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v73, v21);
    if (v74 == v64)
    {
      v68 = v106;
      v69 = v100;
LABEL_31:
      v70 = *(id *)&v68[v69];
      goto LABEL_32;
    }
    if (v74 == (_DWORD)v101)
    {
      v68 = v106;
      v69 = (uint64_t)v99;
      goto LABEL_31;
    }
    if (v74 == v98)
    {
      v68 = v106;
      v69 = v97;
      goto LABEL_31;
    }
    v70 = *(id *)&v99[(_QWORD)v106];
    (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v21);
LABEL_32:
    v71 = swift_bridgeObjectRetain(a6);
    v72 = (void *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v103, a6, ObjectType, v102, v25, v105, v71);
    objc_msgSend(v70, "setAttributedText:", v72, swift_bridgeObjectRelease(a6).n128_f64[0]);

    v65 = v108;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v25, v21);
    v61 += v57;
    if (!--v67)
      break;
    v66(v25, v61, v21);
  }
  v75 = v90;
  swift_setDeallocating(v90);
  swift_arrayDestroy(v89, *(_QWORD *)(v75 + 16), v21);
  swift_deallocClassInstance(v75, 32, 7);
  if ((v91 & 1) != 0)
  {
    objc_msgSend(v105, "pageMarginInsets");
    objc_msgSend(v106, "setLayoutMargins:");
  }
  objc_msgSend(v106, "setNeedsLayout", v89);
  v110 = 0u;
  v111 = 0u;
  memset(v109, 0, sizeof(v109));
  v76 = v92;
  static AutomationSemantics.productPage(elementName:id:parentId:)(0xD000000000000010, 0x80000001006457A0, &v110, v109);
  sub_1000131E0((uint64_t)v109);
  sub_1000131E0((uint64_t)&v110);
  v77 = v93;
  *(_QWORD *)&v110 = v93;
  *((_QWORD *)&v110 + 1) = sub_10035842C;
  *(_QWORD *)&v111 = 0;
  swift_bridgeObjectRetain(v93);
  v78 = sub_10000DF3C(&qword_100809018);
  v79 = sub_100359A8C();
  v80 = BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v78, v79);
  v82 = v81;
  swift_bridgeObjectRelease(v77);
  *((_QWORD *)&v111 + 1) = &type metadata for String;
  *(_QWORD *)&v110 = v80;
  *((_QWORD *)&v110 + 1) = v82;
  v83 = v95;
  AutomationSemantics.attribute(key:value:)(0x6D726F6674616C70, 0xE900000000000073, &v110);
  v84 = *(void (**)(char *, uint64_t))(v94 + 8);
  v85 = v96;
  v84(v76, v96);
  sub_1000131E0((uint64_t)&v110);
  UIView.setAutomationSemantics(_:)(v83);

  return ((uint64_t (*)(char *, uint64_t))v84)(v83, v85);
}

uint64_t sub_10035994C(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      objc_msgSend(v8, "size");
      v11 = v10;

      v7 = v7 + v11 + a2;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

unint64_t sub_100359A44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809008;
  if (!qword_100809008)
  {
    v1 = type metadata accessor for PlatformSelectorViewLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PlatformSelectorViewLayout, v1);
    atomic_store(result, (unint64_t *)&qword_100809008);
  }
  return result;
}

unint64_t sub_100359A8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_100809020;
  if (!qword_100809020)
  {
    v1 = sub_100010EF8(&qword_100809018);
    v2 = sub_100359AF0();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> LazyMapSequence<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_100809020);
  }
  return result;
}

unint64_t sub_100359AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809028;
  if (!qword_100809028)
  {
    v1 = sub_100010EF8(&qword_100809030);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100809028);
  }
  return result;
}

uint64_t sub_100359B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void (*v25)(char *, uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t result;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v63 = a2;
  v5 = sub_10000DF3C(&qword_100809038);
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  __chkstk_darwin(v5);
  v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_100809040);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  __chkstk_darwin(v7);
  v55 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_100809048);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_100809050);
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ItemLayoutContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TodayCard(0);
  v20 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v21 = ItemLayoutContext.typedModel<A>(as:)(&v65, v19, v19, v20);
  if (v65)
  {
    v61 = v65;
    v22 = TodayCard.media.getter(v21);
    v23 = TodayCardMedia.kind.getter();
    v24 = swift_release(v22);
    v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
    v62 = a1;
    v25((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v15, v24);
    v26 = *(unsigned __int8 *)(v16 + 80);
    v27 = (v26 + 16) & ~v26;
    v28 = (v17 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject(&unk_100739E90, v28 + 8, v26 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v29 + v27, v18, v15);
    *(_QWORD *)(v29 + v28) = a3;
    switch(v23)
    {
      case 0:
        v30 = swift_allocObject(&unk_100739EE0, 32, 7);
        *(_QWORD *)(v30 + 16) = sub_10035A2E8;
        *(_QWORD *)(v30 + 24) = v29;
        swift_retain(a3);
        swift_retain(v29);
        v31 = sub_10000DF3C(&qword_100809058);
        v32 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
        v33 = v55;
        ReusableCellRegistration.init(reuseIdentifier:configurationHandler:)(0xD000000000000011, 0x80000001006458E0, sub_10035A374, v30, v31, v32);
        v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:in:)(v33, v62, v31, v32);
        swift_release(v29);
        v35 = swift_release(v61);
        v37 = v56;
        v36 = v57;
        goto LABEL_5;
      case 1:
        v41 = swift_allocObject(&unk_100739F30, 32, 7);
        *(_QWORD *)(v41 + 16) = sub_10035A2E8;
        *(_QWORD *)(v41 + 24) = v29;
        v42 = type metadata accessor for BrandedAppTodayBrickCollectionViewCell(0);
        swift_retain(a3);
        swift_retain(v29);
        v43 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
        ReusableCellRegistration.init(reuseIdentifier:configurationHandler:)(0xD00000000000001FLL, 0x8000000100645900, sub_10035A45C, v41, v42, v43);
        v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:in:)(v14, v62, v42, v43);
        swift_release(v29);
        v44 = swift_release(v61);
        (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v14, v52, v44);
        goto LABEL_8;
      case 7:
        v45 = swift_allocObject(&unk_100739F08, 32, 7);
        *(_QWORD *)(v45 + 16) = sub_10035A2E8;
        *(_QWORD *)(v45 + 24) = v29;
        v46 = type metadata accessor for GridTodayBrickCollectionViewCell(0);
        swift_retain(a3);
        swift_retain(v29);
        v47 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
        ReusableCellRegistration.init(reuseIdentifier:configurationHandler:)(0x6972427961646F54, 0xEE00646972476B63, sub_10035A3C4, v45, v46, v47);
        v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:in:)(v11, v62, v46, v47);
        swift_release(v29);
        v48 = swift_release(v61);
        (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v11, v54, v48);
        goto LABEL_8;
      case 8:
        v38 = swift_allocObject(&unk_100739EB8, 32, 7);
        *(_QWORD *)(v38 + 16) = sub_10035A2E8;
        *(_QWORD *)(v38 + 24) = v29;
        v39 = type metadata accessor for VideoTodayBrickCollectionViewCell(0);
        swift_retain(a3);
        swift_retain(v29);
        v40 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
        v33 = v58;
        ReusableCellRegistration.init(reuseIdentifier:configurationHandler:)(0x6972427961646F54, 0xEF6F656469566B63, sub_10035A360, v38, v39, v40);
        v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:in:)(v33, v62, v39, v40);
        swift_release(v29);
        v35 = swift_release(v61);
        v37 = v59;
        v36 = v60;
LABEL_5:
        (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v33, v36, v35);
LABEL_8:
        result = v34;
        break;
      default:
        v65 = 0;
        v66 = 0xE000000000000000;
        swift_retain(a3);
        _StringGuts.grow(_:)(40);
        v50._countAndFlagsBits = 0xD000000000000026;
        v50._object = (void *)0x80000001006458B0;
        String.append(_:)(v50);
        v64 = v23;
        _print_unlocked<A, B>(_:_:)(&v64, &v65, &type metadata for TodayCardMedia.Kind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v65, v66, "SubscribePageExtension/AnyTodayBrickCollectionViewCell+ShelfComponentView.swift", 79, 2, 77, 0);
        goto LABEL_11;
    }
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005ALL, 0x8000000100645850, "SubscribePageExtension/AnyTodayBrickCollectionViewCell+ShelfComponentView.swift", 79, 2, 22, 0);
LABEL_11:
    __break(1u);
  }
  return result;
}

uint64_t sub_10035A184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v9 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v13 = type metadata accessor for ItemLayoutContext(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a5, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  v15 = *(_QWORD *)(a2 + 24);
  dispatch thunk of ShelfComponentView.itemLayoutContext.setter(v11, ObjectType, v15);
  return dispatch thunk of ShelfComponentView.applyData(from:asPartOf:)(a5, a6, ObjectType, v15);
}

uint64_t sub_10035A274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ItemLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10035A2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for ItemLayoutContext(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_10035A184(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10035A360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10035A3D8(a1, a2, a3, (unint64_t *)&unk_10080E1D0, type metadata accessor for VideoTodayBrickCollectionViewCell);
}

uint64_t sub_10035A374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v7)(uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v8;

  v7 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16);
  v8 = sub_10035A470();
  return v7(a1, v8, a2, a3);
}

uint64_t sub_10035A3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10035A3D8(a1, a2, a3, (unint64_t *)&unk_100809060, type metadata accessor for GridTodayBrickCollectionViewCell);
}

uint64_t sub_10035A3D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  v10 = sub_10000E99C(a4, a5, (uint64_t)&unk_100674004);
  return v9(a1, v10, a2, a3);
}

uint64_t sub_10035A438()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035A45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10035A3D8(a1, a2, a3, &qword_10080E1F0, type metadata accessor for BrandedAppTodayBrickCollectionViewCell);
}

unint64_t sub_10035A470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080E1E0;
  if (!qword_10080E1E0)
  {
    v1 = sub_100010EF8(&qword_100809058);
    result = swift_getWitnessTable(aL, v1);
    atomic_store(result, (unint64_t *)&qword_10080E1E0);
  }
  return result;
}

void sub_10035A4C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  id v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  void *v52;
  double v53;
  id v54;
  id v55;
  id v56;
  __n128 v57;
  double top;
  double v59;
  double left;
  double v61;
  double bottom;
  double v63;
  double right;
  __n128 v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  double v75;
  id v76;
  id v77;
  id v78;
  __n128 v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  id v96;
  double v97;
  double v98;
  double v99;
  double v100;
  id v101;
  uint64_t v102;
  char *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  void *v109;
  id v110;
  uint64_t v111;
  id v112;
  id v113;
  Class isa;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  double v130;
  id v131;
  id v132;
  id v133;
  double v134;
  double v135;
  double v136;
  double v137;
  uint64_t v138;
  void *v139;
  void *v140;
  id v141;
  id v142;
  uint64_t v143;
  void *v144;
  char *v145;
  void *Strong;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  char *v150;
  id v151;
  void *v152;
  void *v153;
  uint64_t v154;
  __n128 v155;
  uint64_t v156;
  void *v157;
  void *v158;
  id v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  __n128 v166;
  uint64_t v167;
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  double v178;
  double v179;
  id v180;
  id v181;
  double v182;
  double v183;
  double v184;
  double v185;
  double v186;
  double v187;
  double v188;
  double v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  Class v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  void *v214;
  void *v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  id v219;
  id v220;
  uint64_t v221;
  void *v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  char *v227;
  id v228;
  id v229;
  uint64_t v230;
  id v231;
  id v232;
  id v233;
  char *v234;
  id v235;
  id v236;
  char *v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  BOOL v243;

  v4 = v3;
  v8 = dispatch thunk of SearchResultsPresenter.result(at:)(a3);
  if (!v8)
    return;
  v9 = v8;
  v10 = objc_msgSend(a1, "traitCollection");
  v11 = dispatch thunk of SearchResultsPresenter.shouldResultHaveCondensedAppearance(at:in:)(a3, v10);

  v13 = type metadata accessor for AppSearchResult(0, v12);
  if (swift_dynamicCastClass(v9, v13))
  {
    v14 = type metadata accessor for ContentSearchResultCollectionViewCell();
    v15 = swift_dynamicCastClass(a2, v14);
    if (v15)
    {
      v16 = (char *)v15;
      swift_retain(v9);
      v17 = a2;
      v19 = AppSearchResult.lockup.getter(v18);
      v20 = sub_10055BAC8(v11 & 1);
      swift_release(v19);
      sub_10035B55C(v20, v16, a3, a1);

      v21 = v20;
LABEL_5:
      swift_release(v21);
      v22 = v9;
      v23 = 2;
LABEL_6:
      swift_release_n(v22, v23);
      return;
    }
    goto LABEL_73;
  }
  v24 = type metadata accessor for BundleSearchResult(0);
  if (!swift_dynamicCastClass(v9, v24))
  {
    v38 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v9, v38))
    {
      v40 = type metadata accessor for AdvertSearchResultCollectionViewCell();
      v41 = swift_dynamicCastClass(a2, v40);
      if (!v41)
        goto LABEL_73;
      v42 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController;
      v43 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
      if (v43)
      {
        v44 = (char *)v41;
        v45 = a2;
        v46 = swift_retain(v43);
        dispatch thunk of AdvertRotationController.currentAdvert.getter(&v239, v46);
        swift_release(v43);
        v47 = sub_10000DF3C(&qword_10080C0D0);
        v48 = type metadata accessor for MixedMediaLockup(0);
        if ((swift_dynamicCast(&v238, &v239, v47, v48, 6) & 1) != 0)
        {
          v221 = v42;
          v227 = v44;
          v233 = v238;
          v49 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
          v51 = v50;
          v52 = *(void **)(v4 + v49);
          *(_QWORD *)&v53 = swift_unknownObjectRetain(v52).n128_u64[0];
          v55 = objc_msgSend(v54, "traitCollection", v53);
          v56 = objc_msgSend(v55, "horizontalSizeClass");

          v222 = v45;
          v223 = v52;
          if (v56 == (id)1)
          {
            objc_msgSend(*(id *)(v4 + v49), "pageMarginInsets");
            top = v57.n128_f64[0];
            left = v59;
            bottom = v61;
            right = v63;
          }
          else
          {
            top = UIEdgeInsetsZero.top;
            left = UIEdgeInsetsZero.left;
            bottom = UIEdgeInsetsZero.bottom;
            right = UIEdgeInsetsZero.right;
          }
          v110 = (id)ASKDeviceTypeGetCurrent(v57);
          v111 = *(_QWORD *)(v4
                           + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph);
          v224 = OBJC_IVAR____TtC22SubscribePageExtension36AdvertSearchResultCollectionViewCell_advertsContentView;
          v112 = *(id *)&v227[OBJC_IVAR____TtC22SubscribePageExtension36AdvertSearchResultCollectionViewCell_advertsContentView];
          v113 = objc_msgSend(v223, "traitCollection");
          v225 = v111;
          sub_100476850((uint64_t)v233, (uint64_t)v113, (uint64_t)v110, v111, v51, top, left, bottom, right);

          objc_msgSend(v227, "setNeedsLayout");
          swift_unknownObjectRelease(v223);

          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v115 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", isa);

          if (v115)
          {
            objc_msgSend(v115, "frame");
            v117 = v116;
            v119 = v118;
            v121 = v120;
            v123 = v122;

          }
          else
          {
            v117 = 0;
            v119 = 0;
            v121 = 0;
            v123 = 0;
          }
          v239 = v117;
          v240 = v119;
          v241 = v121;
          v242 = v123;
          v243 = v115 == 0;
          v138 = *(_QWORD *)(v4
                           + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
          v139 = *(void **)(v4 + v49);
          v140 = *(void **)&v227[v224];
          swift_unknownObjectRetain(v139);
          v141 = v140;
          v142 = objc_msgSend(v139, "traitCollection");
          sub_100476E10((uint64_t)v233, (uint64_t)&v239, v138, (uint64_t)v142);
          swift_unknownObjectRelease(v139);

          v143 = type metadata accessor for VideoPlaybackCoordinator(0);
          v144 = *(void **)(v111 + qword_100854088);
          if (v144)
          {
            v145 = *(char **)&v227[v224];
            Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v145[OBJC_IVAR____TtC22SubscribePageExtension30AdvertsSearchResultContentView_screenshots]+ OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
            if (Strong)
            {
              v147 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
              v148 = Strong;
            }
            else
            {
              v148 = 0;
              v147 = 0;
            }
            v149 = sub_10000E99C(&qword_100803DF0, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_100689510);
            v150 = v145;
            v151 = v144;
            v152 = v148;
            v153 = v151;
            dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v152, v147, v145, v149);

            swift_retain(v233);
            sub_10035C954(v154, v222, v4);
            v156 = Lockup.searchAd.getter(v155);
            swift_release(v233);
            v157 = *(void **)&v227[v224];
            if (v156)
            {
              v158 = (void *)objc_opt_self(UIColor);
              v159 = v157;
              v160 = objc_msgSend(v158, "clearColor");
              objc_msgSend(v159, "setBackgroundColor:", v160);

            }
            else
            {
              v161 = v157;
            }
            objc_msgSend(v157, "setNeedsLayout", sub_10003151C(v156, v225));

            objc_msgSend(v227, "setNeedsLayout");
            swift_release(v156);
            v162 = swift_allocObject(&unk_100739F58, 24, 7);
            swift_unknownObjectWeakInit(v162 + 16);
            swift_retain(v162);
            sub_10021018C((uint64_t)sub_100362054, v162);
            swift_release(v162);
            v163 = *(_QWORD *)(v4 + v221);
            if (v163)
            {
              v164 = sub_10000E99C(&qword_100809108, (uint64_t (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell, (uint64_t)&unk_10068FD14);
              v165 = v222;
              v166 = swift_retain(v163);
              dispatch thunk of AdvertRotationController.didApplyCell(_:in:)(v227, v164, a1, v166);
              swift_release(v163);
              swift_release(v9);
              swift_release(v233);

            }
            else
            {
              swift_release(v9);
              swift_release(v233);

            }
            return;
          }
          v105 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v143);
          __break(1u);
LABEL_86:
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v105);
          __break(1u);
          return;
        }

      }
      swift_release(v9);
      return;
    }
    v69 = type metadata accessor for EditorialSearchResult(0, v39);
    v70 = swift_dynamicCastClass(v9, v69);
    if (v70)
    {
      v71 = v70;
      v72 = type metadata accessor for EditorialSearchResultCollectionViewCell();
      v234 = (char *)swift_dynamicCastClass(a2, v72);
      if (v234)
      {
        v73 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        v74 = *(_BYTE **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
        swift_getObjectType();
        swift_retain(v9);
        v228 = a2;
        *(_QWORD *)&v75 = swift_unknownObjectRetain(v74).n128_u64[0];
        v77 = objc_msgSend(v76, "traitCollection", v75);
        v78 = objc_msgSend(v77, "horizontalSizeClass");

        if (v78 == (id)1)
        {
          objc_msgSend(*(id *)(v4 + v73), "pageMarginInsets");
          v80 = v79.n128_f64[0];
          v82 = v81;
          v84 = v83;
          v86 = v85;
        }
        else
        {
          v80 = UIEdgeInsetsZero.top;
          v82 = UIEdgeInsetsZero.left;
          v84 = UIEdgeInsetsZero.bottom;
          v86 = UIEdgeInsetsZero.right;
        }
        v101 = (id)ASKDeviceTypeGetCurrent(v79);
        v102 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph);
        sub_1005B1560(v71, v74, v102, *(_QWORD *)(v4+ OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkIconFetcher), *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader), v234, v80, v82, v84, v86);
        swift_unknownObjectRelease(v74);

        v103 = &v234[OBJC_IVAR____TtC22SubscribePageExtension39EditorialSearchResultCollectionViewCell_videoView];
        v104 = (void *)swift_unknownObjectWeakLoadStrong(&v234[OBJC_IVAR____TtC22SubscribePageExtension39EditorialSearchResultCollectionViewCell_videoView]);

        if (v104)
        {
          v105 = type metadata accessor for VideoPlaybackCoordinator(0);
          v106 = *(void **)(v102 + qword_100854088);
          if (!v106)
            goto LABEL_86;
          v107 = (void *)swift_unknownObjectWeakLoadStrong(v103);
          if (v107)
          {
            v108 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
            v109 = v107;
          }
          else
          {
            v109 = 0;
            v108 = 0;
          }
          v167 = sub_10000E99C((unint64_t *)&unk_100809160, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultCollectionViewCell, (uint64_t)&unk_10068C448);
          v168 = v228;
          v169 = v106;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v109, v108, v234, v167);

        }
        else
        {

        }
      }
      else
      {
        swift_retain(v9);
      }
      swift_retain(v9);
      sub_10035CCE4(v71, a2, v4);
    }
    else
    {
      v87 = type metadata accessor for InAppPurchaseSearchResult(0);
      if (swift_dynamicCastClass(v9, v87))
      {
        v89 = type metadata accessor for InAppPurchaseSearchResultCollectionViewCell(0);
        v90 = swift_dynamicCastClass(a2, v89);
        v91 = swift_retain(v9);
        if (v90)
        {
          v235 = a2;
          v93 = InAppPurchaseSearchResult.lockup.getter(v92);
          v94 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          v229 = objc_msgSend(*(id *)(v3+ OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "traitCollection");
          v95 = objc_msgSend(*(id *)(v3 + v94), "traitCollection");
          v96 = objc_msgSend(v95, "horizontalSizeClass");

          if (v96 == (id)1)
          {
            objc_msgSend(*(id *)(v4 + v94), "pageMarginInsets");
          }
          else
          {
            v97 = UIEdgeInsetsZero.top;
            v98 = UIEdgeInsetsZero.left;
            v99 = UIEdgeInsetsZero.bottom;
            v100 = UIEdgeInsetsZero.right;
          }
          sub_1000CFF0C(v93, *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph), *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader), v97, v98, v99, v100);

          swift_release(v93);
        }
        v170 = InAppPurchaseSearchResult.lockup.getter(v91);
        sub_10035D074(v170, a2, v4);
        v21 = v170;
        goto LABEL_5;
      }
      v124 = type metadata accessor for LockupCollectionSearchResult(0, v88);
      v125 = swift_dynamicCastClass(v9, v124);
      if (v125)
      {
        v126 = v125;
        v127 = type metadata accessor for SearchLockupListCollectionViewCell();
        if (swift_dynamicCastClass(a2, v127))
        {
          v230 = *(_QWORD *)(v3
                           + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph);
          v236 = *(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
          v128 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          v129 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
          swift_retain(v9);
          v226 = a2;
          *(_QWORD *)&v130 = swift_unknownObjectRetain(v129).n128_u64[0];
          v132 = objc_msgSend(v131, "traitCollection", v130);
          v133 = objc_msgSend(v132, "horizontalSizeClass");

          if (v133 == (id)1)
          {
            objc_msgSend(*(id *)(v3 + v128), "pageMarginInsets");
          }
          else
          {
            v134 = UIEdgeInsetsZero.top;
            v135 = UIEdgeInsetsZero.left;
            v136 = UIEdgeInsetsZero.bottom;
            v137 = UIEdgeInsetsZero.right;
          }
          sub_1002B78E0(v126, (uint64_t)v236, v230, v129, v134, v135, v136, v137);

          swift_unknownObjectRelease(v129);
        }
        else
        {
          swift_retain(v9);
        }
        swift_retain(v9);
        sub_10035D404(v126, a2, v3);
      }
      else
      {
        v171 = type metadata accessor for AppEventSearchResult(0);
        v172 = swift_dynamicCastClass(v9, v171);
        if (!v172)
          goto LABEL_73;
        v173 = v172;
        v174 = type metadata accessor for AppEventSearchResultCollectionViewCell();
        v175 = swift_dynamicCastClass(a2, v174);
        if (!v175)
        {
          v190 = type metadata accessor for ContentSearchResultCollectionViewCell();
          v191 = swift_dynamicCastClass(a2, v190);
          if (v191)
          {
            v192 = (char *)v191;
            swift_retain(v9);
            v193 = a2;
            v194 = AppEventSearchResult.lockup.getter(v193);
            v195 = sub_10055BAC8(v11 & 1);
            swift_release(v194);
            sub_10035B55C(v195, v192, a3, a1);

            v21 = v195;
            goto LABEL_5;
          }
LABEL_73:
          swift_release(v9);
          return;
        }
        v237 = (char *)v175;
        v176 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        v177 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
        swift_retain(v9);
        v231 = a2;
        objc_msgSend(v177, "pageMarginInsets");
        v179 = v178;
        v180 = objc_msgSend(*(id *)(v4 + v176), "traitCollection");
        v181 = objc_msgSend(v180, "horizontalSizeClass");

        if (v181 == (id)1)
        {
          objc_msgSend(*(id *)(v4 + v176), "pageMarginInsets");
          v183 = v182;
          v185 = v184;
          v187 = v186;
          v189 = v188;
        }
        else
        {
          v183 = UIEdgeInsetsZero.top;
          v185 = UIEdgeInsetsZero.left;
          v187 = UIEdgeInsetsZero.bottom;
          v189 = UIEdgeInsetsZero.right;
        }
        v196 = v173;
        v197 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph);
        v198 = *(_QWORD *)(v4 + v176);
        swift_unknownObjectRetain(v198);
        sub_1005FB350(v173, v197, v179, v183, v185, v187, v189);
        swift_unknownObjectRelease(v198);
        v199 = IndexPath._bridgeToObjectiveC()().super.isa;
        v200 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", v199);

        if (v200)
        {
          objc_msgSend(v200, "frame");
          v202 = v201;
          v204 = v203;
          v206 = v205;
          v208 = v207;

        }
        else
        {
          v202 = 0;
          v204 = 0;
          v206 = 0;
          v208 = 0;
        }
        v239 = v202;
        v240 = v204;
        v241 = v206;
        v242 = v208;
        v243 = v200 == 0;
        v209 = *(_QWORD *)(v4
                         + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
        v210 = *(_QWORD *)(v4 + v176);
        swift_unknownObjectRetain(v210);
        sub_1005FB5A8(v196, (uint64_t)&v239, v209);
        swift_unknownObjectRelease(v210);
        v211 = *(_QWORD *)&v237[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView];
        v212 = OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView;
        v213 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v211 + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);

        if (v213)
        {
          v105 = type metadata accessor for VideoPlaybackCoordinator(0);
          v214 = *(void **)(v197 + qword_100854088);
          if (!v214)
            goto LABEL_86;
          v215 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v211 + v212)+ OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
          if (v215)
          {
            v216 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
            v217 = v215;
          }
          else
          {
            v217 = 0;
            v216 = 0;
          }
          v218 = sub_10000E99C(&qword_1007FBAB8, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_100676708);
          v219 = v231;
          v220 = v214;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v217, v216, v237, v218);

        }
        swift_retain(v9);
        sub_10035D794(v196, v237, v4);

      }
    }
    v22 = v9;
    v23 = 3;
    goto LABEL_6;
  }
  v25 = type metadata accessor for BundleSearchResultCollectionViewCell();
  if (!swift_dynamicCastClass(a2, v25))
    goto LABEL_73;
  swift_retain(v9);
  v232 = a2;
  v27 = BundleSearchResult.lockup.getter(v26);
  v28 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
  v29 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
  *(_QWORD *)&v30 = swift_unknownObjectRetain(v29).n128_u64[0];
  v32 = objc_msgSend(v31, "traitCollection", v30);
  v33 = objc_msgSend(v32, "horizontalSizeClass");

  if (v33 == (id)1)
  {
    objc_msgSend(*(id *)(v4 + v28), "pageMarginInsets");
  }
  else
  {
    v34 = UIEdgeInsetsZero.top;
    v35 = UIEdgeInsetsZero.left;
    v36 = UIEdgeInsetsZero.bottom;
    v37 = UIEdgeInsetsZero.right;
  }
  sub_100436D78(v27, *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph), v34, v35, v36, v37);
  swift_release(v27);
  v65 = swift_unknownObjectRelease(v29);
  v66 = BundleSearchResult.lockup.getter(v65);
  sub_100436848(v66, *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader));
  v67 = swift_release(v66);
  v68 = BundleSearchResult.lockup.getter(v67);
  sub_10035C954(v68, v232, v4);
  swift_release(v68);
  swift_release_n(v9, 2);

}

void sub_10035B4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
    swift_retain(v4);

    if (v4)
    {
      dispatch thunk of AdvertRotationController.didInteractWithAdvert()();
      swift_release(v4);
    }
  }
}

void sub_10035B55C(uint64_t a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  double v13;
  id v14;
  id v15;
  id v16;
  __n128 v17;
  double top;
  double v19;
  double left;
  double v21;
  double bottom;
  double v23;
  double right;
  id v25;
  uint64_t v26;
  __n128 v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *Strong;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v48[4];
  BOOL v49;

  v5 = v4;
  v9 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
  v11 = v10;
  v12 = *(void **)(v4 + v9);
  *(_QWORD *)&v13 = swift_unknownObjectRetain(v12).n128_u64[0];
  v15 = objc_msgSend(v14, "traitCollection", v13);
  v16 = objc_msgSend(v15, "horizontalSizeClass");

  if (v16 == (id)1)
  {
    objc_msgSend(*(id *)(v5 + v9), "pageMarginInsets");
    top = v17.n128_f64[0];
    left = v19;
    bottom = v21;
    right = v23;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  v25 = (id)ASKDeviceTypeGetCurrent(v17);
  v26 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph);
  v27.n128_u64[0] = v11;
  sub_1001D9D64(a1, v12, (uint64_t)v25, v26, v27, top, left, bottom, right);
  swift_unknownObjectRelease(v12);

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(a4, "layoutAttributesForItemAtIndexPath:", isa);

  if (v29)
  {
    objc_msgSend(v29, "frame");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;

  }
  else
  {
    v31 = 0;
    v33 = 0;
    v35 = 0;
    v37 = 0;
  }
  v48[0] = v31;
  v48[1] = v33;
  v48[2] = v35;
  v48[3] = v37;
  v49 = v29 == 0;
  v38 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
  v39 = *(char **)(v5 + v9);
  swift_unknownObjectRetain(v39);
  sub_1001DA594(a1, (uint64_t)v48, v38, v39);
  swift_unknownObjectRelease(v39);
  v40 = type metadata accessor for VideoPlaybackCoordinator(0);
  v41 = *(void **)(v26 + qword_100854088);
  if (v41)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&a2[OBJC_IVAR____TtC22SubscribePageExtension37ContentSearchResultCollectionViewCell_screenshots]+ OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
    if (Strong)
    {
      v43 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
      v44 = Strong;
    }
    else
    {
      v44 = 0;
      v43 = 0;
    }
    v45 = sub_10000E99C((unint64_t *)&unk_100809110, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100679F88);
    v47 = v41;
    dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v44, v43, a2, v45);

    swift_retain(a1);
    sub_10035C954(v46, a2, v5);
    swift_release(a1);

  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v40);
    __break(1u);
  }
}

void sub_10035B850(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  Swift::Bool v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Swift::Bool v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  Swift::Bool v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  Swift::Bool v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  __n128 v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  __n128 v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char v117[24];
  uint64_t v118;
  _QWORD v119[6];
  UIImage_optional v120;
  UIImage_optional v121;
  UIImage_optional v122;

  v4 = v3;
  v7 = type metadata accessor for ContentSearchResultCollectionViewCell();
  v8 = swift_dynamicCastClass(a2, v7);
  v116 = a2;
  if (!v8)
    goto LABEL_21;
  v9 = v8;
  v113 = a3;
  v112 = *(_QWORD *)(v8 + OBJC_IVAR____TtC22SubscribePageExtension37ContentSearchResultCollectionViewCell_screenshots);
  v10 = (uint64_t *)(v112 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v112 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews, v117, 0, 0);
  v11 = *v10;
  v114 = v4;
  v115 = v9;
  if ((unint64_t)*v10 >> 62)
  {
    if (v11 < 0)
      v24 = *v10;
    else
      v24 = v11 & 0xFFFFFFFFFFFFFF8;
    v25 = a2;
    swift_bridgeObjectRetain(v11);
    v15 = _CocoaArrayWrapper.endIndex.getter(v24);
    v13 = v15;
    if (!v15)
      goto LABEL_14;
  }
  else
  {
    v12 = a2;
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v12;
    swift_bridgeObjectRetain(v11);
    if (!v13)
      goto LABEL_14;
  }
  if (v13 < 1)
  {
    __break(1u);
LABEL_57:
    v65 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v15);
    __break(1u);
    goto LABEL_58;
  }
  v16 = 0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v11);
    else
      v17 = *(id *)(v11 + 8 * v16 + 32);
    v18 = v17;
    ++v16;
    v118 = (uint64_t)v17;
    v19 = type metadata accessor for BorderedScreenshotView();
    v20 = sub_10000E99C(&qword_1007F4CB0, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v21 = v18;
    AnyHashable.init<A>(_:)(&v118, v19, v20);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v119, 1);
    sub_100019370((uint64_t)v119);
    v22 = *(id *)&v21[OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView];
    v120.value.super.isa = 0;
    v120.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v120, v23);

  }
  while (v13 != v16);
LABEL_14:
  swift_bridgeObjectRelease(v11);
  v26 = v112 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView;
  Strong = swift_unknownObjectWeakLoadStrong(v112 + OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v28 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_10080FD18), "setImage:", 0);
    v118 = (uint64_t)v28;
    v29 = type metadata accessor for VideoView(0);
    v30 = sub_10000E99C((unint64_t *)&qword_1007F4CB8, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v31 = v28;
    AnyHashable.init<A>(_:)(&v118, v29, v30);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v119, 1);

    sub_100019370((uint64_t)v119);
  }
  v32 = *(_QWORD *)(v115 + OBJC_IVAR____TtC22SubscribePageExtension37ContentSearchResultCollectionViewCell_lockupView);
  v33 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v34 = *(id *)(v32 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v121.value.super.isa = 0;
  v121.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v121, v35);

  v36 = *(void **)(v32 + v33);
  v37 = type metadata accessor for ArtworkView(0);
  v38 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v39 = v36;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v39, 1, v37, v38);

  v15 = type metadata accessor for VideoPlaybackCoordinator(0);
  v4 = v114;
  v40 = *(void **)(*(_QWORD *)(v114
                             + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph)
                 + qword_100854088);
  a2 = v116;
  if (!v40)
    goto LABEL_57;
  v41 = (void *)swift_unknownObjectWeakLoadStrong(v26);
  if (v41)
  {
    v42 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    v43 = v41;
  }
  else
  {
    v43 = 0;
    v42 = 0;
  }
  v44 = sub_10000E99C((unint64_t *)&unk_100809110, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100679F88);
  v45 = v116;
  v46 = v40;
  dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v43, v42, v115, v44, 1);

  a3 = v113;
LABEL_21:
  v47 = dispatch thunk of SearchResultsPresenter.result(at:)(a3);
  if (!v47)
    return;
  v48 = v47;
  v49 = type metadata accessor for AppEventSearchResultCollectionViewCell();
  v50 = swift_dynamicCastClass(a2, v49);
  if (v50)
  {
    v51 = v50;
    v52 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
    v53 = *(_QWORD *)(v50 + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_lockupView);
    v54 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
    v55 = *(void **)(v53 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    v56 = a2;
    v57 = v55;
    v122.value.super.isa = 0;
    v122.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v122, v58);

    v59 = *(void **)(v53 + v54);
    v60 = type metadata accessor for ArtworkView(0);
    v61 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v62 = v59;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v62, 1, v60, v61);

    v63 = *(_QWORD *)(*(_QWORD *)(v51
                                + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView)
                    + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView);
    sub_10043E720(v52, 1, v64);
    v65 = type metadata accessor for VideoPlaybackCoordinator(0);
    v66 = *(void **)(*(_QWORD *)(v4
                               + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph)
                   + qword_100854088);
    if (v66)
    {
      v67 = (void *)swift_unknownObjectWeakLoadStrong(v63 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
      if (v67)
      {
        v68 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
        v69 = v67;
      }
      else
      {
        v69 = 0;
        v68 = 0;
      }
      v70 = sub_10000E99C(&qword_1007FBAB8, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_100676708);
      v71 = v56;
      v72 = v66;
      dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v69, v68, v51, v70, 1);

      a2 = v116;
      goto LABEL_28;
    }
LABEL_58:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v65);
    __break(1u);
    return;
  }
LABEL_28:
  v73 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  v74 = swift_dynamicCastClass(a2, v73);
  if (v74)
  {
    v76 = *(_QWORD *)(v4
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
    if (v76)
    {
      v77 = v74;
      v78 = sub_10000E99C(&qword_100809108, (uint64_t (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell, (uint64_t)&unk_10068FD14);
      v79 = a2;
      v80 = swift_retain(v76);
      dispatch thunk of AdvertRotationController.didEndDisplaying(_:in:)(v77, v78, a1, v80);
      swift_release(v76);

    }
  }
  v81 = type metadata accessor for AppSearchResult(0, v75);
  if (!swift_dynamicCastClass(v48, v81))
  {
    v87 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v48, v87))
    {
      v89 = *(_QWORD *)(v4
                      + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
      if (v89)
      {
        v90 = swift_retain(*(_QWORD *)(v4
                                     + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController));
        dispatch thunk of AdvertRotationController.currentAdvert.getter(v119, v90);
        swift_release(v89);
        v91 = sub_10000DF3C(&qword_10080C0D0);
        v92 = type metadata accessor for MixedMediaLockup(0);
        if ((swift_dynamicCast(&v118, v119, v91, v92, 6) & 1) != 0)
        {
          v93 = v118;
          swift_retain(v118);
          sub_10035E0CC(v94, v4);
          swift_release(v48);
          v85 = v93;
          goto LABEL_36;
        }
      }
    }
    else
    {
      v95 = type metadata accessor for EditorialSearchResult(0, v88);
      v96 = swift_dynamicCastClass(v48, v95);
      if (v96)
      {
        v97 = v96;
        swift_retain(v48);
        sub_10035E28C(v97, v4);
        goto LABEL_35;
      }
      v98 = type metadata accessor for InAppPurchaseSearchResult(0);
      if (swift_dynamicCastClass(v48, v98))
      {
        v99 = swift_retain(v48);
        v84 = InAppPurchaseSearchResult.lockup.getter(v99);
        sub_10035E44C(v84, v4);
        goto LABEL_34;
      }
      v100 = type metadata accessor for BundleSearchResult(0);
      if (swift_dynamicCastClass(v48, v100))
      {
        v102 = swift_retain(v48);
        v83 = BundleSearchResult.lockup.getter(v102);
        goto LABEL_33;
      }
      v103 = type metadata accessor for LockupCollectionSearchResult(0, v101);
      v104 = swift_dynamicCastClass(v48, v103);
      if (v104)
      {
        v105 = v104;
        swift_retain(v48);
        sub_10035E60C(v105, v4);
        goto LABEL_35;
      }
      v106 = type metadata accessor for AppEventSearchResult(0);
      v107 = swift_dynamicCastClass(v48, v106);
      if (v107)
      {
        v108 = v107;
        v109 = swift_retain(v48);
        v110 = dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)(v108, v109);
        if ((v110 & 1) != 0)
        {
          swift_retain(v48);
          sub_10035E7CC(v108, v4);
          v85 = v48;
          v86 = 3;
          goto LABEL_37;
        }
        v83 = AppEventSearchResult.lockup.getter(v110);
        goto LABEL_33;
      }
    }
    swift_release(v48);
    return;
  }
  v82 = swift_retain(v48);
  v83 = AppSearchResult.lockup.getter(v82);
LABEL_33:
  v84 = v83;
  sub_10035E0CC(v83, v4);
LABEL_34:
  swift_release(v84);
LABEL_35:
  v85 = v48;
LABEL_36:
  v86 = 2;
LABEL_37:
  swift_release_n(v85, v86);
}

void sub_10035C434(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  id v26;
  __n128 v27;
  double top;
  double v29;
  double left;
  double v31;
  double bottom;
  double v33;
  double right;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  _BYTE v41[48];

  v13 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  if (swift_dynamicCastClass(a1, v13))
  {
    sub_10016C028(a3, (uint64_t)v41);
    v14 = a1;
    v15 = sub_10000DF3C(&qword_10080C0D0);
    v16 = type metadata accessor for MixedMediaLockup(0);
    if ((swift_dynamicCast(&v40, v41, v15, v16, 6) & 1) != 0)
    {
      v17 = v40;
      sub_10016C028(a4, (uint64_t)v41);
      if ((swift_dynamicCast(&v40, v41, v15, v16, 6) & 1) != 0)
      {
        v18 = v40;
        swift_retain(v17);
        sub_10035E0CC(v19, v7);
        swift_release(v17);
        swift_retain(v18);
        sub_10035C954(v20, v14, v7);
        *(_QWORD *)&v21 = swift_release(v18).n128_u64[0];
        v22 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets", v21);
        v24 = v23;
        v39 = objc_msgSend(*(id *)(v7 + v22), "traitCollection");
        v25 = objc_msgSend(*(id *)(v7 + v22), "traitCollection");
        v26 = objc_msgSend(v25, "horizontalSizeClass");

        if (v26 == (id)1)
        {
          objc_msgSend(*(id *)(v7 + v22), "pageMarginInsets");
          top = v27.n128_f64[0];
          left = v29;
          bottom = v31;
          right = v33;
        }
        else
        {
          top = UIEdgeInsetsZero.top;
          left = UIEdgeInsetsZero.left;
          bottom = UIEdgeInsetsZero.bottom;
          right = UIEdgeInsetsZero.right;
        }
        v35 = (id)ASKDeviceTypeGetCurrent(v27);
        v36 = *(_QWORD *)(v7
                        + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
        v37 = type metadata accessor for ObjectGraph(0);
        v38 = swift_dynamicCastClassUnconditional(a7, v37, 0, 0, 0);
        sub_100477638(v18, (uint64_t)v39, (uint64_t)v35, v36, v38, a6 & 1, v24, top, left, bottom, right);

        swift_release(v17);
        swift_release(v18);

      }
      else
      {
        swift_release(v17);

      }
    }
    else
    {

    }
  }
}

id sub_10035C6E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsCollectionViewDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10035C7F4()
{
  return type metadata accessor for SearchResultsCollectionViewDelegate(0);
}

uint64_t type metadata accessor for SearchResultsCollectionViewDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_1008090D0;
  if (!qword_1008090D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsCollectionViewDelegate);
  return result;
}

void sub_10035C838(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = "\b";
  sub_10035C8FC(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_100686570;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_100686588;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = "\b";
    v4[11] = "\b";
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

void sub_10035C8FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008090E0)
  {
    v2 = type metadata accessor for ImpressionMetrics(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008090E0);
  }
}

uint64_t sub_10035C954(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  id v35;
  _QWORD v36[5];
  uint64_t v37[5];

  v35 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v34 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for MixedMediaLockup(0);
  v37[3] = v17;
  v37[4] = sub_10000E99C(&qword_1007F4C40, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v37[0] = a1;
  sub_1000194E4(a3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, (uint64_t *)&unk_1007F7740);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F7740);
    v19 = a3;
    v20 = v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v35;
      objc_msgSend(v35, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v35;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_100011020((uint64_t)v37, (uint64_t)v36);
  v22 = sub_10000E99C((unint64_t *)&unk_1008090F0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    v23 = v34;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v34, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23);
    }
    objc_msgSend(v20, "frame");
    v25 = sub_100011064(v36, v36[3]);
    sub_10035EB4C(*v25, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v36);
  ObjectType = swift_getObjectType();
  v27 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v27)
    v28 = v27;
  else
    v28 = 0;
  if (v27)
    v29 = v20;
  else
    v29 = 0;
  if (v29)
  {
    v30 = v20;
    objc_msgSend(v30, "frame");
    v31 = sub_10035DEB4(v37[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (unint64_t *)&unk_1008090F0, (uint64_t)&protocol conformance descriptor for Lockup);
    v32 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v31, v32, v28);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
}

uint64_t sub_10035CCE4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  id v36;
  _QWORD v37[5];
  uint64_t v38[5];

  v36 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v35 - v16;
  v18 = type metadata accessor for EditorialSearchResult(0, v15);
  v38[3] = v18;
  v38[4] = sub_10000E99C(&qword_100809120, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v38[0] = a1;
  sub_1000194E4(a3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, (uint64_t *)&unk_1007F7740);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F7740);
    v20 = a3;
    v21 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v36;
      objc_msgSend(v36, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v36;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100011020((uint64_t)v38, (uint64_t)v37);
  v23 = sub_10000E99C(&qword_100809128, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    v24 = v35;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v35, v7, v11);
    v25 = *(_QWORD *)(v20
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100011064(v37, v37[3]);
    sub_10035F0B4(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v32 = sub_10035DEB4(v38[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, &qword_100809128, (uint64_t)&protocol conformance descriptor for SearchResult);
    v33 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v32, v33, v29);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
}

uint64_t sub_10035D074(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  id v36;
  _QWORD v37[5];
  uint64_t v38[5];

  v36 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v35 - v16;
  v18 = type metadata accessor for InAppPurchaseLockup(0, v15);
  v38[3] = v18;
  v38[4] = sub_10000E99C(&qword_100809130, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v38[0] = a1;
  sub_1000194E4(a3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, (uint64_t *)&unk_1007F7740);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F7740);
    v20 = a3;
    v21 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v36;
      objc_msgSend(v36, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v36;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100011020((uint64_t)v38, (uint64_t)v37);
  v23 = sub_10000E99C((unint64_t *)&unk_100809138, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    v24 = v35;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v35, v7, v11);
    v25 = *(_QWORD *)(v20
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100011064(v37, v37[3]);
    sub_10035F61C(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v32 = sub_10035DEB4(v38[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (unint64_t *)&unk_100809138, (uint64_t)&protocol conformance descriptor for Lockup);
    v33 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v32, v33, v29);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
}

uint64_t sub_10035D404(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  id v36;
  _QWORD v37[5];
  uint64_t v38[5];

  v36 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v35 - v16;
  v18 = type metadata accessor for LockupCollectionSearchResult(0, v15);
  v38[3] = v18;
  v38[4] = sub_10000E99C(&qword_100800800, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v38[0] = a1;
  sub_1000194E4(a3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, (uint64_t *)&unk_1007F7740);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F7740);
    v20 = a3;
    v21 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v36;
      objc_msgSend(v36, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v36;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100011020((uint64_t)v38, (uint64_t)v37);
  v23 = sub_10000E99C((unint64_t *)&unk_100809148, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    v24 = v35;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v35, v7, v11);
    v25 = *(_QWORD *)(v20
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100011064(v37, v37[3]);
    sub_10035FB84(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v32 = sub_10035DEB4(v38[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (unint64_t *)&unk_100809148, (uint64_t)&protocol conformance descriptor for SearchResult);
    v33 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v32, v33, v29);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
}

uint64_t sub_10035D794(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  id v35;
  _QWORD v36[5];
  uint64_t v37[5];

  v35 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v34 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for AppEventSearchResult(0);
  v37[3] = v17;
  v37[4] = sub_10000E99C((unint64_t *)&qword_1007F4890, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v37[0] = a1;
  sub_1000194E4(a3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, (uint64_t *)&unk_1007F7740);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F7740);
    v19 = a3;
    v20 = v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v35;
      objc_msgSend(v35, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v35;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_100011020((uint64_t)v37, (uint64_t)v36);
  v22 = sub_10000E99C(&qword_100809158, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F7740);
  }
  else
  {
    v23 = v34;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v34, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23);
    }
    objc_msgSend(v20, "frame");
    v25 = sub_100011064(v36, v36[3]);
    sub_1003600EC(*v25, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v36);
  ObjectType = swift_getObjectType();
  v27 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v27)
    v28 = v27;
  else
    v28 = 0;
  if (v27)
    v29 = v20;
  else
    v29 = 0;
  if (v29)
  {
    v30 = v20;
    objc_msgSend(v30, "frame");
    v31 = sub_10035DEB4(v37[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, &qword_100809158, (uint64_t)&protocol conformance descriptor for SearchResult);
    v32 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v31, v32, v28);

  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
}

