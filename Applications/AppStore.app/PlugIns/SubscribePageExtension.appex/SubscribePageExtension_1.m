void sub_10009A0EC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  unsigned __int8 v10;
  void *v11;
  id v12;
  NSString v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for AppStoreEngagementEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "viewIfLoaded", v4);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "window");

    if (v9)
    {
      v10 = objc_msgSend(v9, "isHidden");

      if ((v10 & 1) == 0)
      {
        v11 = *(void **)(*(_QWORD *)&v1[qword_1007F7D80] + 16);
        v12 = objc_allocWithZone((Class)IAMCountableEvent);
        v13 = String._bridgeToObjectiveC()();
        v14 = objc_msgSend(v12, "initWithName:", v13);

        objc_msgSend(v11, "receiveEvent:", v14);
        sub_1000E39A4();
        v16 = type metadata accessor for AppStoreEngagementManager(0, v15);
        v17 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph]
                        + qword_1008540A0);
        if (v17)
        {
          (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for AppStoreEngagementEvent.arcadeTabDidComeOnScreen(_:), v2);
          v18 = swift_allocObject(&unk_100725B48, 24, 7);
          swift_unknownObjectWeakInit(v18 + 16, v1);
          swift_retain(v17);
          v19 = swift_retain(v18);
          AppStoreEngagementManager.recordEngagement(event:resultHandler:)(v6, sub_10009EFA4, v18, v19);
          swift_release(v17);
          v20 = swift_release(v18);
          (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v20);
          swift_release(v18);
        }
        else
        {
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v16);
          __break(1u);
        }
      }
    }
  }
}

void sub_10009A2FC(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10009A034(a3);

}

void sub_10009A33C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v4 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewWillDisappear:", a3);
  v5 = objc_msgSend(v4, "presentedViewController", v6.receiver, v6.super_class);

  if (!v5 && objc_msgSend(v4, "isViewLoaded"))
    sub_10009D4EC(1, 1, a3);

}

void sub_10009A3E0(void *a1)
{
  char *v1;
  void *v2;
  char *v3;
  double v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  v1 = (char *)v5.receiver;
  objc_msgSendSuper2(&v5, "viewWillLayoutSubviews");
  v2 = *(void **)&v1[qword_100851120];
  if (v2)
  {
    v3 = v2;
    sub_1002983F8();
    objc_msgSend(v3, "setHeight:", v4, v5.receiver, v5.super_class);

    v1 = v3;
  }

}

uint64_t sub_10009A464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F83D8);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F83E0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1008030A0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CC66C();
  v13 = dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v12);
  v14 = sub_10000DF3C(&qword_1007F83E8);
  v15 = sub_100010F98(&qword_1008030B0, &qword_1007F83E8, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v14, v15);
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_10009ABB8, 0, v14, ObjectType, v15);
  swift_release(v13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = ArcadeDiffablePagePresenter.onOnPrepareUpsellHandler.getter(v16);
  v18 = sub_10000DF3C(&qword_1007F83F0);
  v19 = sub_100010F98(&qword_1007F83F8, &qword_1007F83F0, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v18, v19);
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_10009ACF4, 0, v18, ObjectType, v19);
  swift_release(v17);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  v21 = ArcadeDiffablePagePresenter.onRecordTabVisitIfPossible.getter(v20);
  v22 = sub_10000DF3C(&qword_1007F8400);
  v23 = sub_100010F98(&qword_1007F8408, &qword_1007F8400, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v22, v23);
  v24 = v28;
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_10009ADD8, 0, v22, ObjectType, v23);
  swift_release(v21);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v30);
}

void sub_10009A754()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  char *v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  int v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v0 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v0);
  v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Shelf.ContentType(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  __chkstk_darwin(v3);
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v46 = (char *)&v46 - v6;
  __chkstk_darwin(v7);
  v48 = (char *)&v46 - v8;
  v9 = sub_10000DF3C((uint64_t *)&unk_1008030F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F8410);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C(&qword_100802FF0);
  ((void (*)(void))SnapshotUpdate.contentSnapshot.getter)();
  ModelMappedDiffableDataSourceContentSnapshot.identifierSnapshot.getter(v13);
  v18 = *(void (**)(char *, uint64_t))(v14 + 8);
  v18(v16, v13);
  v19 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v19 < 1)
    goto LABEL_4;
  SnapshotUpdate.contentSnapshot.getter(v17);
  ModelMappedDiffableDataSourceContentSnapshot.sectionModel(at:)(0, v13);
  v18(v16, v13);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v2, 1, v20) == 1)
  {
    sub_100011088((uint64_t)v2, &qword_1007F4A68);
LABEL_4:
    v22 = v51;
    v23 = *(_QWORD *)(v51 + qword_1007F7DB0);
    *(_QWORD *)(v51 + qword_1007F7DB0) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v22 + qword_1007F7DA8) = 0;
    return;
  }
  KeyPath = swift_getKeyPath(&unk_100673408);
  v25 = v46;
  ReadOnlyLens.subscript.getter(KeyPath, v20);
  v26 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v2, v20, v26);
  v28 = v48;
  v27 = v49;
  v29 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v48, v25, v50);
  v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v47, v28, v29);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v30, v29);
  if (v31 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
    || v31 == enum case for Shelf.ContentType.upsellBreakout(_:)
    || v31 == enum case for Shelf.ContentType.heroCarousel(_:)
    || v31 == enum case for Shelf.ContentType.uber(_:))
  {
    v36 = sub_10000DF3C(&qword_100803400);
    v37 = type metadata accessor for IndexPath(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(_QWORD *)(v38 + 72);
    v40 = *(unsigned __int8 *)(v38 + 80);
    v41 = (v40 + 32) & ~v40;
    v42 = swift_allocObject(v36, v41 + v39, v40 | 7);
    *(_OWORD *)(v42 + 16) = xmmword_10066FBA0;
    IndexPath.init(item:section:)(0, 0, (__n128)xmmword_10066FBA0);
    v43 = sub_100172FB8(v42);
    swift_setDeallocating(v42);
    swift_arrayDestroy(v42 + v41, 1, v37);
    swift_deallocClassInstance(v42, 32, 7);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    v44 = v51;
    v45 = *(_QWORD *)(v51 + qword_1007F7DB0);
    *(_QWORD *)(v51 + qword_1007F7DB0) = v43;
    swift_bridgeObjectRelease(v45);
    *(_QWORD *)(v44 + qword_1007F7DA8) = 1;
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t))(v27 + 8);
    v32(v28, v29);
    v33 = v51;
    v34 = *(_QWORD *)(v51 + qword_1007F7DB0);
    *(_QWORD *)(v51 + qword_1007F7DB0) = &_swiftEmptySetSingleton;
    v35 = swift_bridgeObjectRelease(v34);
    *(_QWORD *)(v33 + qword_1007F7DA8) = 0;
    ((void (*)(char *, uint64_t, __n128))v32)(v30, v29, v35);
  }
}

void (*sub_10009ABB8(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100725D50, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_10009EFBC;
}

double sub_10009AC0C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (qword_1007F3440 != -1)
    swift_once(&qword_1007F3440, sub_1006023FC);
  v1 = type metadata accessor for OSLogger(0, a1);
  sub_1000117A8(v1, (uint64_t)qword_1008575E8);
  v2 = sub_10000DF3C(&qword_1007FD430);
  v3 = type metadata accessor for LogMessage(0);
  v4 = swift_allocObject(v2, ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) | 7);
  *(_OWORD *)(v4 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100632BC0);
  Logger.error(_:)(v4, v1, &protocol witness table for OSLogger);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double (*sub_10009ACF4(void *a1))(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100725CD8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100725D00, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10009EFAC;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_10009EFB4;
}

double sub_10009AD6C(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t, __n128))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject(&unk_100725D28, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_retain(v3);
  a2(sub_100030368, v5, v6);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10009ADD8(void *a1))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100725C88, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100725CB0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10009EF84;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_10009EF0C;
}

uint64_t sub_10009AE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_10000DF3C(&qword_1007F4420);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10066F860;
  v3 = *(_QWORD *)(v0 + qword_1007F7DB8);
  v4 = sub_10000E99C(&qword_1007F83C8, type metadata accessor for ArcadeTitleEffectCollectionElementsObserver, (uint64_t)&unk_10067D2C8);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = type metadata accessor for NavigationBarVisibilityThresholdCollectionElementsObserver();
  v6 = swift_allocObject(v5, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit(v6 + 16, 0);
  *(_QWORD *)(v6 + 24) = &off_100725AC8;
  swift_unknownObjectWeakAssign(v7, v0);
  v8 = sub_10000E99C(&qword_1007F83D0, (uint64_t (*)(uint64_t))type metadata accessor for NavigationBarVisibilityThresholdCollectionElementsObserver, (uint64_t)&unk_100679A6C);
  *(_QWORD *)(v2 + 48) = v6;
  *(_QWORD *)(v2 + 56) = v8;
  swift_retain(v3);
  *(_QWORD *)(v2 + 64) = sub_10037149C();
  *(_QWORD *)(v2 + 72) = v9;
  v10 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v2);
}

id sub_10009AF64(uint64_t a1)
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  double v11;
  id result;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;

  ObjectType = swift_getObjectType();
  v4 = sub_10000DF3C(&qword_1007F83A8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100373408(a1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    v9.n128_f64[0] = (*(double (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    v10 = *v7;
    sub_10009B104(v9);
    *(_QWORD *)&v11 = swift_release(v10).n128_u64[0];
  }
  else if (v8 == enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    swift_unknownObjectWeakAssign(*(_QWORD *)&v1[qword_1007F7DB8]+ OBJC_IVAR____TtC22SubscribePageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView, 0);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  }
  result = objc_msgSend(v1, "view", v11);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, "bounds");
    v15 = v14;
    v17 = v16;

    v18 = sub_10000E99C(&qword_1007F83B0, type metadata accessor for ArcadeDiffablePageViewController, (uint64_t)byte_10067F0C0);
    return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v18, v15, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10009B104(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSString v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  char *v26;
  char *v27;

  v2 = v1;
  ArcadeDiffablePagePresenter.pageTitle.getter(a1);
  if (v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, "setTitle:", v6, v4);

  v7 = GenericPage.presentationOptions.getter();
  sub_10009B4F4(v7);
  v8 = objc_msgSend(v2, "tabBarItem");
  if (v8)
  {
    v9 = v8;
    ArcadeDiffablePagePresenter.tabTitle.getter();
    if (v10)
    {
      v12 = v10;
      v13 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v9, "setTitle:", v13, v11);

    v14 = objc_msgSend(v2, "navigationItem");
    ArcadeDiffablePagePresenter.tabTitle.getter();
    if (v15)
    {
      v17 = v15;
      v18 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
    }
    else
    {
      v18 = 0;
    }
    objc_msgSend(v14, "setBackButtonTitle:", v18, v16);

    v19 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v19, "setTitle:", 0);

    v20 = sub_10009B740(0xD000000000000039, 0x8000000100632B20);
    v21 = ArcadePage.subscriptionLockup.getter(v20);
    if (v21)
    {
      v22 = v21;
      v23 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArcadePageTitleView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_1000FE738(v22, *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph]);
      swift_unknownObjectWeakAssign(&v23[OBJC_IVAR____TtC22SubscribePageExtension19ArcadePageTitleView_safeAreaDelegate], v2);
      v27 = v23;
      sub_10009BA10(v23, (uint64_t)&off_100733BB8);
      swift_release(v22);

      v24 = v27;
    }
    else
    {
      v25 = objc_msgSend(v2, "navigationItem");
      objc_msgSend(v25, "setTitleView:", 0);

      v26 = &v2[qword_100851120];
      v24 = *(char **)&v2[qword_100851120];
      *(_QWORD *)v26 = 0;
      *((_QWORD *)v26 + 1) = 0;
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_10009B39C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  CGRect v18;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (v1)
  {
    v17 = v1;
    v2 = objc_msgSend(v0, "navigationController");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "view");

      if (!v4)
      {
LABEL_10:
        __break(1u);
        return;
      }
      objc_msgSend(v4, "safeAreaInsets");
      v6 = v5;

    }
    else
    {
      v6 = 0.0;
    }
    v7 = objc_msgSend(v0, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "frame");
      v10 = v9;
      v12 = v11;
      v14 = v13;
      v16 = v15;

      v18.origin.x = v10;
      v18.origin.y = v12;
      v18.size.width = v14;
      v18.size.height = v16;
      objc_msgSend(v17, "setFrame:", 0.0, 0.0, CGRectGetWidth(v18), v6);

      return;
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_10009B4F4(char a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle) = 1;
    goto LABEL_12;
  }
  if ((a1 & 2) != 0)
  {
    v4 = objc_msgSend(v1, "navigationController");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "viewControllers");

      v7 = (void *)sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
      {
        if (v8 < 0)
          v15 = v8;
        else
          v15 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v16 = _CocoaArrayWrapper.endIndex.getter(v15);
        swift_bridgeObjectRelease(v8);
        if (v16)
        {
LABEL_6:
          if ((v8 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
          }
          else
          {
            if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_25:

              goto LABEL_26;
            }
            v9 = *(id *)(v8 + 32);
          }
          v10 = v9;
          swift_bridgeObjectRelease(v8);
          v11 = v2;
          v12 = v10;
          v13 = static NSObject.== infix(_:_:)(v12, v11);

          *((_BYTE *)v11 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle) = v13 & 1;
          if ((v13 & 1) == 0)
            goto LABEL_19;
LABEL_12:
          v14 = objc_msgSend(v2, "navigationItem");
          objc_msgSend(v14, "setLargeTitleDisplayMode:", 1);
          goto LABEL_20;
        }
      }
      else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      swift_bridgeObjectRelease(v8);
    }
  }
  *((_BYTE *)v2 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle) = 0;
LABEL_19:
  v14 = objc_msgSend(v2, "navigationItem");
  objc_msgSend(v14, "setLargeTitleDisplayMode:", 2);
LABEL_20:

  v17 = objc_msgSend(v2, "view");
  if (v17)
  {
    v7 = v17;
    v18 = type metadata accessor for InsetCollectionViewControllerContentView();
    v19 = swift_dynamicCastClass(v7, v18);
    if (v19)
    {
      *(_BYTE *)(v19
               + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = (a1 & 8) == 0;

      sub_10009EA54();
      sub_10009E8D8();
      return;
    }
    goto LABEL_25;
  }
LABEL_26:
  __break(1u);
}

id sub_10009B740(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  id result;
  void *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10009BC14(a1, a2, v35);
  v28 = v2;
  result = objc_msgSend(v2, "collectionView", v12);
  if (result)
  {
    v14 = result;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v14, "indexPathsForVisibleSupplementaryElementsOfKind:", v15);

    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v5);
    v18 = *(_QWORD *)(v17 + 16);
    v27 = v17;
    if (v18)
    {
      v19 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v30 = *(_QWORD *)(v6 + 72);
      v31 = v20;
      v20(v11, v19, v5);
      while (1)
      {
        v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v29(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
        sub_1000194E4((uint64_t)v35, (uint64_t)v32, &qword_100802FE0);
        v21 = v33;
        if (v33)
        {
          v22 = v11;
          v23 = v6;
          v24 = v34;
          sub_100011064(v32, v33);
          result = objc_msgSend(v28, "collectionView");
          if (!result)
          {
            __break(1u);
            goto LABEL_15;
          }
          v25 = result;
          dispatch thunk of AnyReusableSupplementaryRegistration.reconfigureSupplementary(at:in:)(v8, result, v21, v24);

          v6 = v23;
          (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v32);
          v11 = v22;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          sub_100011088((uint64_t)v32, &qword_100802FE0);
        }
        v19 += v30;
        if (!--v18)
        {
          v29(v11, 1, 1, v5);
          break;
        }
        v31(v11, v19, v5);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    }
    swift_bridgeObjectRelease(v27);
    return (id)sub_100011088((uint64_t)v35, &qword_100802FE0);
  }
  else
  {
LABEL_15:
    __break(1u);
  }
  return result;
}

void sub_10009BA10(void *a1, uint64_t a2)
{
  char *v2;
  id v5;
  id v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  id v19;
  char *v20;
  id v21;

  if (a1)
  {
    v5 = a1;
    v6 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v6, "setTitleView:", v5);

    v7 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v7, "setRightBarButtonItem:", 0);

    v8 = &v2[qword_100851120];
    v9 = *(void **)&v2[qword_100851120];
    *(_QWORD *)v8 = a1;
    *((_QWORD *)v8 + 1) = a2;
    v21 = v5;

    v10 = objc_msgSend(v2, "navigationController");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "navigationBar");

      objc_msgSend(v12, "_titleOpacity");
      v14 = v13;

      v15 = *(char **)v8;
      if (*(_QWORD *)v8)
      {
        v16 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension19ArcadePageTitleView_lockupView];
        v17 = v15;
        objc_msgSend(v16, "setAlpha:", v14);

      }
    }
    v18 = v21;
  }
  else
  {
    v19 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v19, "setTitleView:", 0);

    v20 = &v2[qword_100851120];
    v18 = *(void **)&v2[qword_100851120];
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = a2;
  }

}

void sub_10009BBAC()
{
  unsigned __int8 *v0;
  int v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_prefersLargeTitle];
  v2 = objc_msgSend(v0, "navigationItem");
  v4 = v2;
  if (v1)
    v3 = 1;
  else
    v3 = 2;
  objc_msgSend(v2, "setLargeTitleDisplayMode:", v3);

}

double sub_10009BC14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v4 = v3;
  ObjectType = swift_getObjectType();
  if ((a1 != 0xD000000000000039 || a2 != 0x8000000100632B20)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000039, 0x8000000100632B20, a1, a2, 0) & 1) == 0)
  {
    return sub_10031B004(a1, a2, (uint64_t)a3);
  }
  v9 = type metadata accessor for ArcadeHeaderView(0);
  v10 = swift_bridgeObjectRetain(a2);
  v11 = static UICollectionReusableView.defaultReuseIdentifier.getter(v10);
  v13 = v12;
  v14 = swift_allocObject(&unk_100725B48, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v4);
  v15 = swift_allocObject(&unk_100725B70, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  a3[3] = sub_10000DF3C(&qword_1007F8398);
  a3[4] = sub_100010F98(&qword_1007F83A0, &qword_1007F8398, (const char *)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
  sub_1000117C0(a3);
  ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(a1, a2, v11, v13, sub_10009E844, v15, v9);
  return result;
}

void sub_10009BD9C(double a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  id v28;
  char v29;
  char *v30;
  __n128 v31;
  char *v32;
  id v33;
  __n128 v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  char *v51;
  uint64_t v52;
  char *v53;
  __n128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  id v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  id v77;
  NSString v78;
  id v79;
  id v80;
  void *v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  double v86;
  id v87;
  NSString v88;
  id v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;

  v3 = v2;
  v6 = type metadata accessor for PageGrid.Direction(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v100 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v97 - v10;
  v12 = type metadata accessor for PageGrid(0);
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v103 = (uint64_t)&v97 - v19;
  __chkstk_darwin(v20);
  v102 = (uint64_t)&v97 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v97 - v23;
  JUScreenClassGetMain(v25);
  v26 = objc_msgSend(v2, "traitCollection");
  v101 = v24;
  sub_1005F464C((uint64_t)v26, (uint64_t)v24, v27);

  v28 = objc_msgSend(v3, "traitCollection");
  v29 = UITraitCollection.isSizeClassRegular.getter(v28);

  if ((v29 & 1) != 0)
  {
    v30 = (char *)objc_msgSend(v3, "traitCollection");
    sub_1005F49A4(v30, v102, v31);

  }
  else
  {
    sub_10009E894((uint64_t)v101, v102, type metadata accessor for TitleHeaderView.Style);
  }
  v32 = v14;
  v33 = objc_msgSend(v3, "traitCollection");
  sub_1005F4CF8((uint64_t)v33, v103, v34);

  v35 = objc_msgSend(v3, "view");
  if (!v35)
    goto LABEL_22;
  v36 = v35;
  v37 = (uint64_t)v17;
  v99 = type metadata accessor for InsetCollectionViewControllerContentView();
  v38 = swift_dynamicCastClass(v36, v99);
  if (!v38)
  {

LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v39 = *(unsigned __int8 *)(v38
                           + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if (v39)
    v40 = v103;
  else
    v40 = v102;
  v41 = v37;
  sub_10009E894(v40, v37, type metadata accessor for TitleHeaderView.Style);
  v42 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v11, enum case for PageGrid.Direction.vertical(_:), v6);
  v43 = sub_1000C7CCC(v42);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = objc_msgSend(v3, "traitCollection");
  v51 = v100;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v100, v11, v6);
  v52 = sub_100418380(0.0);
  v53 = v32;
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v51, 0, v52, a1, a2, v43, v45, v47, v49);

  v54.n128_f64[0] = (*(double (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v55 = ArcadeDiffablePagePresenter.pageTitle.getter(v54);
  v57 = v56;
  v58 = objc_msgSend(*(id *)(*(_QWORD *)&v3[qword_1007F7DA0]+ OBJC_IVAR____TtC22SubscribePageExtension27ArcadeHeaderButtonContainer_stackView), "sizeThatFits:", a1, a2);
  v60 = v59;
  v62 = v61;
  v63 = PageGrid.horizontalMargins.getter(v58);
  sub_100430E10(0, 0, 0, v55, v57, 0, 0, 0, a1, a2, v60, v62, v63, v64, v65, v66, 0, 0, 1, v41, 0, v3);
  v68 = v67;
  swift_bridgeObjectRelease(v57);
  v69 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v70 = objc_msgSend(v69, "fractionalWidthDimension:", 1.0);
  v71 = objc_msgSend(v69, "absoluteDimension:", v68);
  v72 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v70, v71);

  v73 = (char *)objc_msgSend(v3, "view");
  if (!v73)
    goto LABEL_24;
  v24 = v73;
  v74 = swift_dynamicCastClass(v73, v99);
  v75 = (uint64_t)v101;
  if (!v74)
  {
LABEL_23:

LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v76 = *(_BYTE *)(v74
                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v76 & 1) == 0)
  {
    v80 = objc_msgSend(v3, "navigationController");
    if (v80)
    {
      v81 = v80;
      sub_10016AC38();
      v83 = v82;

LABEL_17:
      v87 = v72;
      v88 = String._bridgeToObjectiveC()();
      v79 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v87, v88, 1, 0.0, v83);

      objc_msgSend(v79, "setExtendsBoundary:", 0);
      goto LABEL_18;
    }
    v84 = objc_msgSend(v3, "view");
    if (v84)
    {
      v85 = v84;
      objc_msgSend(v84, "safeAreaInsets");
      v83 = v86;

      goto LABEL_17;
    }
LABEL_25:
    __break(1u);
    return;
  }
  v77 = v72;
  v78 = String._bridgeToObjectiveC()();
  v79 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v77, v78, 1);

  objc_msgSend(v79, "setExtendsBoundary:", 1);
LABEL_18:
  objc_msgSend(v79, "setZIndex:", 1);
  v89 = v79;
  PageGrid.horizontalDirectionalMargins.getter(v89);
  objc_msgSend(v89, "setContentInsets:");

  v90 = sub_1003220EC();
  v104 = v90;
  v91 = v89;
  swift_bridgeObjectRetain(v90);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
  v94 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v93 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v94 >= v93 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
  v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v91);
  specialized Array._endMutation()(v95);

  v96 = swift_bridgeObjectRelease(v90);
  (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v53, v98, v96);
  sub_10002F0D4(v41, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v103, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v102, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v75, type metadata accessor for TitleHeaderView.Style);
}

void sub_10009C50C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  char *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)();
  uint64_t v50;
  void *v51;
  uint64_t (*v52)();
  uint64_t (*v53)();
  __n128 v54;
  uint64_t v55;
  id v56;
  id v57;
  __n128 v58;
  id v59;
  char *v60;
  __n128 v61;
  id v62;
  __n128 v63;
  char *v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  NSString v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _BYTE v92[24];
  char v93[24];

  v7 = type metadata accessor for TitleEffect(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v89 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v10);
  v91 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v86 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v86 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v86 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v86 - v22;
  v24 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v24);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v93, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
    return;
  v28 = (char *)Strong;
  v87 = v8;
  v88 = v7;
  objc_msgSend(a1, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v29 = *(void **)&v28[qword_1007F7DA0];
  v30 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView;
  v31 = *(void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView];
  if (v31)
    v32 = v29 == v31;
  else
    v32 = 0;
  if (v32)
    goto LABEL_29;
  v33 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v26, 1, 1, v33);
  v34 = (uint64_t)&a1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory];
  swift_beginAccess(&a1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory], v92, 33, 0);
  v35 = v29;
  v90 = a1;
  v36 = v23;
  v37 = v20;
  v38 = v17;
  v39 = v14;
  v40 = v35;
  sub_10009E84C((uint64_t)v26, v34);
  swift_endAccess(v92);
  v41 = v40;
  v14 = v39;
  v17 = v38;
  v20 = v37;
  v23 = v36;
  a1 = v90;
  v42 = v41;
  sub_1000F0D24(v29);

  v31 = *(void **)&a1[v30];
  if (v31)
  {
LABEL_29:
    v43 = type metadata accessor for ArcadeHeaderButtonContainer();
    v44 = swift_dynamicCastClass(v31, v43);
    if (v44)
    {
      v45 = *(_QWORD *)(v44 + OBJC_IVAR____TtC22SubscribePageExtension27ArcadeHeaderButtonContainer_accountButton);
      v46 = type metadata accessor for AccountButton(0);
      v47 = swift_dynamicCastClass(v45, v46);
      if (v47)
      {
        v48 = v47 + qword_100814510;
        *(_QWORD *)(v48 + 8) = &off_100725B18;
        swift_unknownObjectWeakAssign(v48, v28);
      }
    }
  }
  v49 = (uint64_t (**)())&a1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines];
  v50 = *(_QWORD *)&a1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines + 8];
  *v49 = sub_100051330;
  v49[1] = 0;
  swift_release(v50);
  v51 = *(void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel];
  v53 = *v49;
  v52 = v49[1];
  v54 = swift_retain(v52);
  v55 = ((uint64_t (*)(char *, __n128))v53)(a1, v54);
  v56 = objc_msgSend(v51, "setNumberOfLines:", v55, swift_release(v52).n128_f64[0]);
  JUScreenClassGetMain(v56);
  v57 = objc_msgSend(v28, "traitCollection");
  sub_1005F464C((uint64_t)v57, (uint64_t)v23, v58);

  v59 = objc_msgSend(v28, "traitCollection");
  LOBYTE(v55) = UITraitCollection.isSizeClassRegular.getter(v59);

  if ((v55 & 1) != 0)
  {
    v60 = (char *)objc_msgSend(v28, "traitCollection");
    sub_1005F49A4(v60, (uint64_t)v20, v61);

  }
  else
  {
    sub_10009E894((uint64_t)v23, (uint64_t)v20, type metadata accessor for TitleHeaderView.Style);
  }
  v62 = objc_msgSend(v28, "traitCollection");
  sub_1005F4CF8((uint64_t)v62, (uint64_t)v17, v63);

  v64 = v28;
  v65 = objc_msgSend(v64, "view");
  if (!v65)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v66 = v65;
  v67 = type metadata accessor for InsetCollectionViewControllerContentView();
  v68 = swift_dynamicCastClass(v66, v67);
  if (!v68)
  {

    goto LABEL_26;
  }
  v69 = *(unsigned __int8 *)(v68
                           + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  v90 = v17;
  if (v69)
    v70 = (uint64_t)v17;
  else
    v70 = (uint64_t)v20;
  v71 = (uint64_t)v14;
  sub_10009E894(v70, (uint64_t)v14, type metadata accessor for TitleHeaderView.Style);
  objc_msgSend(v51, "setAllowsDefaultTighteningForTruncation:", 1);
  v72 = qword_100852E58;
  v73 = *(_QWORD *)&v64[qword_100852E58];
  v74 = swift_retain(v73);
  ArcadeDiffablePagePresenter.pageTitle.getter(v74);
  v76 = v75;
  v77 = swift_release(v73).n128_u64[0];
  if (v76)
  {
    v78 = String._bridgeToObjectiveC()();
    v77 = swift_bridgeObjectRelease(v76).n128_u64[0];
  }
  else
  {
    v78 = 0;
  }
  objc_msgSend(v51, "setText:", v78, *(double *)&v77);

  v79 = v91;
  sub_10009E894(v71, v91, type metadata accessor for TitleHeaderView.Style);
  sub_1005A235C(v79);
  v80 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(a1, "setBackgroundColor:", v80);

  v81 = qword_1007F7DB8;
  v82 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v64[qword_1007F7DB8]+ OBJC_IVAR____TtC22SubscribePageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView);

  if (!v82)
  {
    swift_unknownObjectWeakAssign(*(_QWORD *)&v64[v81]+ OBJC_IVAR____TtC22SubscribePageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView, a1);
    v83 = *(_QWORD *)&v64[v72];
    v84 = swift_retain(v83);
    v85 = (uint64_t)v89;
    ArcadeDiffablePagePresenter.titleEffect.getter(v84);
    swift_release(v83);
    sub_1005A28D0(v85, 0, 0, 1, 0);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v85, v88);
  }
  objc_msgSend(a1, "setNeedsLayout");

  sub_10002F0D4(v71, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v90, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v20, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v23, type metadata accessor for TitleHeaderView.Style);
}

void sub_10009CB54(void *a1)
{
  uint64_t ObjectType;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;

  ObjectType = swift_getObjectType();
  v10 = a1;
  v3 = objc_msgSend(v10, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "bounds");
    v6 = v5;
    v8 = v7;

    v9 = sub_10000E99C(&qword_1007F83B0, type metadata accessor for ArcadeDiffablePageViewController, (uint64_t)byte_10067F0C0);
    ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v9, v6, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_10009CC00()
{
  char *v0;
  void *v1;
  double v2;
  _BOOL4 v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  _BOOL4 v9;
  uint64_t v10;
  id v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (v1)
  {
    objc_msgSend(v1, "alpha");
    v3 = v2 <= 0.5;
  }
  else
  {
    v3 = 1;
  }
  v4 = objc_msgSend(v0, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "navigationBar");

    objc_msgSend(v6, "_backgroundOpacity");
    v8 = v7;

    v9 = v8 <= 0.5;
  }
  else
  {
    v9 = 1;
  }
  if (v3 && v9)
  {
    v10 = *(_QWORD *)&v0[qword_1007F7DA8];
    if (*(_QWORD *)&v0[qword_100852E88] == v10)
      return;
    *(_QWORD *)&v0[qword_100852E88] = v10;
  }
  else
  {
    if (!*(_QWORD *)&v0[qword_100852E88])
      return;
    *(_QWORD *)&v0[qword_100852E88] = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone((Class)UIStatusBarAnimationParameters), "init");
  objc_msgSend(v11, "setSkipFencing:", 1);
  objc_msgSend(v0, "_setNeedsStatusBarAppearanceUpdateWithAnimationParameters:", v11);

}

void sub_10009CD78()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = qword_1007F7DB0;
  if (*(_QWORD *)(*(_QWORD *)&v0[qword_1007F7DB0] + 16))
  {
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      v4 = type metadata accessor for InsetCollectionViewControllerContentView();
      v5 = swift_dynamicCastClass(v3, v4);
      if (v5)
      {
        v6 = *(_BYTE *)(v5
                      + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

        if ((v6 & 1) == 0)
          swift_bridgeObjectRetain(*(_QWORD *)&v0[v1]);
        return;
      }

    }
    __break(1u);
  }
}

void sub_10009CE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];
  _BYTE v16[24];

  if (a1)
  {
    v3 = a2 + 16;
    swift_beginAccess(a2 + 16, v16, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = (void *)Strong;
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
      swift_retain(v6);
      swift_retain(a1);

      swift_beginAccess(v3, v15, 0, 0);
      v7 = swift_unknownObjectWeakLoadStrong(v3);
      if (v7 && (v8 = (void *)v7, v9 = UIResponder.nearestActionRunner.getter(), v8, v9))
      {
        swift_beginAccess(v3, v12, 0, 0);
        v10 = swift_unknownObjectWeakLoadStrong(v3);
        if (v10)
        {
          v11 = v10;
          *((_QWORD *)&v14 + 1) = type metadata accessor for ArcadeDiffablePageViewController(0);
          *(_QWORD *)&v13 = v11;
        }
        else
        {
          v13 = 0u;
          v14 = 0u;
        }
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a1, &v13, v6);
        swift_release(v6);
        swift_release(v9);
        swift_release(a1);
        sub_100011088((uint64_t)&v13, &qword_1007F6E90);
      }
      else
      {
        swift_release(v6);
        swift_release(a1);
      }
    }
  }
}

uint64_t sub_10009CF5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v32 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_100804D20);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - v18;
  sub_10009E894(a1, (uint64_t)v10, type metadata accessor for FlowDestination);
  if (swift_getEnumCaseMultiPayload(v10, v8) != 8)
  {
    sub_10002F0D4((uint64_t)v10, type metadata accessor for FlowDestination);
LABEL_9:
    v25 = 0;
    return v25 & 1;
  }
  v31 = v13;
  swift_release(*v10);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F7980);
  sub_10005596C((uint64_t)v10 + *(int *)(v20 + 48), (uint64_t)v19);
  DiffablePagePresenter.pageUrl.getter(v21);
  v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1000194E4((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_1007F5150);
  sub_1000194E4((uint64_t)v19, v22, (uint64_t *)&unk_1007F5150);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v24 = v32;
  if (v23((uint64_t)v7, 1, v32) != 1)
  {
    v26 = (uint64_t)v31;
    sub_1000194E4((uint64_t)v7, (uint64_t)v31, (uint64_t *)&unk_1007F5150);
    if (v23(v22, 1, v24) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v22, v24);
      v28 = sub_10000E99C(&qword_1007F8368, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v4, v24, v28);
      v29 = *(void (**)(char *, uint64_t))(v2 + 8);
      v29(v4, v24);
      sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F5150);
      sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F5150);
      v29((char *)v26, v24);
      sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F5150);
      return v25 & 1;
    }
    sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F5150);
    sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F5150);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v26, v24);
    goto LABEL_8;
  }
  sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F5150);
  sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F5150);
  if (v23(v22, 1, v24) != 1)
  {
LABEL_8:
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_100804D20);
    goto LABEL_9;
  }
  sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F5150);
  v25 = 1;
  return v25 & 1;
}

double sub_10009D2E0()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + qword_1007F7D80));
  sub_100019310(*(_QWORD *)(v0 + qword_1007F7D90), *(_QWORD *)(v0 + qword_1007F7D90 + 8));

  swift_release(*(_QWORD *)(v0 + qword_100851128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1007F7DB0));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_1007F7DB8)).n128_u64[0];
  return result;
}

double sub_10009D360(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_1007F7D80));
  sub_100019310(*(_QWORD *)(a1 + qword_1007F7D90), *(_QWORD *)(a1 + qword_1007F7D90 + 8));

  swift_release(*(_QWORD *)(a1 + qword_100851128));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1007F7DB0));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_1007F7DB8)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ArcadeDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F7DE8;
  if (!qword_1007F7DE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeDiffablePageViewController);
  return result;
}

uint64_t sub_10009D428(uint64_t a1)
{
  _QWORD v2[10];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_100673368;
  v2[2] = &unk_100673380;
  v2[3] = &unk_100673398;
  v2[4] = &unk_100673380;
  v2[5] = &unk_1006733B0;
  v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 10, v2, a1 + 1264);
}

uint64_t sub_10009D4C0()
{
  return type metadata accessor for ArcadeDiffablePageViewController(0);
}

uint64_t sub_10009D4C8(uint64_t a1)
{
  return sub_10009CF5C(a1) & 1;
}

double sub_10009D4EC(char a1, char a2, char a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double result;
  void **v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void *v24;
  void *v25;
  uint64_t v26;

  v7 = swift_allocObject(&unk_100725B98, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v3);
  v8 = swift_allocObject(&unk_100725BC0, 26, 7);
  *(_QWORD *)(v8 + 16) = v7;
  v9 = a1 & 1;
  *(_BYTE *)(v8 + 24) = a1;
  v10 = a2 & 1;
  *(_BYTE *)(v8 + 25) = a2;
  *(_QWORD *)&v11 = swift_retain(v7).n128_u64[0];
  if ((a3 & 1) != 0
    && (v12 = objc_msgSend(v3, "transitionCoordinator", v11)) != 0)
  {
    v13 = v12;
    swift_release(v7);
    v14 = swift_allocObject(&unk_100725BE8, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_10009EED8;
    *(_QWORD *)(v14 + 24) = v8;
    v25 = sub_10009EF0C;
    v26 = v14;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_10033F618;
    v24 = &unk_100725C00;
    v15 = _Block_copy(&v21);
    v16 = v26;
    swift_retain(v8);
    swift_release(v16);
    v17 = swift_allocObject(&unk_100725B98, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v3);
    v18 = swift_allocObject(&unk_100725C38, 26, 7);
    *(_QWORD *)(v18 + 16) = v17;
    *(_BYTE *)(v18 + 24) = v10;
    *(_BYTE *)(v18 + 25) = v9;
    v25 = sub_10009EF50;
    v26 = v18;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_10033F618;
    v24 = &unk_100725C50;
    v19 = _Block_copy(&v21);
    objc_msgSend(v13, "animateAlongsideTransition:completion:", v15, v19, swift_release(v26).n128_f64[0]);
    swift_release(v8);
    _Block_release(v19);
    _Block_release(v15);
    *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
  }
  else
  {
    sub_10009DBE4(v7, v9, a2 & 1);
    swift_release(v8);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_10009D72C(uint64_t a1, double a2)
{
  uint64_t v3;
  char *Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[24];
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong && (v5 = *(_QWORD *)&Strong[qword_100851120], Strong, v5))
  {
    swift_beginAccess(v3, v12, 0, 0);
    v6 = swift_unknownObjectWeakLoadStrong(v3);
    if (!v6)
      goto LABEL_8;
    v7 = (void *)v6;
    sub_10009D83C(0, a2);
  }
  else
  {
    swift_beginAccess(v3, v12, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v3);
    if (!v8)
      goto LABEL_8;
    v7 = (void *)v8;
    objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView), "setAlpha:", a2);
    sub_10009CC00();
  }

LABEL_8:
  swift_beginAccess(v3, v11, 0, 0);
  v9 = swift_unknownObjectWeakLoadStrong(v3);
  if (v9)
  {
    v10 = (void *)v9;
    sub_10009D944();

  }
}

void sub_10009D83C(char a1, double a2)
{
  char *v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = objc_msgSend(v2, "navigationController");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "navigationBar");

    objc_msgSend(v7, "_setBackgroundOpacity:", a2);
  }
  v8 = objc_msgSend(v2, "navigationController");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "navigationBar");

    objc_msgSend(v10, "_setTitleOpacity:", a2);
  }
  if ((a1 & 1) == 0)
  {
    v11 = *(_QWORD *)&v2[qword_100851120];
    if (v11)
      objc_msgSend(*(id *)(v11 + OBJC_IVAR____TtC22SubscribePageExtension19ArcadePageTitleView_lockupView), "setAlpha:", a2);
  }
  sub_10009CC00();
}

void sub_10009D944()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL4 v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v22 = v1;
    v2 = objc_msgSend(v1, "navigationBar");
    objc_msgSend(v2, "_backgroundOpacity");
    v4 = v3;

    if (v4 >= 1.0)
    {
      v12 = objc_msgSend(v22, "navigationBar");
      objc_msgSend(v12, "setUserInteractionEnabled:", 1);
    }
    else
    {
      v5 = objc_msgSend(v22, "navigationItem");
      v6 = objc_msgSend(v5, "leftBarButtonItems");

      if (!v6)
        goto LABEL_10;
      v7 = sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
      {
        v20 = v8 < 0 ? v8 : v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v9 = _CocoaArrayWrapper.endIndex.getter(v20);
        swift_bridgeObjectRelease(v8);
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v10 = swift_bridgeObjectRelease(v8).n128_u64[0];
      if (v9)
      {
        v11 = 1;
      }
      else
      {
LABEL_10:
        v13 = objc_msgSend(v22, "navigationItem");
        v14 = objc_msgSend(v13, "rightBarButtonItems");

        if (v14)
        {
          v15 = sub_100019574(0, (unint64_t *)&qword_1007F83C0, UIBarButtonItem_ptr);
          v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

          if ((unint64_t)v16 >> 62)
          {
            if (v16 < 0)
              v21 = v16;
            else
              v21 = v16 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v16);
            v17 = _CocoaArrayWrapper.endIndex.getter(v21);
            swift_bridgeObjectRelease(v16);
          }
          else
          {
            v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v10 = swift_bridgeObjectRelease(v16).n128_u64[0];
          v11 = v17 != 0;
        }
        else
        {
          v11 = 0;
        }
      }
      v12 = objc_msgSend(v22, "navigationBar", *(double *)&v10);
      v18 = objc_msgSend(v0, "traitCollection");
      v19 = UITraitCollection.isSizeClassRegular.getter(v18);

      objc_msgSend(v12, "setUserInteractionEnabled:", v19 & v11);
    }

  }
}

void sub_10009DBE4(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  void *Strong;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  __n128 v34;
  _BYTE v35[24];

  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v35, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(v8, "navigationController");
    if (!v9)
    {

      goto LABEL_20;
    }
    v10 = v9;
    v11 = objc_msgSend(v9, "viewControllers");

    v12 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v24 = v3;
      else
        v24 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v25 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v3);
      if (v25)
        goto LABEL_5;
    }
    else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v3 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v13 = *(id *)(v3 + 32);
      }
      v14 = v13;
      swift_bridgeObjectRelease(v3);
      v3 = v8;
      v15 = v14;
      v16 = static NSObject.== infix(_:_:)(v15, v3);

      if ((v16 & 1) != 0)
      {
        v17 = (id)v3;
        v18 = objc_msgSend(v17, "view");
        if (!v18)
        {
LABEL_36:
          __break(1u);
          return;
        }
        v3 = (uint64_t)v18;
        v19 = type metadata accessor for InsetCollectionViewControllerContentView();
        v20 = swift_dynamicCastClass(v3, v19);
        if (!v20)
        {
LABEL_35:

          goto LABEL_36;
        }
        v21 = *(_BYTE *)(v20
                       + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

        if ((v21 & 1) == 0 && (a2 & 1) != 0)
        {
          v22 = a3 & 1;
          v23 = 1.0;
LABEL_29:
          sub_10009D83C(v22, v23);
LABEL_30:

          return;
        }
      }
LABEL_20:
      v26 = *(_QWORD *)&v8[qword_100851128];
      if (!v26 || !*(_QWORD *)&v8[qword_100851120])
      {
        v23 = 0.0;
        if ((a2 & 1) != 0)
          v23 = 1.0;
        v22 = 0;
        goto LABEL_29;
      }
      v27 = objc_msgSend(v8, "collectionView", swift_retain(*(_QWORD *)&v8[qword_100851128]).n128_f64[0]);
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, "_systemContentInset");
        v30 = v29;
        objc_msgSend(v28, "contentOffset");
        v32 = v31;
        v33 = objc_msgSend(v28, "contentInset");
        v34.n128_f64[0] = fmin((v30 + v32 + v34.n128_f64[0] - *(double *)(v26 + 32)) / *(double *)(v26 + 40), 1.0);
        if (v34.n128_f64[0] < 0.0)
          v34.n128_f64[0] = 0.0;
        (*(void (**)(id, __n128))(v26 + 16))(v33, v34);
        swift_release(v26);

        goto LABEL_30;
      }
      goto LABEL_34;
    }

    swift_bridgeObjectRelease(v3);
    goto LABEL_20;
  }
}

void sub_10009DEC4(void *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  _BYTE v18[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = (id *)&UITransitionContextFromViewControllerKey;
    if ((a3 & 1) == 0)
      v10 = (id *)&UITransitionContextToViewControllerKey;
    v11 = *v10;
    if (objc_msgSend(a1, "isCancelled")
      && (v12 = objc_msgSend(a1, "viewControllerForKey:", v11)) != 0)
    {
      v13 = v12;
      sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
      v14 = v9;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v15, v14);

      if ((v16 & 1) != 0)
      {
        swift_unknownObjectWeakInit(&v17, v14);
        sub_1003549C4((uint64_t)&v17, (a4 & 1) == 0, (a3 & 1) == 0);
        swift_unknownObjectWeakDestroy(&v17);
      }

    }
    else
    {

    }
  }
}

unint64_t sub_10009E014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_10000DF3C(&qword_1007F8378);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_10000DF3C(&qword_1007F8380);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000194E4(v13, (uint64_t)v5, &qword_1007F8378);
    result = sub_10009E1CC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for EditorialPageKey(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7];
    v21 = type metadata accessor for URL(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17, v10, v21);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10009E1CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for EditorialPageKey(0);
  v6 = sub_10000E99C(&qword_1007F8388, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialPageKey, (uint64_t)&protocol conformance descriptor for EditorialPageKey);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10009E238(a1, v7);
}

unint64_t sub_10009E238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for EditorialPageKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_10000E99C(&qword_1007F8390, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialPageKey, (uint64_t)&protocol conformance descriptor for EditorialPageKey);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_10009E378(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t result;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  _QWORD v55[4];

  ObjectType = swift_getObjectType();
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StoreTab.Identifier(0, v6);
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for StoreTab(0);
  v54 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v51 = (char *)&v49 - v15;
  v2[qword_1007F7D88] = 1;
  v16 = &v2[qword_1007F7D90];
  *v16 = 0;
  v16[1] = 0;
  v2[qword_1007F7D98] = 2;
  v17 = &v2[qword_100851120];
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)&v2[qword_100851128] = 0;
  *(_QWORD *)&v2[qword_1007F7DA8] = 0;
  *(_QWORD *)&v2[qword_1007F7DB0] = &_swiftEmptySetSingleton;
  v18 = type metadata accessor for InAppMessagesManager();
  v19 = *(_QWORD *)(a2 + qword_100854098);
  if (v19)
  {
    *(_QWORD *)&v2[qword_1007F7D80] = v19;
    v20 = type metadata accessor for ArcadeTitleEffectCollectionElementsObserver(0);
    v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    swift_unknownObjectWeakInit(v21 + OBJC_IVAR____TtC22SubscribePageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView, 0);
    v22 = v21
        + OBJC_IVAR____TtC22SubscribePageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeTitleEffectUpdateSubscription;
    v23 = sub_10000DF3C(&qword_1007F8370);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v24 = v2;
    swift_retain(v19);
    v25 = swift_retain(a1);
    ArcadeDiffablePagePresenter.titleEffect.getter(v25);
    v26 = swift_release(a1);
    *(_QWORD *)&v24[qword_1007F7DB8] = v21;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v49 + 104))(v11, enum case for StoreTab.Identifier.arcade(_:), v50, v26);
    v27 = swift_retain(a1);
    DiffablePagePresenter.pageUrl.getter(v27);
    swift_release(a1);
    v28 = sub_10009E014((uint64_t)_swiftEmptyArrayStorage);
    v29 = v51;
    StoreTab.init(identifier:url:title:imageIdentifier:editorialPageUrls:)(v11, v8, 0, 0, 0, 0, v28);
    v30 = v52;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v13, v29, v52);
    v31 = objc_allocWithZone((Class)type metadata accessor for ArcadeHeaderButtonContainer());
    swift_retain(a2);
    v32 = sub_100239614((uint64_t)v13, a2);
    swift_release(a2);
    *(_QWORD *)&v24[qword_1007F7DA0] = v32;

    swift_retain(a1);
    swift_retain(a2);
    v33 = (void *)sub_1005CAF48(a1, a2);
    v34 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
    v35 = type metadata accessor for ObjectGraph(0);
    v36 = v33;
    inject<A, B>(_:from:)(v55, v34, a2, v34, v35);
    v37 = (void *)v55[0];
    v38 = *(void **)(*(_QWORD *)&v36[qword_1007F7DA0]
                   + OBJC_IVAR____TtC22SubscribePageExtension27ArcadeHeaderButtonContainer_accountButton);
    v39 = v36;
    v40 = v38;
    FloatingUnifiedMessageCoordinator.register(accountButton:with:for:)();

    v41 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
    v42 = swift_allocObject(v41, 48, 7);
    *(_OWORD *)(v42 + 16) = xmmword_10066FBA0;
    *(_QWORD *)(v42 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v42 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v55[3] = ObjectType;
    v55[0] = v39;
    v43 = v39;
    v44 = UIViewController.registerForTraitChanges(_:target:action:)(v42, v55, "preferredContentSizeCategoryDidChange");

    swift_unknownObjectRelease(v44);
    v45 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v29, v30, v45);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v55);
    return (uint64_t)v43;
  }
  else
  {
    v47 = v18;
    v48 = v2;
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v47);
    __break(1u);
  }
  return result;
}

uint64_t sub_10009E7FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009E820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10009E844(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10009C50C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_10009E84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007FAFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009E894(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_10009E8D8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (!v2)
  {
    v3 = objc_msgSend(v0, "tabBarController");
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, "tabBar");

      v6 = objc_msgSend(v5, "_backdropViewLayerGroupName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v4 = v7;

    }
    v8 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
    v9 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v8);

    if (v4)
    {
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "_setGroupName:", v10);
      swift_bridgeObjectRelease(v4);

    }
    objc_msgSend(v9, "setAlpha:", 0.0);
    v11 = v9;
    sub_10052BF9C(v9);

    v2 = *(void **)&v0[v1];
  }
  objc_msgSend(v2, "setAlpha:", 0.0);
  sub_10009CC00();
}

void sub_10009EA54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  char *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double MinY;
  uint64_t v41;
  double v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  unsigned int v48;
  id v49;
  char v50[8];
  CGRect v51;

  v1 = v0;
  v2 = qword_100851128;
  if (!*(_QWORD *)&v0[qword_100851128])
  {
    v3 = *(id *)&v0[qword_100852E90];
    CompoundScrollObserver.removeChild(_:)(0, 0);

    v4 = swift_allocObject(&unk_100725B98, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16, v1);
    v5 = type metadata accessor for NavigationBarVisibilityScrollObserver();
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 32) = xmmword_100673310;
    *(_QWORD *)(v6 + 16) = sub_10009EED0;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = *(_QWORD *)&v1[v2];
    *(_QWORD *)&v1[v2] = v6;
    swift_release(v7);
    v8 = *(_QWORD *)&v1[v2];
    if (v8)
      v9 = sub_10000E99C(&qword_1007F83B8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationBarVisibilityScrollObserver, (uint64_t)&unk_1006879B8);
    else
      v9 = 0;
    swift_retain(v8);
    v10 = v3;
    CompoundScrollObserver.addChild(_:)(v8, v9);

    swift_release(v8);
  }
  sub_10009E8D8();
  v11 = objc_msgSend(v1, "view");
  if (!v11)
    goto LABEL_37;
  v12 = v11;
  v13 = type metadata accessor for InsetCollectionViewControllerContentView();
  v14 = swift_dynamicCastClass(v12, v13);
  if (!v14)
  {
LABEL_36:

LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v15 = *(_BYTE *)(v14
                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v15 & 1) != 0)
    goto LABEL_23;
  v17 = objc_msgSend(v1, "navigationController");

  if (!v17)
    goto LABEL_23;
  v18 = objc_msgSend(v1, "navigationController");
  if (!v18)
    goto LABEL_23;
  v19 = v18;
  v20 = objc_msgSend(v18, "viewControllers");

  v12 = (void *)sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v12);

  if (!((unint64_t)v21 >> 62))
  {
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
LABEL_22:
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v21).n128_u64[0];
    goto LABEL_23;
  }
  if (v21 < 0)
    v27 = v21;
  else
    v27 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v21);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v21);
  if (!v28)
    goto LABEL_22;
LABEL_13:
  if ((v21 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v22 = *(id *)(v21 + 32);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_36;
  }
  v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
LABEL_16:
  v23 = v22;
  swift_bridgeObjectRelease(v21);
  v24 = v1;
  v25 = v23;
  v26 = static NSObject.== infix(_:_:)(v25, v24);

  if ((v26 & 1) != 0)
  {
    swift_unknownObjectWeakInit(v50, v24);
    sub_1003549C4((uint64_t)v50, 0, 0);
    swift_unknownObjectWeakDestroy(v50);
    goto LABEL_27;
  }
LABEL_23:
  v29 = objc_msgSend(v1, "view", v16);
  if (!v29)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "safeAreaLayoutGuide");

  objc_msgSend(v31, "layoutFrame");
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;

  v51.origin.x = v33;
  v51.origin.y = v35;
  v51.size.width = v37;
  v51.size.height = v39;
  MinY = CGRectGetMinY(v51);
  v41 = *(_QWORD *)&v1[v2];
  if (!v41)
    goto LABEL_27;
  v42 = MinY;
  v43 = objc_msgSend(v1, "collectionView", swift_retain(*(_QWORD *)&v1[v2]).n128_f64[0]);
  if (!v43)
  {
LABEL_39:
    __break(1u);
    return;
  }
  v44 = v43;
  sub_1003830FC(v43, v42);
  swift_release(v41);

LABEL_27:
  sub_10009CC00();
  v45 = objc_msgSend(v1, "viewIfLoaded");
  if (!v45
    || (v46 = v45, v47 = objc_msgSend(v45, "window"), v46, !v47)
    || (v48 = objc_msgSend(v47, "isHidden"), v47, v48))
  {
    v49 = objc_msgSend(v1, "presentedViewController");

    if (!v49)
    {
      if (objc_msgSend(v1, "isViewLoaded"))
      {
        swift_unknownObjectWeakInit(v50, v1);
        sub_1003549C4((uint64_t)v50, 1, 1);
        swift_unknownObjectWeakDestroy(v50);
      }
    }
  }
  sub_10009D944();
}

void sub_10009EED0(double a1)
{
  uint64_t v1;

  sub_10009D72C(v1, a1);
}

void sub_10009EED8()
{
  uint64_t v0;

  sub_10009DBE4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_10009EEE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009EF0C(uint64_t a1)
{
  uint64_t v1;

  return sub_10002754C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10009EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10009EF24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10009EF2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 26, 7);
}

void sub_10009EF50(void *a1)
{
  uint64_t v1;

  sub_10009DEC4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25));
}

uint64_t sub_10009EF60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10009EF84()
{
  sub_10009A0EC();
}

void sub_10009EFA4(uint64_t a1)
{
  uint64_t v1;

  sub_10009CE14(a1, v1);
}

double sub_10009EFAC(__n128 a1)
{
  return sub_10009AC0C(a1);
}

double sub_10009EFB4(uint64_t *a1)
{
  uint64_t v1;

  return sub_10009AD6C(a1, *(void (**)(uint64_t (*)(), uint64_t, __n128))(v1 + 16));
}

void sub_10009EFBC()
{
  sub_10009A754();
}

BOOL sub_10009F004(void **a1, char **a2)
{
  return sub_1000A02C4(*a1, *a2);
}

id sub_10009F010()
{
  _BYTE *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode] = 1;
  v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_isCollapsing] = 0;
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_mediaOverlayStyle];
  v3 = enum case for MediaOverlayStyle.matchSystem(_:);
  v4 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView] = 0;
  v7.receiver = v0;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10009F0FC(2);
  sub_10009F0FC(0);
  sub_10009F22C();
  sub_10009F3B4();

  return v5;
}

void sub_10009F0FC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  char *v10;
  void *v11;
  uint64_t v12;

  if (a1 != 1)
  {
    v2 = v1;
    if (a1 == 2)
    {
      v3 = OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView;
      if (*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView])
        return;
      v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
      v5 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v4;

      v6 = *(void **)&v1[v3];
      if (!v6)
        return;
      v7 = v6;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v7, "setFrame:");

      v8 = *(void **)&v2[v3];
      if (!v8)
        return;
LABEL_10:
      objc_msgSend(v8, "setUserInteractionEnabled:", 0);
      v12 = *(_QWORD *)&v2[v3];
      if (v12)
        objc_msgSend(v2, "insertSubview:atIndex:", v12, 0);
      return;
    }
    v3 = OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView])
    {
      objc_msgSend(v1, "bounds");
      v9 = objc_allocWithZone((Class)type metadata accessor for MediaOverlayGradientBlurView());
      v10 = sub_1001428E0(0);
      v11 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v10;

      v8 = *(void **)&v1[v3];
      if (v8)
        goto LABEL_10;
    }
  }
}

void sub_10009F22C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode);
  sub_1000A03A8(v2);
  sub_10009F0FC((uint64_t)v2);
  sub_1000A0394(v2);
  v3 = *(_QWORD *)(v0 + v1);
  if (v3 == 2)
  {
    v5 = *(void **)(v0
                  + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
    if (v5)
      objc_msgSend(v5, "setAlpha:", 0.0);
    v6 = OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView;
    v7 = *(void **)(v0
                  + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView);
    if (v7)
    {
      v8 = objc_msgSend(v7, "effect");
      if (!v8)
      {
        v9 = *(void **)(v0 + v6);
        if (!v9)
          return;
        v10 = (void *)objc_opt_self(UIBlurEffect);
        v11 = v9;
        v14 = objc_msgSend(v10, "effectWithStyle:", 7);
        objc_msgSend(v11, "setEffect:", v14);

        v8 = v14;
      }

    }
  }
  else
  {
    if (v3 == 1)
    {
      v4 = *(void **)(v0
                    + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
      if (v4)
        objc_msgSend(v4, "setAlpha:", 0.0);
    }
    else
    {
      v12 = *(void **)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
      if (v12)
        objc_msgSend(v12, "setAlpha:", 1.0);
    }
    v13 = *(void **)(v0
                   + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView);
    if (v13)
      objc_msgSend(v13, "setEffect:", 0);
  }
}

void sub_10009F3B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  __n128 v7;
  uint64_t (*v8)(char *, char *, uint64_t, __n128);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char v19[24];

  v1 = v0;
  v2 = type metadata accessor for MediaOverlayStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = &v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_mediaOverlayStyle];
  v7 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_mediaOverlayStyle], v19, 0, 0);
  v8 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v3 + 16);
  v9 = v8(v5, v6, v2, v7);
  v10 = MediaOverlayStyle.userInterfaceStyle.getter(v9);
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  objc_msgSend(v1, "setOverrideUserInterfaceStyle:", v10);
  v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
  if (v12)
  {
    ((void (*)(char *, char *, uint64_t))v8)(v5, v6, v2);
    v13 = v12;
    v14 = MediaOverlayStyle.userInterfaceStyle.getter(v13);
    v11(v5, v2);
    objc_msgSend(v13, "setOverrideUserInterfaceStyle:", v14);

  }
  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView];
  if (v15)
  {
    ((void (*)(char *, char *, uint64_t))v8)(v5, v6, v2);
    v16 = v15;
    v17 = MediaOverlayStyle.userInterfaceStyle.getter(v16);
    v11(v5, v2);
    objc_msgSend(v16, "setOverrideUserInterfaceStyle:", v17);

  }
}

void sub_10009F62C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double Height;
  double MinY;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  id v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  id v48;
  uint64_t v49;
  void *v50;
  double v51;
  id v52;
  char *v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  id v61;
  uint64_t v62;
  char *v63;
  CGRect v64;
  CGRect v65;

  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_isCollapsing] & 1) == 0)
  {
    v1 = v0;
    v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode];
    if ((unint64_t)v2 >= 3)
    {
      v3 = v2;
      objc_msgSend(v3, "frame");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v12 = objc_msgSend(v3, "superview");
      objc_msgSend(v1, "convertRect:fromView:", v12, v5, v7, v9, v11);
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v64);
      v65.origin.x = v14;
      v65.origin.y = v16;
      v65.size.width = v18;
      v65.size.height = v20;
      MinY = CGRectGetMinY(v65);
      v23 = OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView;
      v24 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
      if (!v24)
        goto LABEL_9;
      v25 = Height - (Height - MinY);
      v26 = (v25 + -100.0) / Height;
      v27 = OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_colorGradientStartY;
      *(double *)&v24[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_colorGradientStartY] = v26;
      v28 = *(void **)&v24[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_colorGradientView];
      v29 = v24;
      v30 = objc_msgSend(v28, "layer");
      v31 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v30, v31, 0, 0, 0), "startPoint");
      v33 = v32;

      v34 = *(double *)&v24[v27];
      v35 = objc_msgSend(v28, "layer");
      v36 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v35, v36, 0, 0, 0), "setStartPoint:", v33, v34);

      v37 = objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_secondaryColorGradientView], "layer");
      v38 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v37, v38, 0, 0, 0), "setStartPoint:", v33, v34);

      v39 = *(char **)&v1[v23];
      if (!v39)
        goto LABEL_9;
      v40 = OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_blurGradientStartY;
      *(double *)&v39[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_blurGradientStartY] = v26;
      v41 = *(void **)&v39[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_blurGradientMaskView];
      v42 = v39;
      v43 = objc_msgSend(v41, "layer");
      v44 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v43, v44, 0, 0, 0), "startPoint");
      v46 = v45;

      v47 = *(double *)&v39[v40];
      v48 = objc_msgSend(v41, "layer");
      v49 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v48, v49, 0, 0, 0), "setStartPoint:", v46, v47);

      v50 = *(void **)&v1[v23];
      if (!v50)
        goto LABEL_9;
      v51 = (v25 + 30.0) / Height;
      v52 = v50;
      sub_100141B08(v51);

      v53 = *(char **)&v1[v23];
      if (v53)
      {
        v54 = OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_blurGradientEndY;
        *(double *)&v53[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_blurGradientEndY] = v51;
        v55 = *(void **)&v53[OBJC_IVAR____TtC22SubscribePageExtension28MediaOverlayGradientBlurView_blurGradientMaskView];
        v63 = v53;
        v56 = objc_msgSend(v55, "layer");
        v57 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v56, v57, 0, 0, 0), "endPoint");
        v59 = v58;

        v60 = *(double *)&v53[v54];
        v61 = objc_msgSend(v55, "layer");
        v62 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v61, v62, 0, 0, 0), "setEndPoint:", v59, v60);

        sub_1000A0394(v2);
        sub_1000A0394(v2);

      }
      else
      {
LABEL_9:
        sub_1000A0394(v2);
        sub_1000A0394(v2);
      }
    }
  }
}

void sub_10009FAF0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  void *v6;
  char v7;

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode;
  v5 = *(char **)(v2
                + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode) = a1;
  sub_1000A03A8(v5);
  sub_1000A03A8(a1);
  sub_1000A0394(v5);
  v6 = *(void **)(v2 + v4);
  if (v6 == (void *)2)
  {
    if (v5 == (char *)2)
      goto LABEL_15;
    goto LABEL_14;
  }
  if (v6 == (void *)1)
  {
    if (v5 == (char *)1)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((unint64_t)(v5 - 1) < 2)
  {
LABEL_14:
    sub_10009F22C();
    goto LABEL_15;
  }
  if (!v6)
  {
    if (!v5)
      goto LABEL_15;
    sub_1000A0394(0);
    goto LABEL_14;
  }
  if (!v5)
    goto LABEL_14;
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  sub_1000A03A8(v5);
  sub_1000A03A8(v6);
  v7 = static NSObject.== infix(_:_:)(v6, v5);
  sub_1000A0394(v5);
  sub_1000A0394(v6);
  if ((v7 & 1) == 0)
    goto LABEL_14;
LABEL_15:
  sub_10009F62C();
  sub_1000A0394(a1);
  sub_1000A0394(v5);
}

void sub_10009FC04()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v2, "setFrame:");

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_fullProtectionView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v4, "setFrame:");

  }
  sub_10009F62C();
}

id sub_10009FCF0(uint64_t a1, double a2, double a3)
{
  char *v3;
  id v7;
  char *v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double MaxY;
  objc_super v29;
  CGRect v30;

  v29.receiver = v3;
  v29.super_class = (Class)swift_getObjectType();
  v7 = objc_msgSendSuper2(&v29, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    v8 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode];
    if ((unint64_t)(v8 - 1) >= 2)
    {
      if (v8)
      {
        sub_1000A03A8(*(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension42AppPromotionScrollableContentContainerView_protectionMode]);
        v9 = v8;
        objc_msgSend(v9, "frame");
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v17 = v16;
        v18 = objc_msgSend(v9, "superview");
        objc_msgSend(v3, "convertRect:fromView:", v18, v11, v13, v15, v17);
        v20 = v19;
        v22 = v21;
        v24 = v23;
        v26 = v25;

        v30.origin.x = v20;
        v30.origin.y = v22;
        v30.size.width = v24;
        v30.size.height = v26;
        MaxY = CGRectGetMaxY(v30);
        sub_1000A0394(v8);
        sub_1000A0394(v8);
        LOBYTE(v8) = MaxY < a3;
      }
    }
    else
    {
      LOBYTE(v8) = 1;
    }
    sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
    if ((static NSObject.== infix(_:_:)(v7, v3) & 1) != 0 && (v8 & 1) == 0)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t sub_10009FF8C()
{
  return type metadata accessor for AppPromotionScrollableContentContainerView(0);
}

uint64_t type metadata accessor for AppPromotionScrollableContentContainerView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F8450;
  if (!qword_1007F8450)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionScrollableContentContainerView);
  return result;
}

uint64_t sub_10009FFD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = &unk_1006734A8;
  result = type metadata accessor for MediaOverlayStyle(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1006734C0;
    v4[4] = &unk_1006734C0;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppPromotionScrollableContentContainerView.ProtectionMode(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 1 < 0)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void destroy for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

void **assignWithCopy for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  id v9;
  id v12;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 - 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      *a1 = v7;
      v12 = v7;

      return a1;
    }

    v7 = *a2;
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  v9 = v7;
  return a1;
}

_QWORD *initializeWithTake for AppPromotionScrollableContentContainerView.ProtectionMode(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1, unint64_t *a2)
{
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    v4 = *a1;
  v5 = *a2;
  if ((int)v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }

  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AppPromotionScrollableContentContainerView.ProtectionMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 1;
  if (v5 >= 3)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppPromotionScrollableContentContainerView.ProtectionMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_1000A0268(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_1000A028C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2)
LABEL_5:
    *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppPromotionScrollableContentContainerView.ProtectionMode()
{
  return &type metadata for AppPromotionScrollableContentContainerView.ProtectionMode;
}

BOOL sub_1000A02C4(void *a1, char *a2)
{
  char v5;

  if (a1 == (void *)2)
    return a2 == (char *)2;
  if (a1 != (void *)1)
  {
    if ((unint64_t)(a2 - 1) < 2)
      return 0;
    if (a1)
    {
      if (a2)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
        sub_1000A03A8(a2);
        sub_1000A03A8(a1);
        v5 = static NSObject.== infix(_:_:)(a1, a2);
        sub_1000A0394(a2);
        sub_1000A0394(a1);
        if ((v5 & 1) != 0)
          return 1;
      }
      return 0;
    }
    if (a2)
    {
      sub_1000A0394(0);
      return 0;
    }
    return 1;
  }
  return a2 == (char *)1;
}

void sub_1000A0394(id a1)
{
  if ((char *)a1 - 1 >= (char *)2)

}

id sub_1000A03A8(id result)
{
  if ((char *)result - 1 >= (char *)2)
    return result;
  return result;
}

double sub_1000A03C0(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_100315268(a2, a3, *a1, a8);
}

id sub_1000A03CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _BYTE *v6;

  if (v6[OBJC_IVAR____TtC22SubscribePageExtension32UpsellBreakoutCollectionViewCell_shouldApplyBreakoutData] == 1)
  {
    v6[OBJC_IVAR____TtC22SubscribePageExtension32UpsellBreakoutCollectionViewCell_shouldApplyBreakoutData] = 0;
    sub_100313B04(*a1, a4, a3, a6);
  }
  return objc_msgSend(v6, "setNeedsLayout");
}

uint64_t sub_1000A0430()
{
  uint64_t v0;

  v0 = dispatch thunk of UpsellBreakout.clickAction.getter();
  swift_release(v0);
  if (v0)
    return 3;
  else
    return 0;
}

void sub_1000A0464(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v5;
  double v6;

  objc_msgSend(v2, "bounds");
  sub_100313670(a1, a2, v5, v6);
}

void sub_1000A04C4(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000A0510(a1, a3);
}

double sub_1000A04CC()
{
  return 0.0;
}

id sub_1000A04D8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1003158DC(a1, a4, a6);
}

uint64_t sub_1000A04E4()
{
  return sub_10000E99C(&qword_1007F8460, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBreakout, (uint64_t)&protocol conformance descriptor for UpsellBreakout);
}

void sub_1000A0510(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension32UpsellBreakoutCollectionViewCell_upsellBreakoutView);
  v5 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_artworkView);
  v6 = type metadata accessor for ArtworkView(0);
  v7 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v8 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, 1, v6, v7);

  v9 = *(void **)(*(_QWORD *)(*(_QWORD *)(v4
                                        + OBJC_IVAR____TtC22SubscribePageExtension18UpsellBreakoutView_mediaViewContainer)
                            + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (v9)
  {
    v10 = type metadata accessor for VideoView(0);
    v11 = swift_dynamicCastClass(v9, v10);
    if (v11)
    {
      v12 = v11;
      v13 = sub_10000E99C((unint64_t *)&unk_1007F4810, type metadata accessor for VideoView, (uint64_t)"\t,\v");
      v14 = v9;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v12, a2 & 1, v10, v13);

    }
  }
}

void sub_1000A0654(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  __objc2_meth_list **p_base_meths;
  __n128 v43;
  void *v44;
  uint64_t KeyPath;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  double v55;
  char *v56;
  char *v57;
  void *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  NSString v63;
  __n128 v64;
  char v65;
  double v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  void (*v72)(_QWORD *, uint64_t);
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  double v77;
  void (*v78)(char *, _QWORD, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  __n128 v92;
  void *v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  id v102;
  unint64_t v103;
  double v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  double *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char v131;
  char v132;
  char v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  __n128 v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  _QWORD aBlock[5];
  uint64_t v178;
  void *v179;

  v171 = a2;
  v3 = sub_10000DF3C((uint64_t *)&unk_1007FA750);
  __chkstk_darwin(v3);
  v170 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v151 - v6;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VideoControls(0, v9);
  __chkstk_darwin(v12);
  v168 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v167 = (char *)&v151 - v15;
  v16 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v17 = __chkstk_darwin(v16);
  v163 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for VideoFillMode(0, v17);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v20 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for VideoConfiguration(0, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v169 = (char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for AspectRatio(0);
  v175 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v164 = (char *)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for PageGrid.Direction(0);
  v26 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v159 = (char *)&v151 - v29;
  v161 = type metadata accessor for PageGrid(0);
  v157 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v31 = (uint64_t *)((char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = __chkstk_darwin(v32);
  v35 = (uint64_t *)((char *)&v151 - v34);
  v36 = type metadata accessor for FramedVideo(0, v33);
  v37 = sub_10000E99C(&qword_100800560, (uint64_t (*)(uint64_t))&type metadata accessor for FramedVideo, (uint64_t)&protocol conformance descriptor for FramedMedia);
  v173 = a1;
  ItemLayoutContext.typedModel<A>(as:)(aBlock, v36, v36, v37);
  v38 = aBlock[0];
  if (aBlock[0])
  {
    v154 = v23;
    v155 = v22;
    v156 = v11;
    v153 = v7;
    v39 = swift_retain(aBlock[0]);
    v40 = (void *)FramedMedia.caption.getter(v39);
    v41 = (uint64_t)objc_msgSend(v40, "length", swift_release(v38).n128_f64[0]);

    p_base_meths = &TodayCardChinLockupListView.base_meths;
    v174 = v20;
    v162 = v35;
    if (v41 < 1)
    {
      v57 = v176;
      objc_msgSend(*(id *)&v176[qword_10081D0A8], "setText:", 0);
      v57[qword_100857738] = 0;
      objc_msgSend(*(id *)&v57[qword_10081D098], "setHidden:", 1);
    }
    else
    {
      v152 = v26;
      v43 = swift_retain(v38);
      v44 = (void *)FramedMedia.caption.getter(v43);
      swift_release(v38);
      KeyPath = swift_getKeyPath(&unk_100673628);
      ItemLayoutContext.subscript.getter(&v179);
      swift_release(KeyPath);
      v46 = v179;
      v47 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v44);
      v48 = objc_msgSend(v44, "length");
      v49 = swift_allocObject(&unk_100725F58, 41, 7);
      *(_QWORD *)(v49 + 16) = 0;
      *(_QWORD *)(v49 + 24) = v46;
      *(_QWORD *)(v49 + 32) = v47;
      *(_BYTE *)(v49 + 40) = 1;
      v50 = swift_allocObject(&unk_100725F80, 32, 7);
      *(_QWORD *)(v50 + 16) = sub_100051938;
      *(_QWORD *)(v50 + 24) = v49;
      aBlock[4] = sub_100051958;
      v178 = v50;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10057C188;
      aBlock[3] = &unk_100725F98;
      v51 = _Block_copy(aBlock);
      v52 = v178;
      v53 = v46;
      v54 = v47;
      swift_retain(v50);
      objc_msgSend(v44, "enumerateAttributesInRange:options:usingBlock:", 0, v48, 0x100000, v51, swift_release(v52).n128_f64[0]);
      _Block_release(v51);
      LOBYTE(v52) = swift_isEscapingClosureAtFileLocation(v50, "", 113, 30, 92, 1);

      swift_release(v49);
      *(_QWORD *)&v55 = swift_release(v50).n128_u64[0];
      if ((v52 & 1) != 0)
      {
        __break(1u);
        return;
      }
      v56 = v176;
      objc_msgSend(*(id *)&v176[qword_10081D0A8], "setAttributedText:", v54, v55);
      v56[qword_100857738] = 1;
      objc_msgSend(*(id *)&v56[qword_10081D098], "setHidden:", 0);

      v20 = v174;
      v35 = v162;
      v26 = v152;
      p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
    }
    v58 = *(void **)&v176[qword_10081D0A0];
    v59 = swift_retain(v38);
    FramedMedia.ordinal.getter(v59);
    v61 = v60;
    v62 = swift_release(v38).n128_u64[0];
    if (v61)
    {
      v63 = String._bridgeToObjectiveC()();
      v62 = swift_bridgeObjectRelease(v61).n128_u64[0];
    }
    else
    {
      v63 = 0;
    }
    objc_msgSend(v58, (SEL)p_base_meths[437], v63, *(double *)&v62);

    v64 = swift_retain(v38);
    v65 = FramedMedia.isFullWidth.getter(v64);
    *(_QWORD *)&v66 = swift_release(v38).n128_u64[0];
    if ((v65 & 1) != 0)
    {
      v67 = objc_msgSend(v176, "contentView", v66);
      objc_msgSend(v67, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

    }
    else
    {
      v69 = swift_getKeyPath(&unk_1006735F8);
      ItemLayoutContext.subscript.getter(v35);
      swift_release(v69);
      v71 = PageGrid.containerWidth.getter(v70);
      v72 = *(void (**)(_QWORD *, uint64_t))(v157 + 8);
      v73 = v35;
      v74 = v161;
      v72(v73, v161);
      v75 = swift_getKeyPath(&unk_1006735F8);
      ItemLayoutContext.subscript.getter(v31);
      v76 = swift_release(v75);
      v77 = PageGrid.containerHeight.getter(v76);
      v72(v31, v74);
      v78 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
      v79 = v159;
      v80 = v26;
      v81 = v160;
      v78(v159, enum case for PageGrid.Direction.vertical(_:), v160);
      v82 = swift_getKeyPath(&unk_1006735F8);
      ItemLayoutContext.subscript.getter(v31);
      v83 = swift_release(v82);
      v84 = PageGrid.safeAreaInsets.getter(v83);
      v86 = v85;
      v88 = v87;
      v90 = v89;
      v72(v31, v74);
      v91 = swift_getKeyPath(&unk_100673628);
      ItemLayoutContext.subscript.getter(aBlock);
      v92 = swift_release(v91);
      v93 = (void *)aBlock[0];
      v94 = v158;
      (*(void (**)(char *, char *, uint64_t, __n128))(v80 + 16))(v158, v79, v81, v92);
      v95 = sub_100418380(0.0);
      v96 = v162;
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v94, 0, v95, v71, v77, v84, v86, v88, v90);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
      v97 = objc_msgSend(v176, "contentView");
      objc_msgSend(v97, "setLayoutMargins:", PageGrid.horizontalMargins.getter(v97));

      v20 = v174;
      v68 = ((uint64_t (*)(_QWORD *, uint64_t))v72)(v96, v74);
    }
    v98 = v172;
    v99 = FramedVideo.artwork.getter(v68);
    if (v99)
    {
      v100 = v99;
      v101 = v176;
      v102 = objc_msgSend(v176, "contentView");
      v103 = sub_10000EF74();
      LayoutMarginsAware<>.layoutFrame.getter(v103);
      v105 = v104;
      v107 = v106;

      Artwork.size.getter(v108);
      v109 = v164;
      AspectRatio.init(_:_:)(v110);
      v111 = AspectRatio.maxSize(filling:)(v105, v107);
      v113 = v112;
      v114 = swift_release(v100);
      (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v109, v98, v114);
      v115 = (double *)&v101[qword_100853C60];
      *v115 = v111;
      *((_QWORD *)v115 + 1) = v113;
    }
    v116 = FramedVideo.video.getter();
    if (v116)
    {
      v117 = v116;
      v118 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v165 + 104))(v20, enum case for VideoFillMode.scaleAspectFill(_:), v166);
      v119 = FramedVideo.artwork.getter(v118);
      if (v119)
      {
        v121 = v119;
        Artwork.size.getter(v119);
        v122 = v163;
        AspectRatio.init(_:_:)(v123);
        v120 = swift_release(v121);
        v124 = 0;
        v125 = (uint64_t)v153;
      }
      else
      {
        v124 = 1;
        v125 = (uint64_t)v153;
        v122 = v163;
      }
      v126 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v175 + 56))(v122, v124, 1, v98, v120);
      v127 = v167;
      v128 = Video.playbackControls.getter(v126);
      v129 = v168;
      v130 = Video.autoPlayPlaybackControls.getter(v128);
      v131 = Video.canPlayFullScreen.getter(v130);
      v132 = Video.allowsAutoPlay.getter();
      v133 = Video.looping.getter();
      v134 = v127;
      v135 = v169;
      VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v174, v122, v134, v129, v131 & 1, v132 & 1, v133 & 1, 0, 0, 1);
      v136 = type metadata accessor for VideoViewManager(0);
      v137 = v171;
      v138 = BaseObjectGraph.inject<A>(_:)(aBlock, v136, v136);
      v139 = aBlock[0];
      v140 = Video.playbackId.getter(aBlock, v138);
      v141 = (uint64_t)v156;
      Video.videoUrl.getter(v140);
      v142 = type metadata accessor for URL(0);
      v143 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v141, 0, 1, v142);
      v144 = Video.templateMediaEvent.getter(v143);
      v145 = (uint64_t)v170;
      Video.templateClickEvent.getter(v144);
      v146 = type metadata accessor for VideoView(0);
      v147 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
      v148 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(aBlock, v141, v135, v125, v145, v137, v146, v147);
      sub_100011088(v145, (uint64_t *)&unk_1007FA750);
      sub_100011088(v125, (uint64_t *)&unk_1007FA750);
      sub_100011088(v141, (uint64_t *)&unk_1007F5150);
      sub_100011088((uint64_t)aBlock, (uint64_t *)&unk_1007F9850);
      sub_100304B40((uint64_t)v148);
      swift_release(v117);
      swift_release(v139);

      (*(void (**)(char *, uint64_t))(v154 + 8))(v135, v155);
    }
    v149 = swift_retain(v38);
    v150 = FramedMedia.hasRoundedCorners.getter(v149);
    swift_release(v38);
    v176[qword_100857730] = v150 & 1;
    sub_1000A13E0();
    swift_release(v38);
  }
}

uint64_t sub_1000A129C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_100857728;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

uint64_t sub_1000A12F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_100857728;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_1000A134C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_100857728, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_1000A1394()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "prepareForReuse");
  sub_100304B40(0);
}

id sub_1000A13E0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for CornerStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0.0;
  if (v0[qword_100857730] == 1)
  {
    type metadata accessor for ArtworkView(0);
    v6 = static ArtworkView.iconBorderWidth.getter();
    v7 = dispatch thunk of RoundedCornerView.borderWidth.setter(v6);
    v8 = static ArtworkView.iconBorderColor.getter(v7);
    dispatch thunk of RoundedCornerView.borderColor.setter(v8);
    v5 = 8.0;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for CornerStyle.continuous(_:), v1);
  dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v4, v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return objc_msgSend(v0, "setNeedsLayout");
}

uint64_t sub_1000A1500()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1000A1534()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A1544(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000A1554(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000A155C()
{
  qword_1007F84B0 = 0x4031000000000000;
}

void sub_1000A156C()
{
  qword_1007F84B8 = 0x4024000000000000;
}

void sub_1000A157C()
{
  qword_1007F84C0 = 0x404E000000000000;
}

void sub_1000A158C()
{
  qword_1007F84C8 = 0x4044000000000000;
}

char *sub_1000A159C(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _QWORD *v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  objc_class *v43;
  id v44;
  void *v45;
  char *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  objc_class *ObjectType;
  objc_super v70;
  _QWORD v71[5];
  _QWORD v72[3];
  uint64_t v73;
  void *v74;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v67 = type metadata accessor for DirectionalTextAlignment(0);
  v66 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  *(_QWORD *)&v68 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v12 = __chkstk_darwin(v11);
  v65 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for WordmarkView.Alignment(0, v12);
  v62 = *(_QWORD *)(v63 - 8);
  v14 = __chkstk_darwin(v63);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FontSource(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v21);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView;
  v24 = enum case for Wordmark.arcade(_:);
  v25 = type metadata accessor for Wordmark(0);
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = qword_1007F1030;
  v64 = v5;
  if (v27 != -1)
    swift_once(&qword_1007F1030, sub_1000A155C);
  v28 = *(double *)&qword_1007F84B0;
  if (qword_1007F27E8 != -1)
    swift_once(&qword_1007F27E8, sub_100417358);
  v29 = type metadata accessor for FontUseCase(0);
  v30 = sub_1000117A8(v29, (uint64_t)qword_100855CA0);
  v31 = *(_QWORD *)(v29 - 8);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v32(v20, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for FontSource.useCase(_:), v17);
  v73 = type metadata accessor for StaticDimension(0);
  v74 = &protocol witness table for StaticDimension;
  sub_1000117C0(v72);
  v71[3] = v17;
  v71[4] = &protocol witness table for FontSource;
  v33 = sub_1000117C0(v71);
  (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v33, v20, v17);
  StaticDimension.init(_:scaledLike:)(v71, v28);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v16, enum case for WordmarkView.Alignment.leading(_:), v63);
  v34 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v35 = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v23, v72, v16, 0.0, 0.0, 0.0, 0.0);
  v36 = v64;
  *(_QWORD *)&v64[v61] = v35;
  v37 = OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel;
  v38 = v65;
  v32(v65, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v29);
  v39 = v68;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v66 + 104))(v68, enum case for DirectionalTextAlignment.none(_:), v67);
  v40 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v36[v37] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v38, 2, 0, 1, 0, v39, 0, 0);
  v41 = OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView;
  v42 = type metadata accessor for ArcadeDownloadPackCategoryListView();
  *(_QWORD *)&v36[v41] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v42)), "init");

  v43 = ObjectType;
  v70.receiver = v36;
  v70.super_class = ObjectType;
  v44 = objc_msgSendSuper2(&v70, "initWithFrame:", a1, a2, a3, a4);
  v45 = (void *)objc_opt_self(UIColor);
  v46 = (char *)v44;
  v47 = objc_msgSend(v45, "systemBackgroundColor");
  objc_msgSend(v46, "setBackgroundColor:", v47);

  objc_msgSend(v46, "addSubview:", *(_QWORD *)&v46[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView]);
  v48 = *(void **)&v46[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  objc_msgSend(v46, "addSubview:", v48);
  objc_msgSend(v46, "addSubview:", *(_QWORD *)&v46[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView]);
  objc_msgSend(v48, "setNumberOfLines:", 0);
  v49 = objc_msgSend(v46, "traitCollection");
  v50 = objc_msgSend(v49, "preferredContentSizeCategory");

  LOBYTE(v49) = UIContentSizeCategory.isAccessibilityCategory.getter(v50);
  if ((v49 & 1) != 0)
    v51 = 4;
  else
    v51 = 1;
  objc_msgSend(v48, "setTextAlignment:", v51);
  v52 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v53 = swift_allocObject(v52, 48, 7);
  v68 = xmmword_10066FBA0;
  *(_OWORD *)(v53 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v53 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v53 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v73 = (uint64_t)v43;
  v72[0] = v46;
  v54 = v46;
  v55 = UIView.registerForTraitChanges(_:target:action:)(v53, v72, "preferredContentSizeCategoryDidChange");
  swift_unknownObjectRelease(v55);

  swift_bridgeObjectRelease(v53);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
  v56 = swift_allocObject(v52, 48, 7);
  *(_OWORD *)(v56 + 16) = v68;
  *(_QWORD *)(v56 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v56 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v73 = (uint64_t)v43;
  v72[0] = v54;
  v57 = v54;
  v58 = UIView.registerForTraitChanges(_:target:action:)(v56, v72, "invalidateMeasurements");
  swift_unknownObjectRelease(v58);

  swift_bridgeObjectRelease(v56);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
  return v57;
}

uint64_t sub_1000A1C78@<X0>(_QWORD *a1@<X8>, __n128 a2@<Q0>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double (**v11)(double, double);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  uint64_t v27;
  char *v28;
  id v29;
  __n128 v30;
  void *v31;
  double (*v32)(double (**)(double, double), uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  __n128 v37;
  id v38;
  _QWORD *v39;
  char *v40;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  _QWORD *v47;
  _QWORD v48[5];
  _QWORD v49[3];
  uint64_t v50;
  void *v51;

  v47 = a1;
  v3 = type metadata accessor for Resize.Rule(0, a2);
  v44 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v45 = (char *)&v42 - v6;
  __chkstk_darwin(v7);
  v43 = (char *)&v42 - v8;
  __chkstk_darwin(v9);
  v11 = (double (**)(double, double))((char *)&v42 - v10);
  v12 = type metadata accessor for VerticalStack(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  __chkstk_darwin(v19);
  v42 = (char *)&v42 - v20;
  v21 = swift_allocObject(&unk_100726020, 24, 7);
  *(_QWORD *)(v21 + 16) = v2;
  v22 = v2;
  VerticalStack.init(with:)(sub_1000A28AC, v21, v23);
  v48[0] = *(_QWORD *)&v22[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView];
  v24 = type metadata accessor for WordmarkView(0);
  Measurable.placeable.getter(v49, v24, &protocol witness table for UIView);
  VerticalStack.adding(_:with:)(v49, sub_1000A28B4, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v15, v12);
  v26 = *(void **)&v22[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  v50 = type metadata accessor for DynamicTypeLabel(0);
  v51 = &protocol witness table for UILabel;
  v49[0] = v26;
  v27 = swift_allocObject(&unk_100726048, 24, 7);
  *(_QWORD *)(v27 + 16) = v22;
  v28 = v22;
  v29 = v26;
  VerticalStack.adding(_:with:)(v49, sub_1000A2928, v27);
  v30 = swift_release(v27);
  ((void (*)(char *, uint64_t, __n128))v25)(v18, v12, v30);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
  v31 = *(void **)&v28[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView];
  v48[3] = type metadata accessor for ArcadeDownloadPackCategoryListView();
  v48[4] = sub_1000A2978();
  v48[0] = v31;
  *v11 = sub_1000A2170;
  v11[1] = 0;
  v32 = *(double (**)(double (**)(double, double), uint64_t, uint64_t))(v44 + 104);
  v32(v11, enum case for Resize.Rule.recalculated(_:), v3);
  v33 = enum case for Resize.Rule.unchanged(_:);
  v34 = v43;
  v32((double (**)(double, double))v43, enum case for Resize.Rule.unchanged(_:), v3);
  v35 = v45;
  v32((double (**)(double, double))v45, v33, v3);
  v36 = v46;
  v37.n128_f64[0] = v32((double (**)(double, double))v46, v33, v3);
  v50 = type metadata accessor for Resize(0, v37);
  v51 = &protocol witness table for Resize;
  sub_1000117C0(v49);
  v38 = v31;
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v48, v11, v34, v35, v36);
  v39 = v47;
  v47[3] = v12;
  v39[4] = &protocol witness table for VerticalStack;
  sub_1000117C0(v39);
  v40 = v42;
  VerticalStack.adding(_:with:)(v49, 0, 0);
  v25(v40, v12);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
}

uint64_t sub_1000A2000(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  return VerticalStack.Properties.alignment.setter((v2 & 1) == 0);
}

double sub_1000A207C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t *v5;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)1
    && (v3 = objc_msgSend(v0, "traitCollection"),
        v4 = objc_msgSend(v3, "horizontalSizeClass"),
        v3,
        v4 == (id)2))
  {
    if (qword_1007F1040 != -1)
      swift_once(&qword_1007F1040, sub_1000A157C);
    v5 = &qword_1007F84C0;
  }
  else
  {
    if (qword_1007F1048 != -1)
      swift_once(&qword_1007F1048, sub_1000A158C);
    v5 = &qword_1007F84C8;
  }
  return *(double *)v5;
}

double sub_1000A2170(double a1, double a2)
{
  return a2;
}

id sub_1000A2248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v8 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  ArcadeDownloadPackCategoriesPage.title.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = ArcadeDownloadPackCategoriesPage.categories.getter();
  sub_1003E5F80(v12, a2, a3, a4);
  objc_msgSend(v4, "setNeedsLayout", swift_bridgeObjectRelease(v12).n128_f64[0]);
  objc_msgSend(v4, "invalidateIntrinsicContentSize");
  v13 = objc_msgSend(v4, "traitCollection");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");

  LOBYTE(v13) = UIContentSizeCategory.isAccessibilityCategory.getter(v14);
  if ((v13 & 1) != 0)
    v15 = 4;
  else
    v15 = 1;
  return objc_msgSend(v8, "setTextAlignment:", v15);
}

id sub_1000A2378()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "invalidateIntrinsicContentSize");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v2 & 1) != 0)
    v4 = 4;
  else
    v4 = 1;
  return objc_msgSend(v1, "setTextAlignment:", v4);
}

id sub_1000A2600()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v2 & 1) != 0)
    v4 = 4;
  else
    v4 = 1;
  objc_msgSend(v1, "setTextAlignment:", v4);
  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "invalidateIntrinsicContentSize");
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v5, "preferredContentSizeCategory");

  LOBYTE(v5) = UIContentSizeCategory.isAccessibilityCategory.getter(v6);
  if ((v5 & 1) != 0)
    v7 = 4;
  else
    v7 = 1;
  return objc_msgSend(v1, "setTextAlignment:", v7);
}

uint64_t type metadata accessor for ArcadeDownloadPackCategoriesPageView()
{
  return objc_opt_self(_TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView);
}

double sub_1000A27AC(uint64_t a1, __n128 a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v5 = a2.n128_f64[0];
  sub_1000A1C78(v10, a2);
  v6 = v11;
  v7 = v12;
  sub_100011064(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, v5, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  return v8;
}

id sub_1000A2850()
{
  id *v0;

  return objc_msgSend(*v0, "setFrame:");
}

double sub_1000A2860(uint64_t a1, void *a2)
{
  return sub_1003E6664(a1, a2);
}

uint64_t sub_1000A2888()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A28AC(int a1)
{
  uint64_t v1;

  return sub_1000A2000(a1, *(id *)(v1 + 16));
}

uint64_t sub_1000A28B4()
{
  _QWORD v1[5];

  if (qword_1007F1038 != -1)
    swift_once(&qword_1007F1038, sub_1000A156C);
  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = qword_1007F84B8;
  return VerticalStack.Properties.bottomSpacing.setter(v1);
}

uint64_t sub_1000A2928()
{
  _QWORD v1[5];

  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = sub_1000A207C();
  return VerticalStack.Properties.bottomSpacing.setter(v1);
}

unint64_t sub_1000A2978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F8510;
  if (!qword_1007F8510)
  {
    v1 = type metadata accessor for ArcadeDownloadPackCategoryListView();
    result = swift_getWitnessTable("E1\v", v1);
    atomic_store(result, (unint64_t *)&qword_1007F8510);
  }
  return result;
}

void sub_1000A29C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD v43[5];
  _QWORD v44[6];

  v0 = type metadata accessor for DirectionalTextAlignment(0);
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  __chkstk_darwin(v0);
  v41 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v3 = __chkstk_darwin(v2);
  v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WordmarkView.Alignment(0, v3);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FontSource(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F8518);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView;
  v16 = enum case for Wordmark.arcade(_:);
  v17 = type metadata accessor for Wordmark(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v15, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  if (qword_1007F1030 != -1)
    swift_once(&qword_1007F1030, sub_1000A155C);
  v19 = *(double *)&qword_1007F84B0;
  if (qword_1007F27E8 != -1)
    swift_once(&qword_1007F27E8, sub_100417358);
  v20 = type metadata accessor for FontUseCase(0);
  v21 = sub_1000117A8(v20, (uint64_t)qword_100855CA0);
  v22 = *(_QWORD *)(v20 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23(v12, v21, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  v44[3] = type metadata accessor for StaticDimension(0);
  v44[4] = &protocol witness table for StaticDimension;
  sub_1000117C0(v44);
  v43[3] = v9;
  v43[4] = &protocol witness table for FontSource;
  v24 = sub_1000117C0(v43);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v24, v12, v9);
  StaticDimension.init(_:scaledLike:)(v43, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v8, enum case for WordmarkView.Alignment.leading(_:), v37);
  v25 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v26 = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v15, v44, v8, 0.0, 0.0, 0.0, 0.0);
  v27 = v42;
  *(_QWORD *)&v42[v35] = v26;
  v28 = OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel;
  v29 = v38;
  v23(v38, v21, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v20);
  v30 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, enum case for DirectionalTextAlignment.none(_:), v40);
  v31 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v27[v28] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v29, 2, 0, 1, 0, v30, 0, 0);
  v32 = OBJC_IVAR____TtC22SubscribePageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView;
  v33 = type metadata accessor for ArcadeDownloadPackCategoryListView();
  *(_QWORD *)&v27[v32] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v33)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ArcadeDownloadPackCategoriesPageView.swift", 65, 2, 52, 0);
  __break(1u);
}

uint64_t sub_1000A2DCC@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;

  if ((a1 & 1) != 0)
  {
    swift_getObjectType();
    PageTraitEnvironment.pageColumnWidth.getter();
    v7 = v6;
    PageTraitEnvironment.pageColumnMargin.getter();
    v5 = qword_1007F1A80;
    a3 = (v7 - v8) / 1.5;
  }
  else
  {
    v5 = qword_1007F1A80;
  }
  if (v5 != -1)
    swift_once(&qword_1007F1A80, sub_1002B6438);
  v9 = type metadata accessor for AspectRatio(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100853878);
  v11 = AspectRatio.height(fromWidth:)(v10, a3);
  ComponentPrefetchSizing.init(size:contentMode:)(a3, v11);
  v12 = type metadata accessor for ComponentPrefetchSizing(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
}

double sub_1000A2EB4(double a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1007F1A80 != -1)
    swift_once(&qword_1007F1A80, sub_1002B6438);
  v2 = type metadata accessor for AspectRatio(0);
  v3 = sub_1000117A8(v2, (uint64_t)qword_100853878);
  AspectRatio.height(fromWidth:)(v3, a1);
  return a1;
}

id sub_1000A2F28()
{
  return sub_1000A2F88();
}

uint64_t sub_1000A2F38@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  return sub_1000A2DCC(a1 & 1, a2, a3);
}

id sub_1000A2F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000A30C0(a3, a5);
}

uint64_t sub_1000A2F5C()
{
  return sub_10000E99C(&qword_1007F8520, (uint64_t (*)(uint64_t))&type metadata accessor for Brick, (uint64_t)&protocol conformance descriptor for Brick);
}

id sub_1000A2F88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for Shelf.PresentationHints(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Brick.accessibilityLabel.getter(v4);
  if (v7)
  {
    v9 = v7;
    v10 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v1, "setAccessibilityLabel:", v10, v8);

  static Shelf.PresentationHints.showSupplementaryText.getter(v11);
  v12 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v13 = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v2, v12);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((v13 & 1) != 0)
  {
    v15 = Brick.shortEditorialDescription.getter(result);
    v16 = (uint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23BrickCollectionViewCell_shortDescriptionLabelText];
    v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23BrickCollectionViewCell_shortDescriptionLabelText + 8];
    *v16 = v15;
    v16[1] = v18;
    swift_bridgeObjectRelease(v17);
    return sub_1002B6AD8();
  }
  return result;
}

id sub_1000A30C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Class isa;
  id v33;
  uint64_t v35;
  uint64_t v36;

  v3 = type metadata accessor for Shelf.PresentationHints(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v8 = v7;
  PageTraitEnvironment.pageColumnMargin.getter();
  v10 = ceil((v8 - v9) / 1.5);
  static Shelf.PresentationHints.showSupplementaryText.getter(v11);
  v12 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v13 = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v3, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v13 & 1) != 0)
  {
    if (qword_1007F1A88 != -1)
      swift_once(&qword_1007F1A88, sub_1002B6488);
    v15 = type metadata accessor for BrickLayout.Metrics(0, v14);
    v16 = qword_100853890;
  }
  else
  {
    if (qword_1007F1A90 != -1)
      swift_once(&qword_1007F1A90, sub_1002B671C);
    v15 = type metadata accessor for BrickLayout.Metrics(0, v14);
    v16 = qword_1008538A8;
  }
  v17 = sub_1000117A8(v15, (uint64_t)v16);
  v18 = type metadata accessor for BrickLayout(0);
  v19 = sub_10000E99C(&qword_1007F8570, (uint64_t (*)(uint64_t))&type metadata accessor for BrickLayout, (uint64_t)&protocol conformance descriptor for BrickLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v17, a2, v18, v19, v10, 1.79769313e308);
  v21 = v20;
  v22 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v23 = objc_msgSend(v22, "absoluteDimension:", v10);
  v24 = objc_msgSend(v22, "absoluteDimension:", v21);
  v25 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v23, v24);

  v26 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v25);
  v27 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v28 = sub_10000DF3C(&qword_1007F5840);
  v29 = swift_allocObject(v28, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v29 + 32) = v26;
  v36 = v29;
  specialized Array._endMutation()(v29);
  v30 = v36;
  sub_1000A33DC();
  v31 = v26;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v27, "verticalGroupWithLayoutSize:subitems:", v25, isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v33;
}

unint64_t sub_1000A33DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100800DA0;
  if (!qword_100800DA0)
  {
    v1 = objc_opt_self(NSCollectionLayoutItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100800DA0);
  }
  return result;
}

char *sub_1000A3418(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  double left;
  double bottom;
  double right;
  char *v24;
  id v25;
  id v26;
  id v27;
  objc_super v29;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for SearchResultsContextCardView.Style(0);
  __chkstk_darwin(v11);
  v13 = (double *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = &v5[OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_itemLayoutContext];
  v15 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = qword_1007F1540;
  v17 = v5;
  if (v16 != -1)
    swift_once(&qword_1007F1540, sub_1001B3EEC);
  v18 = sub_1000117A8(v11, (uint64_t)qword_1008523C8);
  sub_10006CAC0(v18, (uint64_t)v13);
  v19 = objc_allocWithZone((Class)type metadata accessor for SearchResultsContextCardView(0));
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_content] = sub_1001B4698(v13);

  v29.receiver = v17;
  v29.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = objc_msgSend(v24, "contentView");
  objc_msgSend(v25, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v26 = objc_msgSend(v24, "contentView");
  v27 = *(id *)&v24[OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_content];
  objc_msgSend(v26, "addSubview:", v27);

  return v24;
}

void sub_1000A376C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "prepareForReuse");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_content];
  sub_100131E14();
  v2 = *(void **)(v1 + qword_1007FFBB8);
  *(_QWORD *)(v1 + qword_1007FFBB8) = 0;
  sub_1001B4B7C(v2);

}

uint64_t sub_1000A3858()
{
  return type metadata accessor for SearchResultsContextCardCollectionViewCell(0);
}

uint64_t type metadata accessor for SearchResultsContextCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F85A8;
  if (!qword_1007F85A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsContextCardCollectionViewCell);
  return result;
}

uint64_t sub_1000A389C()
{
  return sub_10000E99C(&qword_1007F85B8, type metadata accessor for SearchResultsContextCardCollectionViewCell, (uint64_t)&unk_10067376C);
}

uint64_t sub_1000A38C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E99C(&qword_1007F85C0, type metadata accessor for SearchResultsContextCardCollectionViewCell, (uint64_t)&unk_1006737B8);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_1000A3934(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for SearchResultsContextCard(0);
  v4 = sub_10000E99C(&qword_1007F85C8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsContextCard, (uint64_t)&protocol conformance descriptor for SearchResultsContextCard);
  ItemLayoutContext.typedModel<A>(as:)(&v23, v3, v3, v4);
  v5 = v23;
  if (v23)
  {
    v6 = type metadata accessor for ObjectGraph(0);
    v7 = swift_dynamicCastClass(a2, v6);
    if (v7)
    {
      v8 = v7;
      v9 = swift_retain(a2);
      v10 = SearchResultsContextCard.message.getter(v9);
      v11 = SearchResultsContextCard.action.getter();
      if (v11)
      {
        v12 = v11;
        swift_retain(a2);
        v13 = swift_retain(v12);
        v14 = Action.title.getter(v13);
        if (v15)
          v16 = v14;
        else
          v16 = 0;
        if (v15)
          v17 = v15;
        else
          v17 = 0xE000000000000000;
        v18 = Action.artwork.getter(v14);
        if (v18)
        {
          v19 = v18;
          if ((dispatch thunk of Artwork.isSystemImage.getter(v18) & 1) != 0)
          {
            v20 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v19, 0, 1);
          }
          else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
          {
            v20 = sub_100485648(v19, 0);
          }
          else
          {
            v20 = 0;
          }
          swift_release(v19);
        }
        else
        {
          v20 = 0;
        }
        sub_1000A3C3C();
        v22 = swift_allocObject(&unk_100726108, 32, 7);
        *(_QWORD *)(v22 + 16) = v8;
        *(_QWORD *)(v22 + 24) = v12;
        v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v16, v17, 0, 0, v20, 0, 0, 0, 0, 0, 0, sub_10006CB30, v22);
        swift_release(v12);
      }
      else
      {
        v21 = 0;
      }
      sub_1001B3DA4(v10, v21);
      swift_release(v5);
      swift_release(a2);
      swift_release(v10);

    }
    else
    {
      swift_release(v5);
    }
  }
}

uint64_t sub_1000A3B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

uint64_t sub_1000A3B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_1000A3BEC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension42SearchResultsContextCardCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t sub_1000A3C3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FC2A0;
  if (!qword_1007FC2A0)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007FC2A0);
  }
  return result;
}

double sub_1000A3C7C(uint64_t a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t OpaqueTypeConformance2;
  uint64_t v54;
  double v55;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD v74[6];

  v62 = a5;
  v68 = a1;
  v7 = sub_10000DF3C(&qword_1007F85D0);
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  __chkstk_darwin(v7);
  v67 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SearchResultsContextCardLayout.Metrics(0);
  __chkstk_darwin(v9);
  v66 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for UIButton.Configuration(0);
  v59 = *(_QWORD *)(v60 - 8);
  v11 = __chkstk_darwin(v60);
  v58 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicTextAppearance(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v57 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v57 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v57 - v24;
  v26 = type metadata accessor for SearchResultsContextCardLayout(0);
  v64 = *(_QWORD *)(v26 - 8);
  v65 = v26;
  __chkstk_darwin(v26);
  v63 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SearchResultsContextCardView.Style(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1540 != -1)
    swift_once(&qword_1007F1540, sub_1001B3EEC);
  v31 = sub_1000117A8(v28, (uint64_t)qword_1008523C8);
  v32 = sub_10006CAC0(v31, (uint64_t)v30);
  v33 = LinkableText.plainText.getter(v32);
  v61 = v34;
  DynamicTextAppearance.init()(v33);
  v35 = &v30[*(int *)(v28 + 36)];
  DynamicTextAppearance.withFontUseCase(_:)(v35);
  v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v13);
  v37 = type metadata accessor for SearchResultsContextCardView.Style.Message(0);
  DynamicTextAppearance.withLineBreakMode(_:)(*(_QWORD *)&v35[*(int *)(v37 + 24)]);
  v36(v19, v13);
  DynamicTextAppearance.withNumberOfLines(_:)(*(_QWORD *)&v35[*(int *)(v37 + 28)]);
  v36(v22, v13);
  v38 = LabelPlaceholder.Options.init(rawValue:)(0);
  v74[3] = type metadata accessor for LabelPlaceholder(0, v39);
  v74[4] = &protocol witness table for LabelPlaceholder;
  sub_1000117C0(v74);
  LabelPlaceholder.init(_:with:where:)(v33, v61, v25, v38);
  if (v62)
  {
    v41 = v62;
    v42 = v58;
    v43 = v68;
    sub_1001B436C(v41, v68);
    v44 = type metadata accessor for ButtonPlaceholder(0);
    v45 = swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    *(_QWORD *)(v45 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder____lazy_storage___button) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v45 + OBJC_IVAR____TtC22SubscribePageExtension17ButtonPlaceholder_configuration, v42, v60);
    *((_QWORD *)&v72 + 1) = v44;
    v73 = sub_10000E99C((unint64_t *)&unk_1007F85E0, type metadata accessor for ButtonPlaceholder, (uint64_t)&protocol conformance descriptor for ButtonPlaceholder);

    *(_QWORD *)&v71 = v45;
  }
  else
  {
    v73 = 0;
    v71 = 0u;
    v72 = 0u;
    v43 = v68;
  }
  v46 = (uint64_t)v30;
  v47 = v66;
  static SearchResultsContextCardLayout.Metrics.standard.getter(v40);
  v48 = v63;
  SearchResultsContextCardLayout.init(metrics:message:button:)(v47, v74, &v71);
  v49 = sub_10000E99C(&qword_1007F85D8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsContextCardLayout, (uint64_t)&protocol conformance descriptor for SearchResultsContextCardLayout);
  v50 = v67;
  v51 = v65;
  v52 = dispatch thunk of CustomLayout.layout.getter(v65, v49);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v52, &opaque type descriptor for <<opaque return type of SearchResultsContextCardLayout.layout>>, 1);
  v54 = v70;
  v55 = dispatch thunk of Placeable.measure(toFit:with:)(v43, v70, OpaqueTypeConformance2, a2, a3);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v54);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v51);
  sub_1000A441C(v46);
  return v55;
}

double sub_1000A4148(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  void *v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  double v31;
  void *v32;
  uint64_t v33;
  double v34;
  uint64_t v36;
  void *v37;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for SearchResultsContextCard(0);
  v8 = sub_10000E99C(&qword_1007F85C8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsContextCard, (uint64_t)&protocol conformance descriptor for SearchResultsContextCard);
  ItemLayoutContext.typedModel<A>(as:)(&v37, v7, v7, v8);
  v9 = v37;
  if (!v37)
    return 0.0;
  v10 = type metadata accessor for ObjectGraph(0);
  v11 = swift_dynamicCastClass(a2, v10);
  if (!v11)
  {
    swift_release(v9);
    return 0.0;
  }
  v12 = v11;
  KeyPath = swift_getKeyPath(&unk_100673830);
  swift_retain(a2);
  ItemLayoutContext.subscript.getter(&v37);
  swift_release(KeyPath);
  v14 = v37;
  v15 = swift_getKeyPath(&unk_100673860);
  ItemLayoutContext.subscript.getter(v6);
  swift_release(v15);
  v16 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v18 = v17;
  v19.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v20 = SearchResultsContextCard.message.getter(v19);
  v21 = SearchResultsContextCard.action.getter();
  if (v21)
  {
    v22 = v21;
    swift_retain(a2);
    v23 = swift_retain(v22);
    v24 = Action.title.getter(v23);
    if (v25)
      v26 = v24;
    else
      v26 = 0;
    if (v25)
      v27 = v25;
    else
      v27 = 0xE000000000000000;
    v28 = Action.artwork.getter(v24);
    if (v28)
    {
      v29 = v28;
      if ((dispatch thunk of Artwork.isSystemImage.getter(v28) & 1) != 0)
      {
        v30 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v29, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        v30 = sub_100485648(v29, 0);
      }
      else
      {
        v30 = 0;
      }
      swift_release(v29);
    }
    else
    {
      v30 = 0;
    }
    sub_1000A3C3C();
    v33 = swift_allocObject(&unk_100726130, 32, 7);
    *(_QWORD *)(v33 + 16) = v12;
    *(_QWORD *)(v33 + 24) = v22;
    v32 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v26, v27, 0, 0, v30, 0, 0, 0, 0, 0, 0, sub_1000A4458, v33);
    swift_release(v22);
  }
  else
  {
    v32 = 0;
  }
  sub_1000A3C7C((uint64_t)v14, v16, v18, v20, v32);
  v31 = v34;

  swift_release(v20);
  swift_release(a2);
  swift_release(v9);

  return v31;
}

uint64_t sub_1000A441C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResultsContextCardView.Style(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A445C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _OWORD v5[2];
  uint64_t v6;
  _QWORD v7[5];
  _QWORD v8[5];
  _QWORD v9[5];

  v0 = type metadata accessor for TitledButtonStackLayout.Metrics(0);
  sub_100045464(v0, qword_100851150);
  sub_1000117A8(v0, (uint64_t)qword_100851150);
  if (qword_1007F1070 != -1)
    swift_once(&qword_1007F1070, sub_1000A4604);
  v1 = type metadata accessor for StaticDimension(0);
  v2 = sub_1000117A8(v1, (uint64_t)qword_1008511B0);
  v9[3] = v1;
  v9[4] = &protocol witness table for StaticDimension;
  v3 = sub_1000117C0(v9);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v3, v2, v1);
  v8[3] = &type metadata for Double;
  v8[4] = &protocol witness table for Double;
  v7[4] = &protocol witness table for Double;
  v8[0] = 0x4024000000000000;
  v7[3] = &type metadata for Double;
  v6 = 0;
  v7[0] = 0x4024000000000000;
  memset(v5, 0, sizeof(v5));
  return TitledButtonStackLayout.Metrics.init(buttonHeight:horizontalInterItemSpace:verticalInterItemSpace:maximumButtonWidth:)(v9, v8, v7, v5);
}

uint64_t sub_1000A4560(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 20.0;
  return sub_1000A461C(a2, a1, qword_100851168);
}

uint64_t sub_1000A4570(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4040000000000000;
  return sub_1000A461C(a2, a1, qword_100851180);
}

UIFontTextStyle sub_1000A4584()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100045464(v0, qword_100851198);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100851198);
  *(_QWORD *)v1 = UIFontTextStyleSubheadline;
  *(_DWORD *)(v1 + 8) = 0;
  (*(void (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
  return UIFontTextStyleSubheadline;
}

uint64_t sub_1000A4604(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4045800000000000;
  return sub_1000A461C(a2, a1, qword_1008511B0);
}

uint64_t sub_1000A461C(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100045464(v9, a3);
  sub_1000117A8(v9, (uint64_t)a3);
  if (qword_1007F1068 != -1)
    swift_once(&qword_1007F1068, sub_1000A4584);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_100851198);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_1000117C0(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1000A4770(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  objc_class *v19;
  id v20;
  id v21;
  objc_super v23;

  v9 = sub_10000DF3C(&qword_1007F8658);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v4[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v4[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_lineBreaks];
  v15 = sub_10000DF3C(&qword_1007F5D18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons] = _swiftEmptyArrayStorage;
  v16 = type metadata accessor for RoundedTitledButton(0);
  v17 = v4;
  ViewRecycler.init()(v16);
  v18 = sub_1000A5868();
  ReusePool.init(recycler:limit:)(v11, 4, v9, v18);

  v19 = (objc_class *)type metadata accessor for TitledButtonStackCollectionViewCell(0);
  v23.receiver = v17;
  v23.super_class = v19;
  v20 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v21 = objc_msgSend(v20, "contentView");
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  return v20;
}

void sub_1000A4AC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  void *v15;
  char v16[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons, v16, 1, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    v13 = *v1;
    *v1 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v2 < 0)
    v12 = *v1;
  else
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = v0 + OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_reusePool;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v6 = (char *)*(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      ++v4;
      v8 = &v6[qword_100853A98];
      v9 = *(_QWORD *)&v6[qword_100853A98];
      v10 = *((_QWORD *)v8 + 1);
      *(_QWORD *)v8 = 0;
      *((_QWORD *)v8 + 1) = 0;
      sub_100019310(v9, v10);
      objc_msgSend(v7, "setTitle:forState:", 0, 0);
      v15 = v7;
      swift_beginAccess(v5, v14, 33, 0);
      v11 = sub_10000DF3C((uint64_t *)&unk_1007F8680);
      ReusePool.recycle(_:)(&v15, v11);
      swift_endAccess(v14);

    }
    while (v3 != v4);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1000A4C48(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)();
  void (**v30)();
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  _BYTE v39[16];
  uint64_t v40;
  _OWORD v41[2];
  _OWORD v42[3];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for AutomationSemantics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v11);
  v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = ObjectType;
  swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_reusePool], v42, 33, 0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F8680);
  ReusePool.dequeue(or:)(v41, sub_1000A5D68, v39, v14);
  swift_endAccess(v42);
  v15 = qword_1007F26B8;
  v16 = (char *)*(id *)&v41[0];
  if (v15 != -1)
    swift_once(&qword_1007F26B8, sub_100416E10);
  v17 = type metadata accessor for FontUseCase(0);
  v18 = sub_1000117A8(v17, (uint64_t)qword_100855910);
  v19 = *(_QWORD *)(v17 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16))(v13, v18, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v17);
  dispatch thunk of DynamicTypeButton.fontUseCase.setter(v13);

  TitledButton.title.getter();
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setTitle:forState:", v22, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = TitledButton.id.getter(v42);
  v24 = AnyHashable.description.getter(v23);
  v26 = v25;
  sub_100019370((uint64_t)v42);
  memset(v42, 0, 32);
  memset(v41, 0, sizeof(v41));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(v24, v26, v42, v41);
  swift_bridgeObjectRelease(v26);
  sub_100011088((uint64_t)v41, &qword_1007F6E90);
  sub_100011088((uint64_t)v42, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v10);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v16, "_setWantsAccessibilityUnderline:", 0);
  v27 = swift_allocObject(&unk_1007261D0, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, v16);
  v28 = swift_allocObject(&unk_1007261F8, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v3);
  v29 = (void (*)())swift_allocObject(&unk_100726220, 48, 7);
  *((_QWORD *)v29 + 2) = a1;
  *((_QWORD *)v29 + 3) = v28;
  *((_QWORD *)v29 + 4) = v27;
  *((_QWORD *)v29 + 5) = a2;
  v30 = (void (**)())&v16[qword_100853A98];
  v31 = *(_QWORD *)&v16[qword_100853A98];
  v32 = *(_QWORD *)&v16[qword_100853A98 + 8];
  *v30 = sub_1000A5DD0;
  v30[1] = v29;
  swift_retain(a1);
  swift_retain(a2);
  sub_100019310(v31, v32);
  v33 = &v3[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons];
  swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons], v42, 33, 0);
  v34 = v16;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
  v36 = *(_QWORD *)((*(_QWORD *)v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v35 = *(_QWORD *)((*(_QWORD *)v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
  specialized Array._endMutation()(v37);
  swift_endAccess(v42);
  v38 = objc_msgSend(v3, "contentView");
  objc_msgSend(v38, "addSubview:", v34);

}

char *sub_1000A5008@<X0>(char **a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *result;
  uint64_t v13;

  v2 = type metadata accessor for StaticDimension(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RoundedTitledButton(0);
  if (qword_1007F1068 != -1)
    swift_once(&qword_1007F1068, sub_1000A4584);
  v10 = sub_1000117A8(v6, (uint64_t)qword_100851198);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  if (qword_1007F1070 != -1)
    swift_once(&qword_1007F1070, sub_1000A4604);
  v11 = sub_1000117A8(v2, (uint64_t)qword_1008511B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  result = sub_1002F0A80((uint64_t)v9, (uint64_t)v5);
  *a1 = result;
  return result;
}

void sub_1000A5168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _BYTE v22[24];
  __int128 v23;
  __int128 v24;
  _BYTE v25[24];

  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = TitledButton.action.getter(v9);
  if (v12)
  {
    v13 = v12;
    swift_beginAccess(a2 + 16, v25, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong && (v15 = (void *)Strong, v16 = UIResponder.nearestActionRunner.getter(), v15, v16))
    {
      v17 = a3 + 16;
      swift_beginAccess(v17, v22, 0, 0);
      v18 = swift_unknownObjectWeakLoadStrong(v17);
      if (v18)
      {
        v19 = v18;
        *((_QWORD *)&v24 + 1) = type metadata accessor for RoundedTitledButton(0);
        *(_QWORD *)&v23 = v19;
      }
      else
      {
        v23 = 0u;
        v24 = 0u;
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for ActionRunner.Origin.userInitiated(_:), v7);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v13, &v23, v11, a4);
      swift_release(v16);
      v20 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v20);
      sub_100011088((uint64_t)&v23, &qword_1007F6E90);
    }
    else
    {
      swift_release(v13);
    }
  }
}

uint64_t sub_1000A52E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  char v35[24];
  char v36[24];
  objc_super v37;

  v1 = v0;
  v34 = type metadata accessor for LayoutRect(0);
  v2 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F5D08);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TitledButtonStackLayout.Metrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitledButtonStackLayout(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (objc_class *)type metadata accessor for TitledButtonStackCollectionViewCell(0);
  v37.receiver = v1;
  v37.super_class = v16;
  objc_msgSendSuper2(&v37, "layoutSubviews");
  if (qword_1007F1050 != -1)
    swift_once(&qword_1007F1050, sub_1000A445C);
  v17 = sub_1000117A8(v8, (uint64_t)qword_100851150);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  v18 = &v1[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_buttons], v36, 0, 0);
  v19 = *(_QWORD *)v18;
  swift_bridgeObjectRetain(v19);
  v21 = sub_100419660(v20);
  swift_bridgeObjectRelease(v19);
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_lineBreaks];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_lineBreaks], v35, 0, 0);
  sub_1000A5DDC(v22, (uint64_t)v7);
  TitledButtonStackLayout.init(metrics:items:lineBreaks:)(v11, v21, v7);
  v23 = objc_msgSend(v1, "contentView");
  v24 = sub_10000EF74();
  v25 = LayoutMarginsAware<>.layoutFrame.getter(v24);
  v27 = v26;
  v29 = v28;
  v31 = v30;

  TitledButtonStackLayout.placeChildren(relativeTo:in:)(v1, v25, v27, v29, v31);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

id sub_1000A5600()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitledButtonStackCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000A56B8()
{
  return type metadata accessor for TitledButtonStackCollectionViewCell(0);
}

uint64_t type metadata accessor for TitledButtonStackCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F8628;
  if (!qword_1007F8628)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TitledButtonStackCollectionViewCell);
  return result;
}

void sub_1000A56FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000A57AC(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_1000A5804(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

void sub_1000A57AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F8640)
  {
    v2 = sub_100010EF8(&qword_1007F5D18);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F8640);
  }
}

void sub_1000A5804(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1007F8650)
  {
    v2 = sub_100010EF8(&qword_1007F8658);
    v3 = sub_1000A5868();
    v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1007F8650);
  }
}

unint64_t sub_1000A5868()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F8660;
  if (!qword_1007F8660)
  {
    v1 = sub_100010EF8(&qword_1007F8658);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1007F8660);
  }
  return result;
}

uint64_t sub_1000A58B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[5];

  v8[3] = type metadata accessor for LayoutViewPlaceholder(0);
  v8[4] = &protocol witness table for LayoutViewPlaceholder;
  v8[0] = a1;
  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_10000DF3C((uint64_t *)&unk_1007F8670);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v5[2] = a2;
      v6 = (uint64_t)(v5 + 4);
      do
      {
        sub_100011020((uint64_t)v8, v6);
        v6 += 40;
        --a2;
      }
      while (a2);
    }
    else
    {
      v5 = _swiftEmptyArrayStorage;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v8);
    return (uint64_t)v5;
  }
  return result;
}

double sub_1000A59A0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  double v40;
  _QWORD v42[2];
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v47 = a2;
  v42[1] = a1;
  v46 = type metadata accessor for IndexSet(0);
  __chkstk_darwin(v46);
  v45 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v44 = (char *)v42 - v8;
  v9 = sub_10000DF3C(&qword_1007F5D08);
  __chkstk_darwin(v9);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TitledButtonStackLayout.Metrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TitledButtonStackLayout(0);
  v43 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1050 != -1)
    swift_once(&qword_1007F1050, sub_1000A445C);
  v23 = sub_1000117A8(v16, (uint64_t)qword_100851150);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v23, v16);
  TitledButtonStackLayout.Metrics.buttonHeight.getter(v48, v24);
  v25 = v49;
  v26 = v50;
  sub_100011064(v48, v49);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v25);
  v27 = AnyDimension.value(in:rounded:)(v47, v15, v25, v26);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v48);
  v28 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = LayoutViewPlaceholder.init(representing:)(a3, v27);
  v30 = TitledButtonStack.buttons.getter();
  v31 = v30;
  if ((unint64_t)v30 >> 62)
  {
    if (v30 >= 0)
      v30 &= 0xFFFFFFFFFFFFFF8uLL;
    v32 = _CocoaArrayWrapper.endIndex.getter(v30);
  }
  else
  {
    v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v31);
  v33 = sub_1000A58B4(v29, v32);
  v34 = v44;
  v35 = TitledButtonStack.regularLineBreaks.getter();
  v36 = v45;
  TitledButtonStack.compactLineBreaks.getter(v35);
  v37 = sub_10000DF3C(&qword_1007F5D10);
  Conditional<>.init(regularValue:compactValue:)(v34, v36, v37, v46);
  v38 = sub_10000DF3C(&qword_1007F5D18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v11, 0, 1, v38);
  TitledButtonStackLayout.init(metrics:items:lineBreaks:)(v19, v33, v11);
  v39 = sub_1000A5D20();
  v40 = dispatch thunk of Measurable.measurements(fitting:in:)(v47, v20, v39, a3, a4);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v20);
  return v40;
}

unint64_t sub_1000A5D20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F8668;
  if (!qword_1007F8668)
  {
    v1 = type metadata accessor for TitledButtonStackLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TitledButtonStackLayout, v1);
    atomic_store(result, (unint64_t *)&qword_1007F8668);
  }
  return result;
}

char *sub_1000A5D68@<X0>(char **a1@<X8>)
{
  return sub_1000A5008(a1);
}

uint64_t sub_1000A5D70()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A5D94()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1000A5DD0()
{
  uint64_t *v0;

  sub_1000A5168(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1000A5DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F5D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A5E28()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_1008511D8));
  swift_release(*(_QWORD *)(v0 + qword_1008511E8));
  swift_release(*(_QWORD *)(v0 + qword_1007F86A0));

  swift_release(*(_QWORD *)(v0 + qword_1007F86B0));
  swift_release(*(_QWORD *)(v0 + qword_1007F86B8));

  swift_release(*(_QWORD *)(v0 + qword_1007F86C8));
  swift_release(*(_QWORD *)(v0 + qword_1007F86D0));
  swift_release(*(_QWORD *)(v0 + qword_1007F86D8));
  sub_100011088(v0 + qword_1007F86E0, &qword_1008027B0);

  swift_release(*(_QWORD *)(v0 + qword_1007F8700));
  return sub_100011088(v0 + qword_100851208, (uint64_t *)&unk_1007F7740);
}

id sub_1000A5F28(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (v2[qword_1007F86F0] == 1)
    v2[qword_1007F86F0] = 0;
  v5.receiver = v2;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

id sub_1000A5F74(_BYTE *a1, uint64_t a2)
{
  objc_class *ObjectType;
  _BYTE *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  if (a1[qword_1007F86F0] == 1)
    a1[qword_1007F86F0] = 0;
  v6.receiver = a1;
  v6.super_class = ObjectType;
  v4 = a1;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_1000A5FD0(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_1008511D8));
  swift_release(*(_QWORD *)(a1 + qword_1008511E8));
  swift_release(*(_QWORD *)(a1 + qword_1007F86A0));

  swift_release(*(_QWORD *)(a1 + qword_1007F86B0));
  swift_release(*(_QWORD *)(a1 + qword_1007F86B8));

  swift_release(*(_QWORD *)(a1 + qword_1007F86C8));
  swift_release(*(_QWORD *)(a1 + qword_1007F86D0));
  swift_release(*(_QWORD *)(a1 + qword_1007F86D8));
  sub_100011088(a1 + qword_1007F86E0, &qword_1008027B0);

  swift_release(*(_QWORD *)(a1 + qword_1007F8700));
  return sub_100011088(a1 + qword_100851208, (uint64_t *)&unk_1007F7740);
}

uint64_t sub_1000A60DC()
{
  return 2;
}

uint64_t sub_1000A60E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_1007F8698);
}

void sub_1000A60F4(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  char v8;
  char v9;
  id v10;
  id v11;

  v2 = v1;
  v4 = *(_BYTE **)&v1[qword_1007F86C0];
  if (v4)
  {
    v4[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled] = v1[qword_1008511E0];
    v5 = v4;
    sub_1002DB4A8((uint64_t)v5, v6);

  }
  v7 = *(void **)&v2[qword_1007F86F8];
  if (v7)
    objc_msgSend(v7, "setHidden:", v2[qword_1008511E0]);
  v8 = a1 & ~v2[qword_1008511E0];
  sub_1000A6230();
  if ((v8 & 1) != 0 || (v9 & 1) != 0)
  {
    v2[qword_1008511F8] = 1;
    v10 = objc_msgSend(v2, "viewIfLoaded");
    objc_msgSend(v10, "setNeedsLayout");

    v2[qword_1007F8690] = 1;
    v11 = objc_msgSend(v2, "viewIfLoaded");
    objc_msgSend(v11, "setNeedsLayout");

  }
}

void sub_1000A6230()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  id v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  double v37;
  id v38;
  void *v39;
  id v40;
  void **v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  uint64_t (*v45)();
  uint64_t v46;

  v1 = v0;
  v2 = qword_1007F86C0;
  v3 = *(void **)&v1[qword_1007F86C0];
  if (v3)
  {
    v4 = objc_msgSend(v3, "view");
    if (v4)
    {
      v5 = v4;
      if ((v1[qword_1008511E0] & 1) == 0)
      {
        v6 = *(_QWORD *)&v1[v2];
        if (v6)
        {
          v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell);
          v8 = type metadata accessor for ListTodayCardCollectionViewCell(0);
          if (swift_dynamicCastClass(v7, v8))
          {
            v9 = objc_msgSend(v5, "superview");
            v10 = objc_msgSend(v1, "collectionView");
            v11 = v10;
            if (v9)
            {
              if (v10)
              {
                sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
                v12 = v9;
                v13 = static NSObject.== infix(_:_:)(v12, v11);

                if ((v13 & 1) == 0)
                {
LABEL_28:
                  v32 = objc_opt_self(UIView);
                  v20 = swift_allocObject(&unk_100726368, 32, 7);
                  *(_QWORD *)(v20 + 16) = v5;
                  *(_QWORD *)(v20 + 24) = v1;
                  v33 = swift_allocObject(&unk_100726390, 32, 7);
                  *(_QWORD *)(v33 + 16) = sub_1000AD01C;
                  *(_QWORD *)(v33 + 24) = v20;
                  v45 = sub_10006C410;
                  v46 = v33;
                  v41 = _NSConcreteStackBlock;
                  v42 = 1107296256;
                  v43 = sub_100101718;
                  v44 = &unk_1007263A8;
                  v34 = _Block_copy(&v41);
                  v35 = v46;
                  v36 = v1;
                  swift_retain(v33);
                  v25 = v5;
                  objc_msgSend((id)v32, "performWithoutAnimation:", v34, swift_release(v35).n128_f64[0]);
                  _Block_release(v34);
                  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation(v33, "", 116, 598, 44, 1);
                  *(_QWORD *)&v37 = swift_release(v33).n128_u64[0];
                  if ((v32 & 1) == 0)
                  {
                    v38 = objc_msgSend(v36, "collectionView", v37);
                    if (v38)
                    {
                      v39 = v38;
                      objc_msgSend(v38, "insertSubview:atIndex:", v25, 0);

                      if (objc_msgSend(v25, "effectiveUserInterfaceLayoutDirection") == (id)1)
                      {
                        v40 = objc_msgSend(v25, "layer");
                        objc_msgSend(v40, "setFlipsHorizontalAxis:", 1);
                        swift_release(v20);

                        return;
                      }
                      goto LABEL_32;
                    }
                    goto LABEL_38;
                  }
                  goto LABEL_35;
                }
LABEL_16:

                return;
              }
              v11 = v9;
            }
            else if (!v10)
            {
              goto LABEL_16;
            }

            goto LABEL_28;
          }
        }
      }
      v14 = objc_msgSend(v5, "superview");
      v15 = objc_msgSend(v1, "view");
      v16 = v15;
      if (v14)
      {
        if (v15)
        {
          sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
          v17 = v14;
          v18 = static NSObject.== infix(_:_:)(v17, v16);

          if ((v18 & 1) != 0)
            goto LABEL_16;
LABEL_19:
          v19 = objc_opt_self(UIView);
          v20 = swift_allocObject(&unk_1007262F0, 32, 7);
          *(_QWORD *)(v20 + 16) = v5;
          *(_QWORD *)(v20 + 24) = v1;
          v21 = swift_allocObject(&unk_100726318, 32, 7);
          *(_QWORD *)(v21 + 16) = sub_1000ACFCC;
          *(_QWORD *)(v21 + 24) = v20;
          v45 = sub_100030368;
          v46 = v21;
          v41 = _NSConcreteStackBlock;
          v42 = 1107296256;
          v43 = sub_100101718;
          v44 = &unk_100726330;
          v22 = _Block_copy(&v41);
          v23 = v46;
          v24 = v1;
          v25 = v5;
          swift_retain(v21);
          objc_msgSend((id)v19, "performWithoutAnimation:", v22, swift_release(v23).n128_f64[0]);
          _Block_release(v22);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v21, "", 116, 611, 44, 1);
          *(_QWORD *)&v26 = swift_release(v21).n128_u64[0];
          if ((v19 & 1) == 0)
          {
            v27 = objc_msgSend(v24, "view", v26);
            if (v27)
            {
              v28 = v27;
              v29 = objc_msgSend(v24, "collectionView");
              if (v29)
              {
                v30 = v29;
                objc_msgSend(v28, "insertSubview:aboveSubview:", v25, v29);

                if (objc_msgSend(v25, "effectiveUserInterfaceLayoutDirection") == (id)1)
                {
                  v31 = objc_msgSend(v25, "layer");
                  objc_msgSend(v31, "setFlipsHorizontalAxis:", 0);
                  swift_release(v20);

LABEL_33:
                  return;
                }
LABEL_32:
                swift_release(v20);
                goto LABEL_33;
              }
              goto LABEL_37;
            }
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return;
          }
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v16 = v14;
      }
      else if (!v15)
      {
        goto LABEL_16;
      }

      goto LABEL_19;
    }
  }
}

void sub_1000A6784(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v22[4];
  char v23;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v5 = v4;
  v6 = a1;
  static ViewControllerContainment.remove(_:)(v4);

  v7 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v21 = v6;

  v8 = *(void **)&v1[v3];
  v9 = v8;
  sub_1000A68C8();
  v22[0] = v10;
  v22[1] = v11;
  v22[2] = v12;
  v22[3] = v13;
  v23 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v8, v1, v22);

  v14 = *(_QWORD *)&v1[v3];
  if (v14
    && (v15 = type metadata accessor for JULoadingViewController(0), swift_dynamicCastClass(v14, v15))
    && (v16 = *(void **)&v1[qword_1007F86C0]) != 0
    && (v17 = objc_msgSend(v16, "viewIfLoaded")) != 0)
  {
    v18 = v17;
    v19 = objc_msgSend(v1, "view");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "bringSubviewToFront:", v18);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {

  }
}

void sub_1000A68C8()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  void *v11;

  v1 = v0;
  v2 = *(void **)&v0[qword_1007F86C0];
  if (v2
    && (v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController]) != 0
    && (v4 = type metadata accessor for JULoadingViewController(0), swift_dynamicCastClass(v3, v4)))
  {
    v5 = v2;
    v6 = objc_msgSend(v1, "view");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "bounds");
      v9 = v8;

      sub_1002DAF34(v9);
      return;
    }
  }
  else
  {
    v10 = objc_msgSend(v1, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "bounds");

      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1000A6A00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v2 = type metadata accessor for Feature.iOS(0);
  v15[3] = v2;
  v15[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v3 = sub_1000117C0(v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, enum case for Feature.iOS.today_tab_largest_ax_support(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v15);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v15);
  if ((v2 & 1) == 0)
  {
    v4 = objc_msgSend(v1, "view");
    if (!v4)
    {
LABEL_13:
      __break(1u);
      return;
    }
    v5 = v4;
    objc_msgSend(v4, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);

  }
  v6 = objc_msgSend(v1, "view");
  if (!v6)
    goto LABEL_11;
  v7 = v6;
  v8 = type metadata accessor for InsetCollectionViewControllerContentView();
  v9 = swift_dynamicCastClass(v7, v8);
  if (!v9)
  {

LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_BYTE *)(v9
           + OBJC_IVAR____TtC22SubscribePageExtensionP33_D5EB93F8F29FA420E99B1898AD0B2EE640InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = 0;

  v10 = *(void **)&v1[qword_100851200];
  objc_msgSend(v10, "addTarget:action:forControlEvents:", v1, "dismissAnimated", 64);
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v12 = v11;
  objc_msgSend(v11, "addSubview:", v10);

  v13 = type metadata accessor for ArticleLinkLoaderScrollObserver();
  swift_allocObject(v13, 40, 7);
  v14 = sub_1000C3018();
  sub_1000AD9E0(v14, &qword_1007F86C8, &qword_1007F8E48, (uint64_t (*)(uint64_t))type metadata accessor for ArticleLinkLoaderScrollObserver, (uint64_t)&unk_1006744E0);
  swift_release(v14);
  if (*(_QWORD *)&v1[qword_1007F86C0])
    sub_1000A6230();
}

void sub_1000A6C0C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000A6A00();

}

void sub_1000A6C40(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  _BYTE *v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend(v1, "collectionView");
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "panGestureRecognizer");

  objc_msgSend(v4, "addGestureRecognizer:", v7);
  v8 = objc_msgSend(v1, "navigationController");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setNavigationBarHidden:animated:", 1, 0);

  }
  v10 = swift_allocObject(&unk_100726728, 24, 7);
  *(_QWORD *)(v10 + 16) = v1;
  v11 = v1;
  sub_1000AD054(sub_1000ADF24, v10, static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:), 0, v11, v11);
  swift_release(v10);
}

void sub_1000A6D90(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1000A6C40(a3);

}

void sub_1000A6DD0(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewDidAppear:", a3);
  v4[qword_1007F8690] = 1;
  v5 = objc_msgSend(v4, "viewIfLoaded", v6.receiver, v6.super_class);
  objc_msgSend(v5, "setNeedsLayout");

}

void sub_1000A6E68(char a1)
{
  void *v1;
  id v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v21;
  void *v22;
  uint64_t v23;
  objc_super v24;

  v24.receiver = v1;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, "viewWillDisappear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (!v3)
    goto LABEL_13;
  v5 = v3;
  v6 = objc_msgSend(v3, "viewControllers");

  v7 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v11 = v8;
    else
      v11 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v8);
    if (v12)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v8).n128_u64[0];
LABEL_13:
    v10 = 0;
    goto LABEL_14;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v9 = *(_QWORD *)(v8 + 32);
  }
  *(_QWORD *)&v4 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v10 = v9 == (_QWORD)v1;
LABEL_14:
  v13 = objc_msgSend(v1, "navigationController", v4);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "viewControllers");

    v16 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v23 = v17;
      else
        v23 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v18 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
    if (v18 > 1 && v10)
    {
      v21 = objc_msgSend(v1, "navigationController", v19);
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, "setNavigationBarHidden:animated:", 0, 0);

      }
    }
  }
}

void sub_1000A70A0(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1000A6E68(a3);

}

void sub_1000A70E0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  v14.receiver = a1;
  v14.super_class = (Class)swift_getObjectType();
  v6 = a3;
  swift_unknownObjectRetain(a4);
  v7 = v14.receiver;
  objc_msgSendSuper2(&v14, "willTransitionToTraitCollection:withTransitionCoordinator:", v6, a4);
  v8 = swift_allocObject(&unk_1007266D8, 24, 7);
  *(_QWORD *)(v8 + 16) = v7;
  v12[4] = sub_1000ADF04;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10033F618;
  v12[3] = &unk_1007266F0;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = v7;
  objc_msgSend(a4, "animateAlongsideTransition:completion:", v9, 0, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

  swift_unknownObjectRelease(a4);
}

void sub_1000A71F8(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v7 = swift_allocObject(&unk_100726688, 24, 7);
    *(_QWORD *)(v7 + 16) = v3;
    v11[4] = sub_1000ADEFC;
    v12 = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10033F618;
    v11[3] = &unk_1007266A0;
    v8 = _Block_copy(v11);
    v9 = v12;
    v10 = v3;
    objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);
  }
}

void sub_1000A72FC(int a1, _BYTE *a2)
{
  id v3;
  id v4;

  a2[qword_1008511F8] = 1;
  v3 = objc_msgSend(a2, "viewIfLoaded");
  objc_msgSend(v3, "setNeedsLayout");

  a2[qword_1007F8690] = 1;
  v4 = objc_msgSend(a2, "viewIfLoaded");
  objc_msgSend(v4, "setNeedsLayout");

  sub_1000A7398();
}

void sub_1000A7398()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  __n128 v16;
  Class isa;
  id v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  CGRect v23;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ArticleDiffablePagePresenter.footerVisibilitySectionThreshold.getter(v4);
  if ((v8 & 1) == 0)
  {
    v9 = v7;
    v10 = objc_msgSend(v1, "collectionView");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "numberOfSections");

      if (v9 >= (uint64_t)v12)
        return;
    }
    else if ((v9 & 0x8000000000000000) == 0)
    {
      return;
    }
    v13 = objc_msgSend(v1, "collectionView");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, "collectionViewLayout");

      IndexPath.init(item:section:)(0, v9, v16);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v18 = objc_msgSend(v15, "layoutAttributesForItemAtIndexPath:", isa);

      if (v18)
      {
        v19 = *(_QWORD *)&v1[qword_1007F8700];
        if (v19)
        {
          objc_msgSend(v15, "collectionViewContentSize", swift_retain(*(_QWORD *)&v1[qword_1007F8700]).n128_f64[0]);
          v21 = v20;
          objc_msgSend(v18, "frame");
          *(double *)(v19 + 48) = v21 - CGRectGetMinY(v23);
          sub_1002C5274(1);
          swift_release(v19);
        }

      }
      else
      {
        v18 = v15;
      }

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000A7568(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1000A71F8(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

void sub_1000A75D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  objc_super v11;

  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  objc_msgSend(v3, "bringSubviewToFront:", *(_QWORD *)&v2[qword_100851200]);

  v5 = *(void **)&v2[qword_1007F86F8];
  if (!v5)
    return;
  v6 = v5;
  v7 = objc_msgSend(v2, "view");
  if (!v7)
    goto LABEL_8;
  v8 = v7;
  v9 = objc_msgSend(v2, "collectionView");
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v10 = v9;
  objc_msgSend(v8, "insertSubview:aboveSubview:", v6, v9);

}

void sub_1000A76D8(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = a1;
  sub_1000A75D4((uint64_t)v2, v1);

}

void sub_1000A770C()
{
  _BYTE *v0;
  _BYTE *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  double v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  double v43;
  double v44;
  double *v45;
  void *v46;
  double *v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  void *v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  void *v82;
  id v83;
  void *v84;
  double Width;
  void *v86;
  double v87;
  id v88;
  void *v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  double v94;
  CGFloat v95;
  double v96;
  CGFloat v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  CGFloat v102;
  double v103;
  double v104;
  CGFloat v105;
  CGFloat x;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  id v112;
  id v113;
  uint64_t v114;
  double v115;
  double v116;
  CGFloat v117;
  double v118;
  double v119;
  CGRect recta;
  void *v121;
  id (*v122)();
  double *v123;
  objc_super v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;

  v1 = v0;
  v124.receiver = v0;
  v124.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v124, "viewDidLayoutSubviews");
  if (v0[qword_1007F8690] == 1)
  {
    v0[qword_1007F8690] = 0;
    sub_1000A7E3C();
  }
  objc_msgSend(v0, "pageMarginInsets");
  v3 = v2;
  objc_msgSend(v0, "pageMarginInsets");
  v5 = v4;
  objc_msgSend(v0, "pageMarginInsets");
  v7 = v6;
  objc_msgSend(v0, "pageMarginInsets");
  v9 = v8;
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
    __break(1u);
    goto LABEL_44;
  }
  v11 = v10;
  v118 = v9;
  objc_msgSend(v10, "bounds");
  recta.origin.x = v12;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = *(void **)&v1[qword_100851200];
  objc_msgSend(v19, "sizeThatFits:", v16, v18);
  v20 = qword_1007F86C0;
  v21 = *(_QWORD *)&v1[qword_1007F86C0];
  if (v21
    && (v22 = *(void **)(v21 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell),
        v23 = type metadata accessor for ListTodayCardCollectionViewCell(0),
        swift_dynamicCastClass(v22, v23)))
  {
    v24 = v22;
    objc_msgSend(sub_10011B3A8(), "frame");
    CGRectGetMaxX(v125);

  }
  else
  {
    v126.origin.x = recta.origin.x;
    v126.origin.y = v14;
    v126.size.width = v16;
    v126.size.height = v18;
    CGRectGetMaxX(v126);
  }
  v127.origin.x = recta.origin.x;
  v127.origin.y = v14;
  v127.size.width = v16;
  v127.size.height = v18;
  CGRectGetMinY(v127);
  v116 = v16;
  v117 = v14;
  v115 = v18;
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  objc_msgSend(v19, "setFrame:");
  dispatch thunk of Button.touchOutsideMargin.setter(v3, v5, v7, v118);
  v26 = qword_1008511E0;
  if (v1[qword_1008511E0] == 1)
  {
    v27 = *(void **)&v1[v20];
    if (!v27)
      goto LABEL_30;
    v28 = objc_msgSend(v27, "view");
    if (!v28)
    {
LABEL_17:
      if ((v1[v26] & 1) != 0)
        goto LABEL_30;
      goto LABEL_18;
    }
    v29 = v28;
    objc_msgSend(v28, "frame");
    v31 = v30;
    v32 = objc_msgSend(v1, "view");
    v33 = v32;
    if (v31 >= 0.0)
    {
      if (v32)
      {
        objc_msgSend(v32, "bounds");
        v35 = v55;
        v50 = v56;
        v52 = v57;
        v54 = v58;

        goto LABEL_16;
      }
LABEL_45:
      __break(1u);
      return;
    }
    if (v32)
    {
      objc_msgSend(v32, "bounds");
      v35 = v34;
      v37 = v36;
      v39 = v38;
      v41 = v40;

      v42 = (void *)objc_opt_self(UIView);
      objc_msgSend(v42, "inheritedAnimationDuration");
      v44 = v43 * 0.8;
      v45 = (double *)swift_allocObject(&unk_100726638, 56, 7);
      *((_QWORD *)v45 + 2) = v29;
      v45[3] = v35;
      *((_QWORD *)v45 + 4) = v37;
      *((_QWORD *)v45 + 5) = v39;
      *((_QWORD *)v45 + 6) = v41;
      v122 = sub_1000ADEEC;
      v123 = v45;
      *(_QWORD *)&recta.origin.y = _NSConcreteStackBlock;
      *(_QWORD *)&recta.size.width = 1107296256;
      *(_QWORD *)&recta.size.height = sub_1000BD6CC;
      v121 = &unk_100726650;
      v46 = _Block_copy(&recta.origin.y);
      v47 = v123;
      v48 = v29;
      swift_release(v47);
      objc_msgSend(v42, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 612, v46, 0, v44, 0.0, 0.92, 0.0);
      _Block_release(v46);
      objc_msgSend(v48, "frame");
      objc_msgSend(v48, "setFrame:");
      objc_msgSend(v48, "frame");
      v50 = v49;
      v52 = v51;
      v54 = v53;
LABEL_16:
      objc_msgSend(v29, "setFrame:", v35, v50, v52, v54);

      goto LABEL_17;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_18:
  v59 = *(_QWORD *)&v1[qword_1007F86D0];
  if (v59)
  {
    v60 = *(void **)(v59 + 24);
    objc_msgSend(v60, "_systemContentInset", swift_retain(*(_QWORD *)&v1[qword_1007F86D0]).n128_f64[0]);
    v62 = v61;
    v64 = v63;
    objc_msgSend(v60, "contentOffset");
    v66 = v65;
    v68 = v67;
    objc_msgSend(v60, "contentInset");
    v70 = v64 + v66 + v69;
    v72 = v62 + v68 + v71;
    objc_msgSend(v60, "bounds");
    v74 = sub_10043671C(v70, v72, v73);
    v76 = v75;
    v78 = v77;
    v80 = v79;
    *(_QWORD *)&v25 = swift_release(v59).n128_u64[0];
  }
  else
  {
    v78 = 0.0;
    v80 = 0.0;
    v74 = 0.0;
    v76 = 0.0;
  }
  v81 = qword_1008511F8;
  if ((v1[qword_1008511F8] & 1) != 0)
    goto LABEL_22;
  v128.origin.x = v74;
  v128.origin.y = v76;
  v128.size.width = v78;
  v128.size.height = v80;
  Width = CGRectGetWidth(v128);
  v86 = *(void **)&v1[v20];
  if (!v86)
  {
LABEL_29:
    sub_1000A8230(v74, v76, v78, v80);
    v1[v81] = 0;
    goto LABEL_30;
  }
  v87 = Width;
  v88 = objc_msgSend(v86, "view");
  if (!v88)
    goto LABEL_22;
  v89 = v88;
  objc_msgSend(v88, "frame");
  v91 = v90;
  v93 = v92;
  v119 = v87;
  v95 = v94;
  v97 = v96;

  v129.origin.x = v91;
  v129.origin.y = v93;
  v129.size.width = v95;
  v129.size.height = v97;
  v25 = CGRectGetWidth(v129);
  if (v119 != v25)
  {
LABEL_22:
    v82 = *(void **)&v1[v20];
    if (v82)
    {
      v83 = objc_msgSend(v82, "view", v25);
      if (v83)
      {
        v84 = v83;
        objc_msgSend(v83, "setFrame:", v74, v76, v78, v80);

      }
    }
    goto LABEL_29;
  }
LABEL_30:
  v98 = *(void **)&v1[qword_1007F86F8];
  if (!v98)
    return;
  v99 = v98;
  v100 = objc_msgSend(v1, "traitCollection");
  if (objc_msgSend(v100, "userInterfaceIdiom") == (id)1)
  {
    v101 = objc_msgSend(v100, "horizontalSizeClass");

    v103 = v116;
    v102 = v117;
    v104 = v115;
    if (v101 == (id)2)
    {
      v105 = 80.0;
      goto LABEL_36;
    }
  }
  else
  {

    v103 = v116;
    v102 = v117;
    v104 = v115;
  }
  v105 = 8.0;
LABEL_36:
  x = recta.origin.x;
  v130 = CGRectInset(*(CGRect *)(&v102 - 1), v105, 0.0);
  v107 = sub_100559B8C(v130.size.width, v130.size.height);
  v109 = v108;
  objc_msgSend(v99, "frame");
  if (v107 != v111 || v109 != v110)
  {
    v112 = v99;
    objc_msgSend(v112, "frame");
    objc_msgSend(v112, "setFrame:", v105);

    v113 = v112;
    objc_msgSend(v113, "frame");
    objc_msgSend(v113, "setFrame:");

  }
  v114 = *(_QWORD *)&v1[qword_1007F8700];
  if (v114)
  {
    swift_retain(*(_QWORD *)&v1[qword_1007F8700]);
    sub_1002C5274(1);
    swift_release(v114);
  }

}

void sub_1000A7E3C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _UNKNOWN **v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double Height;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  CGRect v80;

  v1 = v0;
  v2 = objc_msgSend(v0, "collectionView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "contentInset");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v11 = &off_1007F8000;
    if (v0[qword_1008511E0] == 1 && (v12 = *(void **)&v0[qword_1007F86C0]) != 0)
    {
      v13 = v12;
      v14 = objc_msgSend(v1, "view");
      if (!v14)
      {
        __break(1u);
        return;
      }
      v15 = v14;
      objc_msgSend(v14, "bounds");
      v17 = v16;

      sub_1002DAF34(v17);
      Height = v18;

    }
    else
    {
      v20 = *(_QWORD *)&v0[qword_1007F86D0];
      if (v20)
      {
        v21 = *(void **)(v20 + 24);
        objc_msgSend(v21, "_systemContentInset", swift_retain(*(_QWORD *)&v0[qword_1007F86D0]).n128_f64[0]);
        v23 = v22;
        v25 = v24;
        objc_msgSend(v21, "contentOffset");
        v27 = v26;
        v29 = v28;
        objc_msgSend(v21, "contentInset");
        v31 = v25 + v27 + v30;
        v33 = v23 + v29 + v32;
        objc_msgSend(v21, "bounds");
        v80.origin.x = sub_10043671C(v31, v33, v34);
        Height = CGRectGetHeight(v80);
        v35 = *(void **)&v0[qword_1007F86C0];
        if (v35)
        {
          v36 = objc_msgSend(v35, "view");
          if (v36)
          {
            v37 = v36;
            objc_msgSend(v21, "_systemContentInset");
            v39 = v38;
            v41 = v40;
            objc_msgSend(v21, "contentOffset");
            v43 = v42;
            v45 = v44;
            objc_msgSend(v21, "contentInset");
            v47 = v41 + v43 + v46;
            v49 = v39 + v45 + v48;
            objc_msgSend(v21, "bounds");
            objc_msgSend(v37, "setFrame:", sub_10043671C(v47, v49, v50));

          }
        }
        v51 = *(void **)(v20 + 24);
        objc_msgSend(v51, "_systemContentInset");
        v53 = v52;
        v55 = v54;
        objc_msgSend(v51, "contentOffset");
        v57 = v56;
        v59 = v58;
        objc_msgSend(v51, "contentInset");
        v61 = v55 + v57 + v60;
        v63 = v53 + v59 + v62;
        objc_msgSend(v51, "bounds");
        v65 = sub_10043671C(v61, v63, v64);
        sub_1000A8230(v65, v66, v67, v68);
        swift_release(v20);
        v10 = 0.0;
        v8 = 0.0;
        v6 = 0.0;
        v11 = &off_1007F8000;
      }
      else
      {
        Height = v4;
      }
    }
    objc_msgSend(v3, "contentOffset");
    v70 = v69;
    v72 = v71;
    objc_msgSend(v3, "setContentInset:", Height, v6, v8, v10);
    objc_msgSend(v3, "setContentOffset:", v70, v72);
    v73 = *(_QWORD *)((char *)v11[216] + (_QWORD)v1);
    v74 = Height;
    if (v73)
    {
      v75 = *(_QWORD *)(v73 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell);
      v76 = type metadata accessor for LegacyListTodayCardCollectionViewCell(0);
      if (swift_dynamicCastClass(v75, v76)
        || (v77 = type metadata accessor for ListTodayCardCollectionViewCell(0),
            v78 = swift_dynamicCastClass(v75, v77),
            v74 = Height,
            v78))
      {
        v74 = 0.0;
      }
    }
    objc_msgSend(v3, "setScrollIndicatorInsets:", v74, 0.0, v8, 0.0);
    v79 = v3;
    objc_msgSend(v79, "contentOffset");
    objc_msgSend(v79, "setContentOffset:");

  }
}

void sub_1000A8230(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];

  v5 = v4;
  v42 = type metadata accessor for ImpressionMetrics.ID(0);
  v10 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v43[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v13);
  v15 = (char *)&v43[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v43[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)&v4[qword_1007F86D8];
  v22 = v21;
  if (v21 || (v22 = ArticleDiffablePagePresenter.todayCard.getter(v18)) != 0)
  {
    v23 = swift_retain(v21);
    TodayCard.impressionMetrics.getter(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      swift_release(v22);
      sub_100011088((uint64_t)v15, (uint64_t *)&unk_1007F7740);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    v24 = objc_msgSend(v4, "collectionView");
    if (v24)
    {
      v25 = v24;
      v26 = TimedMetricsPagePresenter.impressionsCalculator.getter(v24);
      v27 = objc_msgSend(v4, "view");
      if (!v27)
      {
        __break(1u);
        return;
      }
      v28 = v27;
      objc_msgSend(v27, "convertRect:toCoordinateSpace:", v25, a1, a2, a3, a4);

      ImpressionsCalculator.addElement(_:at:)(v20);
      ImpressionMetrics.id.getter(v29);
      v30 = v26;
      v31 = ImpressionsCalculator.childCalculator(for:)(v12);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v42);
      if (v31)
      {
        v32 = v30;
        v33 = *(_QWORD *)&v5[qword_1007F86C0];
        if (v33)
        {
          v34 = v33 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell;
          v35 = *(void **)v34;
          v36 = *(_QWORD *)(v34 + 8);
          ObjectType = swift_getObjectType();
          v43[3] = type metadata accessor for TodayCard(0);
          v43[4] = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
          v43[0] = v22;
          v38 = *(_QWORD *)(v36 + 40);
          v39 = v35;
          swift_retain(v22);
          dispatch thunk of NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(v43, v31, ObjectType, v38);

          swift_release(v22);
          swift_release(v31);

          v40 = swift_release(v32);
          (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v20, v16, v40);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
          return;
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
        swift_release(v30);
        v41 = v31;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
        v41 = v30;
      }
      swift_release(v41);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    }
    swift_release(v22);
  }
}

void sub_1000A85C8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000A770C();

}

void sub_1000A85FC(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  int v12;
  uint64_t v13;
  char v14;
  id v15;
  double v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD aBlock[5];
  uint64_t v37;
  char v38;
  objc_super v39;

  v2 = v1;
  v39.receiver = v1;
  v39.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v39, "traitCollectionDidChange:", a1);
  v1[qword_1007F8690] = 1;
  v4 = objc_msgSend(v1, "viewIfLoaded");
  objc_msgSend(v4, "setNeedsLayout");

  v5 = *(_QWORD *)&v2[qword_1007F86B0];
  if (v5)
  {
    v6 = objc_msgSend(v2, "traitCollection", swift_retain(*(_QWORD *)&v2[qword_1007F86B0]).n128_f64[0]);
    v7 = OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection;
    v8 = *(void **)(v5
                  + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection) = v6;
    v9 = v6;
    v10 = objc_msgSend(v9, "userInterfaceStyle");
    if (v10 == objc_msgSend(v8, "userInterfaceStyle"))
    {
      v11 = *(id *)(v5 + v7);
      v12 = UITraitCollection.prefersAccessibilityLayouts.getter(v11);

      if (((v12 ^ UITraitCollection.prefersAccessibilityLayouts.getter(v13)) & 1) == 0)
      {
        swift_release(v5);

        if (!a1)
          return;
        goto LABEL_9;
      }
    }
    v14 = *(_BYTE *)(v5 + 24);
    v15 = *(id *)(v5 + v7);
    v16 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, 0.0);
    v17 = sub_10000DF3C(&qword_1007F8D38);
    AccessibilityConditional.value(with:)(&v38, v15, v17);
    if ((v14 & 1) != 0)
    {
      v18 = 0;
      v38 = 0;
    }
    else
    {
      v18 = v38;
    }
    v19 = *(void **)(v5 + 16);
    v20 = (void *)objc_opt_self(UIView);
    v21 = swift_allocObject(&unk_1007265E8, 25, 7);
    *(_QWORD *)(v21 + 16) = v19;
    *(_BYTE *)(v21 + 24) = v18;
    aBlock[4] = sub_1000ADEBC;
    v37 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100726600;
    v22 = _Block_copy(aBlock);
    v23 = v37;
    v24 = v19;
    swift_release(v23);
    objc_msgSend(v20, "animateWithDuration:delay:options:animations:completion:", 4, v22, 0, v16, 0.0);
    _Block_release(v22);
    swift_release(v5);

  }
  if (!a1)
    return;
LABEL_9:
  v25 = a1;
  if (objc_msgSend(v25, "horizontalSizeClass")
    && (v26 = objc_msgSend(v2, "traitCollection"),
        v27 = objc_msgSend(v26, "horizontalSizeClass"),
        v26,
        v27 != objc_msgSend(v25, "horizontalSizeClass"))
    && ((v29 = *(_QWORD *)&v2[qword_1007F86D8], (v30 = v29) != 0)
     || (v30 = ArticleDiffablePagePresenter.todayCard.getter(v28)) != 0))
  {
    v31 = *(_QWORD *)&v2[qword_1007F86C0];
    if (v31)
    {
      v32 = v31 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell;
      v34 = *(void **)v32;
      v33 = *(_QWORD *)(v32 + 8);
      swift_retain(v29);
      v35 = v34;
      sub_1000A8994(v30, v35, v33, 5u);

      swift_release(v30);
    }
    else
    {
      swift_retain(v29);

      swift_release(v30);
    }
  }
  else
  {

  }
}

uint64_t sub_1000A8994(uint64_t a1, void *a2, uint64_t a3, unsigned int a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  _QWORD v41[5];

  v5 = v4;
  v40 = a4;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PageGrid(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)&v5[qword_1007F86C0];
  v39 = v17;
  if (v16)
  {
    type metadata accessor for ArticleHeaderViewController();
    v18 = v16;
    sub_1002DB108(v18);

  }
  else
  {
    v38 = v9;
    type metadata accessor for ArticleHeaderViewController();
    v19 = sub_1002DB108(v5);
    v20 = Logger.init()(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      v37 = v13;
      v24 = v23;
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v22, "ArticleDiffablePageViewController: header page grid derived from self unexpected", v23, 2u);
      v25 = v24;
      v13 = v37;
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
  }
  v26 = v40;
  if (v40 == 7)
  {
    v27 = type metadata accessor for ArticleHeaderViewController();
    v28 = objc_msgSend(v5, "traitCollection");
    ObjectType = swift_getObjectType();
    v26 = sub_1002DC2C4((uint64_t)a2, v28, v27, ObjectType, a3);

  }
  v30 = swift_getObjectType();
  (*(void (**)(BOOL, uint64_t, uint64_t))(a3 + 96))((v5[qword_1008511E0] & 1) == 0, v30, a3);
  v31 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(a3 + 264))(a1, v26, v15, v31, v30, a3);
  sub_1000AA004(a1, a2, a3, (uint64_t)v15, v40);
  v41[3] = type metadata accessor for TodayCard(0);
  v41[4] = &protocol witness table for TodayCard;
  v41[0] = a1;
  v32 = *(_QWORD *)&v5[qword_100852E68];
  v33 = *(_QWORD *)(a3 + 16);
  v34 = swift_retain(a1);
  dispatch thunk of CellWithManagedArtwork.fetch(for:on:asPartOf:)(v41, v32, v31, v30, v33, v34);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v13);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v41);
}

void sub_1000A8C8C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1000A85FC(a3);

}

uint64_t sub_1000A8CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F8DA8);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F8DB0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F8DB8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1002CCB3C();
  v13 = ArticleDiffablePagePresenter.onPrepareToDisplayTodayCard.getter(v12);
  v14 = sub_10000DF3C(&qword_1007F8DC0);
  v15 = sub_100010F98(&qword_1007F8DC8, &qword_1007F8DC0, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v14, v15);
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_1000A90A8, 0, v14, ObjectType, v15);
  swift_release(v13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = ArticleDiffablePagePresenter.onShowFooterLockup.getter(v16);
  v18 = sub_10000DF3C(&qword_1007F8DD0);
  v19 = sub_100010F98(&qword_1007F8DD8, &qword_1007F8DD0, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v18, v19);
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_1000A9384, 0, v18, ObjectType, v19);
  swift_release(v17);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  v21 = ArticleDiffablePagePresenter.onPrefetchLinkPresentations.getter(v20);
  v22 = sub_10000DF3C(&qword_1007F8DE0);
  v23 = sub_100010F98(&qword_1007F8DE8, &qword_1007F8DE0, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v22, v23);
  v24 = v28;
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_1000A9620, 0, v22, ObjectType, v23);
  swift_release(v21);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v30);
}

void sub_1000A8FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v2 = v1;
  sub_1000A9D4C();
  v4 = qword_1007F86D8;
  v5 = *(_QWORD *)(v1 + qword_1007F86D8);
  v6 = swift_retain(v5);
  v7 = ArticleDiffablePagePresenter.todayCard.getter(v6);
  v8 = sub_1000AD204(v5, v7);
  swift_release(v5);
  swift_release(v7);
  v9 = *(_QWORD *)(v2 + v4);
  if ((v8 & 1) != 0 || !v9)
  {
    v10 = *(_QWORD *)(v2 + qword_1007F86B8);
    *(_QWORD *)(v2 + qword_1007F86B8) = a1;
    swift_release(v10);
    v11 = *(unsigned __int8 *)(v2 + qword_1008511F0);
    swift_retain(a1);
    if (v11 != 1 || v9 == 0)
      sub_1000AB220();
  }
}

uint64_t (*sub_1000A90A8(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100726598, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_1007265C0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1000ADE54;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000ADE74;
}

uint64_t sub_1000A9120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  _BYTE v28[24];

  v2 = v1;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  v5 = __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for ArticleDiffablePagePresenter.FooterLockup(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)&v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000AAA9C();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for ArticleDiffablePagePresenter.FooterLockup.standard(_:))
  {
    v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    v14 = *v11;
    v15 = *(void **)(v1 + qword_1007F86F8);
    if (v15)
    {
      v16 = *(_QWORD *)(v1 + qword_100852E68);
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
      v18 = v15;
      sub_100363ED4(v14, v16, v17);

    }
    Lockup.impressionMetrics.getter(v13);
LABEL_11:
    swift_release(v14);
    v25 = v2 + qword_100851208;
    swift_beginAccess(v2 + qword_100851208, v28, 33, 0);
    sub_10006C214((uint64_t)v7, v25, (uint64_t *)&unk_1007F7740);
    return swift_endAccess(v28);
  }
  if (v12 == enum case for ArticleDiffablePagePresenter.FooterLockup.arcade(_:))
  {
    v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    v14 = *v11;
    v20 = *(void **)(v1 + qword_1007F86F8);
    if (v20)
    {
      v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
      v22 = v20;
      sub_100559CD4(1);
      v23 = *(void **)&v22[OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_arcadeLockupView];
      if (v23)
      {
        v24 = v23;
        sub_1000FE738(v14, v21);
        objc_msgSend(v22, "setNeedsLayout");

        v22 = v24;
      }

    }
    ArcadeLockup.impressionMetrics.getter(v19);
    goto LABEL_11;
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t (*sub_1000A9384(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100726570, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1000ADE0C;
}

void sub_1000A93D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph)
                 + qword_100854058);
  if (!v2)
    goto LABEL_17;
  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(*(_QWORD *)(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph)
                           + qword_100854058));
    swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_4;
LABEL_15:
    swift_release(v2);
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v14 = a1;
  else
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_retain(v2);
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v4)
    goto LABEL_15;
LABEL_4:
  v5 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  if (v4 < 1)
  {
    __break(1u);
LABEL_17:
    v15 = sub_10000DF3C((uint64_t *)&unk_1007F8DF0);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v15);
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
      swift_retain(v8);
    }
    ++v7;
    v16[0] = v8;
    v9 = dispatch thunk of LinkLoader.fetchPresentation(for:cacheEnabled:)(v16, 0);
    v10 = swift_allocObject(&unk_1007263E0, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = (_QWORD *)swift_allocObject(&unk_100726458, 40, 7);
    v11[2] = v8;
    v11[3] = v10;
    v11[4] = v2;
    swift_retain_n(v8, 2);
    v12 = swift_retain(v2);
    v13 = static OS_dispatch_queue.main.getter(v12);
    v16[3] = v6;
    v16[4] = &protocol witness table for OS_dispatch_queue;
    v16[0] = v13;
    Promise.then(perform:orCatchError:on:)(sub_1000ADCC8, v11, sub_1000ADCD4, v8, v16);
    swift_release(v9);
    swift_release(v11);
    swift_release_n(v8, 2);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
  }
  while (v4 != v7);
  swift_release(v2);
  swift_bridgeObjectRelease(a1);
}

uint64_t (*sub_1000A9620(void *a1))(_QWORD *)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100726408, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100726430, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1000ADC50;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000ADF44;
}

unint64_t sub_1000A9698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for ArticlePageGridProvider;
  result = sub_1000ADBE8();
  a1[4] = result;
  *a1 = v3;
  return result;
}

unint64_t sub_1000A96EC@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for ArticlePageShelfLayoutSpacingProvider;
  result = sub_1000ADBA4();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000A971C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_100852E58);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
  v3 = sub_10000E99C(&qword_1007F8D88, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v4 = type metadata accessor for ArticlePageShelfSupplementaryProvider();
  v5 = swift_allocObject(v4, 40, 7);
  *(_QWORD *)(v5 + 32) = 0;
  swift_unknownObjectWeakInit(v5 + 24);
  *(_QWORD *)(v5 + 32) = v3;
  swift_unknownObjectWeakAssign(v6, v1);
  *(_QWORD *)(v5 + 16) = v2;
  sub_10000E99C(&qword_1007F8D90, (uint64_t (*)(uint64_t))type metadata accessor for ArticlePageShelfSupplementaryProvider, (uint64_t)&unk_10068A030);
  swift_retain(v2);
  return v5;
}

void sub_1000A97F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_10000DF3C(&qword_1007F8D60);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003737CC(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  LODWORD(a1) = enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 == (_DWORD)a1)
  {
    v8 = ArticleDiffablePagePresenter.shouldTerminateOnClose.getter(v7);
    sub_1000A98D8(v8 & 1);
    sub_1000A99B4();
  }
}

uint64_t sub_1000A98D8(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  id v6;
  void *v7;
  char **v8;
  char v9;

  v2 = *(unsigned __int8 *)(v1 + qword_1007F86E8);
  v3 = result & 1;
  *(_BYTE *)(v1 + qword_1007F86E8) = result;
  if (v2 != v3)
  {
    v4 = qword_1007F86F0;
    v5 = *(unsigned __int8 *)(v1 + qword_1007F86F0);
    *(_BYTE *)(v1 + qword_1007F86F0) = v3;
    if (v5 != v3)
    {
      v6 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
      v7 = v6;
      if (*(_BYTE *)(v1 + v4))
        v8 = &selRef_beginDelayingNotifications;
      else
        v8 = &selRef_endDelayingNotifications;
      objc_msgSend(v6, *v8);

    }
    v9 = ArticleDiffablePagePresenter.shouldTerminateOnClose.getter() & 1;
    return AsyncEvent.post(_:)(&v9);
  }
  return result;
}

void sub_1000A99B4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  unint64_t v40;
  void *v41;
  id v42;
  void *v43;
  __n128 v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  id v49;
  char *v50;
  _OWORD v51[2];
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;

  v1 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v1);
  v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ShareSheetData.Metadata(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = ArticleDiffablePagePresenter.shareAction.getter(v9);
  if (v12)
  {
    v13 = v12;
    v49 = v0;
    v14 = type metadata accessor for ShareSheetAction(0);
    v15 = swift_dynamicCastClass(v13, v14);
    if (v15)
    {
      v16 = ShareSheetAction.data.getter(v15);
      ShareSheetData.metadata.getter(v17);
      v18 = swift_release(v16);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, __n128))(v8 + 88))(v11, v7, v18) == enum case for ShareSheetData.Metadata.article(_:))
      {
        v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 96))(v11, v7);
        v20 = *v11;
        v21 = ShareSheetArticleMetadata.id.getter(v19);
        v48 = v22;
        v23 = ShareSheetArticleMetadata.text.getter(v21);
        v46 = v24;
        v47 = v23;
        v45 = v20;
        v25 = ShareSheetArticleMetadata.subtitle.getter();
        v27 = v26;
        v28 = ShareSheetAction.data.getter(v25);
        ShareSheetData.url.getter();
        v29 = swift_release(v28);
        v30 = URL.absoluteString.getter(v29);
        v32 = v31;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        sub_1003684B8(v21, v48, v47, v46, v25, v27, v30, v32, (uint64_t *)&v53);
        v56 = v53;
        v33 = v54;
        v34 = v55;
        *(_QWORD *)&v51[0] = _swiftEmptyArrayStorage;
        sub_1000ADB10((uint64_t)&v56);
        v35 = sub_10000E99C(&qword_1007F8D68, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
        swift_retain(v33);
        swift_retain(*((_QWORD *)&v33 + 1));
        swift_retain(v34);
        v36 = sub_10000DF3C(&qword_1007F8D70);
        v37 = sub_100010F98(&qword_1007F8D78, &qword_1007F8D70, (const char *)&protocol conformance descriptor for [A]);
        v38 = v50;
        dispatch thunk of SetAlgebra.init<A>(_:)(v51, v36, v37, v1, v35);
        v51[0] = v53;
        v51[1] = v54;
        v52 = v55;
        v39 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
        v40 = sub_1000ADB38();
        v41 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v51, v38, &type metadata for ArticleEntity, v40);
        v42 = objc_msgSend(v49, "view");
        if (v42)
        {
          v43 = v42;
          UIView.annotate(with:)(v41);

          sub_1000ADB7C((uint64_t)&v56);
          swift_release(v13);
          swift_release(v45);
          swift_release(v34);
          swift_release(*((_QWORD *)&v33 + 1));
          swift_release(v33);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        v44 = swift_release(v13);
        (*(void (**)(uint64_t *, uint64_t, __n128))(v8 + 8))(v11, v7, v44);
      }
    }
    else
    {
      swift_release(v13);
    }
  }
}

uint64_t sub_1000A9D4C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  _BYTE v18[13];
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for TodayCard.Style(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000DF3C(&qword_1007F8D38);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TodayCard.style.getter(v7);
  v10 = sub_1000B3EC0((uint64_t)v4);
  BYTE2(v19) = v10;
  v11 = TodayCard.media.getter(v10);
  v12 = type metadata accessor for TodayCardMediaList(0);
  v13 = swift_dynamicCastClass(v11, v12);
  swift_release(v11);
  if (v13)
    v14 = 0;
  else
    v14 = 3;
  BYTE1(v19) = v14;
  v15 = sub_1000AD1C0();
  AccessibilityConditional.init(value:axValue:)((char *)&v19 + 2, (char *)&v19 + 1, &type metadata for CardHeaderButton.Style, v15);
  v16 = objc_msgSend(v1, "traitCollection");
  AccessibilityConditional.value(with:)(&v19, v16, v5);

  sub_1000B324C(v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1000A9EB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[24];

  v9 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v9);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_QWORD *)(v4 + qword_1007F86D8);
  *(_QWORD *)(v4 + qword_1007F86D8) = a1;
  swift_release(v12);
  v13 = type metadata accessor for PageGrid(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v11, a4, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  v15 = v4 + qword_1007F86E0;
  swift_beginAccess(v4 + qword_1007F86E0, v18, 33, 0);
  swift_retain(a1);
  sub_10006C214((uint64_t)v11, v15, &qword_1008027B0);
  swift_endAccess(v18);
  sub_1000AA004(a1, a2, a3, a4, 7u);
  sub_1000AA1E8(a1, a2, a3);
  return sub_1000A9D4C();
}

void sub_1000AA004(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v33;

  v6 = v5;
  ObjectType = swift_getObjectType();
  v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TodayCardOverlayDisplaying);
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = a2;
  else
    v14 = 0;
  if (v14)
  {
    if (a5 == 7)
    {
      v15 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 136);
      v16 = a2;
      a5 = v15(ObjectType, a3);
    }
    else
    {
      v17 = a2;
    }
    v18 = swift_getObjectType();
    sub_10039D9D8(a1, a4, a5, *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph), v18, v13);
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 32);
    v20 = v19(v18, v13);
    if (v20)
    {
      v23 = v20;
      v24 = v21;
      v25 = swift_getObjectType();
      (*(void (**)(BOOL, uint64_t, uint64_t))(v24 + 32))((*(_BYTE *)(v6 + qword_1008511E0) & 1) == 0, v25, v24);
      v22 = swift_unknownObjectRelease(v23);
    }
    v26 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v19)(v18, v13, v22);
    if (v26)
    {
      v28 = v26;
      v29 = v27;
      v30 = swift_getObjectType();
      v31 = swift_allocObject(&unk_1007263E0, 24, 7);
      swift_unknownObjectWeakInit(v31 + 16, v6);
      v32 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128))(v29 + 88);
      v33 = swift_retain(v31);
      v32(sub_1000ADAF0, v31, v30, v29, v33);
      swift_unknownObjectRelease(v28);
      swift_release(v31);
    }

  }
}

void sub_1000AA1E8(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  _BYTE *v16;
  id v17;
  void *v18;
  char *v19;
  uint64_t ObjectType;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  char v49;
  char v50;

  v4 = v3;
  v8 = type metadata accessor for TodayCard.Style(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F8D38);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000AA62C(a1, a2, a3);
  v16 = v15;
  sub_1000AD898(v15);
  v48 = v16;

  v17 = objc_msgSend(v4, "collectionView");
  if (v17)
  {
    v18 = v17;
    v19 = v10;
    ObjectType = swift_getObjectType();
    v47 = a1;
    v21 = v14;
    v22 = v12;
    v23 = v11;
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 208);
    v46 = v48;
    v45 = v18;
    v25 = ObjectType;
    v10 = v19;
    v26 = v24(v25, a3);
    v11 = v23;
    v12 = v22;
    v14 = v21;
    LOBYTE(v18) = v26;
    v27 = type metadata accessor for ArticleHeaderScrollObserver();
    v28 = swift_allocObject(v27, 33, 7);
    v29 = v45;
    *(_QWORD *)(v28 + 16) = v46;
    *(_QWORD *)(v28 + 24) = v29;
    *(_BYTE *)(v28 + 32) = v18 & 1;
    sub_1000AD9E0(v28, &qword_1007F86D0, &qword_1007F8D48, (uint64_t (*)(uint64_t))type metadata accessor for ArticleHeaderScrollObserver, (uint64_t)"}+\v");

    swift_release(v28);
  }
  v30 = *(id *)&v4[qword_100851200];
  TodayCard.style.getter(v31);
  v32 = sub_1000B3EC0((uint64_t)v10);
  v50 = v32;
  v33 = TodayCard.media.getter(v32);
  v34 = type metadata accessor for TodayCardMediaList(0);
  v35 = swift_dynamicCastClass(v33, v34);
  swift_release(v33);
  if (v35)
    v36 = 0;
  else
    v36 = 3;
  v49 = v36;
  v37 = sub_1000AD1C0();
  AccessibilityConditional.init(value:axValue:)(&v50, &v49, &type metadata for CardHeaderButton.Style, v37);
  v38 = objc_msgSend(v4, "traitCollection");
  v39 = type metadata accessor for ArticleCloseButtonAppearanceCoordinator(0);
  v40 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  *(_BYTE *)(v40 + 24) = 0;
  *(_QWORD *)(v40 + 16) = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v40 + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_editorialButtonStyle, v14, v11);
  *(_QWORD *)(v40 + OBJC_IVAR____TtC22SubscribePageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection) = v38;
  sub_1000AD9E0(v40, &qword_1007F86B0, (unint64_t *)&unk_1007F8D50, type metadata accessor for ArticleCloseButtonAppearanceCoordinator, (uint64_t)&unk_100688350);
  *(_QWORD *)&v41 = swift_release(v40).n128_u64[0];
  v4[qword_1008511F8] = 1;
  v42 = objc_msgSend(v4, "viewIfLoaded", v41);
  objc_msgSend(v42, "setNeedsLayout");

  v4[qword_1007F8690] = 1;
  v43 = objc_msgSend(v4, "viewIfLoaded");
  objc_msgSend(v43, "setNeedsLayout");

}

id sub_1000AA554(void *a1, id a2, SEL *a3, SEL *a4)
{
  id result;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;

  result = objc_msgSend(a2, *a3);
  if (result)
  {
    v8 = result;
    objc_msgSend(a1, "frame");
    v10 = v9;
    v12 = v11;
    v13 = objc_msgSend(a2, *a4);
    objc_msgSend(v8, "convertPoint:fromView:", v13, v10, v12);
    v15 = v14;
    v17 = v16;

    objc_msgSend(a1, "frame");
    return objc_msgSend(a1, "setFrame:", v15, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_BYTE *sub_1000AA62C(uint64_t a1, void *a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  _BYTE *v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *result;
  void *v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  objc_super v26;

  v4 = v3;
  v8 = (void *)sub_1000AA7EC(a2, a3, a1);
  v10 = v9;
  v11 = (objc_class *)type metadata accessor for ArticleHeaderViewController();
  v12 = objc_allocWithZone(v11);
  v12[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isDisappearing] = 0;
  v12[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isAppearing] = 0;
  v12[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_todayCard] = a1;
  v13 = &v12[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell];
  *v13 = a2;
  v13[1] = a3;
  v14 = &v12[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell];
  *v14 = v8;
  v14[1] = v10;
  v26.receiver = v12;
  v26.super_class = v11;
  swift_retain(a1);
  v15 = a2;
  v16 = v8;
  v17 = objc_msgSendSuper2(&v26, "initWithNibName:bundle:", 0, 0);
  v17[OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_isCardModeEnabled] = v4[qword_1008511E0];
  sub_1002DB4A8((uint64_t)v17, v18);
  result = objc_msgSend(v4, "view", v26.receiver, v26.super_class);
  if (result)
  {
    v20 = result;
    objc_msgSend(result, "bounds");
    v22 = v21;

    result = objc_msgSend(v17, "view");
    if (result)
    {
      v23 = result;
      v24 = sub_1002DAF34(v22);
      objc_msgSend(v23, "setFrame:", 0.0, 0.0, v24, v25);

      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AA7EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  unsigned __int8 (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  _QWORD v31[5];

  v6 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v14 = *(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 136);
  if (v14(ObjectType, a2) != 4 && v14(ObjectType, a2) != 6)
    return 0;
  (*(void (**)(uint64_t, uint64_t))(a2 + 112))(ObjectType, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100011088((uint64_t)v8, &qword_1008027B0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v15 = sub_1000AD70C(a1, a2, a3);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return 0;
  }
  v17 = v15;
  v18 = a3;
  v19 = v16;
  v29 = v18;
  v20 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  v28 = v12;
  v21 = (uint64_t)v20;
  v27 = type metadata accessor for ArticleHeaderViewController();
  v22 = objc_msgSend(v30, "traitCollection");
  LODWORD(v27) = sub_1002DC2C4(v21, v22, v27, v17, v19);

  v23 = v28;
  (*(void (**)(uint64_t, _QWORD))(v19 + 264))(v29, v27);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 216))(v31, ObjectType, a2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 224))(v31, v17, v19);
  v24 = type metadata accessor for ListTodayCardCollectionViewCell(0);
  if (swift_dynamicCastClass(v21, v24))
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 96))(1, v17, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
  return v21;
}

void sub_1000AAA9C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t (**v10)();
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v1 = v0;
  v2 = qword_1007F86F8;
  v3 = *(void **)&v0[qword_1007F86F8];
  if (v3)
  {
    objc_msgSend(v3, "removeFromSuperview");
    v4 = *(void **)&v0[v2];
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)&v0[v2] = 0;

  v5 = objc_msgSend(v0, "collectionView");
  if (v5)
  {
    v6 = v5;
    v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FooterLockupView()), "init");
    v8 = swift_allocObject(&unk_1007263E0, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v1);
    v9 = *(void **)&v7[OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_tapGestureRecognizer];
    if (v9)
      objc_msgSend(v9, "removeTarget:action:", v7, "clickActionHandlerTrampoline", swift_retain(v8).n128_f64[0]);
    else
      swift_retain(v8);
    v10 = (uint64_t (**)())&v7[OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_clickActionHandler];
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_clickActionHandler];
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension16FooterLockupView_clickActionHandler + 8];
    *v10 = sub_1000ADE2C;
    v10[1] = (uint64_t (*)())v8;
    swift_retain(v8);
    sub_100019310(v11, v12);
    sub_10055AAF4();
    swift_release_n(v8, 2);
    v13 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v7;
    v14 = v7;

    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "addSubview:", v14);

      v17 = type metadata accessor for ArticleFooterViewScrollObserver();
      swift_allocObject(v17, 73, 7);
      v18 = v14;
      v26 = v6;
      v19 = sub_1002C5424(v18, v26, 0);

      sub_1000AD9E0(v19, &qword_1007F8700, &qword_1007F8E10, (uint64_t (*)(uint64_t))type metadata accessor for ArticleFooterViewScrollObserver, (uint64_t)&unk_1006822A0);
      swift_release(v19);
      v20 = qword_1007F8700;
      v21 = *(_QWORD *)&v1[qword_1007F8700];
      if (v21)
      {
        v22 = swift_allocObject(&unk_1007263E0, 24, 7);
        swift_unknownObjectWeakInit(v22 + 16, v1);
        v23 = *(_QWORD *)(v21 + 32);
        v24 = *(_QWORD *)(v21 + 40);
        *(_QWORD *)(v21 + 32) = sub_1000ADE4C;
        *(_QWORD *)(v21 + 40) = v22;
        sub_100019310(v23, v24);
        v25 = *(_QWORD *)&v1[v20];
        if (v25)
        {
          swift_retain(*(_QWORD *)&v1[v20]);
          sub_1002C5274(1);
          swift_release(v25);
        }
      }

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1000AAD4C(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + qword_100852E58);
    swift_retain(v6);

    a2();
    return swift_release(v6);
  }
  return result;
}

void sub_1000AADCC(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1000AAE24(a1 & 1);

  }
}

uint64_t sub_1000AAE24(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  __n128 v20;
  _BYTE v21[4];
  int v22;
  _BYTE v23[24];

  v22 = a1;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1 + qword_100851208;
  swift_beginAccess(v1 + qword_100851208, v23, 0, 0);
  sub_1000194E4(v13, (uint64_t)v8, (uint64_t *)&unk_1007F7740);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F7740);
  v15 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  v16 = TimedMetricsPagePresenter.impressionsTracker.getter(v15);
  v18 = v17;
  ObjectType = swift_getObjectType();
  Date.init()(ObjectType);
  if ((v22 & 1) != 0)
    dispatch thunk of ImpressionsTracker.elementDidEnterView(_:on:)(v12, v5, ObjectType, v18);
  else
    dispatch thunk of ImpressionsTracker.elementDidLeaveView(_:on:)(v12, v5, ObjectType, v18);
  v20 = swift_unknownObjectRelease(v16);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v5, v2, v20);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1000AB010()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:), v1, v3);
  v6 = type metadata accessor for ArticleDiffablePagePresenter(0);
  v7 = sub_10000E99C(&qword_1007F8E38, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  MetricsPagePresenter.observe(lifecycleEvent:)(v5, v6, v7);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if (*((_BYTE *)v0 + qword_1007F86E8) == 1)
  {
    static ResilientDeepLinkController.removeAllDeepLinks()(v8);
    if (qword_1007F3440 != -1)
      swift_once(&qword_1007F3440, sub_1006023FC);
    v10 = type metadata accessor for OSLogger(0, v9);
    sub_1000117A8(v10, (uint64_t)qword_1008575E8);
    v11 = sub_10000DF3C(&qword_1007FD430);
    v12 = type metadata accessor for LogMessage(0);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000027, 0x8000000100633310);
    Logger.error(_:)(v13, v10, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
  }
}

void sub_1000AB1EC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000AB010();

}

void sub_1000AB220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t ObjectType;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;

  v1 = *(_QWORD *)(v0 + qword_1007F86B8);
  if (v1)
  {
    v2 = v0;
    swift_retain(*(_QWORD *)(v0 + qword_1007F86B8));
    v4 = TodayCard.media.getter(v3);
    v5 = TodayCardMedia.kind.getter();
    swift_release(v4);
    v6 = qword_1007F86C0;
    v7 = *(_QWORD *)(v2 + qword_1007F86C0);
    if (v7)
    {
      v8 = *(void **)(v7 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell);
      if (v8)
      {
        v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell + 8);
        v10 = *(id *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_alternateCell);
      }
      else
      {
        v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell + 8);
        v10 = *(id *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell);
        v8 = 0;
      }
      v16 = v8;
      v15 = v10;
      v13 = v15;
    }
    else
    {
      v11 = sub_100384FEC(v5);
      v9 = v12;
      v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      if (!*(_QWORD *)(v2 + v6))
      {
        v14 = type metadata accessor for RiverTodayCardCollectionViewCell(0);
        if (swift_dynamicCastClass(v13, v14))
          sub_1000A8994(v1, v13, v9, 7u);
        sub_1000AA1E8(v1, v13, v9);
      }
      v15 = 0;
    }
    sub_1000A8994(v1, v13, v9, 7u);
    v17 = *(_QWORD *)(v2 + v6);
    if (v17
      && ((v18 = *(void **)(v17 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell),
           v19 = swift_getObjectType(),
           (v20 = swift_conformsToProtocol2(v19, &protocol descriptor for AnyVideoViewProviding)) != 0)
        ? (v21 = v18)
        : (v21 = 0),
          v20 ? (v22 = v20) : (v22 = 0),
          v21))
    {
      v23 = type metadata accessor for VideoPlaybackCoordinator(0);
      v24 = *(void **)(*(_QWORD *)(v2
                                 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph)
                     + qword_100854088);
      if (v24)
      {
        ObjectType = swift_getObjectType();
        v26 = v18;
        v27 = v24;
        v34 = (id)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(ObjectType, v22);
        v29 = v28;
        v30 = *(_QWORD *)(v22 + 8);
        v31 = v26;
        dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v34, v29, v21, v30);

        swift_release(v1);
      }
      else
      {
        v32 = v23;
        v33 = v18;
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v32);
        __break(1u);
      }
    }
    else
    {

      swift_release(v1);
    }
  }
}

void sub_1000AB4E4(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  dispatch_queue_t v25;
  char *Strong;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  void **v44;
  dispatch_queue_t v45;
  __int128 aBlock;
  __int128 v47;
  uint64_t (*v48)();
  uint64_t v49;
  char v50;
  char v51[24];

  v41 = a4;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void ***)a1;
  v40 = *(void **)(a1 + 8);
  v42 = a3;
  v44 = v15;
  v45 = a3 + 2;
  if (qword_1007F3448 != -1)
    swift_once(&qword_1007F3448, sub_100602420);
  v16 = sub_1000117A8(v11, (uint64_t)qword_100857600);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  v17 = sub_10000DF3C(&qword_1007FD430);
  v18 = type metadata accessor for LogMessage(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001006332F0);
  v43 = a2;
  dispatch thunk of EditorialLink.url.getter(v20);
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v21) == 1)
  {
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F5150);
    aBlock = 0u;
    v47 = 0u;
  }
  else
  {
    *((_QWORD *)&v47 + 1) = v21;
    v23 = sub_1000117C0(&aBlock);
    (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 32))(v23, v10, v21);
  }
  static LogMessage.sensitive(_:)(&aBlock);
  sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
  Logger.debug(_:)(v19, v11, &protocol witness table for OSLogger);
  v24 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v24);
  v25 = v45;
  swift_beginAccess(v45, v51, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v25);
  if (Strong)
  {
    v27 = Strong;
    v28 = *(_QWORD *)&Strong[qword_1007F86C8];
    if (v28)
    {
      swift_retain(*(_QWORD *)&Strong[qword_1007F86C8]);

      v29 = (_QWORD *)swift_allocObject(&unk_100726480, 56, 7);
      v31 = v40;
      v30 = v41;
      v32 = v43;
      v33 = v44;
      v29[2] = v41;
      v29[3] = v33;
      v29[4] = v31;
      v29[5] = v32;
      v34 = (uint64_t)v42;
      v29[6] = v42;
      v50 = 1;
      v45 = *(dispatch_queue_t *)(v28 + 32);
      v35 = (_QWORD *)swift_allocObject(&unk_1007264A8, 48, 7);
      v35[2] = v28;
      v35[3] = sub_1000ADD28;
      v35[4] = v29;
      v35[5] = &v50;
      v36 = swift_allocObject(&unk_1007264D0, 32, 7);
      *(_QWORD *)(v36 + 16) = sub_1000ADD64;
      *(_QWORD *)(v36 + 24) = v35;
      v48 = sub_10006C410;
      v49 = v36;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v47 = sub_100101718;
      *((_QWORD *)&v47 + 1) = &unk_1007264E8;
      v37 = _Block_copy(&aBlock);
      v39 = v49;
      swift_retain(v30);
      sub_1000ADD80((uint64_t)v33, v31);
      swift_retain(v32);
      swift_retain(v34);
      swift_retain(v28);
      swift_retain(v30);
      sub_1000ADD80((uint64_t)v33, v31);
      swift_retain(v32);
      swift_retain(v34);
      swift_retain(v29);
      swift_retain(v36);
      swift_release(v39);
      dispatch_sync(v45, v37);
      _Block_release(v37);
      LOBYTE(v37) = swift_isEscapingClosureAtFileLocation(v36, "", 117, 28, 37, 1);
      swift_release(v36);
      if ((v37 & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        if ((v50 & 1) == 0)
          sub_1000AB96C(v30, v44, (uint64_t)v31, v32, v34);
        swift_release(v29);
        swift_release(v35);
        swift_release(v30);
        sub_1000ADDC4((uint64_t)v44, v31);
        swift_release(v28);
        swift_release(v34);
        swift_release(v32);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_1000AB96C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **aBlock;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  void *v32;
  void (*v33)();
  uint64_t v34;
  uint64_t v35;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0, v10);
  v13 = *(_QWORD *)(v27 - 8);
  v14 = __chkstk_darwin(v27);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock = a2;
  v30 = a3;
  v35 = a4;
  dispatch thunk of LinkLoader.setPresentation(_:forKey:)(&aBlock, &v35, v14);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter();
  v18 = swift_allocObject(&unk_100726520, 32, 7);
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a4;
  v33 = sub_1000ADE04;
  v34 = v18;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_1000BD6CC;
  v32 = &unk_100726538;
  v19 = _Block_copy(&aBlock);
  v20 = v34;
  swift_retain(a5);
  swift_retain(a4);
  v21 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v22 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v24 = sub_100010F98((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00, (const char *)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v23, v24, v9, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v27);
}

void sub_1000ABBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + qword_100852E58);
    swift_retain(v6);

    ArticleDiffablePagePresenter.reloadLink(_:)(a2);
    swift_release(v6);
  }
  swift_beginAccess(v3, &v11, 0, 0);
  v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "collectionView");

    if (v9)
    {
      v10 = objc_msgSend(v9, "collectionViewLayout");

      objc_msgSend(v10, "invalidateLayout");
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1000ABCB4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  __int128 v18;
  __int128 v19;

  v0 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSLogger(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3448 != -1)
    swift_once(&qword_1007F3448, sub_100602420);
  v8 = sub_1000117A8(v4, (uint64_t)qword_100857600);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10000DF3C(&qword_1007FD430);
  v10 = type metadata accessor for LogMessage(0);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD000000000000023, 0x80000001006332C0);
  dispatch thunk of EditorialLink.url.getter(v12);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
  {
    sub_100011088((uint64_t)v3, (uint64_t *)&unk_1007F5150);
    v18 = 0u;
    v19 = 0u;
  }
  else
  {
    *((_QWORD *)&v19 + 1) = v13;
    v15 = sub_1000117C0(&v18);
    (*(void (**)(_QWORD *, char *, uint64_t))(v14 + 32))(v15, v3, v13);
  }
  static LogMessage.sensitive(_:)(&v18);
  sub_100011088((uint64_t)&v18, &qword_1007F6E90);
  Logger.debug(_:)(v11, v4, &protocol witness table for OSLogger);
  v16 = swift_bridgeObjectRelease(v11);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
}

id sub_1000ABEDC(id result, uint64_t a2, uint64_t a3)
{
  objc_super v4;

  if ((*((_BYTE *)result + qword_1008511E0) & 1) == 0)
  {
    v4.receiver = result;
    v4.super_class = (Class)swift_getObjectType(result, a2);
    return objc_msgSendSuper2(&v4, "scrollViewDidScroll:", a3);
  }
  return result;
}

id sub_1000ABF30()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_100851200), "setHidden:", 1);
}

id sub_1000ABF4C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_100851200), "setHidden:", 0);
}

uint64_t sub_1000ABF68()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:), v1, v3);
  v6 = type metadata accessor for ArticleDiffablePagePresenter(0);
  v7 = sub_10000E99C(&qword_1007F8E38, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  MetricsPagePresenter.observe(lifecycleEvent:)(v5, v6, v7);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if (*((_BYTE *)v0 + qword_1007F86E8) == 1)
  {
    static ResilientDeepLinkController.removeAllDeepLinks()(v8);
    if (qword_1007F3440 != -1)
      swift_once(&qword_1007F3440, sub_1006023FC);
    v10 = type metadata accessor for OSLogger(0, v9);
    sub_1000117A8(v10, (uint64_t)qword_1008575E8);
    v11 = sub_10000DF3C(&qword_1007FD430);
    v12 = type metadata accessor for LogMessage(0);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000027, 0x8000000100633310);
    Logger.error(_:)(v13, v10, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  return 1;
}

uint64_t sub_1000AC148(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000ABF68();

  return 1;
}

Class sub_1000AC174(void *a1)
{
  id v1;
  unint64_t v2;
  NSArray v3;

  v1 = a1;
  v2 = sub_1000AC1E0();

  if (v2)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F8E40, UIKeyCommand_ptr);
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3.super.isa = 0;
  }
  return v3.super.isa;
}

unint64_t sub_1000AC1E0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  objc_super v18;
  unint64_t v19;

  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v18, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100019574(0, (unint64_t *)&qword_1007F8E40, UIKeyCommand_ptr);
    v4 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v19 = (unint64_t)v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v6 = v5;
  v7._object = (void *)0x8000000100633340;
  v7._countAndFlagsBits = 0xD00000000000002FLL;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v7, v8)._object;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v12 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:discoverabilityTitle:", v10, 0, "handleDismissKeyCommandWithCommand:", v11);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
  specialized Array._endMutation()(v16);
  return v19;
}

void sub_1000AC384(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1000AB010();

}

uint64_t type metadata accessor for ArticleDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F8730;
  if (!qword_1007F8730)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArticleDiffablePageViewController);
  return result;
}

void sub_1000AC40C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[22];

  v6[0] = "\b";
  v6[1] = &unk_100673940;
  v6[2] = &unk_100673940;
  v6[3] = &unk_100673940;
  v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[5] = &unk_100673940;
  v6[6] = &unk_100673940;
  v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[10] = &unk_100673958;
  v6[11] = &unk_100673958;
  v6[12] = &unk_100673958;
  v6[13] = &unk_100673958;
  v6[14] = &unk_100673958;
  v6[15] = &unk_100673958;
  sub_10006A5F8(319, qword_1007F8740, (uint64_t (*)(uint64_t))&type metadata accessor for PageGrid);
  if (v3 <= 0x3F)
  {
    v6[16] = *(_QWORD *)(v2 - 8) + 64;
    v6[17] = &unk_100673940;
    v6[18] = &unk_100673940;
    v6[19] = &unk_100673958;
    v6[20] = &unk_100673958;
    sub_10006A5F8(319, (unint64_t *)&qword_1008090E0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v5 <= 0x3F)
    {
      v6[21] = *(_QWORD *)(v4 - 8) + 64;
      swift_initClassMetadata2(a1, 256, 22, v6, a1 + 1264);
    }
  }
}

uint64_t sub_1000AC51C()
{
  return type metadata accessor for ArticleDiffablePageViewController(0);
}

void sub_1000AC524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;

  v2 = v1;
  *(_BYTE *)(v1 + qword_1008511F0) = 0;
  sub_1000AB220();
  v4 = *(_QWORD *)(v1 + qword_1007F86C0);
  if (v4)
  {
    v5 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell);
    ObjectType = swift_getObjectType();
    v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyVideoViewProviding);
    v8 = v7 ? v5 : 0;
    v9 = v7 ? v7 : 0;
    if (v8)
    {
      if (a1)
      {
        v10 = *(char **)(a1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
        v11 = type metadata accessor for VideoPlaybackCoordinator(0);
        v12 = *(void **)&v10[qword_100854088];
        if (!v12)
        {
LABEL_17:
          v29 = v11;
          v30 = v5;
          swift_retain(v10);
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v29);
          __break(1u);
          return;
        }
        v13 = swift_getObjectType();
        v14 = v5;
        swift_retain(v10);
        v15 = v12;
        v16 = (void *)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v13, v9);
        v18 = v17;
        v19 = *(_QWORD *)(v9 + 8);
        v20 = v14;
        dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v16, v18, v8, v19, 0);
        swift_release(v10);

      }
      else
      {
        v21 = v5;
      }
      v22 = type metadata accessor for VideoPlaybackCoordinator(0);
      v10 = *(char **)(*(_QWORD *)(v2
                                 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph)
                     + qword_100854088);
      if (v10)
      {
        v23 = swift_getObjectType();
        v24 = v10;
        v31 = (id)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v23, v9);
        v26 = v25;
        v27 = *(_QWORD *)(v9 + 8);
        v28 = v5;
        dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v31, v26, v8, v27);

        return;
      }
      v11 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v22);
      __break(1u);
      goto LABEL_17;
    }
  }
}

void sub_1000AC74C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  id v27;
  uint64_t v28;
  void *v29;
  char v30[24];

  v2 = v1;
  v4 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v2[qword_1007F86D8];
  if (v11)
  {
    v12 = *(_QWORD *)&v2[qword_1007F86C0];
    if (v12)
    {
      v13 = v12 + OBJC_IVAR____TtC22SubscribePageExtension27ArticleHeaderViewController_cell;
      v14 = *(void **)v13;
      v15 = *(_QWORD *)(v13 + 8);
      v16 = (uint64_t)&v2[qword_1007F86E0];
      swift_beginAccess(&v2[qword_1007F86E0], v30, 0, 0);
      sub_1000194E4(v16, (uint64_t)v6, &qword_1008027B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_100011088((uint64_t)v6, &qword_1008027B0);
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      if ((a1 & 1) != 0)
      {
        v17 = type metadata accessor for ArticleHeaderViewController();
        swift_retain(v11);
        v18 = v14;
        v19 = objc_msgSend(v2, "traitCollection");
        ObjectType = swift_getObjectType();
        v21 = (uint64_t)v18;
      }
      else
      {
        v22 = swift_getObjectType();
        v23 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 160);
        swift_retain(v11);
        v27 = v14;
        v28 = v22;
        v24 = v23(v22, v15);
        if (v24 != 7)
        {
LABEL_10:
          v25 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, char *, _QWORD, uint64_t, uint64_t))(v15 + 264))(v11, v24, v10, *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph], v25, v15);
          objc_msgSend(v14, "layoutIfNeeded");
          v29 = v14;
          (*(void (**)(uint64_t))(*(_QWORD *)(v15 + 72) + 8))(v25);
          v26 = swift_release(v11);
          (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v26);

          return;
        }
        v17 = type metadata accessor for ArticleHeaderViewController();
        v19 = objc_msgSend(v2, "traitCollection");
        v21 = (uint64_t)v27;
        ObjectType = v28;
      }
      v24 = sub_1002DC2C4(v21, v19, v17, ObjectType, v15);

      goto LABEL_10;
    }
  }
}

uint64_t sub_1000ACA08(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for Dependency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = qword_1008511D8;
  v8 = objc_allocWithZone((Class)type metadata accessor for TodayArticleTransitioningDelegate(0));
  v9 = v1;
  *(_QWORD *)&v1[v7] = objc_msgSend(v8, "init");
  v9[qword_1007F8690] = 0;
  v9[qword_1007F8698] = 0;
  v9[qword_1008511E0] = 1;
  v10 = qword_1008511E8;
  v11 = sub_10000DF3C(&qword_1007F8D30);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  *(_QWORD *)&v9[v10] = AsyncEvent.init()();
  v9[qword_1008511F0] = 1;
  v9[qword_1008511F8] = 0;
  v12 = qword_1007F86A0;
  v13 = type metadata accessor for TodayCardOverlayReusePool();
  swift_allocObject(v13, 32, 7);
  v14 = sub_1005AA2BC(2);
  *(_QWORD *)&v9[v12] = v14;
  *(_QWORD *)&v9[qword_1007F86A8] = 0x403C000000000000;
  v15 = qword_100851200;
  v16 = objc_allocWithZone((Class)type metadata accessor for CardHeaderButton(0));
  *(_QWORD *)&v9[v15] = sub_1000B3390(0);
  *(_QWORD *)&v9[qword_1007F86B0] = 0;
  *(_QWORD *)&v9[qword_1007F86B8] = 0;
  *(_QWORD *)&v9[qword_1007F86C0] = 0;
  *(_QWORD *)&v9[qword_1007F86C8] = 0;
  *(_QWORD *)&v9[qword_1007F86D0] = 0;
  *(_QWORD *)&v9[qword_1007F86D8] = 0;
  v17 = &v9[qword_1007F86E0];
  v18 = type metadata accessor for PageGrid(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v9[qword_1007F86E8] = 0;
  v9[qword_1007F86F0] = 0;
  *(_QWORD *)&v9[qword_1007F86F8] = 0;
  *(_QWORD *)&v9[qword_1007F8700] = 0;
  v19 = &v9[qword_100851208];
  v20 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v24 = v14;
  swift_retain(v14);
  Dependency.init<A>(satisfying:with:)(v13, &v24, v13);

  v21 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1005CC0B4(a1, v21);
}

id sub_1000ACCBC(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  _QWORD *v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  Class isa;
  char *v22;
  id v23;
  id v24;
  _BYTE v26[24];
  objc_super v27;
  _QWORD v28[5];
  objc_super v29;

  v4 = objc_allocWithZone((Class)type metadata accessor for ArticleDiffablePageViewController(0));
  swift_retain(a1);
  swift_retain(a2);
  v5 = (void *)sub_1000ACA08(a1);
  swift_release(a2);
  v6 = type metadata accessor for NavigationBarManualCheckLayoutMarginsChange();
  v7 = (char *)objc_allocWithZone((Class)type metadata accessor for FlowNavigationController());
  v8 = &v7[OBJC_IVAR____TtC22SubscribePageExtension24FlowNavigationController_flowController];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension24FlowNavigationController_actionRunner] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension25StoreNavigationController_objectGraph] = 0;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v6);
  v29.receiver = v7;
  v29.super_class = (Class)type metadata accessor for StoreNavigationController();
  v10 = objc_msgSendSuper2(&v29, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, 0);
  (*(void (**)(void))((swift_isaMask & *v10) + 0x60))();
  v11 = (objc_class *)type metadata accessor for NavigationFlowController(0);
  v12 = (char *)objc_allocWithZone(v11);
  swift_unknownObjectWeakInit(&v12[qword_100818970], 0);
  *(_QWORD *)&v12[qword_100818980] = 0;
  *(_QWORD *)&v12[qword_100818988] = 0;
  swift_unknownObjectWeakAssign(v13, v10);
  *(_QWORD *)&v12[qword_100818978] = a2;
  swift_retain(a2);
  v27.receiver = v12;
  v27.super_class = (Class)sub_10000DF3C((uint64_t *)&unk_1007F8D20);
  v14 = objc_msgSendSuper2(&v27, "init");
  v28[3] = v11;
  v28[4] = &off_100749630;
  v28[0] = v14;
  v15 = (uint64_t)v10 + OBJC_IVAR____TtC22SubscribePageExtension24FlowNavigationController_flowController;
  swift_beginAccess((char *)v10 + OBJC_IVAR____TtC22SubscribePageExtension24FlowNavigationController_flowController, v26, 33, 0);
  sub_10006C214((uint64_t)v28, v15, (uint64_t *)&unk_100808370);
  swift_endAccess(v26);
  v16 = sub_10000DF3C(&qword_1007F5840);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v17 + 32) = v5;
  v28[0] = v17;
  specialized Array._endMutation()(v17);
  v18 = v28[0];
  sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v19 = v10;
  v20 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setViewControllers:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v22 = (char *)v20;
  v23 = sub_1004A53A8(v19, v22);
  objc_msgSend(v23, "setModalPresentationStyle:", 4);
  objc_msgSend(v23, "setTransitioningDelegate:", *(_QWORD *)&v22[qword_1008511D8]);
  v24 = v23;
  objc_msgSend(v24, "setModalPresentationCapturesStatusBarAppearance:", 1);

  return v24;
}

uint64_t sub_1000ACFA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000ACFCC()
{
  uint64_t v0;

  return sub_1000AA554(*(void **)(v0 + 16), *(id *)(v0 + 24), (SEL *)&selRef_view, (SEL *)&selRef_collectionView);
}

uint64_t sub_1000ACFF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AD004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000AD014(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1000AD01C()
{
  uint64_t v0;

  return sub_1000AA554(*(void **)(v0 + 16), *(id *)(v0 + 24), (SEL *)&selRef_collectionView, (SEL *)&selRef_view);
}

uint64_t sub_1000AD044()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AD054(void *a1, uint64_t a2, void *a3, uint64_t a4, id a5, _BYTE *a6)
{
  id v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  void **v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  void *v22;
  uint64_t v23;

  v11 = objc_msgSend(a5, "transitionCoordinator");
  if (v11)
  {
    v13 = v11;
    if (a1)
    {
      v22 = a1;
      v23 = a2;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_10033F618;
      v21 = &unk_100726768;
      a1 = _Block_copy(&v18);
      v14 = v23;
      swift_retain(a2);
      v12 = swift_release(v14).n128_u64[0];
    }
    if (a3)
    {
      v22 = a3;
      v23 = a4;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_10033F618;
      v21 = &unk_100726740;
      a3 = _Block_copy(&v18);
      v15 = v23;
      swift_retain(a4);
      v12 = swift_release(v15).n128_u64[0];
    }
    v16 = objc_msgSend(v13, "animateAlongsideTransition:completion:", a1, a3, *(double *)&v12);
    swift_unknownObjectRelease(v13);
    _Block_release(a3);
    _Block_release(a1);
    if (v16)
      return 1;
  }
  a6[qword_1007F8698] = 1;
  objc_msgSend(a6, "setNeedsStatusBarAppearanceUpdate");
  return 0;
}

unint64_t sub_1000AD1C0()
{
  unint64_t result;

  result = qword_1007F8D40;
  if (!qword_1007F8D40)
  {
    result = swift_getWitnessTable(&unk_100673CE4, &type metadata for CardHeaderButton.Style);
    atomic_store(result, (unint64_t *)&qword_1007F8D40);
  }
  return result;
}

uint64_t sub_1000AD204(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;

  v3 = a1;
  if (!a1
    || (a1 = TodayCard.overlay.getter(a1)) == 0
    || (*(_QWORD *)&v45[0] = a1,
        v4 = type metadata accessor for TodayCardOverlay(0),
        v5 = sub_10000DF3C(&qword_1007F8E30),
        a1 = swift_dynamicCast(v47, v45, v4, v5, 6),
        (a1 & 1) == 0))
  {
    v48 = 0;
    memset(v47, 0, sizeof(v47));
  }
  if (!a2
    || (a1 = TodayCard.overlay.getter(a1)) == 0
    || (*(_QWORD *)&v43[0] = a1,
        v6 = type metadata accessor for TodayCardOverlay(0),
        v7 = sub_10000DF3C(&qword_1007F8E30),
        a1 = swift_dynamicCast(v45, v43, v6, v7, 6),
        (a1 & 1) == 0))
  {
    v46 = 0;
    memset(v45, 0, sizeof(v45));
  }
  if (!v3
    || (*(_QWORD *)&v41[0] = TodayCard.media.getter(a1),
        v8 = type metadata accessor for TodayCardMedia(0),
        v9 = sub_10000DF3C(&qword_1007F8E28),
        a1 = swift_dynamicCast(v43, v41, v8, v9, 6),
        (a1 & 1) == 0))
  {
    v44 = 0;
    memset(v43, 0, sizeof(v43));
  }
  if (!a2
    || (v38[0] = TodayCard.media.getter(a1),
        v10 = type metadata accessor for TodayCardMedia(0),
        v11 = sub_10000DF3C(&qword_1007F8E28),
        (swift_dynamicCast(v41, v38, v10, v11, 6) & 1) == 0))
  {
    v42 = 0;
    memset(v41, 0, sizeof(v41));
  }
  sub_1000194E4((uint64_t)v47, (uint64_t)v38, &qword_1007F8E18);
  v12 = v39;
  if (v39)
  {
    v13 = v40;
    sub_100011064(v38, v39);
    v14 = dispatch thunk of PurchasableTodayCardOverlay.offerAdamIds.getter(v12, v13);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
  }
  else
  {
    sub_100011088((uint64_t)v38, &qword_1007F8E18);
    v14 = 0;
  }
  sub_1000194E4((uint64_t)v45, (uint64_t)v38, &qword_1007F8E18);
  v15 = v39;
  if (v39)
  {
    v16 = v40;
    sub_100011064(v38, v39);
    v17 = dispatch thunk of PurchasableTodayCardOverlay.offerAdamIds.getter(v15, v16);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
    if (v14)
    {
      if (v17)
      {
        swift_bridgeObjectRetain(v14);
        v19 = sub_10010674C(v18, v17);
        swift_bridgeObjectRelease_n(v14, 2);
LABEL_26:
        swift_bridgeObjectRelease(v17);
        goto LABEL_28;
      }
LABEL_23:
      v19 = 0;
      v17 = v14;
      goto LABEL_26;
    }
    if (v17)
    {
      v19 = 0;
      goto LABEL_26;
    }
  }
  else
  {
    sub_100011088((uint64_t)v38, &qword_1007F8E18);
    if (v14)
      goto LABEL_23;
  }
  v19 = 1;
LABEL_28:
  sub_1000194E4((uint64_t)v43, (uint64_t)v38, &qword_1007F8E20);
  v20 = v39;
  if (v39)
  {
    v21 = v40;
    sub_100011064(v38, v39);
    v22 = dispatch thunk of PurchasableTodayCardMedia.offerAdamIds.getter(v20, v21);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
  }
  else
  {
    sub_100011088((uint64_t)v38, &qword_1007F8E20);
    v22 = 0;
  }
  sub_1000194E4((uint64_t)v41, (uint64_t)v38, &qword_1007F8E20);
  v23 = v39;
  if (v39)
  {
    v24 = v40;
    sub_100011064(v38, v39);
    v25 = dispatch thunk of PurchasableTodayCardMedia.offerAdamIds.getter(v23, v24);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
    if (v22)
    {
      if (v25)
      {
        swift_bridgeObjectRetain(v22);
        v27 = sub_10010674C(v26, v25);
        swift_bridgeObjectRelease_n(v22, 2);
LABEL_39:
        swift_bridgeObjectRelease(v25);
        goto LABEL_41;
      }
LABEL_36:
      v27 = 0;
      v25 = v22;
      goto LABEL_39;
    }
    if (v25)
    {
      v27 = 0;
      goto LABEL_39;
    }
  }
  else
  {
    sub_100011088((uint64_t)v38, &qword_1007F8E20);
    if (v22)
      goto LABEL_36;
  }
  v27 = 1;
LABEL_41:
  sub_1000194E4((uint64_t)v47, (uint64_t)v38, &qword_1007F8E18);
  v28 = v39;
  if (v39)
  {
    v29 = v40;
    sub_100011064(v38, v39);
    v30 = dispatch thunk of PurchasableTodayCardOverlay.offerAdamIds.getter(v28, v29);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
    swift_bridgeObjectRelease(v30);
    sub_1000194E4((uint64_t)v43, (uint64_t)v38, &qword_1007F8E20);
    if ((v19 & 1) != 0)
    {
      sub_100011088((uint64_t)v38, &qword_1007F8E20);
      v27 = 1;
      goto LABEL_48;
    }
  }
  else
  {
    sub_100011088((uint64_t)v38, &qword_1007F8E18);
    sub_1000194E4((uint64_t)v43, (uint64_t)v38, &qword_1007F8E20);
  }
  sub_1000194E4((uint64_t)v38, (uint64_t)v35, &qword_1007F8E20);
  v31 = v36;
  if (v36)
  {
    v32 = v37;
    sub_100011064(v35, v36);
    v33 = dispatch thunk of PurchasableTodayCardMedia.offerAdamIds.getter(v31, v32);
    sub_100011088((uint64_t)v38, &qword_1007F8E20);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v35);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    sub_100011088((uint64_t)v38, &qword_1007F8E20);
    sub_100011088((uint64_t)v35, &qword_1007F8E20);
    v27 = 0;
  }
LABEL_48:
  sub_100011088((uint64_t)v41, &qword_1007F8E20);
  sub_100011088((uint64_t)v43, &qword_1007F8E20);
  sub_100011088((uint64_t)v45, &qword_1007F8E18);
  sub_100011088((uint64_t)v47, &qword_1007F8E18);
  return v27 & 1;
}

uint64_t sub_1000AD70C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[16];
  _BYTE v22[24];

  v5 = type metadata accessor for MultiAppFallbackCardCollectionViewCell(0);
  if (swift_dynamicCastClass(a1, v5))
  {
    v6 = type metadata accessor for TodayShelfComponentTypeMappingProvider();
    inited = swift_initStackObject(v6, v20);
    v8 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
    *(_QWORD *)(inited + 16) = swift_initStackObject(v8, &v19);
    v9 = sub_1005FCA44(a3, 5);
    v10 = swift_release(inited);
    if (v9 && swift_dynamicCastMetatype(v9, v5, v10))
      return 0;
  }
  else
  {
    v11 = type metadata accessor for ListTodayCardCollectionViewCell(0);
    v12 = swift_dynamicCastClass(a1, v11);
    if (v12
      && (!*(_BYTE *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded)
        ? (v13 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory)
        : (v13 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory),
          *(_BYTE *)(v12 + *v13) == 6
       && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12
                                            + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                                + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                    + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) & 1) == 0))
    {
      v15 = type metadata accessor for TodayShelfComponentTypeMappingProvider();
      v16 = swift_initStackObject(v15, v22);
      v17 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
      *(_QWORD *)(v16 + 16) = swift_initStackObject(v17, v21);
      v18 = a1;
      v9 = sub_1005FCA44(a3, 6);
      swift_release(v16);

    }
    else
    {
      return 0;
    }
  }
  return v9;
}

void sub_1000AD898(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v3 = qword_1007F86C0;
  v4 = *(void **)&v1[qword_1007F86C0];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "willMoveToParentViewController:", 0);
    objc_msgSend(v5, "removeFromParentViewController");
    v6 = objc_msgSend(v5, "viewIfLoaded");
    objc_msgSend(v6, "removeFromSuperview");

    objc_msgSend(v5, "didMoveToParentViewController:", 0);
    v7 = *(void **)&v1[v3];
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v8 = a1;

  v9 = *(void **)&v1[v3];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v10, "willMoveToParentViewController:", v1);
    objc_msgSend(v1, "addChildViewController:", v10);
    if (objc_msgSend(v1, "isViewLoaded"))
      sub_1000A6230();
    objc_msgSend(v10, "didMoveToParentViewController:", v1);

  }
}

double sub_1000AD9E0(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;

  v10 = *a2;
  v11 = *(_QWORD *)(v5 + *a2);
  if (v11)
    v12 = sub_10000E99C(a3, a4, a5);
  else
    v12 = 0;
  swift_retain(v11);
  CompoundScrollObserver.removeChild(_:)(v13, v12);
  swift_release(v11);
  v14 = *(_QWORD *)(v5 + v10);
  *(_QWORD *)(v5 + v10) = a1;
  swift_retain(a1);
  swift_release(v14);
  v15 = *(_QWORD *)(v5 + v10);
  if (v15)
    v16 = sub_10000E99C(a3, a4, a5);
  else
    v16 = 0;
  swift_retain(v15);
  CompoundScrollObserver.addChild(_:)(v17, v16);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1000ADACC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000ADAF0()
{
  uint64_t v0;

  return sub_1000AAD4C(v0, (void (*)(void))&ArticleDiffablePagePresenter.didSelectCardOverlay());
}

uint64_t sub_1000ADB10(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1000ADB38()
{
  unint64_t result;

  result = qword_1007F8D80;
  if (!qword_1007F8D80)
  {
    result = swift_getWitnessTable(&unk_100686B4C, &type metadata for ArticleEntity);
    atomic_store(result, (unint64_t *)&qword_1007F8D80);
  }
  return result;
}

uint64_t sub_1000ADB7C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1000ADBA4()
{
  unint64_t result;

  result = qword_1007F8D98;
  if (!qword_1007F8D98)
  {
    result = swift_getWitnessTable(&unk_10069C4A8, &type metadata for ArticlePageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_1007F8D98);
  }
  return result;
}

unint64_t sub_1000ADBE8()
{
  unint64_t result;

  result = qword_1007F8DA0;
  if (!qword_1007F8DA0)
  {
    result = swift_getWitnessTable(&unk_10067CF88, &type metadata for ArticlePageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F8DA0);
  }
  return result;
}

uint64_t sub_1000ADC2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000ADC50(uint64_t a1)
{
  sub_1000A93D8(a1);
}

uint64_t sub_1000ADC70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000ADC94()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1000ADCC8(uint64_t a1)
{
  uint64_t v1;

  sub_1000AB4E4(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1000ADCD4()
{
  return sub_1000ABCB4();
}

uint64_t sub_1000ADCDC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 24);
  if ((~v1 & 0xF000000000000007) != 0)
    sub_10007E8E4(v1, *(void **)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000ADD28()
{
  uint64_t v0;

  return sub_1000AB96C(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1000ADD38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000ADD64()
{
  uint64_t v0;

  return sub_1000C2BBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE **)(v0 + 40));
}

uint64_t sub_1000ADD70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000ADD80(uint64_t a1, void *a2)
{
  if ((~a1 & 0xF000000000000007) != 0)
    return (uint64_t)sub_1000ADD94(a1, a2);
  return a1;
}

id sub_1000ADD94(uint64_t a1, void *a2)
{
  if ((a1 & 0x8000000000000000) == 0)
    return (id)swift_retain(a1);
  swift_retain(a1 & 0x7FFFFFFFFFFFFFFFLL);
  return a2;
}

void sub_1000ADDC4(uint64_t a1, void *a2)
{
  if ((~a1 & 0xF000000000000007) != 0)
    sub_10007E8E4(a1, a2);
}

uint64_t sub_1000ADDD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000ADE04()
{
  uint64_t v0;

  sub_1000ABBB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000ADE0C(uint64_t a1)
{
  return sub_1000A9120(a1);
}

uint64_t sub_1000ADE2C()
{
  uint64_t v0;

  return sub_1000AAD4C(v0, (void (*)(void))&ArticleDiffablePagePresenter.didSelectFooterLockup());
}

void sub_1000ADE4C(char a1)
{
  uint64_t v1;

  sub_1000AADCC(a1, v1);
}

void sub_1000ADE54(uint64_t a1)
{
  sub_1000A8FD4(a1);
}

uint64_t sub_1000ADE74(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1000ADE98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1000ADEBC()
{
  uint64_t v0;

  sub_1000B3228(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1000ADEC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_1000ADEEC()
{
  uint64_t v0;

  return sub_1005C2B24(*(void **)(v0 + 16));
}

void sub_1000ADEFC(int a1)
{
  uint64_t v1;

  sub_1000A72FC(a1, *(_BYTE **)(v1 + 16));
}

id sub_1000ADF04()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + qword_100851200), "setAlpha:", 1.0);
}

id sub_1000ADF24()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = *(_BYTE **)(v0 + 16);
  v1[qword_1007F8698] = 1;
  return objc_msgSend(v1, "setNeedsStatusBarAppearanceUpdate");
}

_QWORD *sub_1000ADFB0()
{
  _QWORD *result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  result = BaseObjectGraph.optional<A>(_:)(v5, &type metadata for Bool, &type metadata for Bool);
  if (LOBYTE(v5[0]) == 2 || (v5[0] & 1) == 0)
  {
    v1 = type metadata accessor for ASDInAppPurchaseStateProvider(0);
    swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    v2 = ASDInAppPurchaseStateProvider.init()();
    v5[3] = v1;
    v5[4] = &protocol witness table for ASDInAppPurchaseStateProvider;
    v5[0] = v2;
    v3 = type metadata accessor for InAppPurchaseStateDataSource(0);
    swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    v4 = InAppPurchaseStateDataSource.init(withStateProvider:)(v5);
    InAppPurchaseStateDataSource.refreshData()();
    type metadata accessor for InAppPurchaseInstallPagePresenter(0);
    static InAppPurchaseInstallPagePresenter.use(stateDataSource:)(v4);
    type metadata accessor for InAppPurchaseOfferButtonPresenter(0);
    static InAppPurchaseOfferButtonPresenter.use(stateDataSource:)(v4);
    type metadata accessor for StreamlinedInAppPurchaseOfferButtonPresenter(0);
    static StreamlinedInAppPurchaseOfferButtonPresenter.use(stateDataSource:)(v4);
    return (_QWORD *)swift_release(v4);
  }
  return result;
}

uint64_t sub_1000AE098(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  _QWORD *v21;
  void (*v22)(_QWORD *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, _QWORD *);
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  __n128 v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  void (*v60)(_QWORD *, char *, uint64_t);
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  __n128 v72;
  void (*v73)(char *, uint64_t, __n128);
  __int128 v75;
  uint64_t v76;
  id v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  void (*v82)(_QWORD *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t updated;
  char *v90;
  __int128 v91;
  __int128 v92;
  void *v93;
  __int128 v94;
  __int128 v95;
  void *v96;

  v77 = a1;
  v1 = type metadata accessor for ModernAppStateDataSource(0);
  v2 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  v84 = v2;
  __chkstk_darwin(v1);
  v88 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v90 = (char *)&v75 - v6;
  v79 = (_QWORD *)type metadata accessor for AppStoreType(0, v5);
  v7 = *(v79 - 1);
  v8 = __chkstk_darwin(v79);
  v78 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DeviceAppQuery(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v75 = v10;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ASDDeviceAppFetcher(0, v12);
  v85 = *(_QWORD *)(v15 - 8);
  v16 = v85;
  __chkstk_darwin(v15);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ADFB0();
  updated = type metadata accessor for DeviceUpdateRegistry(0);
  v87 = DeviceUpdateRegistry.__allocating_init()();
  v96 = 0;
  v94 = 0u;
  v95 = 0u;
  ASDDeviceAppFetcher.init(regulatoryLogger:)(&v94);
  v19 = type metadata accessor for DeviceAppStateDataSource(0);
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
  v20(v14, enum case for DeviceAppQuery.betaApps(_:), v10);
  v86 = v15;
  *((_QWORD *)&v95 + 1) = v15;
  v96 = &protocol witness table for ASDDeviceAppFetcher;
  v21 = sub_1000117C0(&v94);
  v22 = *(void (**)(_QWORD *, char *, uint64_t))(v16 + 16);
  v23 = v18;
  v81 = v18;
  v22(v21, v18, v15);
  v82 = v22;
  v93 = 0;
  v91 = 0u;
  v92 = 0u;
  v24 = enum case for AppStoreType.default(_:);
  v25 = *(void (**)(char *, uint64_t, _QWORD *))(v7 + 104);
  v26 = v78;
  v27 = v79;
  v25(v78, enum case for AppStoreType.default(_:), v79);
  v76 = v19;
  v80 = DeviceAppStateDataSource.__allocating_init(query:fetcher:updateRegistry:store:)(v14, &v94, &v91, v26);
  v20(v14, enum case for DeviceAppQuery.allStoreApps(_:), v75);
  v28 = v86;
  *((_QWORD *)&v95 + 1) = v86;
  v96 = &protocol witness table for ASDDeviceAppFetcher;
  v29 = sub_1000117C0(&v94);
  v22(v29, v23, v28);
  *((_QWORD *)&v92 + 1) = updated;
  v93 = &protocol witness table for DeviceUpdateRegistry;
  v30 = v87;
  *(_QWORD *)&v91 = v87;
  v25(v26, v24, v27);
  swift_retain(v30);
  v78 = (char *)DeviceAppStateDataSource.__allocating_init(query:fetcher:updateRegistry:store:)(v14, &v94, &v91, v26);
  type metadata accessor for PurchaseHistoryAppStateDataSource(0);
  v31 = swift_retain(v77);
  v33 = v32;
  v34 = (void *)PurchaseHistoryAppStateDataSource.__allocating_init(asPartOf:)(v31);
  v35 = sub_10000DF3C(&qword_1007F8E50);
  v36 = type metadata accessor for App.Kind(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = v39 + *(_QWORD *)(v37 + 72);
  v41 = v38 | 7;
  v42 = swift_allocObject(v35, v40, v38 | 7);
  v75 = xmmword_10066FBA0;
  *(_OWORD *)(v42 + 16) = xmmword_10066FBA0;
  v43 = enum case for App.Kind.store(_:);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104);
  v44(v42 + v39, enum case for App.Kind.store(_:), v36);
  v79 = v34;
  ModernAppStateDataSource.init(_:isIncremental:supportedAppKinds:)();
  type metadata accessor for RemotePersonalizationAppStateDataSource(0);
  v45 = swift_retain(v33);
  v46 = (void *)RemotePersonalizationAppStateDataSource.__allocating_init(asPartOf:)(v45);
  v47 = swift_allocObject(v35, v40, v41);
  *(_OWORD *)(v47 + 16) = v75;
  v44(v47 + v39, v43, v36);
  v77 = v46;
  v48 = v88;
  ModernAppStateDataSource.init(_:isIncremental:supportedAppKinds:)();
  v49 = sub_10000DF3C(&qword_1007F8E58);
  v50 = swift_allocObject(v49, 272, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100671120;
  v51 = type metadata accessor for WaitingAppStateDataSource(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v52 = WaitingAppStateDataSource.init()();
  *(_QWORD *)(v50 + 56) = v51;
  *(_QWORD *)(v50 + 64) = &protocol witness table for WaitingAppStateDataSource;
  *(_QWORD *)(v50 + 32) = v52;
  v53 = v76;
  *(_QWORD *)(v50 + 96) = v76;
  *(_QWORD *)(v50 + 104) = &protocol witness table for DeviceAppStateDataSource;
  v54 = v80;
  *(_QWORD *)(v50 + 72) = v80;
  *(_QWORD *)(v50 + 136) = v53;
  *(_QWORD *)(v50 + 144) = &protocol witness table for DeviceAppStateDataSource;
  v55 = v78;
  *(_QWORD *)(v50 + 112) = v78;
  v56 = v83;
  *(_QWORD *)(v50 + 176) = v83;
  v57 = sub_1000AE6CC();
  *(_QWORD *)(v50 + 184) = v57;
  v58 = sub_1000117C0((_QWORD *)(v50 + 152));
  v59 = v84;
  v60 = *(void (**)(_QWORD *, char *, uint64_t))(v84 + 16);
  v60(v58, v90, v56);
  *(_QWORD *)(v50 + 216) = v56;
  *(_QWORD *)(v50 + 224) = v57;
  v61 = sub_1000117C0((_QWORD *)(v50 + 192));
  v60(v61, v48, v56);
  v62 = type metadata accessor for DefaultAppStateDataSource(0);
  swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
  v63 = v54;
  swift_retain(v54);
  v64 = swift_retain(v55);
  v65 = DefaultAppStateDataSource.init()(v64);
  *(_QWORD *)(v50 + 256) = v62;
  *(_QWORD *)(v50 + 264) = &protocol witness table for DefaultAppStateDataSource;
  *(_QWORD *)(v50 + 232) = v65;
  v66 = v86;
  *((_QWORD *)&v95 + 1) = v86;
  v96 = &protocol witness table for ASDDeviceAppFetcher;
  v67 = sub_1000117C0(&v94);
  v68 = v81;
  v82(v67, v81, v66);
  *((_QWORD *)&v92 + 1) = updated;
  v93 = &protocol witness table for DeviceUpdateRegistry;
  v69 = v87;
  *(_QWORD *)&v91 = v87;
  v70 = swift_retain(v87);
  v71 = makeModernAppStateController(deviceAppFetcher:updateRegistry:dataSources:)(&v94, &v91, v50, v70);
  swift_release(v69);

  swift_release(v63);
  swift_release(v55);
  v72 = swift_bridgeObjectRelease(v50);
  v73 = *(void (**)(char *, uint64_t, __n128))(v59 + 8);
  v73(v88, v56, v72);
  ((void (*)(char *, uint64_t))v73)(v90, v56);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v68, v66);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v91);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v94);
  return v71;
}

unint64_t sub_1000AE6CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F8E60;
  if (!qword_1007F8E60)
  {
    v1 = type metadata accessor for ModernAppStateDataSource(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ModernAppStateDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_1007F8E60);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernAppStateControllerFactory()
{
  return &type metadata for ModernAppStateControllerFactory;
}

void sub_1000AE724(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  char *Strong;
  void *v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  void (*v30)(_BYTE *, uint64_t);
  uint64_t v31;
  void *v32;
  id v33;
  Swift::Bool v34;
  _BYTE v35[24];
  _BYTE v36[24];
  UIImage_optional v37;

  v8 = sub_10000DF3C(&qword_1007F8EC0);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for Artwork.URLTemplate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v35[-v16];
  __chkstk_darwin(v18);
  v20 = &v35[-v19];
  v21 = a5 + 16;
  sub_1000194E4(a3, (uint64_t)v10, &qword_1007F8EC0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v10, &qword_1007F8EC0);
  }
  else
  {
    v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32);
    v22(v20, v10, v11);
    swift_beginAccess(v21, v35, 0, 0);
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v21);
    if (Strong)
    {
      v24 = Strong;
      v25 = *(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_artwork];
      if (v25)
      {
        swift_retain(*(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_artwork]);

        Artwork.template.getter(v26);
        v27 = swift_release(v25);
        ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v22)(v17, v14, v11, v27);
        v28 = sub_10000E99C(&qword_1007F8EC8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.URLTemplate, (uint64_t)&protocol conformance descriptor for Artwork.URLTemplate);
        v29 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v17, v11, v28);
        v30 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
        v30(v17, v11);
        v30(v20, v11);
        if ((v29 & 1) == 0)
          return;
        goto LABEL_9;
      }

    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v20, v11);
  }
LABEL_9:
  if (a1)
    a1 = objc_msgSend(a1, "imageWithRenderingMode:", 2);
  swift_beginAccess(v21, v36, 0, 0);
  v31 = swift_unknownObjectWeakLoadStrong(v21);
  if (v31)
  {
    v32 = (void *)v31;
    v33 = *(id *)(v31 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_iconView);

    v37.value.super.isa = (Class)a1;
    v37.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v37, v34);

  }
}

double sub_1000AE9C8(char **a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1000AEA40(*a1, a2, a3, a5, a7, a8);
}

void sub_1000AE9DC()
{
  sub_1000AF3F0();
}

void sub_1000AE9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000AFD14(a1, a3);
}

uint64_t sub_1000AE9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AFA34(a1, a3);
}

uint64_t sub_1000AEA14()
{
  return sub_10000E99C(&qword_1007F8E68, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyType, (uint64_t)&protocol conformance descriptor for PrivacyType);
}

double sub_1000AEA40(char *a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  void (*v34)(char *, uint64_t, __n128);
  uint64_t v35;
  char *v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  double v86;
  id v87;
  id v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  char *v97;
  char *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  __n128 v102;
  int v104;
  int v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(_QWORD *, uint64_t, uint64_t);
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t ObjectType;
  uint64_t v128;
  id v129;
  uint64_t v130;
  _BYTE v131[40];
  _BYTE v132[40];
  _QWORD v133[5];
  _QWORD v134[5];
  _QWORD v135[5];
  __int128 v136;
  uint64_t v137;
  void *v138;
  _QWORD v139[5];
  _QWORD v140[6];

  v10 = type metadata accessor for PrivacyTypeLayout(0);
  v114 = *(_QWORD *)(v10 - 8);
  v115 = v10;
  v11 = __chkstk_darwin(v10);
  v113 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LabelPlaceholderCompatibility(0, v11);
  v118 = *(_QWORD **)(v13 - 8);
  v119 = v13;
  __chkstk_darwin(v13);
  v123 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FontUseCase(0);
  v125 = *(_QWORD *)(v15 - 8);
  v126 = v15;
  __chkstk_darwin(v15);
  v124 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PrivacyTypeStyle(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v106 - v23;
  v25 = type metadata accessor for PrivacyTypeLayout.Metrics(0, v22);
  v121 = *(_QWORD *)(v25 - 8);
  v122 = v25;
  __chkstk_darwin(v25);
  v111 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v106 - v29;
  v31 = PrivacyType.artwork.getter(v28);
  ((void (*)(void))PrivacyType.style.getter)();
  ObjectType = swift_getObjectType();
  v129 = a6;
  sub_1002419D0(v31, (uint64_t)v24, a6, (uint64_t)v30, v32);
  v33 = swift_release(v31);
  v34 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v112 = v24;
  v34(v24, v17, v33);
  v35 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v110 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v109 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v120 = v30;
  v36 = a1;
  v37 = PrivacyTypeLayout.Metrics.iconSize.getter();
  v39 = v38;
  v40 = *(unsigned int *)(v35 + 48);
  v41 = *(unsigned __int16 *)(v35 + 52);
  v128 = v35;
  swift_allocObject(v35, v40, v41);
  v108 = LayoutViewPlaceholder.init(representing:)(v37, v39);
  ((void (*)(void))PrivacyType.style.getter)();
  v42 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v42 != enum case for PrivacyTypeStyle.productPage(_:))
  {
    if (v42 == enum case for PrivacyTypeStyle.intermediateDetailPage(_:)
      || v42 == enum case for PrivacyTypeStyle.detailPage(_:))
    {
      v45 = v124;
      if (qword_1007F2538 != -1)
        swift_once(&qword_1007F2538, sub_1004158EC);
      v49 = v126;
      v50 = sub_1000117A8(v126, (uint64_t)qword_100855490);
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v45, v50, v49);
      v48 = 4;
      goto LABEL_13;
    }
    v45 = v124;
    if (qword_1007F2530 != -1)
      swift_once(&qword_1007F2530, sub_1004158D4);
    v46 = v126;
    v47 = sub_1000117A8(v126, (uint64_t)qword_100855478);
    (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v45, v47, v46);
    ((void (*)(char *, uint64_t))v34)(v20, v17);
    goto LABEL_9;
  }
  if (qword_1007F2530 != -1)
    goto LABEL_35;
  while (1)
  {
    v43 = v126;
    v44 = sub_1000117A8(v126, (uint64_t)qword_100855478);
    v45 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v124, v44, v43);
LABEL_9:
    v48 = 1;
LABEL_13:
    v130 = v48;
    v51 = v123;
    sub_1000466E4();
    v52 = v129;
    v53 = objc_msgSend(v129, "traitCollection");
    v54 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v45, v53);

    v55 = PrivacyType.title.getter();
    v57 = v56;
    v58 = type metadata accessor for Feature(0);
    v140[3] = v58;
    v59 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v123 = v36;
    v117 = v59;
    v140[4] = v59;
    v60 = sub_1000117C0(v140);
    v61 = enum case for Feature.measurement_with_labelplaceholder(_:);
    v116 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 104);
    v116(v60, enum case for Feature.measurement_with_labelplaceholder(_:), v58);
    v62 = (id)v54;
    LOBYTE(v54) = isFeatureEnabled(_:)(v140);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v140);
    LOBYTE(v104) = v54 & 1;
    v107 = v62;
    v63 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v55, v57, v62, v130, 0, 0, 0, 0, v104);
    LabelPlaceholderCompatibility.layoutTextView.getter(v140, v63);
    v64 = v52;
    v65 = v119;
    v36 = (char *)v118[1];
    ((void (*)(char *, uint64_t))v36)(v51, v119);
    if (qword_1007F2540 != -1)
      swift_once(&qword_1007F2540, sub_100415904);
    v66 = sub_1000117A8(v126, (uint64_t)qword_1008554A8);
    v67 = objc_msgSend(v64, "traitCollection");
    v68 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v66, v67);

    v69 = PrivacyType.detail.getter();
    v71 = v70;
    v139[3] = v58;
    v139[4] = v117;
    v72 = sub_1000117C0(v139);
    v116(v72, v61, v58);
    v73 = v68;
    v74 = isFeatureEnabled(_:)(v139);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v139);
    LOBYTE(v105) = v74 & 1;
    v75 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v69, v71, v73, v130, 0, 0, 0, 0, v105);
    LabelPlaceholderCompatibility.layoutTextView.getter(v139, v75);
    v76 = ((uint64_t (*)(char *, uint64_t))v36)(v51, v65);
    v130 = PrivacyType.categories.getter(v76);
    if ((unint64_t)v130 >> 62)
    {
      if (v130 < 0)
        v85 = v130;
      else
        v85 = v130 & 0xFFFFFFFFFFFFFF8;
      v77 = _CocoaArrayWrapper.endIndex.getter(v85);
      v118 = v73;
      if (!v77)
      {
LABEL_32:
        v80 = _swiftEmptyArrayStorage;
        goto LABEL_33;
      }
    }
    else
    {
      v77 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFF8) + 0x10);
      v118 = v73;
      if (!v77)
        goto LABEL_32;
    }
    type metadata accessor for PrivacyCategoryView();
    if (v77 >= 1)
      break;
    __break(1u);
LABEL_35:
    swift_once(&qword_1007F2530, sub_1004158D4);
  }
  v78 = 0;
  v79 = v130 & 0xC000000000000001;
  v80 = _swiftEmptyArrayStorage;
  do
  {
    if (v79)
    {
      v81 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v78, v130);
    }
    else
    {
      v81 = *(void **)(v130 + 8 * v78 + 32);
      swift_retain(v81);
    }
    v82 = sub_100287950(v81, (uint64_t)v129);
    swift_retain(v82);
    if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
      v80 = sub_100200FF0(0, v80[2] + 1, 1, v80);
    v84 = v80[2];
    v83 = v80[3];
    if (v84 >= v83 >> 1)
      v80 = sub_100200FF0((_QWORD *)(v83 > 1), v84 + 1, 1, v80);
    ++v78;
    v137 = v128;
    v138 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v136 = v82;
    v80[2] = v84 + 1;
    sub_100010F3C(&v136, (uint64_t)&v80[5 * v84 + 4]);
    swift_release(v81);
    swift_release(v82);
  }
  while (v77 != v78);
LABEL_33:
  *(_QWORD *)&v86 = swift_bridgeObjectRelease(v130).n128_u64[0];
  v87 = v129;
  v88 = objc_msgSend(v129, "traitCollection", v86);
  v89 = static Separator.thickness(compatibleWith:)();

  v90 = v128;
  swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
  v91 = LayoutViewPlaceholder.init(representing:)(a2, v89);
  v92 = v111;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v111, v120, v122);
  v137 = v90;
  v138 = &protocol witness table for LayoutViewPlaceholder;
  v93 = v109;
  v94 = v110;
  *(_QWORD *)&v136 = v110;
  v135[3] = v90;
  v135[4] = &protocol witness table for LayoutViewPlaceholder;
  v134[4] = &protocol witness table for LayoutViewPlaceholder;
  v135[0] = v109;
  v134[3] = v90;
  v133[4] = &protocol witness table for LayoutViewPlaceholder;
  v134[0] = v91;
  v133[3] = v90;
  v95 = v108;
  v133[0] = v108;
  sub_100011020((uint64_t)v140, (uint64_t)v132);
  sub_100011020((uint64_t)v139, (uint64_t)v131);
  swift_retain(v94);
  swift_retain(v93);
  swift_retain(v91);
  v96 = swift_retain(v95);
  v97 = v112;
  PrivacyType.style.getter(v96);
  v98 = v113;
  PrivacyTypeLayout.init(metrics:shadowView:backgroundView:separatorView:iconView:titleLabel:detailLabel:categoryViews:style:)(v92, &v136, v135, v134, v133, v132, v131, v80, v97);
  v99 = sub_10000E99C((unint64_t *)&unk_100813F50, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyTypeLayout, (uint64_t)&protocol conformance descriptor for PrivacyTypeLayout);
  v100 = v87;
  v101 = v115;
  dispatch thunk of Measurable.measurements(fitting:in:)(v100, v115, v99, a2, a3);

  swift_release(v94);
  swift_release(v93);
  swift_release(v91);
  v102 = swift_release(v95);
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v98, v101, v102);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v139);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v140);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v124, v126);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v122);
  return a2;
}

void sub_1000AF3F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  __n128 v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char v34;
  NSString v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[24];

  v1 = v0;
  v2 = type metadata accessor for PrivacyTypeStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  PrivacyType.style.getter(v4);
  v7 = &v0[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_style];
  v8 = swift_beginAccess(v7, v42, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v3 + 24))(v7, v6, v2, v8);
  swift_endAccess(v42);
  sub_100243028(v9);
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  v11 = PrivacyType.title.getter(v10);
  v13 = v12;
  v14 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_titleLabel];
  v15 = objc_msgSend(v14, "text");
  if (!v15)
  {
LABEL_8:
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setText:", v23, swift_bridgeObjectRelease(v13).n128_f64[0]);

    objc_msgSend(v1, "setNeedsLayout");
    goto LABEL_10;
  }
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v19 = v18;

  if (v17 != v11 || v19 != v13)
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v11, v13, 0);
    swift_bridgeObjectRelease(v19);
    if ((v21 & 1) != 0)
    {
      v22 = swift_bridgeObjectRelease(v13);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  v22 = swift_bridgeObjectRelease_n(v13, 2);
LABEL_10:
  v24 = PrivacyType.detail.getter(v22);
  v26 = v25;
  v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_detailLabel];
  v28 = objc_msgSend(v27, "text");
  if (!v28)
    goto LABEL_16;
  v29 = v28;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v32 = v31;

  if (v30 != v24 || v32 != v26)
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v24, v26, 0);
    swift_bridgeObjectRelease(v32);
    if ((v34 & 1) != 0)
    {
      v33 = swift_bridgeObjectRelease(v26);
      goto LABEL_17;
    }
LABEL_16:
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "setText:", v35, swift_bridgeObjectRelease(v26).n128_f64[0]);

    objc_msgSend(v1, "setNeedsLayout");
    goto LABEL_17;
  }
  v33 = swift_bridgeObjectRelease_n(v26, 2);
LABEL_17:
  v36 = PrivacyType.artwork.getter(v33);
  v37 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_artwork];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_artwork] = v36;
  swift_release(v37);
  v39 = PrivacyType.categories.getter(v38);
  sub_10024496C();
  v40 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_categories];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_categories] = v39;
  swift_bridgeObjectRelease(v40);
  sub_100242DA4();
}

void sub_1000AF6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  char *v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[5];
  _BYTE v28[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_artwork);
  if (v2)
  {
    v3 = qword_1007F1858;
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_artwork));
    if (v3 != -1)
      swift_once(&qword_1007F1858, sub_1002421CC);
    v4 = Artwork.config(using:)(*(double *)&xmmword_100852DA0, *((double *)&xmmword_100852DA0 + 1));
    type metadata accessor for ArtworkLoader(0);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_iconView);
    v6 = type metadata accessor for ArtworkView(0);
    static ArtworkLoader.handlerKey<A>(for:)(v27, v5, v6);
    v7 = swift_allocObject(&unk_1007268D8, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v8 = swift_retain(v7);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v4, 2, 0, v27, sub_1000AFEB8, v7, v8);
    swift_release(v2);
    swift_release(v4);
    swift_release(v7);
    sub_100011088((uint64_t)v27, (uint64_t *)&unk_1007F9850);
    swift_release(v7);
  }
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_categoryViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_categoryViews, v28, 0, 0);
  v10 = *v9;
  if (!((unint64_t)*v9 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v9);
    if (v11)
      goto LABEL_7;
LABEL_22:
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (v10 < 0)
    v25 = *v9;
  else
    v25 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v11 = _CocoaArrayWrapper.endIndex.getter(v25);
  if (!v11)
    goto LABEL_22;
LABEL_7:
  if (v11 >= 1)
  {
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
      else
        v13 = (char *)*(id *)(v10 + 8 * i + 32);
      v14 = v13;
      v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension19PrivacyCategoryView_category];
      if (v15)
      {
        v16 = swift_retain(*(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension19PrivacyCategoryView_category]);
        v17 = PrivacyCategory.artwork.getter(v16);
        swift_release(v15);
        if (qword_1007F18D8 != -1)
          swift_once(&qword_1007F18D8, sub_100285E40);
        v18 = Artwork.config(using:)(*(double *)&xmmword_100852F50, *((double *)&xmmword_100852F50 + 1));
        v26 = *(void **)&v14[OBJC_IVAR____TtC22SubscribePageExtension19PrivacyCategoryView_iconView];
        v19 = v26;
        v20 = type metadata accessor for ArtworkView(0);
        v21 = sub_10000E99C((unint64_t *)&qword_1007F8EB8, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for NSObject);
        v22 = v19;
        AnyHashable.init<A>(_:)(&v26, v20, v21);
        v23 = swift_allocObject(&unk_1007268B0, 24, 7);
        swift_unknownObjectWeakInit(v23 + 16);
        v24 = swift_retain(v23);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v18, 2, 0, v27, sub_1000AFEB0, v23, v24);
        swift_release(v17);
        swift_release(v18);
        swift_release(v23);
        sub_100011088((uint64_t)v27, (uint64_t *)&unk_1007F9850);

        swift_release(v23);
      }
      else
      {

      }
    }
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t sub_1000AFA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void (*v25)(char *, uint64_t, __n128);
  char v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a2;
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Shelf.ContentType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - v15;
  sub_1000194E4(a1, (uint64_t)v9, (uint64_t *)&unk_1007F53A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Shelf.ContentType.privacyFooter(_:), v10);
    v21 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v33, v10, v21);
    dispatch thunk of RawRepresentable.rawValue.getter(&v31, v10, v21);
    v22 = v34;
    v23 = v32;
    if (v33 == v31 && v34 == v32)
    {
      v24 = swift_bridgeObjectRelease_n(v34, 2);
      v25 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
      v25(v13, v10, v24);
      ((void (*)(char *, uint64_t))v25)(v16, v10);
    }
    else
    {
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, v31, v32, 0);
      swift_bridgeObjectRelease(v22);
      v27 = swift_bridgeObjectRelease(v23);
      v28 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
      v28(v13, v10, v27);
      ((void (*)(char *, uint64_t))v28)(v16, v10);
      if ((v26 & 1) == 0)
        goto LABEL_3;
    }
    return 0;
  }
  sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007F53A0);
LABEL_3:
  if (qword_1007F2A08 != -1)
    swift_once(&qword_1007F2A08, sub_10042D104);
  v17 = type metadata accessor for StaticDimension(0);
  v18 = sub_1000117A8(v17, (uint64_t)qword_100856168);
  static Dimensions.defaultRoundingRule.getter(v18);
  v19 = AnyDimension.value(in:rounded:)(v30, v6, v17, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return *(_QWORD *)&v19;
}

void sub_1000AFD14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  _BYTE v15[24];

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_iconView);
  v5 = type metadata accessor for ArtworkView(0);
  v6 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, a2, v5, v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_categoryViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension29PrivacyTypeCollectionViewCell_categoryViews, v15, 0, 0);
  v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v8);
    return;
  }
  if (v8 < 0)
    v14 = v8;
  else
    v14 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    v11 = a2 & 1;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      else
        v12 = (char *)*(id *)(v8 + 8 * v10 + 32);
      v13 = v12;
      ++v10;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(*(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension19PrivacyCategoryView_iconView], v11, v5, v6);

    }
    while (v9 != v10);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1000AFE8C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000AFEB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100287810(a1, a2, a3, a4, v4);
}

void sub_1000AFEB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1000AE724(a1, a2, a3, a4, v4);
}

void sub_1000AFEC4()
{
  qword_100851210 = 0x4020000000000000;
}

uint64_t sub_1000AFED4()
{
  uint64_t result;

  sub_1000117FC();
  result = static UIColor.reviewBackground.getter();
  qword_1007F8ED0 = result;
  return result;
}

char *sub_1000AFF04(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  double left;
  double bottom;
  double right;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension31EditorsChoiceCollectionViewCell_editorsChoiceReviewView;
  v10 = type metadata accessor for EditorsChoiceReviewView();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");
  v13 = &v12[OBJC_IVAR____TtC22SubscribePageExtension31EditorsChoiceCollectionViewCell_itemLayoutContext];
  v14 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);

  v27.receiver = v12;
  v27.super_class = (Class)type metadata accessor for EditorsChoiceCollectionViewCell(0);
  v15 = objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v16 = objc_allocWithZone((Class)UIView);
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = objc_msgSend(v18, "layer");
  if (qword_1007F1078 != -1)
    swift_once(&qword_1007F1078, sub_1000AFEC4);
  objc_msgSend(v19, "setCornerRadius:", *(double *)&qword_100851210);

  if (qword_1007F1080 != -1)
    swift_once(&qword_1007F1080, sub_1000AFED4);
  objc_msgSend(v18, "setBackgroundColor:", qword_1007F8ED0);
  objc_msgSend(v17, "setBackgroundView:", v18);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v23 = objc_msgSend(v17, "contentView");
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v24 = objc_msgSend(v17, "contentView");
  v25 = *(id *)&v17[OBJC_IVAR____TtC22SubscribePageExtension31EditorsChoiceCollectionViewCell_editorsChoiceReviewView];
  objc_msgSend(v24, "addSubview:", v25);

  return v17;
}

id sub_1000B02E8()
{
  char *v0;
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  objc_super v6;

  v1 = (objc_class *)type metadata accessor for EditorsChoiceCollectionViewCell(0);
  v6.receiver = v0;
  v6.super_class = v1;
  objc_msgSendSuper2(&v6, "layoutSubviews");
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");

  v3 = objc_msgSend(v0, "backgroundView");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v4, "setFrame:");

  }
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31EditorsChoiceCollectionViewCell_editorsChoiceReviewView], "setFrame:", LayoutMarginsAware<>.layoutFrame.getter(v1));
}

id sub_1000B05C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorsChoiceCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B0634()
{
  return type metadata accessor for EditorsChoiceCollectionViewCell(0);
}

uint64_t type metadata accessor for EditorsChoiceCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F8F08;
  if (!qword_1007F8F08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditorsChoiceCollectionViewCell);
  return result;
}

void sub_1000B0678(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1000B06F4(void *a1, char a2)
{
  void *v2;
  void *v3;
  char *v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[40];

  v3 = v2;
  objc_allocWithZone((Class)type metadata accessor for PresentationContextViewController());
  v6 = (char *)sub_1000B07C8(a1, a2);
  sub_10050AC30((uint64_t)v9);
  v7 = (uint64_t)&v6[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_flowController];
  swift_beginAccess(&v6[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_flowController], v8, 33, 0);
  sub_1000B1450((uint64_t)v9, v7);
  swift_endAccess(v8);
  *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_actionRunner] = UIResponder.nearestActionRunner.getter();
  objc_msgSend(v3, "presentViewController:animated:completion:", v6, 0, 0, swift_release().n128_f64[0]);

}

id sub_1000B07C8(void *a1, char a2)
{
  _BYTE *v2;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  void *v8;
  _BYTE *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  _QWORD v23[6];
  objc_super v24;

  v5 = OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_contextViewController;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_contextViewController] = 0;
  v2[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_hasPresentedViewController] = 0;
  v6 = &v2[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_flowController];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_actionRunner] = 0;
  v7 = &v2[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_dismissOverride];
  *v7 = 0;
  v7[1] = 0;
  v8 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = a1;
  v9 = v2;
  v10 = a1;

  v9[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_animatedContext] = a2;
  v11 = *(void **)&v2[v5];
  if (v11)
  {
    type metadata accessor for ActivityViewController();
    v12 = (id)swift_dynamicCastClass(v11);
    if (v12)
    {
      v13 = v11;
      v14 = 1;
    }
    else
    {
      v14 = 0;
    }
  }
  else
  {
    v14 = 0;
    v12 = 0;
  }
  v9[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_isPresentingActivityViewController] = v14;

  v24.receiver = v9;
  v24.super_class = (Class)type metadata accessor for PresentationContextViewController();
  v15 = objc_msgSendSuper2(&v24, "initWithNibName:bundle:", 0, 0);
  v16 = v15;
  if (v12)
  {
    v17 = swift_allocObject(&unk_100726950, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    v23[4] = sub_1000B14BC;
    v23[5] = v17;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256;
    v23[2] = sub_1000B0A84;
    v23[3] = &unk_100726968;
    v18 = _Block_copy(v23);
    v19 = v16;
    v12 = v12;
    objc_msgSend(v12, "setCompletionWithItemsHandler:", v18, swift_release().n128_f64[0]);
    _Block_release(v18);

  }
  else
  {
    v20 = v15;
  }
  v21 = v16;
  objc_msgSend(v21, "setModalPresentationStyle:", 5);

  return v21;
}

void sub_1000B09C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char *Strong;
  void *v7;
  void (*v8)(__n128);
  uint64_t v9;
  __n128 v10;
  id v11;
  void *v12;
  _BYTE v13[24];

  v5 = a5 + 16;
  swift_beginAccess(a5 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(void (**)(__n128))&Strong[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_dismissOverride];
    if (v8)
    {
      v9 = *(_QWORD *)&Strong[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_dismissOverride
                            + 8];
      v10 = swift_retain(v9);
      v8(v10);

      sub_100019310((uint64_t)v8, v9);
    }
    else
    {
      v11 = objc_msgSend(Strong, "presentingViewController");
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 0, 0);

      }
    }
  }
}

uint64_t sub_1000B0A84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

void sub_1000B0BDC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for PresentationContextViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

    v4 = objc_msgSend(v0, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setUserInteractionEnabled:", 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000B0D7C(char a1)
{
  char *v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGFloat MinX;
  CGFloat v32;
  CGFloat MinY;
  objc_super v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v34.receiver = v1;
  v34.super_class = (Class)type metadata accessor for PresentationContextViewController();
  objc_msgSendSuper2(&v34, "viewDidAppear:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_contextViewController];
  if (v3)
  {
    v4 = OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_hasPresentedViewController;
    if ((v1[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_hasPresentedViewController] & 1) == 0)
    {
      v5 = v3;
      v6 = objc_msgSend(v5, "popoverPresentationController");
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "sourceView");
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, "window");
          if (v10)
          {
            v11 = v10;
            v12 = objc_msgSend(v9, "superview");
            if (v12)
            {
              v13 = v12;
              objc_msgSend(v9, "frame");
              objc_msgSend(v13, "convertRect:toCoordinateSpace:", v11);
              v15 = v14;
              v17 = v16;
              v19 = v18;
              v21 = v20;

            }
            else
            {
              v19 = 0.0;
              v21 = 0.0;
              v15 = 0.0;
              v17 = 0.0;
            }
            v22 = objc_msgSend(v1, "view");
            objc_msgSend(v7, "setSourceView:", v22);

            objc_msgSend(v7, "sourceRect");
            v24 = v23;
            v26 = v25;
            v28 = v27;
            v30 = v29;
            v35.origin.x = v15;
            v35.origin.y = v17;
            v35.size.width = v19;
            v35.size.height = v21;
            MinX = CGRectGetMinX(v35);
            v36.size.width = v19;
            v32 = MinX;
            v36.origin.x = v15;
            v36.origin.y = v17;
            v36.size.height = v21;
            MinY = CGRectGetMinY(v36);
            v37.origin.x = v24;
            v37.origin.y = v26;
            v37.size.width = v28;
            v37.size.height = v30;
            v38 = CGRectOffset(v37, v32, MinY);
            objc_msgSend(v7, "setSourceRect:", v38.origin.x, v38.origin.y, v38.size.width, v38.size.height);

            v7 = v9;
          }
          else
          {
            v11 = v9;
          }

          v7 = v11;
        }

      }
      objc_msgSend(v1, "presentViewController:animated:completion:", v5, v1[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_animatedContext], 0);

      v1[v4] = 1;
    }
  }
}

void sub_1000B1014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  _BYTE *v11;
  objc_super v12;
  _QWORD aBlock[5];
  _QWORD *v14;

  v7 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_contextViewController];
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_contextViewController] = 0;

  v3[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_hasPresentedViewController] = 0;
  v8 = (_QWORD *)swift_allocObject(&unk_1007269C8, 40, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v3;
  aBlock[4] = sub_1000B1540;
  v14 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_1007269E0;
  v9 = _Block_copy(aBlock);
  v10 = v14;
  sub_100019320(a2, a3);
  v11 = v3;
  swift_release(v10);
  v12.receiver = v11;
  v12.super_class = (Class)type metadata accessor for PresentationContextViewController();
  objc_msgSendSuper2(&v12, "dismissViewControllerWithTransition:completion:", a1, v9);
  _Block_release(v9);
}

void sub_1000B1118(void (*a1)(__n128), uint64_t a2, char *a3)
{
  __n128 v6;
  id v7;
  void (*v8)(__n128);
  uint64_t v9;
  __n128 v10;
  id v11;
  id v12;

  if (a1)
  {
    v6 = swift_retain(a2);
    a1(v6);
    sub_100019310((uint64_t)a1, a2);
  }
  v7 = objc_msgSend(a3, "presentedViewController");

  if (!v7
    && (a3[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_isPresentingActivityViewController] & 1) == 0)
  {
    v8 = *(void (**)(__n128))&a3[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_dismissOverride];
    if (v8)
    {
      v9 = *(_QWORD *)&a3[OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_dismissOverride
                        + 8];
      v10 = swift_retain(v9);
      v8(v10);
      sub_100019310((uint64_t)v8, v9);
    }
    else
    {
      v11 = objc_msgSend(a3, "presentingViewController");
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 0, 0);

      }
    }
  }
}

id sub_1000B12F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PresentationContextViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PresentationContextViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension33PresentationContextViewController);
}

uint64_t sub_1000B13A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_flowController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000B1408(v3, a1);
}

uint64_t sub_1000B13F4()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0
                                + OBJC_IVAR____TtC22SubscribePageExtension33PresentationContextViewController_actionRunner));
}

uint64_t sub_1000B1408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100808370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100808370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1498()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000B14BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1000B09C0(a1, a2, a3, a4, v4);
}

uint64_t sub_1000B14C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000B14D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000B14DC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B1500()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1000B150C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1000B1540()
{
  uint64_t v0;

  sub_1000B1118(*(void (**)(__n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_1000B154C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_100808370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000B1594()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension16SearchController____lazy_storage____searchBar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension16SearchController____lazy_storage____searchBar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension16SearchController____lazy_storage____searchBar);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchBar()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1000B1644()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v7 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v7 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v8 = UIViewController.registerForTraitChanges<A>(_:handler:)(v7, sub_1000B2680, 0, ObjectType);
  swift_unknownObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  v9 = sub_1000B1594();
  v10 = objc_msgSend(v9, "searchTextField");

  v11 = objc_allocWithZone((Class)type metadata accessor for SearchTextInputSourceTextField());
  v12 = sub_100188A78(v10);
  v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_searchTextInput];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_searchTextInput] = v12;

  v14 = sub_1000B1594();
  objc_msgSend(v14, "setDelegate:", v1);

  v15 = sub_1000B1594();
  objc_msgSend(v15, "setNeedsLayout");

  v16 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton];
  sub_1000B1EF8(v17);
  v18 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 0, 1, v18);
  UIButton.configuration.setter(v5);
  objc_msgSend(v16, "setMinimumContentSizeCategory:", UIContentSizeCategoryLarge);
  objc_msgSend(v16, "setMaximumContentSizeCategory:", UIContentSizeCategoryLarge);
  objc_msgSend(v16, "setAlpha:", 0.0);
  v19 = swift_allocObject(&unk_100726A28, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
  v20 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000B26F0, v19);
  objc_msgSend(v16, "addAction:forControlEvents:", v20, 64);

  objc_msgSend(v16, "setPointerInteractionEnabled:", 1);
  v21 = sub_1000B1594();
  objc_msgSend(v21, "_setSearchFieldContainerLayoutCustomizationDelegate:", v1);

  v22 = objc_msgSend(v1, "traitCollection");
  sub_1000B1FC0(v22, 0);

}

void sub_1000B19D0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD v20[4];

  v2 = v1;
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_searchTextInput];
  if (!v8)
  {
    __break(1u);
    return;
  }
  v9 = v8;
  v10 = sub_1001882A8();

  if (v10)
  {
    v11 = objc_msgSend(v2, "searchResultsController");
    if (v11)
    {
      v12 = v11;
      v13 = type metadata accessor for SearchResultsContainerViewController();
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14
                        + OBJC_IVAR____TtC22SubscribePageExtension36SearchResultsContainerViewController_objectGraph);
        swift_retain(v15);

        v16 = UIResponder.nearestActionRunner.getter();
        if (v16)
        {
          v17 = v16;
          v20[3] = sub_100019574(0, &qword_1007F9098, UISearchBar_ptr);
          v20[0] = a1;
          (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v4);
          v18 = a1;
          dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v10, v20, v7, v15);
          v19 = swift_release(v17);
          (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v19);
          sub_1000131E0((uint64_t)v20);
        }
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton], "setEnabled:", 1);
        swift_release(v10);
        swift_release(v15);
        return;
      }

    }
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton], "setEnabled:", 0);
    swift_release(v10);
  }
}

void sub_1000B1E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void))(Strong + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonHandler + 8);
      v7 = *(void **)(Strong + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton);
      sub_100019320(*(_QWORD *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonHandler), v6);
      v8 = v7;
      v5();
      sub_100019310((uint64_t)v5, v6);

      v4 = v8;
    }

  }
}

uint64_t sub_1000B1EF8(uint64_t a1)
{
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  __n128 v4;
  id v5;
  id v6;

  static UIButton.Configuration.plain()(a1);
  v1._countAndFlagsBits = 0x465F484352414553;
  v1._object = (void *)0xEE00535245544C49;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = localizedString(_:comment:)(v1, v2);
  UIButton.Configuration.title.setter(v3._countAndFlagsBits, v3._object);
  v5 = sub_1004853E8(0xD000000000000010, 0x8000000100633730, 0, v4);
  v6 = objc_msgSend(v5, "imageWithRenderingMode:", 2);

  UIButton.Configuration.image.setter(v6);
  UIButton.Configuration.imagePadding.setter(5.0);
  UIButton.Configuration.imagePlacement.setter(8);
  return UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
}

void sub_1000B1FC0(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v13;
  id v14;

  v5 = objc_msgSend(a1, "horizontalSizeClass");
  if (!a2 || v5 != objc_msgSend(a2, "horizontalSizeClass"))
  {
    v6 = objc_msgSend(a1, "horizontalSizeClass");
    v7 = objc_msgSend(a1, "userInterfaceIdiom");
    v8 = sub_1000B1594();
    objc_msgSend(v8, "_additionalPaddingForSearchFieldAtLeadingEdge");
    v10 = v9;

    v11 = 0.0;
    if (v6 == (id)2 && v7 == (id)1)
    {
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton), "sizeThatFits:", 1.79769313e308, 1.79769313e308);
      v11 = v13
          + *(double *)(v2
                      + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonMinimumHorizontalSpace);
    }
    if (v11 != v10)
    {
      v14 = sub_1000B1594();
      objc_msgSend(v14, "_setAdditionalPaddingForSearchFieldAtLeadingEdge:", v11);

    }
  }
}

unint64_t sub_1000B2158()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  objc_super v15;
  unint64_t v16;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SearchController();
  v1 = objc_msgSendSuper2(&v15, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100019574(0, (unint64_t *)&qword_1007F8E40, UIKeyCommand_ptr);
    v4 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:discoverabilityTitle:", v7, 0, "handleCancelKeyCommandWithCommand:", v8);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
  specialized Array._endMutation()(v13);
  return v16;
}

id sub_1000B2348(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  NSString v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_messagesSearchBarVerticalSpace] = 0x4024000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonMinimumHorizontalSpace] = 0x402E000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_searchTextInput] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension16SearchController____lazy_storage____searchBar] = 0;
  v6 = &v3[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton;
  v8 = (void *)objc_opt_self(UIButton);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "buttonWithType:", 1);

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for SearchController();
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v10, a3);

  return v11;
}

id sub_1000B24C8(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_messagesSearchBarVerticalSpace] = 0x4024000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonMinimumHorizontalSpace] = 0x402E000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_searchTextInput] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController____lazy_storage____searchBar] = 0;
  v3 = &v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonHandler];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton;
  v5 = (void *)objc_opt_self(UIButton);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "buttonWithType:", 1);

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for SearchController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_1000B25D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchController()
{
  return objc_opt_self(_TtC22SubscribePageExtension16SearchController);
}

void sub_1000B2680(void *a1, void *a2)
{
  id v3;

  v3 = objc_msgSend(a1, "traitCollection");
  sub_1000B1FC0(v3, a2);

}

uint64_t sub_1000B26CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000B26F0(uint64_t a1)
{
  uint64_t v1;

  sub_1000B1E54(a1, v1);
}

void sub_1000B26F8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  char *v9;
  char *v10;
  id v20;
  id v21;
  _BOOL4 v22;
  void *v23;
  double v24;
  double v25;
  double Height;
  BOOL IsEmpty;
  id v28;
  char v29;
  double MinX;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double MaxX;
  double v37;
  uint64_t v38;
  char *v39;
  id v40;
  id (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  double MinY;
  double v49;
  double v50;
  _QWORD aBlock[5];
  uint64_t v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v10 = v9;
  if (objc_msgSend(v9, "isActive"))
  {
    v20 = objc_msgSend(v9, "traitCollection");
    v21 = objc_msgSend(v20, "horizontalSizeClass");

    v22 = v21 == (id)1;
  }
  else
  {
    v22 = 1;
  }
  v23 = *(void **)&v10[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton];
  objc_msgSend(v23, "sizeThatFits:", 1.79769313e308, 1.79769313e308);
  v49 = v25;
  v50 = v24;
  v53.origin.x = a2;
  v53.origin.y = a3;
  v53.size.width = a4;
  v53.size.height = a5;
  MinY = CGRectGetMinY(v53);
  v54.origin.x = a2;
  v54.origin.y = a3;
  v54.size.width = a4;
  v54.size.height = a5;
  Height = CGRectGetHeight(v54);
  v55.origin.x = a6;
  v55.origin.y = a7;
  v55.size.width = a8;
  v55.size.height = a9;
  IsEmpty = CGRectIsEmpty(v55);
  v28 = objc_msgSend(v10, "traitCollection");
  v29 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if (IsEmpty || v22)
  {
    if ((v29 & 1) != 0)
    {
      v33 = v50;
      if (!a1)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      objc_msgSend(a1, "frame");
      v34 = CGRectGetMaxX(v59)
          + *(double *)&v10[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonMinimumHorizontalSpace]
          + 8.0;
      v35 = 0.0;
    }
    else
    {
      v33 = v50;
      if (!a1)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      objc_msgSend(a1, "frame");
      v34 = CGRectGetMinX(v60)
          - (v50
           + *(double *)&v10[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonMinimumHorizontalSpace]
           + 8.0);
      v35 = 0.0;
    }
LABEL_16:
    v37 = MinY + (Height - v49) * 0.5;
    v38 = swift_allocObject(&unk_100726A50, 64, 7);
    *(_QWORD *)(v38 + 16) = v10;
    *(double *)(v38 + 24) = v34;
    *(double *)(v38 + 32) = v37;
    *(double *)(v38 + 40) = v33;
    *(double *)(v38 + 48) = v49;
    *(double *)(v38 + 56) = v35;
    v39 = v10;
    v40 = objc_msgSend(v23, "superview");

    if (v40)
    {
      objc_msgSend(v23, "setFrame:", v34, v37, v33, v49);
      objc_msgSend(v23, "setAlpha:", v35);
      v41 = 0;
      v42 = 0;
LABEL_20:
      objc_msgSend(v23, "setUserInteractionEnabled:", v35 > 0.0);
      v47 = sub_1000B1594();
      objc_msgSend(v47, "setNeedsLayout");
      swift_release(v38);

      sub_100019310((uint64_t)v41, v42);
      return;
    }
    objc_msgSend(a1, "addSubview:", v23);
    v43 = objc_opt_self(UIView);
    v44 = swift_allocObject(&unk_100726A78, 32, 7);
    v41 = sub_1000B2D5C;
    *(_QWORD *)(v44 + 16) = sub_1000B2D5C;
    *(_QWORD *)(v44 + 24) = v38;
    aBlock[4] = sub_100030368;
    v52 = v44;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100101718;
    aBlock[3] = &unk_100726A90;
    v45 = _Block_copy(aBlock);
    v46 = v52;
    swift_retain(v38);
    swift_retain(v44);
    objc_msgSend((id)v43, "performWithoutAnimation:", v45, swift_release(v46).n128_f64[0]);
    _Block_release(v45);
    LOBYTE(v43) = swift_isEscapingClosureAtFileLocation(v44, "", 99, 240, 44, 1);
    swift_release(v44);
    if ((v43 & 1) == 0)
    {
      v42 = v38;
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_22;
  }
  if ((v29 & 1) != 0)
  {
    v56.origin.x = a6;
    v56.origin.y = a7;
    v56.size.width = a8;
    v56.size.height = a9;
    MinX = CGRectGetMinX(v56);
    if (!a1)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v31 = MinX;
    objc_msgSend(a1, "frame");
    v32 = v31 - CGRectGetMinX(v57);
    objc_msgSend(a1, "frame");
    v33 = v50;
    v34 = CGRectGetMaxX(v58) - v32 - v50;
    v35 = 1.0;
    goto LABEL_16;
  }
  if (a1)
  {
    objc_msgSend(a1, "frame");
    MaxX = CGRectGetMaxX(v61);
    v62.origin.x = a6;
    v62.origin.y = a7;
    v62.size.width = a8;
    v62.size.height = a9;
    v34 = MaxX - CGRectGetMaxX(v62);
    v35 = 1.0;
    v33 = v50;
    goto LABEL_16;
  }
LABEL_25:
  __break(1u);
}

void sub_1000B2B84()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;

  v1 = v0;
  v11 = objc_msgSend(v0, "searchBar");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton], "setEnabled:", 0);
  v2 = objc_msgSend(v0, "delegate");
  if (v2)
  {
    v4 = v2;
    ObjectType = swift_getObjectType(v2, v3);
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchControllerDelegate);
    if (v6)
      v8 = v6;
    else
      v8 = 0;
    if (v6)
      v9 = v4;
    else
      v9 = 0;
    if (v9)
    {
      v10 = swift_getObjectType(v9, v7);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v8);
    }
    swift_unknownObjectRelease(v4);
  }
  objc_msgSend(v1, "setActive:", 0);

}

id sub_1000B2C5C(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_messagesSearchBarVerticalSpace] = 0x4024000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonMinimumHorizontalSpace] = 0x402E000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_searchTextInput] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController____lazy_storage____searchBar] = 0;
  v3 = &v1[OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButtonHandler];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton;
  v5 = (void *)objc_opt_self(UIButton);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "buttonWithType:", 1);

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for SearchController();
  return objc_msgSendSuper2(&v8, "initWithSearchResultsController:", a1);
}

uint64_t sub_1000B2D38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_1000B2D5C()
{
  uint64_t v0;
  double v1;
  void *v2;

  v1 = *(double *)(v0 + 56);
  v2 = *(void **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC22SubscribePageExtension16SearchController_filterButton);
  objc_msgSend(v2, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  return objc_msgSend(v2, "setAlpha:", v1);
}

uint64_t sub_1000B2DB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B2DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000B2DD8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for CardHeaderButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F9158;
  if (!qword_1007F9158)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CardHeaderButton);
  return result;
}

uint64_t sub_1000B2E1C(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = &unk_100673BC8;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = &unk_100673BE0;
  return swift_initClassMetadata2(a1, 0, 6, v2, a1 + qword_100851220);
}

uint64_t sub_1000B2E80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10015945C(*a1, *a2);
}

Swift::Int sub_1000B2E8C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE500000000000000;
  v3 = 0x746867696CLL;
  if (v1 != 1)
  {
    v3 = 1802658148;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6974616D6F747561;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE900000000000063;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1000B2F24(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE500000000000000;
  v3 = 0x746867696CLL;
  if (*v1 != 1)
  {
    v3 = 1802658148;
    v2 = 0xE400000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6974616D6F747561;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE900000000000063;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000B2F98(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE500000000000000;
  v4 = 0x746867696CLL;
  if (v2 != 1)
  {
    v4 = 1802658148;
    v3 = 0xE400000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x6974616D6F747561;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE900000000000063;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1000B302C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1000B4084(*a1);
  *a2 = result;
  return result;
}

void sub_1000B3058(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000063;
  v4 = 0xE500000000000000;
  v5 = 0x746867696CLL;
  if (v2 != 1)
  {
    v5 = 1802658148;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6974616D6F747561;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

id sub_1000B30B0(uint64_t a1)
{
  return sub_1000B30D0(a1, 14, &qword_1007F9100);
}

id sub_1000B30C0(uint64_t a1)
{
  return sub_1000B30D0(a1, 20, &qword_1007F9108);
}

id sub_1000B30D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", a2);
  *a3 = result;
  return result;
}

id sub_1000B3118()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 7, 2, 15.0);
  qword_1007F9110 = (uint64_t)result;
  return result;
}

uint64_t sub_1000B315C(uint64_t a1)
{
  return sub_1000B3184(a1, (unsigned int *)&enum case for SystemImage.xmark(_:), &qword_1007F9118);
}

uint64_t sub_1000B3170(uint64_t a1)
{
  return sub_1000B3184(a1, &enum case for SystemImage.chevronBackward(_:), &qword_1007F9120);
}

uint64_t sub_1000B3184(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v5 = type metadata accessor for SystemImage(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a2, v5);
  v9 = static SystemImage.load(_:with:)(v8, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a3 = v9;
  return result;
}

void sub_1000B3228(uint64_t a1, unsigned __int8 a2)
{
  sub_1000B324C(a2);
}

void sub_1000B324C(unsigned __int8 a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v2 = 0xE900000000000063;
  v3 = 0x6974616D6F747561;
  v4 = qword_1007F9128;
  v5 = v1[qword_1007F9128];
  v1[qword_1007F9128] = a1;
  v6 = a1;
  if (a1)
  {
    if (a1 == 1)
      v7 = 0x746867696CLL;
    else
      v7 = 1802658148;
    if (v6 == 1)
      v8 = 0xE500000000000000;
    else
      v8 = 0xE400000000000000;
    if (!v5)
    {
LABEL_13:
      if (v7 != v3)
        goto LABEL_18;
      goto LABEL_16;
    }
  }
  else
  {
    v7 = 0x6974616D6F747561;
    v8 = 0xE900000000000063;
    if (!v5)
      goto LABEL_13;
  }
  if (v5 == 1)
  {
    v2 = 0xE500000000000000;
    v3 = 0x746867696CLL;
    goto LABEL_13;
  }
  v2 = 0xE400000000000000;
  v3 = 1802658148;
  if (v7 != 1802658148)
    goto LABEL_18;
LABEL_16:
  if (v8 == v2)
  {
    swift_bridgeObjectRelease_n(v8, 2);
    return;
  }
LABEL_18:
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v2, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v2);
  if ((v9 & 1) == 0)
  {
    sub_1000B397C(v1[v4]);
    objc_msgSend(v1, "setNeedsDisplay");
  }
}

char *sub_1000B3390(char a1)
{
  _BYTE *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  _BYTE *v8;
  id v9;
  id v10;
  id v11;
  objc_class *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  double left;
  double bottom;
  double right;
  uint64_t v41;
  void *v42;
  char *v43;
  Swift::String v44;
  Swift::String v45;
  void *object;
  NSString v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;

  v2 = a1 & 1;
  v3 = type metadata accessor for AutomationSemantics(0);
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[qword_1007F9128] = 0;
  v6 = qword_1007F9130;
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, "secondaryLabelColor");
  v9 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  *(_QWORD *)&v8[qword_1007F9138] = v9;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  *(_QWORD *)&v8[qword_1007F9140] = v10;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v8[qword_1007F9148] = v11;
  v8[qword_1007F9150] = v2;

  v12 = (objc_class *)type metadata accessor for CardHeaderButton(0);
  v52.receiver = v8;
  v52.super_class = v12;
  v13 = (char *)objc_msgSendSuper2(&v52, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = qword_1007F9138;
  v15 = *(void **)&v13[qword_1007F9138];
  v16 = v13;
  objc_msgSend(v15, "setClipsToBounds:", 1);
  v17 = objc_msgSend(v15, "layer");
  objc_msgSend(v17, "setCornerRadius:", 15.0);

  v18 = *(void **)&v13[v14];
  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  objc_msgSend(v18, "setFrame:", 0.0, 0.0, 30.0, 30.0);
  v19 = v16;
  v20 = v18;
  v21 = objc_msgSend(v19, "imageView");
  objc_msgSend(v19, "insertSubview:below:", v20, v21);

  v22 = qword_1007F9140;
  v23 = *(void **)&v19[qword_1007F9140];
  objc_msgSend(v23, "setFrame:", 0.0, 0.0, 30.0, 30.0);
  v24 = objc_msgSend(*(id *)&v13[v14], "contentView");
  objc_msgSend(v24, "addSubview:", v23);

  v25 = qword_1007F9148;
  v26 = *(void **)&v19[qword_1007F9148];
  v27 = qword_1007F9150;
  if (v19[qword_1007F9150] == 1)
  {
    v28 = qword_1007F10A8;
    v29 = v26;
    if (v28 != -1)
      swift_once(&qword_1007F10A8, sub_1000B3170);
    v30 = &qword_1007F9120;
  }
  else
  {
    v31 = qword_1007F10A0;
    v32 = v26;
    if (v31 != -1)
      swift_once(&qword_1007F10A0, sub_1000B315C);
    v30 = &qword_1007F9118;
  }
  objc_msgSend(v26, "setImage:", *v30, v50, v51);

  v33 = *(void **)&v19[v25];
  objc_msgSend(v33, "setContentMode:", 4);
  v34 = qword_1007F1098;
  v35 = v33;
  if (v34 != -1)
    swift_once(&qword_1007F1098, sub_1000B3118);
  objc_msgSend(v35, "setPreferredSymbolConfiguration:", qword_1007F9110);

  v36 = *(void **)&v19[v25];
  objc_msgSend(v36, "setFrame:", 0.0, 0.0, 30.0, 30.0);
  v37 = objc_msgSend(*(id *)&v19[v22], "contentView");
  objc_msgSend(v37, "addSubview:", v36);

  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v19, "setContentEdgeInsets:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v19, "setTitleEdgeInsets:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v19, "setImageEdgeInsets:", UIEdgeInsetsZero.top, left, bottom, right);
  if (v19[v27])
    v41 = 0x55425F45534F4C43;
  else
    v41 = 0x5455425F4B434142;
  if (v19[v27])
    v42 = (void *)0xEC0000004E4F5454;
  else
    v42 = (void *)0xEB000000004E4F54;
  v43 = v19;
  v44._countAndFlagsBits = v41;
  v44._object = v42;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v44, v45)._object;
  swift_bridgeObjectRelease(v42);
  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "setAccessibilityLabel:", v47, swift_bridgeObjectRelease(object).n128_f64[0]);

  v48 = v43;
  static AutomationSemantics.dismissButton()();
  UIView.setAutomationSemantics(_:)(v5);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v51);
  sub_1000B397C(v48[qword_1007F9128]);

  return v48;
}

double sub_1000B38DC()
{
  return 30.0;
}

id sub_1000B38E8(void *a1)
{
  return objc_msgSend(a1, "intrinsicContentSize");
}

id sub_1000B38F4(char a1)
{
  void *v1;
  id v3;
  id v4;

  if (a1)
  {
    if (a1 == 1)
      return 0;
  }
  else
  {
    v3 = objc_msgSend(v1, "traitCollection");
    v4 = objc_msgSend(v3, "userInterfaceStyle");

    if (v4 == (id)2)
      return 0;
  }
  return objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
}

void sub_1000B397C(char a1)
{
  char *v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v3 = (void *)sub_1000B3DF8(a1);
  v4 = *(void **)&v1[qword_1007F9138];
  v12 = v3;
  objc_msgSend(v4, "setEffect:");
  v5 = sub_1000B38F4(a1);
  objc_msgSend(v1, "setTintColor:", v5);

  if (!a1)
  {
    v7 = objc_msgSend(v1, "traitCollection");
    v8 = objc_msgSend(v7, "userInterfaceStyle");

    if (v8 == (id)2)
      goto LABEL_3;
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  if (a1 != 1)
    goto LABEL_5;
LABEL_3:
  v6 = 4;
LABEL_6:
  v9 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v12, v6);
  v10 = *(void **)&v1[qword_1007F9140];
  v11 = v9;
  objc_msgSend(v10, "setEffect:", v11);

}

void sub_1000B3AA4(void *a1)
{
  _BYTE *v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for CardHeaderButton(0);
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "_dynamicUserInterfaceTraitDidChange");
  sub_1000B397C(v1[qword_1007F9128]);

}

void sub_1000B3B08()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.CardHeaderButton", 39, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_1000B3B34()
{
  uint64_t v0;

}

id sub_1000B3B80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardHeaderButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1000B3BB4(uint64_t a1)
{

}

uint64_t sub_1000B3C0C()
{
  return type metadata accessor for CardHeaderButton(0);
}

uint64_t storeEnumTagSinglePayload for CardHeaderButton.Icon(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000B3C60 + 4 * byte_100673B75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000B3C94 + 4 * asc_100673B70[v4]))();
}

uint64_t sub_1000B3C94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B3C9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B3CA4);
  return result;
}

uint64_t sub_1000B3CB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B3CB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000B3CBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B3CC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardHeaderButton.Icon()
{
  return &type metadata for CardHeaderButton.Icon;
}

uint64_t storeEnumTagSinglePayload for CardHeaderButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000B3D2C + 4 * byte_100673B7F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000B3D60 + 4 * byte_100673B7A[v4]))();
}

uint64_t sub_1000B3D60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B3D68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B3D70);
  return result;
}

uint64_t sub_1000B3D7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B3D84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000B3D88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B3D90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardHeaderButton.Style()
{
  return &type metadata for CardHeaderButton.Style;
}

unint64_t sub_1000B3DB4()
{
  unint64_t result;

  result = qword_1007F91A8;
  if (!qword_1007F91A8)
  {
    result = swift_getWitnessTable(&unk_100673CBC, &type metadata for CardHeaderButton.Icon);
    atomic_store(result, (unint64_t *)&qword_1007F91A8);
  }
  return result;
}

uint64_t sub_1000B3DF8(char a1)
{
  void *v1;
  uint64_t *v2;
  id v3;
  id v4;

  if (a1)
  {
    if (a1 == 1)
    {
LABEL_3:
      if (qword_1007F1088 != -1)
        swift_once(&qword_1007F1088, sub_1000B30B0);
      v2 = &qword_1007F9100;
      return *v2;
    }
  }
  else
  {
    v3 = objc_msgSend(v1, "traitCollection");
    v4 = objc_msgSend(v3, "userInterfaceStyle");

    if (v4 == (id)2)
      goto LABEL_3;
  }
  if (qword_1007F1090 != -1)
    swift_once(&qword_1007F1090, sub_1000B30C0);
  v2 = &qword_1007F9108;
  return *v2;
}

uint64_t sub_1000B3EC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t v13;
  Swift::String v14;
  void *object;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;

  v2 = type metadata accessor for TodayCard.Style(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v17 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v17 - v7, a1, v2);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  if (v10 == enum case for TodayCard.Style.automatic(_:))
  {
    v11 = 0;
  }
  else if (v10 == enum case for TodayCard.Style.white(_:))
  {
    v11 = 2;
  }
  else
  {
    if (v10 != enum case for TodayCard.Style.dark(_:) && v10 != enum case for TodayCard.Style.light(_:))
    {
      v9(v6, a1, v2);
      v17 = 0;
      v18 = 0xE000000000000000;
      _StringGuts.grow(_:)(44);
      v13 = swift_bridgeObjectRelease(v18);
      v17 = 0xD00000000000002ALL;
      v18 = 0x80000001006337F0;
      v14._countAndFlagsBits = TodayCard.Style.rawValue.getter(v13);
      object = v14._object;
      String.append(_:)(v14);
      swift_bridgeObjectRelease(object);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "SubscribePageExtension/CardHeaderButton.swift", 45, 2, 58, 0);
      __break(1u);
      return result;
    }
    v11 = 1;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v11;
}

unint64_t sub_1000B4084(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100720EE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1000B40CC(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  __int128 v24;
  void *v25;
  void *v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2840 != -1)
    swift_once(&qword_1007F2840, sub_100417570);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_100855DA8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v23(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v31 = v9;
  v32 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v30);
  v28 = v1;
  v29 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v27);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v27, 12.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v23(v4, v6, v5);
  v8(v4, v7, v1);
  v28 = v9;
  v29 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v27);
  v25 = (void *)v1;
  v26 = &protocol witness table for FontSource;
  v13 = sub_1000117C0(&v24);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v24, 12.0);
  v12(v4, v1);
  v25 = &type metadata for Double;
  v26 = &protocol witness table for Double;
  *(_QWORD *)&v24 = 0x4018000000000000;
  v14 = static UIEdgeInsets.horizontal(left:right:)(0.0, 0.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100010F3C(&v30, (uint64_t)&unk_100851230);
  sub_100010F3C(&v27, (uint64_t)&unk_100851258);
  result = sub_100010F3C(&v24, (uint64_t)&unk_100851280);
  qword_1008512A8 = 0;
  unk_1008512B0 = 0;
  qword_1008512B8 = *(_QWORD *)&v14;
  unk_1008512C0 = v16;
  qword_1008512C8 = v18;
  unk_1008512D0 = v20;
  return result;
}

uint64_t sub_1000B432C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  __int128 v24;
  void *v25;
  void *v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2860 != -1)
    swift_once(&qword_1007F2860, sub_1004175D4);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_100855E08);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v23(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v31 = v9;
  v32 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v30);
  v28 = v1;
  v29 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v27);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v27, 17.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v23(v4, v6, v5);
  v8(v4, v7, v1);
  v28 = v9;
  v29 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v27);
  v25 = (void *)v1;
  v26 = &protocol witness table for FontSource;
  v13 = sub_1000117C0(&v24);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v24, 7.0);
  v12(v4, v1);
  v25 = &type metadata for Double;
  v26 = &protocol witness table for Double;
  *(_QWORD *)&v24 = 0x4018000000000000;
  v14 = static UIEdgeInsets.horizontal(left:right:)(10.0, 10.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100010F3C(&v30, (uint64_t)&unk_1008512D8);
  sub_100010F3C(&v27, (uint64_t)&unk_100851300);
  result = sub_100010F3C(&v24, (uint64_t)&unk_100851328);
  qword_100851350 = 0;
  unk_100851358 = 0;
  qword_100851360 = *(_QWORD *)&v14;
  unk_100851368 = v16;
  qword_100851370 = v18;
  unk_100851378 = v20;
  return result;
}

uint64_t sub_1000B458C(__n128 a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  void *v11;
  void *v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  __int128 v16[2];

  if (qword_1007F1A68 != -1)
    swift_once(&qword_1007F1A68, sub_1002B00AC);
  v1 = type metadata accessor for FlowcaseItemLayout.Metrics(0, a1);
  sub_1000117A8(v1, (uint64_t)qword_1008537B0);
  FlowcaseItemLayout.Metrics.captionSpace.getter(v16);
  v14 = type metadata accessor for ZeroDimension(0);
  v15 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v13);
  static ZeroDimension.zero.getter();
  v11 = &type metadata for Double;
  v12 = &protocol witness table for Double;
  *(_QWORD *)&v10 = 0x4018000000000000;
  v2 = static UIEdgeInsets.horizontal(left:right:)(0.0, 0.0);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_100010F3C(v16, (uint64_t)&unk_100851380);
  sub_100010F3C(&v13, (uint64_t)&unk_1008513A8);
  result = sub_100010F3C(&v10, (uint64_t)&unk_1008513D0);
  qword_1008513F8 = 0;
  unk_100851400 = 0;
  qword_100851408 = *(_QWORD *)&v2;
  unk_100851410 = v4;
  qword_100851418 = v6;
  unk_100851420 = v8;
  return result;
}

double sub_1000B4698(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double result;
  void (*v15)(char *, uint64_t, uint64_t);
  _QWORD v16[5];
  __int128 v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  uint64_t v21;
  void *v22;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2698 != -1)
    swift_once(&qword_1007F2698, sub_100416DB0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_1008558B0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v15(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v21 = v9;
  v22 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v20);
  v18 = v1;
  v19 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v17);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v17, 15.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v15(v4, v6, v5);
  v8(v4, v7, v1);
  v18 = v9;
  v19 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v17);
  v16[3] = v1;
  v16[4] = &protocol witness table for FontSource;
  v13 = sub_1000117C0(v16);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(v16, 4.0);
  v12(v4, v1);
  qword_100851490 = (uint64_t)&type metadata for Double;
  unk_100851498 = &protocol witness table for Double;
  qword_100851478 = 0x4018000000000000;
  sub_100010F3C(&v20, (uint64_t)&unk_100851428);
  sub_100010F3C(&v17, (uint64_t)&unk_100851450);
  qword_1008514A0 = 0;
  unk_1008514A8 = 0;
  unk_1008514B0 = xmmword_100673D10;
  result = 6.0;
  unk_1008514C0 = xmmword_100673D20;
  return result;
}

double sub_1000B48D0(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double result;
  void (*v15)(char *, uint64_t, uint64_t);
  _QWORD v16[5];
  __int128 v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  uint64_t v21;
  void *v22;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2698 != -1)
    swift_once(&qword_1007F2698, sub_100416DB0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_1008558B0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v15(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v21 = v9;
  v22 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v20);
  v18 = v1;
  v19 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v17);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v17, 7.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v15(v4, v6, v5);
  v8(v4, v7, v1);
  v18 = v9;
  v19 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v17);
  v16[3] = v1;
  v16[4] = &protocol witness table for FontSource;
  v13 = sub_1000117C0(v16);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(v16, 4.0);
  v12(v4, v1);
  qword_100851538 = (uint64_t)&type metadata for Double;
  unk_100851540 = &protocol witness table for Double;
  qword_100851520 = 0x4018000000000000;
  sub_100010F3C(&v20, (uint64_t)&unk_1008514D0);
  sub_100010F3C(&v17, (uint64_t)&unk_1008514F8);
  qword_100851548 = 0;
  unk_100851550 = 0;
  unk_100851558 = xmmword_100673D30;
  result = 3.0;
  unk_100851568 = xmmword_100673D40;
  return result;
}

double sub_1000B4B08(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double result;
  void (*v15)(char *, uint64_t, uint64_t);
  _QWORD v16[5];
  __int128 v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  uint64_t v21;
  void *v22;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2698 != -1)
    swift_once(&qword_1007F2698, sub_100416DB0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_1008558B0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v15(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v21 = v9;
  v22 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v20);
  v18 = v1;
  v19 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v17);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v17, 15.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v15(v4, v6, v5);
  v8(v4, v7, v1);
  v18 = v9;
  v19 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v17);
  v16[3] = v1;
  v16[4] = &protocol witness table for FontSource;
  v13 = sub_1000117C0(v16);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(v16, 4.0);
  v12(v4, v1);
  qword_1008515E0 = (uint64_t)&type metadata for Double;
  unk_1008515E8 = &protocol witness table for Double;
  qword_1008515C8 = 0x4018000000000000;
  sub_100010F3C(&v20, (uint64_t)&unk_100851578);
  sub_100010F3C(&v17, (uint64_t)&unk_1008515A0);
  qword_1008515F0 = 0;
  unk_1008515F8 = 0;
  unk_100851600 = xmmword_100673D50;
  result = 7.0;
  unk_100851610 = xmmword_100673D30;
  return result;
}

uint64_t sub_1000B4D40(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  __int128 v24;
  void *v25;
  void *v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2698 != -1)
    swift_once(&qword_1007F2698, sub_100416DB0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_1008558B0);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v23(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v31 = v9;
  v32 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v30);
  v28 = v1;
  v29 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v27);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v27, 20.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v23(v4, v6, v5);
  v8(v4, v7, v1);
  v28 = v9;
  v29 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v27);
  v25 = (void *)v1;
  v26 = &protocol witness table for FontSource;
  v13 = sub_1000117C0(&v24);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v24, 8.0);
  v12(v4, v1);
  v25 = &type metadata for Double;
  v26 = &protocol witness table for Double;
  *(_QWORD *)&v24 = 0x4018000000000000;
  v14 = static UIEdgeInsets.horizontal(left:right:)(4.0, 10.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100010F3C(&v30, (uint64_t)&unk_100851620);
  sub_100010F3C(&v27, (uint64_t)&unk_100851648);
  result = sub_100010F3C(&v24, (uint64_t)&unk_100851670);
  qword_100851698 = 0;
  unk_1008516A0 = 0;
  qword_1008516A8 = *(_QWORD *)&v14;
  unk_1008516B0 = v16;
  qword_1008516B8 = v18;
  unk_1008516C0 = v20;
  return result;
}

uint64_t sub_1000B4FA0(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  __int128 v24;
  void *v25;
  void *v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2698 != -1)
    swift_once(&qword_1007F2698, sub_100416DB0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_1008558B0);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v23(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = type metadata accessor for StaticDimension(0);
  v31 = v9;
  v32 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v30);
  v28 = v1;
  v29 = &protocol witness table for FontSource;
  v10 = sub_1000117C0(&v27);
  v11 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v11(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v27, 9.0);
  v12 = (void (*)(char *, uint64_t))v2[1];
  v12(v4, v1);
  v23(v4, v6, v5);
  v8(v4, v7, v1);
  v28 = v9;
  v29 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v27);
  v25 = (void *)v1;
  v26 = &protocol witness table for FontSource;
  v13 = sub_1000117C0(&v24);
  v11(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v24, 8.0);
  v12(v4, v1);
  v25 = &type metadata for Double;
  v26 = &protocol witness table for Double;
  *(_QWORD *)&v24 = 0x4018000000000000;
  v14 = static UIEdgeInsets.horizontal(left:right:)(0.0, 10.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100010F3C(&v30, (uint64_t)&unk_1008516C8);
  sub_100010F3C(&v27, (uint64_t)&unk_1008516F0);
  result = sub_100010F3C(&v24, (uint64_t)&unk_100851718);
  qword_100851740 = 0;
  unk_100851748 = 0;
  qword_100851750 = *(_QWORD *)&v14;
  unk_100851758 = v16;
  qword_100851760 = v18;
  unk_100851768 = v20;
  return result;
}

uint64_t sub_1000B5200(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_1007F91B0);
  sub_1000117A8(v5, (uint64_t)qword_1007F91B0);
  if (qword_1007F2840 != -1)
    swift_once(&qword_1007F2840, sub_100417570);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855DA8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 9.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_1000B534C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  qword_1007F91C8 = (uint64_t)result;
  return result;
}

void sub_1000B5384()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.2);

  qword_1007F91D0 = (uint64_t)v1;
}

id sub_1000B53EC(uint64_t a1)
{
  return sub_1000B30D0(a1, 14, &qword_1007F91D8);
}

id sub_1000B53FC(uint64_t a1)
{
  return sub_1000B30D0(a1, 20, &qword_1007F91E0);
}

char *sub_1000B540C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  double left;
  double bottom;
  double right;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v38;
  objc_class *ObjectType;
  objc_super v40;
  _OWORD v41[2];
  _OWORD v42[2];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DirectionalTextAlignment(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_delegate];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit(v21);
  v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView] = 0;
  v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_style] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_backgroundView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter] = 0;
  v22 = qword_1007F2840;
  v23 = v5;
  if (v22 != -1)
    swift_once(&qword_1007F2840, sub_100417570);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100855DA8);
  v26 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v20, v25, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DirectionalTextAlignment.none(_:), v14);
  v27 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v23[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v20, 1, 0, 1, 0, v17, 0, 0);
  memset(v42, 0, sizeof(v42));
  memset(v41, 0, sizeof(v41));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6562614C74786574, 0xE90000000000006CLL, v42, v41);
  sub_100011088((uint64_t)v41, &qword_1007F6E90);
  sub_100011088((uint64_t)v42, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

  v40.receiver = v23;
  v40.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v32 = (char *)v28;
  objc_msgSend(v32, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v32, "setClipsToBounds:", 0);
  v33 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel;
  v34 = *(void **)&v32[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v35 = v34;
  v36 = (void *)static UIColor.appTint.getter();
  objc_msgSend(v35, "setTextColor:", v36);

  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v32[v33]);
  return v32;
}

id sub_1000B580C()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1000B5850();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_1000B5850()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  void **v6;
  void *v7;
  id v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE v17[24];
  char v18[24];
  char v19[24];

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter, v19, 0, 0);
  v2 = *v1;
  if (v2)
  {
    v3 = OBJC_IVAR____TtC22SubscribePageExtension30AppEventFormattedDatePresenter_updateTimer;
    v4 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30AppEventFormattedDatePresenter_updateTimer);
    if (v4)
    {
      objc_msgSend(v4, "invalidate", swift_retain(v2).n128_f64[0]);
      v4 = *(void **)(v2 + v3);
    }
    else
    {
      swift_retain(v2);
    }
    *(_QWORD *)(v2 + v3) = 0;
    swift_release(v2);

  }
  v5 = *(char **)(v0
                + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator);
  if (v5)
  {
    v6 = (void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView);
    swift_beginAccess(v6, v18, 0, 0);
    v7 = *v6;
    if (*v6)
    {
      swift_beginAccess(&v5[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v17, 33, 0);
      v8 = v7;
      v9 = v5;
      v10 = (void *)sub_1000B8CF0(v8);
      swift_endAccess(v17);

    }
    else
    {
      v11 = v5;
    }
    v12 = (uint64_t *)&v5[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v17, 0, 0);
    v13 = *v12;
    if ((v13 & 0xC000000000000001) != 0)
    {
      if (v13 < 0)
        v14 = v13;
      else
        v14 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v16 = __CocoaSet.count.getter(v14, v15);
      swift_bridgeObjectRelease(v13);
      if (v16)
        goto LABEL_16;
    }
    else if (*(_QWORD *)(v13 + 16))
    {
      goto LABEL_16;
    }
    sub_10016D7B0();
LABEL_16:

  }
}

id sub_1000B5AD8(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  NSString v13;

  v5 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  result = objc_msgSend(v5, "text");
  if (!result)
  {
    if (!a2)
      return result;
    goto LABEL_10;
  }
  v7 = result;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v10 = v9;

  if (!a2)
  {
    v13 = 0;
    a2 = v10;
    goto LABEL_12;
  }
  if (v8 != a1 || v10 != a2)
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, a1, a2, 0);
    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) != 0)
      return (id)swift_bridgeObjectRelease(a2);
LABEL_10:
    v13 = String._bridgeToObjectiveC()();
LABEL_12:
    swift_bridgeObjectRelease(a2);
    objc_msgSend(v5, "setText:", v13);

    return objc_msgSend(v2, "setNeedsLayout");
  }
  swift_bridgeObjectRelease(a2);
  return (id)swift_bridgeObjectRelease(v10);
}

id sub_1000B5C14(id result)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  id *v7;
  double v8;
  int v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  void *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char v22[24];
  _BYTE v23[24];
  char v24[24];

  v2 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator;
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator] != (result & 1))
  {
    v3 = v1;
    if (v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator])
    {
      v4 = &v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView];
      swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView], v22, 0, 0);
      if (!*v4)
      {
        v5 = type metadata accessor for RoundedCornerView(0);
        v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
        sub_1000B9A84(v6);

      }
    }
    v7 = (id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView];
    *(_QWORD *)&v8 = swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView], v24, 0, 0).n128_u64[0];
    if (*v7)
      objc_msgSend(*v7, "setHidden:", (v3[v2] & 1) == 0, v8);
    v9 = v3[v2];
    v10 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator];
    if (v9 == 1)
    {
      if (v10)
      {
        v11 = *v7;
        v10 = v10;
        v12 = v11;
        sub_10016D374(v11);
        goto LABEL_20;
      }
    }
    else if (v10)
    {
      v12 = *v7;
      if (*v7)
      {
        swift_beginAccess(&v10[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v23, 33, 0);
        v13 = v12;
        v14 = v10;
        v15 = (void *)sub_1000B8CF0(v13);
        swift_endAccess(v23);

      }
      else
      {
        v16 = v10;
      }
      v17 = (uint64_t *)&v10[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews];
      swift_beginAccess(&v10[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v23, 0, 0);
      v18 = *v17;
      if ((v18 & 0xC000000000000001) != 0)
      {
        if (v18 < 0)
          v19 = v18;
        else
          v19 = v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v21 = __CocoaSet.count.getter(v19, v20);
        swift_bridgeObjectRelease(v18);
        if (v21)
          goto LABEL_20;
      }
      else if (*(_QWORD *)(v18 + 16))
      {
        goto LABEL_20;
      }
      sub_10016D7B0();
LABEL_20:

    }
    return objc_msgSend(v3, "setNeedsLayout", v8);
  }
  return result;
}

void sub_1000B5E18(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = type metadata accessor for CornerStyle(0);
  __chkstk_darwin(v4);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v5);
  v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_style);
  if ((_DWORD)v6 != a1)
    __asm { BR              X10 }
}

void sub_1000B68DC()
{
  _BYTE *v0;
  id v1;
  id v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _BOOL4 v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;

  if (v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_style] != 1)
    return;
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  if (v2 == (id)2)
  {
    if (qword_1007F1110 != -1)
      swift_once(&qword_1007F1110, sub_1000B53FC);
    v3 = &qword_1007F91E0;
  }
  else
  {
    if (qword_1007F1108 != -1)
      swift_once(&qword_1007F1108, sub_1000B53EC);
    v3 = &qword_1007F91D8;
  }
  v4 = (void *)*v3;
  v5 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView;
  v6 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView];
  if (!v6)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v4);
    v14 = *(void **)&v0[v5];
    if (v14)
    {
      objc_msgSend(v14, "removeFromSuperview");
      v15 = *(void **)&v0[v5];
    }
    else
    {
      v15 = 0;
    }
    *(_QWORD *)&v0[v5] = v13;
    v19 = v13;

    v20 = *(_QWORD *)&v0[v5];
    if (v20)
      objc_msgSend(v0, "insertSubview:atIndex:", v20, 0);

    v7 = *(void **)&v0[v5];
    if (!v7)
      goto LABEL_13;
    goto LABEL_12;
  }
  objc_msgSend(v6, "setEffect:", v4);
  v7 = *(void **)&v0[v5];
  if (v7)
LABEL_12:
    objc_msgSend(v7, "setHidden:", 0);
LABEL_13:
  v8 = objc_msgSend(v0, "traitCollection");
  v9 = objc_msgSend(v8, "userInterfaceStyle") != (id)2;

  v10 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v4, 4 * v9);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView;
  v12 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView];
  if (v12)
  {
    objc_msgSend(v12, "setEffect:", v10);
  }
  else
  {
    v16 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v10);
    v17 = *(void **)&v0[v11];
    if (v17)
    {
      objc_msgSend(v17, "removeFromSuperview");
      v18 = *(void **)&v0[v11];
    }
    else
    {
      v18 = 0;
    }
    *(_QWORD *)&v0[v11] = v16;
    v21 = v16;

    sub_1000B7084();
  }
  v22 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  v23 = objc_msgSend(v0, "traitCollection");
  v24 = objc_msgSend(v23, "userInterfaceStyle");

  if (v24 == (id)2)
    v25 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  else
    v25 = 0;
  v26 = v25;
  objc_msgSend(v22, "setTextColor:");

}

void sub_1000B6C08()
{
  uint64_t v1;

  v1 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v1);
  __asm { BR              X10 }
}

void sub_1000B6C80()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  Class isa;
  id v6;
  void *v7;
  id v8;
  id v9;

  if (qword_1007F2698 != -1)
    swift_once(&qword_1007F2698, sub_100416DB0);
  v2 = type metadata accessor for FontUseCase(0);
  v3 = sub_1000117A8(v2, (uint64_t)qword_1008558B0);
  v4 = objc_msgSend(v0, "traitCollection");
  isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v4).super.isa;

  v6 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);
  v7 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  if (v6)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v6, 0.0);
    *(_QWORD *)(v1 - 56) = v8;
    objc_msgSend(v7, "setFont:", v8);

  }
  else
  {
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    v9 = objc_msgSend(v0, "traitCollection");
    *(_QWORD *)(v1 - 56) = static UIFont.preferredFont(forUseWith:compatibleWith:)(v3, v9);

    objc_msgSend(v7, "setFont:", *(_QWORD *)(v1 - 56));
  }

}

void sub_1000B7084()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView];
  if (v1)
  {
    v5 = v1;
    v2 = objc_msgSend(v5, "contentView");
    objc_msgSend(v2, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel]);

    v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView];
    if (v3)
    {
      v4 = objc_msgSend(v3, "contentView");
      objc_msgSend(v4, "addSubview:", v5);

    }
  }
  else
  {
    objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel]);
  }
}

void sub_1000B71B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v6;
  char *v7;
  char v8;
  void **v9;
  void *v10;
  id v11;
  char *v12;
  void *v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE v20[24];
  char v21[24];

  v2 = v1;
  v3 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator;
  v4 = *(char **)(v1
                + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator);
  if (v4)
  {
    if (!a1
      || (type metadata accessor for AppEventLiveIndicatorAnimationCoordinator(),
          v6 = a1,
          v7 = v4,
          v8 = static NSObject.== infix(_:_:)(v7, v6),
          v7,
          v6,
          (v8 & 1) == 0)
      && (v4 = *(char **)(v2 + v3)) != 0)
    {
      v9 = (void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView);
      swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView, v21, 0, 0);
      v10 = *v9;
      if (*v9)
      {
        swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v20, 33, 0);
        v11 = v10;
        v12 = v4;
        v13 = (void *)sub_1000B8CF0(v11);
        swift_endAccess(v20);

      }
      else
      {
        v14 = v4;
      }
      v15 = (uint64_t *)&v4[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v20, 0, 0);
      v16 = *v15;
      if ((v16 & 0xC000000000000001) != 0)
      {
        if (v16 < 0)
          v17 = v16;
        else
          v17 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v19 = __CocoaSet.count.getter(v17, v18);
        swift_bridgeObjectRelease(v16);
        if (v19)
          goto LABEL_14;
      }
      else if (*(_QWORD *)(v16 + 16))
      {
        goto LABEL_14;
      }
      sub_10016D7B0();
LABEL_14:

    }
  }
}

void sub_1000B7328(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  char *v9;
  void **v10;
  void *v11;
  id v12;
  id *v13;
  id v14;
  char *v15;
  void *v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator;
  v5 = *(void **)(v1
                + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator);
  if (!v5)
  {
    if (!a1)
      return;
LABEL_6:
    v9 = *(char **)(v2 + v4);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator) == 1)
    {
      if (!v9)
        return;
      v10 = (void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView);
      swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView, v24, 0, 0);
      v11 = *v10;
      v9 = v9;
      v12 = v11;
      sub_10016D374(v11);
      goto LABEL_19;
    }
    if (!v9)
      return;
    v13 = (id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView);
    swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView, v24, 0, 0);
    v12 = *v13;
    if (*v13)
    {
      swift_beginAccess(&v9[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v23, 33, 0);
      v14 = v12;
      v15 = v9;
      v16 = (void *)sub_1000B8CF0(v14);
      swift_endAccess(v23);

    }
    else
    {
      v17 = v9;
    }
    v18 = (uint64_t *)&v9[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews];
    swift_beginAccess(&v9[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v23, 0, 0);
    v19 = *v18;
    if ((v19 & 0xC000000000000001) != 0)
    {
      if (v19 < 0)
        v20 = v19;
      else
        v20 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v22 = __CocoaSet.count.getter(v20, v21);
      swift_bridgeObjectRelease(v19);
      if (v22)
        goto LABEL_19;
    }
    else if (*(_QWORD *)(v19 + 16))
    {
      goto LABEL_19;
    }
    sub_10016D7B0();
LABEL_19:

    return;
  }
  if (!a1)
    goto LABEL_6;
  type metadata accessor for AppEventLiveIndicatorAnimationCoordinator();
  v6 = a1;
  v7 = v5;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
    goto LABEL_6;
}

void sub_1000B7500()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  _QWORD v14[114];
  objc_super v15;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for CornerStyle(0);
  v14[6] = *(_QWORD *)(v3 - 8);
  v14[7] = v3;
  __chkstk_darwin(v3);
  v14[5] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LayoutRect(0);
  v14[9] = *(_QWORD *)(v5 - 8);
  v14[10] = v5;
  __chkstk_darwin(v5);
  v14[8] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v15.receiver = v1;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "layoutSubviews", v8);
  v9 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView];
  if (v9)
  {
    v10 = v9;
    if (!objc_msgSend(v10, "isHidden"))
      goto LABEL_7;

  }
  v11 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_backgroundView];
  if (v11)
  {
    v12 = v11;
    if (objc_msgSend(v12, "isHidden"))

  }
LABEL_7:
  v13 = (char *)sub_1000B7680
      + 4
      * byte_100673D60[v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_style]];
  v14[1] = OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_style;
  __asm { BR              X10 }
}

void sub_1000B7680()
{
  uint64_t v0;
  _OWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void (*v10)(uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  void **v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;

  if (qword_1007F10B0 != -1)
    swift_once(&qword_1007F10B0, sub_1000B40CC);
  sub_1000B9C1C(xmmword_100851230, (_OWORD *)(v0 + 584));
  if (qword_1007F10F0 != -1)
    swift_once(&qword_1007F10F0, sub_1000B5200);
  v7 = type metadata accessor for StaticDimension(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_1007F91B0);
  static Dimensions.defaultRoundingRule.getter(v8);
  *(_QWORD *)(v0 + 24) = v8;
  *(_QWORD *)(v0 + 32) = v7;
  v9 = AnyDimension.value(in:rounded:)(v2, v4, v7, &protocol witness table for StaticDimension);
  v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 16) = v10;
  v10(v4, v6);
  *(double *)(v0 + 704) = v9;
  *(double *)(v0 + 712) = v9;
  *(_QWORD *)(v0 + 576) = *(_QWORD *)(v0 + 744);
  v11 = *(_OWORD *)(v0 + 664);
  v1[14] = *(_OWORD *)(v0 + 648);
  v1[15] = v11;
  v12 = *(_OWORD *)(v0 + 600);
  v1[10] = *(_OWORD *)(v0 + 584);
  v1[11] = v12;
  v13 = *(_OWORD *)(v0 + 632);
  v1[12] = *(_OWORD *)(v0 + 616);
  v1[13] = v13;
  v14 = *(_OWORD *)(v0 + 696);
  v1[16] = *(_OWORD *)(v0 + 680);
  v1[17] = v14;
  v15 = *(_OWORD *)(v0 + 728);
  v1[18] = *(_OWORD *)(v0 + 712);
  v1[19] = v15;
  v16 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  *(_QWORD *)(v0 + 112) = type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)(v0 + 120) = &protocol witness table for UILabel;
  *(_QWORD *)(v0 + 88) = v16;
  v17 = (void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView];
  swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView], v0 + 344, 0, 0);
  v18 = *v17;
  if (*v17)
  {
    *(_QWORD *)(v0 + 392) = type metadata accessor for RoundedCornerView(0);
    *(_QWORD *)(v0 + 400) = &protocol witness table for UIView;
    *(_QWORD *)(v0 + 368) = v18;
  }
  else
  {
    *(_QWORD *)(v0 + 400) = 0;
    v1[7] = 0u;
    v1[8] = 0u;
  }
  *(_QWORD *)v0 = v4;
  if (v5)
  {
    *(_QWORD *)(v0 + 328) = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    *(_QWORD *)(v0 + 336) = &protocol witness table for UIView;
    *(_QWORD *)(v0 + 304) = v5;
  }
  else
  {
    *(_QWORD *)(v0 + 336) = 0;
    v1[3] = 0u;
    v1[4] = 0u;
  }
  v19 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView];
  if (v19)
  {
    *(_QWORD *)(v0 + 280) = sub_100019574(0, &qword_10080E4D0, UIVisualEffectView_ptr);
    *(_QWORD *)(v0 + 288) = &protocol witness table for UIView;
    *(_QWORD *)(v0 + 256) = v19;
  }
  else
  {
    *(_QWORD *)(v0 + 288) = 0;
    *v1 = 0u;
    v1[1] = 0u;
  }
  v20 = v5;
  v21 = v19;
  v22 = v16;
  v23 = v18;
  AppPromotionFormattedDateLayout.init(metrics:textLabel:liveIndicatorView:backgroundView:vibrancyView:)((_OWORD *)(v0 + 416), (_QWORD *)(v0 + 88), v0 + 368, v0 + 304, v0 + 256, (void *)(v0 + 584));
  objc_msgSend(v2, "bounds");
  v24 = *(_QWORD *)(v0 + 64);
  AppPromotionFormattedDateLayout.placeChildren(relativeTo:in:)((uint64_t)v2, v25, v26, v27, v28);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v24, *(_QWORD *)(v0 + 80));
  swift_beginAccess(v17, v0 + 416, 32, 0);
  if (*v17)
  {
    swift_endAccess(v0 + 416);
    __asm { BR              X10 }
  }
  sub_1000B9BA0((_QWORD *)(v0 + 584));
  swift_endAccess(v0 + 416);

}

void sub_1000B7E0C()
{
  uint64_t v1;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  __chkstk_darwin(v1);
  __asm { BR              X10 }
}

uint64_t sub_1000B7E9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  void **v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;

  if (qword_1007F10B0 != -1)
    swift_once(&qword_1007F10B0, sub_1000B40CC);
  sub_1000B9C1C(xmmword_100851230, (_OWORD *)(v0 + 152));
  if (qword_1007F10F0 != -1)
    swift_once(&qword_1007F10F0, sub_1000B5200);
  v7 = type metadata accessor for StaticDimension(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_1007F91B0);
  static Dimensions.defaultRoundingRule.getter(v8);
  v9 = AnyDimension.value(in:rounded:)(v2, v4, v7, &protocol witness table for StaticDimension);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  *(double *)(v0 + 272) = v9;
  *(double *)(v0 + 280) = v9;
  *(_QWORD *)(v0 + 480) = *(_QWORD *)(v0 + 312);
  v10 = v5[5];
  *(_OWORD *)(v0 + 384) = v5[4];
  *(_OWORD *)(v0 + 400) = v10;
  v11 = v5[1];
  *(_OWORD *)(v0 + 320) = *v5;
  *(_OWORD *)(v0 + 336) = v11;
  v12 = v5[3];
  *(_OWORD *)(v0 + 352) = v5[2];
  *(_OWORD *)(v0 + 368) = v12;
  v13 = v5[7];
  *(_OWORD *)(v0 + 416) = v5[6];
  *(_OWORD *)(v0 + 432) = v13;
  v14 = v5[9];
  *(_OWORD *)(v0 + 448) = v5[8];
  *(_OWORD *)(v0 + 464) = v14;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel);
  *(_QWORD *)(v0 + 176) = type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)(v0 + 184) = &protocol witness table for UILabel;
  *(_QWORD *)(v0 + 152) = v15;
  v16 = (void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView, v0 + 88, 0, 0);
  v17 = *v16;
  if (v17)
  {
    *(_QWORD *)(v0 + 136) = type metadata accessor for RoundedCornerView(0);
    *(_QWORD *)(v0 + 144) = &protocol witness table for UIView;
    *(_QWORD *)(v0 + 112) = v17;
  }
  else
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  v18 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView);
  if (v18)
  {
    *(_QWORD *)(v0 + 72) = sub_100019574(0, &qword_10080E4D0, UIVisualEffectView_ptr);
    *(_QWORD *)(v0 + 80) = &protocol witness table for UIView;
    *(_QWORD *)(v0 + 48) = v18;
  }
  else
  {
    *(_QWORD *)(v0 + 80) = 0;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  v19 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView);
  if (v19)
  {
    *(_QWORD *)(v0 + 24) = sub_100019574(0, &qword_10080E4D0, UIVisualEffectView_ptr);
    *(_QWORD *)(v0 + 32) = &protocol witness table for UIView;
    *(_QWORD *)v0 = v19;
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  v20 = v18;
  v21 = v19;
  v22 = v15;
  v23 = v17;
  return AppPromotionFormattedDateLayout.init(metrics:textLabel:liveIndicatorView:backgroundView:vibrancyView:)((_OWORD *)(v0 + 320), (_QWORD *)(v0 + 152), v0 + 112, v0 + 48, v0, v1);
}

double sub_1000B82E8(uint64_t a1, uint64_t a2, char a3, __n128 a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  NSString v20;
  unint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v36;

  v5 = v4;
  v9 = type metadata accessor for LogMessage.StringInterpolation(0, a4);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  v13 = objc_msgSend(v12, "text", swift_bridgeObjectRetain(a2).n128_f64[0]);
  if (!v13)
  {
LABEL_8:
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setText:", v20, swift_bridgeObjectRelease(a2).n128_f64[0]);

    objc_msgSend(v5, "setNeedsLayout");
    goto LABEL_10;
  }
  v14 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v17 = v16;

  if (v15 != a1 || v17 != a2)
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, a1, a2, 0);
    swift_bridgeObjectRelease(v17);
    if ((v19 & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease_n(a2, 2);
LABEL_10:
  v21 = v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator];
  v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator] = a3 & 1;
  sub_1000B5C14((id)v21);
  v22 = &v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_delegate]);
  if (Strong)
  {
    v24 = Strong;
    v25 = *((_QWORD *)v22 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 8))(v5, ObjectType, v25);
    swift_unknownObjectRelease(v24);
  }
  v27 = swift_unknownObjectWeakLoadStrong(v22);
  v28 = swift_unknownObjectRelease(v27);
  if (!v27)
  {
    if (qword_1007F3440 != -1)
      swift_once(&qword_1007F3440, sub_1006023FC);
    v29 = type metadata accessor for OSLogger(0, v28);
    sub_1000117A8(v29, (uint64_t)qword_1008575E8);
    v30 = sub_10000DF3C(&qword_1007FD430);
    v31 = type metadata accessor for LogMessage(0);
    v32 = swift_allocObject(v30, ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) | 7);
    *(_OWORD *)(v32 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(100, 1);
    v33._object = (void *)0x8000000100633950;
    v33._countAndFlagsBits = 0xD000000000000014;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    LogMessage.StringInterpolation.appendInterpolation(identity:)(v5);
    v34._countAndFlagsBits = 0xD000000000000050;
    v34._object = (void *)0x8000000100633970;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    LogMessage.init(stringInterpolation:)(v11);
    Logger.warning(_:)(v32, v29, &protocol witness table for OSLogger);
    v28.n128_u64[0] = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  return v28.n128_f64[0];
}

void sub_1000B8618(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  int v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  objc_super v17;

  v2 = v1;
  v17.receiver = v1;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  if (!a1 || ((UITraitCollection.prefersAccessibilityLayouts.getter(v6) ^ v5) & 1) != 0)
    goto LABEL_7;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  v9 = objc_msgSend(a1, "preferredContentSizeCategory");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v15 = v13;
  if (v10 == v14 && v12 == v13)
  {

    swift_bridgeObjectRelease_n(v12, 2);
    return;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
LABEL_7:
    sub_1000B6C08();
}

void sub_1000B87D4()
{
  _BYTE *v0;
  unint64_t v1;
  void *v2;
  id v3;
  char *v4;
  void **v5;
  void *v6;
  id v7;
  char *v8;
  void *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v16[24];
  char v17[24];

  v1 = v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator];
  v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator] = 0;
  sub_1000B5C14((id)v1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_textLabel];
  v3 = objc_msgSend(v2, "text");
  if (v3)
  {

    objc_msgSend(v2, "setText:", 0);
    objc_msgSend(v0, "setNeedsLayout");
  }
  v4 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator];
  if (v4)
  {
    v5 = (void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView];
    swift_beginAccess(v5, v17, 0, 0);
    v6 = *v5;
    if (*v5)
    {
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v16, 33, 0);
      v7 = v6;
      v8 = v4;
      v9 = (void *)sub_1000B8CF0(v7);
      swift_endAccess(v16);

    }
    else
    {
      v10 = v4;
    }
    v11 = (uint64_t *)&v4[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews];
    swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v16, 0, 0);
    v12 = *v11;
    if ((v12 & 0xC000000000000001) != 0)
    {
      if (v12 < 0)
        v13 = v12;
      else
        v13 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v15 = __CocoaSet.count.getter(v13, v14);
      swift_bridgeObjectRelease(v12);
      if (v15)
        goto LABEL_13;
    }
    else if (*(_QWORD *)(v12 + 16))
    {
      goto LABEL_13;
    }
    sub_10016D7B0();
LABEL_13:

  }
}

uint64_t type metadata accessor for AppPromotionFormattedDateView()
{
  return objc_opt_self(_TtC22SubscribePageExtension29AppPromotionFormattedDateView);
}

uint64_t getEnumTagSinglePayload for AppPromotionFormattedDateView.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppPromotionFormattedDateView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1000B8A70 + 4 * byte_100673D7D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1000B8AA4 + 4 * byte_100673D78[v4]))();
}

uint64_t sub_1000B8AA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B8AAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B8AB4);
  return result;
}

uint64_t sub_1000B8AC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B8AC8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1000B8ACC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B8AD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppPromotionFormattedDateView.Style()
{
  return &type metadata for AppPromotionFormattedDateView.Style;
}

unint64_t sub_1000B8AF4()
{
  unint64_t result;

  result = qword_1007F9260;
  if (!qword_1007F9260)
  {
    result = swift_getWitnessTable(&unk_100673E44, &type metadata for AppPromotionFormattedDateView.Style);
    atomic_store(result, (unint64_t *)&qword_1007F9260);
  }
  return result;
}

uint64_t sub_1000B8B38()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0
                + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1000B8B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1000B8BD0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter, a1, 33, 0);
  return j__swift_endAccess;
}

double sub_1000B8C1C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  _QWORD v9[41];

  sub_1000B7E0C();
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v2 = sub_10000DF3C(&qword_1007F5840);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v3 + 32) = a1;
  v4 = a1;
  v5 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v3);
  sub_1000B96C0((uint64_t)v5, (uint64_t)v9);
  v7 = v6;

  sub_1000B9BA0(v9);
  return v7;
}

uint64_t sub_1000B8CF0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      sub_1000B90F4(v5, (uint64_t)v6);
      v9 = v8;
      swift_bridgeObjectRelease(v4);
      return v9;
    }
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v10 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    goto LABEL_15;
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14, a1);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      v17 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17, a1);

    }
    while ((v18 & 1) == 0);
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v20 = *v2;
  v23 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100170CB8();
    v20 = v23;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v13);
  sub_1000B928C(v13);
  v21 = *v2;
  *v2 = v23;
  swift_bridgeObjectRelease(v21);
  return v9;
}

uint64_t sub_1000B8EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = type metadata accessor for AdamId(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  v11 = *(_QWORD *)(*v2 + 40);
  v12 = sub_1000B9C58(&qword_1007F9268, (uint64_t)&protocol conformance descriptor for AdamId);
  swift_bridgeObjectRetain(v10);
  v31 = a1;
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v29 = v3;
    v30 = a2;
    v16 = ~v14;
    v17 = *(_QWORD *)(v7 + 72);
    v32 = v7;
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18(v9, *(_QWORD *)(v10 + 48) + v17 * v15, v6);
      v19 = sub_1000B9C58(&qword_1008083C0, (uint64_t)&protocol conformance descriptor for AdamId);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v31, v6, v19);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
      if ((v20 & 1) != 0)
        break;
      v15 = (v15 + 1) & v16;
      if (((*(_QWORD *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        v21 = swift_bridgeObjectRelease(v10);
        v22 = 1;
        a2 = v30;
        v7 = v32;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v22, 1, v6, v21);
      }
    }
    swift_bridgeObjectRelease(v10);
    v23 = v29;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
    v25 = *v23;
    v33 = *v23;
    *v23 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100171008();
      v25 = v33;
    }
    v7 = v32;
    a2 = v30;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v32 + 32))(v30, *(_QWORD *)(v25 + 48) + v17 * v15, v6);
    sub_1000B942C(v15);
    v26 = *v23;
    *v23 = v33;
    v21 = swift_bridgeObjectRelease(v26);
    v22 = 0;
  }
  else
  {
    v21 = swift_bridgeObjectRelease(v10);
    v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v22, 1, v6, v21);
}

void sub_1000B90F4(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  Swift::Int v19;

  v3 = v2;
  v6 = swift_bridgeObjectRelease(*v3);
  v7 = __CocoaSet.count.getter(a1, v6);
  v8 = swift_unknownObjectRetain(a1);
  v9 = sub_10016ED9C(v8, v7);
  v19 = v9;
  v10 = *(_QWORD *)(v9 + 40);
  swift_retain(v9);
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v9 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v14 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v13);
    v15 = static NSObject.== infix(_:_:)(v14, a2);

    if ((v15 & 1) != 0)
    {
LABEL_6:
      swift_release(v9);
      v9 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v13);
      sub_1000B928C(v13);
      if ((static NSObject.== infix(_:_:)(a2, v9) & 1) != 0)
      {
        *v3 = v19;
        return;
      }
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v13);
        v18 = static NSObject.== infix(_:_:)(v17, a2);

        if ((v18 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v9);
    __break(1u);
  }
  swift_release(v9);
  __break(1u);
}

unint64_t sub_1000B928C(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1000B942C(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for AdamId(0);
  v33 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v30 = v1;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v32 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      do
      {
        v13 = v7;
        v14 = v12;
        v15 = v12 * v9;
        v31(v5, *(_QWORD *)(v6 + 48) + v12 * v9, v3);
        v16 = *(_QWORD *)(v6 + 40);
        v17 = sub_1000B9C58(&qword_1007F9268, (uint64_t)&protocol conformance descriptor for AdamId);
        v18 = dispatch thunk of Hashable._rawHashValue(seed:)(v16, v3, v17);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v3);
        v19 = v18 & v10;
        if (a1 >= (uint64_t)v32)
        {
          if (v19 < v32 || a1 < (uint64_t)v19)
          {
LABEL_4:
            v7 = v13;
            v12 = v14;
            goto LABEL_5;
          }
        }
        else if (v19 < v32 && a1 < (uint64_t)v19)
        {
          goto LABEL_4;
        }
        v22 = *(_QWORD *)(v6 + 48);
        v23 = v14 * a1;
        v24 = v22 + v14 * a1;
        v25 = v22 + v15;
        v7 = v13;
        if (v14 * a1 < v15 || (v12 = v14, v24 >= v25 + v14))
        {
          swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v3);
          goto LABEL_21;
        }
        a1 = v9;
        if (v23 != v15)
        {
          swift_arrayInitWithTakeBackToFront(v24);
LABEL_21:
          v12 = v14;
          a1 = v9;
        }
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v30;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v26 = *v1;
  v27 = *(_QWORD *)(*v1 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
}

void sub_1000B96C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = CGSize.subtracting(insets:)(v8);
  v11 = v10;
  sub_1000B9BD4(a2 + 208, (uint64_t)&v32);
  if (v33)
  {
    sub_100010F3C(&v32, (uint64_t)v34);
    v12 = v35;
    v13 = v36;
    sub_100011064(v34, v35);
    if ((dispatch thunk of LayoutView.isHidden.getter(v12, v13) & 1) == 0)
    {
      v14 = *(double *)(a2 + 120);
      v15 = *(_QWORD *)(a2 + 104);
      v16 = *(_QWORD *)(a2 + 112);
      sub_100011064((_QWORD *)(a2 + 80), v15);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15);
      v17 = AnyDimension.value(in:rounded:)(a1, v7, v15, v16);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v9 = v9 - (v14 + v17);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v34);
  }
  else
  {
    sub_100011088((uint64_t)&v32, &qword_1007FAF60);
  }
  v18 = *(_QWORD *)(a2 + 192);
  v19 = *(_QWORD *)(a2 + 200);
  sub_100011064((_QWORD *)(a2 + 168), v18);
  v20 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v18, *(_QWORD *)(*(_QWORD *)(v19 + 8) + 8), v9, v11);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(a2 + 32);
  sub_100011064((_QWORD *)a2, v27);
  AnyDimension.topMargin(from:in:)(a1, v27, v28, v20, v22, v24, v26);
  v29 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  sub_100011064((_QWORD *)(a2 + 40), v29);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v29);
  AnyDimension.value(in:rounded:)(a1, v7, v29, v30);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  CGSize.adding(outsets:)(v31);
}

void sub_1000B9944()
{
  uint64_t v0;
  id *v1;
  double v2;
  char *v3;
  id v4;
  id v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE v14[24];
  char v15[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView, v15, 0, 0).n128_u64[0];
  if (*v1)
    objc_msgSend(*v1, "removeFromSuperview", v2);
  v3 = *(char **)(v0
                + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator);
  if (v3)
  {
    v4 = *v1;
    if (*v1)
    {
      swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v14, 33, 0);
      v5 = v4;
      v6 = v3;
      v7 = (void *)sub_1000B8CF0(v5);
      swift_endAccess(v14);

    }
    else
    {
      v8 = v3;
    }
    v9 = (uint64_t *)&v3[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews];
    swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension41AppEventLiveIndicatorAnimationCoordinator_animatingViews], v14, 0, 0);
    v10 = *v9;
    if ((v10 & 0xC000000000000001) != 0)
    {
      if (v10 < 0)
        v11 = v10;
      else
        v11 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v13 = __CocoaSet.count.getter(v11, v12);
      swift_bridgeObjectRelease(v10);
      if (v13)
        goto LABEL_13;
    }
    else if (*(_QWORD *)(v10 + 16))
    {
      goto LABEL_13;
    }
    sub_10016D7B0();
LABEL_13:

  }
}

id sub_1000B9A84(void *a1)
{
  char *v1;
  void *v2;
  id *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v11[24];

  v2 = v1;
  sub_1000B9944();
  v4 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView];
  swift_beginAccess(v4, v11, 1, 0);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

  if (*v4)
  {
    v7 = qword_1007F10F8;
    v8 = *v4;
    if (v7 != -1)
      swift_once(&qword_1007F10F8, sub_1000B534C);
    objc_msgSend(v8, "setBackgroundColor:", qword_1007F91C8);
    if (qword_1007F1100 != -1)
      swift_once(&qword_1007F1100, sub_1000B5384);
    v9 = dispatch thunk of RoundedCornerView.borderColor.setter((id)qword_1007F91D0);
    dispatch thunk of RoundedCornerView.borderWidth.setter(v9);
    objc_msgSend(v2, "addSubview:", v8);

  }
  return objc_msgSend(v2, "setNeedsLayout");
}

_QWORD *sub_1000B9BA0(_QWORD *a1)
{
  destroy for AppPromotionFormattedDateLayout(a1);
  return a1;
}

uint64_t sub_1000B9BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007FAF60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1000B9C1C(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for AppPromotionFormattedDateLayout.Metrics(a2, a1);
  return a2;
}

uint64_t sub_1000B9C58(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AdamId(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1000B9C98(_QWORD *a1)
{
  destroy for OnboardingTrayLayout.Metrics(a1);
  return a1;
}

void sub_1000B9CCC()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_showLiveIndicator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorView] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_style] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_blurredBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_vibrancyView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AppPromotionFormattedDateView.swift", 58, 2, 194, 0);
  __break(1u);
}

uint64_t sub_1000B9DA0(uint64_t a1)
{
  return swift_getWitnessTable("i.\v", a1);
}

uint64_t sub_1000B9DB0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC0))();
}

uint64_t sub_1000B9DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v4;
  v10 = swift_isaMask & *v5;
  v11 = TodayCard.media.getter();
  v12 = swift_dynamicCastClass(v11, *(_QWORD *)(v10 + 80));
  if (v12)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v5) + 0xB0))(a1, a2, v12, a3, a4);
  return swift_release(v11);
}

uint64_t sub_1000B9E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getWitnessTable(aL, a4);
  return sub_100359B3C(a1, a2, a3);
}

void (*sub_1000B9ED4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1002348B0((uint64_t)v2);
  return sub_10001DF34;
}

double sub_1000B9F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(aL, a3);
  return sub_1001363DC(a1, a2, a3, WitnessTable);
}

double sub_1000B9F64()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  __n128 v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v21;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SmallStoryCardLayout.Metrics(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)ShelfLayoutContext.traitCollection.getter(v9);
  sub_100234384(v10, (uint64_t)v8, v11);

  ShelfLayoutContext.contentPageGrid.getter(v12);
  v13 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v15 = v14;
  v16 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v17 = (void *)ShelfLayoutContext.traitCollection.getter(v16);
  static SmallStoryCardLayout.estimatedMeasurements(fitting:using:with:)(v8, v17, v13, v15);
  v19 = v18;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v19;
}

uint64_t sub_1000BA098(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = swift_getWitnessTable(&unk_100673FD4, a2);
  a1[2] = swift_getWitnessTable(&unk_100673F5C, a2);
  result = swift_getWitnessTable(&unk_100673F8C, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1000BA0F0(uint64_t a1, char a2, char a3)
{
  _BYTE *v3;
  _BYTE *v4;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  NSString v12;
  unint64_t v13;
  UIColor v14;
  Class isa;
  id v16;
  int v17;
  uint64_t v18;

  v4 = v3;
  v7 = objc_msgSend(*(id *)&v3[qword_1007F6850], "setHidden:", (EditorsChoice.showsBadge.getter(a1) & 1) == 0);
  v8 = *(void **)&v3[qword_1007F6858];
  EditorsChoice.notes.getter(v7);
  if (v9)
  {
    v11 = v9;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v8, "setText:", v12, v10);

  v13 = sub_1000117FC();
  if ((a3 & 1) != 0)
    v14.super.isa = UIColor.init(light:lightHighContrast:dark:darkHighContrast:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.388235294, 0.388235294, 0.4, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.282352941, 0.282352941, 0.290196078, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.682352941, 0.682352941,
                                 0.698039216,
                                 1.0),
                      (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.780392157, 0.780392157, 0.8, 1.0)).super.isa;
  else
    v14.super.isa = (Class)static UIColor.secondaryText.getter(v13);
  isa = v14.super.isa;
  objc_msgSend(v8, "setTextColor:", v14.super.isa);

  v17 = v4[qword_1007F6868];
  v4[qword_1007F6868] = a2 & 1;
  if (v17 != (a2 & 1))
  {
    if ((a2 & 1) != 0)
      v18 = 0;
    else
      v18 = 6;
    objc_msgSend(v8, "setNumberOfLines:", v18);
    v16 = objc_msgSend(v4, "setNeedsLayout");
  }
  return dispatch thunk of CustomLayoutView.invalidateMeasurements()(v16);
}

unint64_t sub_1000BA2FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F9270;
  if (!qword_1007F9270)
  {
    v1 = type metadata accessor for EditorialStoryCardCollectionViewCell(255);
    result = swift_getWitnessTable(byte_100674050, v1);
    atomic_store(result, (unint64_t *)&qword_1007F9270);
  }
  return result;
}

double sub_1000BA344(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  __n128 v27;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for AspectRatio(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for PageGrid(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfLayoutContext(0);
  v29 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v15);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(a2, v18, 0, 0, 0);
  ShelfLayoutContext.contentPageGrid.getter(v19);
  v20 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v22 = ShelfLayoutContext.traitEnvironment.getter(v21);
  if (JUScreenClassGetMain(v22) == 1)
  {
    if (qword_1007F3140 != -1)
      swift_once(&qword_1007F3140, sub_100566C80);
    v23 = qword_100818418;
  }
  else
  {
    if (qword_1007F3138 != -1)
      swift_once(&qword_1007F3138, sub_100566C60);
    v23 = qword_100818400;
  }
  v24 = sub_1000117A8(v3, (uint64_t)v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v24, v3);
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
  v26 = AspectRatio.height(fromWidth:)(v25, v20);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v27 = swift_unknownObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v17, v30, v27);
  return round(v26);
}

double sub_1000BA598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v20;

  v0 = type metadata accessor for AspectRatio(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - v5;
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v11);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = ShelfLayoutContext.traitEnvironment.getter(v13);
  if (JUScreenClassGetMain(v14) == 1)
  {
    if (qword_1007F3140 != -1)
      swift_once(&qword_1007F3140, sub_100566C80);
    v15 = qword_100818418;
  }
  else
  {
    if (qword_1007F3138 != -1)
      swift_once(&qword_1007F3138, sub_100566C60);
    v15 = qword_100818400;
  }
  v16 = sub_1000117A8(v0, (uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v16, v0);
  v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
  v18 = AspectRatio.height(fromWidth:)(v17, v12);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  swift_unknownObjectRelease(v14);
  return round(v18);
}

uint64_t sub_1000BA770(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 21.0;
  return sub_1000BA790(a2, a1, qword_100851770);
}

uint64_t sub_1000BA780(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 12.0;
  return sub_1000BA790(a2, a1, qword_100851788);
}

uint64_t sub_1000BA790(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100045464(v9, a3);
  sub_1000117A8(v9, (uint64_t)a3);
  if (qword_1007F1128 != -1)
    swift_once(&qword_1007F1128, sub_1000BA8E4);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_1008517A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_1000117C0(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000BA8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100045464(v0, qword_1008517A0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_1008517A0);
  if (qword_1007F2740 != -1)
    swift_once(&qword_1007F2740, sub_1004170B4);
  v2 = sub_1000117A8(v0, (uint64_t)qword_100855AA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1000BAA34()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  NSString *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  NSString *v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  NSString *v21;
  id v22;
  id v23;
  char v24;
  char *v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  id v29;
  NSString v30;
  Class isa;
  NSString v32;
  void *v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  uint64_t v37;
  char v38[72];
  unint64_t v39;

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v2, v38);
  *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v4 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  v5 = qword_1007F1128;
  v6 = NSFontAttributeName;
  if (v5 != -1)
    swift_once(&qword_1007F1128, sub_1000BA8E4);
  v7 = type metadata accessor for FontUseCase(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_1008517A0);
  v9 = objc_msgSend(v1, "traitCollection");
  v10 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v8, v9);

  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 40) = v10;
  v11 = sub_1003699BC(inited);
  v12 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  v13 = v12;
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_isCentered] == 1)
  {
    objc_msgSend(v12, "setAlignment:", 1);
  }
  else
  {
    v14 = objc_msgSend(v1, "traitCollection");
    v15 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v15 & 1) != 0)
      v16 = 2;
    else
      v16 = 0;
    objc_msgSend(v13, "setAlignment:", v16);
  }
  v37 = sub_100019574(0, &qword_1007F92C8, NSMutableParagraphStyle_ptr);
  *(_QWORD *)&v36 = v13;
  sub_10003B8E8(&v36, v35);
  v17 = NSParagraphStyleAttributeName;
  v18 = v13;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  sub_10010B604(v35, v17, isUniquelyReferenced_nonNull_native);
  v20 = v11;
  v39 = v11;

  swift_bridgeObjectRelease(0x8000000000000000);
  v21 = NSForegroundColorAttributeName;
  v22 = objc_msgSend(v1, "tintColor");
  if (v22)
  {
    v23 = v22;
    v37 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    *(_QWORD *)&v36 = v23;
    sub_10003B8E8(&v36, v35);
    v24 = swift_isUniquelyReferenced_nonNull_native(v20);
    sub_10010B604(v35, v21, v24);
    v39 = v20;

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100326584((uint64_t)v21, &v36);

    sub_1000131E0((uint64_t)&v36);
  }
  v25 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_text];
  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_text + 8];
  if (v26)
  {
    v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel];
    v28 = v39;
    v29 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v26);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    type metadata accessor for Key(0);
    sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v32 = objc_msgSend(v29, "initWithString:attributes:", v30, isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    objc_msgSend(v27, "setAttributedText:", v32);
  }
  else
  {
    swift_bridgeObjectRelease(v39);
    v33 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel];
    v34 = *((_QWORD *)v25 + 1);
    if (v34)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v25 + 1));
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      v32 = 0;
    }
    objc_msgSend(v33, "setText:", v32);
  }

  objc_msgSend(v1, "setNeedsLayout");
}

void sub_1000BAE4C()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v11.receiver = v0;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "layoutSubviews");
  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_100726EB8, 32, 7);
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = ObjectType;
  v4 = swift_allocObject(&unk_100726EE0, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1000BBC74;
  *(_QWORD *)(v4 + 24) = v3;
  v9[4] = sub_100030368;
  v10 = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100101718;
  v9[3] = &unk_100726EF8;
  v5 = _Block_copy(v9);
  v6 = v10;
  v7 = v0;
  swift_retain(v4);
  objc_msgSend(v2, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 113, 106, 40, 1);
  swift_release(v3);
  swift_release(v4);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

id sub_1000BAFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v19 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticDimension(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a1 + OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel);
  LayoutMarginsAware<>.layoutFrame.getter(a2);
  objc_msgSend(v11, "sizeThatFits:", v12, v13);
  v20.origin.x = LayoutMarginsAware<>.layoutFrame.getter(a2);
  CGRectGetWidth(v20);
  v21.origin.x = LayoutMarginsAware<>.layoutFrame.getter(a2);
  CGRectGetMinX(v21);
  v22.origin.x = LayoutMarginsAware<>.layoutFrame.getter(a2);
  CGRectGetMinY(v22);
  if (qword_1007F1118 != -1)
    swift_once(&qword_1007F1118, sub_1000BA770);
  v14 = sub_1000117A8(v7, (uint64_t)qword_100851770);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, v7);
  static Dimensions.defaultRoundingRule.getter(v15);
  v16 = objc_msgSend(v11, "traitCollection");
  StaticDimension.value(compatibleWith:rounded:)(v16, v6);

  objc_msgSend(v11, "firstBaselineFromTop");
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  LayoutMarginsAware<>.layoutFrame.getter(a2);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  return objc_msgSend(v11, "setFrame:");
}

void sub_1000BB268()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  double v15;
  _QWORD v16[5];
  uint64_t v17;
  objc_super v18;

  v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, "tintColorDidChange");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel];
  v3 = objc_msgSend(v2, "attributedText");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "tintColor");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v4);
      v8 = objc_msgSend(v4, "length");
      v9 = swift_allocObject(&unk_100726E40, 32, 7);
      *(_QWORD *)(v9 + 16) = v7;
      *(_QWORD *)(v9 + 24) = v6;
      v10 = swift_allocObject(&unk_100726E68, 32, 7);
      *(_QWORD *)(v10 + 16) = sub_1000BBC20;
      *(_QWORD *)(v10 + 24) = v9;
      v16[4] = sub_100051958;
      v17 = v10;
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 1107296256;
      v16[2] = sub_100133088;
      v16[3] = &unk_100726E80;
      v11 = _Block_copy(v16);
      v12 = v17;
      v13 = v7;
      v14 = v6;
      swift_retain(v10);
      objc_msgSend(v4, "enumerateAttribute:inRange:options:usingBlock:", NSForegroundColorAttributeName, 0, v8, 0x100000, v11, swift_release(v12).n128_f64[0]);
      _Block_release(v11);
      LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 113, 83, 11, 1);

      swift_release(v9);
      *(_QWORD *)&v15 = swift_release(v10).n128_u64[0];
      if ((v8 & 1) == 0)
      {
        objc_msgSend(v2, "setAttributedText:", v13, v15);

        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1000BB4BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "prepareForReuse");
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_text];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_text + 8];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  swift_bridgeObjectRelease(v2);
  sub_1000BAA34();
  v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_isCentered] = 0;
  sub_1000BAA34();
  v3 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_buttonAction];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_buttonAction];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_buttonAction + 8];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  return sub_100019310(v4, v5);
}

uint64_t type metadata accessor for AccountActionSectionFooterView()
{
  return objc_opt_self(_TtC22SubscribePageExtension30AccountActionSectionFooterView);
}

void sub_1000BB6A8()
{
  _BYTE *v0;
  _BYTE *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  objc_super v27;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for DirectionalTextAlignment(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_tapGestureRecognizer] = 0;
  v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_isCentered] = 0;
  v10 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_text];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_buttonAction];
  *v11 = 0;
  v11[1] = 0;
  v12 = qword_1007F1128;
  v13 = v1;
  if (v12 != -1)
    swift_once(&qword_1007F1128, sub_1000BA8E4);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_1000117A8(v14, (uint64_t)qword_1008517A0);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v15, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DirectionalTextAlignment.none(_:), v3);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v9, 0, 0, 1, 0, v6, 0, 0);

  v27.receiver = v13;
  v27.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel;
  v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_titleLabel];
  v21 = v18;
  objc_msgSend(v21, "addSubview:", v20);
  v22 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v21, "buttonTapped");
  v23 = OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_tapGestureRecognizer;
  v24 = *(void **)&v21[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_tapGestureRecognizer];
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension30AccountActionSectionFooterView_tapGestureRecognizer] = v22;

  if (*(_QWORD *)&v21[v23])
  {
    v25 = *(void **)&v18[v19];
    objc_msgSend(v25, "addGestureRecognizer:");
    v26 = v25;
    objc_msgSend(v26, "setUserInteractionEnabled:", 1);

  }
  else
  {
    __break(1u);
  }
}

double sub_1000BB940(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  _QWORD v32[5];

  v14 = type metadata accessor for FontUseCase(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v18 = a4 - a6 - a8;
    if (qword_1007F1128 != -1)
      swift_once(&qword_1007F1128, sub_1000BA8E4);
    v19 = sub_1000117A8(v14, (uint64_t)qword_1008517A0);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
    v20 = type metadata accessor for Feature(0);
    v32[3] = v20;
    v32[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v21 = sub_1000117C0(v32);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v21, enum case for Feature.measurement_with_labelplaceholder(_:), v20);
    LOBYTE(v20) = isFeatureEnabled(_:)(v32);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v32);
    v22 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(a1, a2, v17, 4, 0, 0, 0, 0, v18, 1.79769313e308, a3, v20 & 1);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (qword_1007F1118 != -1)
      swift_once(&qword_1007F1118, sub_1000BA770);
    v29 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v29, (uint64_t)qword_100851770);
    AnyDimension.topMargin(from:in:)(a3, v29, &protocol witness table for StaticDimension, v22, v24, v26, v28);
    if (qword_1007F1120 != -1)
      swift_once(&qword_1007F1120, sub_1000BA780);
    sub_1000117A8(v29, (uint64_t)qword_100851788);
    AnyDimension.bottomMargin(from:in:)(a3, v29, &protocol witness table for StaticDimension, v22, v24, v26, v28);
  }
  return a4;
}

uint64_t sub_1000BBBF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000BBC20(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return sub_10057D248(a1, a2, a3, a4, *(id *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1000BBC28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BBC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000BBC48(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000BBC50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000BBC74()
{
  uint64_t v0;

  return sub_1000BAFA0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000BBC7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BBC94(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void **v32;
  unint64_t v33;
  void **v34;
  unint64_t v35;
  unint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  __n128 v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void **aBlock;
  unint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  void (*v88)();
  uint64_t v89;
  void **v90;

  v4 = v3;
  v72 = a3;
  v73 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v80 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v79 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v7);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  v10 = __chkstk_darwin(v9);
  v76 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0, v10);
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  __chkstk_darwin(v12);
  v69 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AdamId(0);
  v82 = *(_QWORD *)(v14 - 8);
  v83 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007F9380);
  v74 = Promise.__allocating_init()();
  v17 = *(_QWORD *)(a1 + 16);
  v81 = v6;
  v75 = a1;
  if (v17)
  {
    v90 = (void **)_swiftEmptyArrayStorage;
    v68 = v3;
    swift_retain(v3);
    sub_100021A14(0, v17, 0);
    isUniquelyReferenced_nonNull_native = type metadata accessor for SponsoredSearchAdvert(0);
    v19 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
    v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(_QWORD *)(v19 + 72);
    do
    {
      aBlock = 0;
      v85 = 0xE000000000000000;
      v22 = SponsoredSearchAdvert.adamId.getter(isUniquelyReferenced_nonNull_native);
      v23 = AdamId.stringValue.getter(v22);
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v16, v83);
      swift_bridgeObjectRelease(v85);
      aBlock = (void **)v23;
      v85 = v25;
      v26._countAndFlagsBits = 8250;
      v26._object = (void *)0xE200000000000000;
      String.append(_:)(v26);
      v28 = SponsoredSearchAdvert.serverCppId.getter(v27);
      if (v29)
      {
        v30 = v29;
      }
      else
      {
        v28 = 0x746C7561666564;
        v30 = 0xE700000000000000;
      }
      v31 = v30;
      String.append(_:)(*(Swift::String *)&v28);
      swift_bridgeObjectRelease(v30);
      v32 = aBlock;
      v33 = v85;
      v34 = v90;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v90);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = sub_100021A14(0, (int64_t)v34[2] + 1, 1);
        v34 = v90;
      }
      v36 = (unint64_t)v34[2];
      v35 = (unint64_t)v34[3];
      if (v36 >= v35 >> 1)
      {
        isUniquelyReferenced_nonNull_native = sub_100021A14(v35 > 1, v36 + 1, 1);
        v34 = v90;
      }
      v34[2] = (void *)(v36 + 1);
      v37 = &v34[2 * v36];
      v37[4] = v32;
      v37[5] = (void *)v33;
      v20 += v21;
      --v17;
    }
    while (v17);
    v4 = v68;
  }
  else
  {
    swift_retain(v3);
    v34 = (void **)_swiftEmptyArrayStorage;
  }
  aBlock = v34;
  v38 = sub_10000DF3C(&qword_100802220);
  v39 = sub_100010F98((unint64_t *)&qword_1007FAFD0, &qword_100802220, (const char *)&protocol conformance descriptor for [A]);
  v40 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v38, v39);
  v42 = v41;
  swift_bridgeObjectRelease(v34);
  if (qword_1007F3460 != -1)
    swift_once(&qword_1007F3460, sub_100602484);
  v43 = v71;
  v44 = sub_1000117A8(v71, (uint64_t)qword_100857648);
  v45 = v70;
  v46 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v44, v43);
  v47 = sub_10000DF3C(&qword_1007FD430);
  v48 = type metadata accessor for LogMessage(0);
  v49 = swift_allocObject(v47, ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) | 7);
  *(_OWORD *)(v49 + 16) = xmmword_1006725D0;
  static LogMessage.identity(_:)(v4);
  LogMessage.init(stringLiteral:)(0x636F72506C6C6977, 0xEE00736441737365);
  LogMessage.init(stringLiteral:)(0xD000000000000014, 0x8000000100633B40);
  v87 = &type metadata for String;
  aBlock = (void **)v40;
  v85 = v42;
  static LogMessage.safe(_:)(&aBlock);
  sub_1000131E0((uint64_t)&aBlock);
  Logger.info(_:)(v49, v43, &protocol witness table for OSLogger);
  v50 = swift_bridgeObjectRelease(v49);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v46, v43, v50);
  v51 = *(void **)(v4 + 16);
  v52 = swift_allocObject(&unk_100726F30, 80, 7);
  v53 = v73;
  v54 = v74;
  *(_QWORD *)(v52 + 16) = v51;
  *(_QWORD *)(v52 + 24) = v53;
  v55 = v75;
  *(_QWORD *)(v52 + 32) = v75;
  *(_BYTE *)(v52 + 40) = v72 & 1;
  *(_QWORD *)(v52 + 48) = sub_1000BD76C;
  *(_QWORD *)(v52 + 56) = v4;
  *(_QWORD *)(v52 + 64) = v4;
  *(_QWORD *)(v52 + 72) = v54;
  v88 = sub_1000BD7C0;
  v89 = v52;
  aBlock = _NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_1000BD6CC;
  v87 = &unk_100726F48;
  v56 = _Block_copy(&aBlock);
  swift_retain_n(v4, 2);
  v57 = v51;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v55);
  v58 = swift_retain(v54);
  v59 = v76;
  static DispatchQoS.unspecified.getter(v58);
  v90 = (void **)_swiftEmptyArrayStorage;
  v60 = sub_100033D20();
  v61 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v62 = sub_100010F98((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00, (const char *)&protocol conformance descriptor for [A]);
  v63 = v79;
  v64 = v61;
  v65 = v81;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v90, v64, v62, v81, v60);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v63, v56);
  _Block_release(v56);
  v66 = swift_release(v4);
  (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v63, v65, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v59, v78);
  swift_release(v89);
  return v54;
}

uint64_t sub_1000BC2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v4 = type metadata accessor for LegacyAppState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 32);
    ObjectType = swift_getObjectType(v9, v6);
    v12 = dispatch thunk of AppStateController.stateMachine(forApp:)(a1, ObjectType, v10);
    v14 = v13;
    v15 = swift_getObjectType(v12, v13);
    v16 = dispatch thunk of AppStateMachine.currentState.getter(v15, v14);
    v17 = LegacyAppState.isLocalApplication.getter(v16);
    swift_unknownObjectRelease(v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void sub_1000BC384(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  __n128 v35;
  uint64_t v36;
  Class isa;
  id v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  Class v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD aBlock[5];
  uint64_t v83;

  v73 = a7;
  v74 = a8;
  v71 = a5;
  v72 = a6;
  v70 = a4;
  v69 = a3;
  v75 = a1;
  v9 = type metadata accessor for SponsoredSearchAdvert(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v68 = (char *)&v65 - v14;
  v15 = type metadata accessor for AdamId(0);
  v79 = *(_QWORD *)(v15 - 8);
  v80 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SponsoredSearchOrganic(0, v16);
  v81 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v65 - v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = _swiftEmptyArrayStorage;
  if (v25)
  {
    v65 = v12;
    v66 = v10;
    v67 = v9;
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v25);
    v27 = (char *)(a2 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)));
    v28 = *(_QWORD *)(v81 + 72);
    v77 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    v78 = v28;
    v76 = (char *)&type metadata for Any + 8;
    do
    {
      v29 = v77;
      v77(v24, v27, v19);
      v29(v21, v24, v19);
      v30 = objc_allocWithZone((Class)ADAppRepresentation);
      v31 = SponsoredSearchOrganic.adamId.getter();
      AdamId.stringValue.getter(v31);
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v18, v80);
      v34 = String._bridgeToObjectiveC()();
      v35 = swift_bridgeObjectRelease(v33);
      v36 = SponsoredSearchOrganic.assetInformation.getter(v35);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v38 = objc_msgSend(v30, "initWithAdamID:assetInformation:", v34, isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

      v39 = *(void (**)(char *, uint64_t))(v81 + 8);
      v39(v21, v19);
      v40 = ((uint64_t (*)(char *, uint64_t))v39)(v24, v19);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v41 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v41);
      v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
      specialized ContiguousArray._endMutation()(v42);
      v27 += v78;
      --v25;
    }
    while (v25);
    v26 = (_QWORD *)aBlock[0];
    v44 = v74;
    v43 = v75;
    v9 = v67;
    v10 = v66;
    v12 = v65;
  }
  else
  {
    v44 = v74;
    v43 = v75;
  }
  sub_100019574(0, &qword_1007F9388, ADAppRepresentation_ptr);
  v45 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "setOrganics:", v45, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v46 = v69;
  v47 = *(_QWORD *)(v69 + 16);
  v48 = _swiftEmptyArrayStorage;
  if (v47)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v47);
    v49 = sub_100019574(0, &qword_1007F9390, ADAppAdvertisement_ptr);
    v50 = v46 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v80 = *(_QWORD *)(v10 + 72);
    v81 = v49;
    v51 = (uint64_t)v12;
    v52 = v10;
    v53 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v54 = v68;
    do
    {
      v53(v54, v50, v9);
      v53((char *)v51, (uint64_t)v54, v9);
      v55 = sub_1000BC898(v51);
      v56 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v54, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v57 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v57);
      v58 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
      specialized ContiguousArray._endMutation()(v58);
      v50 += v80;
      --v47;
    }
    while (v47);
    v48 = (_QWORD *)aBlock[0];
    v44 = v74;
    v43 = v75;
  }
  sub_100019574(0, &qword_1007F9390, ADAppAdvertisement_ptr);
  v59 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "setAdvertisements:", v59, swift_bridgeObjectRelease(v48).n128_f64[0]);

  v60 = swift_allocObject(&unk_100726F80, 56, 7);
  *(_BYTE *)(v60 + 16) = v70 & 1;
  v61 = v72;
  *(_QWORD *)(v60 + 24) = v71;
  *(_QWORD *)(v60 + 32) = v61;
  v62 = v73;
  *(_QWORD *)(v60 + 40) = v73;
  *(_QWORD *)(v60 + 48) = v44;
  aBlock[4] = sub_1000BD824;
  v83 = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD654;
  aBlock[3] = &unk_100726F98;
  v63 = _Block_copy(aBlock);
  v64 = v83;
  swift_retain(v61);
  swift_retain(v62);
  swift_retain(v44);
  objc_msgSend(v43, "orderedAdsWithODMLSuccess:", v63, swift_release(v64).n128_f64[0]);
  _Block_release(v63);
}

id sub_1000BC898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSArray v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSArray v32;
  uint64_t v33;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for AdamId(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = SponsoredSearchAdvert.adamId.getter(v6);
  AdamId.stringValue.getter(v9);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v12 = String._bridgeToObjectiveC()();
  v13 = swift_bridgeObjectRelease(v11);
  v14 = SponsoredSearchAdvert.cppIds.getter(v13);
  if (v14)
  {
    v15 = v14;
    v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16.super.isa = 0;
  }
  SponsoredSearchAdvert.serverCppId.getter(v14);
  if (v17)
  {
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v19 = 0;
  }
  v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v21 = SponsoredSearchAdvert.adData.getter();
  v22 = objc_allocWithZone((Class)ADDataObject);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  v24 = objc_msgSend(v22, "initWith:andError:", isa, 0);

  SponsoredSearchAdvert.instanceId.getter();
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v28 = objc_msgSend(v20, "initWithAdamID:cppIDs:serverCppID:adData:instanceID:", v12, v16.super.isa, v19, v24, v27);

  v29 = v28;
  v30 = SponsoredSearchAdvert.appBinaryTraits.getter();
  if (v30)
  {
    v31 = v30;
    v32.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v31);
  }
  else
  {
    v32.super.isa = 0;
  }
  objc_msgSend(v29, "setAppBinaryTraits:", v32.super.isa);

  v33 = type metadata accessor for SponsoredSearchAdvert(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
  return v29;
}

uint64_t sub_1000BCAF0(int64_t a1, int a2, char a3, uint64_t (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  int64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  __n128 v78;
  __int128 v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  __n128 v94;
  char *v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  int v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  __int128 v120;
  __int128 v121;

  v111 = a4;
  v112 = a5;
  v12 = type metadata accessor for SponsoredSearchNativeAdvertData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OSLogger(0, v14);
  v107 = *(_QWORD *)(v17 - 8);
  v108 = v17;
  __chkstk_darwin(v17);
  v106 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AdamId(0);
  v115 = *(_QWORD *)(v19 - 8);
  v116 = v19;
  __chkstk_darwin(v19);
  v114 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v110 = (char *)&v98 - v22;
  v23 = type metadata accessor for SponsoredSearchAdvert(0);
  v24 = *(_QWORD *)(v23 - 8);
  v117 = v23;
  v118 = v24;
  __chkstk_darwin(v23);
  v113 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v98 - v27;
  v104 = v13;
  v103 = a2;
  v102 = v16;
  if (!a1)
  {
    v105 = 0;
    v36 = 0;
    v37 = 0;
    goto LABEL_47;
  }
  v100 = a6;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v97 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v97 = a1;
    swift_bridgeObjectRetain(a1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v97);
  }
  else
  {
    v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v101 = a7;
  if (v29)
  {
    *(_QWORD *)&v120 = _swiftEmptyArrayStorage;
    sub_100021C8C(0, v29 & ~(v29 >> 63), 0);
    if (v29 < 0)
    {
      __break(1u);
LABEL_60:
      result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
      return result;
    }
    v30 = 0;
    v31 = (_QWORD *)v120;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a1);
      else
        v32 = *(id *)(a1 + 8 * v30 + 32);
      sub_1000BD404(v32, (uint64_t)v28);
      *(_QWORD *)&v120 = v31;
      v34 = v31[2];
      v33 = v31[3];
      v35 = v31;
      if (v34 >= v33 >> 1)
      {
        sub_100021C8C(v33 > 1, v34 + 1, 1);
        v35 = (_QWORD *)v120;
      }
      ++v30;
      v35[2] = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v118 + 32))((unint64_t)v35+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(_QWORD *)(v118 + 72) * v34, v28, v117);
      v31 = v35;
    }
    while (v29 != v30);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    v31 = _swiftEmptyArrayStorage;
  }
  v99 = v12;
  v105 = v31;
  if ((a3 & 1) == 0)
  {
    a1 = 0;
LABEL_35:
    v61 = v31[2];
    v62 = _swiftEmptyArrayStorage;
    if (v61)
    {
      v119 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v31);
      sub_100021A14(0, v61, 0);
      v63 = (char *)v31
          + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
      v64 = *(_QWORD *)(v118 + 72);
      v111 = *(uint64_t (**)(char *, char *, uint64_t))(v118 + 16);
      v112 = v64;
      v65 = v113;
      do
      {
        v66 = v117;
        v67 = v111(v65, v63, v117);
        *(_QWORD *)&v120 = 0;
        *((_QWORD *)&v120 + 1) = 0xE000000000000000;
        v68 = v114;
        v69 = SponsoredSearchAdvert.adamId.getter(v67);
        v70 = AdamId.stringValue.getter(v69);
        v72 = v71;
        (*(void (**)(char *, uint64_t))(v115 + 8))(v68, v116);
        swift_bridgeObjectRelease(*((_QWORD *)&v120 + 1));
        *(_QWORD *)&v120 = v70;
        *((_QWORD *)&v120 + 1) = v72;
        v73._countAndFlagsBits = 8250;
        v73._object = (void *)0xE200000000000000;
        String.append(_:)(v73);
        v74 = SponsoredSearchAdvert.selectedCppId.getter();
        if (v75)
        {
          v76 = v75;
        }
        else
        {
          v74 = 0x746C7561666564;
          v76 = 0xE700000000000000;
        }
        v77 = v76;
        String.append(_:)(*(Swift::String *)&v74);
        v78 = swift_bridgeObjectRelease(v76);
        v79 = v120;
        (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v65, v66, v78);
        v62 = v119;
        if ((swift_isUniquelyReferenced_nonNull_native(v119) & 1) == 0)
        {
          sub_100021A14(0, v62[2] + 1, 1);
          v62 = v119;
        }
        v81 = v62[2];
        v80 = v62[3];
        if (v81 >= v80 >> 1)
        {
          sub_100021A14(v80 > 1, v81 + 1, 1);
          v62 = v119;
        }
        v62[2] = v81 + 1;
        *(_OWORD *)&v62[2 * v81 + 4] = v79;
        v63 += v112;
        --v61;
      }
      while (v61);
      swift_bridgeObjectRelease(v105);
      v12 = v99;
    }
    *(_QWORD *)&v120 = v62;
    v82 = sub_10000DF3C(&qword_100802220);
    v83 = sub_100010F98((unint64_t *)&qword_1007FAFD0, &qword_100802220, (const char *)&protocol conformance descriptor for [A]);
    v36 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v82, v83);
    v37 = v84;
    swift_bridgeObjectRelease(v62);
    a6 = v100;
LABEL_47:
    if (qword_1007F3460 != -1)
      goto LABEL_54;
    goto LABEL_48;
  }
  swift_bridgeObjectRetain(v31);
  a1 = sub_10036AAF0((uint64_t)_swiftEmptyArrayStorage);
  v36 = v31[2];
  if (!v36)
  {
LABEL_34:
    swift_bridgeObjectRelease(v31);
    goto LABEL_35;
  }
  v38 = (char *)v31 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
  v109 = *(_QWORD *)(v118 + 72);
  swift_bridgeObjectRetain(v31);
  while (1)
  {
    v40 = v110;
    v41 = SponsoredSearchAdvert.adamId.getter(v39);
    v12 = AdamId.stringValue.getter(v41);
    a6 = v42;
    v43 = v116;
    v44 = *(uint64_t (**)(char *, uint64_t))(v115 + 8);
    v45 = v44(v40, v116);
    v46 = v114;
    SponsoredSearchAdvert.adamId.getter(v45);
    v47 = ((uint64_t (*)(char *))v111)(v46);
    v44(v46, v43);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    *(_QWORD *)&v120 = a1;
    v37 = (__int128 *)a1;
    v50 = sub_10036C324(v12, a6);
    v51 = *(_QWORD *)(a1 + 16);
    v52 = (v49 & 1) == 0;
    v53 = v51 + v52;
    if (__OFADD__(v51, v52))
      break;
    v54 = v49;
    if (*(_QWORD *)(a1 + 24) >= v53)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        a1 = v120;
        if ((v49 & 1) != 0)
          goto LABEL_19;
      }
      else
      {
        v37 = &v120;
        sub_10010DCE4();
        a1 = v120;
        if ((v54 & 1) != 0)
          goto LABEL_19;
      }
    }
    else
    {
      sub_100108DB0(v53, isUniquelyReferenced_nonNull_native);
      v37 = (__int128 *)v120;
      v55 = sub_10036C324(v12, a6);
      if ((v54 & 1) != (v56 & 1))
        goto LABEL_60;
      v50 = v55;
      a1 = v120;
      if ((v54 & 1) != 0)
      {
LABEL_19:
        *(_BYTE *)(*(_QWORD *)(a1 + 56) + v50) = v47 & 1;
        goto LABEL_20;
      }
    }
    *(_QWORD *)(a1 + 8 * (v50 >> 6) + 64) |= 1 << v50;
    v57 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v50);
    *v57 = v12;
    v57[1] = a6;
    *(_BYTE *)(*(_QWORD *)(a1 + 56) + v50) = v47 & 1;
    v58 = *(_QWORD *)(a1 + 16);
    v59 = __OFADD__(v58, 1);
    v60 = v58 + 1;
    if (v59)
      goto LABEL_53;
    *(_QWORD *)(a1 + 16) = v60;
    swift_bridgeObjectRetain(a6);
LABEL_20:
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(0x8000000000000000);
    v38 += v109;
    if (!--v36)
    {
      v31 = v105;
      swift_bridgeObjectRelease(v105);
      v12 = v99;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  swift_once(&qword_1007F3460, sub_100602484);
LABEL_48:
  v85 = v108;
  v86 = sub_1000117A8(v108, (uint64_t)qword_100857648);
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v106, v86, v85);
  v87 = sub_10000DF3C(&qword_1007FD430);
  v88 = type metadata accessor for LogMessage(0);
  v89 = swift_allocObject(v87, ((*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80))+ 6 * *(_QWORD *)(*(_QWORD *)(v88 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) | 7);
  *(_OWORD *)(v89 + 16) = xmmword_100671120;
  static LogMessage.identity(_:)(a6);
  LogMessage.init(stringLiteral:)(0x65636F7250646964, 0xED00007364417373);
  LogMessage.init(stringLiteral:)(0x637573204C4D444FLL, 0xED00003A73736563);
  *((_QWORD *)&v121 + 1) = &type metadata for Bool;
  v90 = v103;
  LOBYTE(v120) = v103 & 1;
  static LogMessage.safe(_:)(&v120);
  sub_1000131E0((uint64_t)&v120);
  LogMessage.init(stringLiteral:)(0xD000000000000016, 0x8000000100633B80);
  if (v37)
  {
    *((_QWORD *)&v121 + 1) = &type metadata for String;
    *(_QWORD *)&v120 = v36;
    *((_QWORD *)&v120 + 1) = v37;
  }
  else
  {
    v120 = 0u;
    v121 = 0u;
  }
  v91 = v104;
  static LogMessage.safe(_:)(&v120);
  sub_1000131E0((uint64_t)&v120);
  v92 = v108;
  v93 = v106;
  Logger.info(_:)(v89, v108, &protocol witness table for OSLogger);
  v94 = swift_bridgeObjectRelease(v89);
  (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v93, v92, v94);
  v95 = v102;
  SponsoredSearchNativeAdvertData.init(adverts:odmlSuccess:installedStates:)(v105, v90 & 1, a1);
  Promise.resolve(_:)(v95);
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v95, v12);
}

void sub_1000BD404(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = a2;
  v3 = type metadata accessor for AdamId(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "instanceID", v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = objc_msgSend(a1, "adamID");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  AdamId.init(value:)(v12, v14);
  v15 = objc_msgSend(a1, "assetInformation");
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v17 = objc_msgSend(a1, "adData");
  v18 = objc_msgSend(v17, "adData");

  if (v18)
  {
    v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v19 = sub_100369F50((uint64_t)_swiftEmptyArrayStorage);
  }
  v20 = objc_msgSend(a1, "selectedCppID");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = objc_msgSend(a1, "appBinaryTraits");
  if (v25)
  {
    v26 = v25;
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String);

  }
  else
  {
    v27 = 0;
  }
  SponsoredSearchAdvert.init(instanceId:adamId:assetInformation:adData:cppIds:serverCppId:selectedCppId:appBinaryTraits:)(v8, v10, v6, v16, v19, 0, 0, 0, v22, v24, v27);

}

double sub_1000BD654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  uint64_t v7;
  __n128 v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100019574(0, &qword_1007F9390, ADAppAdvertisement_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  v8 = swift_retain(v5);
  v6(v4, a3, v8);
  swift_release(v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_1000BD6CC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_1000BD6F8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SearchAdsAdvertPipeline()
{
  return objc_opt_self(_TtC22SubscribePageExtension23SearchAdsAdvertPipeline);
}

uint64_t sub_1000BD74C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1000BBC94(a1, a2, a3);
}

uint64_t sub_1000BD76C(uint64_t a1)
{
  uint64_t v1;

  return sub_1000BC2A4(a1, v1);
}

uint64_t sub_1000BD774()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_1000BD7C0()
{
  uint64_t v0;

  sub_1000BC384(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1000BD7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000BD7E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000BD7F0()
{
  _QWORD *v0;

  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000BD824(int64_t a1, int a2)
{
  uint64_t v2;

  return sub_1000BCAF0(a1, a2, *(_BYTE *)(v2 + 16), *(uint64_t (**)(char *, char *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void destroy for ScaleDownInteractiveDismissal(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for ScaleDownInteractiveDismissal(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for ScaleDownInteractiveDismissal(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  v10 = v8;

  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for ScaleDownInteractiveDismissal(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScaleDownInteractiveDismissal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScaleDownInteractiveDismissal(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScaleDownInteractiveDismissal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScaleDownInteractiveDismissal()
{
  return &type metadata for ScaleDownInteractiveDismissal;
}

uint64_t destroy for TodayCardProtectionLayerViewStyle(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s22SubscribePageExtension28PullDownInteractiveDismissalVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for PullDownInteractiveDismissal(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for PullDownInteractiveDismissal(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for PullDownInteractiveDismissal()
{
  return &type metadata for PullDownInteractiveDismissal;
}

void sub_1000BDB74(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t);
  void (*v14)(char *, uint64_t);
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGFloat v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  CGFloat v32;
  uint64_t v33;
  uint64_t i;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  unsigned int v40;
  void (*v41)(char *, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CGAffineTransform v46;
  _QWORD v47[2];

  v2 = v1;
  v4 = type metadata accessor for TimingCurve(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F9398);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46.a = 1.0;
  v47[0] = *(_QWORD *)(v2 + 32);
  v12 = enum case for TimingCurve.easeInOut(_:);
  v13 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v13(v7, enum case for TimingCurve.easeInOut(_:), v4);
  Interpolator.init(fromValue:toValue:curve:)(&v46, v47, v7, &type metadata for CGFloat, &protocol witness table for CGFloat);
  Interpolator.value(forInput:)(&v46, v8, a1);
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  CGAffineTransformMakeScale(&v46, v46.a, v46.a);
  a = v46.a;
  b = v46.b;
  c = v46.c;
  d = v46.d;
  tx = v46.tx;
  ty = v46.ty;
  objc_msgSend(*(id *)(v2 + 16), "displayCornerRadius");
  v46.a = v21;
  v47[0] = 0x402C000000000000;
  v40 = v12;
  v41 = v13;
  v42 = v4;
  v13(v7, v12, v4);
  Interpolator.init(fromValue:toValue:curve:)(&v46, v47, v7, &type metadata for CGFloat, &protocol witness table for CGFloat);
  Interpolator.value(forInput:)(&v46, v8, a1);
  v43 = v8;
  v39 = v14;
  v14(v11, v8);
  v22 = v46.a;
  v44 = v2;
  v47[0] = *(_QWORD *)v2;
  v23 = v47[0];
  if (v47[0] >> 62)
  {
    if (v47[0] >= 0)
      v29 = v47[0] & 0xFFFFFFFFFFFFFF8;
    else
      v29 = v47[0];
    swift_bridgeObjectRetain(v47[0]);
    v24 = _CocoaArrayWrapper.endIndex.getter(v29);
    if (!v24)
      goto LABEL_15;
  }
  else
  {
    v24 = *(_QWORD *)((v47[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v47[0]);
    if (!v24)
      goto LABEL_15;
  }
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  v25 = 0;
  v26 = *(_BYTE *)(v44 + 24);
  do
  {
    if ((v23 & 0xC000000000000001) != 0)
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
    else
      v27 = *(id *)(v23 + 8 * v25 + 32);
    v28 = v27;
    v46.a = a;
    v46.b = b;
    v46.c = c;
    v46.d = d;
    v46.tx = tx;
    v46.ty = ty;
    objc_msgSend(v27, "setTransform:", &v46);
    if ((v26 & 1) != 0)
      objc_msgSend(v28, "_setContinuousCornerRadius:", v22);
    ++v25;

  }
  while (v24 != v25);
LABEL_15:
  sub_1000BEAC4(v47);
  v45 = 0;
  v46.a = 1.0;
  v41(v7, v40, v42);
  Interpolator.init(fromValue:toValue:curve:)(&v46, &v45, v7, &type metadata for CGFloat, &protocol witness table for CGFloat);
  v30 = v43;
  Interpolator.value(forInput:)(&v46, v43, a1);
  v39(v11, v30);
  v31 = v46.a;
  v32 = *(double *)(v44 + 8);
  v46.a = v32;
  if (!(*(_QWORD *)&v32 >> 62))
  {
    v33 = *(_QWORD *)((*(_QWORD *)&v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v32);
    if (v33)
      goto LABEL_17;
LABEL_27:
    sub_1000BEAC4(&v46);
    return;
  }
  if (v32 >= 0.0)
    v37 = *(_QWORD *)&v32 & 0xFFFFFFFFFFFFFF8;
  else
    v37 = *(_QWORD *)&v32;
  swift_bridgeObjectRetain(*(_QWORD *)&v32);
  v33 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (!v33)
    goto LABEL_27;
LABEL_17:
  if (v33 >= 1)
  {
    for (i = 0; i != v33; ++i)
    {
      if ((*(_QWORD *)&v32 & 0xC000000000000001) != 0)
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, *(_QWORD *)&v32);
      else
        v35 = *(id *)(*(_QWORD *)&v32 + 8 * i + 32);
      v36 = v35;
      objc_msgSend(v35, "setAlpha:", v31);

    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
}

void sub_1000BDF54()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  __int128 v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_100727198, 56, 7);
  v3 = *((_OWORD *)v0 + 1);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = v0[4];
  v18 = sub_1000BEA54;
  v19 = v2;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_1000BD6CC;
  v17 = &unk_1007271B0;
  v4 = _Block_copy(&v14);
  v5 = *v0;
  v20 = v0[1];
  v21 = v5;
  v6 = (void *)v0[2];
  v7 = v19;
  sub_1000BEA5C(&v21);
  sub_1000BEA5C(&v20);
  v8 = v6;
  swift_release(v7);
  v9 = swift_allocObject(&unk_1007271E8, 56, 7);
  v10 = *((_OWORD *)v0 + 1);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 48) = v0[4];
  v18 = sub_1000BEABC;
  v19 = v9;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100129140;
  v17 = &unk_100727200;
  v11 = _Block_copy(&v14);
  v12 = v19;
  sub_1000BEA5C(&v21);
  sub_1000BEA5C(&v20);
  v13 = v8;
  swift_release(v12);
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v4, v11, 0.15);
  _Block_release(v11);
  _Block_release(v4);
}

void sub_1000BE0E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD v15[6];
  uint64_t v16;

  v14 = a1;
  v1 = *a1;
  v16 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v7 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v7 = v1;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v7);
    if (!v2)
      goto LABEL_15;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (!v2)
      goto LABEL_15;
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  v3 = 0;
  v4 = *((_BYTE *)v14 + 24);
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
    else
      v5 = *(id *)(v1 + 8 * v3 + 32);
    v6 = v5;
    v15[1] = 0;
    v15[2] = 0;
    v15[0] = 0x3FF0000000000000;
    v15[3] = 0x3FF0000000000000;
    v15[4] = 0;
    v15[5] = 0;
    objc_msgSend(v5, "setTransform:", v15, v14);
    if ((v4 & 1) != 0)
      objc_msgSend(v6, "_setContinuousCornerRadius:", 0.0);
    ++v3;

  }
  while (v2 != v3);
LABEL_15:
  sub_1000BEAC4(&v16);
  v8 = v14[1];
  v15[0] = v8;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_17;
LABEL_27:
    sub_1000BEAC4(v15);
    return;
  }
  if (v8 >= 0)
    v13 = v8 & 0xFFFFFFFFFFFFFF8;
  else
    v13 = v8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v9)
    goto LABEL_27;
LABEL_17:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      else
        v11 = *(id *)(v8 + 8 * i + 32);
      v12 = v11;
      objc_msgSend(v11, "setAlpha:", 1.0, v14, v15[0]);

    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
}

void sub_1000BE2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)a2;
  v10 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v9 = v3 & 0xFFFFFFFFFFFFFF8;
    else
      v9 = v3;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (v4)
      goto LABEL_3;
LABEL_15:
    sub_1000BEAC4(&v10);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v4)
    goto LABEL_15;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    v6 = *(_BYTE *)(a2 + 24);
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
        if ((v6 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        v7 = *(id *)(v3 + 8 * v5 + 32);
        if ((v6 & 1) != 0)
        {
LABEL_10:
          v8 = objc_msgSend(v7, "layer");
          objc_msgSend(v8, "setMaskedCorners:", 15);

          v7 = v8;
        }
      }
      ++v5;

      if (v4 == v5)
        goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_1000BE3E4()
{
  uint64_t *v0;

  return sub_1000BEAEC(*v0);
}

void sub_1000BE400(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  CGFloat Height;
  void (*v20)(char *, uint64_t, uint64_t);
  __n128 v21;
  uint64_t v22;
  double a;
  uint64_t v24;
  uint64_t i;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  CGAffineTransform v33;
  double v34;
  CGRect v35;

  v8 = type metadata accessor for TimingCurve(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F9398);
  v32 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v14)
      goto LABEL_3;
LABEL_14:
    v21 = swift_bridgeObjectRelease(a1);
    v16 = enum case for TimingCurve.easeInOut(_:);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    goto LABEL_15;
  }
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v14)
    goto LABEL_14;
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  v29 = a2;
  v15 = 0;
  v16 = enum case for TimingCurve.easeInOut(_:);
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
    else
      v17 = *(id *)(a1 + 8 * v15 + 32);
    v18 = v17;
    ++v15;
    objc_msgSend(v17, "frame", v29);
    Height = CGRectGetHeight(v35);
    v33.a = 0.0;
    v34 = Height * a4;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v20(v10, v16, v31);
    Interpolator.init(fromValue:toValue:curve:)(&v33, &v34, v10, &type metadata for CGFloat, &protocol witness table for CGFloat);
    Interpolator.value(forInput:)(&v33, v11, a3);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v11);
    CGAffineTransformMakeTranslation(&v33, 0.0, v33.a);
    objc_msgSend(v18, "setTransform:", &v33);

  }
  while (v14 != v15);
  v21 = swift_bridgeObjectRelease(a1);
  a2 = v29;
LABEL_15:
  v33.a = 1.0;
  v34 = 0.0;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v20)(v10, v16, v31, v21);
  Interpolator.init(fromValue:toValue:curve:)(&v33, &v34, v10, &type metadata for CGFloat, &protocol witness table for CGFloat);
  Interpolator.value(forInput:)(&v33, v11, a3);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v11);
  a = v33.a;
  if (!((unint64_t)a2 >> 62))
  {
    v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v24)
      goto LABEL_17;
LABEL_27:
    swift_bridgeObjectRelease(a2);
    return;
  }
  if (a2 < 0)
    v28 = a2;
  else
    v28 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v24 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v24)
    goto LABEL_27;
LABEL_17:
  if (v24 >= 1)
  {
    for (i = 0; i != v24; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      else
        v26 = *(id *)(a2 + 8 * i + 32);
      v27 = v26;
      objc_msgSend(v26, "setAlpha:", a);

    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1000BE750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[6];

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v9);
    v4 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  v6 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
    else
      v7 = *(id *)(a1 + 8 * v6 + 32);
    v8 = v7;
    ++v6;
    v15[1] = 0;
    v15[2] = 0;
    v15[0] = 0x3FF0000000000000;
    v15[3] = 0x3FF0000000000000;
    v15[4] = 0;
    v15[5] = 0;
    objc_msgSend(v7, "setTransform:", v15);

  }
  while (v4 != v6);
LABEL_13:
  swift_bridgeObjectRelease(a1);
  if (!((unint64_t)a2 >> 62))
  {
    v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a2);
    if (v10)
      goto LABEL_15;
    return swift_bridgeObjectRelease(a2);
  }
  if (a2 < 0)
    v14 = a2;
  else
    v14 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease(a2);
LABEL_15:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      else
        v12 = *(id *)(a2 + 8 * i + 32);
      v13 = v12;
      objc_msgSend(v12, "setAlpha:", 1.0);

    }
    return swift_bridgeObjectRelease(a2);
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1000BE900(double a1)
{
  uint64_t v1;

  sub_1000BE400(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), a1, *(double *)(v1 + 16));
}

void sub_1000BE90C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  _QWORD v8[5];
  _QWORD *v9;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = (void *)objc_opt_self(UIView);
  v5 = (_QWORD *)swift_allocObject(&unk_100727148, 40, 7);
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  v8[4] = sub_1000BEA2C;
  v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000BD6CC;
  v8[3] = &unk_100727160;
  v6 = _Block_copy(v8);
  v7 = v9;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  swift_release(v7);
  objc_msgSend(v4, "animateWithDuration:animations:", v6, 0.15);
  _Block_release(v6);
}

uint64_t sub_1000BEA00()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000BEA2C()
{
  uint64_t v0;

  return sub_1000BE750(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000BEA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000BEA48(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000BEA54()
{
  uint64_t v0;

  sub_1000BE0E0((uint64_t *)(v0 + 16));
}

_QWORD *sub_1000BEA5C(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

uint64_t sub_1000BEA88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1000BEABC(uint64_t a1)
{
  uint64_t v1;

  sub_1000BE2BC(a1, v1 + 16);
}

_QWORD *sub_1000BEAC4(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t sub_1000BEAEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[6];

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v7 = a1;
  else
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v7);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v8[1] = 0;
      v8[2] = 0;
      v8[0] = 0x3FF0000000000000;
      v8[3] = 0x3FF0000000000000;
      v8[4] = 0;
      v8[5] = 0;
      objc_msgSend(v5, "setTransform:", v8);

    }
    while (v2 != v4);
    return swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_1000BEC28()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  void (*v34)(_QWORD);
  double left;
  double bottom;
  double right;
  __int128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  __n128 v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  __n128 v54;
  __int128 v55;
  __n128 v56;
  double v57;
  double v58;
  __int128 v59;
  __n128 v60;
  uint64_t result;
  int64x2_t v62;
  double v63;
  double top;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = &v62.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v6 = (int64x2_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = &v62.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v62.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v62.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v62.i8[-v17];
  v19 = sub_10000DF3C(&qword_1007F5878);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v66 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100671120;
  v65 = v24;
  v69 = v24 + v23;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v25 = xmmword_100856810;
  v72[0] = 0x3FF0000000000000;
  v26 = sub_100020838();
  v27 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4030000000000000;
  v72[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v27);
  v72[0] = 0x4030000000000000;
  v71 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v28);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v34 = *(void (**)(_QWORD))(v4 + 104);
  v68 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v67 = (void (*)(int64x2_t *, _QWORD, uint64_t))v34;
  v34(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v38 = xmmword_100856820;
  v72[0] = 0x3FF0000000000000;
  v39 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v39);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v40);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v38, *((double *)&v38 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v43 = xmmword_100856830;
  v71 = 0x4000000000000000;
  v72[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v42);
  v72[0] = 0x4034000000000000;
  v44 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v44);
  v62 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v63 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v43, *((double *)&v43 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v45 = xmmword_100856870;
  v72[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v46);
  *v6 = v62;
  v67(v6, v68, v70);
  v47 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v45, *((double *)&v45 + 1), v47, v49, v51, v53);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v55 = xmmword_100856880;
  v71 = 0x4000000000000000;
  v72[0] = 0x4004000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v54);
  v72[0] = 0x4038000000000000;
  v56 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v56);
  v62 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v58 = v63;
  v57 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v55, *((double *)&v55 + 1), top, v63, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v59 = xmmword_100856890;
  v72[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v60);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v59, *((double *)&v59 + 1), v57, v58, bottom, right);
  qword_1008517B8 = v65;
  return result;
}

uint64_t sub_1000BF54C()
{
  uint64_t v0;

  v0 = type metadata accessor for DebugMetricsViewModel(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_1000C04C4();
}

uint64_t sub_1000BF580@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double (**v63)();
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  void *v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;

  v2 = v1;
  v88 = a1;
  v3 = sub_10000DF3C(&qword_1007F9490);
  v4 = __chkstk_darwin(v3);
  v87 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for SearchFieldPlacement(0, v4);
  v81 = *(_QWORD *)(v83 - 8);
  v6 = __chkstk_darwin(v83);
  v78 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for PlainListStyle(0, v6);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10000DF3C(&qword_1007F9498);
  v66 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_10000DF3C(&qword_1007F94A0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_10000DF3C(&qword_1007F94A8);
  v72 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v70 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_10000DF3C(&qword_1007F94B0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v74 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F94B8);
  v85 = *(_QWORD *)(v16 - 8);
  v86 = v16;
  __chkstk_darwin(v16);
  v84 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1[1];
  v19 = v1[2];
  v20 = *((unsigned __int8 *)v1 + 24);
  v21 = type metadata accessor for DebugMetricsViewModel(0);
  v22 = sub_10000E99C(&qword_1007F94C0, type metadata accessor for DebugMetricsViewModel, (uint64_t)&unk_100674280);
  v82 = v18;
  v80 = v19;
  v79 = v20;
  v23 = StateObject.wrappedValue.getter(v18, v19, v20, v21, v22);
  v94 = *((_OWORD *)v2 + 2);
  v95 = v2[6];
  v91 = *((_OWORD *)v2 + 2);
  v92 = v2[6];
  v65 = sub_10000DF3C(&qword_1007F94C8);
  State.wrappedValue.getter(&v89);
  v24 = v89;
  if ((*((_QWORD *)&v89 + 1) & 0x2000000000000000) != 0)
    v25 = HIBYTE(*((_QWORD *)&v89 + 1)) & 0xFLL;
  else
    v25 = v89 & 0xFFFFFFFFFFFFLL;
  KeyPath = swift_getKeyPath(&unk_100674328);
  v27 = swift_getKeyPath(&unk_100674350);
  static Published.subscript.getter(&v91, v23, KeyPath, v27);
  if (v25)
  {
    swift_release(KeyPath);
    swift_release(v27);
    v28 = v91;
    swift_bridgeObjectRetain(*((_QWORD *)&v24 + 1));
    v29 = sub_1000C0810(v28, v24, *((uint64_t *)&v24 + 1));
    swift_release(v23);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease_n(*((_QWORD *)&v24 + 1), 2);
  }
  else
  {
    swift_release(v23);
    swift_bridgeObjectRelease(*((_QWORD *)&v24 + 1));
    swift_release(KeyPath);
    swift_release(v27);
    v29 = (_QWORD *)v91;
  }
  v97 = v94;
  v30 = sub_1000C0D84((uint64_t)&v95, (uint64_t)&v96);
  *(_QWORD *)&v91 = v29;
  __chkstk_darwin(v30);
  v31 = sub_10000DF3C(&qword_1007F94D8);
  v32 = sub_1000C0DD8();
  List<>.init(content:)(sub_1000C0DCC, &v65 - 6, v31, v32);
  v33 = swift_bridgeObjectRelease(v91);
  v34 = v9;
  PlainListStyle.init()(v33);
  v35 = sub_100010F98(&qword_1007F94F8, &qword_1007F9498, (const char *)&protocol conformance descriptor for List<A, B>);
  v36 = v9;
  v37 = v67;
  v38 = v69;
  View.listStyle<A>(_:)(v36, v67, v69, v35, &protocol witness table for PlainListStyle);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v38);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v37);
  v89 = v94;
  v90 = v95;
  v39 = State.projectedValue.getter(&v91, v65);
  v40 = v91;
  v41 = v92;
  v42 = v93;
  v43 = v78;
  static SearchFieldPlacement.automatic.getter(v39);
  *(_QWORD *)&v91 = v37;
  *((_QWORD *)&v91 + 1) = v38;
  v92 = v35;
  v93 = &protocol witness table for PlainListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v45 = v73;
  v46 = v70;
  View.searchable(text:placement:prompt:)(v40, *((_QWORD *)&v40 + 1), v41, v42, v43, 0, 0, 0, 0, v73, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v42);
  swift_release(*((_QWORD *)&v40 + 1));
  v47 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v43, v83, v47);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v13, v45);
  *(_QWORD *)&v91 = v45;
  *((_QWORD *)&v91 + 1) = OpaqueTypeConformance2;
  v48 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.searchable(text:placement:prompt:)>>, 1);
  v49 = v74;
  v50 = v75;
  View.keyboardType(_:)(1, v75, v48);
  v51 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v46, v50);
  v52 = (uint64_t)v87;
  static TextInputAutocapitalization.never.getter(v51);
  v53 = type metadata accessor for TextInputAutocapitalization(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
  *(_QWORD *)&v91 = v50;
  *((_QWORD *)&v91 + 1) = v48;
  v54 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.keyboardType(_:)>>, 1);
  v55 = v84;
  v56 = v77;
  View.textInputAutocapitalization(_:)(v52, v77, v54);
  sub_100011088(v52, &qword_1007F9490);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v49, v56);
  v57 = *v2;
  v58 = swift_allocObject(&unk_1007272C0, 72, 7);
  v59 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v58 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v58 + 32) = v59;
  *(_OWORD *)(v58 + 48) = *((_OWORD *)v2 + 2);
  *(_QWORD *)(v58 + 64) = v2[6];
  v61 = v85;
  v60 = v86;
  v62 = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v88, v55, v86);
  v63 = (double (**)())(v62 + *(int *)(sub_10000DF3C(&qword_1007F9500) + 36));
  *v63 = sub_1000C0E94;
  v63[1] = (double (*)())v58;
  v63[2] = 0;
  v63[3] = 0;
  swift_retain(v57);
  sub_1000C0AE0(v82, v80);
  sub_1000ADB10((uint64_t)&v97);
  sub_1000C0E9C(&v96);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v55, v60);
}

uint64_t sub_1000BFD44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;

  v2 = type metadata accessor for DebugMetricsEventDetailView(0);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = a1;
  v5 = type metadata accessor for DebugMetricsEvent(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  v6 = type metadata accessor for DebugMetricsEventDetailView.Summary(0);
  v7 = sub_10000E99C(&qword_1007F9548, type metadata accessor for DebugMetricsEventDetailView.Summary, (uint64_t)&unk_10069A224);
  v8 = sub_10000E99C(&qword_1007F9550, type metadata accessor for DebugMetricsEventDetailView, (uint64_t)&unk_10069A1D4);
  return NavigationLink.init(destination:label:)(v4, sub_1000C0F70, v10, v6, v2, v7, v8);
}

double sub_1000BFE4C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *((unsigned __int8 *)a1 + 24);
  v5 = type metadata accessor for DebugMetricsViewModel(0);
  v6 = sub_10000E99C(&qword_1007F94C0, type metadata accessor for DebugMetricsViewModel, (uint64_t)&unk_100674280);
  v7 = StateObject.wrappedValue.getter(v2, v3, v4, v5, v6);
  v8 = *a1;
  v9 = *(_QWORD *)(v7
                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_recorder);
  *(_QWORD *)(v7
            + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_recorder) = v8;
  swift_retain_n(v8, 2);
  swift_release(v9);
  sub_1000BFF90();
  swift_release(v7);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_1000BFF04()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1000BFF1C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100674328);
  v2 = swift_getKeyPath(&unk_100674350);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_1000BFF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33[3];
  _BYTE v34[24];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F9508);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F9510);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F9518);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v6;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100173488((uint64_t)_swiftEmptyArrayStorage);
    v13 = v30;
  }
  else
  {
    v13 = &_swiftEmptySetSingleton;
  }
  v14 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_cancellables);
  swift_beginAccess(v1+ OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_cancellables, v34, 1, 0);
  v15 = *v14;
  *v14 = (uint64_t)v13;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  v17 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_recorder);
  if (v17)
  {
    v18 = swift_retain(*(_QWORD *)(v1
                                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_recorder));
    DebugMetricsEventRecorder.$events.getter(v18);
    v19 = sub_1000C0EC4();
    v33[0] = (id)static OS_dispatch_queue.main.getter(v20);
    v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
    v22 = sub_100010F98(&qword_1007F9520, &qword_1007F9510, (const char *)&protocol conformance descriptor for Published<A>.Publisher);
    v31 = v10;
    v23 = v22;
    v24 = sub_10000E99C(&qword_1007F9528, (uint64_t (*)(uint64_t))sub_1000C0EC4, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    Publisher.receive<A>(on:options:)(v33, v4, v5, v19, v23, v24);
    sub_100011088((uint64_t)v4, &qword_1007F9508);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v5);
    v25 = swift_allocObject(&unk_1007272E8, 24, 7);
    swift_weakInit(v25 + 16, v1);
    v26 = sub_100010F98(&qword_1007F9530, &qword_1007F9518, (const char *)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v27 = Publisher<>.sink(receiveValue:)(sub_1000C0F24, v25, v9, v26);
    v28 = swift_release(v25);
    (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v12, v9, v28);
    v29 = swift_beginAccess(v14, v33, 33, 0);
    AnyCancellable.store(in:)(v14, v29);
    swift_endAccess(v33);
    swift_release(v17);
    *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000C028C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    swift_bridgeObjectRetain(v2);
    sub_100500BB4(v6);
    v8 = v7;
    KeyPath = swift_getKeyPath(&unk_100674328);
    v10 = swift_getKeyPath(&unk_100674350);
    v11 = v8;
    return static Published.subscript.setter(&v11, v5, KeyPath, v10);
  }
  return result;
}

uint64_t sub_1000C0324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel__eventsSnapshot;
  v2 = sub_10000DF3C(&qword_1007F9488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_cancellables));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_recorder));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000C0398()
{
  return type metadata accessor for DebugMetricsViewModel(0);
}

uint64_t type metadata accessor for DebugMetricsViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F93E0;
  if (!qword_1007F93E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugMetricsViewModel);
  return result;
}

void sub_1000C03DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1000C0460(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = "\b";
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_1000C0460(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F93F0)
  {
    v2 = sub_100010EF8((uint64_t *)&unk_1007F93F8);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F93F0);
  }
}

void *sub_1000C04B8()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1000C04C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  double *v10;

  v1 = sub_10000DF3C(&qword_1007F9488);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0
     + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel__eventsSnapshot;
  v10 = _swiftEmptyArrayStorage;
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F93F8);
  Published.init(initialValue:)(&v10, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100173488((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v7 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_cancellables) = v7;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC22SubscribePageExtensionP33_17375FEEA59F428BB04A47F3A54B437721DebugMetricsViewModel_recorder) = 0;
  return v0;
}

uint64_t sub_1000C05C4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1000C05EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100674328);
  v5 = swift_getKeyPath(&unk_100674350);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1000C0668(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100674328);
  v5 = swift_getKeyPath(&unk_100674350);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1000C06E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = *a1;
  v5 = v14;
  v6 = swift_allocObject(&unk_100727310, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  swift_bridgeObjectRetain(v5);
  swift_retain(a3);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F93F8);
  v8 = type metadata accessor for UUID(0);
  v9 = sub_10000DF3C(&qword_1007F94F0);
  v10 = sub_100010F98(&qword_1007F9538, (uint64_t *)&unk_1007F93F8, (const char *)&protocol conformance descriptor for [A]);
  v11 = sub_100010F98(&qword_1007F94E8, &qword_1007F94F0, (const char *)&protocol conformance descriptor for NavigationLink<A, B>);
  v12 = sub_10000E99C(&qword_1007F9540, (uint64_t (*)(uint64_t))&type metadata accessor for DebugMetricsEvent, (uint64_t)&protocol conformance descriptor for DebugMetricsEvent);
  return ((uint64_t (*)(uint64_t *, uint64_t (*)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))ForEach<>.init(_:content:))(&v14, sub_1000C0F50, v6, v7, v8, v9, v10, v11, v12);
}

_QWORD *sub_1000C0810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t i;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  __n128 v28;
  void (*v29)(char *, char *, uint64_t, __n128);
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t (*v37)(char *, unint64_t, uint64_t, __n128);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  _QWORD *v45;

  v41 = a2;
  v42 = a3;
  v5 = sub_10000DF3C(&qword_10081BD20);
  __chkstk_darwin(v5);
  v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DebugMetricsEvent(0);
  __chkstk_darwin(v7);
  v40 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - v12;
  result = _swiftEmptyArrayStorage;
  v45 = _swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v33 = v3;
    v16 = *(_QWORD *)(v10 + 72);
    v35 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v17 = a1 + v35;
    v37 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
    v36 = (char *)&type metadata for Any + 8;
    v38 = v10;
    v34 = v7;
    for (i = v37(v13, a1 + v35, v7, v11); ; i = v37(v13, v17, v7, v19))
    {
      v20 = DebugMetricsEvent.fields.getter(i);
      v21 = Dictionary.description.getter(v20, &type metadata for String, v36, &protocol witness table for String);
      v23 = v22;
      swift_bridgeObjectRelease(v20);
      v43[2] = v21;
      v44 = v23;
      v43[0] = v41;
      v43[1] = v42;
      v24 = type metadata accessor for Locale(0);
      v25 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v39, 1, 1, v24);
      v26 = sub_1000C0FAC();
      StringProtocol.range<A>(of:options:range:locale:)(v43, 1, 0, 0, 1, v25, &type metadata for String, &type metadata for String, v26, v26);
      LOBYTE(v20) = v27;
      sub_100011088(v25, &qword_10081BD20);
      v28 = swift_bridgeObjectRelease(v44);
      if ((v20 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v7);
      }
      else
      {
        v29 = *(void (**)(char *, char *, uint64_t, __n128))(v38 + 32);
        v29(v40, v13, v7, v28);
        v30 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
        {
          sub_100021CB8(0, v30[2] + 1, 1);
          v30 = v45;
        }
        v32 = v30[2];
        v31 = v30[3];
        if (v32 >= v31 >> 1)
        {
          sub_100021CB8(v31 > 1, v32 + 1, 1);
          v30 = v45;
        }
        v30[2] = v32 + 1;
        v7 = v34;
        ((void (*)(char *, char *, uint64_t))v29)((char *)v30 + v35 + v32 * v16, v40, v34);
        v45 = v30;
      }
      v17 += v16;
      if (!--v15)
        break;
    }
    return v45;
  }
  return result;
}

uint64_t sub_1000C0AE0(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

double destroy for DebugMetricsView(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  sub_1000C0B24(a1[1], a1[2]);
  swift_bridgeObjectRelease(a1[5]);
  *(_QWORD *)&result = swift_release(a1[6]).n128_u64[0];
  return result;
}

uint64_t sub_1000C0B24(uint64_t a1, uint64_t a2)
{
  return swift_release(a2);
}

uint64_t initializeWithCopy for DebugMetricsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  v6 = a2[2];
  v7 = *((_BYTE *)a2 + 24);
  swift_retain(v4);
  sub_1000C0AE0(v5, v6);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v8;
  v9 = a2[6];
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithCopy for DebugMetricsView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a2[2];
  v8 = *((_BYTE *)a2 + 24);
  sub_1000C0AE0(v6, v7);
  v9 = a1[1];
  v10 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  *((_BYTE *)a1 + 24) = v8;
  sub_1000C0B24(v9, v10);
  a1[4] = a2[4];
  v11 = a2[5];
  v12 = a1[5];
  a1[5] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = a1[6];
  v14 = a2[6];
  a1[6] = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

uint64_t *assignWithTake for DebugMetricsView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = *((_BYTE *)a2 + 24);
  v6 = a1[1];
  v7 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = v5;
  sub_1000C0B24(v6, v7);
  a1[4] = a2[4];
  swift_bridgeObjectRelease(a1[5]);
  v8 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugMetricsView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugMetricsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugMetricsView()
{
  return &type metadata for DebugMetricsView;
}

uint64_t sub_1000C0D6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0500, 1);
}

uint64_t sub_1000C0D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F94D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C0DCC()
{
  uint64_t v0;

  return sub_1000C06E0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1000C0DD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1007F94E0;
  if (!qword_1007F94E0)
  {
    v1 = sub_100010EF8(&qword_1007F94D8);
    v2 = sub_100010F98(&qword_1007F94E8, &qword_1007F94F0, (const char *)&protocol conformance descriptor for NavigationLink<A, B>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1007F94E0);
  }
  return result;
}

uint64_t sub_1000C0E54()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_1000C0B24(v0[3], v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_1000C0E94()
{
  uint64_t v0;

  return sub_1000BFE4C((uint64_t *)(v0 + 16));
}

_QWORD *sub_1000C0E9C(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

unint64_t sub_1000C0EC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100801C70;
  if (!qword_100801C70)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100801C70);
  }
  return result;
}

uint64_t sub_1000C0F00()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C0F24(uint64_t *a1)
{
  uint64_t v1;

  return sub_1000C028C(a1, v1);
}

uint64_t sub_1000C0F2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C0F50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000C0F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for DebugMetricsEvent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1000C0FAC()
{
  unint64_t result;

  result = qword_1007FAF80;
  if (!qword_1007FAF80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1007FAF80);
  }
  return result;
}

unint64_t sub_1000C0FF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  result = qword_1007F9558;
  if (!qword_1007F9558)
  {
    v1 = sub_100010EF8(&qword_1007F9500);
    v2 = sub_100010EF8(&qword_1007F94B0);
    v3 = sub_100010EF8(&qword_1007F94A8);
    v4 = sub_100010EF8(&qword_1007F94A0);
    v10 = sub_100010EF8(&qword_1007F9498);
    v11 = type metadata accessor for PlainListStyle(255, v5);
    v12 = sub_100010F98(&qword_1007F94F8, &qword_1007F9498, (const char *)&protocol conformance descriptor for List<A, B>);
    v13 = &protocol witness table for PlainListStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    v10 = v4;
    v11 = OpaqueTypeConformance2;
    v7 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.searchable(text:placement:prompt:)>>, 1);
    v10 = v3;
    v11 = v7;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.keyboardType(_:)>>, 1);
    v10 = v2;
    v11 = v8;
    v9[0] = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.textInputAutocapitalization(_:)>>, 1);
    v9[1] = &protocol witness table for _AppearanceActionModifier;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v9);
    atomic_store(result, (unint64_t *)&qword_1007F9558);
  }
  return result;
}

id UIView.withAccessibilityIdentifier(_:)()
{
  NSString v0;
  id v2;

  v0 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setAccessibilityIdentifier:", v0);

  return v2;
}

void sub_1000C1190(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  void *v98;
  uint64_t v99;
  __n128 v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  __n128 v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE v137[32];
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD v141[6];

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowPreviewDestination.ContentType(0);
  v10 = __chkstk_darwin(v9);
  v125 = (uint64_t)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for FlowPage(0, v10);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F9670);
  __chkstk_darwin(v13);
  v132 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v123 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v123 - v19;
  v21 = v2 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v23 = (void *)Strong;
    v131 = a2;
    v24 = v21;
    dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

    v25 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v25) == 1)
    {
      sub_100011088((uint64_t)v20, &qword_1007F9670);
    }
    else
    {
      ReadOnlyLens.value.getter(&v138, v25);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v25);
      sub_100010F3C(&v138, (uint64_t)v141);
      sub_100011020((uint64_t)v141, (uint64_t)&v136);
      v27 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v28 = sub_10000DF3C(&qword_1007F96C8);
      if ((swift_dynamicCast(&v133, &v136, v27, v28, 6) & 1) != 0)
      {
        sub_100010F3C(&v133, (uint64_t)&v138);
        v29 = v139;
        v30 = v140;
        sub_100011064(&v138, v139);
        v31 = dispatch thunk of ClickableModel.clickAction.getter(v29, v30);
        if (v31)
        {
          v32 = v31;
          v33 = type metadata accessor for FlowAction(0);
          v34 = swift_dynamicCastClass(v32, v33);
          if (v34)
          {
            v36 = v34;
            v130 = a1;
            v37 = v126;
            v38 = FlowAction.page.getter(v35);
            v39 = FlowPage.isPreviewingSupported.getter(v38);
            (*(void (**)(char *, uint64_t))(v127 + 8))(v37, v128);
            if ((v39 & 1) == 0)
            {
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
              swift_release(v32);
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v138);
              a1 = v130;
              goto LABEL_15;
            }
            sub_100011020((uint64_t)v141, (uint64_t)&v136);
            v40 = type metadata accessor for TodayCard(0);
            v41 = swift_dynamicCast(&v133, &v136, v27, v40, 6);
            a1 = v130;
            if ((v41 & 1) == 0)
            {
              v76 = v139;
              v77 = v140;
              sub_100011064(&v138, v139);
              v78 = swift_retain(v32);
              dispatch thunk of ClickableModel.clickSender.getter(&v136, v76, v77, v78);
              v79 = v125;
              sub_1000C1DE4((uint64_t)v141, v125);
              v80 = v131;
              FlowPreviewDestination.init(flowAction:sender:contentType:)(v36, &v136, v79);
              swift_release(v32);
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
              v82 = type metadata accessor for FlowPreviewDestination(0, v81);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v80, 0, 1, v82);
LABEL_73:
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v138);
              return;
            }
            swift_release(v32);
            v42 = v133;
          }
          else
          {
            v42 = v32;
          }
          swift_release(v42);
        }
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v138);
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
        sub_100011088((uint64_t)&v133, &qword_1007F96D0);
      }
    }
LABEL_15:
    v21 = v24;
    a2 = v131;
  }
  v43 = swift_unknownObjectWeakLoadStrong(v21);
  if (!v43)
    goto LABEL_64;
  v44 = (void *)v43;
  v130 = v21;
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

  v45 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v17, 1, v45) == 1)
  {
    v47 = &qword_1007F9670;
    v48 = (__int128 *)v17;
LABEL_36:
    sub_100011088((uint64_t)v48, v47);
    v21 = v130;
    goto LABEL_64;
  }
  ReadOnlyLens.value.getter(&v138, v45);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v45);
  sub_100010F3C(&v138, (uint64_t)v141);
  sub_100011020((uint64_t)v141, (uint64_t)&v136);
  v49 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v50 = sub_10000DF3C(&qword_1007F96C8);
  if ((swift_dynamicCast(&v133, &v136, v49, v50, 6) & 1) == 0)
  {
    v135 = 0;
    v133 = 0u;
    v134 = 0u;
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
    v47 = &qword_1007F96D0;
    v48 = &v133;
    goto LABEL_36;
  }
  v124 = v49;
  sub_100010F3C(&v133, (uint64_t)&v138);
  v51 = v139;
  v52 = v140;
  sub_100011064(&v138, v139);
  v53 = dispatch thunk of ClickableModel.clickAction.getter(v51, v52);
  v21 = v130;
  if (!v53)
    goto LABEL_54;
  v54 = v53;
  v55 = type metadata accessor for CompoundAction(0);
  v56 = swift_dynamicCastClass(v54, v55);
  if (!v56)
  {
    v75 = v54;
LABEL_53:
    swift_release(v75);
LABEL_54:
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
LABEL_63:
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v138);
LABEL_64:
    v96 = swift_unknownObjectWeakLoadStrong(v21);
    if (!v96)
    {
LABEL_79:
      v122 = type metadata accessor for FlowPreviewDestination(0, v97);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(a2, 1, 1, v122);
      return;
    }
    v98 = (void *)v96;
    v99 = IndexPath.section.getter(v96);
    IndexPath.init(item:section:)(0, v99, v100);
    v101 = v132;
    dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(v8);

    v102 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v103 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
    v104 = *(_QWORD *)(v103 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103) == 1)
    {
      sub_100011088(v102, &qword_1007F9670);
      goto LABEL_79;
    }
    ReadOnlyLens.value.getter(&v138, v103);
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v102, v103);
    sub_100010F3C(&v138, (uint64_t)v141);
    sub_100011020((uint64_t)v141, (uint64_t)&v136);
    v105 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v106 = sub_10000DF3C(&qword_1007F96B0);
    if ((swift_dynamicCast(&v133, &v136, v105, v106, 6) & 1) == 0)
    {
      v135 = 0;
      v133 = 0u;
      v134 = 0u;
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
      sub_100011088((uint64_t)&v133, &qword_1007F96B8);
      goto LABEL_79;
    }
    sub_100010F3C(&v133, (uint64_t)&v138);
    v107 = v139;
    v108 = v140;
    v109 = sub_100011064(&v138, v139);
    v110 = IndexPath.item.getter(v109);
    dispatch thunk of NestedShelfClickableModel.click(for:)(&v133, v110, v107, v108);
    v111 = v133;
    if ((_QWORD)v133)
    {
      v136 = v133;
      sub_1000302E8((uint64_t)&v133 + 8, (uint64_t)v137);
      *(_QWORD *)&v133 = v111;
      sub_1000194E4((uint64_t)v137, (uint64_t)&v133 + 8, &qword_1007F6E90);
      v112 = type metadata accessor for FlowAction(0);
      v113 = swift_dynamicCastClass(v111, v112);
      if (v113)
      {
        v114 = v113;
        swift_retain_n(v111, 2);
        sub_100011088((uint64_t)&v133 + 8, &qword_1007F6E90);
        v115 = v126;
        v117 = FlowAction.page.getter(v116);
        v118 = FlowPage.isPreviewingSupported.getter(v117);
        (*(void (**)(char *, uint64_t))(v127 + 8))(v115, v128);
        if ((v118 & 1) != 0)
        {
          *(_QWORD *)&v133 = v111;
          sub_1000194E4((uint64_t)v137, (uint64_t)&v133 + 8, &qword_1007F6E90);
          v119 = v125;
          sub_1000C1DE4((uint64_t)v141, v125);
          FlowPreviewDestination.init(flowAction:sender:contentType:)(v114, (char *)&v133 + 8, v119);
          swift_release(v111);
          sub_100011088((uint64_t)&v136, (uint64_t *)&unk_100803030);
          goto LABEL_72;
        }
        swift_release_n(v111, 2);
        sub_100011088((uint64_t)&v136, (uint64_t *)&unk_100803030);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
      }
      else
      {
        sub_100011088((uint64_t)&v136, (uint64_t *)&unk_100803030);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
        sub_100011088((uint64_t)&v133 + 8, &qword_1007F6E90);
      }
    }
    else
    {
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
      sub_100011088((uint64_t)&v133, &qword_1007F96C0);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v138);
    goto LABEL_79;
  }
  v123 = v54;
  v57 = v56;
  v58 = CompoundAction.actions.getter();
  v59 = v58;
  v136 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v58 >> 62)
  {
    if (v58 < 0)
      v57 = v58;
    else
      v57 = v58 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v58);
    v60 = _CocoaArrayWrapper.endIndex.getter(v57);
    if (v60)
      goto LABEL_24;
LABEL_44:
    swift_bridgeObjectRelease(v59);
    v57 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_45;
  }
  v60 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v58);
  if (!v60)
    goto LABEL_44;
LABEL_24:
  v131 = a2;
  if (v60 < 1)
  {
    __break(1u);
    goto LABEL_81;
  }
  v61 = 0;
  v129 = v59 & 0xC000000000000001;
  do
  {
    if (v129)
    {
      v62 = specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v59);
    }
    else
    {
      v62 = *(_QWORD *)(v59 + 8 * v61 + 32);
      swift_retain(v62);
    }
    v63 = type metadata accessor for FlowAction(0);
    v64 = swift_dynamicCastClass(v62, v63);
    if (v64)
    {
      v65 = v64;
      v66 = v60;
      v67 = v59;
      v68 = v8;
      v69 = v6;
      v70 = v5;
      v71 = a1;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
      v73 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v72 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v73 >= v72 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
      v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v65);
      specialized Array._endMutation()(v74);
      a1 = v71;
      v5 = v70;
      v6 = v69;
      v8 = v68;
      v59 = v67;
      v60 = v66;
    }
    else
    {
      swift_release(v62);
    }
    ++v61;
  }
  while (v60 != v61);
  swift_bridgeObjectRelease(v59);
  v57 = v136;
  a2 = v131;
  v21 = v130;
LABEL_45:
  swift_bridgeObjectRelease(v59);
  if (!((unint64_t)v57 >> 62))
  {
    if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_47;
LABEL_61:
    swift_bridgeObjectRelease(v57);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
    v89 = v123;
    goto LABEL_62;
  }
  if (v57 < 0)
    v94 = v57;
  else
    v94 = v57 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v57);
  v95 = _CocoaArrayWrapper.endIndex.getter(v94);
  swift_bridgeObjectRelease(v57);
  if (!v95)
    goto LABEL_61;
LABEL_47:
  if ((v57 & 0xC000000000000001) != 0)
  {
LABEL_81:
    v83 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v57);
    goto LABEL_50;
  }
  if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v83 = *(_QWORD *)(v57 + 32);
    swift_retain(v83);
LABEL_50:
    v84 = swift_bridgeObjectRelease(v57);
    v85 = v126;
    v86 = FlowAction.page.getter(v84);
    v87 = FlowPage.isPreviewingSupported.getter(v86);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v85, v128);
    if ((v87 & 1) != 0)
    {
      sub_100011020((uint64_t)v141, (uint64_t)&v136);
      v88 = type metadata accessor for TodayCard(0);
      if ((swift_dynamicCast(&v133, &v136, v124, v88, 6) & 1) == 0)
      {
        v90 = v139;
        v91 = v140;
        sub_100011064(&v138, v139);
        v92 = swift_retain(v83);
        dispatch thunk of ClickableModel.clickSender.getter(&v136, v90, v91, v92);
        v93 = v125;
        sub_1000C1DE4((uint64_t)v141, v125);
        FlowPreviewDestination.init(flowAction:sender:contentType:)(v83, &v136, v93);
        swift_release(v83);
        swift_release(v123);
LABEL_72:
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
        v121 = type metadata accessor for FlowPreviewDestination(0, v120);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(a2, 0, 1, v121);
        goto LABEL_73;
      }
      swift_release(v83);
      swift_release(v123);
      v75 = v133;
      goto LABEL_53;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v141);
    swift_release(v123);
    v89 = v83;
LABEL_62:
    swift_release(v89);
    goto LABEL_63;
  }
  __break(1u);
}

uint64_t sub_1000C1DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];

  sub_100011020(a1, (uint64_t)v12);
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v4 = type metadata accessor for Review(0);
  if (swift_dynamicCast(&v11, v12, v3, v4, 0)
    || (v5 = type metadata accessor for ReviewsContainer(0), swift_dynamicCast(&v11, v12, v3, v5, 0)))
  {
    swift_release(v11);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
    v6 = enum case for FlowPreviewDestination.ContentType.source(_:);
    v7 = type metadata accessor for FlowPreviewDestination.ContentType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a2, v6, v7);
  }
  else
  {
    v9 = enum case for FlowPreviewDestination.ContentType.flowDestination(_:);
    v10 = type metadata accessor for FlowPreviewDestination.ContentType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a2, v9, v10);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
  }
}

uint64_t sub_1000C1EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t *v22;
  __int128 *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43[2];
  uint64_t v44;
  __int128 v45[2];
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v42 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F9670);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - v9;
  v11 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_7;
  }
  v17 = (void *)Strong;
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_7:
    v22 = &qword_1007F9670;
    v23 = (__int128 *)v10;
LABEL_8:
    sub_100011088((uint64_t)v23, v22);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  ReadOnlyLens.value.getter(&v47, v11);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v19 = sub_10000DF3C(&qword_1007F96A0);
  if ((swift_dynamicCast(v45, &v47, v18, v19, 6) & 1) == 0)
  {
    v46 = 0;
    memset(v45, 0, sizeof(v45));
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v22 = &qword_1007F96A8;
    v23 = v45;
    goto LABEL_8;
  }
  sub_100010F3C(v45, (uint64_t)v50);
  ReadOnlyLens.value.getter(&v47, v11);
  v20 = type metadata accessor for TodayCard(0);
  if ((swift_dynamicCast(v45, &v47, v18, v20, 6) & 1) == 0)
  {
    v39 = v51;
    v40 = v52;
    sub_100011064(v50, v51);
    v37 = dispatch thunk of FlowPreviewActionable.flowPreviewActionsConfiguration.getter(v39, v40);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_23;
  }
  v21 = swift_release(*(_QWORD *)&v45[0]);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
LABEL_9:
  v24 = swift_unknownObjectWeakLoadStrong(v15);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 1, v11);
    goto LABEL_16;
  }
  v25 = (void *)v24;
  v26 = IndexPath.section.getter(v24);
  IndexPath.init(item:section:)(0, v26, v27);
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(v4);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v42);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
LABEL_16:
    sub_100011088((uint64_t)v7, &qword_1007F9670);
    goto LABEL_17;
  }
  v28 = sub_10000DF3C(&qword_1007F9698);
  if (!swift_dynamicCast(&v47, v7, v11, v28, 6))
  {
LABEL_17:
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
    goto LABEL_18;
  }
  if (!*((_QWORD *)&v48 + 1))
  {
LABEL_18:
    sub_100011088((uint64_t)&v47, &qword_1007F9690);
    return 0;
  }
  sub_100010F3C(&v47, (uint64_t)v50);
  v29 = v51;
  v30 = v52;
  v31 = sub_100011064(v50, v51);
  v32 = IndexPath.item.getter(v31);
  dispatch thunk of ComponentModelContainment.model(at:)(v45, v32, v29, v30);
  v33 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v34 = sub_10000DF3C(&qword_1007F96A0);
  if ((swift_dynamicCast(v43, v45, v33, v34, 6) & 1) != 0)
  {
    sub_100010F3C(v43, (uint64_t)&v47);
    v35 = *((_QWORD *)&v48 + 1);
    v36 = v49;
    sub_100011064(&v47, *((uint64_t *)&v48 + 1));
    v37 = dispatch thunk of FlowPreviewActionable.flowPreviewActionsConfiguration.getter(v35, v36);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v47);
LABEL_23:
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
    return v37;
  }
  v44 = 0;
  memset(v43, 0, sizeof(v43));
  sub_100011088((uint64_t)v43, &qword_1007F96A8);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v50);
  return 0;
}

id sub_1000C2360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  id *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t KeyPath;
  __n128 v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[5];
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;

  v3 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v3);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ShelfBackground(0);
  v66 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = type metadata accessor for ItemBackground(0);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v60 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F9660);
  __chkstk_darwin(v10);
  v63 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007F9668);
  __chkstk_darwin(v12);
  v61 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v59 - v18;
  v20 = sub_10000DF3C(&qword_1007F9670);
  __chkstk_darwin(v20);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v1 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
    goto LABEL_4;
  v25 = (void *)Strong;
  v65 = v6;
  v26 = v8;
  v67 = a1;
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

  v27 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27) == 1)
  {
    sub_100011088((uint64_t)v22, &qword_1007F9670);
    v8 = v26;
    v6 = v65;
LABEL_4:
    v69 = 0u;
    v70 = 0u;
    v71 = 0;
    goto LABEL_5;
  }
  ReadOnlyLens.value.getter(v68, v27);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  v34 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v35 = sub_10000DF3C(&qword_1007F9680);
  if ((swift_dynamicCast(&v69, v68, v34, v35, 6) & 1) == 0)
  {
    v71 = 0;
    v69 = 0u;
    v70 = 0u;
    v8 = v26;
    v6 = v65;
    goto LABEL_5;
  }
  v8 = v26;
  v6 = v65;
  if (*((_QWORD *)&v70 + 1))
  {
    sub_100010F3C(&v69, (uint64_t)v72);
    v36 = v73;
    v37 = v74;
    sub_100011064(v72, v73);
    dispatch thunk of ItemBackgroundProviding.itemBackground.getter(v36, v37);
    v38 = v62;
    v39 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v16, enum case for ItemBackground.ad(_:), v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v16, 0, 1, v39);
    v40 = v63;
    v41 = v63 + *(int *)(v10 + 48);
    sub_1000194E4((uint64_t)v19, v63, &qword_1007F9668);
    v59 = v41;
    v42 = v41;
    v43 = v40;
    sub_1000194E4((uint64_t)v16, v42, &qword_1007F9668);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v44(v43, 1, v39) == 1)
    {
      sub_100011088((uint64_t)v16, &qword_1007F9668);
      v43 = v63;
      sub_100011088((uint64_t)v19, &qword_1007F9668);
      if (v44(v59, 1, v64) == 1)
      {
        sub_100011088(v43, &qword_1007F9668);
LABEL_24:
        if (qword_1007F18A0 != -1)
          swift_once(&qword_1007F18A0, sub_100258A64);
        v48 = (id)qword_100852EC0;
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
        return v48;
      }
    }
    else
    {
      v52 = v61;
      sub_1000194E4(v43, v61, &qword_1007F9668);
      if (v44(v59, 1, v64) != 1)
      {
        v53 = v62;
        v54 = v52;
        v55 = v60;
        v56 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v60, v59, v64);
        v57 = sub_10001F65C(&qword_1007F9688, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ItemBackground, (uint64_t)&protocol conformance descriptor for ItemBackground);
        LODWORD(v59) = dispatch thunk of static Equatable.== infix(_:_:)(v54, v55, v56, v57);
        v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v55, v56);
        sub_100011088((uint64_t)v16, &qword_1007F9668);
        sub_100011088((uint64_t)v19, &qword_1007F9668);
        v58((char *)v54, v56);
        v6 = v65;
        sub_100011088(v63, &qword_1007F9668);
        if ((v59 & 1) != 0)
          goto LABEL_24;
LABEL_27:
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
        goto LABEL_6;
      }
      sub_100011088((uint64_t)v16, &qword_1007F9668);
      sub_100011088((uint64_t)v19, &qword_1007F9668);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v52, v64);
    }
    sub_100011088(v43, &qword_1007F9660);
    goto LABEL_27;
  }
LABEL_5:
  sub_100011088((uint64_t)&v69, &qword_1007F9678);
LABEL_6:
  v29 = swift_unknownObjectWeakLoadStrong(v23);
  if (!v29)
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v30 = (void *)v29;
  v31 = IndexPath.section.getter(v29);
  dispatch thunk of ModelMappedDiffableDataSource.sectionModel(at:)(v31);

  v32 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v5, 1, v32) == 1)
  {
    sub_100011088((uint64_t)v5, &qword_1007F4A68);
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  KeyPath = swift_getKeyPath(&unk_100674450);
  ReadOnlyLens.subscript.getter(KeyPath, v32);
  v46 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v5, v32, v46);
  v47 = v66;
  if ((*(unsigned int (**)(id *, uint64_t))(v66 + 88))(v8, v6) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v47 + 8))(v8, v6);
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  (*(void (**)(id *, uint64_t))(v47 + 96))(v8, v6);
  v48 = *v8;
  v49 = (char *)v8 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
  v50 = type metadata accessor for ShelfBackgroundStyle(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
  return v48;
}

uint64_t sub_1000C2A88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for DiffableFlowPreviewPresenter()
{
  return objc_opt_self(_TtC22SubscribePageExtension28DiffableFlowPreviewPresenter);
}

double sub_1000C2AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  sub_10001F65C(&qword_1007F9658, a2, (uint64_t (*)(uint64_t))type metadata accessor for DiffableFlowPreviewPresenter, (uint64_t)&unk_1006743DC);
  *(_QWORD *)&result = swift_unknownObjectRetain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1000C2B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1;
  sub_1000194E4(a2, (uint64_t)&v5, &qword_1007F6E90);
  swift_retain(a1);
  SyncEvent.post(_:)(&v4);
  return sub_100011088((uint64_t)&v4, (uint64_t *)&unk_100803030);
}

uint64_t sub_1000C2B8C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_1007F9650, a2, (uint64_t (*)(uint64_t))type metadata accessor for DiffableFlowPreviewPresenter, (uint64_t)&unk_1006743C0);
}

uint64_t sub_1000C2BBC(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _BYTE v14[24];

  if (*(_BYTE *)(result + 16) == 1)
  {
    v6 = result;
    v7 = swift_allocObject(&unk_100727480, 32, 7);
    *(_QWORD *)(v7 + 16) = a2;
    *(_QWORD *)(v7 + 24) = a3;
    v8 = (_QWORD *)(v6 + 24);
    swift_beginAccess(v6 + 24, v14, 33, 0);
    v9 = *(_QWORD **)(v6 + 24);
    swift_retain(a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *(_QWORD *)(v6 + 24) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_100201DE0(0, v9[2] + 1, 1, v9);
      *v8 = v9;
    }
    v12 = v9[2];
    v11 = v9[3];
    if (v12 >= v11 >> 1)
    {
      v9 = sub_100201DE0((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      *v8 = v9;
    }
    v9[2] = v12 + 1;
    v13 = &v9[2 * v12];
    v13[4] = sub_100030368;
    v13[5] = v7;
    return swift_endAccess(v14);
  }
  else
  {
    *a4 = 0;
  }
  return result;
}

double sub_1000C2CD0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _QWORD v17[2];
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v0 + 32);
  v9 = swift_allocObject(&unk_100727430, 24, 7);
  swift_weakInit(v9 + 16, v0);
  aBlock[4] = sub_1000C3358;
  v21 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100727448;
  v10 = _Block_copy(aBlock);
  v11 = swift_retain(v9);
  static DispatchQoS.unspecified.getter(v11);
  v19 = _swiftEmptyArrayStorage;
  v12 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v14 = sub_1000C3384((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v21;
  swift_release(v9);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1000C2ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    if (*(_BYTE *)(result + 16) == 1)
    {
      *(_BYTE *)(result + 16) = 0;
      swift_beginAccess(result + 24, &v10, 1, 0);
      v4 = *(_QWORD *)(v3 + 24);
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v3 + 24));
        v6 = (_QWORD *)(v4 + 40);
        do
        {
          v8 = (void (*)(uint64_t))*(v6 - 1);
          v7 = *v6;
          v9 = swift_retain(*v6);
          v8(v9);
          swift_release(v7);
          v6 += 2;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease(v4);
        v4 = *(_QWORD *)(v3 + 24);
      }
      *(_QWORD *)(v3 + 24) = &_swiftEmptyArrayStorage;
      swift_release(v3);
      return swift_bridgeObjectRelease(v4);
    }
    else
    {
      return swift_release(result);
    }
  }
  return result;
}

uint64_t sub_1000C2FCC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ArticleLinkLoaderScrollObserver()
{
  return objc_opt_self(_TtC22SubscribePageExtension31ArticleLinkLoaderScrollObserver);
}

uint64_t sub_1000C3018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  _QWORD *v20;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0, v4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0, v8);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = _swiftEmptyArrayStorage;
  v19 = sub_1000C0EC4();
  static DispatchQoS.unspecified.getter(v14);
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_10000E99C(&qword_1007F97E8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_10000DF3C(&qword_1007F97F0);
  v17 = sub_1000C3384(&qword_1007F97F8, &qword_1007F97F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v7, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)(v1 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x8000000100633D20, v13, v10, v6, 0);
  return v1;
}

double sub_1000C31E4(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) == 0)
    return sub_1000C2CD0();
  return result;
}

void sub_1000C31F8()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[5];
  uint64_t v6;

  v1 = *(NSObject **)(v0 + 32);
  v2 = swift_allocObject(&unk_1007273E0, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_1000C3300;
  *(_QWORD *)(v2 + 24) = v0;
  v5[4] = sub_100030368;
  v6 = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100101718;
  v5[3] = &unk_1007273F8;
  v3 = _Block_copy(v5);
  v4 = v6;
  swift_retain(v0);
  swift_retain(v2);
  swift_release(v4);
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v2, "", 117, 43, 37, 1);
  swift_release(v0);
  swift_release(v2);
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_1000C3300()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 1;
}

uint64_t sub_1000C330C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C331C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000C332C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000C3334()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C3358()
{
  uint64_t v0;

  return sub_1000C2ED4(v0);
}

uint64_t sub_1000C3360()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C3384(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100010EF8(a2);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MetadataRibbonHighlightedTextViewLayout.Metrics.standard.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1007F1138 != -1)
    swift_once(&qword_1007F1138, sub_1000C4464);
  v0 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  return sub_1000117A8(v0, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
}

char *sub_1000C3414(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  double left;
  double bottom;
  double right;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v41[5];
  objc_super v42;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v4[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_metrics];
  v16 = qword_1007F1138;
  v17 = v5;
  if (v16 != -1)
    swift_once(&qword_1007F1138, sub_1000C4464);
  v18 = sub_1000117A8(v11, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v15, v18, v11);
  v20 = &v17[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_id];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = &v17[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_itemType];
  v22 = type metadata accessor for MetadataRibbonItemType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = &v17[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_descriptionLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);

  v42.receiver = v17;
  v42.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v42, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v28 = (char *)v24;
  objc_msgSend(v28, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v29 = OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_descriptionLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_descriptionLabel];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v31 = v30;
  v32 = (void *)static UIColor.secondaryText.getter(v31);
  objc_msgSend(v31, "setTextColor:", v32);

  v33 = *(void **)&v28[v29];
  v34 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v14, &v28[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_metrics], v11);
  v35 = MetadataRibbonHighlightedTextViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v34);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static CustomTextStyle<>.metadataRibbon.getter(objc_msgSend(v33, "setNumberOfLines:", v35));
  if (qword_1007F1158 != -1)
    swift_once(&qword_1007F1158, sub_1000D4F00);
  v36 = type metadata accessor for MetadataRibbonTextStyle(0);
  v37 = sub_1000117A8(v36, (uint64_t)qword_100851868);
  v41[3] = v36;
  v41[4] = sub_10000E99C((unint64_t *)&qword_1007F9860, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
  v38 = sub_1000117C0(v41);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v38, v37, v36);
  dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v41);
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v28[v29]);

  return v28;
}

uint64_t sub_1000C38A0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for LayoutRect(0);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v2;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "layoutSubviews");
  v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_descriptionLabel];
  v22[3] = type metadata accessor for DynamicTypeLabel(0);
  v22[4] = &protocol witness table for UILabel;
  v22[0] = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v2[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_metrics], v7);
  v16 = v15;
  MetadataRibbonHighlightedTextViewLayout.init(descriptionLabelTextView:metrics:)(v22, v10);
  v17 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  MetadataRibbonHighlightedTextViewLayout.placeChildren(relativeTo:in:)(v2, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_1000C3BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  id v6;

  if (a2)
  {
    v5 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_descriptionLabel];
    if (a4)
    {
      v6 = sub_1000C3C68(a1, a2);
      objc_msgSend(v5, "setAttributedText:", v6);
    }
    else
    {
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setText:", v6);
    }

  }
  return objc_msgSend(v4, "setNeedsLayout");
}

id sub_1000C3C68(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  Class isa;
  uint64_t inited;
  uint64_t v8;
  objc_class *v9;
  unint64_t v10;
  id v11;
  NSString v12;
  Class v13;
  id v14;
  uint64_t v15;
  objc_class *v16;
  NSString *v17;
  objc_class *v18;
  NSString *v19;
  unint64_t v20;
  NSDictionary v21;
  id result;
  void *v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;
  Class v30;
  uint64_t v31;
  char v32[112];
  char v33[80];

  static CustomTextStyle<>.metadataRibbon.getter(a1);
  if (qword_1007F1158 != -1)
    swift_once(&qword_1007F1158, sub_1000D4F00);
  v4 = type metadata accessor for MetadataRibbonTextStyle(0);
  sub_1000117A8(v4, (uint64_t)qword_100851868);
  v5 = objc_msgSend(v2, "traitCollection");
  isa = MetadataRibbonTextStyle.font(compatibleWith:)((UITraitCollection)v5).super.isa;

  v31 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v30 = UIColor.init(light:dark:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.450980392, 0.450980392, 0.494117647, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.682352941, 0.682352941, 0.698039216, 1.0)).super.isa;
  v29 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v29, v33);
  *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v8 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 40) = isa;
  swift_bridgeObjectRetain(a2);
  v28 = NSFontAttributeName;
  v9 = isa;
  v10 = sub_1003699BC(inited);
  v11 = objc_allocWithZone((Class)NSMutableAttributedString);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  type metadata accessor for Key(0);
  sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "initWithString:attributes:", v12, v13, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v15 = swift_initStackObject(v29, v32);
  *(_OWORD *)(v15 + 16) = xmmword_10066F870;
  *(_QWORD *)(v15 + 32) = NSForegroundColorAttributeName;
  *(_QWORD *)(v15 + 40) = v30;
  *(_QWORD *)(v15 + 64) = v31;
  *(_QWORD *)(v15 + 72) = v28;
  *(_QWORD *)(v15 + 104) = v8;
  *(_QWORD *)(v15 + 80) = v9;
  v16 = v9;
  v17 = NSForegroundColorAttributeName;
  v18 = v30;
  v19 = v28;
  v20 = sub_1003699BC(v15);
  v21.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  result = objc_msgSend(v14, "string", swift_bridgeObjectRelease(v20).n128_f64[0]);
  if (result)
  {
    v23 = result;
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v23, "rangeOfString:options:", v24, 1);
    v27 = v26;

    objc_msgSend(v14, "addAttributes:range:", v21.super.isa, v25, v27);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1000C4074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v0 = MetadataRibbonItem.labelText.getter();
  v2 = v1;
  v3 = MetadataRibbonItem.highlightedText.getter();
  v5 = v4;
  sub_1000C3BEC(v0, v2, v3, v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_1000C40DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return MetadataRibbonItemView.layoutContext.getter(ObjectType, a2);
}

uint64_t sub_1000C4114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return MetadataRibbonItemView.searchLayoutContext.getter(ObjectType, a2);
}

uint64_t sub_1000C414C()
{
  uint64_t v0;

  return static MetadataRibbonItemView.isBaselineAligned.getter(v0);
}

uint64_t sub_1000C4154()
{
  uint64_t v0;

  return static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v0);
}

uint64_t sub_1000C415C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_itemType;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, &qword_1007F6CD0);
}

uint64_t sub_1000C41B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_itemType;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10006C214(a1, v3, &qword_1007F6CD0);
  return swift_endAccess(v5);
}

uint64_t (*sub_1000C4214(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_itemType, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1000C4258()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_1000C42A0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v6[24];

  v5 = v2 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth;
  swift_beginAccess(v5, v6, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
}

uint64_t (*sub_1000C42FC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1000C4340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return MetadataRibbonItemView.labelText.getter(ObjectType, a2);
}

uint64_t sub_1000C4368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_id;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, (uint64_t *)&unk_1007F9850);
}

uint64_t sub_1000C43C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_id;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10006C214(a1, v3, (uint64_t *)&unk_1007F9850);
  return swift_endAccess(v5);
}

uint64_t (*sub_1000C4420(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension33MetadataRibbonHighlightedTextView_id, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1000C4464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  sub_100045464(v4, static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  sub_1000117A8(v4, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  v5 = sub_10000DF3C(&qword_1007F5D10);
  Conditional.init(_:)(sub_1000C4540, 0, v5, &type metadata for Double);
  MetadataRibbonHighlightedTextViewLayout.Metrics.init(maximumNumberofLinesForDescriptionLabel:)(1);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000C4540(id *a1@<X0>, double *a2@<X8>)
{
  id v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id v14;
  NSString *v15;
  id v16;
  NSString *v17;
  char v18;

  v3 = objc_msgSend(*a1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if ((UIContentSizeCategory.isAccessibilityCategory.getter(v4) & 1) != 0)
  {

    v5 = 6.0;
    goto LABEL_12;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  if (v6 != v9 || v8 != v10)
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    v14 = v4;
    v15 = UIContentSizeCategoryLarge;
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) != 0)
      goto LABEL_10;
    __break(1u);
  }
  v16 = v4;
  v17 = UIContentSizeCategoryLarge;
  swift_bridgeObjectRelease_n(v8, 2);
LABEL_10:
  v18 = static UIContentSizeCategory.<= infix(_:_:)(UIContentSizeCategoryLarge, v4);

  v5 = 2.0;
  if ((v18 & 1) != 0)
    v5 = 4.0;
LABEL_12:
  *a2 = v5;
}

uint64_t static MetadataRibbonHighlightedTextViewLayout.Metrics.standard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1007F1138 != -1)
    swift_once(&qword_1007F1138, sub_1000C4464);
  v2 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v3 = sub_1000117A8(v2, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1000C46E0()
{
  return type metadata accessor for MetadataRibbonHighlightedTextView(0);
}

uint64_t type metadata accessor for MetadataRibbonHighlightedTextView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F9838;
  if (!qword_1007F9838)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetadataRibbonHighlightedTextView);
  return result;
}

void sub_1000C4724(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "(";
    sub_1000C47CC(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_1006745B0;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

void sub_1000C47CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F9848)
  {
    v2 = type metadata accessor for MetadataRibbonItemType(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F9848);
  }
}

double sub_1000C4820(uint64_t a1, uint64_t a2, double a3, double a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  char *v44;
  double v45;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[6];

  v56 = a2;
  v51 = a1;
  v57 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout(0);
  v55 = *(_QWORD *)(v57 - 8);
  v6 = __chkstk_darwin(v57);
  v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LabelPlaceholder(0, v6);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTextAppearance(0, v9);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - v19;
  v21 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v50 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v47 - v25;
  if (qword_1007F1138 != -1)
    swift_once(&qword_1007F1138, sub_1000C4464);
  v27 = sub_1000117A8(v21, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v28 = v47(v26, v27, v21);
  v29 = DynamicTextAppearance.init()(v28);
  static CustomTextStyle<>.metadataRibbon.getter(v29);
  v48 = v22;
  if (qword_1007F1158 != -1)
    swift_once(&qword_1007F1158, sub_1000D4F00);
  v30 = type metadata accessor for MetadataRibbonTextStyle(0);
  v31 = sub_1000117A8(v30, (uint64_t)qword_100851868);
  v59[3] = v30;
  v59[4] = sub_10000E99C((unint64_t *)&qword_1007F9860, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
  v32 = sub_1000117C0(v59);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v32, v31, v30);
  DynamicTextAppearance.withCustomTextStyle(_:)(v59);
  v33 = v49;
  v34 = *(void (**)(char *, uint64_t))(v49 + 8);
  v34(v14, v12);
  v35 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  v36 = MetadataRibbonHighlightedTextViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v35);
  DynamicTextAppearance.withNumberOfLines(_:)(v36);
  v37 = ((uint64_t (*)(char *, uint64_t))v34)(v17, v12);
  v38 = MetadataRibbonItem.labelText.getter(v37);
  v40 = v39;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v17, v20, v12);
  v41 = LabelPlaceholder.Options.init(rawValue:)(0);
  v42 = LabelPlaceholder.init(_:with:where:)(v38, v40, v17, v41);
  LabelPlaceholder.layoutTextView.getter(v59, v42);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  sub_100011020((uint64_t)v59, (uint64_t)v58);
  v43 = v50;
  v47(v50, (uint64_t)v26, v21);
  v44 = v54;
  MetadataRibbonHighlightedTextViewLayout.init(descriptionLabelTextView:metrics:)(v58, v43);
  v45 = MetadataRibbonHighlightedTextViewLayout.measurements(fitting:in:)(v56, a3, a4);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v57);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v59);
  v34(v20, v12);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v21);
  return v45;
}

void sub_1000C4C9C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  double v26;
  double v27;
  double v28;
  char v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _BYTE v40[24];
  char v41[24];

  v3 = v2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = IndexPath.section.getter(v9);
  v38 = a2;
  sub_1000C5BAC(v10, a2);
  v11 = sub_1000C5D8C();
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_maxSizeForRowCache);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_maxSizeForRowCache, v41, 0, 0);
  if (!*(_QWORD *)(*v12 + 16) || (sub_10036C110(v11), (v13 & 1) == 0))
  {
    v36 = v12;
    sub_1000C5E24();
    v16 = 0.0;
    v17 = 0.0;
    if (v14 == v15)
    {
LABEL_15:
      v32 = sub_1000C5D8C();
      v33 = v36;
      swift_beginAccess(v36, v40, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v33);
      v39 = *v33;
      *v33 = 0x8000000000000000;
      sub_10010BC40(v32, isUniquelyReferenced_nonNull_native, v17, v16);
      v35 = *v33;
      *v33 = v39;
      swift_bridgeObjectRelease(v35);
      swift_endAccess(v40);
    }
    else
    {
      v18 = v14;
      v19 = v15;
      if (v15 >= v14)
      {
        v37 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        while (v18 < v19)
        {
          v20 = IndexPath.section.getter(v14);
          IndexPath.init(item:section:)(v18, v20, v21);
          v22 = dispatch thunk of SearchResultsPresenter.result(at:)(v8);
          if (v22)
          {
            v23 = v22;
            v24 = IndexPath.item.getter(v22) == 0;
            objc_msgSend(*(id *)(v3 + v37), "pageContainerSize");
            v26 = sub_1000C501C(v23, v38, v24, v25);
            v28 = v27;
            v30 = v29;
            v31 = swift_release(v23);
            v14 = (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v31);
            if ((v30 & 1) != 0)
            {
              v16 = v28;
              v17 = v26;
              goto LABEL_15;
            }
            if (v16 < v28)
            {
              v16 = v28;
              v17 = v26;
            }
          }
          else
          {
            v14 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          }
          if (v19 == ++v18)
            goto LABEL_15;
        }
        __break(1u);
      }
      __break(1u);
    }
  }
}

double sub_1000C501C(uint64_t a1, void *a2, char a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __n128 v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  void *v34;
  uint64_t ObjectType;
  __n128 v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  __n128 v53;
  id v54;
  __n128 v55;
  double v56;
  uint64_t v57;
  __n128 v58;
  __n128 v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD);
  void (*v65)(_QWORD, _QWORD);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void (*v71)(_QWORD, _QWORD);
  uint64_t v72;
  id v73;
  double left;
  double bottom;
  double right;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  void (*v85)(char *, uint64_t);
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  id v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  double v95;
  double v96;
  double v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[7];

  v5 = v4;
  v9 = a1;
  v10 = sub_1000C5898(a1);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
  objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
  v14 = a4 - v12 - v13;
  objc_msgSend(a2, "minimumInteritemSpacing");
  v16 = (v14 - v15) * 0.5;
  v17 = type metadata accessor for AdvertsSearchResult(0);
  if (!swift_dynamicCastClass(v9, v17))
  {
    v30 = type metadata accessor for AppSearchResult(0, v18);
    if (swift_dynamicCastClass(v9, v30))
    {
      v31 = type metadata accessor for ContentSearchResultCollectionViewCell();
      v32 = swift_retain(v9);
      v33 = AppSearchResult.lockup.getter(v32);
      v34 = *(void **)(v5 + v11);
      ObjectType = swift_getObjectType();
      v36 = swift_unknownObjectRetain(v34);
      v37 = (id)ASKDeviceTypeGetCurrent(v36);
      v38 = v33;
      v39.n128_f64[0] = v16;
      v40 = v34;
      v41 = (uint64_t)v37;
      v42 = v31;
      v43 = ObjectType;
      goto LABEL_8;
    }
    v57 = type metadata accessor for BundleSearchResult(0);
    if (swift_dynamicCastClass(v9, v57))
    {
      v59 = swift_retain(v9);
      v60 = BundleSearchResult.lockup.getter(v59);
      v61 = swift_retain(v60);
      Lockup.title.getter(v61);
      v63 = v62;
      v65 = v64;
      swift_release(v60);
      v66 = swift_retain(v60);
      v67 = Lockup.subtitle.getter(v66);
      v69 = v68;
      v70 = objc_msgSend(*(id *)(v5 + v11), "snapshotPageTraitEnvironment", swift_release(v60).n128_f64[0]);
      v29 = sub_100436ABC(v63, v65, v67, v69, v70, v16);
      swift_unknownObjectRelease(v70);
      swift_release(v9);
      swift_release(v60);
      swift_bridgeObjectRelease(v69);
      v71 = v65;
    }
    else
    {
      v72 = type metadata accessor for EditorialSearchResult(0, v58);
      if (swift_dynamicCastClass(v9, v72))
      {
        v73 = objc_msgSend(*(id *)(v5 + v11), "snapshotPageTraitEnvironment", swift_retain(v9).n128_f64[0]);
        left = UIEdgeInsetsZero.left;
        bottom = UIEdgeInsetsZero.bottom;
        right = UIEdgeInsetsZero.right;
        v77 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v73);
        v79 = v78;
        v80 = EditorialSearchResult.title.getter(v77);
        v82 = v81;
        v83 = EditorialSearchResult.subtitle.getter();
        v85 = v84;
        v29 = sub_1004070D0(v77, v79, v80, v82, v83, v84, v73, UIEdgeInsetsZero.top, left, bottom, right, v16);
        swift_unknownObjectRelease(v73);
        swift_release(v9);
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRelease(v82);
        v71 = (void (*)(_QWORD, _QWORD))v79;
      }
      else
      {
        v87 = type metadata accessor for InAppPurchaseSearchResult();
        if (swift_dynamicCastClass(v9, v87))
        {
          v88 = swift_retain(v9);
          v89 = InAppPurchaseSearchResult.lockup.getter(v88);
          v90 = objc_msgSend(*(id *)(v5 + v11), "snapshotPageTraitEnvironment");
          v91.n128_f64[0] = v16;
          v29 = sub_1000CFDA8(v89, v90, v91);
          swift_release(v89);
          swift_unknownObjectRelease(v90);
          goto LABEL_9;
        }
        v92 = type metadata accessor for LockupCollectionSearchResult();
        if (!swift_dynamicCastClass(v9, v92))
        {
          v112 = type metadata accessor for AppEventSearchResult(0);
          v113 = swift_dynamicCastClass(v9, v112);
          if (!v113)
            return 0.0;
          v114 = v113;
          v115 = swift_retain(v9);
          if ((dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)(v114, v115) & 1) != 0)
          {
            v116 = type metadata accessor for AppEventSearchResultCollectionViewCell();
            v117 = objc_msgSend(*(id *)(v5 + v11), "snapshotPageTraitEnvironment");
            v118 = swift_getObjectType();
            v29 = sub_1005FB050(v114, v117, *(_QWORD *)(v5+ OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph), v16, v116, v118);
            swift_unknownObjectRelease(v117);
            goto LABEL_9;
          }
          v119 = type metadata accessor for ContentSearchResultCollectionViewCell();
          v33 = AppEventSearchResult.lockup.getter(v119);
          v34 = *(void **)(v5 + v11);
          v120 = swift_getObjectType();
          v121 = swift_unknownObjectRetain(v34);
          v37 = (id)ASKDeviceTypeGetCurrent(v121);
          v38 = v33;
          v39.n128_f64[0] = v16;
          v40 = v34;
          v41 = (uint64_t)v37;
          v42 = v119;
          v43 = v120;
LABEL_8:
          sub_1001DAD78(v39, v38, v40, v41, v42, v43);
          v29 = v44;
          swift_release(v33);
          swift_unknownObjectRelease(v34);

          goto LABEL_9;
        }
        v93 = type metadata accessor for SearchLockupListCollectionViewCell();
        v94 = objc_msgSend(*(id *)(v5 + v11), "snapshotPageTraitEnvironment", swift_retain(v9).n128_f64[0]);
        v95 = UIEdgeInsetsZero.left;
        v96 = UIEdgeInsetsZero.bottom;
        v97 = UIEdgeInsetsZero.right;
        swift_getObjectType();
        v124 = v93;
        v98 = sub_1002B8264(v94);
        v123 = v99;
        v122 = v98;
        v100 = LockupCollectionSearchResult.heading.getter();
        v102 = v101;
        v103 = LockupCollectionSearchResult.title.getter();
        v105 = v104;
        v106 = LockupCollectionSearchResult.detailAction.getter();
        if (v106)
        {
          v108 = v106;
          v109 = Action.title.getter(v107);
          v111 = v110;
          swift_release(v108);
        }
        else
        {
          v109 = 0;
          v111 = 0;
        }
        v29 = sub_10037AA80(v100, v102, v103, v105, v109, v111, v122, v123, v16, 1.79769313e308, UIEdgeInsetsZero.top, v95, v96, v97, v94, v124);
        swift_unknownObjectRelease(v94);
        swift_release(v9);
        swift_bridgeObjectRelease(v102);
        swift_bridgeObjectRelease(v105);
        v71 = (void (*)(_QWORD, _QWORD))v111;
      }
    }
    swift_bridgeObjectRelease(v71);
    return v29;
  }
  if (!(v10 & 1 | ((a3 & 1) == 0)))
  {
    v45 = *(_QWORD *)(v5
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
    if (v45)
    {
      v46 = swift_retain(*(_QWORD *)(v5
                                   + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController));
      dispatch thunk of AdvertRotationController.currentAdvert.getter(v126, v46);
      swift_release(v45);
      v47 = sub_10000DF3C(&qword_10080C0D0);
      v48 = type metadata accessor for MixedMediaLockup(0);
      if ((swift_dynamicCast(&v125, v126, v47, v48, 6) & 1) != 0)
      {
        v49 = v125;
        v50 = type metadata accessor for ContentSearchResultCollectionViewCell();
        v51 = *(void **)(v5 + v11);
        v52 = swift_getObjectType();
        v53 = swift_unknownObjectRetain(v51);
        v54 = (id)ASKDeviceTypeGetCurrent(v53);
        v55.n128_f64[0] = v14;
        sub_1001DAD78(v55, v49, v51, (uint64_t)v54, v50, v52);
        v29 = v56;
        swift_unknownObjectRelease(v51);

        swift_release(v49);
        return v29;
      }
    }
    return 0.0;
  }
  v19 = *(_QWORD *)(v5
                  + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
  if (!v19)
    return 0.0;
  v20 = swift_retain(*(_QWORD *)(v5
                               + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController));
  dispatch thunk of AdvertRotationController.currentAdvert.getter(v126, v20);
  swift_release(v19);
  v21 = sub_10000DF3C(&qword_10080C0D0);
  v22 = type metadata accessor for MixedMediaLockup(0);
  if ((swift_dynamicCast(&v125, v126, v21, v22, 6) & 1) == 0)
    return 0.0;
  v9 = v125;
  v23 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  v24 = *(void **)(v5 + v11);
  v25 = swift_getObjectType();
  v26 = swift_unknownObjectRetain(v24);
  v27 = (id)ASKDeviceTypeGetCurrent(v26);
  sub_1004784A0(v9, v24, (uint64_t)v27, v16, v23, v25);
  v29 = v28;
  swift_unknownObjectRelease(v24);

LABEL_9:
  swift_release(v9);
  return v29;
}

uint64_t sub_1000C5898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[6];

  v3 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppSearchResult(0, v5);
  if (swift_dynamicCastClass(a1, v8))
  {
    v9 = swift_retain(a1);
    v10 = AppSearchResult.lockup.getter(v9);
LABEL_3:
    v11 = v10;
    swift_release(a1);
LABEL_4:
    swift_retain(v11);
    v13 = MixedMediaLockup.screenshotsDisplayStyle.getter(v12);
    v14 = ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v13);
    v15 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if ((v14 & 1) != 0)
    {
      v16 = MixedMediaLockup.screenshots.getter(v15);
      v17 = v16;
      if ((unint64_t)v16 >> 62)
      {
        if (v16 >= 0)
          v16 &= 0xFFFFFFFFFFFFFF8uLL;
        v18 = _CocoaArrayWrapper.endIndex.getter(v16);
      }
      else
      {
        v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v17);
      if (v18)
      {
        swift_release_n(v11, 2);
        return 1;
      }
      v26 = MixedMediaLockup.trailers.getter(v19);
      v27 = v26;
      if ((unint64_t)v26 >> 62)
      {
        if (v26 >= 0)
          v26 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v26))
        {
LABEL_15:
          if ((v27 & 0xC000000000000001) != 0)
          {
            v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
          }
          else
          {
            if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_37;
            }
            v28 = *(_QWORD *)(v27 + 32);
            swift_retain(v28);
          }
          swift_bridgeObjectRelease(v27);
          v27 = Trailers.videos.getter(v29);
          swift_release(v28);
          if (!((unint64_t)v27 >> 62))
          {
            v30 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_release_n(v11, 2);
LABEL_20:
            swift_bridgeObjectRelease(v27);
            return v30 != 0;
          }
LABEL_37:
          if (v27 < 0)
            v36 = v27;
          else
            v36 = v27 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v27);
          v30 = _CocoaArrayWrapper.endIndex.getter(v36);
          swift_release_n(v11, 2);
          swift_bridgeObjectRelease(v27);
          goto LABEL_20;
        }
      }
      else if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_15;
      }
      swift_release_n(v11, 2);
      swift_bridgeObjectRelease(v27);
    }
    else
    {
      swift_release_n(v11, 2);
    }
    return 0;
  }
  v21 = type metadata accessor for AppEventSearchResult(0);
  v22 = swift_dynamicCastClass(a1, v21);
  if (!v22)
  {
    v31 = type metadata accessor for AdvertsSearchResult(0);
    result = swift_dynamicCastClass(a1, v31);
    if (!result)
      return result;
    v32 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
    if (!v32)
      return 0;
    v33 = swift_retain(v32);
    dispatch thunk of AdvertRotationController.currentAdvert.getter(v39, v33);
    swift_release(v32);
    v34 = sub_10000DF3C(&qword_10080C0D0);
    v35 = type metadata accessor for MixedMediaLockup(0);
    result = swift_dynamicCast(&v38, v39, v34, v35, 6);
    if (!(_DWORD)result)
      return result;
    v11 = v38;
    goto LABEL_4;
  }
  v23 = v22;
  v24 = swift_retain(a1);
  v25 = dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)(v23, v24);
  if ((v25 & 1) == 0)
  {
    v10 = AppEventSearchResult.lockup.getter(v25);
    goto LABEL_3;
  }
  swift_release(a1);
  return 0;
}

void sub_1000C5BAC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  char v17;
  char v18;
  double v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _BYTE v27[24];

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_isFirstItemFullWidth;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_isFirstItemFullWidth) == 2)
  {
    IndexPath.init(item:section:)(0, a1, v8);
    v12 = dispatch thunk of SearchResultsPresenter.result(at:)(v10);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageContainerSize");
      v15 = sub_1000C501C(v13, a2, 1, v14);
      v18 = v17;
      if ((v17 & 1) != 0)
      {
        v19 = v15;
        v20 = v16;
        v21 = sub_1000C5D8C();
        v22 = (_QWORD *)(v3
                       + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_maxSizeForRowCache);
        swift_beginAccess(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_maxSizeForRowCache, v27, 33, 0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
        v26 = *v22;
        *v22 = 0x8000000000000000;
        sub_10010BC40(v21, isUniquelyReferenced_nonNull_native, v19, v20);
        v24 = *v22;
        *v22 = v26;
        swift_bridgeObjectRelease(v24);
        swift_endAccess(v27);
        v25 = swift_release(v13);
        (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v10, v6, v25);
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t, double))(v7 + 8))(v10, v6, v15);
        swift_release(v13);
      }
      *(_BYTE *)(v3 + v11) = v18 & 1;
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
}

uint64_t sub_1000C5D8C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;

  result = IndexPath.item.getter();
  v2 = *(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_isFirstItemFullWidth) & 1;
  v3 = result + v2;
  if (__OFADD__(result, v2))
  {
    __break(1u);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "traitCollection");
    v5 = objc_msgSend(v4, "horizontalSizeClass");

    v6 = 1;
    if (v5 != (id)1)
      v6 = 2;
    return v3 / v6;
  }
  return result;
}

void sub_1000C5E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  v1 = sub_1000C5D8C();
  v2 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (id)1)
    v5 = 1;
  else
    v5 = 2;
  v6 = v1 * v5;
  if ((unsigned __int128)(v1 * (__int128)v5) >> 64 != (v1 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = *(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_isFirstItemFullWidth) & 1;
  v8 = v6 - v7;
  if (__OFSUB__(v6, v7))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v9 = objc_msgSend(*(id *)(v0 + v2), "traitCollection");
  v10 = objc_msgSend(v9, "horizontalSizeClass");

  v11 = 1;
  if (v10 != (id)1)
    v11 = 2;
  if (__OFADD__(v8, v11))
    goto LABEL_13;
  if (v8 + v11 < v8)
LABEL_14:
    __break(1u);
}

uint64_t sub_1000C5F28()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  result = dispatch thunk of SearchResultsPresenter.result(at:)();
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v2, v3))
    {
      swift_release(v2);
      return 3;
    }
    else
    {
      v4 = type metadata accessor for LockupCollectionSearchResult();
      if (swift_dynamicCastClass(v2, v4)
        && (dispatch thunk of SearchResultsPresenter.isCondensedSearchLockupsEnabled.getter() & 1) == 0)
      {
        v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "snapshotPageTraitEnvironment");
        v6 = objc_msgSend(v5, "traitCollection");
        v7 = swift_unknownObjectRelease(v5);
        LOBYTE(v5) = UITraitCollection.isSizeClassRegular.getter(v7);

        swift_release(v2);
        if ((v5 & 1) != 0)
          return 1;
        else
          return 2;
      }
      else
      {
        swift_release(v2);
        return 0;
      }
    }
  }
  return result;
}

double sub_1000C6084(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "traitCollection", v6);
  v10 = objc_msgSend(v9, "horizontalSizeClass");

  if (v10 == (id)2)
  {
    if (qword_1007F2A10 != -1)
      swift_once(&qword_1007F2A10, sub_10042D114);
    v11 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v11, (uint64_t)qword_100856180);
    v12 = objc_msgSend(a1, "traitCollection");
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v13 = sub_10000DF3C(&qword_1007F5840);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v14 + 32) = v12;
    v15 = v12;
    v16 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v14);
    v17 = dispatch thunk of AnyDimension.rawValue(in:)(v16, v11, &protocol witness table for StaticDimension);

    v18 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
    objc_msgSend(*(id *)(v2 + v18), "pageMarginInsets");
  }
  else
  {
    if (qword_1007F1EC8 != -1)
      swift_once(&qword_1007F1EC8, sub_1003B0C24);
    v19 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v19, (uint64_t)qword_100854390);
    v20 = objc_msgSend(a1, "traitCollection");
    static Dimensions.defaultRoundingRule.getter(v20);
    v17 = StaticDimension.value(compatibleWith:rounded:)(v20, v8);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v17;
}

double sub_1000C62D0(uint64_t a1, char a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  double v15;
  id v16;
  __n128 v17;
  id v18;
  __n128 v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD);
  void (*v30)(_QWORD, _QWORD);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t ObjectType;
  double v49;
  id v50;
  __n128 v51;
  id v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  double v120;
  id v121;
  __n128 v122;
  id v123;
  __n128 v124;
  double v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[7];

  v4 = v3;
  v6 = a3.n128_u64[0];
  v8 = type metadata accessor for AppSearchResult(0, a3);
  if (!swift_dynamicCastClass(a1, v8))
  {
    v23 = type metadata accessor for BundleSearchResult(0);
    if (swift_dynamicCastClass(a1, v23))
    {
      v24 = swift_retain(a1);
      v25 = BundleSearchResult.lockup.getter(v24);
      v26 = swift_retain(v25);
      Lockup.title.getter(v26);
      v28 = v27;
      v30 = v29;
      swift_release(v25);
      v31 = swift_retain(v25);
      v32 = Lockup.subtitle.getter(v31);
      v34 = v33;
      *(_QWORD *)&v35 = swift_release(v25).n128_u64[0];
      v36 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
      v37 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "snapshotPageTraitEnvironment", v35);
      objc_msgSend(*(id *)(v4 + v36), "pageMarginInsets");
      v21 = sub_100436ABC(v28, v30, v32, v34, v37, *(double *)&v6);
      swift_unknownObjectRelease(v37);
      swift_release(a1);
      swift_release(v25);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v30);
      return v21;
    }
    v38 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(a1, v38))
    {
      v40 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
      if (v40)
      {
        v41 = swift_retain(*(_QWORD *)(v4
                                     + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_advertRotationController));
        dispatch thunk of AdvertRotationController.currentAdvert.getter(v130, v41);
        swift_release(v40);
        v42 = sub_10000DF3C(&qword_10080C0D0);
        v43 = type metadata accessor for MixedMediaLockup(0);
        if ((swift_dynamicCast(&v129, v130, v42, v43, 6) & 1) != 0)
        {
          v44 = v129;
          v45 = type metadata accessor for AdvertSearchResultCollectionViewCell();
          v46 = sub_10055BAC8(a2 & 1);
          v47 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
          ObjectType = swift_getObjectType();
          *(_QWORD *)&v49 = swift_unknownObjectRetain(v47).n128_u64[0];
          objc_msgSend(v50, "pageMarginInsets", v49);
          v52 = (id)ASKDeviceTypeGetCurrent(v51);
          sub_1004784A0(v46, v47, (uint64_t)v52, *(double *)&v6, v45, ObjectType);
          v21 = v53;
          swift_release(v46);
          swift_unknownObjectRelease(v47);

          v22 = v44;
          goto LABEL_4;
        }
      }
      return 0.0;
    }
    v54 = type metadata accessor for EditorialSearchResult(0, v39);
    if (swift_dynamicCastClass(a1, v54))
    {
      v55 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
      v56 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "snapshotPageTraitEnvironment", swift_retain(a1).n128_f64[0]);
      v57 = objc_msgSend(*(id *)(v3 + v55), "pageMarginInsets");
      v59 = v58;
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v66 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v57);
      v68 = v67;
      v69 = EditorialSearchResult.title.getter(v66);
      v71 = v70;
      v72 = EditorialSearchResult.subtitle.getter();
      v74 = v73;
      v21 = sub_1004070D0(v66, v68, v69, v71, v72, v73, v56, v59, v61, v63, v65, *(double *)&v6);
      swift_unknownObjectRelease(v56);
      swift_release(a1);
      swift_bridgeObjectRelease(v74);
      v75 = v71;
LABEL_13:
      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease(v68);
      return v21;
    }
    v76 = type metadata accessor for InAppPurchaseSearchResult();
    if (swift_dynamicCastClass(a1, v76))
    {
      v77 = swift_retain(a1);
      v78 = InAppPurchaseSearchResult.lockup.getter(v77);
      v79 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
      v80 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "snapshotPageTraitEnvironment");
      objc_msgSend(*(id *)(v4 + v79), "pageMarginInsets");
      v81.n128_u64[0] = v6;
      v21 = sub_1000CFDA8(v78, v80, v81);
      swift_release(v78);
    }
    else
    {
      v82 = type metadata accessor for LockupCollectionSearchResult();
      if (swift_dynamicCastClass(a1, v82))
      {
        v83 = type metadata accessor for SearchLockupListCollectionViewCell();
        v84 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        v85 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "snapshotPageTraitEnvironment", swift_retain(a1).n128_f64[0]);
        objc_msgSend(*(id *)(v3 + v84), "pageMarginInsets");
        v87 = v86;
        v89 = v88;
        v91 = v90;
        v93 = v92;
        swift_getObjectType();
        v94 = v83;
        v95 = sub_1002B8264(v85);
        v128 = v96;
        v127 = v95;
        v126 = LockupCollectionSearchResult.heading.getter();
        v98 = v97;
        v99 = LockupCollectionSearchResult.title.getter();
        v101 = v100;
        v102 = LockupCollectionSearchResult.detailAction.getter();
        if (v102)
        {
          v104 = v102;
          v105 = Action.title.getter(v103);
          v68 = v106;
          swift_release(v104);
        }
        else
        {
          v105 = 0;
          v68 = 0;
        }
        v21 = sub_10037AA80(v126, v98, v99, v101, v105, v68, v127, v128, *(double *)&v6, 1.79769313e308, v87, v89, v91, v93, v85, v94);
        swift_unknownObjectRelease(v85);
        swift_release(a1);
        swift_bridgeObjectRelease(v98);
        v75 = v101;
        goto LABEL_13;
      }
      v107 = type metadata accessor for AppEventSearchResult(0);
      v108 = swift_dynamicCastClass(a1, v107);
      if (!v108)
        return 0.0;
      v109 = v108;
      v110 = swift_retain(a1);
      if ((dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)(v109, v110) & 1) == 0)
      {
        v115 = type metadata accessor for ContentSearchResultCollectionViewCell();
        v116 = AppEventSearchResult.lockup.getter(v115);
        v117 = sub_10055BAC8(a2 & 1);
        swift_release(v116);
        v118 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
        v119 = swift_getObjectType();
        *(_QWORD *)&v120 = swift_unknownObjectRetain(v118).n128_u64[0];
        objc_msgSend(v121, "pageMarginInsets", v120);
        v123 = (id)ASKDeviceTypeGetCurrent(v122);
        v124.n128_u64[0] = v6;
        sub_1001DAD78(v124, v117, v118, (uint64_t)v123, v115, v119);
        v21 = v125;
        swift_release(v117);
        swift_unknownObjectRelease(v118);

        goto LABEL_3;
      }
      v111 = type metadata accessor for AppEventSearchResultCollectionViewCell();
      v112 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
      v80 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "snapshotPageTraitEnvironment");
      v113 = swift_getObjectType();
      objc_msgSend(*(id *)(v4 + v112), "pageMarginInsets");
      v21 = sub_1005FB050(v109, v80, *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_objectGraph), *(double *)&v6, v111, v113);
    }
    swift_unknownObjectRelease(v80);
    goto LABEL_3;
  }
  v9 = type metadata accessor for ContentSearchResultCollectionViewCell();
  v10 = swift_retain(a1);
  v11 = AppSearchResult.lockup.getter(v10);
  v12 = sub_10055BAC8(a2 & 1);
  swift_release(v11);
  v13 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits);
  v14 = swift_getObjectType();
  *(_QWORD *)&v15 = swift_unknownObjectRetain(v13).n128_u64[0];
  objc_msgSend(v16, "pageMarginInsets", v15);
  v18 = (id)ASKDeviceTypeGetCurrent(v17);
  v19.n128_u64[0] = v6;
  sub_1001DAD78(v19, v12, v13, (uint64_t)v18, v9, v14);
  v21 = v20;
  swift_release(v12);
  swift_unknownObjectRelease(v13);

LABEL_3:
  v22 = a1;
LABEL_4:
  swift_release(v22);
  return v21;
}

double sub_1000C6B40(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  char v17;
  __n128 v18;
  double v19;

  v3 = v2;
  v6 = objc_opt_self(UICollectionViewFlowLayout);
  v7 = swift_dynamicCastObjCClass(a1, v6);
  v8 = 0.0;
  if (v7)
  {
    v9 = (void *)v7;
    v10 = a1;
    v11 = dispatch thunk of SearchResultsPresenter.result(at:)(a2);
    if (v11)
    {
      v12 = v11;
      v13 = OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits;
      v14 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35SearchResultsCollectionViewDelegate_pageTraits), "traitCollection");
      v15 = objc_msgSend(v14, "horizontalSizeClass");

      if (v15 == (id)1)
      {
        v16 = objc_msgSend(*(id *)(v2 + v13), "traitCollection");
        v17 = dispatch thunk of SearchResultsPresenter.shouldResultHaveCondensedAppearance(at:in:)(a2, v16);

        objc_msgSend(*(id *)(v3 + v13), "pageContainerSize");
        v19 = sub_1000C62D0(v12, v17 & 1, v18);
      }
      else
      {
        sub_1000C4C9C(a2, v9);
      }
      v8 = v19;

      swift_release(v12);
    }
    else
    {

    }
  }
  return v8;
}

unint64_t sub_1000C6CAC()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[248];

  v0 = sub_10000DF3C(&qword_1007F98D0);
  inited = swift_initStackObject(v0, v8);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFlowLayoutCommonRowHorizontalAlignmentKey);
  v7 = v2;
  AnyHashable.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for UInt32;
  *(_DWORD *)(inited + 72) = 0;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFlowLayoutLastRowHorizontalAlignmentKey);
  v7 = v3;
  AnyHashable.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 168) = &type metadata for UInt32;
  *(_DWORD *)(inited + 144) = 0;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIFlowLayoutRowVerticalAlignmentKey);
  v7 = v4;
  AnyHashable.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 240) = &type metadata for UInt32;
  *(_DWORD *)(inited + 216) = 0;
  return sub_100369F50(inited);
}

char *sub_1000C6DBC(_OWORD *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  objc_class *v6;
  char *v7;
  id v8;
  double left;
  double bottom;
  double right;
  id v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  objc_super v18;
  objc_super v19;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_contentView] = 0;
  sub_1000C7BF4(a1, &v1[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_layoutMetrics]);
  v3 = objc_allocWithZone((Class)UIScrollView);
  v4 = v1;
  v5 = objc_msgSend(v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_contentScrollView] = v5;
  sub_100011020((uint64_t)(a1 + 5), (uint64_t)v20);
  sub_100011020((uint64_t)a1 + 40, (uint64_t)&v21);
  sub_100011020((uint64_t)a1 + 120, (uint64_t)&v22);
  v6 = (objc_class *)type metadata accessor for OnboardingTrayView();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingTrayView_itemViewLayoutItems] = _swiftEmptyArrayStorage;
  sub_1000C7C28(v20, &v7[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingTrayView_layoutMetrics]);
  v19.receiver = v7;
  v19.super_class = v6;
  v8 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v8, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  sub_1000C7C64(v20);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayView] = v8;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayBackgroundView] = v12;

  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for OnboardingPageView();
  v13 = (char *)objc_msgSendSuper2(&v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v14 = *(void **)&v13[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_contentScrollView];
  objc_msgSend(v14, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(v14, "setShowsVerticalScrollIndicator:", 0);
  objc_msgSend(v14, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v13, "addSubview:", v14);
  v15 = *(void **)&v13[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayBackgroundView];
  objc_msgSend(v13, "addSubview:", v15);
  v16 = objc_msgSend(v15, "contentView");
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayView]);

  sub_1000C7C98(a1);
  return v13;
}

void sub_1000C70CC(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  double **v5;
  unint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  _BYTE v17[24];
  char v18[24];

  v2 = v1;
  v4 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayView];
  v5 = (double **)&v4[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingTrayView_itemViewLayoutItems];
  v6 = swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingTrayView_itemViewLayoutItems], v18, 0, 0).n128_u64[0];
  v7 = *v5;
  v8 = *((_QWORD *)*v5 + 2);
  if (!v8)
  {
LABEL_10:
    objc_msgSend(v2, "setNeedsLayout", *(double *)&v6);
    return;
  }
  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  swift_bridgeObjectRetain(v7);
  v9 = 4;
  while ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)&v7[v9]) & 1) == 0)
  {
    v9 += 11;
    if (!--v8)
    {
      v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease(v7);
  swift_beginAccess(v5, v17, 33, 0);
  __chkstk_darwin(v10);
  sub_1005C38F0(v5, (uint64_t (*)(uint64_t, uint64_t *))sub_1000C7CC4);
  v12 = *((_QWORD *)*v5 + 2);
  if (v12 >= v11)
  {
    sub_100451A24(v11, v12);
    v13 = objc_msgSend(a1, "superview", swift_endAccess(v17).n128_f64[0]);
    if (v13)
    {
      v14 = v13;
      sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v15 = v4;
      v16 = v14;
      LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

      if ((v14 & 1) != 0)
        objc_msgSend(a1, "removeFromSuperview");
    }
    goto LABEL_10;
  }
  __break(1u);
}

id sub_1000C729C()
{
  char *v0;
  objc_class *v1;
  void *v2;
  unsigned __int8 v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat MaxY;
  void *v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  CGFloat MinX;
  CGFloat MinY;
  double Width;
  double Height;
  CGFloat v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  CGFloat v36;
  CGFloat v37;
  CGFloat rect;
  objc_super v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  v1 = (objc_class *)type metadata accessor for OnboardingPageView();
  v39.receiver = v0;
  v39.super_class = v1;
  objc_msgSendSuper2(&v39, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayView];
  v3 = objc_msgSend(v2, "isHidden");
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  v8 = 0.0;
  if ((v3 & 1) == 0)
  {
    v9 = v2;
    LayoutMarginsAware<>.layoutFrame.getter(v1);
    objc_msgSend(v9, "measurementsWithFitting:in:", v0, v10, v11);
    v7 = v12;
    v8 = v13;

    v40.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    v5 = floor(CGRectGetMidX(v40) + v7 * -0.5);
    v41.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    MaxY = CGRectGetMaxY(v41);
    v6 = MaxY - v8;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayBackgroundView], "setFrame:", v5, MaxY - v8, v7, v8);
    objc_msgSend(v9, "setFrame:", 0.0, 0.0, v7, v8);
  }
  objc_msgSend(v0, "bounds");
  v15 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_contentScrollView];
  objc_msgSend(v15, "setFrame:");
  v16 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_contentView];
  v17 = 0.0;
  v18 = 0.0;
  if (v16)
  {
    rect = v6;
    v19 = v16;
    v42.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    MinX = CGRectGetMinX(v42);
    v43.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    MinY = CGRectGetMinY(v43);
    v44.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    Width = CGRectGetWidth(v44);
    v36 = v5;
    v37 = v7;
    if ((v3 & 1) != 0)
    {
      v45.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
      Height = CGRectGetHeight(v45);
    }
    else
    {
      v46.origin.x = v5;
      v46.origin.y = rect;
      v46.size.width = v7;
      v46.size.height = v8;
      Height = CGRectGetMinY(v46);
    }
    v24 = Height;
    objc_msgSend(v19, "measurementsWithFitting:in:", v0, Width, Height);
    v17 = v25;
    v4 = v26;
    v47.origin.x = MinX;
    v47.origin.y = MinY;
    v47.size.width = Width;
    v47.size.height = v24;
    v27 = floor(CGRectGetMidX(v47) + v17 * -0.5);
    v48.origin.x = MinX;
    v48.origin.y = MinY;
    v48.size.width = Width;
    v48.size.height = v24;
    v28 = CGRectGetMinY(v48);
    LayoutMarginsAware<>.layoutFrame.getter(v1);
    CGRect.withLayoutDirection(in:relativeTo:)(v0);
    objc_msgSend(v19, "setFrame:");
    if ((v3 & 1) != 0)
      goto LABEL_9;
    v49.origin.x = v27;
    v49.origin.y = v28;
    v49.size.width = v17;
    v49.size.height = v4;
    v29 = CGRectGetMaxY(v49);
    v50.origin.x = v36;
    v50.size.width = v37;
    v50.origin.y = rect;
    v50.size.height = v8;
    if (CGRectGetMinY(v50) > v29)
    {
LABEL_9:
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayBackgroundView], "setEffect:", 0);
      v18 = 0.0;
    }
    else
    {
      v51.origin.x = v36;
      v51.origin.y = rect;
      v51.size.width = v37;
      v51.size.height = v8;
      v30 = CGRectGetHeight(v51);
      v52.origin.x = v27;
      v52.origin.y = v28;
      v52.size.width = v17;
      v52.size.height = v4;
      v31 = CGRectGetMaxY(v52);
      v53.origin.x = v36;
      v53.origin.y = rect;
      v53.size.width = v37;
      v53.size.height = v8;
      v32 = v31 - CGRectGetMinY(v53);
      if (v32 >= v30)
        v18 = v30;
      else
        v18 = v32;
      v33 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension18OnboardingPageView_trayBackgroundView];
      v34 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 4);
      objc_msgSend(v33, "setEffect:", v34);

    }
  }
  objc_msgSend(v15, "setContentSize:", v17, v4);
  objc_msgSend(v15, "setContentInset:", 0.0, 0.0, v18, 0.0);
  return objc_msgSend(v15, "setContentOffset:", 0.0, 0.0);
}

void sub_1000C76B8(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  int v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  objc_super v17;

  v2 = v1;
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for OnboardingPageView();
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  if (!a1 || ((UITraitCollection.prefersAccessibilityLayouts.getter(v6) ^ v5) & 1) != 0)
    goto LABEL_7;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  v9 = objc_msgSend(a1, "preferredContentSizeCategory");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v15 = v13;
  if (v10 == v14 && v12 == v13)
  {

    swift_bridgeObjectRelease_n(v12, 2);
    return;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
LABEL_7:
    objc_msgSend(v2, "setNeedsLayout");
}

id sub_1000C78A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingPageView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for OnboardingPageView()
{
  return objc_opt_self(_TtC22SubscribePageExtension18OnboardingPageView);
}

uint64_t destroy for OnboardingPageView.LayoutMetrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 10);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 15);
}

_OWORD *initializeWithCopy for OnboardingPageView.LayoutMetrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  return a1;
}

_QWORD *assignWithCopy for OnboardingPageView.LayoutMetrics(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  sub_10001216C(a1 + 5, a2 + 5);
  sub_10001216C(a1 + 10, a2 + 10);
  sub_10001216C(a1 + 15, a2 + 15);
  return a1;
}

__n128 initializeWithTake for OnboardingPageView.LayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for OnboardingPageView.LayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingPageView.LayoutMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingPageView.LayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingPageView.LayoutMetrics()
{
  return &type metadata for OnboardingPageView.LayoutMetrics;
}

_OWORD *sub_1000C7BF4(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for OnboardingPageView.LayoutMetrics(a2, a1);
  return a2;
}

_OWORD *sub_1000C7C28(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for OnboardingTrayLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1000C7C64(_QWORD *a1)
{
  destroy for OnboardingTrayLayout.Metrics(a1);
  return a1;
}

_QWORD *sub_1000C7C98(_QWORD *a1)
{
  destroy for OnboardingPageView.LayoutMetrics(a1);
  return a1;
}

uint64_t sub_1000C7CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005C3850(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1000C7CD0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v1 = objc_msgSend(v0, "view");
    if (!v1)
    {
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
    v2 = v1;
    v3 = objc_msgSend(v1, "window");

    if (v3)
    {
      v4 = objc_msgSend(v0, "view");
      if (v4)
      {
        v5 = v4;
LABEL_8:
        objc_msgSend(v5, "safeAreaInsets");

        return;
      }
      goto LABEL_11;
    }
  }
  v6 = objc_msgSend(v0, "parentViewController");
  if (v6)
  {
    v7 = v6;
    v5 = objc_msgSend(v6, "viewIfLoaded");

    if (v5)
      goto LABEL_8;
  }
}

uint64_t sub_1000C7E08()
{
  return type metadata accessor for SearchResultsCollectionCompositionalLayout();
}

char *sub_1000C7E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  char *result;
  char *v22;
  uint64_t v23;

  ObjectType = swift_getObjectType();
  v3[qword_1007F9928] = 0;
  v8 = (uint64_t)&v3[qword_1008517F8];
  *(_QWORD *)(v8 + 8) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = v3;
  SearchAction.term.getter(v10);
  v12 = v11;
  swift_bridgeObjectRelease(v11);
  if (!v12)
  {
    swift_release(a1);
    swift_release(a2);
    swift_release(a3);
    sub_100010E34(v8);

    swift_deallocPartialClassInstance(v9, ObjectType, *(unsigned int *)((swift_isaMask & *v9) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v9) + 0x34));
    return 0;
  }
  v13 = type metadata accessor for AdvertRotationControllerProvider(0);
  v14 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(&v23, v13, a3, v13, v14);
  *(_QWORD *)((char *)v9 + qword_1007F9930) = v23;
  *(_QWORD *)((char *)v9 + qword_1008517F0) = a2;
  swift_retain(a2);

  swift_retain(a1);
  swift_retain(a3);
  v15 = (char *)sub_1005CC11C(a1, a3);
  v16 = *(void **)&v15[qword_100852E90];
  v17 = *(_QWORD *)&v15[qword_1007F9930];
  v18 = v15;
  v19 = v16;
  swift_retain(v17);
  CompoundScrollObserver.addChild(_:)(v20, &protocol witness table for AdvertRotationControllerProvider);

  result = (char *)objc_msgSend(v18, "collectionView", swift_release(v17).n128_f64[0]);
  if (result)
  {
    v22 = result;
    objc_msgSend(result, "setKeyboardDismissMode:", 1);

    swift_release(a1);
    swift_release(a2);
    swift_release(a3);
    return v18;
  }
  __break(1u);
  return result;
}

void sub_1000C8010(void *a1)
{
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  objc_super v10[2];
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.receiver = a1;
  v11.super_class = ObjectType;
  v7 = a1;
  objc_msgSendSuper2(&v11, "viewDidLoad");
  v8 = objc_msgSend(v7, "collectionView");
  if (v8)
  {
    v9 = v8;
    memset(v10, 0, sizeof(v10));
    static AutomationSemantics.page(name:id:)(0x6552686372616573, 0xED000073746C7573, v10);
    sub_100011088((uint64_t)v10, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v6);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_1000C812C(void *a1, uint64_t a2)
{
  sub_1000C8168(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1000C8140(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000C81E4(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1000C8154(void *a1, uint64_t a2)
{
  sub_1000C8168(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_1000C8168(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_1000C81D0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000C81E4(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_1000C81E4(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1, a2);
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

void sub_1000C8254(void *a1, double a2, double a3)
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;
  objc_super v16;

  v16.receiver = v3;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v7 = objc_msgSend(v3, "collectionView");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "collectionViewLayout");

    objc_msgSend(v9, "invalidateLayout");
  }
  v10 = swift_allocObject(&unk_100727780, 24, 7);
  *(_QWORD *)(v10 + 16) = v3;
  v14[4] = sub_1000CAE1C;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10033F618;
  v14[3] = &unk_100727798;
  v11 = _Block_copy(v14);
  v12 = v15;
  v13 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v11, 0, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
}

void sub_1000C8394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_opt_self(UIView);
  v1 = swift_allocObject(&unk_1007277D0, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16);
  v2 = swift_allocObject(&unk_1007277F8, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_1000CAE60;
  *(_QWORD *)(v2 + 24) = v1;
  v5[4] = sub_100030368;
  v6 = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100101718;
  v5[3] = &unk_100727810;
  v3 = _Block_copy(v5);
  v4 = v6;
  swift_retain(v2);
  objc_msgSend((id)v0, "performWithoutAnimation:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  LOBYTE(v0) = swift_isEscapingClosureAtFileLocation(v2, "", 122, 123, 44, 1);
  swift_release(v1);
  swift_release(v2);
  if ((v0 & 1) != 0)
    __break(1u);
}

void sub_1000C84D0(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "collectionView");

    objc_msgSend(v4, "reloadData");
  }
}

void sub_1000C8548(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1000C8254(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

uint64_t sub_1000C85B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F9F00);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F9F08);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007F9F10);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1002CD00C();
  v13 = SearchResultsDiffablePagePresenter.onBeginTrackingGuidedSearchImpressions.getter(v12);
  v14 = sub_10000DF3C(&qword_1007F9F18);
  v15 = sub_100010F98(&qword_1007F9F20, &qword_1007F9F18, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v14, v15);
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_1000C8914, 0, v14, ObjectType, v15);
  swift_release(v13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = SearchResultsDiffablePagePresenter.onDisplayResultsMessage.getter(v16);
  v18 = sub_10000DF3C(&qword_1007F9F28);
  v19 = sub_100010F98(&qword_1007F9F30, &qword_1007F9F28, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v18, v19);
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_1000C89D8, 0, v18, ObjectType, v19);
  swift_release(v17);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  v21 = SearchResultsDiffablePagePresenter.onShowNoResults.getter(v20);
  v22 = sub_10000DF3C(&qword_1007F9F38);
  v23 = sub_100010F98(&qword_1007F9F40, &qword_1007F9F38, (const char *)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v31, v22, v23);
  v24 = v28;
  EventEmitter.addObserver<A>(on:target:method:)(v31, v1, sub_1000C8E94, 0, v22, ObjectType, v23);
  swift_release(v21);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v30);
}

uint64_t sub_1000C88A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a2 + qword_1008517F8;
  result = swift_unknownObjectWeakLoadStrong(a2 + qword_1008517F8);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t (*sub_1000C8914(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100727758, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1000CAE0C;
}

uint64_t sub_1000C8968(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a2 + qword_1008517F8;
  result = swift_unknownObjectWeakLoadStrong(a2 + qword_1008517F8);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t (*sub_1000C89D8(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100727708, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100727730, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1000CADE0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000ADE74;
}

id sub_1000C8A50()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  id v39;
  char *v40;
  __n128 v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  id v44;
  char *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id result;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[4];
  char v72;

  v1 = v0;
  v2 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  __chkstk_darwin(v2);
  v67 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v66 = (char *)&v64 - v5;
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v64 - v8;
  v10 = objc_msgSend(v0, "collectionView", v7);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setHidden:", 1);

  }
  v12 = SearchResultsUnavailableReason.title.getter();
  v14 = v13;
  v15 = SearchResultsUnavailableReason.message.getter();
  v17 = v16;
  v18 = SearchResultsUnavailableReason.action.getter();
  v19 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  v70 = v15;
  if (v18)
  {
    v20 = v18;
    swift_retain(v19);
    v21 = swift_retain(v20);
    v22 = Action.title.getter(v21);
    if (v23)
      v24 = v22;
    else
      v24 = 0;
    v25 = 0xE000000000000000;
    if (v23)
      v25 = v23;
    v64 = v25;
    v65 = v24;
    v26 = Action.artwork.getter(v22);
    if (v26)
    {
      v27 = v26;
      v28 = dispatch thunk of Artwork.isSystemImage.getter(v26);
      if ((v28 & 1) != 0)
      {
        v29 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v27, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter(v28) & 1) != 0)
      {
        v29 = sub_100485648(v27, 0);
      }
      else
      {
        v29 = 0;
      }
      swift_release(v27);
    }
    else
    {
      v29 = 0;
    }
    sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
    v31 = swift_allocObject(&unk_1007276E0, 32, 7);
    *(_QWORD *)(v31 + 16) = v19;
    *(_QWORD *)(v31 + 24) = v20;
    v30 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v65, v64, 0, 0, v29, 0, 0, 0, 0, 0, 0, sub_10006CB30, v31);
    swift_release(v20);
  }
  else
  {
    v30 = 0;
  }
  sub_1000C9A70(v12, v14, v70, v17, v30, (uint64_t)v9);
  swift_bridgeObjectRelease(v14);

  v32 = swift_bridgeObjectRelease(v17);
  v33 = SearchResultsUnavailableReason.contextCard.getter(v32);
  if (v33)
  {
    v34 = v33;
    v36 = v68;
    v35 = v69;
    v37 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
    v38 = (uint64_t)v66;
    v37(v66, v9, v69);
    v39 = objc_allocWithZone((Class)type metadata accessor for ContextualContentUnavailableView());
    swift_retain(v19);
    v40 = sub_10006C708(v38, v34, v19);
    swift_release(v34);
    v41 = swift_release(v19);
    v42 = v67;
    ((void (*)(char *, char *, uint64_t, __n128))v37)(v67, v9, v35, v41);
    if (v40)
      goto LABEL_24;
  }
  else
  {
    v42 = v67;
    v36 = v68;
    v37 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
    v35 = v69;
    v37(v67, v9, v69);
    v38 = (uint64_t)v66;
  }
  sub_100019574(0, &qword_1007F63A0, UIContentUnavailableView_ptr);
  v37((char *)v38, v42, v35);
  v40 = (char *)UIContentUnavailableView.init(configuration:)(v38);
LABEL_24:
  v43 = *(void (**)(char *, uint64_t))(v36 + 8);
  v43(v42, v35);
  v44 = objc_allocWithZone((Class)type metadata accessor for OverlayViewController(0));
  v45 = v40;
  v46 = (void *)OverlayViewController.init(overlayView:)();
  v47 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v48 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v49 = v48;
  static ViewControllerContainment.remove(_:)(v48);

  v50 = *(void **)&v1[v47];
  *(_QWORD *)&v1[v47] = v46;
  v51 = v46;

  v52 = *(void **)&v1[v47];
  v53 = v52;
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v55 = result;
    objc_msgSend(result, "bounds");
    v57 = v56;
    v59 = v58;
    v61 = v60;
    v63 = v62;

    v71[0] = v57;
    v71[1] = v59;
    v71[2] = v61;
    v71[3] = v63;
    v72 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v52, v1, v71);

    return (id)((uint64_t (*)(char *, uint64_t))v43)(v9, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id (*sub_1000C8E94(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007276B8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1000CAD94;
}

uint64_t sub_1000C8EE8()
{
  return sub_1000C8F54((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_1000C8F04(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000C8EE8();

}

uint64_t sub_1000C8F38()
{
  return sub_1000C8F54((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_1000C8F54(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_100010FD8(v11, (uint64_t)v22);
  if (v23)
  {
    sub_100011020((uint64_t)v22, (uint64_t)v18);
    sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
    v12 = v19;
    v13 = v20;
    sub_100011064(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  else
  {
    v14 = sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_1000C90B8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000C8F38();

}

uint64_t sub_1000C90EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[3];
  _QWORD v25[5];
  _QWORD v26[5];
  __int128 v27;
  _QWORD v28[4];
  _QWORD v29[4];

  ObjectType = swift_getObjectType();
  v27 = xmmword_10066F870;
  v4 = sub_10000E99C(&qword_1007F9EF8, type metadata accessor for SearchResultsDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v28[3] = swift_getObjectType();
  v28[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v29[3] = swift_getObjectType();
  v29[0] = v6;
  sub_100010E9C((uint64_t)v28, (uint64_t)v26);
  sub_100010E9C((uint64_t)v26, (uint64_t)v25);
  v7 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v8 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v24, v25, v7, v8, 6) & 1) == 0)
    v24[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  if (*(_QWORD *)&v24[0])
  {
    v22 = v24[0];
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = sub_10020070C(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_10020070C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v22;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100010E9C((uint64_t)v29, (uint64_t)v26);
  sub_100010E9C((uint64_t)v26, (uint64_t)v25);
  v12 = sub_10000DF3C((uint64_t *)&unk_100803050);
  v13 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v24, v25, v12, v13, 6) & 1) == 0)
    v24[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  if (*(_QWORD *)&v24[0])
  {
    v23 = v24[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_10020070C(0, v9[2] + 1, 1, v9);
    v15 = v9[2];
    v14 = v9[3];
    v16 = v23;
    if (v15 >= v14 >> 1)
    {
      v21 = sub_10020070C((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v23;
      v9 = v21;
    }
    v9[2] = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v28, v27, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v26, ObjectType, v4);
  v17 = *(_QWORD *)(v1 + qword_100852EA8);
  v18 = type metadata accessor for SearchResultsPageLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  sub_100011020((uint64_t)v26, (uint64_t)v25);
  sub_100011020((uint64_t)v25, (uint64_t)v24);
  swift_retain(v17);
  v19 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v24, v9, v17, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v19;
  return result;
}

id sub_1000C9424()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F4420);
  v4 = swift_allocObject(v3, 96, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1006725D0;
  v5 = *(_QWORD *)&v0[qword_100852E58];
  v6 = *(_QWORD *)&v0[qword_1007F9930];
  v7 = sub_10000DF3C(&qword_1007F9EE0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(v5);
  swift_retain(v6);
  v8 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v5, v6);
  v9 = sub_100010F98(&qword_1007F9EE8, &qword_1007F9EE0, (const char *)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *(_QWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 40) = v9;
  v10 = type metadata accessor for SearchResultsCollectionElementsObserver();
  v11 = swift_allocObject(v10, 16, 7);
  v12 = sub_10000E99C(&qword_1007F9EF0, (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsCollectionElementsObserver, (uint64_t)&unk_100696D08);
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v4 + 56) = v12;
  v13 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v14 = swift_allocObject(v13, 17, 7);
  *(_BYTE *)(v14 + 16) = 2;
  v15 = sub_10000E99C(&qword_1007F4438, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10069C8D0);
  *(_QWORD *)(v4 + 64) = v14;
  *(_QWORD *)(v4 + 72) = v15;
  v16 = sub_10000E99C(&qword_1007F9EF8, type metadata accessor for SearchResultsDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v17 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v27, ObjectType, v16);
  v18 = TimedMetricsPagePresenter.impressionsCalculator.getter(v17);
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v6);
  result = objc_msgSend(v1, "collectionView", swift_retain(v19).n128_f64[0]);
  if (result)
  {
    v21 = result;
    v22 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    *(_QWORD *)(v4 + 80) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v27, v18, v6, v19, v21);
    *(_QWORD *)(v4 + 88) = &protocol witness table for ImpressionsCollectionElementsObserver;
    v23 = type metadata accessor for CompoundCollectionElementsObserver(0);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    v24 = CompoundCollectionElementsObserver.init(children:)(v4);
    v25 = sub_1003718DC();
    if (swift_dynamicCastClass(v25, v23))
    {
      v26 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_100010340, 0);
      CompoundCollectionElementsObserver.addChild(_:)(v26, &protocol witness table for CompoundCollectionElementsObserver);
      swift_unknownObjectRelease(v25);
      swift_release(v26);
    }
    else
    {
      swift_unknownObjectRelease(v25);
    }
    return (id)v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000C96DC@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SearchResultsPageShelfLayoutSpacingProvider;
  result = sub_1000CAD2C();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000C970C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21[2];

  v1 = sub_10000DF3C(&qword_1007F43E8);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10066F860;
  v3 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v4 = swift_allocObject(v3, 17, 7);
  *(_BYTE *)(v4 + 16) = 2;
  v5 = sub_10000E99C(&qword_1007F43F0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_100687814);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  v6 = objc_msgSend(v0, "collectionView");
  v7 = type metadata accessor for SearchResultItemSupplementaryProvider();
  v8 = swift_allocObject(v7, 40, 7);
  *(_QWORD *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit(v8 + 16);
  swift_unknownObjectWeakInit(v8 + 32);
  swift_unknownObjectWeakAssign(v9, v6);
  v10 = v0;

  *(_QWORD *)(v8 + 24) = &off_100727628;
  swift_unknownObjectWeakAssign(v8 + 16, v10);

  v11 = sub_10000E99C(&qword_1007F9EC0, (uint64_t (*)(uint64_t))type metadata accessor for SearchResultItemSupplementaryProvider, (uint64_t)&unk_10067E698);
  *(_QWORD *)(v2 + 48) = v8;
  *(_QWORD *)(v2 + 56) = v11;
  v12 = sub_10000DF3C(&qword_1007F9EC8);
  v13 = sub_100010F98(&qword_1007F9ED0, &qword_1007F9EC8, byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v21, v12, v13);
  v14 = type metadata accessor for GenericPageItemSupplementaryProvider();
  v15 = swift_allocObject(v14, 64, 7);
  sub_100011020((uint64_t)v21, v15 + 16);
  v16 = type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  v17 = swift_allocObject(v16, 56, 7);
  sub_100010F3C(v21, v17 + 16);
  *(_QWORD *)(v15 + 56) = v17;
  v18 = sub_10000E99C(&qword_100803060, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider, (uint64_t)&unk_100687C98);
  *(_QWORD *)(v2 + 64) = v15;
  *(_QWORD *)(v2 + 72) = v18;
  v19 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v2);
}

void sub_1000C9924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;

  v3 = sub_10000DF3C(&qword_1007F9EB8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100373B90(a1);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v4 + 88))(v6, v3) == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
    v7 = swift_release(*v6);
    v8 = dispatch thunk of SearchResultsDiffablePagePresenter.isAutoPlayEnabled.getter(v7);
    v9 = v8 & 1;
    *(_BYTE *)(v1 + qword_1007F9928) = v8 & 1;
    v10 = type metadata accessor for VideoPlaybackCoordinator(0);
    v11 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph)
                   + qword_100854088);
    if (v11)
    {
      v12 = v11;
      dispatch thunk of VideoPlaybackCoordinator.isAutoPlayEnabled.setter(v9);

    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v10);
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1000C9A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _QWORD);
  id v28;
  id v29;
  id v30;
  void (*v31)(_BYTE *, _QWORD);
  void (*v32)(_BYTE *, _QWORD);
  void (*v33)(_BYTE *, _QWORD);
  id v34;
  void (*v35)(_BYTE *, _QWORD);
  id v36;
  void (*v37)(_BYTE *, _QWORD);
  _BYTE v39[32];

  v12 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v39[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIContentUnavailableConfiguration.search()(v14);
  swift_bridgeObjectRetain(a2);
  UIContentUnavailableConfiguration.text.setter(a1, a2);
  swift_bridgeObjectRetain(a4);
  UIContentUnavailableConfiguration.secondaryText.setter(a3, a4);
  if (a5)
  {
    v17 = a5;
    v18 = objc_msgSend(v17, "title");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    swift_bridgeObjectRelease(v21);
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = v19 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      v23 = objc_msgSend(v17, "title");
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      v27 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v39);
      UIButton.Configuration.title.setter(v24, v26);
      v27(v39, 0);
    }
    v28 = objc_msgSend(v17, "image");
    if (v28)
    {
      v29 = v28;
      v30 = v28;
      v31 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v39);
      UIButton.Configuration.image.setter(v29);
      v31(v39, 0);
      v32 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v39);
      UIButton.Configuration.imagePadding.setter(4.0);
      v32(v39, 0);
      v33 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v39);
      UIButton.Configuration.imagePlacement.setter(8);
      v33(v39, 0);
      v34 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v35 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v39);
      UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v34);
      v35(v39, 0);

    }
    v36 = v17;
    v37 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.buttonProperties.modify(v39);
    UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter(a5);
    v37(v39, 0);

  }
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a6, v16, v12);
}

void sub_1000C9D14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  NSString v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  objc_super v28;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v28.receiver = v5;
  v28.super_class = ObjectType;
  objc_msgSendSuper2(&v28, "collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:", a1, a2, v11, isa);

  v13 = type metadata accessor for SearchTransparencyView();
  v15 = static UICollectionReusableView.elementKind.getter();
  v16 = v14;
  if (v15 == a3 && v14 == a4)
  {
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, v15, v14, 0);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
      return;
  }
  v18 = swift_dynamicCastClass(a2, v13);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = a2;
    v21 = dispatch thunk of SearchResultsDiffablePagePresenter.transparencyLink.getter();
    if (v21)
    {
      v22 = v21;
      v23 = LinkableText.linkedSubstrings.getter();
      sub_100197870(v23, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1000CAE14);
      v25 = v24;
      v26 = swift_bridgeObjectRelease(v23);
      v27 = LinkableText.styledText.getter(v26);
      sub_10005A32C(v27, 0, v25);
      swift_bridgeObjectRelease(v25);
      objc_msgSend(v19, "setNeedsLayout", swift_release(v27).n128_f64[0]);

      swift_release(v22);
    }
    else
    {

    }
  }
}

uint64_t sub_1000C9EE4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v23;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  v18 = a3;
  v19 = a4;
  v20 = a1;
  sub_1000C9D14((uint64_t)v18, v19, v15, v17);

  v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

id sub_1000C9FDC@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id result;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = type metadata accessor for PageGrid.Direction(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - v8;
  v10 = type metadata accessor for PageGrid(0);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v10).n128_u64[0];
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v1, "collectionView", v12);
  if (result)
  {
    v16 = result;
    v39 = v10;
    v40 = a1;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v9, enum case for PageGrid.Direction.vertical(_:), v3);
    objc_msgSend(v16, "bounds");
    v18 = v17;
    v20 = v19;
    sub_1000C7CD0();
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v29 = objc_msgSend(v16, "traitCollection");
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    if (qword_1007F1DE8 != -1)
      swift_once(&qword_1007F1DE8, sub_1003852A0);
    v30 = qword_100854230;
    swift_bridgeObjectRetain(qword_100854230);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000010, 0x8000000100634040, v6, 0, v30, v18, v20, v22, v24, v26, v28);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    v32 = PageGrid.columnCount.getter(v31);
    v33 = dispatch thunk of SearchResultsDiffablePagePresenter.transparencyLinkIndex(columnCount:)(v32);
    if ((v35 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v39);
      v38 = type metadata accessor for IndexPath(0);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v40, 1, 1, v38);
    }
    else
    {
      v36 = v40;
      IndexPath.init(item:section:)(v33, 0, v34);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v39);
      v37 = type metadata accessor for IndexPath(0);
      return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1000CA290(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  double v29;
  double v30;
  __n128 v31;
  double v32;
  double v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;

  v2 = type metadata accessor for PageGrid.Direction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  v37 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v37 - 8);
  v10 = __chkstk_darwin(v37);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = dispatch thunk of SearchResultsDiffablePagePresenter.transparencyLink.getter(v10);
  if (!v13)
    return 0.0;
  v14 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for PageGrid.Direction.vertical(_:), v2);
  objc_msgSend(a1, "bounds");
  v16 = v15;
  v18 = v17;
  sub_1000C7CD0();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = objc_msgSend(a1, "traitCollection");
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  if (qword_1007F1DE8 != -1)
    swift_once(&qword_1007F1DE8, sub_1003852A0);
  v28 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000010, 0x8000000100634040, v5, 0, v28, v16, v18, v20, v22, v24, v26);

  v29 = (*(double (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v30 = static CGFloat.allColumns.getter(v29);
  v31.n128_f64[0] = PageGrid.componentMeasuringSize(spanning:)(v30);
  v33 = sub_1000CAA18(v31, v32, v14, a1);
  v34 = swift_release(v14);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v37, v34);
  return v33;
}

double sub_1000CA4F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void (*v17)(_QWORD);
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  uint64_t v31;
  double (*v32)(char *, uint64_t);
  double v33;
  double v34;
  __n128 v35;
  double v36;
  double v37;
  double v38;
  __n128 v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, __n128);
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  void (*v59)(char *, char *, uint64_t);
  unsigned int v60;
  void (*v61)(char *, _QWORD, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v3 = type metadata accessor for PageGrid.Direction(0);
  v4 = *(_QWORD **)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v59 - v8;
  v10 = type metadata accessor for PageGrid(0);
  v64 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = dispatch thunk of SearchResultsDiffablePagePresenter.transparencyLink.getter(v11);
  v15 = 0.0;
  if (v14)
  {
    v16 = v14;
    v63 = v10;
    v17 = (void (*)(_QWORD))v4[13];
    v60 = enum case for PageGrid.Direction.vertical(_:);
    v61 = (void (*)(char *, _QWORD, uint64_t))v17;
    v17(v9);
    objc_msgSend(a1, "bounds");
    v19 = v18;
    v21 = v20;
    v62 = v1;
    sub_1000C7CD0();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v30 = objc_msgSend(a1, "traitCollection");
    v59 = (void (*)(char *, char *, uint64_t))v4[2];
    v59(v6, v9, v3);
    if (qword_1007F1DE8 != -1)
      swift_once(&qword_1007F1DE8, sub_1003852A0);
    v31 = qword_100854230;
    swift_bridgeObjectRetain(qword_100854230);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000010, 0x8000000100634040, v6, 0, v31, v19, v21, v23, v25, v27, v29);

    v32 = (double (*)(char *, uint64_t))v4[1];
    v33 = v32(v9, v3);
    v34 = static CGFloat.allColumns.getter(v33);
    v35.n128_f64[0] = PageGrid.componentMeasuringSize(spanning:)(v34);
    sub_1000CAA18(v35, v36, v16, a1);
    v38 = v37;
    v39 = swift_release(v16);
    v40 = v63;
    v41 = *(void (**)(char *, uint64_t, __n128))(v64 + 8);
    v41(v13, v63, v39);
    if (v38 != 0.0)
    {
      v61(v9, v60, v3);
      objc_msgSend(a1, "bounds");
      v43 = v42;
      v45 = v44;
      sub_1000C7CD0();
      v47 = v46;
      v49 = v48;
      v51 = v50;
      v53 = v52;
      v54 = objc_msgSend(a1, "traitCollection");
      v59(v6, v9, v3);
      if (qword_1007F1DE8 != -1)
        swift_once(&qword_1007F1DE8, sub_1003852A0);
      v55 = qword_100854230;
      swift_bridgeObjectRetain(qword_100854230);
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000010, 0x8000000100634040, v6, 0, v55, v43, v45, v47, v49, v51, v53);

      v56 = ((uint64_t (*)(char *, uint64_t))v32)(v9, v3);
      v57 = PageGrid.interRowSpace.getter(v56);
      ((void (*)(char *, uint64_t))v41)(v13, v40);
      return v38 + v57;
    }
  }
  return v15;
}

double sub_1000CA880()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + qword_1008517F0));
  sub_100010E34(v0 + qword_1008517F8);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_1007F9930)).n128_u64[0];
  return result;
}

double sub_1000CA8BC(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_1008517F0));
  sub_100010E34(a1 + qword_1008517F8);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_1007F9930)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for SearchResultsDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F9960;
  if (!qword_1007F9960)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsDiffablePageViewController);
  return result;
}

uint64_t sub_1000CA940(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_100674748;
  v2[2] = &unk_100674760;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 1264);
}

uint64_t sub_1000CA998()
{
  return type metadata accessor for SearchResultsDiffablePageViewController(0);
}

uint64_t sub_1000CA9A0()
{
  return TimedMetricsPagePresenter.impressionsTracker.getter();
}

uint64_t sub_1000CA9D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + qword_100852E58);
  a1[3] = type metadata accessor for SearchResultsDiffablePagePresenter(0);
  a1[4] = &protocol witness table for SearchResultsDiffablePagePresenter;
  *a1 = v3;
  return swift_retain(v3);
}

double sub_1000CAA18(__n128 a1, double a2, uint64_t a3, void *a4)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v6 = a1.n128_f64[0];
  v7 = type metadata accessor for LabelPlaceholderCompatibility(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = LinkableText.plainText.getter(v11);
  v14 = v13;
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F2608 != -1)
    swift_once(&qword_1007F2608, sub_1004164F4);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_1000117A8(v15, (uint64_t)qword_100855700);
  v17 = objc_msgSend(a4, "traitCollection");
  v18 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v16, v17);

  v19 = type metadata accessor for Feature(0);
  v38 = v19;
  v39 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v20 = sub_1000117C0(v37);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, enum case for Feature.measurement_with_labelplaceholder(_:), v19);
  LOBYTE(v19) = isFeatureEnabled(_:)(v37);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
  v21 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v12, v14, v18, 4, 0, 0, 0, 0, v19 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v37, v21);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v22 = v38;
  v23 = v39;
  sub_100011064(v37, v38);
  v24 = dispatch thunk of Measurable.measurements(fitting:in:)(a4, v22, *(_QWORD *)(*(_QWORD *)(v23 + 8) + 8), v6, a2);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  if (qword_1007F0B90 != -1)
    swift_once(&qword_1007F0B90, sub_1000110C4);
  v31 = qword_100850610;
  v32 = qword_100850618;
  sub_100011064(qword_1008505F8, qword_100850610);
  AnyDimension.topMargin(from:in:)(a4, v31, v32, v24, v26, v28, v30);
  if (qword_1007F0B98 != -1)
    swift_once(&qword_1007F0B98, sub_1000110E0);
  v33 = qword_100850638;
  v34 = qword_100850640;
  sub_100011064(qword_100850620, qword_100850638);
  AnyDimension.bottomMargin(from:in:)(a4, v33, v34, v24, v26, v28, v30);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v37);
  return v6;
}

unint64_t sub_1000CAD2C()
{
  unint64_t result;

  result = qword_1007F9ED8;
  if (!qword_1007F9ED8)
  {
    result = swift_getWitnessTable("\r-\v", &type metadata for SearchResultsPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_1007F9ED8);
  }
  return result;
}

uint64_t sub_1000CAD70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000CAD94()
{
  return sub_1000C8A50();
}

uint64_t sub_1000CADB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CADE0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000C8968(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000CADE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CAE0C(uint64_t a1)
{
  uint64_t v1;

  return sub_1000C88A4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000CAE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1000D93F4(a1, a2, a3, v3);
}

void sub_1000CAE1C()
{
  sub_1000C8394();
}

uint64_t sub_1000CAE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000CAE34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000CAE3C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000CAE60()
{
  uint64_t v0;

  sub_1000C84D0(v0);
}

uint64_t sub_1000CAE68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for SearchLandingPageGridProvider(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t initializeWithCopy for SearchChartsAndCategoriesPageGridProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SearchChartsAndCategoriesPageGridProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = v8;
  return a1;
}

__n128 initializeWithTake for SearchChartsAndCategoriesPageGridProvider(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SearchChartsAndCategoriesPageGridProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchChartsAndCategoriesPageGridProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchChartsAndCategoriesPageGridProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchChartsAndCategoriesPageGridProvider()
{
  return &type metadata for SearchChartsAndCategoriesPageGridProvider;
}

uint64_t sub_1000CB060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, double a14@<D5>)
{
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t KeyPath;
  uint64_t v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, uint64_t, __n128);
  unsigned int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t (*v50)(char *, uint64_t, __n128);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  __n128 v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;

  v65 = a7;
  v66 = a6;
  v69 = a5;
  v72 = a4;
  v73 = a3;
  v71 = a8;
  v22 = type metadata accessor for Shelf.ContentType(0);
  v74 = *(_QWORD *)(v22 - 8);
  v75 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for PageGrid.Direction(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v64 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v63 - v29;
  v31 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v31);
  v33 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v63 - v35;
  v38 = (char *)&v63 + *(int *)(v37 + 48) - v35;
  sub_1000207A8(a2, (uint64_t)&v63 - v35);
  v63 = v38;
  sub_1000207A8(v73, (uint64_t)v38);
  KeyPath = swift_getKeyPath(&unk_1006748A8);
  v40 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  ReadOnlyLens.subscript.getter(KeyPath, v40);
  v41 = swift_release(KeyPath);
  v70 = v26;
  v42 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v26 + 104);
  if (v77)
    v43 = (unsigned int *)&enum case for PageGrid.Direction.horizontal(_:);
  else
    v43 = (unsigned int *)&enum case for PageGrid.Direction.vertical(_:);
  v44 = *v43;
  v73 = v25;
  v42(v30, v44, v25, v41);
  v45 = swift_getKeyPath(&unk_1006748D8);
  v46 = v40;
  v48 = v74;
  v47 = v75;
  v67 = a1;
  ReadOnlyLens.subscript.getter(v45, v46);
  v49 = swift_release(v45);
  v50 = *(uint64_t (**)(char *, uint64_t, __n128))(v48 + 88);
  v68 = v24;
  v51 = v50(v24, v47, v49);
  if ((_DWORD)v51 == enum case for Shelf.ContentType.searchChartsAndCategories(_:))
  {
    v52 = v64;
    v53 = v70;
    v54 = v73;
    if ((v65 & 1) != 0)
      v55 = 2;
    else
      v55 = v66;
    v56 = UITraitCollection.prefersAccessibilityLayouts.getter(v51);
    if ((v56 & 1) != 0 && (UITraitCollection.isSizeClassCompact.getter(v56) & 1) != 0)
      v55 = 1;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v30, v54);
    v57 = sub_100061084(v55);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000023, 0x8000000100634060, v52, 0, v57, a9, a10, a11, a12, a13, a14);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v54);
    return sub_100011088((uint64_t)v36, &qword_1007F4A60);
  }
  else
  {
    v59 = v69;
    v76 = v69;
    v60 = (uint64_t)&v33[*(int *)(v31 + 48)];
    sub_1000207A8((uint64_t)v36, (uint64_t)v33);
    sub_1000207A8((uint64_t)v63, v60);
    v61 = sub_1000CB84C();
    swift_retain(v59);
    PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v67, v33, v60, v72, &type metadata for GenericPageGridProvider, v61, a9, a10, a11, a12, a13, a14);
    v62 = swift_release(v59);
    (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v30, v73, v62);
    sub_100011088((uint64_t)v36, &qword_1007F4A60);
    sub_100011088(v60, &qword_1007F4A68);
    sub_100011088((uint64_t)v33, &qword_1007F4A68);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v68, v47);
  }
}

uint64_t sub_1000CB448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_1000CB800();
  return PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000CB4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_1000CB800();
  return PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000CB5A8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

uint64_t sub_1000CB5B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1000CB890();
  return PageGridCaching<>.invalidateCache()(a1, v4, a2);
}

uint64_t sub_1000CB5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t v11;

  return sub_1000CB060(a1, a2, a3, a4, *(_QWORD *)v11, *(_QWORD *)(v11 + 16), *(unsigned __int8 *)(v11 + 24), a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000CB5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  __int128 *v12;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;

  v35 = a5;
  v36 = a6;
  v33 = a1;
  v34 = a4;
  v21 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v21);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v33 - v25;
  v27 = *((_QWORD *)v12 + 2);
  v28 = *((_BYTE *)v12 + 24);
  v30 = (char *)&v33 + *(int *)(v29 + 48) - v25;
  sub_1000207A8(a2, (uint64_t)&v33 - v25);
  sub_1000207A8(a3, (uint64_t)v30);
  v37 = *v12;
  v38 = v27;
  v39 = v28;
  v31 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_1000207A8((uint64_t)v26, (uint64_t)v23);
  sub_1000207A8((uint64_t)v30, v31);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v33, v23, v31, v34, v35, v36, a7, a8, a9, a10, a11, a12);
  sub_100011088((uint64_t)v26, &qword_1007F4A60);
  sub_100011088(v31, &qword_1007F4A68);
  return sub_100011088((uint64_t)v23, &qword_1007F4A68);
}

uint64_t sub_1000CB790()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = sub_10000DF3C(&qword_1007F9F60);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v3 + 56) = &type metadata for GenericPageGridProvider;
  *(_QWORD *)(v3 + 64) = sub_1000CB84C();
  *(_QWORD *)(v3 + 72) = sub_1000CB8D4();
  *(_QWORD *)(v3 + 32) = v1;
  swift_retain(v1);
  return v3;
}

unint64_t sub_1000CB800()
{
  unint64_t result;

  result = qword_1007F9F48;
  if (!qword_1007F9F48)
  {
    result = swift_getWitnessTable(&unk_100674834, &type metadata for SearchChartsAndCategoriesPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F9F48);
  }
  return result;
}

unint64_t sub_1000CB84C()
{
  unint64_t result;

  result = qword_1007F9F50;
  if (!qword_1007F9F50)
  {
    result = swift_getWitnessTable(&unk_100699C58, &type metadata for GenericPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F9F50);
  }
  return result;
}

unint64_t sub_1000CB890()
{
  unint64_t result;

  result = qword_1007F9F58;
  if (!qword_1007F9F58)
  {
    result = swift_getWitnessTable("51\v", &type metadata for SearchChartsAndCategoriesPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F9F58);
  }
  return result;
}

unint64_t sub_1000CB8D4()
{
  unint64_t result;

  result = qword_1007F9F68;
  if (!qword_1007F9F68)
  {
    result = swift_getWitnessTable(&unk_100699C98, &type metadata for GenericPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F9F68);
  }
  return result;
}

char *sub_1000CB918(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v42;
  double v43;
  objc_super v44;

  v5 = v4;
  v43 = a4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RiverViewStyling(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  *(_QWORD *)&v5[qword_100851800] = 0;
  swift_unknownObjectWeakInit(&v5[qword_1007F9F70]);
  v20 = qword_1007F2EA0;
  v21 = v5;
  if (v20 != -1)
    swift_once(&qword_1007F2EA0, sub_10051CDB0);
  v22 = xmmword_100856C60;
  v23 = static RiverViewStyling.defaultInterRowSpacing.getter();
  v24 = static RiverViewStyling.defaultInterItemSpacing.getter();
  v25 = static RiverViewStyling.defaultSpeed.getter();
  static RiverViewStyling.defaultRowOffsets.getter();
  RiverViewStyling.init(itemSize:interRowSpacing:interItemSpacing:speed:rowOffsets:reverseAlternatingRows:)(*(double *)&v22, *((double *)&v22 + 1), v23, v24, v25);
  v26 = type metadata accessor for LegacyRiverCardDataSource();
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 32) = v22;
  *(_QWORD *)(v27 + 48) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v27 + 16) = xmmword_100674910;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  v28 = objc_allocWithZone((Class)sub_10000DF3C(&qword_1007FA320));
  *(_QWORD *)&v21[qword_100851808] = RiverView.init(dataSource:styling:)(v29);

  v44.receiver = v21;
  v44.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, v43);
  v31 = qword_100852D38;
  v32 = *(void **)&v30[qword_100852D38];
  v33 = v30;
  objc_msgSend(v32, "setNumberOfLines:", 2);
  v34 = qword_1007F2658;
  v35 = v32;
  if (v34 != -1)
    swift_once(&qword_1007F2658, sub_100416AD0);
  v36 = type metadata accessor for FontUseCase(0);
  v37 = sub_1000117A8(v36, (uint64_t)qword_1008557F0);
  v38 = *(_QWORD *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v12, v37, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v12, 0, 1, v36);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v12);

  objc_msgSend(*(id *)&v30[v31], "setLineBreakMode:", 4);
  v39 = objc_msgSend(v33, "contentView");
  v40 = *(id *)&v33[qword_100851808];
  objc_msgSend(v39, "addSubview:", v40);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  return v33;
}

char *sub_1000CBC88(double a1, double a2, double a3, double a4)
{
  return sub_1000CB918(a1, a2, a3, a4);
}

void sub_1000CBCA8(uint64_t a1)
{
  uint64_t v1;
  id v3;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled) = a1;
  v3 = *(id *)(v1 + qword_100851808);
  dispatch thunk of RiverView.isAnimating.setter(a1);

}

id sub_1000CBD04(void *a1, uint64_t a2)
{
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v3, "isHidden");
}

void sub_1000CBD40(void *a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = (char *)v5.receiver;
  objc_msgSendSuper2(&v5, "setHidden:", a3);
  if ((_DWORD)a3)
    objc_msgSend(*(id *)&v4[qword_100851808], "setHidden:", 1, v5.receiver, v5.super_class);

}

id sub_1000CBDB8(CGRect *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v3 = qword_100851808;
  v4 = *(id *)&v1[qword_100851808];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "sizeThatFits:", v5, v6);
  v8 = v7;
  v10 = v9;

  LODWORD(v4) = v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  objc_msgSend(*(id *)&v1[qword_100852D38], "lastBaselineMaxY");
  if ((_DWORD)v4 == 1)
  {
    v12 = v11 + 24.0;
  }
  else
  {
    v13 = v11 + 14.0;
    v12 = CGRectGetMaxY(*a1) - v10 + -22.0;
    if (v13 > v12)
      v12 = v13;
  }
  return objc_msgSend(*(id *)&v1[v3], "setFrame:", 0.0, floor(v12), v8, v10);
}

id sub_1000CBEB8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];
  objc_super v10;

  v3 = v2;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "prepareForReuse");
  v4 = qword_100851808;
  v5 = *(id *)&v2[qword_100851808];
  v6 = dispatch thunk of RiverView.dataSource.getter();

  swift_beginAccess(v6 + 48, v9, 1, 0);
  v7 = *(_QWORD *)(v6 + 48);
  *(_QWORD *)(v6 + 48) = &_swiftEmptyArrayStorage;
  swift_release(v6);
  swift_bridgeObjectRelease(v7);
  return objc_msgSend(*(id *)&v3[v4], "setHidden:", 0);
}

void sub_1000CBF68(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = a1;
  sub_1000CBEB8((uint64_t)v2, v1);

}

void sub_1000CBF9C(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  id v13;

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1005A3708(a1, a2, a3 & 1);
  v8 = swift_dynamicCastClass(a1, ObjectType);
  if (v8)
  {
    v9 = (char *)v8;
    if ((a3 & 1) != 0)
    {
      v13 = a1;
      sub_1000CC088(v9);
    }
    else
    {
      v10 = *(void **)(v4 + qword_100851808);
      v11 = a1;
      v12 = v10;
      dispatch thunk of RiverView.isAnimating.setter(0);

      swift_unknownObjectWeakAssign(v4 + qword_1007F9F70, v9);
    }

  }
}

void sub_1000CC088(char *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v3 = qword_100851808;
  v4 = *(id *)&a1[qword_100851808];
  objc_msgSend(v4, "setHidden:", 0);
  objc_msgSend(v4, "removeFromSuperview");
  v5 = qword_100851808;
  v6 = *(id *)&v1[qword_100851808];
  objc_msgSend(v6, "setHidden:", 1);
  objc_msgSend(v6, "removeFromSuperview");
  v7 = *(void **)&v1[v5];
  *(_QWORD *)&v1[v5] = v4;
  v8 = v4;

  v9 = objc_msgSend(v1, "contentView");
  objc_msgSend(v9, "addSubview:", v8);

  v10 = *(void **)&a1[v3];
  *(_QWORD *)&a1[v3] = v6;
  v12 = v6;

  v11 = objc_msgSend(a1, "contentView");
  objc_msgSend(v11, "addSubview:", v12);

  objc_msgSend(a1, "setNeedsLayout");
  objc_msgSend(v1, "setNeedsLayout");

}

uint64_t sub_1000CC1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v21[24];

  v5 = v4;
  v7 = sub_1005C0808();
  v8 = TodayCard.media.getter(v7);
  v9 = type metadata accessor for TodayCardMediaRiver(0);
  if (!swift_dynamicCastClass(v8, v9))
    return swift_release(v8);
  v10 = qword_100851808;
  v11 = *(id *)(v4 + qword_100851808);
  v12 = dispatch thunk of RiverView.dataSource.getter();

  v13 = TodayCardMediaRiver.lockups.getter();
  swift_beginAccess(v12 + 48, v21, 1, 0);
  v14 = *(_QWORD *)(v12 + 48);
  *(_QWORD *)(v12 + 48) = v13;
  swift_release(v12);
  swift_bridgeObjectRelease(v14);
  v15 = *(id *)(v5 + v10);
  v16 = dispatch thunk of RiverView.dataSource.getter();

  v17 = type metadata accessor for ArtworkLoader(0);
  v18 = *(_QWORD *)(a4 + qword_100854050);
  if (v18)
  {
    v19 = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v16 + 16) = v18;
    swift_retain(v18);
    swift_release(v16);
    swift_release(v19);
    objc_msgSend(*(id *)(v5 + v10), "setHidden:", 0);
    return swift_release(v8);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v17);
    __break(1u);
  }
  return result;
}

void sub_1000CC330()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;

  v0 = type metadata accessor for TodayCard(0);
  v1 = sub_100054DC4();
  v2 = ItemLayoutContext.typedModel<A>(as:)(&v26, v0, v0, v1);
  v3 = v26;
  if (v26)
  {
    v4 = TodayCard.media.getter(v2);
    swift_release(v3);
    v5 = type metadata accessor for TodayCardMediaRiver(0);
    if (!swift_dynamicCastClass(v4, v5)
      || (v7 = TodayCardMediaRiver.lockups.getter(v6),
          v8 = type metadata accessor for Lockup(0),
          v9 = Array.isNotEmpty.getter(v7, v8),
          v10 = swift_bridgeObjectRelease(v7),
          (v9 & 1) == 0))
    {
      swift_release(v4);
      return;
    }
    v11 = TodayCardMediaRiver.lockups.getter(v10);
    v12 = v11;
    v26 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v25 = v11;
      else
        v25 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v13 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (v13)
        goto LABEL_6;
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v13)
      {
LABEL_6:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v13; ++i)
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
          }
          else
          {
            v15 = *(_QWORD *)(v12 + 8 * i + 32);
            v16 = swift_retain(v15);
          }
          v17 = Lockup.icon.getter(v16);
          if (v17)
          {
            v18 = v17;
            if (qword_1007F2EA0 != -1)
              swift_once(&qword_1007F2EA0, sub_10051CDB0);
            v19 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_100856C60, *((double *)&xmmword_100856C60 + 1));
            swift_release(v15);
            swift_release(v18);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v22 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v21 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v22 >= v21 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
            v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
            specialized Array._endMutation()(v23);
          }
          else
          {
            swift_release(v15);
          }
        }
        swift_bridgeObjectRelease(v12);
        v24 = (_QWORD *)v26;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease(v12);
    v24 = _swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease(v12);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v24);
    swift_release(v4);
    swift_bridgeObjectRelease(v24);
  }
}

void sub_1000CC5B0(void *a1, uint64_t a2, void *a3)
{
  char *v4;
  id v5;
  char *v6;
  char *Strong;
  char *v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  v4 = (char *)v9.receiver;
  v5 = a3;
  objc_msgSendSuper2(&v9, "willMoveToWindow:", v5);
  v6 = &v4[qword_1007F9F70];
  Strong = (char *)swift_unknownObjectWeakLoadStrong(&v4[qword_1007F9F70]);
  if (Strong)
  {
    v8 = Strong;
    sub_1000CC088(Strong);

    swift_unknownObjectWeakAssign(v6, 0);
  }

}

uint64_t sub_1000CC648()
{
  return 1;
}

id sub_1000CC650(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v5, "setIsAccessibilityElement:", a3);
}

uint64_t sub_1000CC694()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_100851800));

  return swift_unknownObjectWeakDestroy(v0 + qword_1007F9F70);
}

uint64_t sub_1000CC6D0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_100851800));

  return swift_unknownObjectWeakDestroy(a1 + qword_1007F9F70);
}

uint64_t type metadata accessor for LegacyRiverTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F9FA0;
  if (!qword_1007F9FA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LegacyRiverTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_1000CC754(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = &unk_100674980;
  return swift_initClassMetadata2(a1, 256, 3, v2, a1 + 808);
}

uint64_t sub_1000CC7AC()
{
  return type metadata accessor for LegacyRiverTodayCardCollectionViewCell(0);
}

ValueMetadata *type metadata accessor for InAppPurchaseActionImplementation()
{
  return &type metadata for InAppPurchaseActionImplementation;
}

unint64_t sub_1000CC7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FA328;
  if (!qword_1007FA328)
  {
    v1 = type metadata accessor for InAppPurchaseAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007FA328);
  }
  return result;
}

uint64_t sub_1000CC810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t (*v33)(char *, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  char *v62;
  __n128 v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  NSString v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  __n128 v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  unint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  void *v114;
  double v115;
  char *v116;
  char *v117;
  __n128 v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t result;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  _QWORD *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[4];
  void **aBlock;
  uint64_t v161;
  uint64_t (*v162)(uint64_t);
  void *v163;
  uint64_t (*v164)(__n128);
  _QWORD *v165;

  v4 = type metadata accessor for ActionMetrics(0, a2);
  __chkstk_darwin(v4);
  v140 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for OpenableDestination(0);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v139 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LegacyAppState(0);
  v151 = *(_QWORD *)(v7 - 8);
  v152 = v7;
  v8 = __chkstk_darwin(v7);
  v153 = (char *)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for OSLogger(0, v8);
  v157 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v156 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v11);
  v138 = (char **)((char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v146 = (char **)((char *)&v137 - v14);
  v143 = sub_10000DF3C(&qword_1007F78F0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v137 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v145 = (char *)&v137 - v17;
  v18 = type metadata accessor for AdamId(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v137 - v23;
  v141 = sub_10000DF3C(&qword_100803510);
  v155 = Promise.__allocating_init()();
  v158 = a2;
  v25 = (uint64_t *)(a2 + qword_100854060);
  v26 = *v25;
  if (*v25)
  {
    v27 = v25[1];
    ObjectType = swift_getObjectType();
    v29 = swift_unknownObjectRetain(v26);
    InAppPurchaseAction.appAdamId.getter(v29);
    v154 = dispatch thunk of AppStateController.stateMachine(forApp:)(v24, ObjectType, v27);
    v31 = v30;
    v32 = swift_unknownObjectRelease(v26);
    v33 = *(uint64_t (**)(char *, uint64_t, __n128))(v19 + 8);
    v149 = v24;
    v34 = v33(v24, v18, v32);
    v35 = InAppPurchaseAction.streamlineBuyAction.getter(v34);
    if (v35)
    {
      v37 = v35;
      v38 = type metadata accessor for OfferAction(0);
      v39 = swift_dynamicCastClass(v37, v38);
      if (v39)
      {
        v40 = v39;
        v41 = (uint64_t)v149;
        OfferAction.adamId.getter();
        InAppPurchaseAction.appAdamId.getter(v42);
        v43 = v158;
        v44 = sub_1000CD9F0(v41, (uint64_t)v21, v158);
        ((void (*)(char *, uint64_t))v33)(v21, v18);
        v45 = ((uint64_t (*)(uint64_t, uint64_t))v33)(v41, v18);
        if (v44)
        {
          swift_release(v155);
          swift_unknownObjectRelease(v154);
          swift_release(v37);
          return v44;
        }
        else
        {
          OfferAction.purchaseToken.getter(v159, v45);
          v97 = v154;
          sub_1000CD414((uint64_t)v159, v31, &aBlock);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v159);
          OfferAction.purchaseToken.setter(&aBlock);
          swift_retain(v37);
          v98 = v146;
          v99 = v143;
          BaseObjectGraph.optional<A>(_:)(v146, v143, v143);
          v100 = v142;
          v101 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v142 + 48))(v98, 1, v99);
          v46 = v155;
          if (v101 == 1)
          {
            sub_100011088((uint64_t)v98, (uint64_t *)&unk_1007F5140);
            v102 = sub_1000559B4();
            v103 = swift_allocError(&type metadata for GeneralActionImplementationError, v102, 0, 0);
            *v104 = 1;
            v105 = Promise.__allocating_init(error:)(v103);
          }
          else
          {
            v106 = (uint64_t)v145;
            (*(void (**)(char *, _QWORD *, uint64_t))(v100 + 32))(v145, v98, v99);
            v105 = sub_10008ED98(v40, v43, v106);
            (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v106, v99);
          }
          swift_release(v37);
          Promise.pipe(to:)(v46);
          swift_unknownObjectRelease(v97);
          swift_release(v37);
          swift_release(v105);
        }
        return v46;
      }
      v36 = swift_release(v37);
    }
    v145 = (char *)v31;
    v47 = a1;
    v48 = InAppPurchaseAction.appBundleId.getter(v36);
    v50 = v49;
    v146 = (_QWORD *)InAppPurchaseAction.productIdentifier.getter();
    v144 = v51;
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v52 = v150;
    v53 = sub_1000117A8(v150, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 16))(v156, v53, v52);
    v54 = sub_10000DF3C(&qword_1007FD430);
    v55 = type metadata accessor for LogMessage(0);
    v56 = swift_allocObject(v54, ((*(unsigned __int8 *)(*(_QWORD *)(v55 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v55 - 8) + 80))+ 5 * *(_QWORD *)(*(_QWORD *)(v55 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v55 - 8) + 80) | 7);
    *(_OWORD *)(v56 + 16) = xmmword_1006749A0;
    LogMessage.init(stringLiteral:)(0xD000000000000029, 0x8000000100634110);
    LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100634140);
    v163 = &type metadata for String;
    aBlock = (void **)v48;
    v161 = v50;
    v57 = swift_bridgeObjectRetain(v50);
    static LogMessage.traceableSensitive(_:)(&aBlock, v57);
    sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
    LogMessage.init(stringLiteral:)(0x6D61644120504169, 0xEB000000003A4449);
    v163 = &type metadata for String;
    v58 = v146;
    v59 = v48;
    v60 = v144;
    aBlock = (void **)v146;
    v161 = v144;
    v61 = swift_bridgeObjectRetain(v144);
    static LogMessage.traceableSensitive(_:)(&aBlock, v61);
    sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
    v62 = v156;
    Logger.debug(_:)(v56, v52, &protocol witness table for OSLogger);
    v63 = swift_bridgeObjectRelease(v56);
    (*(void (**)(char *, uint64_t, __n128))(v157 + 8))(v62, v52, v63);
    swift_bridgeObjectRetain(v50);
    v64 = swift_bridgeObjectRetain(v60);
    v65 = InAppPurchaseAction.appTitle.getter(v64);
    v67 = v66;
    v68 = InAppPurchaseAction.productTitle.getter();
    v70 = v69;
    v71 = objc_allocWithZone((Class)SKPurchaseIntent);
    v157 = v59;
    v72 = v50;
    v73 = (char *)sub_100333968(v59, v50, (uint64_t)v58, v60, v65, v67, v68, v70);
    InAppPurchaseAction.additionalBuyParams.getter();
    v76 = v47;
    if (v74)
    {
      v77 = v74;
      v78 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v75 = swift_bridgeObjectRelease(v77).n128_u64[0];
    }
    else
    {
      v78 = 0;
    }
    v79 = v158;
    v80 = v154;
    v81 = v151;
    objc_msgSend(v73, "setAdditionalBuyParams:", v78, v75);

    v82 = swift_getObjectType();
    v83 = v153;
    dispatch thunk of AppStateMachine.currentState.getter(v82, v145);
    v84 = v152;
    if ((*(unsigned int (**)(char *, uint64_t))(v81 + 88))(v83, v152) != enum case for LegacyAppState.openable(_:))
    {
      swift_bridgeObjectRelease(v60);
      v96 = swift_bridgeObjectRelease(v72);
      (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v83, v84, v96);
LABEL_30:
      v133 = sub_1000CDEDC(v76, v79);
      v46 = v155;
      Promise.pipe(to:)(v155);
      swift_release(v133);
      swift_unknownObjectRelease(v80);

      return v46;
    }
    (*(void (**)(char *, uint64_t))(v81 + 96))(v83, v84);

    v85 = (*(uint64_t (**)(char *, uint64_t))(v147 + 8))(v83, v148);
    v86 = InAppPurchaseAction.minimumShortVersionSupportingInAppPurchaseFlow.getter(v85);
    if (v87)
    {
      v89 = v86;
      v90 = v87;
      v91 = InAppPurchaseAction.appBundleId.getter(v88);
      v93 = v92;
      v94 = objc_allocWithZone((Class)LSApplicationRecord);
      v95 = sub_1000CD918(v91, v93, 1);
      v107 = v95;
      if (!v95)
      {
        swift_bridgeObjectRelease(v72);
        swift_bridgeObjectRelease(v60);
        v132 = v90;
LABEL_28:
        swift_bridgeObjectRelease(v132);
LABEL_29:
        v79 = v158;
        goto LABEL_30;
      }
      v108 = objc_msgSend(v95, "shortVersionString");
      if (v108)
      {
        v109 = v108;
        v156 = v73;
        v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v108);
        v112 = v111;

        LOBYTE(v109) = static VersionStringUtil.isShortVersionString(_:atLeast:)(v110, v112, v89, v90);
        swift_bridgeObjectRelease(v112);
        swift_bridgeObjectRelease(v90);
        if ((v109 & 1) != 0)
        {
          v113 = (_QWORD *)swift_allocObject(&unk_100727A18, 48, 7);
          v113[2] = v157;
          v113[3] = v72;
          v113[4] = v146;
          v113[5] = v60;
          v164 = sub_1000CE0BC;
          v165 = v113;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1000BD6CC;
          v163 = &unk_100727A30;
          v114 = _Block_copy(&aBlock);
          *(_QWORD *)&v115 = swift_release(v165).n128_u64[0];
          v116 = v156;
          objc_msgSend(v156, "send:", v114, v115);
          _Block_release(v114);
          v117 = v149;
          InAppPurchaseAction.appAdamId.getter(v118);
          v119 = v139;
          v120 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v147 + 104))(v139, enum case for OpenableDestination.app(_:), v148);
          v121 = v140;
          static ActionMetrics.notInstrumented.getter(v120);
          v122 = type metadata accessor for OpenAppAction(0);
          swift_allocObject(v122, *(unsigned int *)(v122 + 48), *(unsigned __int16 *)(v122 + 52));
          v123 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(0, 0, v117, 1, v119, 0, v121);
          v124 = v138;
          v125 = v143;
          v126 = v158;
          BaseObjectGraph.optional<A>(_:)(v138, v143, v143);
          v127 = v142;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v142 + 48))(v124, 1, v125) == 1)
          {
            sub_100011088((uint64_t)v124, (uint64_t *)&unk_1007F5140);
            v128 = sub_1000559B4();
            v129 = swift_allocError(&type metadata for GeneralActionImplementationError, v128, 0, 0);
            *v130 = 1;
            v131 = Promise.__allocating_init(error:)(v129);
          }
          else
          {
            v135 = (uint64_t)v137;
            (*(void (**)(char *, _QWORD *, uint64_t))(v127 + 32))(v137, v124, v125);
            v131 = sub_10008ED84(v123, v126, v135);
            (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v135, v125);
          }
          v46 = v155;
          Promise.pipe(to:)(v155);

          swift_release(v123);
          swift_release(v131);
          swift_unknownObjectRelease(v80);

          return v46;
        }

        swift_bridgeObjectRelease(v60);
        swift_bridgeObjectRelease(v72);
        v73 = v156;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease(v90);

    }
    swift_bridgeObjectRelease(v60);
    v132 = v72;
    goto LABEL_28;
  }
  v136 = sub_10000DF3C(&qword_1007FDEA0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v136);
  __break(1u);
  return result;
}

void sub_1000CD414(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _OWORD v28[2];
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for LegacyAppState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010E9C(a1, (uint64_t)&v29);
  v10 = sub_100019574(0, &qword_1007FA330, NSDictionary_ptr);
  if ((swift_dynamicCast(v28, &v29, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
  {
    v26 = a2;
    v11 = *(void **)&v28[0];
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "valueForKey:", v12);

    if (v13)
    {
      _bridgeAnyObjectToAny(_:)(v28, v13);
      swift_unknownObjectRelease(v13);
    }
    else
    {
      memset(v28, 0, sizeof(v28));
    }
    sub_1000302E8((uint64_t)v28, (uint64_t)&v29);
    if (v31)
    {
      if ((swift_dynamicCast(v27, &v29, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v14 = v27[0];
        v15 = v27[1];
        ObjectType = swift_getObjectType();
        v17 = dispatch thunk of AppStateMachine.currentState.getter(ObjectType, v26);
        v18 = LegacyAppState.isLocalApplication.getter(v17);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if ((v18 & 1) == 0)
        {
          v19 = sub_100019574(0, &qword_1007FA338, NSMutableDictionary_ptr);
          v20 = (void *)NSDictionary.init(dictionary:)(v11);
          v29 = v14;
          v30 = v15;
          swift_bridgeObjectRetain(v15);
          v21._object = (void *)0x8000000100634160;
          v21._countAndFlagsBits = 0xD000000000000013;
          String.append(_:)(v21);
          swift_bridgeObjectRelease(v15);
          v22 = v30;
          v23 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v22);
          v29 = 0x6D61726150797562;
          v30 = 0xE900000000000073;
          v24 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v29, &type metadata for String);
          objc_msgSend(v20, "__swift_setObject:forKeyedSubscript:", v23, v24);

          swift_unknownObjectRelease(v24);
          a3[3] = v19;

          *a3 = v20;
          return;
        }

        swift_bridgeObjectRelease(v15);
      }
      else
      {

      }
    }
    else
    {

      sub_100011088((uint64_t)&v29, &qword_1007F6E90);
    }
  }
  sub_100010E9C(a1, (uint64_t)a3);
}

uint64_t sub_1000CD6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v20 = a3;
  v21 = a4;
  v19 = a1;
  v6 = type metadata accessor for OSLogger(0, a5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v10 = sub_1000117A8(v6, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10000DF3C(&qword_1007FD430);
  v12 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 5 * *(_QWORD *)(v12 + 72), *(unsigned __int8 *)(v12 + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_1006749A0;
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100634180);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100634140);
  v18 = v7;
  v24 = &type metadata for String;
  v22 = v19;
  v23 = a2;
  v14 = swift_bridgeObjectRetain(a2);
  static LogMessage.traceableSensitive(_:)(&v22, v14);
  sub_100011088((uint64_t)&v22, &qword_1007F6E90);
  LogMessage.init(stringLiteral:)(0x6D61644120504169, 0xEB000000003A4449);
  v24 = &type metadata for String;
  v22 = v20;
  v23 = v21;
  v15 = swift_bridgeObjectRetain(v21);
  static LogMessage.traceableSensitive(_:)(&v22, v15);
  sub_100011088((uint64_t)&v22, &qword_1007F6E90);
  Logger.debug(_:)(v13, v6, &protocol witness table for OSLogger);
  v16 = swift_bridgeObjectRelease(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v18 + 8))(v9, v6, v16);
}

uint64_t sub_1000CD910(uint64_t *a1, uint64_t a2)
{
  return sub_1000CC810(*a1, a2);
}

id sub_1000CD918(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v12);

  v8 = v12;
  if (v7)
  {
    v9 = v12;
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }
  return v7;
}

uint64_t sub_1000CD9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v80 = a2;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DF3C(&qword_1007F78F0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v69 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetrics(0, v11);
  __chkstk_darwin(v12);
  v76 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OpenableDestination(0);
  v72 = *(_QWORD *)(v14 - 8);
  v73 = v14;
  __chkstk_darwin(v14);
  v75 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AdamId(0);
  v70 = *(_QWORD *)(v16 - 8);
  v71 = v16;
  __chkstk_darwin(v16);
  v74 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LegacyAppState(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for InAppPurchaseState(0);
  v78 = *(_QWORD *)(v22 - 8);
  v79 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StreamlinedInAppPurchaseOfferButtonPresenter(0);
  v81 = static StreamlinedInAppPurchaseOfferButtonPresenter.activeStateDataSource.getter();
  if (!v81)
    return 0;
  v65 = v9;
  v66 = v7;
  v67 = v8;
  v68 = a3;
  v25 = *(_QWORD *)(a3 + qword_100854060);
  if (v25)
  {
    v26 = *(_QWORD *)(a3 + qword_100854060 + 8);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v25);
    v77 = dispatch thunk of AppStateController.stateMachine(forApp:)(a1, ObjectType, v26);
    v29 = v28;
    v30 = dispatch thunk of AppStateController.stateMachine(forApp:)(v80, ObjectType, v26);
    v32 = v31;
    v33 = a1;
    v34 = v81;
    v36 = InAppPurchaseStateDataSource.state(for:subscriptionFamilyId:)(v33, 0, 0, v35);
    if ((InAppPurchaseState.hasBeenPurchased.getter(v36) & 1) != 0
      || (v37 = swift_getObjectType(),
          dispatch thunk of AppStateMachine.currentState.getter(v37, v29),
          v39 = LegacyAppState.hasBeenPurchased.getter(v38),
          (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18),
          (v39 & 1) != 0))
    {
      v40 = swift_getObjectType();
      v41 = dispatch thunk of AppStateMachine.currentState.getter(v40, v32);
      v42 = LegacyAppState.isLocalApplication.getter(v41);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      if ((v42 & 1) != 0)
      {
        v43 = v30;
        v44 = v74;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v74, v80, v71);
        v45 = v75;
        v46 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v72 + 104))(v75, enum case for OpenableDestination.app(_:), v73);
        v47 = v76;
        static ActionMetrics.notInstrumented.getter(v46);
        v48 = type metadata accessor for OpenAppAction(0);
        swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
        v49 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(0, 0, v44, 1, v45, 0, v47);
        swift_retain(v49);
        v51 = v66;
        v50 = v67;
        v52 = v68;
        BaseObjectGraph.optional<A>(_:)(v66, v67, v67);
        v53 = v65;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v65 + 48))(v51, 1, v50) == 1)
        {
          sub_100011088((uint64_t)v51, (uint64_t *)&unk_1007F5140);
          sub_10000DF3C(&qword_100803510);
          v54 = sub_1000559B4();
          v55 = swift_allocError(&type metadata for GeneralActionImplementationError, v54, 0, 0);
          *v56 = 1;
          v57 = Promise.__allocating_init(error:)(v55);
        }
        else
        {
          v58 = (uint64_t)v69;
          (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 32))(v69, v51, v50);
          v57 = sub_10008ED84(v49, v52, v58);
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v58, v50);
        }
        v60 = v78;
        v59 = v79;
        swift_release(v49);
        swift_unknownObjectRelease(v25);
        swift_unknownObjectRelease(v77);
        swift_unknownObjectRelease(v43);
        v61 = swift_release(v81);
        (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v24, v59, v61);
        swift_release(v49);
        return v57;
      }
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v24, v79);
    swift_unknownObjectRelease(v25);
    swift_release(v34);
    swift_unknownObjectRelease(v30);
    swift_unknownObjectRelease(v77);
    return 0;
  }
  v63 = sub_10000DF3C(&qword_1007FDEA0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v63);
  __break(1u);
  return result;
}

uint64_t sub_1000CDEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_1007F78F0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = InAppPurchaseAction.installRequiredAction.getter(v8);
  if (v11)
  {
    v12 = v11;
    BaseObjectGraph.optional<A>(_:)(v5, v6, v6);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_100011088((uint64_t)v5, (uint64_t *)&unk_1007F5140);
      sub_10000DF3C(&qword_100803510);
      v13 = sub_1000559B4();
      v14 = swift_allocError(&type metadata for GeneralActionImplementationError, v13, 0, 0);
      *v15 = 1;
      v16 = Promise.__allocating_init(error:)(v14);
    }
    else
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v10, v5, v6);
      v16 = sub_10008EB60(v12, a2, (uint64_t)v10);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    swift_release(v12);
    return v16;
  }
  else
  {
    sub_10000DF3C(&qword_100803510);
    v17 = sub_1000CE0E0();
    v18 = swift_allocError(&type metadata for InAppPurchaseActionImplementation.ImplementationError, v17, 0, 0);
    return Promise.__allocating_init(error:)(v18);
  }
}

uint64_t sub_1000CE090()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000CE0BC(__n128 a1)
{
  uint64_t *v1;

  return sub_1000CD6D8(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1000CE0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000CE0D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000CE0E0()
{
  unint64_t result;

  result = qword_1007FA340;
  if (!qword_1007FA340)
  {
    result = swift_getWitnessTable(&unk_100674ACC, &type metadata for InAppPurchaseActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007FA340);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InAppPurchaseActionImplementation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1000CE164 + 4 * byte_1006749B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1000CE184 + 4 * byte_1006749B5[v4]))();
}

_BYTE *sub_1000CE164(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1000CE184(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000CE18C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000CE194(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000CE19C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000CE1A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InAppPurchaseActionImplementation.ImplementationError()
{
  return &type metadata for InAppPurchaseActionImplementation.ImplementationError;
}

unint64_t sub_1000CE1C4()
{
  unint64_t result;

  result = qword_1007FA348;
  if (!qword_1007FA348)
  {
    result = swift_getWitnessTable(&unk_100674AA4, &type metadata for InAppPurchaseActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007FA348);
  }
  return result;
}

id sub_1000CE208(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  objc_super v16;
  _QWORD aBlock[5];
  uint64_t v18;

  aBlock[4] = a1;
  v18 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100252D24;
  aBlock[3] = &unk_100727B98;
  v6 = _Block_copy(aBlock);
  v7 = v18;
  swift_retain(a2);
  swift_release(v7);
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for SearchResultsCollectionCompositionalLayout();
  v8 = objc_msgSendSuper2(&v16, "initWithSectionProvider:configuration:", v6, a3);
  _Block_release(v6);
  v9 = type metadata accessor for SearchTransparencyView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
  v11 = v8;
  static UICollectionReusableView.elementKind.getter();
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "registerClass:forDecorationViewOfKind:", ObjCClassFromMetadata, v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  swift_release(a2);
  return v11;
}

double sub_1000CE3D4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t ObjectType;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  id v42;
  __n128 v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  objc_super v54;

  v1 = v0;
  v2 = type metadata accessor for PageGrid.Direction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v53 = (char *)&v50 - v14;
  v15 = (objc_class *)type metadata accessor for SearchResultsCollectionCompositionalLayout();
  v54.receiver = v1;
  v54.super_class = v15;
  objc_msgSendSuper2(&v54, "collectionViewContentSize");
  v17 = v16;
  v18 = objc_msgSend(v1, "collectionView");
  if (v18)
  {
    v19 = v18;
    v52 = v10;
    v20 = objc_msgSend(v1, "collectionView");
    if (v20)
    {
      v21 = v20;
      v51 = v9;
      v22 = objc_msgSend(v20, "delegate");

      if (v22)
      {
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
          v24 = v22;
        else
          v24 = 0;
        if (!v24)
        {

          swift_unknownObjectRelease(v22);
          return v17;
        }
        (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for PageGrid.Direction.vertical(_:), v2);
        v25 = objc_msgSend(v19, "bounds");
        v27 = v26;
        v29 = v28;
        v30 = sub_1000C7CCC(v25);
        v32 = v31;
        v34 = v33;
        v36 = v35;
        v37 = objc_msgSend(v19, "traitCollection");
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
        if (qword_1007F1DE8 != -1)
          swift_once(&qword_1007F1DE8, sub_1003852A0);
        v38 = qword_100854230;
        swift_bridgeObjectRetain(qword_100854230);
        PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000010, 0x8000000100634040, v5, 0, v38, v27, v29, v30, v32, v34, v36);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        v39 = swift_unknownObjectRelease(v22);
        v40 = v53;
        v41 = v51;
        (*(void (**)(char *, char *, uint64_t, __n128))(v52 + 32))(v53, v12, v51, v39);
        v42 = objc_msgSend(v1, "collectionView");
        if (v42)
        {
          v44 = v42;
          v45 = objc_msgSend(v42, "delegate");

          if (v45)
          {
            v46 = swift_getObjectType();
            if (swift_conformsToProtocol2(v46, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
              v47 = v45;
            else
              v47 = 0;
            if (v47)
            {
              sub_1000CA290(v19);
              swift_unknownObjectRelease(v45);
              PageGrid.interRowSpace.getter(v48);

              (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v41);
              return v17;
            }
            v43 = swift_unknownObjectRelease(v45);
          }
        }
        (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v40, v41, v43);
      }
    }

  }
  return v17;
}

void sub_1000CE790(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  objc_class *v27;
  id v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t ObjectType;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  Class isa;
  id v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  id v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  objc_super v76;

  v2 = v1;
  v72 = sub_10000DF3C((uint64_t *)&unk_10080BB50);
  __chkstk_darwin(v72);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (char *)&v64 - v11;
  v12 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v64 - v16;
  __chkstk_darwin(v18);
  v74 = (uint64_t)&v64 - v19;
  v20 = sub_1000CF070(a1);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = (objc_class *)type metadata accessor for SearchResultsCollectionCompositionalLayout();
  v76.receiver = v1;
  v76.super_class = v27;
  v28 = objc_msgSendSuper2(&v76, "layoutAttributesForElementsInRect:", v20, v22, v24, v26);
  if (!v28)
    return;
  v29 = v28;
  v30 = sub_1000CFCE0();
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  v32 = objc_msgSend(v2, "collectionView");
  if (!v32)
    return;
  v33 = v32;
  v34 = objc_msgSend(v32, "delegate");

  if (!v34)
    return;
  v66 = v34;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
    v36 = v66;
  else
    v36 = 0;
  if (!v36)
  {
    swift_unknownObjectRelease(v66);
    return;
  }
  sub_1000C9FDC(v74);
  v75 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v63 = v31;
    else
      v63 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v37 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_bridgeObjectRelease(v31);
    if (v37)
      goto LABEL_10;
LABEL_36:
    swift_bridgeObjectRelease(v31);
    swift_unknownObjectRelease(v66);
LABEL_37:
    sub_100011088(v74, &qword_1007F5520);
    return;
  }
  v37 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v37)
    goto LABEL_36;
LABEL_10:
  v67 = v14;
  v65 = v9;
  v73 = v2;
  if (v37 >= 1)
  {
    v38 = 0;
    v69 = v31 & 0xC000000000000001;
    v70 = v37;
    v39 = v68;
    v71 = v31;
    while (1)
    {
      v40 = v69
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v31)
          : *(id *)(v31 + 8 * v38 + 32);
      v41 = v40;
      v42 = objc_msgSend(v40, "indexPath");
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v42);

      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v39, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      v43 = (uint64_t)&v5[*(int *)(v72 + 48)];
      sub_100049EBC((uint64_t)v17, (uint64_t)v5);
      sub_100049EBC(v74, v43);
      v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v44(v5, 1, v6) == 1)
        break;
      v45 = (uint64_t)v67;
      sub_100049EBC((uint64_t)v5, (uint64_t)v67);
      if (v44((char *)v43, 1, v6) == 1)
      {
        sub_100011088((uint64_t)v17, &qword_1007F5520);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v45, v6);
        v39 = v68;
LABEL_20:
        sub_100011088((uint64_t)v5, (uint64_t *)&unk_10080BB50);
        goto LABEL_26;
      }
      v46 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v65, v43, v6);
      v47 = sub_1000CFD1C();
      v48 = dispatch thunk of static Equatable.== infix(_:_:)(v45, v46, v6, v47);
      v49 = *(void (**)(char *, uint64_t))(v7 + 8);
      v49(v46, v6);
      sub_100011088((uint64_t)v17, &qword_1007F5520);
      v49((char *)v45, v6);
      sub_100011088((uint64_t)v5, &qword_1007F5520);
      v39 = v68;
      if ((v48 & 1) != 0)
        goto LABEL_22;
LABEL_26:
      v59 = sub_1000CF17C(v41);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
      v61 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v60 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 >= v60 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
      ++v38;
      v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
      specialized Array._endMutation()(v62);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v6);
      v31 = v71;
      if (v70 == v38)
      {
        swift_bridgeObjectRelease(v71);
        swift_unknownObjectRelease(v66);
        goto LABEL_37;
      }
    }
    sub_100011088((uint64_t)v17, &qword_1007F5520);
    if (v44((char *)v43, 1, v6) == 1)
    {
      sub_100011088((uint64_t)v5, &qword_1007F5520);
LABEL_22:
      type metadata accessor for SearchTransparencyView();
      static UICollectionReusableView.elementKind.getter();
      v51 = v50;
      v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v51);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v54 = objc_msgSend(v73, "layoutAttributesForDecorationViewOfKind:atIndexPath:", v52, isa);

      if (v54)
      {
        v55 = v54;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
        v57 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v56 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v57 >= v56 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
        v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
        specialized Array._endMutation()(v58);

      }
      goto LABEL_26;
    }
    goto LABEL_20;
  }
  __break(1u);
}

double sub_1000CF070(double a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t ObjectType;
  id v9;

  v3 = objc_msgSend(v1, "collectionView");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "collectionView");
    if (v5 && (v6 = v5, v7 = objc_msgSend(v5, "delegate"), v6, v7))
    {
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
        v9 = v7;
      else
        v9 = 0;
      if (v9)
      {
        sub_1000CA4F0(v4);
        swift_unknownObjectRelease(v7);

      }
      else
      {

        swift_unknownObjectRelease(v7);
      }
    }
    else
    {

    }
  }
  return a1;
}

id sub_1000CF17C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  __n128 v17;
  void *v18;
  id v19;
  uint64_t ObjectType;
  id v21;
  __n128 v22;
  id v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  void *v26;
  id v27;
  __n128 v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  id v35;

  v2 = v1;
  v35 = a1;
  v3 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v34 - v12;
  v14 = objc_msgSend(v1, "collectionView", v11);
  if (!v14)
    return v35;
  v15 = v14;
  v16 = objc_msgSend(v1, "collectionView");
  if (!v16)
    goto LABEL_18;
  v18 = v16;
  v19 = objc_msgSend(v16, "delegate");

  if (!v19)
    goto LABEL_18;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
    v21 = v19;
  else
    v21 = 0;
  if (!v21)
  {
    v17 = swift_unknownObjectRelease(v19);
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v17);
    goto LABEL_19;
  }
  sub_1000C9FDC((uint64_t)v5);
  v22 = swift_unknownObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v22) == 1)
  {
LABEL_19:

    sub_100011088((uint64_t)v5, &qword_1007F5520);
    return v35;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v5, v6);
  v23 = objc_msgSend(v35, "indexPath");
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v23);

  LOBYTE(v23) = static IndexPath.> infix(_:_:)(v9, v13);
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v9, v6);
  if ((v23 & 1) == 0)
  {
    v24(v13, v6);

    return v35;
  }
  v25 = sub_1000CFCE0();
  v26 = (void *)NSCopying.makeCopy()(v25);
  v27 = objc_msgSend(v2, "collectionView");
  if (!v27)
    goto LABEL_23;
  v29 = v27;
  v30 = objc_msgSend(v27, "delegate");

  if (!v30)
    goto LABEL_23;
  v31 = swift_getObjectType();
  if (swift_conformsToProtocol2(v31, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
    v32 = v30;
  else
    v32 = 0;
  if (!v32)
  {
    v28 = swift_unknownObjectRelease(v30);
LABEL_23:
    ((void (*)(char *, uint64_t, __n128))v24)(v13, v6, v28);

    return v26;
  }
  sub_1000CA4F0(v15);
  objc_msgSend(v26, "frame", swift_unknownObjectRelease(v30).n128_f64[0]);
  objc_msgSend(v26, "setFrame:");

  v24(v13, v6);
  return v26;
}

id sub_1000CF4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  Class isa;
  objc_class *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t ObjectType;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  unsigned int v46;
  id v47;
  id v48;
  unint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  NSString v53;
  Class v54;
  id v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  id v71;
  void *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  double v77;
  double v78;
  double v79;
  id v80;
  double MaxY;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  _QWORD v87[2];
  id v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  objc_super v101;
  CGRect v102;

  v4 = v3;
  v98 = a2;
  v99 = a1;
  v6 = type metadata accessor for PageGrid.Direction(0);
  v91 = *(_QWORD *)(v6 - 8);
  v92 = v6;
  __chkstk_darwin(v6);
  v89 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v90 = (char *)v87 - v9;
  v10 = type metadata accessor for PageGrid(0);
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  __chkstk_darwin(v10);
  v93 = (char *)v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_10080BB50);
  __chkstk_darwin(v16);
  v96 = (uint64_t)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v18);
  v20 = (char *)v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)v87 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)v87 - v25;
  v97 = a3;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v28 = (objc_class *)type metadata accessor for SearchResultsCollectionCompositionalLayout();
  v101.receiver = v4;
  v101.super_class = v28;
  v29 = objc_msgSendSuper2(&v101, "layoutAttributesForItemAtIndexPath:", isa);

  v100 = v29;
  if (!v29)
    return 0;
  v30 = objc_msgSend(v4, "collectionView");
  if (!v30)
    goto LABEL_28;
  v31 = v30;
  v32 = objc_msgSend(v4, "collectionView");
  if (!v32
    || (v33 = v32, v34 = objc_msgSend(v32, "delegate"), v33, !v34))
  {

LABEL_28:
    return 0;
  }
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchResultsCollectionViewLayoutDelegate))
    v36 = v34;
  else
    v36 = 0;
  if (!v36)
  {

    swift_unknownObjectRelease(v34);
    return 0;
  }
  v87[1] = v36;
  v88 = v34;
  type metadata accessor for SearchTransparencyView();
  v38 = static UICollectionReusableView.elementKind.getter();
  v39 = v37;
  if (v38 == v99 && v37 == v98)
  {
    v40 = swift_bridgeObjectRelease(v98);
  }
  else
  {
    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v99, v98, v38, v37, 0);
    v40 = swift_bridgeObjectRelease(v39);
    if ((v41 & 1) == 0)
    {

      v48 = v88;
LABEL_27:
      swift_unknownObjectRelease(v48);
      goto LABEL_28;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v26, v97, v12, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
  sub_1000C9FDC((uint64_t)v23);
  v42 = *(int *)(v16 + 48);
  v43 = v96;
  v44 = v96 + v42;
  sub_100049EBC((uint64_t)v26, v96);
  sub_100049EBC((uint64_t)v23, v44);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v45(v43, 1, v12) != 1)
  {
    sub_100049EBC(v43, (uint64_t)v20);
    if (v45(v44, 1, v12) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, v44, v12);
      v49 = sub_1000CFD1C();
      v50 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v15, v12, v49);
      v51 = *(void (**)(char *, uint64_t))(v13 + 8);
      v51(v15, v12);
      sub_100011088((uint64_t)v23, &qword_1007F5520);
      sub_100011088((uint64_t)v26, &qword_1007F5520);
      v51(v20, v12);
      sub_100011088(v43, &qword_1007F5520);
      v47 = v88;
      if ((v50 & 1) != 0)
        goto LABEL_23;
      goto LABEL_26;
    }
    sub_100011088((uint64_t)v23, &qword_1007F5520);
    sub_100011088((uint64_t)v26, &qword_1007F5520);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    v47 = v88;
LABEL_20:
    sub_100011088(v43, (uint64_t *)&unk_10080BB50);
LABEL_26:

    v48 = v47;
    goto LABEL_27;
  }
  sub_100011088((uint64_t)v23, &qword_1007F5520);
  sub_100011088((uint64_t)v26, &qword_1007F5520);
  v46 = v45(v44, 1, v12);
  v47 = v88;
  if (v46 != 1)
    goto LABEL_20;
  sub_100011088(v43, &qword_1007F5520);
LABEL_23:
  v52 = v98;
  swift_bridgeObjectRetain(v98);
  v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  v54 = IndexPath._bridgeToObjectiveC()().super.isa;
  v55 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForDecorationViewOfKind:withIndexPath:", v53, v54);

  v57 = v90;
  v56 = v91;
  v58 = v92;
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, enum case for PageGrid.Direction.vertical(_:), v92);
  v59 = objc_msgSend(v31, "bounds");
  v61 = v60;
  v63 = v62;
  v64 = sub_1000C7CCC(v59);
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v71 = objc_msgSend(v31, "traitCollection");
  v72 = v31;
  v73 = v89;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v89, v57, v58);
  if (qword_1007F1DE8 != -1)
    swift_once(&qword_1007F1DE8, sub_1003852A0);
  v74 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  v75 = v93;
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000010, 0x8000000100634040, v73, 0, v74, v61, v63, v64, v66, v68, v70);

  v76 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  v77 = PageGrid.horizontalMargins.getter(v76);
  v79 = v78;
  v80 = v100;
  objc_msgSend(v100, "frame", v77);
  MaxY = CGRectGetMaxY(v102);
  v83 = MaxY + PageGrid.interRowSpace.getter(v82);
  v84 = sub_1000CA290(v72);
  objc_msgSend(v55, "setFrame:", v79, v83, v84, v85);
  swift_unknownObjectRelease(v88);

  (*(void (**)(char *, uint64_t))(v94 + 8))(v75, v95);
  return v55;
}

id sub_1000CFC90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsCollectionCompositionalLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchResultsCollectionCompositionalLayout()
{
  return objc_opt_self(_TtC22SubscribePageExtension42SearchResultsCollectionCompositionalLayout);
}

unint64_t sub_1000CFCE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4A20;
  if (!qword_1007F4A20)
  {
    v1 = objc_opt_self(UICollectionViewLayoutAttributes);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F4A20);
  }
  return result;
}

unint64_t sub_1000CFD1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FA380;
  if (!qword_1007FA380)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_1007FA380);
  }
  return result;
}

uint64_t sub_1000CFD64()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_1000CFD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005FCD0C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1000CFD90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000CFDA0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1000CFDA8(uint64_t a1, void *a2, __n128 a3)
{
  double v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;

  v4 = a3.n128_f64[0];
  v5 = InAppPurchaseLockup.parent.getter(a1, a3);
  v7 = ((uint64_t (*)(__n128))Lockup.title.getter)(v6);
  v9 = v8;
  v10 = swift_release(v5);
  if (v9)
  {
    v11._object = (void *)0x80000001006342B0;
    v11._countAndFlagsBits = 0xD000000000000035;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v13 = localizedString(_:comment:)(v11, v12);
    v14 = sub_10000DF3C(&qword_1007FA388);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_10066FBA0;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_1000D0764();
    *(_QWORD *)(v15 + 32) = v7;
    *(_QWORD *)(v15 + 40) = v9;
    String.init(format:_:)(v13._countAndFlagsBits, v13._object, v15);
    v9 = v16;
    v10 = swift_bridgeObjectRelease(v13._object);
  }
  Lockup.title.getter(v10);
  v18 = v17;
  v19 = sub_100300E7C(a2, v4);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v18);
  return v19;
}

id sub_1000CFF0C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  char *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  id v29;
  __n128 v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  NSString v35;
  __objc2_meth_list **p_base_meths;
  char v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  Swift::String v41;
  void *object;
  NSString v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSString v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  NSString v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  Swift::Bool v87;
  uint64_t v88;
  Swift::Bool v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  void *v95;
  uint64_t v96;
  char *v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  void (*v102)(char *, char *, uint64_t, __n128);
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  objc_class *v105;
  id v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  id v110;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  id v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  objc_super v126;
  _BYTE v127[32];
  UIImage_optional v128;
  UIImage_optional v129;

  v8 = v7;
  v125 = a3;
  v116 = a2;
  v14 = type metadata accessor for InAppPurchaseTheme(0);
  v15 = *(_QWORD *)(v14 - 8);
  v122 = v14;
  v123 = v15;
  __chkstk_darwin(v14);
  v121 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v124 = (char *)&v112 - v18;
  v19 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v19);
  v118 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v114 = *(_QWORD *)(v21 - 8);
  v115 = v21;
  __chkstk_darwin(v21);
  v113 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v119 = *(v23 - 1);
  v120 = v23;
  __chkstk_darwin(v23);
  v117 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  *(_QWORD *)&v26 = __chkstk_darwin(v25).n128_u64[0];
  v28 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = objc_msgSend(v7, "contentView", v26);
  objc_msgSend(v29, "setLayoutMargins:", a4, a5, a6, a7);

  *(_QWORD *)&v31 = Lockup.title.getter(v30).n128_u64[0];
  v33 = v32;
  v34 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_titleLabel];
  if (v32)
  {
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "setText:", v35);
    swift_bridgeObjectRelease(v33);

  }
  else
  {
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_titleLabel], "setText:", 0, v31);
  }
  objc_msgSend(v34, "setHidden:", v33 == 0);
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  v37 = InAppPurchaseLockup.isSubscription.getter(objc_msgSend(v8, "setNeedsLayout"));
  v38 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_inAppPurchaseLabel];
  if ((v37 & 1) != 0)
  {
    v39 = 0xD00000000000003ALL;
    v40 = 0x80000001006342F0;
  }
  else
  {
    v40 = 0x8000000100634280;
    v39 = 0xD00000000000002DLL;
  }
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(*(Swift::String *)&v39, v41)._object;
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setText:", v43, swift_bridgeObjectRelease(object).n128_f64[0]);

  v46 = InAppPurchaseLockup.parent.getter(v44, v45);
  Lockup.title.getter(v47);
  v49 = v48;
  v51 = v50;
  *(_QWORD *)&v52 = swift_release(v46).n128_u64[0];
  if (v51)
  {
    v53._countAndFlagsBits = 0xD000000000000035;
    v53._object = (void *)0x80000001006342B0;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v55 = localizedString(_:comment:)(v53, v54);
    v56 = sub_10000DF3C(&qword_1007FA388);
    v57 = swift_allocObject(v56, 72, 7);
    *(_OWORD *)(v57 + 16) = xmmword_10066FBA0;
    *(_QWORD *)(v57 + 56) = &type metadata for String;
    *(_QWORD *)(v57 + 64) = sub_1000D0764();
    *(_QWORD *)(v57 + 32) = v49;
    *(_QWORD *)(v57 + 40) = v51;
    String.init(format:_:)(v55._countAndFlagsBits, v55._object, v57);
    v59 = v58;
    p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
    swift_bridgeObjectRelease(v55._object);
    v60 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_subtitleLabel];
    v61 = String._bridgeToObjectiveC()();
    objc_msgSend(v60, "setText:", v61);
    swift_bridgeObjectRelease(v59);

    objc_msgSend(v60, "setHidden:", 0);
  }
  else
  {
    v62 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_subtitleLabel];
    objc_msgSend(v62, "setText:", 0, v52);
    objc_msgSend(v62, "setHidden:", 1);
  }
  InAppPurchaseLockup.descriptionText.getter(objc_msgSend(v8, (SEL)p_base_meths[408]));
  if (v63)
  {
    v64 = v63;
    v65 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_inAppDescription];
    v66 = String._bridgeToObjectiveC()();
    objc_msgSend(v65, "setText:", v66);
    swift_bridgeObjectRelease(v64);

    objc_msgSend(v65, "setHidden:", 0);
  }
  else
  {
    v67 = *(void **)&v8[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_inAppDescription];
    objc_msgSend(v67, "setText:", 0);
    objc_msgSend(v67, "setHidden:", 1);
  }
  v68 = Lockup.offerDisplayProperties.getter(objc_msgSend(v8, (SEL)p_base_meths[408]));
  v69 = a1;
  v70 = v8;
  v71 = v68;
  v73 = Lockup.buttonAction.getter(v72);
  v74 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v28, 1, 1, v74);
  v75 = v114;
  v76 = v115;
  v77 = v113;
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v113, enum case for OfferButtonSubtitlePosition.below(_:), v115);
  v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56);
  v79 = v118;
  v78(v118, 1, 1, v76);
  v80 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  v81 = (uint64_t)v117;
  v82 = v76;
  v83 = v70;
  AccessibilityConditional.init(value:axValue:)(v77, v79, v82, v80);
  sub_10013AB60(v71, v73, 0, (uint64_t)v28, v81, v116, 0, 0);
  swift_release(v73);
  v84 = swift_release(v71);
  (*(void (**)(uint64_t, id, __n128))(v119 + 8))(v81, v120, v84);
  sub_100060E60((uint64_t)v28);
  v85 = *(char **)&v70[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_iconView];
  v86 = *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView];
  v128.value.super.isa = 0;
  v128.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v128, v87);
  v88 = *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_tileIconArtworkView];
  v129.value.super.isa = 0;
  v129.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v129, v89);
  v90 = type metadata accessor for ArtworkView(0);
  v91 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v86, 1, v90, v91);
  v92 = ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v88, 1, v90, v91);
  v93 = v69;
  if (qword_1007F2A80 != -1)
    v92 = swift_once(&qword_1007F2A80, sub_1004355B0);
  v94 = *(double *)&qword_100856268;
  v95 = *(void **)&v83[OBJC_IVAR____TtC22SubscribePageExtension43InAppPurchaseSearchResultCollectionViewCell_bodyBackgroundColor];
  v96 = (uint64_t)v124;
  InAppPurchaseLockup.theme.getter(v92);
  v97 = &v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_theme];
  v98 = swift_beginAccess(&v85[OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_theme], v127, 33, 0);
  v99 = v122;
  v100 = v123;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v123 + 24))(v97, v96, v122, v98);
  v101 = swift_endAccess(v127);
  v102 = *(void (**)(char *, char *, uint64_t, __n128))(v100 + 16);
  v120 = v83;
  v103 = (uint64_t)v121;
  v102(v121, v97, v99, v101);
  sub_10021E640(v103);
  v104 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v104(v103, v99);
  v104(v96, v99);
  v105 = (objc_class *)type metadata accessor for InAppPurchaseView(0);
  v126.receiver = v85;
  v126.super_class = v105;
  v106 = v95;
  objc_msgSendSuper2(&v126, "setBackgroundColor:", v106);
  sub_10021EA50();

  sub_10059FBF8(v94, v94, v93, (uint64_t)v85, v125, 2);
  ((void (*)(uint64_t, char *, uint64_t))v102)(v96, v97, v99);
  sub_10021E640(v96);
  v104(v96, v99);
  objc_msgSend(v85, "setNeedsLayout");
  v107 = sub_1000117FC();
  v109 = (void *)static UIColor.defaultBackground.getter(v107, v108);
  v110 = v120;
  objc_msgSend(v120, "setBackgroundColor:", v109);

  return objc_msgSend(v110, "setNeedsLayout");
}

unint64_t sub_1000D0764()
{
  unint64_t result;

  result = qword_100806FC0;
  if (!qword_100806FC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100806FC0);
  }
  return result;
}

char *sub_1000D07A8(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  objc_class *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  objc_super v33;

  v9 = type metadata accessor for CornerStyle(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_formattedDatePlaceholder;
  type metadata accessor for Placeholder(0);
  v14 = v4;
  v15 = static Placeholder.titleText.getter();
  v17 = v16;
  if (qword_1007F2840 != -1)
    swift_once(&qword_1007F2840, sub_100417570);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_1000117A8(v18, (uint64_t)qword_100855DA8);
  v20 = sub_1005F1D6C(v15, v17, v19);
  v21 = swift_bridgeObjectRelease(v17);
  *(_QWORD *)&v14[v13] = v20;
  v22 = OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_appEventPlaceholder;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v12, enum case for CornerStyle.continuous(_:), v9, v21);
  v23 = type metadata accessor for RoundedCornerView(0);
  v24 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v23)), "init");
  v25 = (void *)objc_opt_self(UIColor);
  v26 = v24;
  v27 = objc_msgSend(v25, "secondarySystemBackgroundColor");
  objc_msgSend(v26, "setBackgroundColor:", v27);

  dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v12, 8.0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&v14[v22] = v26;

  v28 = (objc_class *)type metadata accessor for AppEventPlaceholderView();
  v33.receiver = v14;
  v33.super_class = v28;
  v29 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_formattedDatePlaceholder];
  v31 = v29;
  objc_msgSend(v31, "addSubview:", v30);
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_appEventPlaceholder]);

  return v31;
}

_QWORD *sub_1000D0A28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  objc_class *v6;
  _QWORD *result;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double MinX;
  double Width;
  _BYTE v21[32];
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;
  _QWORD v27[5];
  _OWORD v28[10];
  _QWORD v29[41];
  objc_super v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v1 = (uint64_t)v0;
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (objc_class *)type metadata accessor for AppEventPlaceholderView();
  v30.receiver = v0;
  v30.super_class = v6;
  objc_msgSendSuper2(&v30, "layoutSubviews");
  v31.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v6);
  result = (_QWORD *)CGRectIsEmpty(v31);
  if ((result & 1) == 0)
  {
    if (qword_1007F10B0 != -1)
      swift_once(&qword_1007F10B0, sub_1000B40CC);
    sub_1000B9C1C(xmmword_100851230, v28);
    v8 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_formattedDatePlaceholder];
    v27[3] = type metadata accessor for DynamicTypeLabel(0);
    v27[4] = &protocol witness table for UILabel;
    v26 = 0;
    v27[0] = v8;
    memset(v25, 0, sizeof(v25));
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    v9 = v8;
    AppPromotionFormattedDateLayout.init(metrics:textLabel:liveIndicatorView:backgroundView:vibrancyView:)(v28, v27, (uint64_t)v25, (uint64_t)v23, (uint64_t)v21, v29);
    v10 = LayoutMarginsAware<>.layoutFrame.getter(v6);
    AppPromotionFormattedDateLayout.placeChildren(relativeTo:in:)(v1, v10, v11, v12, v13);
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    LayoutMarginsAware<>.layoutFrame.getter(v6);
    sub_1000B96BC(v1, v29, v14, v15);
    v17 = v16;
    v18 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_appEventPlaceholder);
    v32.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v6);
    MinX = CGRectGetMinX(v32);
    v33.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v6);
    Width = CGRectGetWidth(v33);
    v34.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v6);
    objc_msgSend(v18, "setFrame:", MinX, v17, Width, CGRectGetHeight(v34) - v17);
    return sub_1000B9BA0(v29);
  }
  return result;
}

id sub_1000D0C54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppEventPlaceholderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppEventPlaceholderView()
{
  return objc_opt_self(_TtC22SubscribePageExtension23AppEventPlaceholderView);
}

void sub_1000D0CDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_formattedDatePlaceholder;
  type metadata accessor for Placeholder(0);
  v7 = static Placeholder.titleText.getter();
  v9 = v8;
  if (qword_1007F2840 != -1)
    swift_once(&qword_1007F2840, sub_100417570);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_100855DA8);
  v12 = sub_1005F1D6C(v7, v9, v11);
  v13 = swift_bridgeObjectRelease(v9);
  *(_QWORD *)&v1[v6] = v12;
  v14 = OBJC_IVAR____TtC22SubscribePageExtension23AppEventPlaceholderView_appEventPlaceholder;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2, v13);
  v15 = type metadata accessor for RoundedCornerView(0);
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "secondarySystemBackgroundColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v5, 8.0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)&v1[v14] = v18;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AppEventPlaceholderView.swift", 52, 2, 26, 0);
  __break(1u);
}

uint64_t sub_1000D0EB4()
{
  return Shelf.contentType.getter();
}

uint64_t LinkPresentationProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension46AppPromotionsShelfComponentTypeMappingProvider);
}

uint64_t sub_1000D0F04()
{
  return 0;
}

uint64_t sub_1000D0F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  unint64_t *v14;
  void *v15;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v0 = type metadata accessor for AppPromotionType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - v5;
  v7 = type metadata accessor for AppPromotion(0);
  v8 = sub_10000E99C(&qword_1007FA478, (uint64_t (*)(uint64_t))&type metadata accessor for AppPromotion, (uint64_t)&protocol conformance descriptor for AppPromotion);
  v9 = ItemLayoutContext.typedModel<A>(as:)(&v19, v7, v7, v8);
  v10 = v19;
  if (!v19)
    return 0;
  AppPromotion.promotionType.getter(v9);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v11 == enum case for AppPromotionType.appEvent(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    swift_release(v10);
    v12 = type metadata accessor for AppEventCollectionViewCell(0);
    v13 = type metadata accessor for AppEventCollectionViewCell;
    v14 = (unint64_t *)&unk_1007FA488;
    v15 = &unk_100684440;
  }
  else
  {
    if (v11 != enum case for AppPromotionType.contingentOffer(_:)
      && v11 != enum case for AppPromotionType.offerItem(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v0, v0);
      __break(1u);
      return result;
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    swift_release(v10);
    v12 = type metadata accessor for AppPromotionOfferCollectionViewCell(0);
    v13 = type metadata accessor for AppPromotionOfferCollectionViewCell;
    v14 = (unint64_t *)&unk_1007FA480;
    v15 = &unk_10068CE28;
  }
  sub_10000E99C(v14, v13, (uint64_t)v15);
  return v12;
}

uint64_t sub_1000D10F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void (*v18)(char *, uint64_t, __n128);
  char v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100674CA0);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v12 = swift_getKeyPath(&unk_100674CD0);
  ReadOnlyLens.subscript.getter(v12, v7);
  v13 = swift_release(v12);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.appPromotion(_:), v0);
  v14 = sub_10000E99C((unint64_t *)&qword_1007F4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v25, v0, v14);
  dispatch thunk of RawRepresentable.rawValue.getter(&v23, v0, v14);
  v15 = v26;
  v16 = v24;
  if (v25 == v23 && v26 == v24)
  {
    v17 = swift_bridgeObjectRelease_n(v26, 2);
    v18 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v18(v3, v0, v17);
    ((void (*)(char *, uint64_t))v18)(v6, v0);
    return sub_1000D0F1C();
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v23, v24, 0);
  swift_bridgeObjectRelease(v15);
  v20 = swift_bridgeObjectRelease(v16);
  v21 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
  v21(v3, v0, v20);
  ((void (*)(char *, uint64_t))v21)(v6, v0);
  if ((v19 & 1) != 0)
    return sub_1000D0F1C();
  return 0;
}

uint64_t sub_1000D133C()
{
  return Shelf.contentType.getter();
}

uint64_t sub_1000D135C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  id v30;
  __n128 v31;
  Swift::String v32;
  id v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  Swift::String v50;
  __n128 v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _QWORD v55[2];
  _QWORD v56[3];
  _BYTE v57[8];
  __int128 v58;
  __int128 v59;

  v55[1] = a3;
  v55[0] = type metadata accessor for ActionOutcome(0);
  v5 = *(_QWORD *)(v55[0] - 8);
  v6 = __chkstk_darwin(v55[0]);
  v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LogMessage.StringInterpolation(0, v6);
  __chkstk_darwin(v9);
  v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v55 - v14;
  v16 = type metadata accessor for OSLogger(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v55 - v21;
  if (a1)
  {
    v23 = qword_1007F3450;
    v24 = a1;
    if (v23 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v25 = sub_1000117A8(v16, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25, v16);
    v26 = sub_10000DF3C(&qword_1007FD430);
    v27 = type metadata accessor for LogMessage(0);
    v28 = swift_allocObject(v26, ((*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) | 7);
    *(_OWORD *)(v28 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(70, 2);
    v29._object = (void *)0x8000000100634580;
    v29._countAndFlagsBits = 0xD000000000000038;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *((_QWORD *)&v59 + 1) = sub_1000D1CC0();
    *(_QWORD *)&v58 = v24;
    v30 = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v58, v31);
    sub_1000131E0((uint64_t)&v58);
    v32._countAndFlagsBits = 0x745368747561202CLL;
    v32._object = (void *)0xEE00203A73757461;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    v33 = objc_msgSend(v30, "authorizationStatus");
    type metadata accessor for UNAuthorizationStatus(0);
    *((_QWORD *)&v59 + 1) = v34;
    *(_QWORD *)&v58 = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v58, v35);
    sub_1000131E0((uint64_t)&v58);
    v36._countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    LogMessage.init(stringInterpolation:)(v11);
    Logger.info(_:)(v28, v16, &protocol witness table for OSLogger);
    v37 = swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v37);
    v38 = v55[0];
    (*(void (**)(char *, _QWORD, _QWORD))(v5 + 104))(v8, enum case for ActionOutcome.performed(_:), v55[0]);
    Promise.resolve(_:)(v8);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v38);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v40 = sub_1000117A8(v16, (uint64_t)qword_100857618);
    v41 = v17;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, v40, v16);
    v42 = sub_10000DF3C(&qword_1007FD430);
    v43 = type metadata accessor for LogMessage(0);
    v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
    *(_OWORD *)(v44 + 16) = xmmword_10066FBA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(68, 2);
    v45._countAndFlagsBits = 0xD00000000000003BLL;
    v45._object = (void *)0x8000000100634540;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    v58 = 0u;
    v59 = 0u;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v58, (__n128)0);
    sub_1000131E0((uint64_t)&v58);
    v46._countAndFlagsBits = 0x3A726F727265202CLL;
    v46._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    if (a2)
    {
      swift_getErrorValue(a2, v57, v56);
      v47 = Error.localizedDescription.getter(v56[1], v56[2]);
      *((_QWORD *)&v59 + 1) = &type metadata for String;
      *(_QWORD *)&v58 = v47;
      *((_QWORD *)&v58 + 1) = v49;
    }
    else
    {
      v48 = 0uLL;
      v58 = 0u;
      v59 = 0u;
    }
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v58, v48);
    sub_1000131E0((uint64_t)&v58);
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)(v15);
    Logger.info(_:)(v44, v16, &protocol witness table for OSLogger);
    v51 = swift_bridgeObjectRelease(v44);
    (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v22, v16, v51);
    v52 = sub_1000D1C5C();
    v53 = swift_allocError(&type metadata for UserNotificationsAuthorizationActionImplementation.ImplementationError, v52, 0, 0);
    *v54 = 1;
    Promise.reject(_:)(v53);
    return swift_errorRelease(v53);
  }
}

void sub_1000D1840(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_1000D18B8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _QWORD v27[6];

  v0 = sub_10000DF3C(&qword_100803510);
  v1 = Promise.__allocating_init()(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = objc_msgSend(v2, "bundleIdentifier");

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v8 = type metadata accessor for OSLogger(0, v7);
    sub_1000117A8(v8, (uint64_t)qword_100857618);
    v9 = sub_10000DF3C(&qword_1007FD430);
    v10 = type metadata accessor for LogMessage(0);
    v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) | 7);
    *(_OWORD *)(v11 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x80000001006344D0);
    Logger.info(_:)(v11, v8, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v11);
    v12 = objc_msgSend(objc_allocWithZone((Class)AMSUserNotificationAuthorizationOptions), "init");
    objc_msgSend(v12, "setUserInitiated:", 1);
    v13 = objc_allocWithZone((Class)AMSUserNotificationAuthorizationTask);
    v14 = v12;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v13, "initWithBundleIdentifier:options:", v15, v14, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v17 = objc_msgSend(v16, "requestAuthorization");
    v27[4] = sub_1000D1CA0;
    v27[5] = v1;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 1107296256;
    v27[2] = sub_1000D1840;
    v27[3] = &unk_100727BF0;
    v18 = _Block_copy(v27);
    swift_retain(v1);
    objc_msgSend(v17, "addFinishBlock:", v18, swift_release().n128_f64[0]);
    _Block_release(v18);

  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v19 = type metadata accessor for OSLogger(0, v4);
    sub_1000117A8(v19, (uint64_t)qword_100857618);
    v20 = sub_10000DF3C(&qword_1007FD430);
    v21 = type metadata accessor for LogMessage(0);
    v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
    *(_OWORD *)(v22 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000082, 0x8000000100634440);
    Logger.info(_:)(v22, v19, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v22);
    v23 = sub_1000D1C5C();
    v24 = swift_allocError(&type metadata for UserNotificationsAuthorizationActionImplementation.ImplementationError, v23, 0, 0);
    *v25 = 0;
    Promise.reject(_:)(v24);
    swift_errorRelease(v24);
  }
  return v1;
}

unint64_t sub_1000D1C5C()
{
  unint64_t result;

  result = qword_1007FA490;
  if (!qword_1007FA490)
  {
    result = swift_getWitnessTable(&unk_100674DEC, &type metadata for UserNotificationsAuthorizationActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007FA490);
  }
  return result;
}

uint64_t sub_1000D1CA0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000D135C(a1, a2, v2);
}

uint64_t sub_1000D1CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000D1CB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000D1CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FA498;
  if (!qword_1007FA498)
  {
    v1 = objc_opt_self(AMSUserNotificationAuthorizationResult);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007FA498);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UserNotificationsAuthorizationActionImplementation.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000D1D48 + 4 * byte_100674D05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000D1D7C + 4 * byte_100674D00[v4]))();
}

uint64_t sub_1000D1D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D1D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000D1D8CLL);
  return result;
}

uint64_t sub_1000D1D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000D1DA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000D1DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D1DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserNotificationsAuthorizationActionImplementation.ImplementationError()
{
  return &type metadata for UserNotificationsAuthorizationActionImplementation.ImplementationError;
}

ValueMetadata *type metadata accessor for UserNotificationsAuthorizationActionImplementation()
{
  return &type metadata for UserNotificationsAuthorizationActionImplementation;
}

unint64_t sub_1000D1DDC()
{
  unint64_t result;

  result = qword_1007FA4A0;
  if (!qword_1007FA4A0)
  {
    result = swift_getWitnessTable(&unk_100674DC4, &type metadata for UserNotificationsAuthorizationActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007FA4A0);
  }
  return result;
}

unint64_t sub_1000D1E24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FA4A8;
  if (!qword_1007FA4A8)
  {
    v1 = type metadata accessor for UserNotificationsAuthorizationAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007FA4A8);
  }
  return result;
}

uint64_t sub_1000D1E6C()
{
  return sub_10000E99C(&qword_1007FA4B0, type metadata accessor for GenericProductReviewCollectionViewCell, (uint64_t)&unk_100674E70);
}

double sub_1000D1E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  double v8;
  uint64_t v10;

  v4 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v4);
  v6 = (void (*)(char *, uint64_t, uint64_t))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PageGrid(0);
  (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = sub_1000D1F48(a1, v6, a2);
  sub_1000D2798((uint64_t)v6);
  return v8;
}

double sub_1000D1F48(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t KeyPath;
  _QWORD *v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  double v44;
  __n128 v45;
  uint64_t (*v46)(_QWORD *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  __n128 v55;
  char v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  BOOL v62;
  double v63;
  id v64;
  __n128 v65;
  double v66;
  __n128 v67;
  void (*v68)(_QWORD *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(char *, uint64_t);
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  _QWORD *v86;
  double v87;
  double v88;
  double v89;
  double v90;
  __n128 v91;
  void *v92;
  unint64_t v93;
  int v94;
  char *v95;
  __n128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  char v107;
  __n128 v108;
  double v109;
  double v110;
  double v111;
  uint64_t v112;
  void *v113;
  double v114;
  __n128 v115;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  _QWORD *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t);
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135[2];

  v129 = a2;
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v124 = *(_QWORD *)(v5 - 8);
  v125 = v5;
  __chkstk_darwin(v5);
  v122 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v123 = (char *)&v117 - v9;
  v10 = type metadata accessor for ProductReview.ReviewSource(0, v8);
  v127 = *(_QWORD *)(v10 - 8);
  v128 = v10;
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10000DF3C(&qword_10080FCC0);
  __chkstk_darwin(v13);
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_10000DF3C(&qword_1007FA4B8);
  v126 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v130 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ItemLayoutContext(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v121 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v117 - v21;
  v23 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v23);
  v25 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for PageGrid(0);
  v27 = *(_QWORD *)(v26 - 8);
  v132 = v26;
  v133 = v27;
  v28 = __chkstk_darwin(v26);
  v30 = (uint64_t *)((char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = type metadata accessor for ProductReview(0, v28);
  v32 = sub_10000E99C(&qword_1007FA4C0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReview, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  v134 = a1;
  ItemLayoutContext.typedModel<A>(as:)(v135, v31, v31, v32);
  v33 = v135[0];
  if (!v135[0])
    return 0.0;
  v34 = type metadata accessor for ObjectGraph(0);
  if (!swift_dynamicCastClass(a3, v34))
  {
    swift_release(v33);
    return 0.0;
  }
  v35 = a3;
  v120 = v30;
  sub_10003AFE4((uint64_t)v129, (uint64_t)v25);
  v129 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v129(v22, v134, v17);
  v37 = v132;
  v36 = v133;
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 48))(v25, 1, v132);
  v119 = v35;
  if (v38 == 1)
  {
    KeyPath = swift_getKeyPath(&unk_100674EC0);
    swift_retain(v35);
    v40 = v120;
    ItemLayoutContext.subscript.getter(v120);
    v41 = swift_release(KeyPath);
    v42 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    v42(v22, v17, v41);
    v43 = sub_1000D2798((uint64_t)v25);
  }
  else
  {
    v42 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    v45 = swift_retain(v35);
    v42(v22, v17, v45);
    v46 = *(uint64_t (**)(_QWORD *, char *, uint64_t))(v36 + 32);
    v40 = v120;
    v43 = v46(v120, v25, v37);
  }
  v47 = v130;
  v49 = v127;
  v48 = v128;
  ItemLayoutContext.state.getter(v43);
  v50 = StateLens.init(_:)(v15, &_s5StateVN_2);
  ProductReview.source.getter(v50);
  v51 = (*(uint64_t (**)(uint64_t *, uint64_t))(v49 + 88))(v12, v48);
  if (v51 != enum case for ProductReview.ReviewSource.editorsChoice(_:))
  {
    if (v51 == enum case for ProductReview.ReviewSource.user(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v49 + 96))(v12, v48);
      v57 = v33;
      v58 = *v12;
      v59 = sub_1000D27DC();
      v60 = v131;
      StateLens<A>.currentValue.getter(v135, v131, v59);
      v61 = v40;
      v62 = sub_100233DC8(v134, LOBYTE(v135[0]));
      type metadata accessor for ProductReviewView();
      v63 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v64 = sub_1000826AC();
      swift_getObjectType();
      v65.n128_f64[0] = v63;
      sub_100387FA4(v58, v62, v62, v64, v65);
      v44 = v66;
      swift_release(v58);
      swift_unknownObjectRelease(v64);
      swift_release(v119);
      v67 = swift_release(v57);
      (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v47, v60, v67);
      v68 = *(void (**)(_QWORD *, uint64_t))(v133 + 8);
LABEL_21:
      v68(v61, v132);
      return v44;
    }
    if (v51 == enum case for ProductReview.ReviewSource.reviewSummary(_:))
    {
      v118 = v33;
      (*(void (**)(uint64_t *, uint64_t))(v49 + 96))(v12, v48);
      v92 = (void *)*v12;
      v93 = sub_1000D27DC();
      StateLens<A>.currentValue.getter(v135, v131, v93);
      v94 = LOBYTE(v135[0]);
      v95 = v121;
      v129(v121, v134, v17);
      v97 = v133;
      if (v94 == 2)
      {
        v98 = v123;
        v99 = v95;
        v100 = ItemLayoutContext.componentLayoutOptions.getter(v96);
        v101 = v122;
        static ComponentLayoutOptions.overflowed.getter(v100);
        v102 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
        v103 = v125;
        v104 = dispatch thunk of SetAlgebra.isSuperset(of:)(v101, v125, v102);
        v105 = *(void (**)(char *, uint64_t))(v124 + 8);
        v105(v101, v103);
        v105(v98, v103);
        v106 = v99;
        v97 = v133;
        ((void (*)(char *, uint64_t))v42)(v106, v17);
        v107 = v104 ^ 1;
      }
      else
      {
        ((void (*)(char *, uint64_t))v42)(v95, v17);
        v107 = v94 & 1;
      }
      v61 = v120;
      v109 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v111 = v110;
      v112 = swift_getKeyPath(&unk_100674EF0);
      ItemLayoutContext.subscript.getter(v135);
      swift_release(v112);
      v113 = v135[0];
      sub_1001DC184(v92, v107 & 1, v135[0], v109, v111);
      v44 = v114;
      swift_release(v92);

      swift_release(v119);
      v115 = swift_release(v118);
      (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v47, v131, v115);
      v68 = *(void (**)(_QWORD *, uint64_t))(v97 + 8);
      goto LABEL_21;
    }
    swift_release(v119);
    v108 = swift_release(v33);
    (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v47, v131, v108);
    (*(void (**)(_QWORD *, uint64_t))(v133 + 8))(v40, v132);
    (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v12, v48);
    return 0.0;
  }
  (*(void (**)(uint64_t *, uint64_t))(v49 + 96))(v12, v48);
  v52 = *v12;
  v53 = sub_1000D27DC();
  v54 = StateLens<A>.currentValue.getter(v135, v131, v53);
  v118 = v33;
  if (LOBYTE(v135[0]) == 2)
    v56 = EditorsChoice.isCollapsed.getter(v54);
  else
    v56 = (uint64_t)v135[0] & 1;
  v69 = v124;
  v70 = v125;
  v72 = v122;
  v71 = v123;
  v73 = ItemLayoutContext.componentLayoutOptions.getter(v55);
  static ComponentLayoutOptions.overflowed.getter(v73);
  v74 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v75 = dispatch thunk of SetAlgebra.isSuperset(of:)(v72, v70, v74);
  v76 = *(void (**)(char *, uint64_t))(v69 + 8);
  v76(v72, v70);
  v76(v71, v70);
  v77 = v75 | ~v56;
  v78 = type metadata accessor for EditorsChoiceReviewView();
  LOBYTE(v70) = EditorsChoice.showsBadge.getter(v78);
  v79 = EditorsChoice.title.getter();
  v81 = v80;
  v82 = EditorsChoice.notes.getter();
  v84 = v83;
  v85 = sub_1000826AC();
  v86 = v120;
  v87 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v89 = v88;
  swift_getObjectType();
  sub_1003EAB88(v70 & 1, v79, v81, v82, v84, v77 & 1, v85, v87, v89);
  v44 = v90;
  swift_release(v119);
  swift_unknownObjectRelease(v85);
  swift_release(v52);
  swift_release(v118);
  swift_bridgeObjectRelease(v84);
  v91 = swift_bridgeObjectRelease(v81);
  (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v130, v131, v91);
  (*(void (**)(_QWORD *, uint64_t))(v133 + 8))(v86, v132);
  return v44;
}

uint64_t sub_1000D2798(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1008027B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000D27DC()
{
  unint64_t result;

  result = qword_1007FA4C8;
  if (!qword_1007FA4C8)
  {
    result = swift_getWitnessTable(&unk_10067E570, &_s5StateVN_2);
    atomic_store(result, (unint64_t *)&qword_1007FA4C8);
  }
  return result;
}

int64x2_t sub_1000D2824()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4043000000000000uLL);
  xmmword_100851810 = (__int128)result;
  return result;
}

void sub_1000D2838()
{
  qword_1007FA4D0 = 0x4028000000000000;
}

uint64_t sub_1000D2848(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v10[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F22E8 != -1)
    swift_once(&qword_1007F22E8, sub_1004140B4);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_100854DA0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v6, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  qword_1007FA4F0 = type metadata accessor for StaticDimension(0);
  unk_1007FA4F8 = &protocol witness table for StaticDimension;
  sub_1000117C0(qword_1007FA4D8);
  v10[3] = v1;
  v10[4] = &protocol witness table for FontSource;
  v7 = sub_1000117C0(v10);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  StaticDimension.init(_:scaledLike:)(v10, 13.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

char *sub_1000D2988(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  objc_class *v26;
  id v27;
  uint64_t v28;
  __n128 v29;
  objc_class *v30;
  char *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  objc_super v46;
  objc_super v47;
  objc_super v48;
  objc_super v49;

  v5 = v4;
  v45 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BannerMetrics(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundViewCornerRadius] = 0x4020000000000000;
  v20 = &v5[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_itemLayoutContext];
  v21 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_messageTextView;
  v23 = qword_1007F22E8;
  v24 = v5;
  if (v23 != -1)
    swift_once(&qword_1007F22E8, sub_1004140B4);
  v25 = sub_1000117A8(v16, (uint64_t)qword_100854DA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25, v16);
  v26 = (objc_class *)type metadata accessor for DynamicTypeLinkedTextView(0);
  v27 = objc_allocWithZone(v26);
  *(_QWORD *)&v5[v22] = sub_1001337DC((uint64_t)v19, 0, 0, 1, 0);
  v28 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView;
  *(_QWORD *)&v24[v28] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_bottomSeparatorView] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkTintColor] = 0;
  v24[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_includeBackgroundBorder] = 0;
  sub_1000D2DEC(0, 0, (uint64_t)v15, v29);
  sub_1000D4E80((uint64_t)v15, (uint64_t)&v24[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_configuredMetrics]);

  v30 = (objc_class *)type metadata accessor for BannerCollectionViewCell(0);
  v49.receiver = v24;
  v49.super_class = v30;
  v31 = (char *)objc_msgSendSuper2(&v49, "initWithFrame:", a1, a2, a3, a4);
  v32 = objc_msgSend(v31, "contentView");
  objc_msgSend(v31, "layoutMargins");
  objc_msgSend(v32, "setLayoutMargins:");

  v33 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView;
  v34 = *(void **)&v31[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView];
  objc_msgSend(v34, "setHidden:", 1);
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v35 = v34;
  v36 = (void *)static UIColor.componentBackgroundStandout.getter();
  objc_msgSend(v35, "setBackgroundColor:", v36);

  v37 = *(void **)&v31[v33];
  objc_msgSend(v37, "_setCornerRadius:", *(double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundViewCornerRadius]);
  sub_1000D34B8();
  v38 = objc_msgSend(v31, "contentView");
  objc_msgSend(v38, "addSubview:", v37);

  v39 = *(void **)&v31[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_messageTextView];
  if (*(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.leading(_:), v45);
    sub_10013138C(v12);
  }
  else
  {
    v48.receiver = *(id *)&v31[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_messageTextView];
    v48.super_class = v26;
    v40 = objc_msgSendSuper2(&v48, "textAlignment");
    v47.receiver = v39;
    v47.super_class = v26;
    objc_msgSendSuper2(&v47, "setTextAlignment:", 1);
    v46.receiver = v39;
    v46.super_class = v26;
    if (objc_msgSendSuper2(&v46, "textAlignment") != v40)
      sub_100131694();
  }
  v41 = objc_msgSend(v31, "contentView");
  v42 = v39;
  objc_msgSend(v41, "addSubview:", v42);

  return v31;
}

uint64_t sub_1000D2DEC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  char *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  void (*v31)(_QWORD *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  _QWORD *v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  void *v46;

  v43 = a3;
  v6 = type metadata accessor for FontSource(0, a4);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for StaticDimension(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  if ((a1 & 1) != 0)
  {
    if (qword_1007F22E8 != -1)
      swift_once(&qword_1007F22E8, sub_1004140B4);
    v14 = type metadata accessor for FontUseCase(0);
    v15 = sub_1000117A8(v14, (uint64_t)qword_100854DA0);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16(v9, v15, v14);
    v17 = enum case for FontSource.useCase(_:);
    v18 = (void (*)(char *, uint64_t, uint64_t))v7[13];
    v18(v9, enum case for FontSource.useCase(_:), v6);
    v45 = v6;
    v46 = &protocol witness table for FontSource;
    v19 = sub_1000117C0(v44);
    v20 = (void (*)(_QWORD *, char *, uint64_t))v7[2];
    v20(v19, v9, v6);
    StaticDimension.init(_:scaledLike:)(v44, 30.0);
    v21 = (void (*)(char *, uint64_t))v7[1];
    v21(v9, v6);
    v16(v9, v15, v14);
    v18(v9, v17, v6);
    v45 = v6;
    v46 = &protocol witness table for FontSource;
    v22 = sub_1000117C0(v44);
    v20(v22, v9, v6);
    v23 = v41;
    StaticDimension.init(_:scaledLike:)(v44, 20.0);
    v21(v9, v6);
    v24 = 0.0;
  }
  else
  {
    if ((a2 & 1) != 0)
      v24 = 16.0;
    else
      v24 = 10.0;
    if (qword_1007F22E8 != -1)
      swift_once(&qword_1007F22E8, sub_1004140B4);
    v25 = type metadata accessor for FontUseCase(0);
    v26 = sub_1000117A8(v25, (uint64_t)qword_100854DA0);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v27(v9, v26, v25);
    v28 = enum case for FontSource.useCase(_:);
    v29 = (void (*)(char *, uint64_t, uint64_t))v7[13];
    v29(v9, enum case for FontSource.useCase(_:), v6);
    v45 = v6;
    v46 = &protocol witness table for FontSource;
    v30 = sub_1000117C0(v44);
    v31 = (void (*)(_QWORD *, char *, uint64_t))v7[2];
    v31(v30, v9, v6);
    StaticDimension.init(_:scaledLike:)(v44, 28.0);
    v32 = (void (*)(char *, uint64_t))v7[1];
    v32(v9, v6);
    v27(v9, v26, v25);
    v29(v9, v28, v6);
    v45 = v6;
    v46 = &protocol witness table for FontSource;
    v33 = sub_1000117C0(v44);
    v31(v33, v9, v6);
    v23 = v41;
    StaticDimension.init(_:scaledLike:)(v44, 16.0);
    v32(v9, v6);
  }
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
  v36 = v42;
  v35 = v43;
  v34(v43, v13, v42);
  v37 = type metadata accessor for BannerMetrics(0);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v35 + *(int *)(v37 + 20), v23, v36);
  *(double *)(v35 + *(int *)(v37 + 24)) = v24;
  return result;
}

id sub_1000D31C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  objc_super v31;
  objc_super v32;
  objc_super v33;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork];
  v9 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_messageTextView];
  if (v8)
  {
    (*(void (**)(char *, _QWORD, __n128))(v3 + 104))(v6, enum case for DirectionalTextAlignment.leading(_:), v4);
    sub_10013138C(v6);
  }
  else
  {
    v10 = (objc_class *)type metadata accessor for DynamicTypeLinkedTextView(0);
    v33.receiver = v9;
    v33.super_class = v10;
    v11 = objc_msgSendSuper2(&v33, "textAlignment");
    v32.receiver = v9;
    v32.super_class = v10;
    objc_msgSendSuper2(&v32, "setTextAlignment:", 1);
    v31.receiver = v9;
    v31.super_class = v10;
    if (objc_msgSendSuper2(&v31, "textAlignment") != v11)
      sub_100131694();
  }
  v12 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView;
  v13 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView];
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v1, "traitCollection");
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    if (qword_1007F22F0 != -1)
      swift_once(&qword_1007F22F0, sub_1004140CC);
    v16 = type metadata accessor for FontUseCase(0);
    v17 = sub_1000117A8(v16, (uint64_t)qword_100854DB8);
    v18 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v17, v15);
    v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v18);

    ArtworkView.preferredSymbolConfiguration.setter(v19);
  }
  sub_1000D34B8();
  v20 = *(void **)&v1[v12];
  if (*(_QWORD *)&v1[v7])
  {
    if (!v20)
    {
      v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v22 = *(void **)&v1[v12];
      *(_QWORD *)&v1[v12] = v21;
      v23 = v21;

      v24 = *(void **)&v1[v12];
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend(v1, "contentView");
        objc_msgSend(v26, "addSubview:", v25);

      }
      objc_msgSend(v1, "setNeedsLayout");

    }
  }
  else
  {
    *(_QWORD *)&v1[v12] = 0;

    v27 = *(void **)&v1[v12];
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v1, "contentView");
      objc_msgSend(v29, "addSubview:", v28);

    }
    objc_msgSend(v1, "setNeedsLayout");
  }
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_1000D34B8()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_includeBackgroundBorder);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView);
  v3 = objc_msgSend(v2, "layer");
  v7 = v3;
  if (v1 == 1)
  {
    objc_msgSend(v3, "setBorderWidth:", 1.0);

    v4 = objc_msgSend(v2, "layer");
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v5 = (void *)static UIColor.primaryText.getter();
    v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.05);

    v7 = objc_msgSend(v6, "CGColor");
    objc_msgSend(v4, "setBorderColor:", v7);

  }
  else
  {
    objc_msgSend(v3, "setBorderWidth:", 0.0);
  }

}

void sub_1000D35DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char *v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  id v32;
  double v33;
  char v34;
  char v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  char *v67;
  uint64_t v68;
  double v69;
  CGFloat MinY;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75[24];
  char v76[24];
  objc_super v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  v1 = v0;
  v2 = type metadata accessor for Separator(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  __chkstk_darwin(v2);
  v71 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v74 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticDimension(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for BannerCollectionViewCell(0);
  v77.receiver = v0;
  v77.super_class = v11;
  objc_msgSendSuper2(&v77, "layoutSubviews");
  v12 = objc_msgSend(v0, "contentView");
  v13 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v14 = LayoutMarginsAware<>.layoutFrame.getter(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView], "setFrame:", v14, v16, v18, v20);
  v21 = &v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_configuredMetrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_configuredMetrics], v76, 0, 0);
  v22 = *(double *)&v21[*(int *)(type metadata accessor for BannerMetrics(0) + 24)];
  v78.origin.x = v14;
  v78.origin.y = v16;
  v78.size.width = v18;
  v78.size.height = v20;
  v23 = CGRectGetWidth(v78) - (v22 + v22);
  v79.origin.x = v14;
  v79.origin.y = v16;
  v79.size.width = v18;
  v79.size.height = v20;
  CGRectGetMidX(v79);
  v80.origin.x = v14;
  v80.origin.y = v16;
  v80.size.width = v18;
  v80.size.height = v20;
  MinY = CGRectGetMinY(v80);
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v21, v7);
  v25 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_messageTextView];
  static Dimensions.defaultRoundingRule.getter(v24);
  v26 = objc_msgSend(v25, "traitCollection");
  v69 = StaticDimension.value(compatibleWith:rounded:)(v26, v6);

  objc_msgSend(v25, "firstBaselineFromTop");
  v68 = v27;
  v28 = *(void (**)(char *, uint64_t))(v74 + 8);
  v67 = v6;
  v74 = v4;
  v29 = v4;
  v30 = v28;
  v28(v6, v29);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork];
  v32 = objc_msgSend(v1, "traitCollection", swift_retain(v31).n128_f64[0]);
  v33 = COERCE_DOUBLE(sub_1000D463C(v31, (uint64_t)v32));
  v35 = v34;
  swift_release(v31);

  if ((v35 & 1) == 0)
  {
    v66 = v23;
    v81.origin.x = v14;
    v81.origin.y = v16;
    v81.size.width = v18;
    v81.size.height = v20;
    CGRectGetMinX(v81);
    if (qword_1007F1148 != -1)
      swift_once(&qword_1007F1148, sub_1000D2838);
    v23 = v66 - v33 - *(double *)&qword_1007FA4D0;
  }
  v82.origin.x = v14;
  v82.origin.y = v16;
  v82.size.width = v18;
  v82.size.height = v20;
  objc_msgSend(v25, "sizeThatFits:", v23, CGRectGetHeight(v82));
  if ((v35 & 1) == 0)
  {
    v83.origin.x = v14;
    v83.origin.y = v16;
    v83.size.width = v18;
    v83.size.height = v20;
    CGRectGetMidY(v83);
  }
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  objc_msgSend(v25, "setFrame:");
  v36 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView];
  if (v36 && (v35 & 1) == 0)
  {
    MinY = v33;
    v37 = qword_1007F1150;
    v38 = v36;
    if (v37 != -1)
      swift_once(&qword_1007F1150, sub_1000D2848);
    v39 = qword_1007FA4F0;
    v40 = unk_1007FA4F8;
    sub_100011064(qword_1007FA4D8, qword_1007FA4F0);
    v41 = v67;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v39);
    AnyDimension.value(in:rounded:)(v1, v41, v39, v40);
    v30(v41, v74);
    v84.origin.x = v14;
    v84.origin.y = v16;
    v84.size.width = v18;
    v84.size.height = v20;
    CGRectGetMinX(v84);
    v85.origin.x = v14;
    v85.origin.y = v16;
    v85.size.width = v18;
    v85.size.height = v20;
    CGRectGetMinY(v85);
    v42 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
    ArtworkView.frame.setter(v42);

  }
  v43 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_bottomSeparatorView];
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v1, "bounds");
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v53 = &v44[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
    v54 = swift_beginAccess(&v44[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v75, 0, 0);
    v55 = v71;
    v56 = v72;
    v57 = v53;
    v58 = v73;
    (*(void (**)(char *, char *, uint64_t, __n128))(v72 + 16))(v71, v57, v73, v54);
    v59 = Separator.frame(forBoundingRect:in:)(v44, v46, v48, v50, v52);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v58);
    objc_msgSend(v44, "setFrame:", v59, v61, v63, v65);

  }
}

double sub_1000D3C30(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  double result;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  objc_super v22;

  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for BannerCollectionViewCell(0);
  objc_msgSendSuper2(&v22, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if (!a1)
  {

LABEL_9:
    v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView];
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v1, "traitCollection");
      sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      if (qword_1007F22F0 != -1)
        swift_once(&qword_1007F22F0, sub_1004140CC);
      v18 = type metadata accessor for FontUseCase(0);
      v19 = sub_1000117A8(v18, (uint64_t)qword_100854DB8);
      v20 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v19, v17);
      v21 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v20);

      ArtworkView.preferredSymbolConfiguration.setter(v21);
    }
    return result;
  }
  v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  if (v6 == v9 && v8 == v10)
  {

    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v8, 2).n128_u64[0];
    return result;
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

  swift_bridgeObjectRelease(v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  if ((v13 & 1) == 0)
    goto LABEL_9;
  return result;
}

id sub_1000D3EE4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for BannerCollectionViewCell(0);
  objc_msgSendSuper2(&v16, "prepareForReuse");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork];
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork] = 0;
  swift_release(v2);
  sub_1000D31C0();
  v0[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_includeBackgroundBorder] = 0;
  sub_1000D34B8();
  v3 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkTintColor;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkTintColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkTintColor] = 0;

  v5 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView];
  if (v5)
  {
    v6 = *(void **)&v1[v3];
    v7 = v6;
    v8 = v5;
    ArtworkView.artworkTintColor.setter(v6);

  }
  v9 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_bottomSeparatorView;
  v10 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_bottomSeparatorView];
  if (v10)
  {
    objc_msgSend(v10, "removeFromSuperview");
    v11 = *(void **)&v1[v9];
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)&v1[v9] = 0;

  v12 = *(void **)&v1[v9];
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v1, "contentView");
    objc_msgSend(v14, "addSubview:", v13);

  }
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView], "setHidden:", 1);
}

id sub_1000D406C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000D4140()
{
  return type metadata accessor for BannerCollectionViewCell(0);
}

uint64_t type metadata accessor for BannerCollectionViewCell(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_1007FA530, (uint64_t)&nominal type descriptor for BannerCollectionViewCell);
}

void sub_1000D415C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = "\b";
    v6[5] = "\b";
    v6[6] = "\b";
    v6[7] = "\b";
    v6[8] = &unk_100674F88;
    v4 = type metadata accessor for BannerMetrics(319);
    if (v5 <= 0x3F)
    {
      v6[9] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for BannerMetrics(uint64_t a1)
{
  return sub_10005C17C(a1, qword_1007FA598, (uint64_t)&nominal type descriptor for BannerMetrics);
}

uint64_t *sub_1000D4230(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for StaticDimension(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_1000D42D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for StaticDimension(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_1000D4340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000D43BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000D4438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000D44B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000D4530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D453C);
}

uint64_t sub_1000D453C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000D4578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D4584);
}

uint64_t sub_1000D4584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1000D45C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1000D463C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  __n128 v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  if (!a1)
    return 0;
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  v4 = qword_1007F22F0;
  swift_retain(a1);
  if (v4 != -1)
    swift_once(&qword_1007F22F0, sub_1004140CC);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_100854DB8);
  v7 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v6, a2);
  v8 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v7);

  if ((dispatch thunk of Artwork.isLocalImage.getter(v9) & 1) != 0)
  {
    v10 = v8;
    v11 = dispatch thunk of Artwork.isSystemImage.getter(v10);
    if ((v11 & 1) != 0)
    {
      v12 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(a1, v8, 1);
      goto LABEL_10;
    }
    if ((dispatch thunk of Artwork.isBundleImage.getter(v11) & 1) != 0)
    {
      v12 = sub_100485648(a1, v8);
LABEL_10:
      v14 = v12;

      if (v14)
      {
        objc_msgSend(v14, "size");
        v16 = v15;
        swift_release(a1);

        return v16;
      }
      goto LABEL_13;
    }

  }
LABEL_13:
  if (qword_1007F1140 != -1)
    swift_once(&qword_1007F1140, sub_1000D2824);
  v13 = xmmword_100851810;
  swift_release(a1);

  return v13;
}

void sub_1000D47F8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  char v31;
  double v32;
  double v33;
  uint64_t v34;
  id v35;
  double v36;
  uint64_t v37;
  char v38;
  char v39;
  __n128 v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD v61[2];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v10 = type metadata accessor for FloatingPointRoundingRule(0);
  v63 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  v11 = __chkstk_darwin(v10);
  v62 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicTextAppearance(0, v11);
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v61 - v18;
  v20 = type metadata accessor for LabelPlaceholder(0, v17);
  v68 = *(_QWORD *)(v20 - 8);
  v69 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C(&qword_1007FDE90);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Banner.hideCriteria.getter(v24);
  v27 = type metadata accessor for HideCriteria(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_100011088((uint64_t)v26, &qword_1007FDE90);
  }
  else
  {
    v31 = HideCriteria.isHidden.getter();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    v29 = 0.0;
    v30 = 0.0;
    if ((v31 & 1) != 0)
      return;
  }
  v32 = CGSize.subtracting(insets:)(objc_msgSend(a7, "pageMarginInsets", v29, v30));
  v65 = type metadata accessor for BannerMetrics(0);
  v33 = v32 - (*(double *)(a6 + *(int *)(v65 + 24)) + *(double *)(a6 + *(int *)(v65 + 24)));
  v34 = Banner.leadingArtwork.getter();
  v35 = objc_msgSend(a7, "traitCollection");
  v36 = COERCE_DOUBLE(sub_1000D463C(v34, (uint64_t)v35));
  v61[1] = v37;
  v39 = v38;

  v40 = swift_release(v34);
  if ((v39 & 1) == 0)
  {
    v41 = v33 - v36;
    if (qword_1007F1148 != -1)
      swift_once(&qword_1007F1148, sub_1000D2838);
    v40.n128_u64[0] = qword_1007FA4D0;
    v33 = v41 - *(double *)&qword_1007FA4D0;
  }
  v42 = Banner.message.getter(v40);
  v44 = v43;
  DynamicTextAppearance.init()(v42);
  if (qword_1007F22E8 != -1)
    swift_once(&qword_1007F22E8, sub_1004140B4);
  v45 = type metadata accessor for FontUseCase(0);
  v46 = sub_1000117A8(v45, (uint64_t)qword_100854DA0);
  DynamicTextAppearance.withFontUseCase(_:)(v46);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v15, v67);
  v48 = static LabelPlaceholder.Options.languageAware.getter(v47);
  v49 = objc_msgSend(a7, "traitCollection", LabelPlaceholder.init(_:with:where:)(v42, v44, v19, v48).n128_f64[0]);
  v50 = LabelPlaceholder.measure(toFit:with:)(v49, v33, a4);
  v52 = v51;
  v54 = v53;
  v56 = v55;

  (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v69);
  v57 = type metadata accessor for StaticDimension(0);
  AnyDimension.topMargin(from:in:)(a7, v57, &protocol witness table for StaticDimension, v50, v52, v54, v56);
  AnyDimension.bottomMargin(from:in:)(a7, v57, &protocol witness table for StaticDimension, v50, v52, v54, v56);
  if ((v39 & 1) == 0)
  {
    if (qword_1007F1150 != -1)
      swift_once(&qword_1007F1150, sub_1000D2848);
    v58 = qword_1007FA4F0;
    v59 = unk_1007FA4F8;
    sub_100011064(qword_1007FA4D8, qword_1007FA4F0);
    v60 = v62;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v58);
    AnyDimension.value(in:rounded:)(a7, v60, v58, v59);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v64);
  }
}

void sub_1000D4CA8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundViewCornerRadius] = 0x4020000000000000;
  v6 = &v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_itemLayoutContext];
  v7 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_messageTextView;
  if (qword_1007F22E8 != -1)
    swift_once(&qword_1007F22E8, sub_1004140B4);
  v9 = sub_1000117A8(v2, (uint64_t)qword_100854DA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  v10 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedTextView(0));
  *(_QWORD *)&v1[v8] = sub_1001337DC((uint64_t)v5, 0, 0, 1, 0);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_roundedBackgroundView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_bottomSeparatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtwork] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_leadingArtworkTintColor] = 0;
  v1[OBJC_IVAR____TtC22SubscribePageExtension24BannerCollectionViewCell_includeBackgroundBorder] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/BannerCollectionViewCell.swift", 53, 2, 63, 0);
  __break(1u);
}

uint64_t sub_1000D4E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BannerMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D4EC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BannerMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D4F00(uint64_t a1)
{
  return sub_1000D4FC4(a1, qword_100851868, (NSString **)&UIFontWeightSemibold);
}

uint64_t sub_1000D4F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for MetadataRibbonTextStyle(0);
  sub_100045464(v0, qword_100851880);
  sub_1000117A8(v0, (uint64_t)qword_100851880);
  if (qword_1007F24A8 != -1)
    swift_once(&qword_1007F24A8, sub_1004154A0);
  v1 = type metadata accessor for FontUseCase(0);
  v2 = sub_1000117A8(v1, (uint64_t)qword_1008552E0);
  return static MetadataRibbonTextStyle.useCase(_:)(v2);
}

uint64_t sub_1000D4F9C(uint64_t a1)
{
  return sub_1000D4FC4(a1, qword_100851898, (NSString **)&UIFontWeightSemibold);
}

uint64_t sub_1000D4FB0(uint64_t a1)
{
  return sub_1000D4FC4(a1, qword_1008518B0, (NSString **)&UIFontWeightBold);
}

uint64_t sub_1000D4FC4(uint64_t a1, uint64_t *a2, NSString **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  UIFontTextStyle *v8;
  uint64_t v9;
  NSString *v10;
  NSString *v11;
  uint64_t v13;

  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (UIFontTextStyle *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for MetadataRibbonTextStyle(0);
  sub_100045464(v9, a2);
  sub_1000117A8(v9, (uint64_t)a2);
  v10 = *a3;
  *v8 = UIFontTextStyleCaption1;
  v8[1] = v10;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontUseCase.preferredFontDerivative(_:), v5);
  v11 = UIFontTextStyleCaption1;
  static MetadataRibbonTextStyle.useCase(_:)(v8);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000D50A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetadataRibbonTextStyle(0);
  sub_100045464(v4, qword_1008518C8);
  sub_1000117A8(v4, (uint64_t)qword_1008518C8);
  *(_QWORD *)v3 = 0xD000000000000018;
  *((_QWORD *)v3 + 1) = 0x80000001006347A0;
  *((_QWORD *)v3 + 2) = sub_1000D51A8;
  *((_QWORD *)v3 + 3) = 0;
  *((UIFontWeight *)v3 + 4) = UIFontWeightRegular;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for FontUseCase.systemFont(_:), v0);
  static MetadataRibbonTextStyle.useCase(_:)(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000D51AC(void *a1)
{
  NSString *v2;
  NSString *v3;
  NSString *v4;
  id v5;
  char v6;
  NSString *v7;
  NSString *v8;
  id v9;
  NSString *v10;

  v2 = UIContentSizeCategoryExtraSmall;
  v3 = UIContentSizeCategoryLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v2, v3) & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((static UIContentSizeCategory.<= infix(_:_:)(v2, a1) & 1) != 0)
  {
    v4 = v3;
    v5 = a1;
    v6 = ((uint64_t (*)(void))static UIContentSizeCategory.< infix(_:_:))();

    if ((v6 & 1) != 0)
      return;
  }
  else
  {

  }
  v7 = v3;
  v8 = UIContentSizeCategoryAccessibilityMedium;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v7, v8) & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return;
  }
  if ((static UIContentSizeCategory.<= infix(_:_:)(v7, a1) & 1) != 0)
  {
    v9 = a1;
    v10 = v8;
    static UIContentSizeCategory.< infix(_:_:)(v9, v10);

  }
  else
  {

  }
}

uint64_t sub_1000D52EC(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

uint64_t sub_1000D532C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + qword_1007FA5D8);
}

void sub_1000D533C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1000D5528();
}

void sub_1000D5360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  void *Strong;
  void *v7;
  id v8;
  _QWORD *v9;
  id v10;
  char v11;
  uint64_t v12;
  void *v13;
  objc_super v14;

  v5 = (objc_class *)type metadata accessor for TransitionViewContainer(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v14.receiver = v4;
  v14.super_class = v5;
  objc_msgSendSuper2(&v14, "layoutSubviews");
  Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v4 + qword_1007FA5D8);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "superview");

    if (v8)
    {
      sub_10000EF74();
      v9 = v4;
      v10 = v8;
      v11 = static NSObject.== infix(_:_:)(v10, v9);

      if ((v11 & 1) != 0)
      {
        v12 = swift_unknownObjectWeakLoadStrong((char *)v9 + qword_1007FA5D8);
        if (v12)
        {
          v13 = (void *)v12;
          objc_msgSend(v9, "bounds");
          objc_msgSend(v13, "setFrame:");

        }
      }
    }
  }
}

void sub_1000D5470(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1000D5360((uint64_t)v4, v1, v2, v3);

}

void sub_1000D54A4()
{
  sub_1000D5598();
}

id sub_1000D54C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for TransitionViewContainer(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_1000D550C(uint64_t a1)
{
  return swift_unknownObjectWeakDestroy(a1 + qword_1007FA5D8);
}

uint64_t type metadata accessor for TransitionViewContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011EB8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransitionViewContainer);
}

void sub_1000D5528()
{
  char *v0;

  swift_unknownObjectWeakInit(&v0[qword_1007FA5D8], 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/TransitionViewContainer.swift", 52, 2, 34, 0);
  __break(1u);
}

void sub_1000D5598()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.TransitionViewContainer", 46, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_1000D55C4()
{
  return sub_10000E99C(&qword_1007FA660, type metadata accessor for BannerCollectionViewCell, (uint64_t)&unk_100675028);
}

double sub_1000D55F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  id v15;
  uint64_t KeyPath;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  uint64_t v24;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for BannerMetrics(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Banner(0, v5);
  v9 = sub_10000E99C(&qword_1007FA668, (uint64_t (*)(uint64_t))&type metadata accessor for Banner, (uint64_t)&protocol conformance descriptor for Banner);
  v10 = ItemLayoutContext.typedModel<A>(as:)(&v24, v8, v8, v9);
  v11 = v24;
  if (!v24)
    return 0.0;
  v12 = Banner.leadingArtwork.getter(v10);
  v14 = v12;
  if (v12)
    v13 = swift_release(v12);
  sub_1000D2DEC(0, v14 != 0, (uint64_t)v7, v13);
  v15 = sub_1000826AC();
  KeyPath = swift_getKeyPath(&unk_100675078);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  v17 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v19 = v18;
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000D47F8(UIEdgeInsetsZero.top, UIEdgeInsetsZero.bottom, v17, v19, v11, (uint64_t)v7, v15);
  v21 = v20;
  swift_release(v11);
  swift_unknownObjectRelease(v15);
  sub_1000D4EC4((uint64_t)v7);
  return v21;
}

char *sub_1000D57D0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  objc_class *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  void *v33;
  objc_super v35;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_preferredIconWidth] = 0x404F000000000000;
  v16 = &v4[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_iconStyle];
  v17 = enum case for Artwork.Style.roundedRect(_:);
  v19 = type metadata accessor for Artwork.Style(0, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v16, v17, v19);
  v20 = OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_titleLabel;
  v21 = qword_1007F2728;
  v22 = v4;
  if (v21 != -1)
    swift_once(&qword_1007F2728, sub_100416FEC);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_1000117A8(v23, (uint64_t)qword_100855A60);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v15, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v22[v20] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 1, 0, 1, 0, v12, 0, 0);

  v27 = (objc_class *)type metadata accessor for IconSilhouetteView(0);
  v35.receiver = v22;
  v35.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  v29 = OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_titleLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_titleLabel];
  v31 = v28;
  objc_msgSend(v30, "setTextAlignment:", 1);
  sub_1000117FC();
  v32 = v31;
  v33 = (void *)static UIColor.placeholderBackgroundStandout.getter();
  objc_msgSend(v32, "setBackgroundColor:", v33);

  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v28[v29]);
  return v32;
}

id sub_1000D5AAC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  objc_super v21;
  CGRect v22;
  CGRect v23;

  v3 = v2;
  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for IconSilhouetteView(0);
  v21.receiver = v3;
  v21.super_class = v8;
  objc_msgSendSuper2(&v21, "layoutSubviews");
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v3[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_iconStyle], v4);
  objc_msgSend(v3, "frame");
  v11 = Artwork.Style.iconCornerRadius(for:)(v9, v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v3, "_setCornerRadius:", v11);
  v12 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_titleLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v8);
  objc_msgSend(v12, "sizeThatFits:", v13, v14);
  v16 = v15;
  v18 = v17;
  v22.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v8);
  v19 = CGRectGetMidX(v22) - v16 * 0.5;
  v23.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v8);
  return objc_msgSend(v12, "setFrame:", v19, CGRectGetMidY(v23) - v18 * 0.5, v16, v18);
}

id sub_1000D5D1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IconSilhouetteView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000D5DA0()
{
  return type metadata accessor for IconSilhouetteView(0);
}

uint64_t type metadata accessor for IconSilhouetteView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FA6A0;
  if (!qword_1007FA6A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IconSilhouetteView);
  return result;
}

uint64_t sub_1000D5DE4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Artwork.Style(319, a2);
  if (v4 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1000D5E6C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_preferredIconWidth] = 0x404F000000000000;
  v9 = &v1[OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_iconStyle];
  v10 = enum case for Artwork.Style.roundedRect(_:);
  v12 = type metadata accessor for Artwork.Style(0, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v9, v10, v12);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension18IconSilhouetteView_titleLabel;
  if (qword_1007F2728 != -1)
    swift_once(&qword_1007F2728, sub_100416FEC);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_1000117A8(v14, (uint64_t)qword_100855A60);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, v15, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v13] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 1, 0, 1, 0, v5, 0, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/IconSilhouetteView.swift", 47, 2, 50, 0);
  __break(1u);
}

void *sub_1000D6064()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_avatarShowcase);
  v2 = v1;
  return v1;
}

void (*sub_1000D6098(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_avatarShowcase);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_1000D60DC;
}

void sub_1000D60DC(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_1001FE1A0(v2);

  }
  else
  {
    sub_1001FE1A0(*a1);
  }
}

uint64_t sub_1000D6130()
{
  return 3;
}

uint64_t sub_1000D6138()
{
  return AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(32.0, 16.0);
}

double sub_1000D6148()
{
  return 16.0;
}

uint64_t sub_1000D615C()
{
  return ArtworkView.frame.getter();
}

double sub_1000D6188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
}

uint64_t sub_1000D61A0()
{
  return 8;
}

uint64_t sub_1000D61A8(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C((unint64_t *)&unk_1007FA6C0, type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_10067511C);
  return AvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, a2, ObjectType, v5);
}

uint64_t sub_1000D6208(uint64_t a1, uint64_t a2)
{
  return sub_1000D6220(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.unapply());
}

uint64_t sub_1000D6214(uint64_t a1, uint64_t a2)
{
  return sub_1000D6220(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.placeAvatarShowcase());
}

uint64_t sub_1000D6220(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_10000E99C((unint64_t *)&unk_1007FA6C0, type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)&unk_10067511C);
  return a3(ObjectType, v4);
}

uint64_t sub_1000D6278()
{
  return sub_10000E99C(&qword_1007FA6B0, type metadata accessor for LargeLockupCollectionViewCell, (uint64_t)"}-\v");
}

uint64_t sub_1000D62A4()
{
  return sub_10000E99C(&qword_1007FA6B8, type metadata accessor for AvatarShowcaseView, (uint64_t)&unk_1006925B0);
}

double sub_1000D62D0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100045464(v0, qword_1008518F0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_1008518F0);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

char *sub_1000D6320()
{
  _BYTE *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  objc_super v17;
  __int128 v18[4];
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v0[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_isCollapsing] = 0;
  v3 = OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView;
  if (qword_1007F1538 != -1)
    swift_once(&qword_1007F1538, sub_1001B2FA8);
  v18[2] = xmmword_100852390;
  v18[3] = unk_1008523A0;
  v19 = qword_1008523B0;
  v18[0] = xmmword_100852370;
  v18[1] = unk_100852380;
  v7 = objc_allocWithZone((Class)type metadata accessor for AppPromotionIAPFallbackView(0));
  *(_QWORD *)&v5[v6] = sub_1001B2B10(v18, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView]);
  v8 = &v5[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_mediaOverlayStyle];
  v9 = enum case for MediaOverlayStyle.matchSystem(_:);
  v10 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = &v5[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  v17.receiver = v5;
  v17.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = *(void **)&v12[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
  v14 = v12;
  objc_msgSend(v13, "setContentMode:", 2);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  objc_msgSend(v13, "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(v14, "addSubview:", v13);
  v15 = *(void **)&v14[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView];
  objc_msgSend(v15, "setContentMode:", 2);
  objc_msgSend(v15, "setClipsToBounds:", 1);
  objc_msgSend(v14, "addSubview:", v15);

  return v14;
}

void sub_1000D66A8(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  void (*v32)(char *, uint64_t);
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  void (*v40)(double, double);
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  objc_super v50;
  CGRect v51;
  CGRect v52;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for FloatingPointRoundingRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v10).n128_u64[0];
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50.receiver = v4;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, "frame", v12);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = enum case for FloatingPointRoundingRule.up(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v24(v14, enum case for FloatingPointRoundingRule.up(_:), v10);
  v25 = CGRect.rounded(_:)(v14, v16, v18, v20, v22);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v14, v10);
  v24(v14, v23, v10);
  v33 = CGRect.rounded(_:)(v14, a1, a2, a3, a4);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v32(v14, v10);
  v51.origin.x = v25;
  v51.origin.y = v27;
  v51.size.width = v29;
  v51.size.height = v31;
  v52.origin.x = v33;
  v52.origin.y = v35;
  v52.size.width = v37;
  v52.size.height = v39;
  if (!CGRectEqualToRect(v51, v52)
    && (v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_isCollapsing] & 1) == 0)
  {
    v40 = *(void (**)(double, double))&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock];
    if (v40)
    {
      v41 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock
                         + 8];
      objc_msgSend(v4, "bounds", swift_retain(v41).n128_f64[0]);
      v43 = v42;
      v45 = v44;
      v24(v14, v23, v10);
      v46 = CGSize.rounded(_:)(v14, v43, v45);
      v48 = v47;
      v32(v14, v10);
      v49 = objc_msgSend(v4, "traitCollection");
      v40(v46, v48);
      sub_100019310((uint64_t)v40, v41);

    }
  }
}

id sub_1000D68F4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t Strong;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  objc_super v37;

  v37.receiver = v2;
  v37.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v37, "layoutSubviews");
  v3 = v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_isCollapsing];
  v4 = &v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView]);
  v6 = (void *)Strong;
  if (v3 == 1)
  {
    if (Strong)
    {
      objc_msgSend(v2, "bounds");
      v8 = v7;
      v10 = v9;
      v11 = swift_unknownObjectWeakLoadStrong(v4);
      if (v11
        && (v12 = (void *)v11,
            v13 = *(id *)(v11 + qword_10080FD18),
            v12,
            v14 = objc_msgSend(v13, "image"),
            v13,
            v14))
      {
        objc_msgSend(v14, "size");
        v16 = v15;
        v18 = v17;

      }
      else
      {
        objc_msgSend(v2, "bounds");
        v16 = v21;
        v18 = v22;
      }
      objc_msgSend(v6, "setFrame:", v8, v10, v16, v18);

    }
    v23 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
    objc_msgSend(v2, "bounds");
    v25 = v24;
    v27 = v26;
    v28 = objc_msgSend(v23, "image");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, "size");
      v31 = v30;
      v33 = v32;

    }
    else
    {
      objc_msgSend(v2, "bounds");
      v31 = v34;
      v33 = v35;
    }
    objc_msgSend(v23, "setFrame:", v25, v27, v31, v33);
    v20 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView];
    objc_msgSend(v23, "frame");
  }
  else
  {
    if (Strong)
    {
      objc_msgSend(v2, "bounds");
      objc_msgSend(v6, "setFrame:");

    }
    v19 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
    objc_msgSend(v2, "bounds");
    objc_msgSend(v19, "setFrame:");
    v20 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView];
    objc_msgSend(v2, "bounds");
  }
  return objc_msgSend(v20, "setFrame:");
}

void sub_1000D6B90()
{
  uint64_t v0;
  char *Strong;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD aBlock[5];
  uint64_t v9;

  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView);
  if (Strong)
  {
    v2 = *(void **)&Strong[qword_10080FD40];
    if (v2)
    {
      v7 = Strong;
      v3 = swift_allocObject(&unk_100728000, 24, 7);
      swift_unknownObjectWeakInit(v3 + 16);
      aBlock[4] = sub_1000D8888;
      v9 = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100442B30;
      aBlock[3] = &unk_100728018;
      v4 = _Block_copy(aBlock);
      v5 = v9;
      v6 = v2;
      objc_msgSend(v6, "enterFullScreenAnimated:completionHandler:", 1, v4, swift_release(v5).n128_f64[0]);
      _Block_release(v4);

    }
    else
    {

    }
  }
}

void sub_1000D6CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_10049EE08(0, 0);
    swift_unknownObjectRelease(v3);
  }
  v4 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + qword_10080FD40);
    v7 = v6;

    if (v6)
    {
      objc_msgSend(v7, "setShowsPlaybackControls:", 1);

    }
  }
}

double sub_1000D6D84()
{
  uint64_t v0;
  void *Strong;
  double result;
  void *v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_delegate);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "traitCollection");
    v5 = UITraitCollection.isSizeClassRegular.getter(v4);

    if ((v5 & 1) != 0)
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
    }
    else
    {
      v6 = swift_allocObject(&unk_100727F10, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_100727F38, 32, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_QWORD *)(v7 + 24) = 0x3FF0000000000000;
      v8 = (void *)objc_opt_self(UIView);
      v11[4] = sub_1000D82C8;
      v12 = v7;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      v11[2] = sub_1000BD6CC;
      v11[3] = &unk_100727F50;
      v9 = _Block_copy(v11);
      v10 = v12;
      swift_retain(v7);
      swift_release(v10);
      objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 4, v9, 0, 0.3, 0.0);
      swift_release(v7);
      _Block_release(v9);
      *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
    }
  }
  return result;
}

void sub_1000D6F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, _QWORD, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t Strong;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  double v71;
  id *v72;
  _BOOL8 v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  void (*v79)(uint64_t, __n128, double);
  void (**v80)(double, double);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(double, double);
  void (*v84)(double, double);
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  double v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  _QWORD v98[5];

  v4 = v3;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007FA750);
  __chkstk_darwin(v8);
  v96 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v95 = (char *)&v91 - v11;
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v13 = __chkstk_darwin(v12);
  v94 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for VideoControls(0, v13);
  __chkstk_darwin(v15);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v91 - v19;
  v21 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for VideoFillMode(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for VideoConfiguration(0, v29);
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v91 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v91 = v32;
    v92 = v31;
    v93 = a2;
    v36 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v26 + 104);
    v97 = v35;
    v36(v28, enum case for VideoFillMode.scaleAspectFill(_:), v25, v33);
    swift_retain(a1);
    v38 = Video.preview.getter(v37);
    Artwork.size.getter(v38);
    AspectRatio.init(_:_:)(v39);
    swift_release(v38);
    v40 = type metadata accessor for AspectRatio(0);
    v41 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v24, 0, 1, v40);
    v42 = Video.playbackControls.getter(v41);
    v43 = Video.autoPlayPlaybackControls.getter(v42);
    v44 = Video.canPlayFullScreen.getter(v43);
    v45 = v4;
    v46 = a3;
    v47 = Video.allowsAutoPlay.getter();
    v48 = Video.looping.getter();
    v49 = v47 & 1;
    v50 = v46;
    v4 = v45;
    v51 = v97;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v28, v24, v20, v17, v44 & 1, v49, v48 & 1, 0, 0, 1);
    v52 = type metadata accessor for VideoViewManager(0);
    v53 = BaseObjectGraph.inject<A>(_:)(v98, v52, v52);
    v54 = v98[0];
    v55 = Video.playbackId.getter(v98, v53);
    v56 = (uint64_t)v94;
    Video.videoUrl.getter(v55);
    v57 = type metadata accessor for URL(0);
    v58 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
    v59 = (uint64_t)v95;
    v60 = Video.templateMediaEvent.getter(v58);
    v61 = (uint64_t)v96;
    Video.templateClickEvent.getter(v60);
    v62 = type metadata accessor for VideoView(0);
    v63 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    v64 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v98, v56, v51, v59, v61, v50, v62, v63);
    sub_100011088(v61, (uint64_t *)&unk_1007FA750);
    sub_100011088(v59, (uint64_t *)&unk_1007FA750);
    sub_100011088(v56, (uint64_t *)&unk_1007F5150);
    sub_100011088((uint64_t)v98, (uint64_t *)&unk_1007F9850);
    sub_1000D8050((uint64_t)v64);

    Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView]);
    if (Strong)
    {
      v66 = (void *)Strong;
      v67 = Video.preview.getter(Strong);
      v68 = (void *)Artwork.backgroundColor.getter(v67);
      objc_msgSend(v66, "setBackgroundColor:", v68, swift_release(v67).n128_f64[0]);

    }
    v69 = Video.preview.getter(Strong);
    v70 = (void *)Artwork.backgroundColor.getter(v69);
    *(_QWORD *)&v71 = swift_release(v69).n128_u64[0];
    if (!v70)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v70 = (void *)static UIColor.placeholderBackground.getter();
    }
    a2 = v93;
    objc_msgSend(v4, "setBackgroundColor:", v70, v71);
    swift_release(a1);
    swift_release(v54);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v97, v92);
    v72 = (id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
    v73 = a2 == 0;
  }
  else if (a2)
  {
    swift_retain(a2);
    v75 = Artwork.backgroundColor.getter(v74);
    if (!v75)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v75 = static UIColor.placeholderBackground.getter();
    }
    v76 = (void *)v75;
    objc_msgSend(v4, "setBackgroundColor:", v75);

    v33.n128_u64[0] = swift_release(a2).n128_u64[0];
    v73 = 0;
    v72 = (id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
  }
  else
  {
    v72 = (id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
    v73 = 1;
  }
  objc_msgSend(*v72, "setHidden:", v73, v33.n128_f64[0]);
  v77 = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView]);
  if (v77)
  {
    v78 = v77;
    objc_msgSend(v77, "setHidden:", a1 == 0);

  }
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView], "setHidden:", 1);
  v79 = sub_1000D753C(a2, a1);
  v80 = (void (**)(double, double))&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock];
  v81 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock];
  v82 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock + 8];
  *v80 = (void (*)(double, double))v79;
  v80[1] = v83;
  sub_100019310(v81, v82);
  v84 = *v80;
  if (*v80)
  {
    v85 = (uint64_t)v80[1];
    objc_msgSend(v4, "bounds", swift_retain(v85).n128_f64[0]);
    v87 = v86;
    v89 = v88;
    v90 = objc_msgSend(v4, "traitCollection");
    v84(v87, v89);
    sub_100019310((uint64_t)v84, v85);

  }
}

void (*sub_1000D753C(uint64_t a1, uint64_t a2))(uint64_t a1, __n128 a2, double a3)
{
  uint64_t ObjectType;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*result)(uint64_t, __n128, double);

  ObjectType = swift_getObjectType();
  v5 = ObjectType;
  if (a2)
  {
    a1 = Video.preview.getter(ObjectType);
LABEL_5:
    v6 = a2 != 0;
    v7 = swift_allocObject(&unk_100727F88, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v8 = swift_allocObject(&unk_100727FB0, 24, 7);
    swift_weakInit(v8 + 16);
    v9 = swift_allocObject(&unk_100727FD8, 56, 7);
    *(_BYTE *)(v9 + 16) = v6;
    *(_QWORD *)(v9 + 24) = v7;
    *(_QWORD *)(v9 + 32) = v8;
    result = sub_1000D8344;
    *(_QWORD *)(v9 + 40) = a1;
    *(_QWORD *)(v9 + 48) = v5;
    return result;
  }
  if (a1)
  {
    swift_retain(a1);
    goto LABEL_5;
  }
  return 0;
}

double sub_1000D7628(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  double v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + qword_100854050);
  if (v5)
  {
    v6 = swift_retain(*(_QWORD *)(a2 + qword_100854050));
    v7 = OfferItemDetailPage.artwork.getter(v6);
    *(_QWORD *)&v8 = swift_release(v7).n128_u64[0];
    if (!v7)
    {
      v12 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView], "setHidden:", 1, v8);
      v13 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView];
      v14 = OfferItemDetailPage.offerItem.getter(v12);
      sub_1001B343C();
      swift_release(v14);
      v16 = OfferItemDetailPage.offerItem.getter(v15);
      objc_msgSend(v3, "bounds");
      sub_1000D83AC(v16, v5, v13);
      v11 = v16;
      goto LABEL_6;
    }
    swift_release(v5);
  }
  v5 = OfferItemDetailPage.video.getter();
  v10 = OfferItemDetailPage.artwork.getter(v9);
  sub_1000D6F00(v5, v10, a2);
  v11 = v10;
LABEL_6:
  swift_release(v11);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1000D7740(__n128 a1, double a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v10 = a1.n128_f64[0];
  v11 = type metadata accessor for Artwork.Crop(0, a1);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a5 + 16;
  if ((a4 & 1) == 0)
  {
    swift_beginAccess(v15, v35, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    if (Strong)
    {
      v18 = (char *)Strong;
      v19 = &OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView;
LABEL_7:
      v17 = *(id *)&v18[*v19];

      if (v10 != 0.0)
        goto LABEL_14;
      goto LABEL_11;
    }
    v17 = 0;
    goto LABEL_10;
  }
  swift_beginAccess(v15, v35, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v15);
  v17 = (id)v16;
  if (!v16)
  {
LABEL_10:
    if (v10 != 0.0)
      goto LABEL_14;
    goto LABEL_11;
  }
  v18 = (char *)swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView);

  if (v18)
  {
    v19 = &qword_10080FD18;
    goto LABEL_7;
  }
  v17 = 0;
  if (v10 != 0.0)
    goto LABEL_14;
LABEL_11:
  if (a2 == 0.0)
    goto LABEL_12;
LABEL_14:
  if (!v17)
    return;
  v21 = a6 + 16;
  swift_beginAccess(v21, v34, 0, 0);
  v22 = swift_weakLoadStrong(v21);
  if (!v22)
  {
LABEL_12:

    return;
  }
  v23 = v22;
  v24 = *(_QWORD *)(v22 + qword_100854050);
  swift_retain(v24);
  v17 = v17;
  swift_release(v23);
  if (!v24)
  {

    goto LABEL_12;
  }
  if (qword_1007F1180 != -1)
    swift_once(&qword_1007F1180, sub_1000D62D0);
  v25 = type metadata accessor for AspectRatio(0);
  v26 = sub_1000117A8(v25, (uint64_t)qword_1008518F0);
  v27.n128_f64[0] = AspectRatio.height(fromWidth:)(v26, v10);
  v28 = v27.n128_f64[0];
  v29 = Artwork.crop.getter(v27);
  v30 = Artwork.Crop.preferredContentMode.getter(v29);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  v31 = Artwork.config(_:mode:prefersLayeredImage:)(v30, 0, v10, v28);
  objc_msgSend(v17, "setContentMode:", v30);
  v32 = sub_100019574(0, (unint64_t *)&qword_1007FE190, UIImageView_ptr);
  v33 = sub_1000D8354();
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v17, v32, v33);

  swift_release(v24);
  swift_release(v31);
}

uint64_t sub_1000D7AA4()
{
  return type metadata accessor for AppPromotionMediaContainerView(0);
}

uint64_t type metadata accessor for AppPromotionMediaContainerView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FA728;
  if (!qword_1007FA728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionMediaContainerView);
  return result;
}

uint64_t sub_1000D7AE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100675210;
  v4[1] = &unk_100675228;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_100675240;
  result = type metadata accessor for MediaOverlayStyle(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_100675258;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000D7B8C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView);
}

void sub_1000D7B9C(void *a1)
{
  sub_1000D8050((uint64_t)a1);

}

void (*sub_1000D7BC0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView);
  return sub_1000D7C00;
}

void sub_1000D7C00(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_1000D8050((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_1000D8050(*a1);
    v3 = v4;
  }

}

uint64_t sub_1000D7C60()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E99C(&qword_1007FA748, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006752F0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_1000D7CA8(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C(&qword_1007FA748, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006752F0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_1000D7D08(_QWORD *a1))(_QWORD *a1)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E99C(&qword_1007FA748, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006752F0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001DF34;
}

uint64_t sub_1000D7D80(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  if (!a1)
    return 0;
  v2 = objc_msgSend(a1, "superview");
  if (!v2)
    return 0;
  v3 = v2;
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v4 = v1;
  v5 = v3;
  v6 = static NSObject.== infix(_:_:)(v5, v4);

  return v6 & 1;
}

id sub_1000D7E14(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "frame");
}

uint64_t sub_1000D7E48()
{
  return sub_10000E99C(&qword_1007FA738, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_100675270);
}

uint64_t sub_1000D7E74()
{
  return sub_10000E99C(&qword_1007FA740, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006752A0);
}

uint64_t sub_1000D7EA0()
{
  return sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
}

void sub_1000D7ECC()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10[4];
  uint64_t v11;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v0[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_isCollapsing] = 0;
  v3 = OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkFallbackView;
  if (qword_1007F1538 != -1)
    swift_once(&qword_1007F1538, sub_1001B2FA8);
  v10[2] = xmmword_100852390;
  v10[3] = unk_1008523A0;
  v11 = qword_1008523B0;
  v10[0] = xmmword_100852370;
  v10[1] = unk_100852380;
  v5 = objc_allocWithZone((Class)type metadata accessor for AppPromotionIAPFallbackView(0));
  *(_QWORD *)&v1[v4] = sub_1001B2B10(v10, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView]);
  v6 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_mediaOverlayStyle];
  v7 = enum case for MediaOverlayStyle.matchSystem(_:);
  v8 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_refetchArtworkBlock];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AppPromotionMediaContainerView.swift", 59, 2, 66, 0);
  __break(1u);
}

void sub_1000D8050(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  char v18;
  double v19;
  _BYTE *v20;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_videoView]);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    v7 = objc_msgSend(v6, "superview");
    if (v7)
    {
      v8 = v7;
      sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v9 = v2;
      v10 = v8;
      LOBYTE(v8) = static NSObject.== infix(_:_:)(v10, v9);

      if ((v8 & 1) != 0)
      {
        v11 = (void *)swift_unknownObjectWeakLoadStrong(v4);
        if (v11)
        {
          v12 = v11;
          objc_msgSend(v11, "removeFromSuperview");

        }
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView], "setHidden:", 0);
      }
    }
    else
    {

    }
  }
  v13 = swift_unknownObjectWeakAssign(v4, a1);
  v14 = swift_unknownObjectWeakLoadStrong(v13);
  if (v14)
  {
    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30AppPromotionMediaContainerView_artworkView];
    v20 = (_BYTE *)v14;
    objc_msgSend(v15, "setHidden:", 1);
    v20[qword_100856368] = 1;
    v16 = &v20[qword_10080FD08];
    *((_QWORD *)v16 + 1) = &off_100727EE8;
    swift_unknownObjectWeakAssign(v16, v2);
    v17 = objc_msgSend(v2, "traitCollection");
    v18 = UITraitCollection.isSizeClassRegular.getter(v17);

    v19 = 8.0;
    if ((v18 & 1) != 0)
      v19 = 12.0;
    objc_msgSend(v20, "_setCornerRadius:", v19);
    objc_msgSend(v2, "insertSubview:aboveSubview:", v20, v15);
    objc_msgSend(v2, "setNeedsLayout");

  }
}

uint64_t sub_1000D8280()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D82A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000D82C8()
{
  uint64_t v0;

  sub_10049F000(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1000D82D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000D82E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000D82EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D8310()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1000D8344(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;

  sub_1000D7740(a2, a3, a1, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

unint64_t sub_1000D8354()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FA770;
  if (!qword_1007FA770)
  {
    v1 = sub_100019574(255, (unint64_t *)&qword_1007FE190, UIImageView_ptr);
    result = swift_getWitnessTable("91\v", v1);
    atomic_store(result, (unint64_t *)&qword_1007FA770);
  }
  return result;
}

uint64_t sub_1000D83AC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  double v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[40];
  _QWORD v81[5];

  v6 = type metadata accessor for Artwork.Style(0, a2);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.Crop(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OfferItem(0);
  v81[3] = v14;
  v81[4] = &protocol witness table for AppPromotion;
  v81[0] = a1;
  sub_100011020((uint64_t)v81, (uint64_t)v80);
  swift_retain(a1);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  if (swift_dynamicCast(&v79, v80, v15, v14, 6))
  {
    v16 = v79;
    v17 = OfferItem.iapArtwork.getter();
    v19 = OfferItem.offerLockup.getter(v18);
    v21 = type metadata accessor for InAppPurchaseLockup(0, v20);
    v22 = swift_dynamicCastClass(v19, v21);
    v77 = v16;
    if (v22)
    {
      v24 = InAppPurchaseLockup.parent.getter(v22, v23);
      v26 = Lockup.icon.getter(v25);
      swift_release(v19);
    }
    else
    {
      v27 = swift_release(v19);
      v24 = OfferItem.offerLockup.getter(v27);
      v26 = Lockup.icon.getter(v28);
    }
    swift_release(v24);
    v78 = a2;
    if (v26)
    {
      v29 = *(double *)&a3[qword_1007FFB40 + 8];
      v30 = swift_retain(v26);
      v31 = Artwork.crop.getter(v30);
      v32 = Artwork.Crop.preferredContentMode.getter(v31);
      v33 = *(void (**)(char *, uint64_t))(v11 + 8);
      v33(v13, v10);
      v34 = Artwork.config(_:mode:prefersLayeredImage:)(v32, 0, v29, v29);
      v35 = a3;
      v36 = v34;
      v76 = v35;
      v37 = *(void **)&v35[qword_1007FFB28];
      Artwork.style.getter(v34);
      v38 = ArtworkView.style.setter(v9);
      *(_QWORD *)&v39 = Artwork.contentMode.getter(v38).n128_u64[0];
      v41 = ArtworkLoaderConfig.size.getter(objc_msgSend(v37, "setContentMode:", v40, v39));
      v43 = ArtworkView.imageSize.setter(v41, v42);
      v44 = Artwork.backgroundColor.getter(v43);
      if (!v44)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v44 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v44);
      v46 = Artwork.crop.getter(v45);
      v47 = Artwork.Crop.preferredContentMode.getter(v46);
      v33(v13, v10);
      objc_msgSend(v37, "setContentMode:", v47);
      v48 = type metadata accessor for ArtworkView(0);
      v49 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v36, 2, 1, v37, v48, v49);
      swift_release(v26);
      swift_release(v36);
      a3 = v76;
    }
    if (v17)
    {
      v50 = *(double *)&a3[qword_1007FFB40];
      v51 = swift_retain(v17);
      v52 = Artwork.crop.getter(v51);
      v53 = Artwork.Crop.preferredContentMode.getter(v52);
      v76 = *(char **)(v11 + 8);
      ((void (*)(char *, uint64_t))v76)(v13, v10);
      v54 = Artwork.config(_:mode:prefersLayeredImage:)(v53, 0, v50, v50);
      v55 = a3;
      v56 = v54;
      v57 = *(_QWORD *)&v55[qword_1007FFB20];
      v58 = OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView;
      v59 = *(id *)(v57 + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView);
      Artwork.style.getter(v59);
      v60 = ArtworkView.style.setter(v9);
      *(_QWORD *)&v61 = Artwork.contentMode.getter(v60).n128_u64[0];
      v63 = ArtworkLoaderConfig.size.getter(objc_msgSend(v59, "setContentMode:", v62, v61));
      v65 = ArtworkView.imageSize.setter(v63, v64);
      v66 = Artwork.backgroundColor.getter(v65);
      if (!v66)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v66 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v66);

      v67 = *(id *)(v57 + v58);
      v69 = Artwork.crop.getter(v68);
      v70 = Artwork.Crop.preferredContentMode.getter(v69);
      ((void (*)(char *, uint64_t))v76)(v13, v10);
      objc_msgSend(v67, "setContentMode:", v70);

      v71 = *(void **)(v57 + v58);
      v72 = type metadata accessor for ArtworkView(0);
      v73 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v74 = v71;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v56, 2, 1, v74, v72, v73);
      swift_release(v77);
      swift_release(v56);

      swift_release_n(v17, 2);
    }
    else
    {
      swift_release(v77);
    }
    swift_release(v26);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v81);
}

void sub_1000D8888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100446B28(a1, a2, v2);
}

uint64_t sub_1000D88A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  _QWORD v30[5];

  v4 = type metadata accessor for MetadataRibbonItemViewType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Feature(0);
  v30[3] = v8;
  v30[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v9 = sub_1000117C0(v30);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.search_tags(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v30);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v30);
  if ((v8 & 1) == 0)
    a1 = a2;
  if (a1)
  {
    v10 = type metadata accessor for MetadataRibbonItem(0);
    if ((Array.isNotEmpty.getter(a1, v10) & 1) != 0)
    {
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)a1 >> 62)
        goto LABEL_25;
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      while (v12)
      {
        v29 = a1 & 0xC000000000000001;
        v13 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
        v28 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
        v14 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
        v27 = enum case for MetadataRibbonItemViewType.starRating(_:);
        v25 = enum case for MetadataRibbonItemViewType.divider(_:);
        v26 = enum case for MetadataRibbonItemViewType.textLabel(_:);
        v15 = 4;
        v24 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
        while (1)
        {
          v16 = v15 - 4;
          if (!v29)
            break;
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1);
          v18 = __OFADD__(v16, 1);
          v19 = v15 - 3;
          if (v18)
            goto LABEL_24;
LABEL_13:
          MetadataRibbonItem.viewContainerType.getter();
          v20 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
          if (v20 == v13 || v20 == v28 || v20 == v14 || v20 == v27 || v20 == v26 || v20 == v25 || v20 == v24)
          {
            swift_bridgeObjectRelease(a1);
            swift_release(v17);
            return 1;
          }
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          swift_release(v17);
          ++v15;
          if (v19 == v12)
            goto LABEL_21;
        }
        v17 = *(_QWORD *)(a1 + 8 * v15);
        swift_retain(v17);
        v18 = __OFADD__(v16, 1);
        v19 = v15 - 3;
        if (!v18)
          goto LABEL_13;
LABEL_24:
        __break(1u);
LABEL_25:
        if (a1 >= 0)
          v22 = v11;
        else
          v22 = a1;
        swift_bridgeObjectRetain(a1);
        v12 = _CocoaArrayWrapper.endIndex.getter(v22);
      }
LABEL_21:
      swift_bridgeObjectRelease(a1);
    }
  }
  return 0;
}

uint64_t sub_1000D8B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_1000D8D28();
  if (v1)
    return v1;
  v3 = type metadata accessor for AdvertsSearchResult(0);
  if (swift_dynamicCastClass(v0, v3))
  {
    v2 = type metadata accessor for AdvertsSearchResultContentView();
    v4 = (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView;
    v5 = (unint64_t *)&unk_1007FA7A8;
    v6 = &unk_10068970C;
  }
  else
  {
    v7 = type metadata accessor for BundleSearchResult(0);
    if (swift_dynamicCastClass(v0, v7))
    {
      v2 = type metadata accessor for BundleSearchResultContentView();
      v4 = (uint64_t (*)(uint64_t))type metadata accessor for BundleSearchResultContentView;
      v5 = (unint64_t *)&unk_1007FA7A0;
      v6 = &unk_10069D2DC;
    }
    else
    {
      v9 = type metadata accessor for AppSearchResult(0, v8);
      if (swift_dynamicCastClass(v0, v9))
      {
        v2 = type metadata accessor for AppSearchResultContentView();
        v4 = (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView;
        v5 = (unint64_t *)&unk_1007FA798;
        v6 = &unk_10068F4B0;
      }
      else
      {
        v11 = type metadata accessor for EditorialSearchResult(0, v10);
        if (swift_dynamicCastClass(v0, v11))
        {
          v2 = type metadata accessor for EditorialSearchResultContentView();
          v4 = (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView;
          v5 = (unint64_t *)&unk_1007FA790;
          v6 = &unk_10067DFB0;
        }
        else
        {
          v12 = type metadata accessor for InAppPurchaseSearchResult(0);
          if (swift_dynamicCastClass(v0, v12))
          {
            v2 = type metadata accessor for InAppPurchaseSearchResultContentView(0);
            v4 = type metadata accessor for InAppPurchaseSearchResultContentView;
            v5 = (unint64_t *)&unk_1007FA788;
            v6 = &unk_1006841B4;
          }
          else
          {
            v13 = type metadata accessor for LockupCollectionSearchResult();
            if (swift_dynamicCastClass(v0, v13))
            {
              v2 = type metadata accessor for LockupCollectionSearchResultContentView();
              v4 = (uint64_t (*)(uint64_t))type metadata accessor for LockupCollectionSearchResultContentView;
              v5 = (unint64_t *)&unk_1007FA780;
              v6 = &unk_10067B840;
            }
            else
            {
              v14 = type metadata accessor for AppEventSearchResult(0);
              if (!swift_dynamicCastClass(v0, v14))
                return 0;
              v2 = type metadata accessor for AppEventSearchResultContentView();
              v4 = (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView;
              v5 = (unint64_t *)&unk_1007FA778;
              v6 = &unk_100670084;
            }
          }
        }
      }
    }
  }
  sub_10000E99C(v5, v4, (uint64_t)v6);
  return v2;
}

uint64_t sub_1000D8D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (*v22)(char *, uint64_t, __n128);
  char v23;
  __n128 v24;
  void (*v25)(char *, uint64_t, __n128);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  unint64_t *v28;
  const char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  char v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v2 = type metadata accessor for SearchResultCondensedBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - v10;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v41 - v14;
  v16 = type metadata accessor for EditorialSearchResult(0, v13);
  if (!swift_dynamicCastClass(v0, v16))
    goto LABEL_7;
  v17 = swift_retain(v0);
  SearchResult.condensedBehavior.getter(v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v11, enum case for SearchResultCondensedBehavior.always(_:), v2);
  v18 = sub_10000E99C(&qword_1007FA7B0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultCondensedBehavior, (uint64_t)&protocol conformance descriptor for SearchResultCondensedBehavior);
  dispatch thunk of RawRepresentable.rawValue.getter(&v43, v2, v18);
  dispatch thunk of RawRepresentable.rawValue.getter(&v41, v2, v18);
  v19 = v44;
  v20 = v42;
  if (v43 != v41 || v44 != v42)
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
    swift_release(v1);
    swift_bridgeObjectRelease(v19);
    v24 = swift_bridgeObjectRelease(v20);
    v25 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v25(v11, v2, v24);
    ((void (*)(char *, uint64_t))v25)(v15, v2);
    if ((v23 & 1) != 0)
      goto LABEL_6;
LABEL_7:
    v30 = type metadata accessor for InAppPurchaseSearchResult(0);
    if (swift_dynamicCastClass(v1, v30))
    {
      v31 = swift_retain(v1);
      SearchResult.condensedBehavior.getter(v31);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for SearchResultCondensedBehavior.always(_:), v2);
      v32 = sub_10000E99C(&qword_1007FA7B0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultCondensedBehavior, (uint64_t)&protocol conformance descriptor for SearchResultCondensedBehavior);
      dispatch thunk of RawRepresentable.rawValue.getter(&v43, v2, v32);
      dispatch thunk of RawRepresentable.rawValue.getter(&v41, v2, v32);
      v33 = v44;
      v34 = v42;
      if (v43 == v41 && v44 == v42)
      {
        swift_release(v1);
        v35 = swift_bridgeObjectRelease_n(v33, 2);
        v36 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
        v36(v5, v2, v35);
        ((void (*)(char *, uint64_t))v36)(v8, v2);
LABEL_12:
        v26 = type metadata accessor for CondensedInAppPurchaseContentView(0);
        v27 = type metadata accessor for CondensedInAppPurchaseContentView;
        v28 = (unint64_t *)&unk_1007FA7B8;
        v29 = "a-\v";
        goto LABEL_13;
      }
      v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
      swift_release(v1);
      swift_bridgeObjectRelease(v33);
      v38 = swift_bridgeObjectRelease(v34);
      v39 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v39(v5, v2, v38);
      ((void (*)(char *, uint64_t))v39)(v8, v2);
      if ((v37 & 1) != 0)
        goto LABEL_12;
    }
    return 0;
  }
  swift_release(v1);
  v21 = swift_bridgeObjectRelease_n(v19, 2);
  v22 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v22(v11, v2, v21);
  ((void (*)(char *, uint64_t))v22)(v15, v2);
LABEL_6:
  v26 = type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v27 = type metadata accessor for CondensedEditorialSearchResultContentView;
  v28 = (unint64_t *)&unk_1007FA7C0;
  v29 = (const char *)&unk_10066FC3C;
LABEL_13:
  sub_10000E99C(v28, v27, (uint64_t)v29);
  return v26;
}

uint64_t sub_1000D90AC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for UberedCollectionElementsObserver()
{
  return objc_opt_self(_TtC22SubscribePageExtension32UberedCollectionElementsObserver);
}

void sub_1000D911C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  unint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  uint64_t (*v23)();
  uint64_t v24;
  void *v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v25 = a1;
  v6 = sub_1000D931C();
  v7 = a1;
  v8 = sub_10000DF3C(&qword_1007FA888);
  if (swift_dynamicCast(&v21, &v25, v6, v8, 6))
  {
    sub_100010F3C(&v21, (uint64_t)v26);
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_1007280E8, 24, 7);
    *(_QWORD *)(v10 + 16) = v7;
    v11 = swift_allocObject(&unk_100728110, 32, 7);
    *(_QWORD *)(v11 + 16) = sub_1000D93BC;
    *(_QWORD *)(v11 + 24) = v10;
    v23 = sub_100030368;
    v24 = v11;
    *(_QWORD *)&v21 = _NSConcreteStackBlock;
    *((_QWORD *)&v21 + 1) = 1107296256;
    *(_QWORD *)&v22 = sub_100101718;
    *((_QWORD *)&v22 + 1) = &unk_100728128;
    v12 = _Block_copy(&v21);
    v13 = v24;
    v14 = v7;
    swift_retain(v11);
    objc_msgSend(v9, "performWithoutAnimation:", v12, swift_release(v13).n128_f64[0]);
    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 115, 42, 40, 1);
    swift_release(v11);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      Strong = swift_weakLoadStrong(v3 + 16);
      if (Strong)
      {
        v17 = Strong;
        v18 = v27;
        v19 = v28;
        sub_100011064(v26, v27);
        v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
        sub_100318B38(v20, a3);
        swift_release(v17);

      }
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
      swift_release(v10);
    }
  }
  else
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    sub_1000D9358((uint64_t)&v21);
  }
}

unint64_t sub_1000D931C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F5530;
  if (!qword_1007F5530)
  {
    v1 = objc_opt_self(UICollectionViewCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F5530);
  }
  return result;
}

uint64_t sub_1000D9358(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007FA890);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D9398()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000D93BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "layoutIfNeeded");
}

uint64_t sub_1000D93CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D93DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000D93EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000D93F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a2);
  swift_retain(a3);
  swift_retain(a4);
  return a1;
}

int64x2_t sub_1000D944C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4057400000000000uLL);
  xmmword_100851910 = (__int128)result;
  return result;
}

uint64_t sub_1000D9464()
{
  uint64_t result;

  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  result = static UIColor.componentBackgroundStandout.getter();
  qword_100851920 = result;
  return result;
}

char *sub_1000D94A4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  objc_class *v20;
  id v21;
  double left;
  double bottom;
  double right;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  objc_super v39;

  v9 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel;
  type metadata accessor for DynamicTypeLabel(0);
  v13 = v4;
  *(_QWORD *)&v4[v12] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel;
  *(_QWORD *)&v13[v14] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel;
  *(_QWORD *)&v13[v15] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton;
  v17 = type metadata accessor for OfferButton();
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");
  v18 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView;
  if (qword_1007F1188 != -1)
    swift_once(&qword_1007F1188, sub_1000D944C);
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&xmmword_100851910);
  v19 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  *(_QWORD *)&v13[v18] = sub_10021DFE0((uint64_t)v11, 1);
  _s22SubscribePageExtension33CondensedInAppPurchaseContentViewC7metrics0F16StoreKitInternal0d6SearchefG10CardLayoutV7MetricsVvpfi_0();
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_tileOffset] = 0;

  v20 = (objc_class *)type metadata accessor for CondensedInAppPurchaseContentView(0);
  v39.receiver = v13;
  v39.super_class = v20;
  v21 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v25 = (char *)v21;
  objc_msgSend(v25, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel;
  v27 = *(void **)&v25[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel];
  objc_msgSend(v25, "addSubview:", v27);
  v28 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel;
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel]);
  v29 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel;
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel]);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton]);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView]);
  v30 = v27;
  v31 = objc_msgSend(v25, "tintColor");
  objc_msgSend(v30, "setTextColor:", v31);

  objc_msgSend(*(id *)&v25[v26], "setNumberOfLines:", 1);
  v32 = *(void **)&v25[v28];
  objc_msgSend(v32, "setNumberOfLines:", 1);
  v33 = (void *)objc_opt_self(UIColor);
  v34 = v32;
  v35 = objc_msgSend(v33, "labelColor");
  objc_msgSend(v34, "setTextColor:", v35);

  v36 = *(id *)&v25[v29];
  v37 = objc_msgSend(v33, "secondaryLabelColor");
  objc_msgSend(v36, "setTextColor:", v37);

  sub_1000DBB84();
  return v25;
}

Swift::Void __swiftcall CondensedInAppPurchaseContentView.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  double v48;
  double v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void *v66;
  id v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  void *v74;
  _QWORD v75[3];
  uint64_t v76;
  void *v77;
  _QWORD v78[3];
  uint64_t v79;
  void *v80;
  _QWORD v81[3];
  uint64_t v82;
  void *v83;
  _QWORD v84[3];
  uint64_t v85;
  void *v86;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;
  objc_super v90;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v70 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CondensedSearchInAppPurchaseCardLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  v12 = (objc_class *)type metadata accessor for CondensedInAppPurchaseContentView(0);
  v90.receiver = v1;
  v90.super_class = v12;
  objc_msgSendSuper2(&v90, "layoutSubviews");
  v13 = LayoutMarginsAware<>.layoutFrame.getter(v12);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = objc_msgSend(v1, "traitCollection");
  v21 = UITraitCollection.prefersAccessibilityLayouts.getter(v20);

  v71 = v5;
  v69 = v3;
  if ((v21 & 1) != 0)
  {
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_metrics], v5);
    CondensedSearchInAppPurchaseCardLayout.Metrics.withCornerTileOffset(_:)(v22, *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_tileOffset]);
    v68 = *(void (**)(char *, uint64_t))(v6 + 8);
    v68(v8, v5);
    v23 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView];
    v85 = type metadata accessor for InAppPurchaseView(0);
    v86 = &protocol witness table for UIView;
    v84[0] = v23;
    v24 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel];
    v82 = type metadata accessor for DynamicTypeLabel(0);
    v83 = &protocol witness table for UILabel;
    v80 = &protocol witness table for UILabel;
    v81[0] = v24;
    v25 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel];
    v79 = v82;
    v77 = &protocol witness table for UILabel;
    v78[0] = v25;
    v26 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel];
    v76 = v82;
    v75[0] = v26;
    v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton];
    v73 = type metadata accessor for OfferButton();
    v74 = &protocol witness table for UIView;
    v72[0] = v27;
    v28 = v23;
    v29 = v24;
    v30 = v25;
    v31 = v26;
    v32 = v27;
    sub_1000D9E48((uint64_t)v11, (void (*)(char *, uint64_t))v84, v81, v78, v75, (uint64_t)v72, v87);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v75);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v78);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v81);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v84);
    v33 = v88;
    v34 = v89;
    sub_100011064(v87, v88);
    v35 = v70;
    dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v33, v34, v13, v15, v17, v19);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v2);
    objc_msgSend(v28, "frame");
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v44 = objc_msgSend(v1, "traitCollection");
    LOBYTE(v26) = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v26 & 1) != 0)
    {
      CondensedSearchInAppPurchaseCardLayout.Metrics.tileOffset.getter(v84);
      v45 = v85;
      v46 = v86;
      sub_100011064(v84, v85);
      v47 = objc_msgSend(v1, "traitCollection");
      v48 = AnyDimension.value(with:)(v47, v45, v46);

      v49 = -v48;
    }
    else
    {
      CondensedSearchInAppPurchaseCardLayout.Metrics.tileOffset.getter(v84);
      v65 = v85;
      v66 = v86;
      sub_100011064(v84, v85);
      v67 = objc_msgSend(v1, "traitCollection");
      v49 = AnyDimension.value(with:)(v67, v65, v66);

    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v84);
    objc_msgSend(v28, "setFrame:", v37 + v49, v39 + 0.0, v41, v43);
    v68(v11, v71);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_metrics], v5);
    v50 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView];
    v85 = type metadata accessor for InAppPurchaseView(0);
    v86 = &protocol witness table for UIView;
    v84[0] = v50;
    v51 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel];
    v82 = type metadata accessor for DynamicTypeLabel(0);
    v83 = &protocol witness table for UILabel;
    v80 = &protocol witness table for UILabel;
    v81[0] = v51;
    v52 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel];
    v79 = v82;
    v77 = &protocol witness table for UILabel;
    v78[0] = v52;
    v53 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel];
    v76 = v82;
    v75[0] = v53;
    v68 = (void (*)(char *, uint64_t))v2;
    v54 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton];
    v73 = type metadata accessor for OfferButton();
    v74 = &protocol witness table for UIView;
    v72[0] = v54;
    v55 = v50;
    v56 = v51;
    v57 = v52;
    v58 = v53;
    v59 = v54;
    v60 = objc_msgSend(v1, "traitCollection");
    sub_1000DA970((uint64_t)v8, v84, v81, v78, v75, (uint64_t)v72, v60, v87, v61);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v71);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v75);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v78);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v81);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v84);
    v62 = v88;
    v63 = v89;
    sub_100011064(v87, v88);
    v64 = v70;
    dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v62, v63, v13, v15, v17, v19);
    (*(void (**)(char *, _QWORD))(v69 + 8))(v64, v68);
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v87);
}

uint64_t type metadata accessor for CondensedInAppPurchaseContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FA900;
  if (!qword_1007FA900)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CondensedInAppPurchaseContentView);
  return result;
}

uint64_t sub_1000D9E48@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD v92[2];
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  void (*v108)(char *);
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  void (*v117)(char *);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  unsigned int v124;
  __int128 v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  _OWORD v130[2];
  uint64_t v131;
  double v132;
  void *v133;
  void *v134;

  v99 = a6;
  v95 = a5;
  v94 = a4;
  v106 = a3;
  v123 = a2;
  v100 = a7;
  v113 = type metadata accessor for VerticalFlowLayout.HorizontalPlacement(0);
  v122 = *(_QWORD *)(v113 - 8);
  v8 = __chkstk_darwin(v113);
  v105 = (char *)v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for VerticalFlowLayout.VerticalPlacement(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v107 = v15;
  __chkstk_darwin(v15);
  v18 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F4760);
  v20 = *(_QWORD *)(type metadata accessor for VerticalFlowLayout.Child(0) - 8);
  v104 = *(_QWORD *)(v20 + 72);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (v21 + 32) & ~v21;
  v97 = 4 * v104;
  v23 = swift_allocObject(v19, v22 + 5 * v104, v21 | 7);
  v98 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_1006749A0;
  v120 = v23 + v22;
  v109 = a1;
  v24 = CondensedSearchInAppPurchaseCardLayout.Metrics.cardInsets.getter();
  v133 = &type metadata for CGFloat;
  v134 = &protocol witness table for CGFloat;
  v132 = v24;
  CondensedSearchInAppPurchaseCardLayout.Metrics.artworkAXBottomMargin.getter(v130);
  v96 = enum case for VerticalFlowLayout.VerticalPlacement.top(_:);
  v108 = *(void (**)(char *))(v16 + 104);
  v108(v18);
  v112 = sub_10000DF3C((uint64_t *)&unk_100819230);
  v25 = *(_QWORD *)(v11 + 72);
  v26 = *(unsigned __int8 *)(v11 + 80);
  v111 = 2 * v25;
  v121 = v25;
  v103 = ((v26 + 32) & ~v26) + 3 * v25;
  v114 = (v26 + 32) & ~v26;
  v115 = v26 | 7;
  v27 = swift_allocObject(v112, v103, v26 | 7);
  v125 = xmmword_10066F860;
  *(_OWORD *)(v27 + 16) = xmmword_10066F860;
  v28 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v29 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v28);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v29);
  *(_QWORD *)&v127 = v27;
  v30 = sub_10000E99C(&qword_1007F4750, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
  v119 = v30;
  v31 = sub_10000DF3C((uint64_t *)&unk_100819240);
  v118 = v31;
  v110 = sub_100019528();
  v32 = v10;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v127, v31, v110, v10, v30);
  v124 = enum case for VerticalFlowLayout.HorizontalPlacement.leading(_:);
  v33 = v122;
  v117 = *(void (**)(char *))(v122 + 104);
  v34 = v105;
  v35 = v113;
  v117(v105);
  v36 = v120;
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v123, &v132, v130, v18, v34, v14);
  v123 = *(void (**)(char *, uint64_t))(v33 + 8);
  v123(v34, v35);
  v116 = *(void (**)(char *, uint64_t))(v11 + 8);
  v116(v14, v32);
  v122 = *(_QWORD *)(v16 + 8);
  ((void (*)(char *, uint64_t))v122)(v18, v107);
  sub_1000DC354((uint64_t)v130);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v132);
  v37 = v104;
  v93 = v36 + v104;
  v39 = v106[3];
  v38 = v106[4];
  v40 = sub_100011064(v106, v39);
  v133 = (void *)v39;
  v134 = *(void **)(v38 + 8);
  v41 = sub_1000117C0(&v132);
  v42 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v41, v40, v39);
  CondensedSearchInAppPurchaseCardLayout.Metrics.headerTextSpace.getter(v130, v42);
  v129 = 0;
  v127 = 0u;
  v128 = 0u;
  LODWORD(v106) = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
  v43 = v108;
  v108(v18);
  v44 = v103;
  v45 = swift_allocObject(v112, v103, v115);
  *(_OWORD *)(v45 + 16) = v125;
  v46 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v47 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v46);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v47);
  v126 = v45;
  v48 = v32;
  v102 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v126, v118, v110, v32, v119);
  v49 = v105;
  v50 = v113;
  ((void (*)(char *, _QWORD, uint64_t))v117)(v105, v124, v113);
  v51 = v14;
  v101 = v14;
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v132, v130, &v127, v18, v49, v14);
  v52 = v49;
  v123(v49, v50);
  v116(v51, v48);
  v53 = v107;
  ((void (*)(char *, uint64_t))v122)(v18, v107);
  sub_1000DC354((uint64_t)&v127);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v132);
  v93 = 2 * v37;
  v92[1] = v120 + 2 * v37;
  v54 = v94[3];
  v55 = v94[4];
  v56 = sub_100011064(v94, v54);
  v133 = (void *)v54;
  v134 = *(void **)(v55 + 8);
  v57 = sub_1000117C0(&v132);
  v58 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v57, v56, v54);
  CondensedSearchInAppPurchaseCardLayout.Metrics.titleTextSpace.getter(v130, v58);
  v129 = 0;
  v127 = 0u;
  v128 = 0u;
  v59 = v53;
  ((void (*)(char *, _QWORD, uint64_t))v43)(v18, v106, v53);
  v60 = v112;
  v61 = swift_allocObject(v112, v44, v115);
  *(_OWORD *)(v61 + 16) = v125;
  v62 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v63 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v62);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v63);
  v126 = v61;
  v64 = v101;
  v65 = v110;
  v66 = v102;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v126, v118, v110, v102, v119);
  v67 = v113;
  ((void (*)(char *, _QWORD, uint64_t))v117)(v52, v124, v113);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v132, v130, &v127, v18, v52, v64);
  v123(v52, v67);
  v116(v64, v66);
  v68 = v18;
  v69 = v18;
  v70 = v59;
  ((void (*)(char *, uint64_t))v122)(v68, v59);
  sub_1000DC354((uint64_t)&v127);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v132);
  v104 += v120 + v93;
  v71 = v95[3];
  v72 = v95[4];
  v73 = sub_100011064(v95, v71);
  v133 = (void *)v71;
  v134 = *(void **)(v72 + 8);
  v74 = sub_1000117C0(&v132);
  v75 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v74, v73, v71);
  CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleTextSpace.getter(v130, v75);
  v129 = 0;
  v127 = 0u;
  v128 = 0u;
  ((void (*)(char *, _QWORD, uint64_t))v108)(v69, v106, v70);
  v76 = v60;
  v77 = v103;
  v78 = swift_allocObject(v76, v103, v115);
  *(_OWORD *)(v78 + 16) = v125;
  v79 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v80 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v79);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v80);
  v126 = v78;
  v81 = v101;
  v82 = v102;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v126, v118, v65, v102, v119);
  v83 = v113;
  ((void (*)(char *, _QWORD, uint64_t))v117)(v52, v124, v113);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v132, v130, &v127, v69, v52, v81);
  v123(v52, v83);
  v84 = v81;
  v116(v81, v82);
  v85 = v107;
  ((void (*)(char *, uint64_t))v122)(v69, v107);
  sub_1000DC354((uint64_t)&v127);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v132);
  CondensedSearchInAppPurchaseCardLayout.Metrics.artworkAXBottomMargin.getter(&v132);
  v131 = 0;
  memset(v130, 0, sizeof(v130));
  ((void (*)(char *, _QWORD, uint64_t))v108)(v69, v96, v85);
  v86 = swift_allocObject(v112, v77, v115);
  *(_OWORD *)(v86 + 16) = v125;
  v87 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v88 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v87);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v88);
  *(_QWORD *)&v127 = v86;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v127, v118, v110, v82, v119);
  ((void (*)(char *, _QWORD, uint64_t))v117)(v52, v124, v83);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v99, &v132, v130, v69, v52, v84);
  v123(v52, v83);
  v116(v84, v82);
  ((void (*)(char *, uint64_t))v122)(v69, v85);
  sub_1000DC354((uint64_t)v130);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v132);
  v89 = type metadata accessor for VerticalFlowLayout(0);
  v90 = v100;
  v100[3] = v89;
  v90[4] = &protocol witness table for VerticalFlowLayout;
  v90[5] = &protocol witness table for VerticalFlowLayout;
  sub_1000117C0(v90);
  return VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v98);
}

uint64_t sub_1000DA970@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, _QWORD *a8@<X8>, __n128 a9@<Q0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  void *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  void (*v62)(char *);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  double v103;
  uint64_t v104;
  double v105;
  double v106;
  uint64_t v107;
  id v108;
  void *v109;
  double v110;
  uint64_t v111;
  double v112;
  double v113;
  uint64_t v114;
  id v115;
  void *v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  double (*v128)(char *, uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  char *v131;
  __n128 v132;
  uint64_t v133;
  _QWORD *v134;
  char *v136;
  uint64_t v137;
  char *v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  void (*v175)(char *);
  unsigned int v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  _QWORD v180[5];
  _BYTE v181[32];
  uint64_t v182;
  _QWORD v183[5];
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v146 = a6;
  v140 = a5;
  v139 = a4;
  v149 = a2;
  v154 = a8;
  v152 = type metadata accessor for FlankedHorizontalLayout.ViewAlignment(0, a9);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v153 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v150 = (char *)&v136 - v14;
  v147 = type metadata accessor for VerticalFlowLayout(0);
  v148 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for VerticalFlowLayout.HorizontalPlacement(0);
  v174 = *(_QWORD *)(v171 - 8);
  v16 = __chkstk_darwin(v171);
  v170 = (char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(0, v16);
  v18 = *(_QWORD *)(v162 - 8);
  v19 = __chkstk_darwin(v162);
  v138 = (char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VerticalFlowLayout.VerticalPlacement(0, v19);
  v22 = *(_QWORD *)(v21 - 8);
  v155 = v21;
  v172 = v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  CondensedSearchInAppPurchaseCardLayout.Metrics.textTopMargin.getter(&v190, v23);
  v26 = v191;
  v27 = v192;
  sub_100011064(&v190, v191);
  v28 = AnyDimension.value(with:)(a7, v26, v27);
  v29 = ((double (*)(void))CondensedSearchInAppPurchaseCardLayout.Metrics.cardInsets.getter)();
  v143 = type metadata accessor for TraitEnvironmentPlaceholder(0);
  v144 = sub_10000DF3C(&qword_1007F5840);
  v30 = swift_allocObject(v144, 40, 7);
  v179 = xmmword_10066FE60;
  *(_OWORD *)(v30 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v30 + 32) = a7;
  v142 = a7;
  v31 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v30);
  v32 = CGFloat.rawValue(in:)(v29);

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  v33 = sub_10000DF3C((uint64_t *)&unk_1007F4760);
  v34 = *(_QWORD *)(type metadata accessor for VerticalFlowLayout.Child(0) - 8);
  v168 = *(_QWORD *)(v34 + 72);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = swift_allocObject(v33, v36 + 4 * v168, v35 | 7);
  v141 = v37;
  *(_OWORD *)(v37 + 16) = xmmword_1006725D0;
  v169 = v37 + v36;
  v38 = a3[3];
  v39 = a3[4];
  sub_100011064(a3, v38);
  v40 = LayoutView.withLayoutMargins(_:)(&v190, v38, *(_QWORD *)(v39 + 8), v28 + v32, 0.0, 0.0, 0.0);
  v156 = a1;
  CondensedSearchInAppPurchaseCardLayout.Metrics.headerTextSpace.getter(&v187, v40);
  v186 = 0;
  v185 = 0u;
  v184 = 0u;
  v165 = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
  v160 = *(void (**)(char *))(v22 + 104);
  v160(v25);
  v167 = sub_10000DF3C((uint64_t *)&unk_100819230);
  v41 = *(_QWORD *)(v18 + 72);
  v42 = *(unsigned __int8 *)(v18 + 80);
  v166 = 2 * v41;
  v159 = ((v42 + 32) & ~v42) + 3 * v41;
  v157 = (v42 + 32) & ~v42;
  v158 = v42 | 7;
  v43 = swift_allocObject(v167, v159, v42 | 7);
  v178 = xmmword_10066F860;
  *(_OWORD *)(v43 + 16) = xmmword_10066F860;
  v44 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v161 = v41;
  v45 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v44);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v45);
  v183[0] = v43;
  v46 = sub_10000E99C(&qword_1007F4750, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
  v163 = v46;
  v47 = sub_10000DF3C((uint64_t *)&unk_100819240);
  v177 = v47;
  v164 = sub_100019528();
  v48 = v138;
  v49 = v162;
  dispatch thunk of SetAlgebra.init<A>(_:)(v183, v47, v164, v162, v46);
  v176 = enum case for VerticalFlowLayout.HorizontalPlacement.leading(_:);
  v50 = v174;
  v175 = *(void (**)(char *))(v174 + 104);
  v51 = v170;
  v52 = v171;
  v175(v170);
  v53 = v169;
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v190, &v187, &v184, v25, v51, v48);
  v174 = *(_QWORD *)(v50 + 8);
  ((void (*)(char *, uint64_t))v174)(v51, v52);
  v173 = *(void (**)(char *, uint64_t))(v18 + 8);
  v54 = v48;
  v55 = v49;
  v173(v48, v49);
  v172 = *(_QWORD *)(v172 + 8);
  v136 = v25;
  v56 = v155;
  ((void (*)(char *, uint64_t))v172)(v25, v155);
  sub_1000DC354((uint64_t)&v184);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v187);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  v137 = v53 + v168;
  v57 = v139[3];
  v58 = v139[4];
  v59 = sub_100011064(v139, v57);
  v191 = v57;
  v192 = *(_QWORD *)(v58 + 8);
  v60 = sub_1000117C0(&v190);
  v61 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v60, v59, v57);
  CondensedSearchInAppPurchaseCardLayout.Metrics.titleTextSpace.getter(&v187, v61);
  v186 = 0;
  v185 = 0u;
  v184 = 0u;
  v62 = v160;
  ((void (*)(char *, _QWORD, uint64_t))v160)(v25, v165, v56);
  v63 = v159;
  v64 = v158;
  v65 = swift_allocObject(v167, v159, v158);
  *(_OWORD *)(v65 + 16) = v178;
  v66 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v67 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v66);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v67);
  v183[0] = v65;
  v68 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(v183, v177, v164, v55, v163);
  v69 = v170;
  v70 = v171;
  ((void (*)(char *, _QWORD, uint64_t))v175)(v170, v176, v171);
  v71 = v136;
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v190, &v187, &v184, v136, v69, v68);
  ((void (*)(char *, uint64_t))v174)(v69, v70);
  v72 = v68;
  v173(v68, v55);
  v73 = v56;
  ((void (*)(char *, uint64_t))v172)(v71, v56);
  sub_1000DC354((uint64_t)&v184);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v187);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  v139 = (_QWORD *)(2 * v168);
  v137 = v169 + 2 * v168;
  v74 = v140[3];
  v75 = v140[4];
  v76 = sub_100011064(v140, v74);
  v191 = v74;
  v192 = *(_QWORD *)(v75 + 8);
  v77 = sub_1000117C0(&v190);
  v78 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v77, v76, v74);
  CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleTextSpace.getter(&v187, v78);
  v186 = 0;
  v185 = 0u;
  v184 = 0u;
  ((void (*)(char *, _QWORD, uint64_t))v62)(v71, v165, v73);
  v79 = swift_allocObject(v167, v63, v64);
  *(_OWORD *)(v79 + 16) = v178;
  v80 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v81 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v80);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v81);
  v183[0] = v79;
  v82 = v72;
  v83 = v164;
  v84 = v162;
  v85 = v163;
  dispatch thunk of SetAlgebra.init<A>(_:)(v183, v177, v164, v162, v163);
  v86 = v170;
  v87 = v171;
  ((void (*)(char *, _QWORD, uint64_t))v175)(v170, v176, v171);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(&v190, &v187, &v184, v71, v86, v82);
  ((void (*)(char *, uint64_t))v174)(v86, v87);
  v173(v82, v84);
  v88 = v155;
  ((void (*)(char *, uint64_t))v172)(v71, v155);
  sub_1000DC354((uint64_t)&v184);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v187);
  v89 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  v169 += (uint64_t)v139 + v168;
  v90 = CondensedSearchInAppPurchaseCardLayout.Metrics.offerButtonTopMargin.getter(&v190, v89);
  CondensedSearchInAppPurchaseCardLayout.Metrics.cardInsets.getter(v90);
  v188 = &type metadata for CGFloat;
  v189 = &protocol witness table for CGFloat;
  v187 = v91;
  ((void (*)(char *, _QWORD, uint64_t))v160)(v71, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v88);
  v92 = swift_allocObject(v167, v159, v158);
  *(_OWORD *)(v92 + 16) = v178;
  v93 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v94 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v93);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v94);
  *(_QWORD *)&v184 = v92;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v184, v177, v83, v84, v85);
  ((void (*)(char *, _QWORD, uint64_t))v175)(v86, v176, v87);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v146, &v190, &v187, v71, v86, v82);
  ((void (*)(char *, uint64_t))v174)(v86, v87);
  v173(v82, v84);
  ((void (*)(char *, uint64_t))v172)(v71, v88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  sub_1000DC354((uint64_t)&v187);
  v95 = v145;
  v96 = VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v141);
  v97 = CondensedSearchInAppPurchaseCardLayout.Metrics.cardInsets.getter(v96);
  v98 = v144;
  v99 = swift_allocObject(v144, 40, 7);
  *(_OWORD *)(v99 + 16) = v179;
  v100 = v142;
  *(_QWORD *)(v99 + 32) = v142;
  v101 = v100;
  v102 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v99);
  v103 = CGFloat.rawValue(in:)(v97);

  CondensedSearchInAppPurchaseCardLayout.Metrics.cardInsets.getter(v104);
  v106 = v105;
  v107 = swift_allocObject(v98, 40, 7);
  *(_OWORD *)(v107 + 16) = v179;
  *(_QWORD *)(v107 + 32) = v101;
  v108 = v101;
  v109 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v107);
  v110 = CGFloat.rawValue(in:)(v106);

  CondensedSearchInAppPurchaseCardLayout.Metrics.cardInsets.getter(v111);
  v113 = v112;
  v114 = swift_allocObject(v98, 40, 7);
  *(_OWORD *)(v114 + 16) = v179;
  *(_QWORD *)(v114 + 32) = v108;
  v115 = v108;
  v116 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v114);
  v117 = CGFloat.rawValue(in:)(v113);

  CondensedSearchInAppPurchaseCardLayout.Metrics.artworkTrailingMargin.getter(&v190);
  v118 = v191;
  v119 = v192;
  sub_100011064(&v190, v191);
  v120 = AnyDimension.value(with:)(v115, v118, v119);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  v121 = v149[3];
  v122 = v149[4];
  sub_100011064(v149, v121);
  LayoutView.withLayoutMargins(_:)(&v190, v121, v122, v103, v110, v117, v120);
  v123 = v147;
  v188 = (void *)v147;
  v189 = &protocol witness table for VerticalFlowLayout;
  v124 = sub_1000117C0(&v187);
  v125 = v148;
  v126 = v95;
  (*(void (**)(_QWORD *, char *, uint64_t))(v148 + 16))(v124, v95, v123);
  sub_100011020((uint64_t)&v190, (uint64_t)&v184);
  v183[4] = &protocol witness table for Double;
  v183[3] = &type metadata for Double;
  v183[0] = 0;
  v182 = 0;
  memset(v181, 0, sizeof(v181));
  v127 = enum case for FlankedHorizontalLayout.ViewAlignment.center(_:);
  v128 = *(double (**)(char *, uint64_t, uint64_t))(v151 + 104);
  v129 = v150;
  v130 = v152;
  v128(v150, enum case for FlankedHorizontalLayout.ViewAlignment.center(_:), v152);
  v180[3] = type metadata accessor for ZeroDimension(0);
  v180[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v180);
  static ZeroDimension.zero.getter();
  v131 = v153;
  v132.n128_f64[0] = v128(v153, v127, v130);
  v133 = type metadata accessor for FlankedHorizontalLayout(0, v132);
  v134 = v154;
  v154[3] = v133;
  v134[4] = &protocol witness table for FlankedHorizontalLayout;
  v134[5] = sub_10000E99C(&qword_10080B590, (uint64_t (*)(uint64_t))&type metadata accessor for FlankedHorizontalLayout, (uint64_t)&protocol conformance descriptor for FlankedHorizontalLayout);
  sub_1000117C0(v134);
  FlankedHorizontalLayout.init(sublayout:leadingView:leadingMargin:leadingAlignment:trailingView:trailingMargin:trailingAlignment:)(&v187, &v184, v183, v129, v181, v180, v131);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v190);
  return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v126, v123);
}

Swift::Void __swiftcall CondensedInAppPurchaseContentView.prepareForReuse()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel), "setText:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel), "setText:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel), "setText:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton), "setHidden:", 1);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView), "setHidden:", 1);
}

Swift::Void __swiftcall CondensedInAppPurchaseContentView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  __objc2_meth_list **p_base_meths;
  id v11;
  id v12;
  __objc2_meth_list **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  id v22;
  int v23;
  id v24;
  int v25;
  void *v26;
  id v27;
  Swift::Int v28;
  objc_super v29;

  v2 = v1;
  isa = a1.value.super.isa;
  v4 = type metadata accessor for CondensedSearchInAppPurchaseCardLayout.Metrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for CondensedInAppPurchaseContentView(0);
  v29.receiver = v1;
  v29.super_class = v8;
  objc_msgSendSuper2(&v29, "traitCollectionDidChange:", isa);
  if (isa)
    v9 = -[objc_class preferredContentSizeCategory](isa, "preferredContentSizeCategory");
  else
    v9 = 0;
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  v11 = objc_msgSend(v2, "traitCollection");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");

  v13 = &TodayCardChinLockupListView.base_meths;
  if (!v9)
  {

LABEL_12:
    sub_1000DBB84();
    v22 = objc_msgSend(v2, (SEL)v13[408]);
    goto LABEL_13;
  }
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  if (v14 == v17 && v16 == v18)
  {

    swift_bridgeObjectRelease_n(v16, 2);
    v13 = &TodayCardChinLockupListView.base_meths;
    if (isa)
      goto LABEL_14;
LABEL_16:
    v23 = 2;
    goto LABEL_17;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);

  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v20);
  v13 = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if ((v21 & 1) == 0)
    goto LABEL_12;
LABEL_13:
  if (!isa)
    goto LABEL_16;
LABEL_14:
  v23 = UITraitCollection.prefersAccessibilityLayouts.getter(v22) & 1;
LABEL_17:
  v24 = objc_msgSend(v2, (SEL)p_base_meths[471]);
  v25 = UITraitCollection.prefersAccessibilityLayouts.getter(v24);

  if (v23 == 2 || ((v25 ^ (v23 != 0)) & 1) != 0)
  {
    v26 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel];
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v2[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_metrics], v4);
    v27 = objc_msgSend(v2, (SEL)p_base_meths[471]);
    v28 = CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleNumberOfLines(for:)((UITraitCollection)v27);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v26, "setNumberOfLines:", v28);
    objc_msgSend(v2, (SEL)v13[408]);
  }
}

id sub_1000DBB84()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t (*v10)(char *);
  uint64_t v11;
  uint64_t (*v12)(char *, char *, uint64_t);
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  id v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  Swift::Int v31;
  uint64_t (*v33)(char *);
  void (*v34)(char *, uint64_t);
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v37 = type metadata accessor for FontUseCase(0);
  v2 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CondensedSearchInAppPurchaseCardLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel];
  v38 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  v35 = &v0[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_metrics];
  v10 = *(uint64_t (**)(char *))(v6 + 16);
  v11 = v10(v8);
  v12 = (uint64_t (*)(char *, char *, uint64_t))v10;
  v33 = v10;
  CondensedSearchInAppPurchaseCardLayout.Metrics.headerFont.getter(v11);
  v36 = *(void (**)(char *, uint64_t))(v6 + 8);
  v36(v8, v5);
  v13 = objc_msgSend(v1, "traitCollection");
  v14 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v4, v13);

  v34 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v37;
  v34(v4, v37);
  objc_msgSend(v9, "setFont:", v14);

  objc_msgSend(v9, "setLineBreakMode:", 4);
  v16 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel];
  v17 = v35;
  v18 = v12(v8, v35, v5);
  CondensedSearchInAppPurchaseCardLayout.Metrics.titleFont.getter(v18);
  v19 = v36;
  v36(v8, v5);
  v20 = objc_msgSend(v1, "traitCollection");
  v21 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v4, v20);

  v22 = v15;
  v23 = v34;
  v34(v4, v22);
  objc_msgSend(v16, "setFont:", v21);

  objc_msgSend(v16, "setLineBreakMode:", 4);
  v24 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel];
  v25 = v17;
  v26 = (void (*)(char *, char *, uint64_t))v33;
  v27 = ((uint64_t (*)(char *, char *, uint64_t))v33)(v8, v25, v5);
  CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleFont.getter(v27);
  v19(v8, v5);
  v28 = objc_msgSend(v1, "traitCollection");
  v29 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v4, v28);

  v23(v4, v37);
  objc_msgSend(v24, "setFont:", v29);

  v26(v8, v35, v5);
  v30 = objc_msgSend(v1, "traitCollection");
  v31 = CondensedSearchInAppPurchaseCardLayout.Metrics.subtitleNumberOfLines(for:)((UITraitCollection)v30);

  v36(v8, v5);
  objc_msgSend(v24, "setNumberOfLines:", v31);
  return objc_msgSend(v24, "setLineBreakMode:", 4);
}

id CondensedInAppPurchaseContentView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CondensedInAppPurchaseContentView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

double static CondensedInAppPurchaseContentView.prefetchArtwork(for:with:asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for InAppPurchaseSearchResult(0);
  v1 = sub_10000E99C(&qword_1007FA910, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v8, v0, v0, v1);
  v3 = v8;
  if (v8)
  {
    v5 = InAppPurchaseSearchResult.lockup.getter(v2);
    if (qword_1007F1188 != -1)
      swift_once(&qword_1007F1188, sub_1000D944C);
    v6 = sub_1005A00EC(*(double *)&xmmword_100851910, *((double *)&xmmword_100851910 + 1), v5, v4);
    swift_release(v5);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v6);
    swift_release(v3);
    v2.n128_u64[0] = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return v2.n128_f64[0];
}

uint64_t sub_1000DC080(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10000E99C(&qword_1007FA8C0, type metadata accessor for CondensedInAppPurchaseContentView, (uint64_t)&protocol conformance descriptor for CondensedInAppPurchaseContentView);
  result = sub_10000E99C(&qword_1007FA8C8, type metadata accessor for CondensedInAppPurchaseContentView, (uint64_t)&protocol conformance descriptor for CondensedInAppPurchaseContentView);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000DC0DC()
{
  return sub_10000E99C(&qword_1007FA8D0, type metadata accessor for CondensedInAppPurchaseContentView, (uint64_t)&protocol conformance descriptor for CondensedInAppPurchaseContentView);
}

uint64_t sub_1000DC108()
{
  return type metadata accessor for CondensedInAppPurchaseContentView(0);
}

uint64_t sub_1000DC110(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for CondensedSearchInAppPurchaseCardLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1000DC1A0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_headerLabel;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v0[v5] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_titleLabel;
  *(_QWORD *)&v0[v6] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_subtitleLabel;
  *(_QWORD *)&v0[v7] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_offerButton;
  v9 = type metadata accessor for OfferButton();
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  v10 = OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_inAppPurchaseView;
  if (qword_1007F1188 != -1)
    swift_once(&qword_1007F1188, sub_1000D944C);
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&xmmword_100851910);
  v11 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  *(_QWORD *)&v1[v10] = sub_10021DFE0((uint64_t)v4, 1);
  _s22SubscribePageExtension33CondensedInAppPurchaseContentViewC7metrics0F16StoreKitInternal0d6SearchefG10CardLayoutV7MetricsVvpfi_0();
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension33CondensedInAppPurchaseContentView_tileOffset] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CondensedInAppPurchaseContentView.swift", 62, 2, 76, 0);
  __break(1u);
}

uint64_t sub_1000DC354(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_100803C00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1000DC394(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  BOOL v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  _BOOL8 v32;
  uint64_t (*v33)(char *);
  uint64_t v34;

  v4 = v3;
  v32 = a2;
  v33 = a1;
  v34 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v29 = *(_QWORD *)(v6 + 72);
    v30 = v8;
    v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v27 = a3;
    v14 = swift_bridgeObjectRetain(a3);
    while (1)
    {
      v15 = v34;
      v31(v11, v13, v34, v14);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v16)(v11, 0, 1, v15);
      v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v15);
      v18 = v17 != 1;
      if (v17 == 1)
      {
        a3 = v27;
        goto LABEL_13;
      }
      v28 = 1;
      v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v20 = v6;
      v21 = v30;
      v19(v30, v11, v15);
      v18 = v32;
      v22 = v33(v21);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
        swift_bridgeObjectRelease(v27);
        return v18;
      }
      v23 = v22;
      v24 = v16;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
      if ((v23 & 1) != 0)
        break;
      v13 += v29;
      --v12;
      v4 = 0;
      v6 = v20;
      if (!v12)
      {
        a3 = v27;
        goto LABEL_9;
      }
    }
    a3 = v27;
    v18 = v28;
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    v14 = swift_bridgeObjectRetain(a3);
LABEL_9:
    v24(v11, 1, 1, v34, v14);
    v18 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(a3);
  return v18;
}

id sub_1000DC5BC()
{
  _BYTE *v0;
  char *v1;
  id v2;
  uint64_t v3;
  id v4;
  objc_super v6;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_layoutDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToSlideInAppearAnimate] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToFadeDisappearAnimate] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_pinningEnabled] = 0;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout();
  v2 = objc_msgSendSuper2(&v6, "init");
  objc_msgSend(v2, "setScrollDirection:", 1);
  v3 = qword_1007F1198;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1007F1198, sub_1000DDABC);
  objc_msgSend(v4, "setMinimumInteritemSpacing:", *(double *)&qword_1007FA918);

  return v4;
}

void sub_1000DC75C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  objc_class *v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  unint64_t *v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  unint64_t *v44;
  unint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE v61[24];
  objc_super v62;

  v3 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v57 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v56 = (char *)&v50 - v13;
  __chkstk_darwin(v14);
  v55 = (char *)&v50 - v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v50 - v17;
  __chkstk_darwin(v18);
  v54 = (char *)&v50 - v19;
  sub_100019574(0, &qword_1007FA998, UICollectionViewUpdateItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v21 = (objc_class *)type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout();
  v62.receiver = v1;
  v62.super_class = v21;
  objc_msgSendSuper2(&v62, "prepareForCollectionViewUpdates:", isa);

  if (UIAccessibilityIsReduceMotionEnabled())
    return;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v49 = a1;
    else
      v49 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v22 = _CocoaArrayWrapper.endIndex.getter(v49);
    if (v22)
      goto LABEL_4;
LABEL_37:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v22 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v22)
    goto LABEL_37;
LABEL_4:
  if (v22 >= 1)
  {
    v23 = 0;
    v51 = (unint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToSlideInAppearAnimate];
    v52 = (unint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToFadeDisappearAnimate];
    v53 = a1;
    v59 = v22;
    v60 = a1 & 0xC000000000000001;
    v24 = &selRef_textAlignment;
    while (1)
    {
      v25 = v60
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, a1)
          : *(id *)(a1 + 8 * v23 + 32);
      v26 = v25;
      if (!objc_msgSend(v25, v24[254]))
        break;
LABEL_22:
      if (objc_msgSend(v26, v24[254]) == (id)1)
      {
        v38 = objc_msgSend(v26, "indexPathBeforeUpdate");
        if (v38)
        {
          v39 = v38;
          v40 = v58;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v38);

          v41 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
          v42 = v40;
          v22 = v59;
          v41(v5, v42, v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) != 1)
          {
            v43 = v56;
            v41(v56, v5, v9);
            (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v57, v43, v9);
            v44 = v52;
            swift_beginAccess(v52, v61, 33, 0);
            v45 = *v44;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v44);
            *v44 = v45;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v45 = sub_100201490(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
              *v52 = v45;
            }
            v48 = *(_QWORD *)(v45 + 16);
            v47 = *(_QWORD *)(v45 + 24);
            if (v48 >= v47 >> 1)
            {
              v45 = sub_100201490(v47 > 1, v48 + 1, 1, v45);
              *v52 = v45;
            }
            *(_QWORD *)(v45 + 16) = v48 + 1;
            v41((char *)(v45+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v48), v57, v9);
            swift_endAccess(v61);

            (*(void (**)(char *, uint64_t))(v10 + 8))(v56, v9);
            a1 = v53;
            v22 = v59;
            goto LABEL_32;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
        }

        sub_1000DE220((uint64_t)v5);
LABEL_32:
        v24 = &selRef_textAlignment;
        goto LABEL_7;
      }

LABEL_7:
      if (v22 == ++v23)
        goto LABEL_37;
    }
    v27 = objc_msgSend(v26, "indexPathAfterUpdate");
    if (v27)
    {
      v28 = v27;
      v29 = v58;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v27);

      v30 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v31 = v29;
      v22 = v59;
      v30(v8, v31, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        v32 = v54;
        v30(v54, v8, v9);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v32, v9);
        v33 = v51;
        swift_beginAccess(v51, v61, 33, 0);
        v34 = *v33;
        v35 = swift_isUniquelyReferenced_nonNull_native(*v33);
        *v33 = v34;
        if ((v35 & 1) == 0)
        {
          v34 = sub_100201490(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
          *v51 = v34;
        }
        v37 = *(_QWORD *)(v34 + 16);
        v36 = *(_QWORD *)(v34 + 24);
        if (v37 >= v36 >> 1)
        {
          v34 = sub_100201490(v36 > 1, v37 + 1, 1, v34);
          *v51 = v34;
        }
        *(_QWORD *)(v34 + 16) = v37 + 1;
        v30((char *)(v34+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v37), v55, v9);
        swift_endAccess(v61);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v54, v9);
        a1 = v53;
        v22 = v59;
        goto LABEL_21;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    sub_1000DE220((uint64_t)v8);
LABEL_21:
    v24 = &selRef_textAlignment;
    goto LABEL_22;
  }
  __break(1u);
}

char *sub_1000DCE44(uint64_t a1)
{
  char *v1;
  char *v2;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  BOOL v13;
  id v14;
  void *v15;
  _QWORD v17[5];
  char v18[24];
  objc_super v19;

  v2 = v1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v19.receiver = v2;
  v19.super_class = (Class)type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout();
  v5 = objc_msgSendSuper2(&v19, "initialLayoutAttributesForAppearingItemAtIndexPath:", isa);

  if (!v5)
    return 0;
  v6 = type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout.LayoutAttributes();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
    return (char *)v5;
  v8 = (char *)v7;
  v9 = (uint64_t *)&v2[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToSlideInAppearAnimate];
  swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToSlideInAppearAnimate], v18, 0, 0);
  v10 = *v9;
  __chkstk_darwin(v11);
  v17[2] = a1;
  v12 = v5;
  swift_bridgeObjectRetain(v10);
  v13 = sub_1000DC394((uint64_t (*)(char *))sub_1000DE048, (_BOOL8)v17, v10);
  swift_bridgeObjectRelease(v10);
  if (v13)
  {
    objc_msgSend(v8, "setAlpha:", 0.4);
    v14 = sub_1000DD478();
    v15 = *(void **)&v8[OBJC_IVAR____TtCC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes_animation];
    *(_QWORD *)&v8[OBJC_IVAR____TtCC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes_animation] = v14;

    v12 = v15;
  }

  return v8;
}

char *sub_1000DCFB8(uint64_t a1)
{
  char *v1;
  char *v2;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  void *v15;
  _QWORD v17[5];
  char v18[24];
  objc_super v19;

  v2 = v1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v19.receiver = v2;
  v19.super_class = (Class)type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout();
  v5 = objc_msgSendSuper2(&v19, "finalLayoutAttributesForDisappearingItemAtIndexPath:", isa);

  if (!v5)
    return 0;
  v6 = type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout.LayoutAttributes();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
    return (char *)v5;
  v8 = (char *)v7;
  v9 = (uint64_t *)&v2[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_indexPathsToFadeDisappearAnimate];
  swift_beginAccess(v9, v18, 0, 0);
  v10 = *v9;
  __chkstk_darwin(v11);
  v17[2] = a1;
  v12 = v5;
  swift_bridgeObjectRetain(v10);
  LOBYTE(v9) = sub_1000DC394((uint64_t (*)(char *))sub_1000DE048, (_BOOL8)v17, v10);
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v10).n128_u64[0];
  if ((v9 & 1) != 0)
  {
    v14 = sub_1000DE060();
    v15 = *(void **)&v8[OBJC_IVAR____TtCC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes_animation];
    *(_QWORD *)&v8[OBJC_IVAR____TtCC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes_animation] = v14;

  }
  objc_msgSend(v8, "setZIndex:", 1, v13);

  return v8;
}

id sub_1000DD118(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  v12 = (void *)a4(v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

id sub_1000DD478()
{
  void *v0;
  id v1;
  void *v2;
  CGFloat Width;
  CGFloat m43;
  CGFloat m44;
  CGFloat v6;
  CGFloat v7;
  NSString v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  id v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  CATransform3D v33;
  CGRect v34;

  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
    return 0;
  v2 = v1;
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v34);
  CATransform3DMakeTranslation(&v33, Width, 0.0, 0.0);
  v24 = *(_OWORD *)&v33.m13;
  v25 = *(_OWORD *)&v33.m11;
  v22 = *(_OWORD *)&v33.m23;
  v23 = *(_OWORD *)&v33.m21;
  v20 = *(_OWORD *)&v33.m33;
  v21 = *(_OWORD *)&v33.m31;
  v19 = *(_OWORD *)&v33.m41;
  m43 = v33.m43;
  m44 = v33.m44;
  v31 = *(_OWORD *)&CATransform3DIdentity.m13;
  v32 = *(_OWORD *)&CATransform3DIdentity.m11;
  v29 = *(_OWORD *)&CATransform3DIdentity.m23;
  v30 = *(_OWORD *)&CATransform3DIdentity.m21;
  v27 = *(_OWORD *)&CATransform3DIdentity.m33;
  v28 = *(_OWORD *)&CATransform3DIdentity.m31;
  v26 = *(_OWORD *)&CATransform3DIdentity.m41;
  v6 = CATransform3DIdentity.m43;
  v7 = CATransform3DIdentity.m44;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v8);

  v10 = (void *)objc_opt_self(NSValue);
  v11 = v9;
  *(_OWORD *)&v33.m11 = v25;
  *(_OWORD *)&v33.m13 = v24;
  *(_OWORD *)&v33.m21 = v23;
  *(_OWORD *)&v33.m23 = v22;
  *(_OWORD *)&v33.m31 = v21;
  *(_OWORD *)&v33.m33 = v20;
  *(_OWORD *)&v33.m41 = v19;
  v33.m43 = m43;
  v33.m44 = m44;
  v12 = objc_msgSend(v10, "valueWithCATransform3D:", &v33);
  objc_msgSend(v11, "setFromValue:", v12);

  v13 = v11;
  *(_OWORD *)&v33.m11 = v32;
  *(_OWORD *)&v33.m13 = v31;
  *(_OWORD *)&v33.m21 = v30;
  *(_OWORD *)&v33.m23 = v29;
  *(_OWORD *)&v33.m31 = v28;
  *(_OWORD *)&v33.m33 = v27;
  *(_OWORD *)&v33.m41 = v26;
  v33.m43 = v6;
  v33.m44 = v7;
  v14 = objc_msgSend(v10, "valueWithCATransform3D:", &v33);
  objc_msgSend(v13, "setToValue:", v14);

  v15 = v13;
  v16 = CACurrentMediaTime();
  objc_msgSend(v15, "setBeginTime:", v16 + (double)IndexPath.row.getter() * 0.05);

  objc_msgSend(v15, "setFillMode:", kCAFillModeBackwards);
  objc_msgSend(v15, "setMass:", 1.0);
  objc_msgSend(v15, "setStiffness:", 250.0);
  objc_msgSend(v15, "setDamping:", 28.0);
  objc_msgSend(v15, "setInitialVelocity:", 0.0);
  v17 = v15;
  objc_msgSend(v17, "settlingDuration");
  objc_msgSend(v17, "setDuration:");

  return v17;
}

id sub_1000DD790(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  id v23;
  id v24;
  _QWORD v25[4];

  v23 = a1;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v23, "copy", v4);
  _bridgeAnyObjectToAny(_:)(v25, v7);
  swift_unknownObjectRelease(v7);
  v8 = sub_100019574(0, (unint64_t *)&qword_1007F4A20, UICollectionViewLayoutAttributes_ptr);
  if (!swift_dynamicCast(&v24, v25, (char *)&type metadata for Any + 8, v8, 6))
    return v23;
  v9 = v24;
  objc_msgSend(v24, "setZIndex:", 3);
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_pinningEnabled] == 1)
  {
    v10 = objc_msgSend(v1, "collectionView");
    if (v10)
    {
      v11 = v10;
      Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_layoutDelegate]);
      if (Strong)
      {
        v13 = Strong;
        v14 = *(_QWORD *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension28GuidedSearchTokenPaletteView_tokens);
        swift_bridgeObjectRetain(v14);
        v16 = sub_1000DDDF4(v15);
        swift_bridgeObjectRelease(v14);
        v17 = v16[2];
        swift_unknownObjectRelease(v13);
        v18 = objc_msgSend(v9, "indexPath", swift_bridgeObjectRelease(v16).n128_f64[0]);
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v18);

        v20 = IndexPath.item.getter(v19);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        if (v20 < v17)
          objc_msgSend(v9, "setZIndex:", 4);
      }

    }
  }
  return v9;
}

id sub_1000DD994()
{
  return sub_1000DDA5C(type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout);
}

uint64_t type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout()
{
  return objc_opt_self(_TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout);
}

id sub_1000DDA50()
{
  return sub_1000DDA5C(type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout.LayoutAttributes);
}

id sub_1000DDA5C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout.LayoutAttributes()
{
  return objc_opt_self(_TtCC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes);
}

void sub_1000DDABC()
{
  qword_1007FA918 = 0x4010000000000000;
}

_QWORD *sub_1000DDACC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  _QWORD v43[4];
  _QWORD *v44;

  v4 = type metadata accessor for IndexPath(0);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  __chkstk_darwin(v4);
  v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_26;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v6)
      break;
    v44 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v6);
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    v9 = a1 & 0xC000000000000001;
    v40 = OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_pinningEnabled;
    v36 = &a2[OBJC_IVAR____TtC22SubscribePageExtension44GuidedSearchTokenPaletteCollectionViewLayout_layoutDelegate];
    v41 = (char *)&type metadata for Any + 8;
    v38 = a2;
    while (v6 != v8)
    {
      if (v9)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
      else
        v14 = *(id *)(a1 + 8 * v8 + 32);
      v11 = v14;
      v15 = objc_msgSend(v14, "copy", v33);
      _bridgeAnyObjectToAny(_:)(v43, v15);
      swift_unknownObjectRelease(v15);
      v16 = sub_100019574(0, (unint64_t *)&qword_1007F4A20, UICollectionViewLayoutAttributes_ptr);
      v10 = swift_dynamicCast(&v42, v43, v41, v16, 6);
      if ((_DWORD)v10)
      {
        v17 = a1;
        v18 = v42;
        objc_msgSend(v42, "setZIndex:", 3);
        if ((a2[v40] & 1) != 0)
        {
          v19 = objc_msgSend(a2, "collectionView");
          if (v19)
          {
            v20 = v19;
            Strong = swift_unknownObjectWeakLoadStrong(v36);
            if (Strong)
            {
              v22 = Strong;
              v37 = v20;
              v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension28GuidedSearchTokenPaletteView_tokens);
              swift_bridgeObjectRetain(v23);
              v24 = v39;
              v26 = sub_1000DDDF4(v25);
              v39 = v24;
              swift_bridgeObjectRelease(v23);
              v27 = v26[2];
              swift_unknownObjectRelease(v22);
              v28 = objc_msgSend(v18, "indexPath", swift_bridgeObjectRelease(v26).n128_f64[0]);
              v29 = v33;
              static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v28);

              v31 = IndexPath.item.getter(v30);
              (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v35);
              if (v31 < v27)
                objc_msgSend(v18, "setZIndex:", 4);

            }
            else
            {

            }
          }
          else
          {

          }
          v11 = v18;
          a2 = v38;
        }
        else
        {

          v11 = v18;
        }
        a1 = v17;
      }
      ++v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = v44[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (v6 == v8)
        return v44;
    }
    __break(1u);
LABEL_26:
    if (a1 < 0)
      v32 = a1;
    else
      v32 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

_QWORD *sub_1000DDDF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v3 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - v8;
  result = _swiftEmptyArrayStorage;
  v19 = _swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v17 = v1;
    v12 = *(_QWORD *)(v7 + 72);
    v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v13 = a1 + v18;
    v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000DDF84(v13, (uint64_t)v9);
      if (v9[*(int *)(v3 + 24)] == 1)
      {
        sub_1000DE004((uint64_t)v9, (uint64_t)v5);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          sub_100021CE4(0, v14[2] + 1, 1);
        v14 = v19;
        v16 = v19[2];
        v15 = v19[3];
        if (v16 >= v15 >> 1)
        {
          sub_100021CE4(v15 > 1, v16 + 1, 1);
          v14 = v19;
        }
        v14[2] = v16 + 1;
        sub_1000DE004((uint64_t)v5, (uint64_t)v14 + v18 + v16 * v12);
      }
      else
      {
        sub_1000DDFC8((uint64_t)v9);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

uint64_t sub_1000DDF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DDFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000DE004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DE048(uint64_t a1)
{
  return sub_1000DE1C4(a1) & 1;
}

id sub_1000DE060()
{
  NSString v0;
  id v1;
  id v2;
  id v3;
  Class isa;
  id v5;
  Class v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v0);

  v2 = v1;
  objc_msgSend(v2, "setBeginTime:", CACurrentMediaTime());

  objc_msgSend(v2, "setDuration:", 0.1);
  v3 = v2;
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setFromValue:", isa);

  v5 = v3;
  v6 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v5, "setToValue:", v6);

  v7 = objc_allocWithZone((Class)CAMediaTimingFunction);
  v8 = v5;
  LODWORD(v9) = 1043207291;
  LODWORD(v10) = 1059816735;
  LODWORD(v11) = 0;
  LODWORD(v12) = 1.0;
  v13 = objc_msgSend(v7, "initWithControlPoints::::", v9, v11, v10, v12);
  objc_msgSend(v8, "setTimingFunction:", v13);

  return v8;
}

uint64_t sub_1000DE1C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for IndexPath(0);
  v5 = sub_1000CFD1C();
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

uint64_t sub_1000DE220(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F5520);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000DE264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FA9A0;
  if (!qword_1007FA9A0)
  {
    v1 = type metadata accessor for InformationRibbonCollectionViewCell(255);
    result = swift_getWitnessTable(byte_100698964, v1);
    atomic_store(result, (unint64_t *)&qword_1007FA9A0);
  }
  return result;
}

double sub_1000DE2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000DE2BC(a3, a4);
}

double sub_1000DE2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_1006756A0);
  ItemLayoutContext.subscript.getter(v6);
  swift_release(KeyPath);
  ReadOnlyLens.value.getter(&v22, v3);
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v9 = v22;
  ItemLayoutContext.sectionIndex.getter(v8);
  v10 = type metadata accessor for ArtworkLoader(0);
  v11 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v21, v10, a2, v10, v11);
  v12 = v21;
  v13 = type metadata accessor for ObjectGraph(0);
  v14 = swift_dynamicCastClassUnconditional(a2, v13, 0, 0, 0);
  v15 = sub_1000826AC();
  v17 = sub_10020B5D0(v16);
  if (v17)
  {
    v18 = v17;
    sub_100209A48(v17, v12, v14, v15);
    swift_unknownObjectRelease(v15);
    swift_release(v9);
    v19 = v18;
  }
  else
  {
    swift_unknownObjectRelease(v15);
    v19 = v9;
  }
  swift_release(v19);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

_QWORD *sub_1000DE444(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100021B7C(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v8 = result;
      v7 = result[2];
      v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        sub_100021B7C(v6 > 1, v7 + 1, 1);
        result = v8;
      }
      result[2] = v7 + 1;
      result[v7 + 4] = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

id sub_1000DE504(uint64_t a1)
{
  return sub_1000DE674(50.0, a1, &qword_1007FA9A8);
}

id sub_1000DE518()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.5);
  qword_1007FA9B0 = (uint64_t)result;
  return result;
}

void sub_1000DE554(uint64_t a1)
{
  sub_1000DE594(0.1, a1, (SEL *)&selRef_whiteColor, 0, &qword_1007FA9B8);
}

void sub_1000DE574(uint64_t a1)
{
  sub_1000DE594(0.1, a1, (SEL *)&selRef_blackColor, 23, &qword_1007FA9C0);
}

void sub_1000DE594(double a1, uint64_t a2, SEL *a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  id v10;
  id v11;

  v9 = sub_100019574(0, (unint64_t *)&qword_1007FAA60, UIColorEffect_ptr);
  v10 = objc_msgSend((id)objc_opt_self(UIColor), *a3);
  v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(v9), "effectCompositingColor:withMode:alpha:", v10, a4, a1);

  if (v11)
    *a5 = v11;
  else
    __break(1u);
}

void sub_1000DE644(uint64_t a1)
{
  sub_1000DE594(0.2, a1, (SEL *)&selRef_whiteColor, 0, &qword_1007FA9C8);
}

id sub_1000DE664(uint64_t a1)
{
  return sub_1000DE674(20.0, a1, &qword_1007FA9D0);
}

id sub_1000DE674(double a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "_effectWithBlurRadius:scale:", a1, 0.125);
  if (result)
    *a3 = result;
  else
    __break(1u);
  return result;
}

void sub_1000DE6D0(uint64_t a1)
{
  sub_1000DE594(0.2, a1, (SEL *)&selRef_blackColor, 0, &qword_1007FA9D8);
}

id sub_1000DE6F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v19;

  v0 = sub_10000DF3C(&qword_1007F5840);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1006710E0;
  if (qword_1007F11A0 != -1)
    swift_once(&qword_1007F11A0, sub_1000DE504);
  v2 = (void *)qword_1007FA9A8;
  *(_QWORD *)(v1 + 32) = qword_1007FA9A8;
  v3 = qword_1007F11A8;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1007F11A8, sub_1000DE518);
  v5 = (void *)qword_1007FA9B0;
  *(_QWORD *)(v1 + 40) = qword_1007FA9B0;
  v6 = qword_1007F11B0;
  v7 = v5;
  if (v6 != -1)
    v7 = (id)swift_once(&qword_1007F11B0, sub_1000DE554);
  v8 = (void *)qword_1007FA9B8;
  *(_QWORD *)(v1 + 48) = qword_1007FA9B8;
  specialized Array._endMutation()(v7);
  v9 = v1;
  v10 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1006710E0;
  v11 = (void *)qword_1007FA9A8;
  v12 = (void *)qword_1007FA9B0;
  *(_QWORD *)(v10 + 32) = qword_1007FA9A8;
  *(_QWORD *)(v10 + 40) = v12;
  v13 = qword_1007F11B8;
  v14 = v8;
  v15 = v11;
  v16 = v12;
  if (v13 != -1)
    swift_once(&qword_1007F11B8, sub_1000DE574);
  v17 = qword_1007FA9C0;
  v19 = (void *)qword_1007FA9C0;
  *(_QWORD *)(v10 + 48) = qword_1007FA9C0;
  specialized Array._endMutation()(v17);
  qword_100851938 = v9;
  qword_100851940 = v10;
  return v19;
}

double sub_1000DE890()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  double result;

  v0 = sub_10000DF3C(&qword_1007F5840);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1006710E0;
  if (qword_1007F11A0 != -1)
    swift_once(&qword_1007F11A0, sub_1000DE504);
  v2 = (void *)qword_1007FA9A8;
  *(_QWORD *)(v1 + 32) = qword_1007FA9A8;
  v3 = qword_1007F11A8;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1007F11A8, sub_1000DE518);
  v5 = (void *)qword_1007FA9B0;
  *(_QWORD *)(v1 + 40) = qword_1007FA9B0;
  v6 = qword_1007F11C0;
  v7 = v5;
  if (v6 != -1)
    v7 = (id)swift_once(&qword_1007F11C0, sub_1000DE644);
  v8 = (void *)qword_1007FA9C8;
  *(_QWORD *)(v1 + 48) = qword_1007FA9C8;
  specialized Array._endMutation()(v7);
  v9 = qword_1007F11D8;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_1007F11D8, sub_1000DE6F0);
  qword_100851948 = v1;
  unk_100851950 = qword_100851940;
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100851940).n128_u64[0];
  return result;
}

id sub_1000DE9D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v14;

  v0 = sub_10000DF3C(&qword_1007F5840);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100671250;
  if (qword_1007F11A0 != -1)
    swift_once(&qword_1007F11A0, sub_1000DE504);
  v2 = (void *)qword_1007FA9A8;
  *(_QWORD *)(v1 + 32) = qword_1007FA9A8;
  v3 = qword_1007F11B0;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once(&qword_1007F11B0, sub_1000DE554);
  v5 = (void *)qword_1007FA9B8;
  *(_QWORD *)(v1 + 40) = qword_1007FA9B8;
  specialized Array._endMutation()(v4);
  v6 = v1;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100671250;
  v8 = (void *)qword_1007FA9A8;
  *(_QWORD *)(v7 + 32) = qword_1007FA9A8;
  v9 = qword_1007F11B8;
  v10 = v5;
  v11 = v8;
  if (v9 != -1)
    swift_once(&qword_1007F11B8, sub_1000DE574);
  v12 = qword_1007FA9C0;
  v14 = (void *)qword_1007FA9C0;
  *(_QWORD *)(v7 + 40) = qword_1007FA9C0;
  specialized Array._endMutation()(v12);
  qword_100851958 = v6;
  unk_100851960 = v7;
  return v14;
}

void sub_1000DEB34()
{
  off_1007FA9E0 = &off_100720F78;
}

void sub_1000DEB48()
{
  qword_1007FA9E8 = (uint64_t)&off_100720FD8;
}

char *sub_1000DEB5C(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double left;
  double bottom;
  double right;
  char *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  double v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  objc_super v48;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView;
  v6 = objc_allocWithZone((Class)UIVisualEffectView);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  v8 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientType] = kCAGradientLayerAxial;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientStartY] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientEndY] = 0x3FF0000000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_rotationAngle] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = 0;
  v9 = &v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style];
  v10 = qword_1007F11D8;
  v11 = kCAGradientLayerAxial;
  if (v10 != -1)
    swift_once(&qword_1007F11D8, sub_1000DE6F0);
  v12 = qword_100851938;
  v13 = qword_100851940;
  *(_QWORD *)v9 = qword_100851938;
  *((_QWORD *)v9 + 1) = v13;
  v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_includeTopGradientFade] = 1;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);

  v48.receiver = v7;
  v48.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v48, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = (char *)v14;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v18, "setClipsToBounds:", 0);
  v19 = objc_msgSend(v18, "layer");
  objc_msgSend(v19, "setAllowsGroupBlending:", 1);

  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  v20 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView;
  v21 = *(void **)&v18[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView];
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v21, "setClipsToBounds:", 0);
  v22 = objc_msgSend(v21, "layer");
  objc_msgSend(v22, "setAllowsGroupBlending:", 0);

  v23 = *(void **)&v18[v20];
  objc_msgSend(v23, "setUserInteractionEnabled:", 0);
  objc_msgSend(v18, "addSubview:", v23);
  v24 = *(void **)&v18[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView];
  if (v18[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_includeTopGradientFade] == 1)
    objc_msgSend(v18, "insertSubview:aboveSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView], v23);
  else
    objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView], "removeFromSuperview");
  v25 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView;
  v26 = v24;
  v27 = sub_1000DE444(a1);
  sub_10003B2E4((uint64_t)v27);

  v28 = *(char **)&v18[v25];
  v29 = *(_QWORD *)(a1 + 16);
  if (v29)
  {
    v30 = v28;
    specialized ContiguousArray.reserveCapacity(_:)(v29);
    v31 = (void *)objc_opt_self(UIColor);
    v32 = 32;
    do
    {
      v33 = *(double *)(a1 + v32);
      v34 = objc_msgSend(v31, "blackColor");
      v35 = objc_msgSend(v34, "colorWithAlphaComponent:", v33);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      v37 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
      v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
      specialized ContiguousArray._endMutation()(v38);
      v32 += 16;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v39 = v28;
    swift_bridgeObjectRelease(a1);
  }
  v40 = *(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  *(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v40);
  sub_10003B47C();

  v41 = objc_msgSend(*(id *)&v18[v25], "layer");
  v42 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v41, v42, 0, 0, 0), "setMasksToBounds:", 0);

  v43 = objc_msgSend(*(id *)&v18[v25], "layer");
  v44 = objc_opt_self(CAGradientLayer);
  v45 = (void *)swift_dynamicCastObjCClassUnconditional(v43, v44, 0, 0, 0);
  v46 = kCAFilterDestOut;
  objc_msgSend(v45, "setCompositingFilter:", v46);

  return v18;
}

void sub_1000DF064()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = *(char **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView);
  v3 = objc_msgSend(v2, "layer");
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientType;
  v7 = *(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientType);
  objc_msgSend(v5, "setType:", v7);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v1 + v6));
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAGradientLayerRadial);
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    v14 = v12;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v14);
    if ((v15 & 1) == 0)
    {
      if (qword_1007F11F0 != -1)
        swift_once(&qword_1007F11F0, sub_1000DEB34);
      v16 = (uint64_t *)&off_1007FA9E0;
      goto LABEL_13;
    }
  }
  if (qword_1007F11F8 != -1)
    swift_once(&qword_1007F11F8, sub_1000DEB48);
  v16 = &qword_1007FA9E8;
LABEL_13:
  v17 = *v16;
  swift_bridgeObjectRetain(*v16);
  v19 = sub_1000DE444(v18);
  sub_10003B2E4((uint64_t)v19);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v30 = v1;
    specialized ContiguousArray.reserveCapacity(_:)(v20);
    v21 = (void *)objc_opt_self(UIColor);
    v22 = 32;
    do
    {
      v23 = *(double *)(v17 + v22);
      v24 = objc_msgSend(v21, "blackColor", v30);
      v25 = objc_msgSend(v24, "colorWithAlphaComponent:", v23);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v27 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v27);
      v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v27, v25);
      specialized ContiguousArray._endMutation()(v28);
      v22 += 16;
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease(v17);
  v29 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v29);
  sub_10003B47C();
  sub_1000DF328();
}

void sub_1000DF328()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  char v17;
  double v18;
  id v19;
  uint64_t v20;
  id v21;
  char v22;
  double v23;
  uint64_t v24;
  double v25;
  CGPoint v26;
  CGPoint v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  CGAffineTransform v34;
  CGPoint v35;
  CGPoint v36;

  v1 = v0;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientType]);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAGradientLayerRadial);
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    v8 = v6;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v8);
    if ((v9 & 1) == 0)
    {
      v10 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_rotationAngle];
      v11 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientStartY];
      v12 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientEndY];
      v13 = 0.5;
      if (v10 == 0.0)
      {
        v14 = 0.5;
      }
      else
      {
        v25 = (v11 + v12) * 0.5;
        CGAffineTransformMakeRotation(&v34, *(CGFloat *)&v1[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_rotationAngle]);
        v35.x = 0.0;
        v35.y = v11 - v25;
        v26 = CGPointApplyAffineTransform(v35, &v34);
        v13 = v26.x + 0.5;
        v11 = v25 + v26.y;
        CGAffineTransformMakeRotation(&v34, v10);
        v36.x = 0.0;
        v36.y = v12 - v25;
        v27 = CGPointApplyAffineTransform(v36, &v34);
        v14 = v27.x + 0.5;
        v12 = v25 + v27.y;
      }
      v28 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView];
      v29 = objc_msgSend(v28, "layer");
      v30 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v29, v30, 0, 0, 0), "setStartPoint:", v13, v11);

      v31 = objc_msgSend(v28, "layer");
      v32 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v31, v32, 0, 0, 0), "setEndPoint:", v14, v12);

      return;
    }
  }
  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView];
  v16 = objc_msgSend(v1, "traitCollection");
  v17 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v17 & 1) != 0)
    v18 = 0.7;
  else
    v18 = 0.3;
  v19 = objc_msgSend(v15, "layer");
  v20 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v19, v20, 0, 0, 0), "setStartPoint:", v18, 1.0);

  v21 = objc_msgSend(v1, "traitCollection");
  v22 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v22 & 1) != 0)
    v23 = 0.0;
  else
    v23 = 1.0;
  v33 = objc_msgSend(v15, "layer");
  v24 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v33, v24, 0, 0, 0), "setEndPoint:", v23, 0.0);

}

id sub_1000DF6A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView);
  v2 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle) == 2)
    v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style + 8);
  else
    v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style);
  v4 = *v3;
  swift_bridgeObjectRetain(*v3);
  sub_100019574(0, (unint64_t *)&qword_1007FE0B0, UIVisualEffect_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  return objc_msgSend(v1, "setOverrideUserInterfaceStyle:", *(_QWORD *)(v0 + v2));
}

void sub_1000DF764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  Class isa;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style);
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style + 8);
  v5 = *v6;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style) = a1;
  *v6 = a2;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  v8 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView);
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle) == 2)
    v9 = v6;
  else
    v9 = v3;
  v10 = *v9;
  swift_bridgeObjectRetain(*v9);
  sub_100019574(0, (unint64_t *)&qword_1007FE0B0, UIVisualEffect_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

}

void sub_1000DF840(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v6, "layoutSubviews");
  v3 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v3, "setFrame:");
  v4 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView];
  v5 = objc_msgSend(v4, "superview");

  if (v5)
  {
    objc_msgSend(v2, "bounds");
    objc_msgSend(v4, "setFrame:");
  }
}

id sub_1000DF97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v7 = type metadata accessor for TodayCard.Style(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  sub_1000DF764(a2, a3);
  TodayCard.style.getter(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for TodayCard.Style.white(_:), v7);
  v15 = sub_1000DFEBC();
  dispatch thunk of RawRepresentable.rawValue.getter(&v25, v7, v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v23, v7, v15);
  v16 = v26;
  v17 = v24;
  if (v25 == v23 && v26 == v24)
  {
    v18 = swift_bridgeObjectRelease_n(v26, 2);
    v19 = 1;
  }
  else
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v23, v24, 0);
    swift_bridgeObjectRelease(v16);
    v18 = swift_bridgeObjectRelease(v17);
    if ((v20 & 1) != 0)
      v19 = 1;
    else
      v19 = 2;
  }
  v21 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
  v21(v10, v7, v18);
  ((void (*)(char *, uint64_t))v21)(v13, v7);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = v19;
  sub_1000DF6A8();
  return objc_msgSend(v4, "setNeedsLayout");
}

uint64_t type metadata accessor for TodayCardProtectionLayerView()
{
  return objc_opt_self(_TtC22SubscribePageExtension28TodayCardProtectionLayerView);
}

uint64_t *sub_1000DFBE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for TodayCardProtectionLayerViewStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for TodayCardProtectionLayerViewStyle(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchLandingPageGridProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchLandingPageGridProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayCardProtectionLayerViewStyle()
{
  return &type metadata for TodayCardProtectionLayerViewStyle;
}

id sub_1000DFD40(uint64_t a1)
{
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;

  v2 = sub_100019574(0, (unint64_t *)&qword_1007FAA60, UIColorEffect_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "effectCompositingColor:withMode:alpha:", a1, 0, 0.4);
  if (result)
  {
    v4 = result;
    v5 = sub_10000DF3C(&qword_1007F5840);
    v6 = swift_allocObject(v5, 56, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1006710E0;
    if (qword_1007F11C8 != -1)
      swift_once(&qword_1007F11C8, sub_1000DE664);
    v7 = (void *)qword_1007FA9D0;
    *(_QWORD *)(v6 + 32) = qword_1007FA9D0;
    *(_QWORD *)(v6 + 40) = v4;
    v8 = qword_1007F11D0;
    v9 = v7;
    v10 = v4;
    v11 = v10;
    if (v8 != -1)
      v10 = (id)swift_once(&qword_1007F11D0, sub_1000DE6D0);
    v12 = (void *)qword_1007FA9D8;
    *(_QWORD *)(v6 + 48) = qword_1007FA9D8;
    specialized Array._endMutation()(v10);
    v13 = swift_allocObject(v5, 56, 7);
    *(_OWORD *)(v13 + 16) = xmmword_1006710E0;
    v14 = (void *)qword_1007FA9D0;
    *(_QWORD *)(v13 + 32) = qword_1007FA9D0;
    *(_QWORD *)(v13 + 40) = v11;
    *(_QWORD *)(v13 + 48) = v12;
    specialized Array._endMutation()(v13);
    v15 = v12;
    v16 = v14;
    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000DFEBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008103A0;
  if (!qword_1008103A0)
  {
    v1 = type metadata accessor for TodayCard.Style(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCard.Style, v1);
    atomic_store(result, (unint64_t *)&qword_1008103A0);
  }
  return result;
}

void sub_1000DFF04()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_effectsView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientMaskView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientType] = kCAGradientLayerAxial;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientStartY] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientEndY] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_rotationAngle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = 0;
  v3 = OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style;
  v4 = qword_1007F11D8;
  v5 = kCAGradientLayerAxial;
  if (v4 != -1)
    swift_once(&qword_1007F11D8, sub_1000DE6F0);
  v6 = &v0[v3];
  v7 = qword_100851938;
  v8 = qword_100851940;
  *v6 = qword_100851938;
  v6[1] = v8;
  v0[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_includeTopGradientFade] = 1;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/TodayCardProtectionLayerView.swift", 57, 2, 200, 0);
  __break(1u);
}

uint64_t type metadata accessor for SearchResultsPageLayoutSectionProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FAA68;
  if (!qword_1007FAA68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsPageLayoutSectionProvider);
  return result;
}

uint64_t sub_1000E0094(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_100851968);
}

uint64_t sub_1000E00D0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _BYTE v11[40];
  _QWORD v12[5];

  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_100011020((uint64_t)a1, (uint64_t)v12);
  sub_100011020((uint64_t)v12, (uint64_t)v11);
  v9 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v11, a2, a3, a4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  return v9;
}

id sub_1000E0168(uint64_t a1, uint64_t (*a2)(__n128), uint64_t a3, void *a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t KeyPath;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  void (*v36)(_QWORD, _QWORD, __n128);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t (*)(), uint64_t *, void *, _QWORD *, uint64_t, uint64_t, uint64_t, __n128, uint64_t, uint64_t);
  __n128 v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t);
  char *v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  void (*v67)(_QWORD, _QWORD, __n128);
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;

  v79 = a6;
  v71 = a7;
  v78 = a5;
  v76 = a8;
  v77 = a10;
  v74 = a4;
  v75 = a9;
  v12 = type metadata accessor for ItemLayoutContext(0);
  v66 = *(uint64_t **)(v12 - 8);
  v67 = (void (*)(_QWORD, _QWORD, __n128))v12;
  __chkstk_darwin(v12);
  v65 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Shelf.ContentType(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v69 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - v18;
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v68 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v64 - v25;
  v27 = a2(v24);
  ShelfLayoutContext.shelf.getter(v28);
  KeyPath = swift_getKeyPath(&unk_1006757A0);
  ReadOnlyLens.subscript.getter(KeyPath, v20);
  v30 = swift_release(KeyPath);
  v31 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
  v31(v26, v20, v30);
  v72 = v15;
  v73 = v14;
  v32 = *(uint64_t (**)(char *, uint64_t))(v15 + 88);
  v70 = v19;
  v33 = v32(v19, v14);
  if ((_DWORD)v33 != enum case for Shelf.ContentType.searchResult(_:))
    goto LABEL_5;
  if (!*(_QWORD *)(v27 + 16))
    goto LABEL_5;
  v34 = v65;
  v35 = v66;
  v36 = v67;
  ((void (*)(char *, unint64_t, void (*)(_QWORD, _QWORD, __n128)))v66[2])(v65, v27 + ((*((unsigned __int8 *)v66 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v66 + 80)), v67);
  v37 = type metadata accessor for AdvertsSearchResult(0);
  v38 = sub_10000E99C((unint64_t *)&unk_10080C0A0, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v80, v37, v37, v38);
  ((void (*)(char *, void (*)(_QWORD, _QWORD, __n128)))v35[1])(v34, v36);
  v33 = v80;
  if (v80)
  {
    swift_release(v80);
    v39 = v77;
    v41 = v78;
    v40 = v79;
    v42 = v71;
    v43 = (id)sub_1000E0638(a1, v27, v74, v78, v79, v71, v76, v75, v77);
    v44 = swift_bridgeObjectRelease(v27);
    BasePageLayoutSectionProvider.addSupplementariesAndInsets(to:for:shelfLayoutSpacingProvider:shelfSupplementaryProvider:asPartOf:)(v43, a1, v41, v40, v42, v39, v44);
    v45 = v72;
    v46 = v73;
  }
  else
  {
LABEL_5:
    v66 = &v64;
    __chkstk_darwin(v33);
    v48 = __chkstk_darwin(v47);
    v49 = type metadata accessor for BasePageLayoutSectionProvider(0, v48);
    v50 = method lookup function for BasePageLayoutSectionProvider(v49, &method descriptor for BasePageLayoutSectionProvider.layoutSection(for:with:in:shelfLayoutSpacingProvider:shelfSupplementaryProvider:itemSupplementaryProvider:asPartOf:));
    v67 = (void (*)(_QWORD, _QWORD, __n128))v31;
    v51 = (uint64_t (*)(uint64_t, uint64_t (*)(), uint64_t *, void *, _QWORD *, uint64_t, uint64_t, uint64_t, __n128, uint64_t, uint64_t))v50;
    v52 = swift_bridgeObjectRetain(v27);
    v53 = v71;
    v43 = (id)v51(a1, sub_100030368, &v64 - 4, v74, v78, v79, v71, v76, v52, v75, v77);
    v54 = v32;
    v55 = v68;
    ShelfLayoutContext.shelf.getter(v56);
    v57 = swift_getKeyPath(&unk_1006757A0);
    v58 = v69;
    ReadOnlyLens.subscript.getter(v57, v20);
    v59 = swift_release(v57);
    v67(v55, v20, v59);
    v60 = v58;
    v46 = v73;
    v61 = v54(v60, v73);
    if (v61 == enum case for Shelf.ContentType.ribbonBar(_:))
    {

      swift_bridgeObjectRetain(v27);
      v62 = sub_10034F7BC(a1, v27, (uint64_t)v74, v78, v79, v53, v76, v75, v77);
      swift_bridgeObjectRelease_n(v27, 3);

      v43 = (id)v62;
      v45 = v72;
    }
    else
    {
      v45 = v72;
      if (v61 == enum case for Shelf.ContentType.smallContactCard(_:))
      {
        objc_msgSend(v43, "setOrthogonalScrollingBehavior:", 2);
        swift_bridgeObjectRelease_n(v27, 2);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v45 + 8))(v69, v46);
        swift_bridgeObjectRelease_n(v27, 2);
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v45 + 8))(v70, v46);
  return v43;
}

uint64_t sub_1000E0638(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t (*)(), uint64_t *, id, _QWORD *, uint64_t, uint64_t, _QWORD, __n128, uint64_t, uint64_t);
  __n128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  char *v43;
  __n128 v44;
  uint64_t KeyPath;
  char *v46;
  uint64_t v47;
  __n128 v48;
  id v49;
  void (**v50)(char *, id);
  int v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  double v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  uint64_t ObjectType;
  id v70;
  uint64_t v71;
  Class isa;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Class v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  id v95;
  void *v96;
  id v97;
  double v98;
  double v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  Class v116;
  double v117;
  id v118;
  void *v119;
  uint64_t v120;
  double v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  id v136;
  char *v137;
  id v138;
  id v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  _QWORD v145[2];

  *(_QWORD *)&v143 = a7;
  v144 = a8;
  v140 = a3;
  v141 = a5;
  v13 = (_QWORD *)type metadata accessor for Shelf.ContentType(0);
  v138 = (id)*(v13 - 1);
  v139 = v13;
  __chkstk_darwin(v13);
  v137 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v16 = *(void **)(v15 - 8);
  v135 = v15;
  v136 = v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = (_QWORD *)type metadata accessor for PageGrid(0);
  v19 = *(v132 - 1);
  __chkstk_darwin(v132);
  v131 = (uint64_t)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ItemLayoutContext(0);
  v22 = *(_QWORD *)(v21 - 8);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a2 + 16);
  v133 = a9;
  if (v27)
  {
    v129 = v27;
    v134 = (uint64_t *)a1;
    v128 = v19;
    v28 = a2;
    v29 = a2 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16))(v26, v29, v21, v24);
    v30 = type metadata accessor for AdvertsSearchResult(0);
    v31 = sub_10000E99C((unint64_t *)&unk_10080C0A0, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
    v32 = ItemLayoutContext.typedModel<A>(as:)(v145, v30, v30, v31);
    v33 = v145[0];
    if (!v145[0])
    {
      v23 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v26, v21);
      goto LABEL_6;
    }
    v130 = v26;
    if ((AdvertsSearchResult.displaysScreenshots.getter(v32) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v130, v21);
      swift_release(v33);
LABEL_6:
      a2 = v28;
      a1 = (uint64_t)v134;
      goto LABEL_7;
    }
    v135 = v29;
    v141 = v33;
    v54 = type metadata accessor for SearchResult(0);
    v55 = sub_10000E99C(&qword_1007FAAB8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
    ItemLayoutContext.typedModel<A>(as:)(v145, v54, v54, v55);
    v56 = v145[0];
    v126 = v21;
    if (v145[0])
    {
      v57 = a9;
      v58 = sub_1000D8B48();
      v60 = v28;
      v61 = v144;
      v62 = v143;
      if (v58)
      {
        v63 = v130;
        v64 = dispatch thunk of static ExactHeightProviding.height(in:asPartOf:)(v130, a9, v58, *(_QWORD *)(v59 + 16));
        swift_release(v56);
      }
      else
      {
        swift_release(v56);
        v64 = 0.0;
        v63 = v130;
      }
    }
    else
    {
      v64 = 0.0;
      v57 = a9;
      v63 = v130;
      v60 = v28;
      v61 = v144;
      v62 = v143;
    }
    v65 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v66 = objc_msgSend(v65, "fractionalWidthDimension:", 1.0);
    v138 = v65;
    v67 = objc_msgSend(v65, "absoluteDimension:", v64);
    v137 = (char *)objc_opt_self(NSCollectionLayoutSize);
    v68 = objc_msgSend(v137, "sizeWithWidthDimension:heightDimension:", v66, v67);

    ObjectType = swift_getObjectType();
    v70 = v68;
    v71 = dispatch thunk of ItemSupplementaryProvider.supplementaryItems(for:asPartOf:)(v63, v57, ObjectType, v61);
    sub_100019574(0, &qword_1007F49D0, NSCollectionLayoutSupplementaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v71);
    v73 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:supplementaryItems:", v70, isa);

    v74 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v75 = sub_10000DF3C(&qword_1007F5840);
    v76 = swift_allocObject(v75, 40, 7);
    v143 = xmmword_10066FE60;
    *(_OWORD *)(v76 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v76 + 32) = v73;
    v145[0] = v76;
    specialized Array._endMutation()(v76);
    v77 = v145[0];
    v78 = sub_100019574(0, (unint64_t *)&qword_100800DA0, NSCollectionLayoutItem_ptr);
    v139 = v73;
    v142 = v78;
    v79 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v80 = swift_bridgeObjectRelease(v77).n128_u64[0];
    v136 = v74;
    v140 = v70;
    v81 = objc_msgSend(v74, "horizontalGroupWithLayoutSize:subitems:", v70, v79, v80);

    v82 = swift_allocObject(v75, 40, 7);
    *(_OWORD *)(v82 + 16) = v143;
    *(_QWORD *)(v82 + 32) = v81;
    v145[0] = v82;
    specialized Array._endMutation()(v82);
    v83 = type metadata accessor for __ContiguousArrayStorageBase(0);
    swift_bridgeObjectRetain_n(v60, 2);
    swift_unknownObjectRetain(v60);
    *(_QWORD *)&v143 = v81;
    v84 = (_QWORD *)swift_dynamicCastClass(v60, v83);
    if (!v84)
    {
      swift_bridgeObjectRelease(v60);
      v84 = _swiftEmptyArrayStorage;
    }
    v85 = v84[2];
    swift_release(v84);
    if (v85 == v129 - 1)
    {
      v86 = (_QWORD *)swift_dynamicCastClass(v60, v83);
      v87 = v133;
      if (!v86)
      {
        swift_bridgeObjectRelease(v60);
        v86 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      v100 = (2 * v129) | 1;
      swift_bridgeObjectRelease(v60);
      v86 = sub_10052EA10(v60, v135, 1, v100);
      v87 = v133;
    }
    swift_bridgeObjectRelease(v60);
    swift_retain(v87);
    v88 = sub_1000E1258((uint64_t)v86, v87);
    v89 = swift_release(v87);
    v90 = static ComponentLayoutBuilder.verticalLayoutHorizontalSubgroups(for:withItemHeights:useEstimatedHeights:in:itemSupplementaryProvider:asPartOf:)(v86, v88, 0, v134, v62, v144, v87, v89);
    swift_bridgeObjectRelease(v88);
    swift_release(v86);
    sub_100019D3C(v90);
    v91 = v145[0];
    v144 = v145[0] >> 62;
    v127 = v22;
    if (v145[0] >> 62)
    {
      if (v145[0] < 0)
        v101 = v145[0];
      else
        v101 = v145[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v145[0], 2);
      result = _CocoaArrayWrapper.endIndex.getter(v101);
      v92 = result;
      if (result)
        goto LABEL_25;
    }
    else
    {
      v92 = *(_QWORD *)((v145[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n(v145[0], 2);
      if (v92)
      {
LABEL_25:
        if (v92 < 1)
        {
          __break(1u);
          return result;
        }
        v93 = 0;
        v94 = 0.0;
        do
        {
          if ((v91 & 0xC000000000000001) != 0)
            v95 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v93, v91);
          else
            v95 = *(id *)(v91 + 8 * v93 + 32);
          v96 = v95;
          ++v93;
          v81 = objc_msgSend(v95, "layoutSize");
          v97 = objc_msgSend(v81, "heightDimension");

          objc_msgSend(v97, "dimension");
          v99 = v98;

          v94 = v94 + v99;
        }
        while (v92 != v93);
LABEL_37:
        swift_bridgeObjectRelease_n(v91, 2);
        if (v144)
        {
          if (v91 < 0)
            v104 = v91;
          else
            v104 = v91 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v91);
          v103 = (id)_CocoaArrayWrapper.endIndex.getter(v104);
          swift_bridgeObjectRelease(v91);
        }
        else
        {
          v103 = *(id *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v105 = v127;
        v106 = v132;
        v107 = v131;
        v108 = v128;
        if (__OFSUB__(v103, 1))
        {
          __break(1u);
        }
        else
        {
          v109 = ShelfLayoutContext.contentPageGrid.getter(v102);
          v110 = PageGrid.interRowSpace.getter(v109);
          v81 = *(id *)(v108 + 8);
          ((void (*)(uint64_t, _QWORD *))v81)(v107, v106);
          v111 = v138;
          v112 = objc_msgSend(v138, "fractionalWidthDimension:", 1.0);
          v113 = objc_msgSend(v111, "absoluteDimension:", v94 + v110 * (double)(((uint64_t)v103 - 1) & ~(((uint64_t)v103 - 1) >> 63)));
          v103 = objc_msgSend(v137, "sizeWithWidthDimension:heightDimension:", v112, v113);

          v108 = v145[0];
          if (!(v145[0] >> 62))
          {
            swift_bridgeObjectRetain(v145[0]);
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v114);
            v115 = v108;
LABEL_46:
            swift_bridgeObjectRelease(v108);
            v116 = Array._bridgeToObjectiveC()().super.isa;
            *(_QWORD *)&v117 = swift_bridgeObjectRelease(v115).n128_u64[0];
            v118 = objc_msgSend(v136, "verticalGroupWithLayoutSize:subitems:", v103, v116, v117);

            v119 = (void *)objc_opt_self(NSCollectionLayoutSpacing);
            v120 = ShelfLayoutContext.contentPageGrid.getter(v119);
            v121 = PageGrid.interRowSpace.getter(v120);
            ((void (*)(uint64_t, _QWORD *))v81)(v107, v106);
            v122 = objc_msgSend(v119, "fixedSpacing:", v121);
            objc_msgSend(v118, "setInterItemSpacing:", v122);

            v123 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v118);
            swift_release(v141);

            (*(void (**)(char *, uint64_t))(v105 + 8))(v130, v126);
            return (uint64_t)v123;
          }
        }
        if (v108 < 0)
          v124 = v108;
        else
          v124 = v108 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v108);
        v115 = _bridgeCocoaArray<A>(_:)(v124, v142);
        swift_bridgeObjectRelease(v108);
        goto LABEL_46;
      }
    }
    v94 = 0.0;
    goto LABEL_37;
  }
LABEL_7:
  v134 = &v125;
  __chkstk_darwin(v23);
  v35 = __chkstk_darwin(v34);
  v36 = type metadata accessor for BasePageLayoutSectionProvider(0, v35);
  v37 = (uint64_t (*)(uint64_t, uint64_t (*)(), uint64_t *, id, _QWORD *, uint64_t, uint64_t, _QWORD, __n128, uint64_t, uint64_t))method lookup function for BasePageLayoutSectionProvider(v36, &method descriptor for BasePageLayoutSectionProvider.layoutSection(for:with:in:shelfLayoutSpacingProvider:shelfSupplementaryProvider:itemSupplementaryProvider:asPartOf:));
  v38 = swift_bridgeObjectRetain(a2);
  v39 = (uint64_t)v140;
  v40 = a4;
  v132 = a4;
  v41 = v141;
  v131 = a6;
  v42 = (id)v37(a1, sub_10006C410, &v125 - 4, v140, v40, v141, a6, v143, v38, v144, a9);
  v43 = v18;
  ShelfLayoutContext.shelf.getter(v44);
  KeyPath = swift_getKeyPath(&unk_1006757A0);
  v46 = v137;
  v47 = v135;
  ReadOnlyLens.subscript.getter(KeyPath, v135);
  v48 = swift_release(KeyPath);
  (*((void (**)(char *, uint64_t, __n128))v136 + 1))(v43, v47, v48);
  v50 = (void (**)(char *, id))v138;
  v49 = v139;
  v51 = (*((uint64_t (**)(char *, id))v138 + 11))(v46, v139);
  if (v51 == enum case for Shelf.ContentType.ribbonBar(_:))
  {

    swift_bridgeObjectRetain(a2);
    v52 = sub_10034F7BC(a1, a2, v39, v132, v41, v131, v143, v144, v133);
    swift_bridgeObjectRelease_n(a2, 2);

    return v52;
  }
  else if (v51 == enum case for Shelf.ContentType.smallContactCard(_:))
  {
    objc_msgSend(v42, "setOrthogonalScrollingBehavior:", 2);
    swift_bridgeObjectRelease(a2);

  }
  else
  {

    v50[1](v46, v49);
    swift_bridgeObjectRelease(a2);
  }
  return (uint64_t)v42;
}

uint64_t sub_1000E1228()
{
  uint64_t v0;

  v0 = BasePageLayoutSectionProvider.deinit();
  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_1000E1244()
{
  return type metadata accessor for SearchResultsPageLayoutSectionProvider(0);
}

uint64_t AppEventFormattedDatePresenter.formattedDates.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

_QWORD *sub_1000E1258(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v31;
  _QWORD *v32;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v32 = _swiftEmptyArrayStorage;
    sub_100021B7C(0, v2, 0);
    v3 = _swiftEmptyArrayStorage;
    v5 = *(_QWORD *)(type metadata accessor for ItemLayoutContext(0) - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = type metadata accessor for SearchResult(0);
    v8 = *(_QWORD *)(v5 + 72);
    v9 = sub_10000E99C(&qword_1007FAAB8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
    do
    {
      ItemLayoutContext.typedModel<A>(as:)(&v31, v7, v7, v9);
      v10 = v31;
      if (!v31)
        goto LABEL_23;
      v11 = sub_1000D8D28();
      if (v11)
      {
        v13 = v11;
      }
      else
      {
        v14 = type metadata accessor for AdvertsSearchResult(0);
        if (swift_dynamicCastClass(v10, v14))
        {
          v13 = type metadata accessor for AdvertsSearchResultContentView();
          v15 = (unint64_t *)&unk_1007FA7A8;
          v16 = (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView;
          v17 = &unk_10068970C;
        }
        else
        {
          v18 = type metadata accessor for BundleSearchResult(0);
          if (swift_dynamicCastClass(v10, v18))
          {
            v13 = type metadata accessor for BundleSearchResultContentView();
            v15 = (unint64_t *)&unk_1007FA7A0;
            v16 = (uint64_t (*)(uint64_t))type metadata accessor for BundleSearchResultContentView;
            v17 = &unk_10069D2DC;
          }
          else
          {
            v20 = type metadata accessor for AppSearchResult(0, v19);
            if (swift_dynamicCastClass(v10, v20))
            {
              v13 = type metadata accessor for AppSearchResultContentView();
              v15 = (unint64_t *)&unk_1007FA798;
              v16 = (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView;
              v17 = &unk_10068F4B0;
            }
            else
            {
              v22 = type metadata accessor for EditorialSearchResult(0, v21);
              if (swift_dynamicCastClass(v10, v22))
              {
                v13 = type metadata accessor for EditorialSearchResultContentView();
                v15 = (unint64_t *)&unk_1007FA790;
                v16 = (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView;
                v17 = &unk_10067DFB0;
              }
              else
              {
                v23 = type metadata accessor for InAppPurchaseSearchResult(0);
                if (swift_dynamicCastClass(v10, v23))
                {
                  v13 = type metadata accessor for InAppPurchaseSearchResultContentView(0);
                  v15 = (unint64_t *)&unk_1007FA788;
                  v16 = type metadata accessor for InAppPurchaseSearchResultContentView;
                  v17 = &unk_1006841B4;
                }
                else
                {
                  v24 = type metadata accessor for LockupCollectionSearchResult();
                  if (swift_dynamicCastClass(v10, v24))
                  {
                    v13 = type metadata accessor for LockupCollectionSearchResultContentView();
                    v15 = (unint64_t *)&unk_1007FA780;
                    v16 = (uint64_t (*)(uint64_t))type metadata accessor for LockupCollectionSearchResultContentView;
                    v17 = &unk_10067B840;
                  }
                  else
                  {
                    v25 = type metadata accessor for AppEventSearchResult(0);
                    if (!swift_dynamicCastClass(v10, v25))
                    {
                      swift_release(v10);
LABEL_23:
                      v26 = 0.0;
                      goto LABEL_24;
                    }
                    v13 = type metadata accessor for AppEventSearchResultContentView();
                    v15 = (unint64_t *)&unk_1007FA778;
                    v16 = (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView;
                    v17 = &unk_100670084;
                  }
                }
              }
            }
          }
        }
        v12 = sub_10000E99C(v15, v16, (uint64_t)v17);
      }
      v26 = dispatch thunk of static ExactHeightProviding.height(in:asPartOf:)(v6, a2, v13, *(_QWORD *)(v12 + 16));
      swift_release(v10);
LABEL_24:
      v32 = v3;
      v28 = v3[2];
      v27 = v3[3];
      if (v28 >= v27 >> 1)
      {
        sub_100021B7C(v27 > 1, v28 + 1, 1);
        v3 = v32;
      }
      v3[2] = v28 + 1;
      *(double *)&v3[v28 + 4] = v26;
      v6 += v8;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1000E158C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  __n128 v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];

  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1007FAAC0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ComponentSeparator.Position(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Action(0);
  v12 = sub_1000E1940(&qword_1007FAAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
  ItemLayoutContext.typedModel<A>(as:)(v43, v11, v11, v12);
  v13 = v43[0];
  if (v43[0])
  {
    v14 = type metadata accessor for SearchAdAction(0);
    v15 = sub_1000E1940((unint64_t *)&qword_1007FAAD0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchAdAction);
    ItemLayoutContext.typedModel<A>(as:)(v43, v14, v14, v15);
    v16 = v43[0];
    swift_release(v43[0]);
    v18 = Action.artwork.getter(v17);
    v19 = swift_release(v18);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, enum case for ComponentSeparator.Position.bottom(_:), v7, v19);
    if (!v18 || v16)
    {
      ComponentSeparator.init(position:leadingInset:trailingInset:)(v10, 0.0, 0.0);
      swift_release(v13);
      v34 = type metadata accessor for ComponentSeparator(0);
      v35 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
      v36 = a1;
    }
    else
    {
      v20 = a1;
      if (qword_1007F2F98 != -1)
        swift_once(&qword_1007F2F98, sub_10053EC6C);
      v21 = type metadata accessor for ActionLayout.Metrics(0);
      sub_1000117A8(v21, (uint64_t)qword_100856D70);
      ActionLayout.Metrics.artworkSize.getter();
      KeyPath = swift_getKeyPath(&unk_1006757F8);
      ItemLayoutContext.subscript.getter(v43);
      swift_release(KeyPath);
      v23 = v43[0];
      v46[0] = v43[0];
      Conditional.evaluate(with:)(v46, v4);
      v24 = swift_unknownObjectRelease(v23);
      v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v39 + 8))(v6, v4, v24);
      v26 = *(double *)&v46[1];
      ActionLayout.Metrics.artworkMargin.getter(v43, v25);
      v27 = v44;
      v28 = v45;
      sub_100011064(v43, v44);
      v29 = swift_getKeyPath(&unk_1006757F8);
      ItemLayoutContext.subscript.getter(v46);
      swift_release(v29);
      v30 = v46[0];
      v31 = v40;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v27);
      v32 = AnyDimension.value(in:rounded:)(v30, v31, v27, v28);
      v33 = swift_unknownObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v31, v42, v33);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
      ComponentSeparator.init(position:leadingInset:trailingInset:)(v10, v26 + v32, 0.0);
      swift_release(v13);
      v34 = type metadata accessor for ComponentSeparator(0);
      v35 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
      v36 = v20;
    }
    return v35(v36, 0, 1, v34);
  }
  else
  {
    v37 = type metadata accessor for ComponentSeparator(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a1, 1, 1, v37);
  }
}

uint64_t sub_1000E192C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E158C(a1);
}

uint64_t sub_1000E1940(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v4);
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1000E1984(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  id v25;
  id v26;
  double left;
  double bottom;
  double right;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  objc_super v38;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension20ProductNoRatingsView_statusLabel;
  v19 = qword_1007F23C8;
  v20 = v5;
  if (v19 != -1)
    swift_once(&qword_1007F23C8, sub_100414BCC);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_1000117A8(v21, (uint64_t)qword_100855040);
  v23 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v17, v22, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v21);
  v24 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v24(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v20[v18] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 0, 0, 1, 0, v14, 0, 0);

  v38.receiver = v20;
  v38.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v30 = (char *)v26;
  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v31 = OBJC_IVAR____TtC22SubscribePageExtension20ProductNoRatingsView_statusLabel;
  v32 = *(void **)&v30[OBJC_IVAR____TtC22SubscribePageExtension20ProductNoRatingsView_statusLabel];
  v33 = (void *)objc_opt_self(UIColor);
  v34 = v32;
  v35 = objc_msgSend(v33, "grayColor");
  objc_msgSend(v34, "setTextColor:", v35);

  v36 = *(_QWORD *)&v30[v31];
  v24(v14, enum case for DirectionalTextAlignment.leading(_:), v11);
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v14);
  objc_msgSend(v30, "addSubview:", v36);

  return v30;
}

uint64_t type metadata accessor for ProductNoRatingsView()
{
  return objc_opt_self(_TtC22SubscribePageExtension20ProductNoRatingsView);
}

double sub_1000E1D50(uint64_t a1, uint64_t a2, void *a3, __n128 a4, double a5)
{
  double v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  uint64_t v29;

  v7 = a4.n128_f64[0];
  v10 = type metadata accessor for DynamicTextAppearance(0, a4);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v29 - v16;
  v18 = type metadata accessor for LabelPlaceholder(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  DynamicTextAppearance.init()(v22);
  if (qword_1007F23C8 != -1)
    swift_once(&qword_1007F23C8, sub_100414BCC);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_1000117A8(v23, (uint64_t)qword_100855040);
  DynamicTextAppearance.withFontUseCase(_:)(v24);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v25 = LabelPlaceholder.Options.init(rawValue:)(0);
  swift_bridgeObjectRetain(a2);
  v26 = objc_msgSend(a3, "traitCollection", LabelPlaceholder.init(_:with:where:)(a1, a2, v17, v25).n128_f64[0]);
  v27 = LabelPlaceholder.measure(toFit:with:)(v26, v7, a5);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  return v27;
}

void sub_1000E1F24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC22SubscribePageExtension20ProductNoRatingsView_statusLabel;
  if (qword_1007F23C8 != -1)
    swift_once(&qword_1007F23C8, sub_100414BCC);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_100855040);
  v12 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v13 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v9] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 0, 0, 1, 0, v5, 0, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ProductNoRatingsView.swift", 49, 2, 31, 0);
  __break(1u);
}

double sub_1000E20D4(uint64_t *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1000E2128(*a1, a2, a4, a6, a7);
}

id sub_1000E20E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1000E26BC(*a1, a2, a4, a5, a6);
}

uint64_t sub_1000E20FC()
{
  return sub_10000E99C(&qword_1007FAB10, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialQuote, (uint64_t)&protocol conformance descriptor for EditorialQuote);
}

double sub_1000E2128(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, void *a5)
{
  double v6;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, uint64_t, uint64_t);
  char v35;
  char v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  int v64;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  _QWORD v77[5];
  _QWORD v78[5];
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v6 = a2.n128_f64[0];
  v69 = type metadata accessor for EditorialQuoteLayout.Metrics(0, a2);
  v68 = *(_QWORD *)(v69 - 8);
  v8 = __chkstk_darwin(v69);
  v70 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for EditorialQuoteLayout(0, v8);
  v72 = *(_QWORD *)(v73 - 8);
  v10 = __chkstk_darwin(v73);
  v71 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for LabelPlaceholderCompatibility(0, v10);
  v66 = *(_QWORD *)(v76 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v76).n128_u64[0];
  v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = CGSize.subtracting(insets:)(objc_msgSend(a5, "pageMarginInsets", v12));
  v17 = v16;
  v18 = objc_msgSend(a5, "traitCollection");
  v19 = UITraitCollection.isSizeClassCompact.getter(v18);

  v20 = 4;
  if ((v19 & 1) == 0)
    v20 = 1;
  v74 = v20;
  v67 = a1;
  v21 = EditorialQuote.text.getter();
  v23 = v22;
  v24 = sub_1000466E4();
  if (qword_1007F1A30 != -1)
    swift_once(&qword_1007F1A30, sub_1002A0910);
  v25 = type metadata accessor for FontUseCase(0);
  v26 = sub_1000117A8(v25, (uint64_t)qword_1008536A8);
  v27 = objc_msgSend(a5, "traitCollection");
  v28 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v26, v27);

  v29 = type metadata accessor for Feature(0);
  v83 = v29;
  v30 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v84 = v30;
  v31 = sub_1000117C0(v82);
  v32 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v33 = *(_QWORD *)(v29 - 8);
  v65[1] = v24;
  v34 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 104);
  v34(v31, enum case for Feature.measurement_with_labelplaceholder(_:), v29);
  v35 = isFeatureEnabled(_:)(v82);
  v75 = a5;
  v36 = v35;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v82);
  v37 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v21, v23, v28, v74, 0, 0, 0, 0, v36 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v82, v37);
  v38 = *(uint64_t (**)(char *, uint64_t))(v66 + 8);
  v39 = v38(v14, v76);
  v67 = EditorialQuote.attribution.getter(v39);
  v41 = v40;
  if (qword_1007F1A38 != -1)
    swift_once(&qword_1007F1A38, sub_1002A0934);
  v42 = sub_1000117A8(v25, (uint64_t)qword_1008536C0);
  v43 = objc_msgSend(v75, "traitCollection");
  v44 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v42, v43);

  v80 = v29;
  v81 = v30;
  v45 = sub_1000117C0(v79);
  v34(v45, v32, v29);
  v46 = isFeatureEnabled(_:)(v79);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v79);
  LOBYTE(v64) = v46 & 1;
  v47 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v67, v41, v44, v74, 0, 0, 0, 0, v64);
  LabelPlaceholderCompatibility.layoutTextView.getter(v79, v47);
  v38(v14, v76);
  if (qword_1007F1A28 != -1)
    swift_once(&qword_1007F1A28, sub_1002A0508);
  v48 = v69;
  v49 = sub_1000117A8(v69, (uint64_t)qword_100853690);
  v50 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v70, v49, v48);
  v51 = v83;
  v52 = v84;
  v53 = sub_100011064(v82, v83);
  v78[3] = v51;
  v78[4] = *(_QWORD *)(v52 + 8);
  v54 = sub_1000117C0(v78);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v54, v53, v51);
  v55 = v80;
  v56 = v81;
  v57 = sub_100011064(v79, v80);
  v77[3] = v55;
  v77[4] = *(_QWORD *)(v56 + 8);
  v58 = sub_1000117C0(v77);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v58, v57, v55);
  v59 = v71;
  EditorialQuoteLayout.init(metrics:quoteLabel:attributionLabel:)(v50, v78, v77);
  v60 = sub_10000E99C((unint64_t *)&unk_100808280, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialQuoteLayout, (uint64_t)&protocol conformance descriptor for EditorialQuoteLayout);
  v61 = v73;
  v62 = dispatch thunk of Measurable.measurements(fitting:in:)(v75, v73, v60, v15, v17);
  (*(void (**)(char *, uint64_t, double))(v72 + 8))(v59, v61, v62);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v79);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v82);
  return v6;
}

id sub_1000E26BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  __objc2_meth_list **p_base_meths;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  id v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  NSString v35;

  v6 = v5;
  v8 = objc_msgSend(v5, "contentView");
  objc_msgSend(a5, "pageMarginInsets");
  objc_msgSend(v8, "setLayoutMargins:");

  v9 = EditorialQuote.text.getter();
  v11 = v10;
  v12 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension32EditorialQuoteCollectionViewCell_quoteLabel];
  v13 = objc_msgSend(v12, "text");
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  if (!v13)
  {
LABEL_8:
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v12, (SEL)p_base_meths[437], v22);

    v21 = objc_msgSend(v5, "setNeedsLayout");
    goto LABEL_10;
  }
  v15 = v13;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v18 = v17;

  if (v16 != v9 || v18 != v11)
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v9, v11, 0);
    swift_bridgeObjectRelease(v18);
    p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
    if ((v20 & 1) != 0)
    {
      v21 = (id)swift_bridgeObjectRelease(v11);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  v21 = (id)swift_bridgeObjectRelease_n(v11, 2);
  p_base_meths = &TodayCardChinLockupListView.base_meths;
LABEL_10:
  v23 = EditorialQuote.attribution.getter(v21);
  v25 = v24;
  v26 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension32EditorialQuoteCollectionViewCell_attributionLabel];
  v27 = objc_msgSend(v26, "text");
  if (!v27)
  {
LABEL_17:
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    objc_msgSend(v26, (SEL)p_base_meths[437], v35);

    return objc_msgSend(v6, "setNeedsLayout");
  }
  v28 = v27;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v31 = v30;

  if (v29 != v23 || v31 != v25)
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v23, v25, 0);
    swift_bridgeObjectRelease(v31);
    if ((v33 & 1) != 0)
      return (id)swift_bridgeObjectRelease(v25);
    goto LABEL_17;
  }
  return (id)swift_bridgeObjectRelease_n(v25, 2);
}

id sub_1000E2920(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  Class isa;
  id v15;
  uint64_t v16;
  double MinY;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  CGRect v36;

  v31 = *v2;
  v30 = swift_isaMask;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, "collectionView", v9);
  if (result)
  {
    v13 = result;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend(v13, "layoutAttributesForItemAtIndexPath:", isa);

    if (v15)
    {
      objc_msgSend(v15, "frame");
      MinY = CGRectGetMinY(v36);
      if ((a2 & 1) != 0)
      {
        v18 = v30 & v31;
        v19 = IndexPath.section.getter(v16);
        v20 = *(_QWORD *)(v18 + 632);
        v21 = *(_OWORD *)(v18 + 600);
        v32 = *(_OWORD *)(v18 + 584);
        v33 = v21;
        v34 = *(_OWORD *)(v18 + 616);
        v35 = v20;
        v22 = type metadata accessor for BaseDiffableShelfViewController(0, (uint64_t)&v32);
        WitnessTable = swift_getWitnessTable(byte_10067F0C0, v22);
        ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v19, v22, WitnessTable);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        {

          sub_1000E391C((uint64_t)v6);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
          ShelfBasedCollectionViewController.shelfLayoutSpacingProvider.getter(&v32, v22, WitnessTable);
          v24 = *((_QWORD *)&v33 + 1);
          v25 = v34;
          sub_100011064(&v32, *((uint64_t *)&v33 + 1));
          v26 = MinY - ShelfLayoutSpacingProvider.topContentInsetValue(in:)(v11, v24, v25);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v32);
          ShelfBasedCollectionViewController.shelfLayoutSpacingProvider.getter(&v32, v22, WitnessTable);
          v27 = *((_QWORD *)&v33 + 1);
          v28 = v34;
          sub_100011064(&v32, *((uint64_t *)&v33 + 1));
          v29 = ShelfLayoutSpacingProvider.topPaddingValue(in:)(v11, v27, v28);

          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
          MinY = v26 - v29;
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v32);
        }
      }
      else
      {

      }
      return *(id *)&MinY;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000E2BE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  uint64_t v14;
  NSString *v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  double MinY;
  uint64_t v29;
  uint64_t v30;
  double v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  CGRect v38;

  v1 = *v0;
  v2 = swift_isaMask;
  v33 = type metadata accessor for ShelfLayoutContext(0);
  v3 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v32 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v32 - v10;
  result = objc_msgSend(v0, "collectionView", v9);
  if (*(double *)&result == 0.0)
  {
    __break(1u);
  }
  else
  {
    v13 = result;
    v14 = v2 & v1;
    v15 = UICollectionElementKindSectionHeader;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v17 = objc_msgSend(v13, "layoutAttributesForSupplementaryElementOfKind:atIndexPath:", v15, isa);

    v19 = IndexPath.section.getter(v18);
    v20 = *(_QWORD *)(v14 + 632);
    v21 = *(_OWORD *)(v14 + 600);
    v34 = *(_OWORD *)(v14 + 584);
    v35 = v21;
    v36 = *(_OWORD *)(v14 + 616);
    v37 = v20;
    v22 = type metadata accessor for BaseDiffableShelfViewController(0, (uint64_t)&v34);
    WitnessTable = swift_getWitnessTable(byte_10067F0C0, v22);
    ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v19, v22, WitnessTable);
    if (!v17)
    {
      v25 = (uint64_t)v11;
      goto LABEL_6;
    }
    sub_1000E395C((uint64_t)v11, (uint64_t)v7);
    v24 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v33) == 1)
    {
      sub_1000E391C((uint64_t)v11);

      v25 = (uint64_t)v7;
LABEL_6:
      sub_1000E391C(v25);
      *(double *)&result = 0.0;
      return result;
    }
    v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v32, v7, v24);
    v27 = v17;
    objc_msgSend(v27, "frame");
    MinY = CGRectGetMinY(v38);
    ShelfBasedCollectionViewController.shelfLayoutSpacingProvider.getter(&v34, v22, WitnessTable);
    v29 = *((_QWORD *)&v35 + 1);
    v30 = v36;
    sub_100011064(&v34, *((uint64_t *)&v35 + 1));
    v31 = ShelfLayoutSpacingProvider.topPaddingValue(in:)(v26, v29, v30);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v24);
    sub_1000E391C((uint64_t)v11);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v34);
    *(double *)&result = MinY - v31;
  }
  return result;
}

void sub_1000E2EB8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  Class isa;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "collectionView");
    if (v4)
    {
      v5 = v4;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "collectionView:didSelectItemAtIndexPath:", v5, isa);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000E2F58(uint64_t a1)
{
  sub_1000E2F78(a1);
}

void sub_1000E2F78(uint64_t a1)
{
  uint64_t *v1;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  double v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  id v53;
  void *v54;
  double v55;
  double v56;
  id v57;
  void *v58;
  id v59;
  double v60;
  double v61;
  id v62;
  void *v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double Height;
  id v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  __n128 v89;
  char *v90;
  char *v91;
  uint64_t v92;
  __n128 v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  __n128 v100;
  char *v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  void *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  _QWORD aBlock[5];
  uint64_t v130;
  _QWORD v131[2];
  char v132[32];
  CGRect v133;

  v115 = *v1;
  v114 = swift_isaMask;
  v123 = type metadata accessor for DispatchWorkItemFlags(0);
  v122 = *(_QWORD *)(v123 - 8);
  v3 = __chkstk_darwin(v123);
  v121 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for DispatchQoS(0, v3);
  v119 = *(_QWORD *)(v120 - 8);
  v5 = __chkstk_darwin(v120);
  v118 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for DispatchTime(0, v5);
  v113 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v112 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v117 = (char *)&v109 - v9;
  v10 = type metadata accessor for IndexPath(0);
  v126 = *(_QWORD *)(v10 - 8);
  v127 = v10;
  v11 = *(_QWORD *)(v126 + 64);
  __chkstk_darwin(v10);
  v116 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v109 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v109 - v16;
  v19 = __chkstk_darwin(v18);
  v128 = (char *)&v109 - v20;
  v21 = type metadata accessor for DiffablePageContentIdentifier(0, v19);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = v1;
  v25 = (id *)((char *)v1 + qword_100802E50);
  swift_beginAccess(v25, v132, 0, 0);
  if (*v25)
  {
    v26 = *v25;
    v131[0] = ShelfBasedPageScrollAction.shelfId.getter();
    v131[1] = v27;
    AnyHashable.init<A>(_:)(v131, &type metadata for String, &protocol witness table for String);
    DiffablePageContentIdentifier.init(_:)(aBlock);
    v28 = dispatch thunk of ModelMappedDiffableDataSource.sectionIndex(for:)(v24);
    v30 = v29;

    v31 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    if ((v30 & 1) == 0)
    {
      v111 = a1;
      v32 = ShelfBasedPageScrollAction.index.getter(v31);
      if ((v33 & 1) != 0)
      {
        v44 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
        v45 = swift_allocObject(v44, 48, 7);
        *(_OWORD *)(v45 + 16) = xmmword_10066F870;
        *(_QWORD *)(v45 + 32) = v28;
        *(_QWORD *)(v45 + 40) = 0;
        v46 = v128;
        IndexPath.init(arrayLiteral:)(v45);
        v38 = v125;
        v39 = COERCE_DOUBLE(sub_1000E2BE8());
        v48 = v47;
        v49 = v126;
        v42 = v127;
        v110 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
        v110(v14, v46, v127);
        if ((v48 & 1) == 0)
        {
          v43 = *(void (**)(char *, uint64_t))(v49 + 8);
          v43(v14, v42);
          goto LABEL_11;
        }
        v39 = COERCE_DOUBLE(sub_1000E2920((uint64_t)v14, 1));
        v51 = v52;
        v43 = *(void (**)(char *, uint64_t))(v49 + 8);
        v43(v14, v42);
      }
      else
      {
        v34 = v32;
        v35 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
        v36 = swift_allocObject(v35, 48, 7);
        *(_OWORD *)(v36 + 16) = xmmword_10066F870;
        *(_QWORD *)(v36 + 32) = v28;
        *(_QWORD *)(v36 + 40) = v34;
        v37 = (uint64_t)v128;
        IndexPath.init(arrayLiteral:)(v36);
        v38 = v125;
        v39 = COERCE_DOUBLE(sub_1000E2920(v37, 0));
        LOBYTE(v34) = v40;
        v41 = v126;
        v42 = v127;
        v110 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
        v110(v17, (char *)v37, v127);
        if ((v34 & 1) == 0)
        {
          v43 = *(void (**)(char *, uint64_t))(v41 + 8);
          v43(v17, v42);
          goto LABEL_11;
        }
        v39 = COERCE_DOUBLE(sub_1000E2BE8());
        v51 = v50;
        v43 = *(void (**)(char *, uint64_t))(v41 + 8);
        v43(v17, v42);
      }
      if ((v51 & 1) != 0)
      {
LABEL_23:
        v43(v128, v42);
        return;
      }
LABEL_11:
      v53 = objc_msgSend(v38, "view");
      if (v53)
      {
        v54 = v53;
        objc_msgSend(v53, "safeAreaInsets");
        v56 = v55;

        v57 = objc_msgSend(v38, "collectionView");
        if (v57)
        {
          v58 = v57;
          v59 = objc_msgSend(v57, "collectionViewLayout");

          objc_msgSend(v59, "collectionViewContentSize");
          v61 = v60;

          v62 = objc_msgSend(v38, "view");
          if (v62)
          {
            v63 = v62;
            objc_msgSend(v62, "bounds");
            v65 = v64;
            v67 = v66;
            v69 = v68;
            v71 = v70;

            v133.origin.x = v65;
            v133.origin.y = v67;
            v133.size.width = v69;
            v133.size.height = v71;
            Height = CGRectGetHeight(v133);
            v73 = objc_msgSend(v38, "view");
            if (v73)
            {
              v74 = v73;
              v75 = v39 - v56;
              objc_msgSend(v73, "safeAreaInsets");
              v77 = v76;

              if (v61 - (Height - v77) >= v75)
                v78 = v75;
              else
                v78 = v61 - (Height - v77);
              v79 = objc_msgSend(v38, "collectionView");
              if (v79)
              {
                v80 = v79;
                v81 = objc_msgSend(v38, "collectionView");
                if (v81)
                {
                  v82 = v81;
                  objc_msgSend(v81, "contentOffset");
                  v84 = v83;

                  objc_msgSend(v80, "setContentOffset:animated:", 1, v84, v78);
                  v86 = ShelfBasedPageScrollAction.index.getter(v85);
                  if ((v87 & 1) == 0 && (ShelfBasedPageScrollAction.clicksOnScroll.getter(v86) & 1) != 0)
                  {
                    v88 = v114 & v115;
                    sub_1000C0EC4();
                    v115 = static OS_dispatch_queue.main.getter(v89);
                    v90 = v112;
                    static DispatchTime.now()();
                    v91 = v117;
                    + infix(_:_:)(v90, 0.3);
                    v125 = *(uint64_t **)(v113 + 8);
                    ((void (*)(char *, uint64_t))v125)(v90, v124);
                    v92 = swift_allocObject(&unk_1007283D8, 24, 7);
                    v93 = swift_unknownObjectWeakInit(v92 + 16);
                    v94 = v116;
                    ((void (*)(char *, char *, uint64_t, __n128))v110)(v116, v128, v42, v93);
                    v95 = v126;
                    v96 = *(unsigned __int8 *)(v126 + 80);
                    v97 = (v96 + 80) & ~v96;
                    v98 = swift_allocObject(&unk_100728400, v97 + v11, v96 | 7);
                    *(_QWORD *)(v98 + 16) = *(_QWORD *)(v88 + 584);
                    *(_OWORD *)(v98 + 24) = *(_OWORD *)(v88 + 592);
                    *(_QWORD *)(v98 + 40) = *(_QWORD *)(v88 + 608);
                    *(_OWORD *)(v98 + 48) = *(_OWORD *)(v88 + 616);
                    *(_QWORD *)(v98 + 64) = *(_QWORD *)(v88 + 632);
                    *(_QWORD *)(v98 + 72) = v92;
                    (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v98 + v97, v94, v42);
                    aBlock[4] = sub_1000E387C;
                    v130 = v98;
                    aBlock[0] = _NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    aBlock[2] = sub_1000BD6CC;
                    aBlock[3] = &unk_100728418;
                    v99 = _Block_copy(aBlock);
                    v100 = swift_release(v130);
                    v101 = v118;
                    static DispatchQoS.unspecified.getter(v100);
                    aBlock[0] = _swiftEmptyArrayStorage;
                    v102 = sub_100033D20();
                    v103 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
                    v104 = sub_100033D68();
                    v105 = v121;
                    v106 = v123;
                    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v103, v104, v123, v102);
                    v107 = (void *)v115;
                    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v91, v101, v105, v99);
                    _Block_release(v99);

                    (*(void (**)(char *, uint64_t))(v122 + 8))(v105, v106);
                    v108 = v101;
                    v42 = v127;
                    (*(void (**)(char *, uint64_t))(v119 + 8))(v108, v120);
                    ((void (*)(char *, uint64_t))v125)(v91, v124);
                  }
                  goto LABEL_23;
                }
LABEL_30:
                __break(1u);
                return;
              }
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_27;
    }
  }
}

uint64_t sub_1000E37E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E3808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000E387C()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_1000E2EB8(*(_QWORD *)(v0 + 72));
}

uint64_t sub_1000E3904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000E3914(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000E391C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000E395C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007FAB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000E39A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t, uint64_t);
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  id v27;
  char **v28;
  id v29;
  void *v30;
  void (*v31)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  char v34;
  id v35;
  id v36;
  id v37;
  id v38;
  NSString v39;
  uint64_t v40;
  id v41;
  char *v42;

  v1 = type metadata accessor for ArcadeState(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v5);
  v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v41 - v9;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_accountStore);
  v12 = objc_msgSend(v11, "ams_activeiTunesAccount", v8);
  v13 = objc_msgSend(v12, "ams_DSID");

  v14 = (void *)objc_opt_self(NSUserDefaults);
  v15 = objc_msgSend(v14, "standardUserDefaults");
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setObject:forKey:", v13, v16);

  v17 = (uint64_t)v10;
  Date.init()(v18);
  v19 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v21(v17, 0, 1, v19);
  sub_1000E54CC(v17);
  v23 = ArcadeSubscriptionManager.subscriptionState.getter(v22);
  v24 = ArcadeState.isSubscribed.getter(v23);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v24 & 1) == 0)
    return;
  v25 = (uint64_t)v42;
  v26 = objc_msgSend(v11, "ams_activeiTunesAccount");
  v27 = objc_msgSend(v26, "ams_DSID");

  v28 = &selRef_textAlignment;
  v29 = objc_msgSend(v14, "standardUserDefaults");
  v30 = (void *)sub_1005DC9E4();

  v41 = v27;
  if (v27)
  {
    if (v30)
    {
      sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
      v31 = v21;
      v32 = v17;
      v33 = v41;
      v34 = static NSObject.== infix(_:_:)(v33, v30);

      v17 = v32;
      v21 = v31;
      v28 = &selRef_textAlignment;
LABEL_7:

      goto LABEL_10;
    }
    v34 = 0;
  }
  else
  {
    if (v30)
    {
      v34 = 0;
      goto LABEL_7;
    }
    v34 = 1;
  }
LABEL_10:
  v35 = objc_msgSend(v14, v28[46], v41);
  sub_1005DCA00(v25);

  LODWORD(v35) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19);
  sub_100011088(v25, (uint64_t *)&unk_1007FACC0);
  v36 = v41;
  if ((_DWORD)v35 == 1 || (v34 & 1) == 0)
  {
    v37 = v41;
    v38 = objc_msgSend(v14, v28[46]);
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setObject:forKey:", v37, v39);

    Date.init()(v40);
    v21(v17, 0, 1, v19);
    sub_1000E54CC(v17);
  }

}

uint64_t sub_1000E3D90()
{
  return sub_1000E3DE8();
}

uint64_t sub_1000E3DBC()
{
  return sub_1000E3DE8();
}

uint64_t sub_1000E3DE8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_accountStore), "ams_activeiTunesAccount", v2);
  v6 = objc_msgSend(v5, "ams_DSID");

  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setObject:forKey:", v6, v8);

  Date.init()(v9);
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
  return sub_1000E54CC((uint64_t)v4);
}

void sub_1000E3F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  char v10;
  _BYTE *Strong;
  _BYTE *v12;
  _BYTE *v13;
  char v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for FamilyCircleLookupResult(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + 16;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v9 == enum case for FamilyCircleLookupResult.notInFamily(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v10 = *v7;
    swift_beginAccess(v8, v21, 0, 0);
    Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (Strong)
    {
      Strong[OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_isInFamily] = 0;

    }
    swift_beginAccess(v8, v20, 0, 0);
    v12 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v12)
    {
      v12[OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_isFamilyOrganizer] = 0;

    }
    swift_beginAccess(v8, v19, 0, 0);
    v13 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v13)
    {
      v13[OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_canCreateFamily] = v10;

    }
  }
  else if (v9 == enum case for FamilyCircleLookupResult.inFamily(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v14 = *v7;
    swift_beginAccess(v8, v21, 0, 0);
    v15 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v15)
    {
      v15[OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_isInFamily] = 1;

    }
    swift_beginAccess(v8, v20, 0, 0);
    v16 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v16)
    {
      v16[OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_isFamilyOrganizer] = v14;

    }
    swift_beginAccess(v8, v19, 0, 0);
    v17 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v17)
    {
      v17[OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_canCreateFamily] = 0;

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1000E4150(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  _QWORD v19[4];

  v3 = type metadata accessor for OSLogger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F32A8 != -1)
    swift_once(&qword_1007F32A8, sub_1005C1B48);
  v7 = sub_1000117A8(v3, (uint64_t)qword_100857208);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10000DF3C(&qword_1007FD430);
  v9 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 2 * *(_QWORD *)(v9 + 72), *(unsigned __int8 *)(v9 + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD000000000000055, 0x80000001006351E0);
  swift_getErrorValue(a1, v18, &v16);
  v11 = v16;
  v12 = v17;
  v19[3] = v17;
  v13 = sub_1000117C0(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v13, v11, v12);
  static LogMessage.safe(_:)(v19);
  sub_100011088((uint64_t)v19, &qword_1007F6E90);
  Logger.error(_:)(v10, v3, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
}

uint64_t sub_1000E4300(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v5 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - v13;
  sub_1000E5644(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007FACC0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  if (!a2)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return 0;
  }
  v15 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_accountStore);
  v16 = a2;
  v17 = objc_msgSend(v15, "ams_activeiTunesAccount");
  if (!v17
    || (v18 = v17, v19 = objc_msgSend(v17, "ams_DSID"), v18, !v19))
  {

    goto LABEL_9;
  }
  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  v20 = static NSObject.== infix(_:_:)(v16, v19);
  if ((v20 & 1) != 0)
  {
    Date.init()(v20);
    v21 = Date.timeIntervalSince(_:)(v14);

    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v11, v8);
    v22(v14, v8);
    return *(_QWORD *)&v21;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);

  return 0;
}

uint64_t sub_1000E4524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char v30;
  char v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  __n128 v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  double v43;
  char v44;
  id v45;
  id v46;
  void *v47;
  double v48;
  char v49;
  char v50;
  uint64_t v51;

  v4 = v3;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArcadeState(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100635240
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100635240, a1, a2, 0) & 1) != 0)
  {
    v16 = ArcadeSubscriptionManager.subscriptionState.getter(v13);
    v17 = ArcadeState.isSubscribed.getter(v16);
LABEL_5:
    v18 = v17;
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    *(_QWORD *)(a3 + 24) = &type metadata for Bool;
    v20 = v18 & 1;
LABEL_6:
    *(_BYTE *)a3 = v20;
    return result;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100635260
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100635260, a1, a2, 0),
        (result & 1) != 0))
  {
    v21 = ArcadeSubscriptionManager.subscriptionState.getter(v13);
    v17 = ArcadeState.isTrialAvailable.getter(v21);
    goto LABEL_5;
  }
  if (a1 == 0x696D61466E497369 && a2 == 0xEA0000000000796CLL
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0x696D61466E497369, 0xEA0000000000796CLL, a1, a2, 0),
        (result & 1) != 0))
  {
    v22 = OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_isInFamily;
    goto LABEL_15;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100635030
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100635030, a1, a2, 0),
        (result & 1) != 0))
  {
    v22 = OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_isFamilyOrganizer;
    goto LABEL_15;
  }
  if (a1 == 0x74616572436E6163 && a2 == 0xEF796C696D614665
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0x74616572436E6163, 0xEF796C696D614665, a1, a2, 0),
        (result & 1) != 0))
  {
    v22 = OBJC_IVAR____TtC22SubscribePageExtension28InAppMessagesContextProvider_canCreateFamily;
LABEL_15:
    v23 = *(unsigned __int8 *)(v4 + v22);
    if (v23 != 2)
    {
      v20 = v23 & 1;
      *(_QWORD *)(a3 + 24) = &type metadata for Bool;
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100632BA0)
    goto LABEL_16;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100632BA0, a1, a2, 0);
  if ((result & 1) != 0)
    goto LABEL_16;
  result = 0xD000000000000014;
  if (a1 == 0xD000000000000014 && a2 == 0x8000000100635280)
    goto LABEL_16;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100635280, a1, a2, 0);
  if ((result & 1) != 0)
    goto LABEL_16;
  if (a1 == 0xD00000000000001ELL && a2 == 0x80000001006352A0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x80000001006352A0, a1, a2, 0) & 1) != 0)
  {
    v24 = (void *)objc_opt_self(NSUserDefaults);
    v25 = objc_msgSend(v24, "standardUserDefaults");
    sub_1005DC884((uint64_t)v10);

    v26 = objc_msgSend(v24, "standardUserDefaults");
    v27 = sub_1005DC790();
    goto LABEL_36;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001006352C0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x80000001006352C0, a1, a2, 0) & 1) != 0)
  {
    v32 = (void *)objc_opt_self(NSUserDefaults);
    v33 = objc_msgSend(v32, "standardUserDefaults");
    sub_1005DC774((uint64_t)v10);

    v26 = objc_msgSend(v32, "standardUserDefaults");
    v27 = sub_1005DC758();
    goto LABEL_36;
  }
  if (a1 == 0xD000000000000023 && a2 == 0x80000001006352E0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x80000001006352E0, a1, a2, 0) & 1) != 0)
  {
    v34 = (void *)objc_opt_self(NSUserDefaults);
    v35 = objc_msgSend(v34, "standardUserDefaults");
    sub_1005DC9C8((uint64_t)v10);

    v26 = objc_msgSend(v34, "standardUserDefaults");
    v27 = sub_1005DC9AC();
    goto LABEL_36;
  }
  if (a1 == 0xD00000000000002BLL && a2 == 0x8000000100635310
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000002BLL, 0x8000000100635310, a1, a2, 0) & 1) != 0)
  {
    v36 = (void *)objc_opt_self(NSUserDefaults);
    v37 = objc_msgSend(v36, "standardUserDefaults");
    sub_1005DCA00((uint64_t)v10);

    v26 = objc_msgSend(v36, "standardUserDefaults");
    v27 = sub_1005DC9E4();
LABEL_36:
    v28 = (void *)v27;

    v29 = sub_1000E4300((uint64_t)v10, v28);
    v31 = v30;

    result = sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007FACC0);
    if ((v31 & 1) == 0)
    {
      *(_QWORD *)(a3 + 24) = &type metadata for Double;
      *(_QWORD *)a3 = v29;
      return result;
    }
LABEL_16:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  if (a1 == 0xD000000000000033 && a2 == 0x8000000100635340
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000033, 0x8000000100635340, a1, a2, 0) & 1) != 0)
  {
    v39 = (void *)objc_opt_self(NSUserDefaults);
    v40 = objc_msgSend(v39, "standardUserDefaults");
    sub_1005DC9C8((uint64_t)v10);

    v41 = objc_msgSend(v39, "standardUserDefaults");
    v42 = (void *)sub_1005DC9AC();

    v43 = COERCE_DOUBLE(sub_1000E4300((uint64_t)v10, v42));
    LOBYTE(v41) = v44;

    result = sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007FACC0);
    if ((v41 & 1) != 0)
      goto LABEL_16;
    v45 = objc_msgSend(v39, "standardUserDefaults");
    sub_1005DCA00((uint64_t)v10);

    v46 = objc_msgSend(v39, "standardUserDefaults");
    v47 = (void *)sub_1005DC9E4();

    v48 = COERCE_DOUBLE(sub_1000E4300((uint64_t)v10, v47));
    v50 = v49;

    result = sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007FACC0);
    if ((v50 & 1) != 0)
      goto LABEL_16;
    *(_QWORD *)(a3 + 24) = &type metadata for Double;
    *(double *)a3 = v43 - v48;
  }
  else
  {
    result = sub_1000E56D8(v38, a1, a2);
    if (result == 2)
      goto LABEL_16;
    *(_QWORD *)(a3 + 24) = &type metadata for Bool;
    *(_BYTE *)a3 = result & 1;
  }
  return result;
}

uint64_t sub_1000E4DF0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD aBlock[5];
  uint64_t v19;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_100728458, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  aBlock[4] = sub_1000E56B0;
  v19 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100728470;
  v12 = _Block_copy(aBlock);
  v13 = swift_release(v19);
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_100033D20();
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v16 = sub_100033D68();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v0, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1000E4FCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD v14[5];
  _BYTE v15[24];

  v2 = type metadata accessor for FamilyCircleLookupTask(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = FamilyCircleLookupTask.init()();
    v9 = FamilyCircleLookupTask.perform()(v8);
    v10 = swift_allocObject(&unk_100728458, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v13 = static OS_dispatch_queue.main.getter(v12);
    v14[3] = v11;
    v14[4] = &protocol witness table for OS_dispatch_queue;
    v14[0] = v13;
    Promise.then(perform:orCatchError:on:)(sub_1000E56D0, v10, sub_1000E4150, 0, v14);
    swift_release(v9);
    swift_release(v10);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  }
}

uint64_t type metadata accessor for InAppMessagesContextProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension28InAppMessagesContextProvider);
}

uint64_t sub_1000E541C()
{
  return type metadata accessor for InAppMessagesMetricsDelegate(0);
}

uint64_t type metadata accessor for InAppMessagesMetricsDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FACB0;
  if (!qword_1007FACB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppMessagesMetricsDelegate);
  return result;
}

uint64_t sub_1000E5460(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for MetricsPipeline(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000E54CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  NSString v12;
  uint64_t v14;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - v6;
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1000E5644(a1, (uint64_t)v7);
  sub_1000E5644((uint64_t)v7, (uint64_t)v4);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setObject:forKey:", isa, v12);
  swift_unknownObjectRelease(isa);

  sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007FACC0);
  return sub_100011088(a1, (uint64_t *)&unk_1007FACC0);
}

uint64_t sub_1000E5644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007FACC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E568C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000E56B0()
{
  uint64_t v0;

  sub_1000E4FCC(v0);
}

uint64_t sub_1000E56B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000E56C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000E56D0(uint64_t a1)
{
  uint64_t v1;

  sub_1000E3F2C(a1, v1);
}

uint64_t sub_1000E56D8(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v28[4];

  v4 = type metadata accessor for OSLogger(0, a1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = objc_msgSend(v8, "bundleIdentifier");

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

  }
  else
  {
    v11 = 0x8000000100635380;
  }
  v12 = objc_allocWithZone((Class)FAEligiblityEvaluationRequest);
  swift_bridgeObjectRetain(a3);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "initWithPropertyName:bundleID:", v13, v14, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v28[0] = 0;
  v16 = objc_msgSend(v15, "fetchEligibilityWithError:", v28);
  v17 = v28[0];
  if (v28[0])
  {
    v18 = qword_1007F32A8;
    v19 = v28[0];
    if (v18 != -1)
      swift_once(&qword_1007F32A8, sub_1005C1B48);
    v20 = sub_1000117A8(v4, (uint64_t)qword_100857208);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v20, v4);
    v21 = sub_10000DF3C(&qword_1007FD430);
    v22 = type metadata accessor for LogMessage(0);
    v23 = swift_allocObject(v21, ((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) | 7);
    *(_OWORD *)(v23 + 16) = xmmword_10066F870;
    LogMessage.init(stringLiteral:)(0xD000000000000053, 0x80000001006353A0);
    v28[3] = (id)sub_100019574(0, (unint64_t *)&unk_1007FACD0, NSError_ptr);
    v28[0] = v19;
    v24 = v19;
    static LogMessage.safe(_:)(v28);
    sub_100011088((uint64_t)v28, &qword_1007F6E90);
    Logger.error(_:)(v23, v4, &protocol witness table for OSLogger);

    swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {

  }
  if (v16 == (id)2)
    v25 = 1;
  else
    v25 = 2 * (v16 != (id)1);

  return v25;
}

void sub_1000E59F4()
{
  qword_100851980 = 0xC040000000000000;
  *(_QWORD *)algn_100851988 = 0;
  qword_100851990 = 0;
  qword_100851998 = 0xC034000000000000;
}

uint64_t sub_1000E5A10(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(_QWORD *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD v29[5];
  _BYTE v30[40];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[5];
  _DWORD v42[6];
  void *v43;
  void *v44;
  _QWORD v45[5];
  _BYTE v46[56];

  sub_1000194E4(a1, (uint64_t)v46, &qword_1007FAF60);
  v8 = a2[3];
  v9 = a2[4];
  v10 = sub_100011064(a2, v8);
  v45[3] = v8;
  v45[4] = *(_QWORD *)(v9 + 8);
  v11 = sub_1000117C0(v45);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v11, v10, v8);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v13 = *(_DWORD *)(v4 + v12[8]);
  v43 = &type metadata for Float;
  v44 = &protocol witness table for Float;
  v42[0] = v13;
  v14 = v4 + v12[9];
  v15 = type metadata accessor for StaticDimension(0);
  v41[3] = v15;
  v41[4] = &protocol witness table for StaticDimension;
  v16 = sub_1000117C0(v41);
  v17 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17(v16, v14, v15);
  v18 = v4 + v12[10];
  v40[3] = v15;
  v40[4] = &protocol witness table for StaticDimension;
  v19 = sub_1000117C0(v40);
  v17(v19, v18, v15);
  sub_1000194E4(a3, (uint64_t)&v34, &qword_1007FD370);
  v20 = *((_QWORD *)&v35 + 1);
  if (*((_QWORD *)&v35 + 1))
  {
    v21 = v36;
    v22 = sub_100011064(&v34, *((uint64_t *)&v35 + 1));
    *((_QWORD *)&v38 + 1) = v20;
    v39 = *(_QWORD *)(v21 + 8);
    v23 = sub_1000117C0(&v37);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v34);
  }
  else
  {
    sub_100011088((uint64_t)&v34, &qword_1007FD370);
    v37 = 0u;
    v38 = 0u;
    v39 = 0;
  }
  sub_1000194E4(a4, (uint64_t)v31, &qword_1007FD370);
  v24 = v32;
  if (v32)
  {
    v25 = v33;
    v26 = sub_100011064(v31, v32);
    *((_QWORD *)&v35 + 1) = v24;
    v36 = *(_QWORD *)(v25 + 8);
    v27 = sub_1000117C0(&v34);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v27, v26, v24);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  }
  else
  {
    sub_100011088((uint64_t)v31, &qword_1007FD370);
    v34 = 0u;
    v35 = 0u;
    v36 = 0;
  }
  sub_100011020(v4 + v12[12], (uint64_t)v31);
  sub_100011020(v4 + v12[13], (uint64_t)v30);
  v29[3] = &type metadata for Double;
  v29[4] = &protocol witness table for Double;
  v29[0] = 0x4020000000000000;
  return TitleHeaderLayout.Child.init(decorationView:contentView:decorationViewMargin:firstLineSpace:bottomSpace:trailingView:shortTrailingView:trailingViewMargin:trailingFirstLineSpace:trailingBottomSpace:)(v46, v45, v42, v41, v40, &v37, &v34, v29, v31, v30);
}

uint64_t *sub_1000E5CB0@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1000E5CC8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1000E5CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, uint64_t a11, uint64_t a12)
{
  unint64_t v12;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unsigned int *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a7;
  v32 = a3;
  v12 = a10.n128_u64[0];
  v35 = a5;
  v33 = a4;
  v36 = a12;
  v37 = a8;
  v34 = a11;
  v17 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, a10);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v22 = v21[8];
  sub_10009055C(a1, a9, type metadata accessor for TitleHeaderView.TextConfiguration);
  v23 = v31;
  sub_10009055C(a2, a9 + v21[5], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10006C29C(v32, a9 + v21[6], &qword_1007FADD8);
  *(_BYTE *)(a9 + v21[7]) = v33;
  *(_BYTE *)(a9 + v22) = v35;
  *(_BYTE *)(a9 + v21[9]) = a6;
  *(_QWORD *)(a9 + v21[14]) = v12;
  *(_QWORD *)(a9 + v21[12]) = v34;
  *(_QWORD *)(a9 + v21[13]) = v36;
  v24 = a9 + v21[11];
  v26 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v37, v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17) == 1)
  {
    sub_100011088(v23, &qword_1007FAF50);
    if (a6)
      v27 = (unsigned int *)&enum case for TitleHeaderLayout.AccessoryVerticalAlignment.firstBaseline(_:);
    else
      v27 = (unsigned int *)&enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(a9 + v21[10], *v27, v17);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    v28(v20, v23, v17);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(a9 + v21[10], v20, v17);
  }
}

char *sub_1000E5EEC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  CGFloat *v28;
  double left;
  double bottom;
  double right;
  char *v32;
  id v33;
  uint64_t (**v34)();
  uint64_t v35;
  __n128 v36;
  objc_class *v37;
  char *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  double v53;
  char *v54;
  uint64_t v55;
  NSString v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  objc_super v65;
  _OWORD v66[2];
  _OWORD v67[3];

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  __chkstk_darwin(v9);
  v62 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AutomationSemantics(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText];
  *v24 = 0;
  v24[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView] = 0;
  v25 = &v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory];
  v26 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = &v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction];
  *v27 = 0;
  v27[1] = 0;
  v28 = (CGFloat *)&v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v28 = UIEdgeInsetsZero.top;
  v28[1] = left;
  v28[2] = bottom;
  v28[3] = right;
  v4[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_allowsAccessibilityLayouts] = 1;
  type metadata accessor for DynamicTypeLabel(0);
  v32 = v4;
  *(_QWORD *)&v32[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  memset(v67, 0, 32);
  memset(v66, 0, sizeof(v66));
  static AutomationSemantics.shelf(_:id:parentId:)(0x656C746974, 0xE500000000000000, v67, v66);
  sub_100011088((uint64_t)v66, &qword_1007F6E90);
  sub_100011088((uint64_t)v67, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v23);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v33 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v32[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorLineView] = v33;
  v34 = (uint64_t (**)())&v32[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines];
  *v34 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v34[1] = 0;
  v35 = type metadata accessor for ShelfHeader.Configuration(0);
  v36.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v16, 1, 1, v35);
  sub_1005F4D04(0, 0, 0, 1, 0, (uint64_t)v16, (uint64_t)v19, v36);
  sub_100011088((uint64_t)v16, &qword_1007FAFE0);
  sub_10009055C((uint64_t)v19, (uint64_t)&v32[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style], type metadata accessor for TitleHeaderView.Style);

  v37 = (objc_class *)type metadata accessor for TitleHeaderView(0);
  v65.receiver = v32;
  v65.super_class = v37;
  v38 = (char *)objc_msgSendSuper2(&v65, "initWithFrame:", a1, a2, a3, a4);
  v39 = objc_msgSend(v38, "layer");
  objc_msgSend(v39, "setAllowsGroupOpacity:", 0);

  objc_msgSend(v38, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v38, "setEdgesInsettingLayoutMarginsFromSafeArea:", 0);
  v40 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorLineView;
  v41 = *(void **)&v38[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorLineView];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v42 = v41;
  v43 = (void *)static UIColor.defaultLine.getter();
  objc_msgSend(v42, "setBackgroundColor:", v43);

  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v38[v40]);
  v44 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel;
  v45 = *(void **)&v38[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel];
  v46 = &v38[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style];
  objc_msgSend(v45, "setTextColor:", *(_QWORD *)&v38[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style + *(int *)(v17 + 20)], swift_beginAccess(&v38[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style], v67, 0, 0).n128_f64[0]);
  v47 = *(int *)(v17 + 20);
  v48 = &v46[v47 + *(int *)(type metadata accessor for TitleHeaderView.TextConfiguration(0) + 24)];
  v49 = type metadata accessor for FontUseCase(0);
  v50 = *(_QWORD *)(v49 - 8);
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v13, v48, v49);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v13, 0, 1, v49);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);
  v51 = v45;
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v52 = objc_msgSend(*(id *)&v38[v44], "layer");
  v54 = &v46[*(int *)(v17 + 20)];
  v55 = *((_QWORD *)v54 + 2);
  if (v55)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v54 + 2));
    v56 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v53 = swift_bridgeObjectRelease(v55).n128_u64[0];
  }
  else
  {
    v56 = 0;
  }
  objc_msgSend(v52, "setCompositingFilter:", v56, v53);

  v57 = swift_unknownObjectRelease(v56);
  v58 = *(_QWORD *)&v38[v44];
  v59 = v62;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v63 + 104))(v62, enum case for DirectionalTextAlignment.leading(_:), v64, v57);
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v59);
  objc_msgSend(v38, "addSubview:", v58);

  return v38;
}

void sub_1000E6570(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  void *v7;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8);
  if (!a2)
  {
    if (!v4)
      return;
    goto LABEL_10;
  }
  if (!v4
    || (*v3 == a1 ? (v5 = v4 == a2) : (v5 = 0),
        !v5 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *v3, v4, 0) & 1) == 0))
  {
LABEL_10:
    v6 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel;
    v7 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel);
    if (v7)
    {
      objc_msgSend(v7, "removeFromSuperview");
      v7 = *(void **)(v2 + v6);
    }
    *(_QWORD *)(v2 + v6) = 0;

  }
}

void sub_1000E65F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  NSString v30;
  uint64_t v31;
  void (*v32)(void);
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  double v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  void *v46;
  void (*v47)(void);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v6 = type metadata accessor for DirectionalTextAlignment(0);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  __chkstk_darwin(v6);
  v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v52);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (id *)((char *)&v47 - v14);
  v16 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v47 - v21;
  v23 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText);
  v24 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8);
  if (v24)
  {
    if (!a2
      || (*v23 == a1 ? (v25 = v24 == a2) : (v25 = 0),
          !v25
       && (v26 = a2,
           v27 = v20,
           v28 = _stringCompareWithSmolCheck(_:_:expecting:)(*v23, *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8), a1, v26, 0), v20 = v27, (v28 & 1) == 0)))
    {
      v48 = v20;
      type metadata accessor for DynamicTypeLabel(0);
      swift_bridgeObjectRetain(v24);
      v29 = (void *)DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v29, "setNumberOfLines:", 1);
      v30 = String._bridgeToObjectiveC()();
      objc_msgSend(v29, "setText:", v30, swift_bridgeObjectRelease(v24).n128_f64[0]);

      v31 = dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);
      v32 = *(void (**)(void))((swift_isaMask & *v3) + 0x1C0);
      ((void (*)(uint64_t))v32)(v31);
      v47 = v32;
      sub_10009E894((uint64_t)v22, (uint64_t)v15, type metadata accessor for TitleHeaderView.TextConfiguration);
      v33 = v29;
      sub_10002F0D4((uint64_t)v22, type metadata accessor for TitleHeaderView.Style);
      v34 = *v15;
      sub_10002F0D4((uint64_t)v15, type metadata accessor for TitleHeaderView.TextConfiguration);
      objc_msgSend(v33, "setTextColor:", v34);

      v32();
      sub_10009E894((uint64_t)v22, (uint64_t)v15, type metadata accessor for TitleHeaderView.TextConfiguration);
      sub_10002F0D4((uint64_t)v22, type metadata accessor for TitleHeaderView.Style);
      v35 = (char *)v15 + *(int *)(v52 + 24);
      v36 = type metadata accessor for FontUseCase(0);
      v37 = *(_QWORD *)(v36 - 8);
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v10, v35, v36);
      sub_10002F0D4((uint64_t)v15, type metadata accessor for TitleHeaderView.TextConfiguration);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v10, 0, 1, v36);
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v10);
      v38 = objc_msgSend(v33, "layer");
      v47();
      sub_10009E894((uint64_t)&v18[*(int *)(v48 + 20)], (uint64_t)v12, type metadata accessor for TitleHeaderView.TextConfiguration);
      sub_10002F0D4((uint64_t)v18, type metadata accessor for TitleHeaderView.Style);
      v39 = *((_QWORD *)v12 + 2);
      swift_bridgeObjectRetain(v39);
      sub_10002F0D4((uint64_t)v12, type metadata accessor for TitleHeaderView.TextConfiguration);
      if (v39)
      {
        v41 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v40 = swift_bridgeObjectRelease(v39).n128_u64[0];
      }
      else
      {
        v41 = 0;
      }
      v43 = v50;
      v42 = v51;
      v44 = v49;
      objc_msgSend(v38, "setCompositingFilter:", v41, v40);

      v45 = swift_unknownObjectRelease(v41);
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v43 + 104))(v44, enum case for DirectionalTextAlignment.leading(_:), v42, v45);
      dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v44);
      objc_msgSend(v3, "addSubview:", v33);
      v46 = *(void **)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel);
      *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel) = v33;

    }
  }
}

void sub_1000E6A44(uint64_t a1)
{
  sub_1000E6BD8(a1, &OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork, &OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView);
}

void sub_1000E6A58(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork];
  if (v8)
  {
    v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork];
    if (a1)
    {
      v15 = a1;
      v9 = type metadata accessor for Artwork(0);
      v10 = sub_10000E99C(&qword_1007FAFA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      swift_retain_n(v8, 3);
      LOBYTE(v9) = dispatch thunk of static Equatable.== infix(_:_:)(&v16, &v15, v9, v10);
      v11 = v16;
      swift_release(v8);
      swift_release(v11);
      if ((v9 & 1) != 0)
      {
        swift_release(v8);
        return;
      }
    }
    else
    {
      swift_retain(v8);
    }
    v12 = type metadata accessor for ArtworkView(0);
    v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");
    Artwork.style.getter(v13);
    ArtworkView.style.setter(v7);
    objc_msgSend(v3, "addSubview:", v13);
    v14 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView];
    *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView] = v13;
    swift_release(v8);

  }
}

void sub_1000E6BC4(uint64_t a1)
{
  sub_1000E6BD8(a1, &OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork, &OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView);
}

void sub_1000E6BD8(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v3;
  v6 = *(_QWORD *)(v3 + *a2);
  if (a1)
  {
    v15 = a1;
    if (v6)
    {
      v14 = v6;
      v8 = type metadata accessor for Artwork(0);
      v9 = sub_10000E99C(&qword_1007FAFA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      swift_retain_n(a1, 2);
      LOBYTE(v8) = dispatch thunk of static Equatable.== infix(_:_:)(&v15, &v14, v8, v9);
      v10 = v15;
      swift_release(a1);
      swift_release(v10);
      if ((v8 & 1) != 0)
        return;
    }
  }
  else if (!v6)
  {
    return;
  }
  v11 = *a3;
  v12 = *(void **)(v5 + *a3);
  if (v12)
  {
    objc_msgSend(v12, "removeFromSuperview");
    v13 = *(void **)(v5 + v11);
  }
  else
  {
    v13 = 0;
  }
  *(_QWORD *)(v5 + v11) = 0;

}

void sub_1000E6CC8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork];
  if (v8)
  {
    v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork];
    if (a1)
    {
      v15 = a1;
      v9 = type metadata accessor for Artwork(0);
      v10 = sub_10000E99C(&qword_1007FAFA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      swift_retain_n(v8, 3);
      LOBYTE(v9) = dispatch thunk of static Equatable.== infix(_:_:)(&v16, &v15, v9, v10);
      v11 = v16;
      swift_release(v8);
      swift_release(v11);
      if ((v9 & 1) != 0)
      {
        swift_release(v8);
        return;
      }
    }
    else
    {
      swift_retain(v8);
    }
    v12 = type metadata accessor for ArtworkView(0);
    v13 = static ArtworkView.iconArtworkView.getter(v12);
    Artwork.style.getter(v13);
    ArtworkView.style.setter(v7);
    objc_msgSend(v3, "addSubview:", v13);
    v14 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView];
    *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView] = v13;
    swift_release(v8);

  }
}

id sub_1000E6E28(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  BOOL v19;
  id result;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  double v34;
  char *v35;
  uint64_t v36;
  NSString v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  void *v42;
  void *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  double v55;
  uint64_t v56;
  NSString v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  char *v63;
  void *v64;
  id v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  char *v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  double v75;
  uint64_t v76;
  NSString v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  id v82;
  char *v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  void (*v91)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  char v104[32];

  v98 = a1;
  v2 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v2 - 8);
  v96 = v2;
  v97 = v3;
  __chkstk_darwin(v2);
  v93 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007FADD8);
  __chkstk_darwin(v5);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v99 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v11);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = v1;
  v18 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style], v104, 0, 0);
  sub_10009E894((uint64_t)v18, (uint64_t)v16, type metadata accessor for TitleHeaderView.Style);
  v19 = sub_1000F00F4(v16, v98);
  result = (id)sub_10002F0D4((uint64_t)v16, type metadata accessor for TitleHeaderView.Style);
  if (!v19)
  {
    v88 = v9;
    v89 = v7;
    v21 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel];
    objc_msgSend(v21, "setTextColor:", *(_QWORD *)&v18[*((int *)v14 + 5)]);
    v22 = &v18[*((int *)v14 + 5) + (uint64_t)*(int *)(v8 + 24)];
    v23 = type metadata accessor for FontUseCase(0);
    v24 = *(_QWORD *)(v23 - 8);
    v90 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v90(v13, v22, v23);
    v91 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
    v92 = v23;
    v91(v13, 0, 1, v23);
    v94 = v13;
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);
    objc_msgSend(v21, "setMinimumScaleFactor:", *(double *)&v18[*((int *)v14 + 5) + *(int *)(v8 + 28)]);
    objc_msgSend(v21, "setAdjustsFontSizeToFitWidth:", *(double *)&v18[*((int *)v14 + 5) + *(int *)(v8 + 28)] > 0.0);
    objc_msgSend(v17, "setBackgroundColor:", *(_QWORD *)&v18[*((int *)v14 + 12)]);
    v25 = v17;
    v26 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel];
    v98 = v14;
    v27 = v8;
    v95 = v18;
    if (v26)
    {
      v28 = *(_QWORD *)v18;
      v29 = v26;
      objc_msgSend(v29, "setTextColor:", v28);
      v30 = &v18[*(int *)(v8 + 24)];
      v31 = v94;
      v32 = v92;
      v90(v94, v30, v92);
      v91(v31, 0, 1, v32);
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v31);
      v33 = objc_msgSend(v29, "layer");
      v35 = &v18[*((int *)v14 + 5)];
      v36 = *((_QWORD *)v35 + 2);
      if (v36)
      {
        swift_bridgeObjectRetain(*((_QWORD *)v35 + 2));
        v37 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v34 = swift_bridgeObjectRelease(v36).n128_u64[0];
      }
      else
      {
        v37 = 0;
      }
      v14 = v98;
      v8 = v27;
      v18 = v95;
      objc_msgSend(v33, "setCompositingFilter:", v37, v34);

      swift_unknownObjectRelease(v37);
    }
    v38 = (uint64_t)v89;
    sub_1000194E4((uint64_t)&v18[*((int *)v14 + 6)], (uint64_t)v89, &qword_1007FADD8);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v38, 1, v8);
    v40 = v97;
    if (v39 == 1)
    {
      sub_100011088(v38, &qword_1007FADD8);
      v41 = v25;
      v42 = *(void **)&v25[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel];
      if (v42)
        objc_msgSend(v42, "setHidden:", 1);
      v43 = *(void **)&v25[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel];
      v44 = v98;
      v45 = v95;
      if (v43)
        objc_msgSend(v43, "setHidden:", 1);
    }
    else
    {
      sub_10009055C(v38, (uint64_t)v99, type metadata accessor for TitleHeaderView.TextConfiguration);
      v46 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel;
      v41 = v25;
      v47 = *(void **)&v25[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel];
      v48 = v96;
      v49 = v94;
      if (v47)
        goto LABEL_44;
      type metadata accessor for DynamicTypeLabel(0);
      v58 = (void *)DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
      sub_1000F1030(v58, &OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);

      v59 = *(void **)&v25[v46];
      if (v59)
      {
        objc_msgSend(v59, "setNumberOfLines:", 1);
        v60 = *(void **)&v25[v46];
        if (v60)
        {
          objc_msgSend(v60, "setLineBreakMode:", 4);
          v61 = *(void **)&v25[v46];
          if (v61)
          {
            v102 = 0u;
            v103 = 0u;
            v100 = 0u;
            v101 = 0u;
            v62 = v61;
            v63 = v93;
            static AutomationSemantics.shelf(_:id:parentId:)(0x614C6C6961746564, 0xEB000000006C6562, &v102, &v100);
            sub_100011088((uint64_t)&v100, &qword_1007F6E90);
            sub_100011088((uint64_t)&v102, &qword_1007F6E90);
            UIView.setAutomationSemantics(_:)(v63);

            (*(void (**)(char *, uint64_t))(v40 + 8))(v63, v48);
            v47 = *(void **)&v41[v46];
            if (v47)
            {
LABEL_44:
              objc_msgSend(v47, "setTextColor:", *(_QWORD *)v99);
              v50 = *(void **)&v41[v46];
              if (v50)
              {
                v51 = v92;
                v90(v49, &v99[*(int *)(v27 + 24)], v92);
                v91(v49, 0, 1, v51);
                v52 = v50;
                dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v49);

                v53 = *(void **)&v41[v46];
                if (v53)
                {
                  v54 = objc_msgSend(v53, "layer");
                  v56 = *((_QWORD *)v99 + 2);
                  if (v56)
                  {
                    swift_bridgeObjectRetain(v56);
                    v57 = String._bridgeToObjectiveC()();
                    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v56).n128_u64[0];
                  }
                  else
                  {
                    v57 = 0;
                  }
                  v48 = v96;
                  objc_msgSend(v54, "setCompositingFilter:", v57, v55);

                  swift_unknownObjectRelease(v57);
                  v64 = *(void **)&v41[v46];
                  if (v64)
                  {
                    v65 = v64;
                    dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

                    v66 = *(void **)&v41[v46];
                    if (v66)
                      objc_msgSend(v66, "setHidden:", 0);
                  }
                }
              }
            }
          }
        }
      }
      v67 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel;
      v68 = *(void **)&v41[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel];
      if (v68)
        goto LABEL_45;
      type metadata accessor for DynamicTypeLabel(0);
      v78 = (void *)DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
      sub_1000F1030(v78, &OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel);

      v79 = *(void **)&v41[v67];
      if (v79)
      {
        objc_msgSend(v79, "setNumberOfLines:", 1);
        v80 = *(void **)&v41[v67];
        if (v80)
        {
          objc_msgSend(v80, "setLineBreakMode:", 4);
          v81 = *(void **)&v41[v67];
          if (v81)
          {
            v102 = 0u;
            v103 = 0u;
            v100 = 0u;
            v101 = 0u;
            v82 = v81;
            v83 = v93;
            static AutomationSemantics.shelf(_:id:parentId:)(0x614C6C6961746564, 0xEB000000006C6562, &v102, &v100);
            sub_100011088((uint64_t)&v100, &qword_1007F6E90);
            sub_100011088((uint64_t)&v102, &qword_1007F6E90);
            UIView.setAutomationSemantics(_:)(v83);

            (*(void (**)(char *, uint64_t))(v40 + 8))(v83, v48);
            v68 = *(void **)&v41[v67];
            if (v68)
            {
LABEL_45:
              objc_msgSend(v68, "setTextColor:", *(_QWORD *)v99);
              v69 = *(void **)&v41[v67];
              if (v69)
              {
                v70 = &v99[*(int *)(v27 + 24)];
                v71 = v92;
                v90(v49, v70, v92);
                v91(v49, 0, 1, v71);
                v72 = v69;
                dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v49);

                v73 = *(void **)&v41[v67];
                if (v73)
                {
                  v74 = objc_msgSend(v73, "layer");
                  v76 = *((_QWORD *)v99 + 2);
                  if (v76)
                  {
                    swift_bridgeObjectRetain(v76);
                    v77 = String._bridgeToObjectiveC()();
                    *(_QWORD *)&v75 = swift_bridgeObjectRelease(v76).n128_u64[0];
                  }
                  else
                  {
                    v77 = 0;
                  }
                  objc_msgSend(v74, "setCompositingFilter:", v77, v75);

                  swift_unknownObjectRelease(v77);
                  v84 = *(void **)&v41[v67];
                  if (v84)
                  {
                    v85 = v84;
                    dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

                    v86 = *(void **)&v41[v67];
                    if (v86)
                      objc_msgSend(v86, "setHidden:", 0);
                  }
                }
              }
            }
          }
        }
      }
      sub_10002F0D4((uint64_t)v99, type metadata accessor for TitleHeaderView.TextConfiguration);
      v44 = v98;
      v45 = v95;
    }
    v87 = *(void **)&v41[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorLineView];
    objc_msgSend(v87, "setHidden:", (*((_BYTE *)v45 + *((int *)v44 + 7)) & 1) == 0);
    objc_msgSend(v87, "setBackgroundColor:", *(_QWORD *)((char *)v45 + *((int *)v44 + 13)));
    return objc_msgSend(v41, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_1000E774C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10009E894(v3, a1, type metadata accessor for TitleHeaderView.Style);
}

uint64_t sub_1000E77A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_style, v9, 0, 0);
  sub_10009E894(v6, (uint64_t)v5, type metadata accessor for TitleHeaderView.Style);
  swift_beginAccess(v6, v8, 33, 0);
  sub_1000F1124(a1, v6);
  swift_endAccess(v8);
  sub_1000E6E28(v5);
  sub_10002F0D4(a1, type metadata accessor for TitleHeaderView.Style);
  return sub_10002F0D4((uint64_t)v5, type metadata accessor for TitleHeaderView.Style);
}

void sub_1000E788C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];

  v30 = a2;
  v4 = type metadata accessor for Accessory(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v8);
  v32 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v31 = (uint64_t)&v29 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  v15 = sub_10000DF3C(&qword_1007FAFB8);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v2;
  v18 = v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory;
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory, v36, 0, 0);
  v19 = (uint64_t)&v17[*(int *)(v15 + 48)];
  v33 = a1;
  sub_1000194E4(a1, (uint64_t)v17, &qword_1007FAFB0);
  sub_1000194E4(v18, v19, &qword_1007FAFB0);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v17, 1, v4) == 1)
  {
    if (v20(v19, 1, v4) == 1)
    {
      sub_100011088((uint64_t)v17, &qword_1007FAFB0);
      return;
    }
  }
  else
  {
    sub_1000194E4((uint64_t)v17, (uint64_t)v14, &qword_1007FAFB0);
    if (v20(v19, 1, v4) != 1)
    {
      sub_10009055C(v19, (uint64_t)v7, type metadata accessor for Accessory);
      sub_10043A638((uint64_t)v14, (uint64_t)v7);
      v22 = v21;
      sub_10002F0D4((uint64_t)v7, type metadata accessor for Accessory);
      sub_10002F0D4((uint64_t)v14, type metadata accessor for Accessory);
      sub_100011088((uint64_t)v17, &qword_1007FAFB0);
      if ((v22 & 1) != 0)
        return;
      goto LABEL_8;
    }
    sub_10002F0D4((uint64_t)v14, type metadata accessor for Accessory);
  }
  sub_100011088((uint64_t)v17, &qword_1007FAFB8);
LABEL_8:
  v23 = v33;
  v24 = v31;
  sub_1000194E4(v33, v31, &qword_1007FAFB0);
  swift_beginAccess(v18, v35, 33, 0);
  sub_10009E84C(v24, v18);
  swift_endAccess(v35);
  v25 = v23;
  v26 = v32;
  sub_1000194E4(v25, v32, &qword_1007FAFB0);
  if (v20(v26, 1, v4) == 1)
  {
    sub_100011088(v26, &qword_1007FAFB0);
    v27 = 0;
  }
  else
  {
    sub_100438064(v30);
    v27 = v28;
    sub_10002F0D4(v26, type metadata accessor for Accessory);
  }
  sub_1000F0D24(v27);

}

double sub_1000E7C7C(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  id v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD *, __n128);
  __n128 v38;
  uint64_t v39;
  __n128 v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  void *v51;

  v3 = v2;
  v6 = type metadata accessor for TitleHeaderView.Style(0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView);
  if (v10)
  {
    objc_msgSend(v10, "frame", v7);
    v12 = v11;
    v14 = v13;
  }
  else
  {
    v14 = 0.0;
    v12 = 0.0;
  }
  v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel);
  if (v15 && (v16 = objc_msgSend(v15, "text")) != 0)
  {
    v17 = v16;
    v50 = (int *)static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v51 = v18;

  }
  else
  {
    v50 = 0;
    v51 = 0;
  }
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v3
                                                                 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork);
  v20 = objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel), "text", swift_retain(v19).n128_f64[0]);
  if (v20)
  {
    v21 = v20;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

  }
  else
  {
    v49 = 0;
    v23 = 0;
  }
  v24 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork);
  v25 = *(void **)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);
  if (!v25)
  {
    swift_retain(*(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork));
    goto LABEL_15;
  }
  v26 = objc_msgSend(v25, "text", swift_retain(*(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork)).n128_f64[0]);
  if (!v26)
  {
LABEL_15:
    v48 = 0;
    v29 = 0;
    goto LABEL_16;
  }
  v27 = v26;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

LABEL_16:
  v30 = *(void **)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel);
  if (v30 && (v31 = objc_msgSend(v30, "text")) != 0)
  {
    v32 = v31;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  v37 = *(uint64_t (**)(_QWORD *, __n128))((char *)v3
                                                   + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines);
  v36 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabelNumberOfLines + 8);
  v38 = swift_retain(v36);
  v39 = v37(v3, v38);
  v40 = swift_release(v36);
  (*(void (**)(__n128))((swift_isaMask & *v3) + 0x1C0))(v40);
  objc_msgSend(v3, "layoutMargins");
  v41 = v51;
  v46 = sub_100430E10(v50, v51, v19, v49, v23, v24, v48, v29, a1, a2, v12, v14, v42, v43, v44, v45, v33, v35, v39,
          (uint64_t)v9,
          1,
          v3);
  swift_release(v19);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v29);
  swift_release(v24);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v41);
  sub_10002F0D4((uint64_t)v9, type metadata accessor for TitleHeaderView.Style);
  return v46;
}

void sub_1000E80A8()
{
  _QWORD *v0;
  __n128 v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  objc_class *v78;
  id v79;
  double v80;
  double v81;
  void (*v82)(void);
  unsigned int *v83;
  char *v84;
  char *v85;
  BOOL v86;
  uint64_t v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  void *v107;
  __objc2_meth_list **p_base_meths;
  id v109;
  id v110;
  void *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  _QWORD *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  id v126;
  void *v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t (*v131)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, uint64_t, uint64_t, _QWORD *);
  id v148;
  void *v149;
  id v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __n128 v155;
  char *v156;
  unint64_t v157;
  char v158;
  double v159;
  double v160;
  double v161;
  double v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  void *v168;
  id v169;
  void *v170;
  void *v171;
  id v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __n128 v177;
  char *v178;
  unint64_t v179;
  char v180;
  double v181;
  double v182;
  double v183;
  double v184;
  uint64_t v185;
  void *v186;
  id v187;
  char *v188;
  uint64_t v189;
  char *v190;
  void *v191;
  id v192;
  void *v193;
  void *v194;
  id v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  __n128 v200;
  char *v201;
  unint64_t v202;
  char v203;
  double v204;
  double v205;
  double v206;
  double v207;
  uint64_t v208;
  void *v209;
  id v210;
  void *v211;
  int v212;
  id v213;
  _QWORD *v214;
  id v215;
  void *v216;
  id v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  __n128 v222;
  char *v223;
  unint64_t v224;
  char v225;
  double v226;
  double v227;
  double v228;
  double v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  id v238;
  void *v239;
  void *v240;
  void *v241;
  void *v242;
  id v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  id v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  id v257;
  void *v258;
  char *v259;
  int v260;
  id v261;
  void *v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  _QWORD *v266;
  id v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  void (*v283)(char *, uint64_t, _QWORD *);
  char *v284;
  unint64_t v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(char *, uint64_t, _QWORD *);
  char *v299;
  unint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t v316;
  int *v317;
  char *v318;
  unint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  void (*v323)(char *, uint64_t, _QWORD *);
  char *v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  void (*v329)(char *, uint64_t, uint64_t);
  uint64_t v330;
  void *v331;
  double v332;
  void (*v333)(void);
  _QWORD *v334;
  id v335;
  char *v336;
  char *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  char *v346;
  char *v347;
  char *v348;
  char *v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  uint64_t v359;
  char *v360;
  char *v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  id v383;
  char *v384;
  uint64_t v385;
  _QWORD *v386;
  _QWORD *v387;
  int *v388;
  char *v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  int *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  void (*v402)(void);
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  __int128 v407;
  __int128 v408;
  void *v409;
  __int128 v410;
  __int128 v411;
  void *v412;
  _QWORD *v413;
  void *v414;
  void *v415;
  __int128 v416;
  __int128 v417;
  void *v418;
  objc_super v419;
  uint64_t v420;
  uint64_t v421;

  v378 = type metadata accessor for LayoutRect(0);
  v377 = *(_QWORD *)(v378 - 8);
  v1 = __chkstk_darwin(v378);
  v376 = (char *)&v347 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v371 = type metadata accessor for TitleHeaderLayout.AccessoryHorizontalAlignment(0, v1);
  v370 = *(_QWORD *)(v371 - 8);
  v3 = __chkstk_darwin(v371);
  v373 = (char *)&v347 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v368 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v3);
  v367 = *(_QWORD *)(v368 - 8);
  v5 = __chkstk_darwin(v368);
  v369 = (char *)&v347 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v375 = type metadata accessor for TitleHeaderLayout(0, v5);
  v374 = *(_QWORD *)(v375 - 8);
  v7 = __chkstk_darwin(v375);
  v372 = (char *)&v347 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v393 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v7);
  v392 = *(_QWORD *)(v393 - 8);
  __chkstk_darwin(v393);
  v366 = (char *)&v347 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v391 = (char *)&v347 - v12;
  v387 = (_QWORD *)type metadata accessor for TitleHeaderLayout.Child(0, v11);
  v396 = *(v387 - 1);
  __chkstk_darwin(v387);
  v358 = (char *)&v347 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v351 = (char *)&v347 - v15;
  __chkstk_darwin(v16);
  v406 = (char *)&v347 - v17;
  __chkstk_darwin(v18);
  v399 = (char *)&v347 - v19;
  __chkstk_darwin(v20);
  v405 = (char *)&v347 - v21;
  __chkstk_darwin(v22);
  v398 = (char *)&v347 - v23;
  __chkstk_darwin(v24);
  v389 = (char *)&v347 - v25;
  v26 = sub_10000DF3C(&qword_1007FADD8);
  v27 = __chkstk_darwin(v26);
  v382 = (uint64_t)&v347 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v386 = (_QWORD *)type metadata accessor for CharacterSet(0, v27);
  v385 = *(v386 - 1);
  __chkstk_darwin(v386);
  v384 = (char *)&v347 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v354 = type metadata accessor for FontUseCase(0);
  v353 = *(_QWORD *)(v354 - 8);
  __chkstk_darwin(v354);
  v352 = (char *)&v347 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v388 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v381 = *((_QWORD *)v388 - 1);
  __chkstk_darwin(v388);
  v390 = (uint64_t)&v347 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v379 = (uint64_t)&v347 - v33;
  __chkstk_darwin(v34);
  v350 = (uint64_t)&v347 - v35;
  __chkstk_darwin(v36);
  v356 = (uint64_t)&v347 - v37;
  v364 = sub_10000DF3C(&qword_1007FAF58);
  v363 = *(_QWORD *)(v364 - 8);
  __chkstk_darwin(v364);
  v355 = (uint64_t)&v347 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v357 = (uint64_t)&v347 - v40;
  __chkstk_darwin(v41);
  v401 = (char *)&v347 - v42;
  __chkstk_darwin(v43);
  v404 = (uint64_t)&v347 - v44;
  __chkstk_darwin(v45);
  v400 = (char *)&v347 - v46;
  __chkstk_darwin(v47);
  v403 = (uint64_t)&v347 - v48;
  __chkstk_darwin(v49);
  v347 = (char *)&v347 - v50;
  __chkstk_darwin(v51);
  v394 = (uint64_t)&v347 - v52;
  __chkstk_darwin(v53);
  v349 = (char *)&v347 - v54;
  __chkstk_darwin(v55);
  v395 = (uint64_t)&v347 - v56;
  v57 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v57);
  v365 = (char *)&v347 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v362 = (char *)&v347 - v60;
  __chkstk_darwin(v61);
  v361 = (char *)&v347 - v62;
  __chkstk_darwin(v63);
  v380 = (char *)&v347 - v64;
  __chkstk_darwin(v65);
  v348 = (char *)&v347 - v66;
  v68 = __chkstk_darwin(v67);
  v70 = (char *)&v347 - v69;
  v71 = type metadata accessor for Separator.Position(0, v68);
  v72 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v74 = (char *)&v347 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v402 = (void (*)(void))type metadata accessor for Separator(0);
  v75 = *((_QWORD *)v402 - 1);
  __chkstk_darwin(v402);
  v77 = (char *)&v347 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = (objc_class *)type metadata accessor for TitleHeaderView(0);
  v419.receiver = v0;
  v419.super_class = v78;
  v79 = objc_msgSendSuper2(&v419, "layoutSubviews");
  v383 = *(id *)((char *)v0 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorLineView);
  v80 = *(double *)((char *)v0 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset + 8);
  v81 = *(double *)((char *)v0 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset + 24);
  v82 = *(void (**)(void))((swift_isaMask & *v0) + 0x1C0);
  ((void (*)(id))v82)(v79);
  v397 = (int *)v57;
  LODWORD(v57) = v70[*(int *)(v57 + 32)];
  sub_10002F0D4((uint64_t)v70, type metadata accessor for TitleHeaderView.Style);
  v83 = (unsigned int *)&enum case for Separator.Position.bottom(_:);
  v84 = v70;
  v85 = (char *)v0;
  v86 = (_DWORD)v57 == 0;
  v87 = (uint64_t)v84;
  if (v86)
    v83 = (unsigned int *)&enum case for Separator.Position.top(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v74, *v83, v71);
  *((_QWORD *)&v417 + 1) = type metadata accessor for ZeroDimension(0);
  v418 = &protocol witness table for ZeroDimension;
  sub_1000117C0(&v416);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v74, &v416, v80, v81);
  objc_msgSend(v0, "bounds");
  v92 = Separator.frame(forBoundingRect:in:)(v0, v88, v89, v90, v91);
  v94 = v93;
  v96 = v95;
  v98 = v97;
  (*(void (**)(char *, void (*)(void)))(v75 + 8))(v77, v402);
  objc_msgSend(v383, "setFrame:", v92, v94, v96, v98);
  v99 = LayoutMarginsAware<>.layoutFrame.getter(v78);
  v101 = v100;
  v103 = v102;
  v105 = v104;
  v402 = v82;
  v82();
  v106 = sub_1000F0E5C(v87);
  sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
  v107 = *(void **)((char *)v0 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel);
  p_base_meths = &TodayCardChinLockupListView.base_meths;
  if (!v107)
    goto LABEL_15;
  v109 = v107;
  v110 = objc_msgSend(v109, "text");
  if (!v110)
    goto LABEL_14;
  v111 = v110;
  v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
  v114 = v113;

  v115 = swift_bridgeObjectRelease(v114);
  v116 = HIBYTE(v114) & 0xF;
  if ((v114 & 0x2000000000000000) == 0)
    v116 = v112 & 0xFFFFFFFFFFFFLL;
  if (!v116)
  {
LABEL_14:

LABEL_15:
    v131 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v396 + 56);
    v120 = v387;
    v132 = v131(v395, 1, 1, v387);
    v119 = v397;
    goto LABEL_34;
  }
  v117 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork;
  v118 = *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork];
  v119 = v397;
  v120 = v387;
  if (v118)
  {
    swift_retain(v118);
    v383 = v121;
    if ((dispatch thunk of Artwork.isSystemImage.getter(v121) & 1) != 0)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      v402();
      v122 = v356;
      sub_10009E894(v87, v356, type metadata accessor for TitleHeaderView.TextConfiguration);
      sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
      v123 = v353;
      v124 = v352;
      v125 = v354;
      (*(void (**)(char *, uint64_t, uint64_t))(v353 + 16))(v352, v122 + v388[6], v354);
      sub_10002F0D4(v122, type metadata accessor for TitleHeaderView.TextConfiguration);
      v126 = objc_msgSend(v85, "traitCollection");
      v127 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v124, v126);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v125);
      v128 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView];
      if (v128)
      {
        v129 = (void *)objc_opt_self(UIImageSymbolConfiguration);
        v130 = v128;
        ArtworkView.preferredSymbolConfiguration.setter(objc_msgSend(v129, "configurationWithFont:", v127));

      }
      swift_release(v383);

      v119 = v397;
    }
    else
    {
      v133 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView;
      v134 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView];
      if (v134)
      {
        v135 = *(_QWORD *)&v85[v117];
        v402();
        v136 = v356;
        sub_10009E894(v87, v356, type metadata accessor for TitleHeaderView.TextConfiguration);
        swift_retain(v135);
        v137 = v134;
        sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
        sub_1004EFDE8(v135, v136, (uint64_t)v85);
        swift_release(v135);
        v138 = sub_10002F0D4(v136, type metadata accessor for TitleHeaderView.TextConfiguration);
        ArtworkView.frame.setter(v138);

        v139 = *(void **)&v85[v133];
        if (v139)
        {
          v140 = v139;
          ArtworkView.preferredSymbolConfiguration.setter(0);

        }
      }
      v115 = swift_release(v383);
    }
  }
  v141 = (uint64_t)v348;
  ((void (*)(__n128))v402)(v115);
  v142 = v350;
  sub_10009E894(v141, v350, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4(v141, type metadata accessor for TitleHeaderView.Style);
  v143 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView];
  if (v143)
  {
    *((_QWORD *)&v417 + 1) = type metadata accessor for ArtworkView(0);
    v418 = &protocol witness table for UIView;
    *(_QWORD *)&v416 = v143;
  }
  else
  {
    v418 = 0;
    v416 = 0u;
    v417 = 0u;
  }
  v414 = (void *)type metadata accessor for DynamicTypeLabel(0);
  v415 = &protocol witness table for UILabel;
  v412 = 0;
  v413 = v109;
  v411 = 0u;
  v410 = 0u;
  v409 = 0;
  v408 = 0u;
  v407 = 0u;
  v144 = v109;
  v145 = v143;
  v146 = (uint64_t)v349;
  sub_1000E5A10((uint64_t)&v416, &v413, (uint64_t)&v410, (uint64_t)&v407);
  sub_100011088((uint64_t)&v407, &qword_1007FD370);
  sub_100011088((uint64_t)&v410, &qword_1007FD370);
  sub_10002F0D4(v142, type metadata accessor for TitleHeaderView.TextConfiguration);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v413);
  sub_100011088((uint64_t)&v416, &qword_1007FAF60);
  v147 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v396 + 56);
  v147(v146, 0, 1, v120);
  sub_10006C29C(v146, v395, &qword_1007FAF58);
  v148 = objc_msgSend(v144, "font");
  if (!v148)
    goto LABEL_160;
  v149 = v148;
  v150 = objc_msgSend(v144, "text");
  if (!v150)
  {

LABEL_32:
    v163 = 0;
    v131 = v147;
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    goto LABEL_33;
  }
  v151 = v150;
  v152 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
  v154 = v153;

  *(_QWORD *)&v416 = v152;
  *((_QWORD *)&v416 + 1) = v154;
  v155 = swift_bridgeObjectRetain(v154);
  v156 = v384;
  static CharacterSet.excessiveLeading.getter(v155);
  v157 = sub_1000C0FAC();
  StringProtocol.rangeOfCharacter(from:options:range:)(v156, 0, 0, 0, 1, &type metadata for String, v157);
  LOBYTE(v151) = v158;
  (*(void (**)(char *, _QWORD *))(v385 + 8))(v156, v386);
  *(_QWORD *)&v159 = swift_bridgeObjectRelease(*((_QWORD *)&v416 + 1)).n128_u64[0];
  if ((v151 & 1) != 0)
  {

    swift_bridgeObjectRelease(v154);
    goto LABEL_32;
  }
  objc_msgSend(v149, "lineHeight", v159);
  v161 = v160;

  swift_bridgeObjectRelease(v154);
  v162 = ceil(v161 * 1.3);
  if ((~*(_QWORD *)&v162 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_149;
  }
  if (v162 <= -9.22337204e18)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  v131 = v147;
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if (v162 >= 9.22337204e18)
  {
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  v163 = (uint64_t)v162;
LABEL_33:
  sub_10032628C(v163);

LABEL_34:
  v164 = (uint64_t)v380;
  ((void (*)(uint64_t))v402)(v132);
  v165 = v382;
  sub_1000194E4(v164 + v119[6], v382, &qword_1007FADD8);
  sub_10002F0D4(v164, type metadata accessor for TitleHeaderView.Style);
  v166 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v381 + 48))(v165, 1, v388);
  v387 = v131;
  if (v166 == 1)
  {
    sub_100011088(v165, &qword_1007FADD8);
LABEL_64:
    v131(v394, 1, 1, v120);
    goto LABEL_65;
  }
  sub_10009055C(v165, v379, type metadata accessor for TitleHeaderView.TextConfiguration);
  v167 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel;
  v168 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel];
  if (!v168)
    goto LABEL_48;
  v169 = objc_msgSend(v168, "font");
  if (!v169)
  {
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  v170 = v169;
  v171 = *(void **)&v85[v167];
  if (!v171 || (v172 = objc_msgSend(v171, (SEL)p_base_meths[462])) == 0)
  {

    v185 = 0;
    v186 = *(void **)&v85[v167];
    if (!v186)
      goto LABEL_48;
    goto LABEL_47;
  }
  v173 = v172;
  v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(v172);
  v176 = v175;

  *(_QWORD *)&v416 = v174;
  *((_QWORD *)&v416 + 1) = v176;
  v177 = swift_bridgeObjectRetain(v176);
  v178 = v384;
  static CharacterSet.excessiveLeading.getter(v177);
  v179 = sub_1000C0FAC();
  StringProtocol.rangeOfCharacter(from:options:range:)(v178, 0, 0, 0, 1, &type metadata for String, v179);
  LOBYTE(v173) = v180;
  (*(void (**)(char *, _QWORD *))(v385 + 8))(v178, v386);
  *(_QWORD *)&v181 = swift_bridgeObjectRelease(*((_QWORD *)&v416 + 1)).n128_u64[0];
  if ((v173 & 1) != 0)
  {

    swift_bridgeObjectRelease(v176);
    v185 = 0;
    v131 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v387;
    v186 = *(void **)&v85[v167];
    if (!v186)
      goto LABEL_48;
LABEL_47:
    v187 = v186;
    sub_10032628C(v185);

    goto LABEL_48;
  }
  objc_msgSend(v170, "lineHeight", v181);
  v183 = v182;

  swift_bridgeObjectRelease(v176);
  v184 = ceil(v183 * 1.3);
  v131 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v387;
  if ((~*(_QWORD *)&v184 & 0x7FF0000000000000) == 0)
    goto LABEL_151;
  if (v184 <= -9.22337204e18)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  if (v184 >= 9.22337204e18)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  v185 = (uint64_t)v184;
  v186 = *(void **)&v85[v167];
  if (v186)
    goto LABEL_47;
LABEL_48:
  v188 = v85;
  v189 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel;
  v190 = v188;
  v191 = *(void **)&v188[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel];
  if (!v191)
    goto LABEL_60;
  v192 = objc_msgSend(v191, "font");
  if (!v192)
  {
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
    return;
  }
  v193 = v192;
  v194 = *(void **)&v190[v189];
  if (!v194 || (v195 = objc_msgSend(v194, "text")) == 0)
  {

    v208 = 0;
    v209 = *(void **)&v190[v189];
    if (!v209)
      goto LABEL_60;
    goto LABEL_59;
  }
  v196 = v195;
  v197 = static String._unconditionallyBridgeFromObjectiveC(_:)(v195);
  v199 = v198;

  *(_QWORD *)&v416 = v197;
  *((_QWORD *)&v416 + 1) = v199;
  v200 = swift_bridgeObjectRetain(v199);
  v201 = v384;
  static CharacterSet.excessiveLeading.getter(v200);
  v202 = sub_1000C0FAC();
  StringProtocol.rangeOfCharacter(from:options:range:)(v201, 0, 0, 0, 1, &type metadata for String, v202);
  LOBYTE(v196) = v203;
  (*(void (**)(char *, _QWORD *))(v385 + 8))(v201, v386);
  *(_QWORD *)&v204 = swift_bridgeObjectRelease(*((_QWORD *)&v416 + 1)).n128_u64[0];
  if ((v196 & 1) == 0)
  {
    objc_msgSend(v193, "lineHeight", v204);
    v206 = v205;

    swift_bridgeObjectRelease(v199);
    v207 = ceil(v206 * 1.3);
    v131 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v387;
    if ((~*(_QWORD *)&v207 & 0x7FF0000000000000) != 0)
    {
      if (v207 > -9.22337204e18)
      {
        if (v207 < 9.22337204e18)
        {
          v208 = (uint64_t)v207;
          v209 = *(void **)&v190[v189];
          if (!v209)
            goto LABEL_60;
LABEL_59:
          v210 = v209;
          sub_10032628C(v208);

          goto LABEL_60;
        }
LABEL_156:
        __break(1u);
        goto LABEL_157;
      }
      goto LABEL_154;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }

  swift_bridgeObjectRelease(v199);
  v208 = 0;
  v131 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v387;
  v209 = *(void **)&v190[v189];
  if (v209)
    goto LABEL_59;
LABEL_60:
  v85 = v190;
  v211 = *(void **)&v190[v167];
  if (!v211)
  {
    sub_10002F0D4(v379, type metadata accessor for TitleHeaderView.TextConfiguration);
    v119 = v397;
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    goto LABEL_64;
  }
  v402();
  v119 = v397;
  v212 = *(unsigned __int8 *)(v87 + v397[9]);
  v213 = v211;
  sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if (v212 == 2)
  {
    sub_10002F0D4(v379, type metadata accessor for TitleHeaderView.TextConfiguration);

    goto LABEL_64;
  }
  v418 = 0;
  v416 = 0u;
  v417 = 0u;
  v414 = (void *)type metadata accessor for DynamicTypeLabel(0);
  v415 = &protocol witness table for UILabel;
  v412 = 0;
  v413 = v213;
  v411 = 0u;
  v410 = 0u;
  v409 = 0;
  v408 = 0u;
  v407 = 0u;
  v254 = (uint64_t)v347;
  v255 = v379;
  sub_1000E5A10((uint64_t)&v416, &v413, (uint64_t)&v410, (uint64_t)&v407);
  sub_100011088((uint64_t)&v407, &qword_1007FD370);
  sub_100011088((uint64_t)&v410, &qword_1007FD370);
  sub_100011088((uint64_t)&v416, &qword_1007FAF60);
  sub_10002F0D4(v255, type metadata accessor for TitleHeaderView.TextConfiguration);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v413);
  v131(v254, 0, 1, v120);
  sub_10006C29C(v254, v394, &qword_1007FAF58);
LABEL_65:
  v214 = *(_QWORD **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel];
  v215 = objc_msgSend(v214, "font");
  if (!v215)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  v216 = v215;
  v217 = objc_msgSend(v214, (SEL)p_base_meths[462]);
  if (v217)
  {
    v218 = v217;
    v219 = static String._unconditionallyBridgeFromObjectiveC(_:)(v217);
    v221 = v220;

    *(_QWORD *)&v416 = v219;
    *((_QWORD *)&v416 + 1) = v221;
    v222 = swift_bridgeObjectRetain(v221);
    v223 = v384;
    static CharacterSet.excessiveLeading.getter(v222);
    v224 = sub_1000C0FAC();
    StringProtocol.rangeOfCharacter(from:options:range:)(v223, 0, 0, 0, 1, &type metadata for String, v224);
    LOBYTE(v218) = v225;
    (*(void (**)(char *, _QWORD *))(v385 + 8))(v223, v386);
    *(_QWORD *)&v226 = swift_bridgeObjectRelease(*((_QWORD *)&v416 + 1)).n128_u64[0];
    if ((v218 & 1) == 0)
    {
      objc_msgSend(v216, "lineHeight", v226);
      v228 = v227;

      swift_bridgeObjectRelease(v221);
      v229 = ceil(v228 * 1.3);
      v119 = v397;
      if ((~*(_QWORD *)&v229 & 0x7FF0000000000000) != 0)
      {
        if (v229 > -9.22337204e18)
        {
          if (v229 < 9.22337204e18)
          {
            v230 = (uint64_t)v229;
            goto LABEL_74;
          }
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_146;
    }

    swift_bridgeObjectRelease(v221);
    v230 = 0;
    v119 = v397;
  }
  else
  {

    v230 = 0;
  }
LABEL_74:
  sub_10032628C(v230);
  v231 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork;
  v232 = *(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork];
  if (v232)
  {
    swift_retain(*(_QWORD *)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork]);
    if ((dispatch thunk of Artwork.isSystemImage.getter(v233) & 1) != 0)
    {
      v386 = (_QWORD *)sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      v402();
      v234 = v356;
      sub_10009E894(v87 + v119[5], v356, type metadata accessor for TitleHeaderView.TextConfiguration);
      sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
      v235 = v353;
      v236 = v352;
      v237 = v354;
      (*(void (**)(char *, uint64_t, uint64_t))(v353 + 16))(v352, v234 + v388[6], v354);
      sub_10002F0D4(v234, type metadata accessor for TitleHeaderView.TextConfiguration);
      v238 = objc_msgSend(v85, "traitCollection");
      v239 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v236, v238);

      (*(void (**)(char *, uint64_t))(v235 + 8))(v236, v237);
      v240 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView];
      if (v240)
      {
        v241 = v239;
        v242 = (void *)objc_opt_self(UIImageSymbolConfiguration);
        v243 = v240;
        ArtworkView.preferredSymbolConfiguration.setter(objc_msgSend(v242, "configurationWithFont:", v241));

        swift_release(v232);
      }
      else
      {
        swift_release(v232);

      }
      v119 = v397;
    }
    else
    {
      v244 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView;
      v245 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView];
      if (v245)
      {
        v246 = *(_QWORD *)&v85[v231];
        v402();
        v247 = v87 + v119[5];
        v248 = v356;
        sub_10009E894(v247, v356, type metadata accessor for TitleHeaderView.TextConfiguration);
        swift_retain(v246);
        v249 = v245;
        sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
        sub_1004EFDE8(v246, v248, (uint64_t)v85);
        swift_release(v246);
        v250 = v248;
        v119 = v397;
        v251 = sub_10002F0D4(v250, type metadata accessor for TitleHeaderView.TextConfiguration);
        ArtworkView.frame.setter(v251);

        v252 = *(void **)&v85[v244];
        if (v252)
        {
          v253 = v252;
          ArtworkView.preferredSymbolConfiguration.setter(0);

        }
      }
      swift_release(v232);
    }
  }
  v402();
  v256 = *(unsigned __int8 *)(v87 + v119[9]);
  v257 = (id)sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
  if (v256 == 2)
  {
    v258 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel];
    v257 = v258;
  }
  else
  {
    v258 = 0;
  }
  v259 = v389;
  ((void (*)(id))v402)(v257);
  v260 = *(unsigned __int8 *)(v87 + v119[9]);
  v261 = (id)sub_10002F0D4(v87, type metadata accessor for TitleHeaderView.Style);
  if (v260 == 2)
  {
    v262 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel];
    v261 = v262;
  }
  else
  {
    v262 = 0;
  }
  v263 = (uint64_t)v361;
  ((void (*)(id))v402)(v261);
  sub_10009E894(v263 + v119[5], v390, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4(v263, type metadata accessor for TitleHeaderView.Style);
  v264 = *(void **)&v85[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView];
  if (v264)
  {
    *((_QWORD *)&v417 + 1) = type metadata accessor for ArtworkView(0);
    v418 = &protocol witness table for UIView;
    *(_QWORD *)&v416 = v264;
  }
  else
  {
    v418 = 0;
    v416 = 0u;
    v417 = 0u;
  }
  v265 = type metadata accessor for DynamicTypeLabel(0);
  v414 = (void *)v265;
  v415 = &protocol witness table for UILabel;
  v413 = v214;
  if (v258)
  {
    v412 = &protocol witness table for UILabel;
    *((_QWORD *)&v411 + 1) = v265;
    *(_QWORD *)&v410 = v258;
    if (v262)
    {
LABEL_96:
      v409 = &protocol witness table for UILabel;
      *((_QWORD *)&v408 + 1) = v265;
      *(_QWORD *)&v407 = v262;
      goto LABEL_99;
    }
  }
  else
  {
    v412 = 0;
    v411 = 0u;
    v410 = 0u;
    if (v262)
      goto LABEL_96;
  }
  v409 = 0;
  v408 = 0u;
  v407 = 0u;
LABEL_99:
  v388 = v258;
  v386 = v262;
  v266 = v214;
  v267 = v264;
  v268 = v390;
  sub_1000E5A10((uint64_t)&v416, &v413, (uint64_t)&v410, (uint64_t)&v407);
  sub_10002F0D4(v268, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100011088((uint64_t)&v407, &qword_1007FD370);
  sub_100011088((uint64_t)&v410, &qword_1007FD370);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v413);
  v269 = sub_100011088((uint64_t)&v416, &qword_1007FAF60);
  v270 = (uint64_t)v362;
  ((void (*)(uint64_t))v402)(v269);
  v271 = *(unsigned __int8 *)(v270 + v119[9]);
  sub_10002F0D4(v270, type metadata accessor for TitleHeaderView.Style);
  v360 = v85;
  v359 = v87;
  if (!v271)
  {
    v287 = sub_10000DF3C(&qword_1007FAF68);
    v288 = *(_QWORD *)(v363 + 72);
    v289 = *(unsigned __int8 *)(v363 + 80);
    v290 = (v289 + 32) & ~v289;
    v291 = swift_allocObject(v287, v290 + 3 * v288, v289 | 7);
    *(_OWORD *)(v291 + 16) = xmmword_10066F860;
    v406 = (char *)v291;
    v292 = v291 + v290;
    sub_1000194E4(v395, v291 + v290, &qword_1007FAF58);
    sub_1000194E4(v394, v292 + v288, &qword_1007FAF58);
    v293 = v396;
    (*(void (**)(uint64_t, char *, _QWORD *))(v396 + 16))(v292 + 2 * v288, v259, v120);
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))v387)(v292 + 2 * v288, 0, 1, v120);
    v214 = _swiftEmptyArrayStorage;
    v294 = 3;
    v404 = v292;
    v295 = v292;
    v296 = (uint64_t)v400;
    do
    {
      v297 = v403;
      sub_1000194E4(v295, v403, &qword_1007FAF58);
      sub_10006C29C(v297, v296, &qword_1007FAF58);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v293 + 48))(v296, 1, v120) == 1)
      {
        sub_100011088(v296, &qword_1007FAF58);
      }
      else
      {
        v298 = *(void (**)(char *, uint64_t, _QWORD *))(v293 + 32);
        v299 = v398;
        v298(v398, v296, v120);
        v298(v405, (uint64_t)v299, v120);
        if ((swift_isUniquelyReferenced_nonNull_native(v214) & 1) == 0)
          v214 = (_QWORD *)sub_100201DA4(0, v214[2] + 1, 1, (unint64_t)v214);
        v301 = v214[2];
        v300 = v214[3];
        if (v301 >= v300 >> 1)
          v214 = (_QWORD *)sub_100201DA4(v300 > 1, v301 + 1, 1, (unint64_t)v214);
        v214[2] = v301 + 1;
        v298((char *)v214+ ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80))+ *(_QWORD *)(v293 + 72) * v301, (uint64_t)v405, v120);
        v296 = (uint64_t)v400;
      }
      v295 += v288;
      --v294;
    }
    while (v294);
    v313 = v406;
    swift_setDeallocating(v406);
    v314 = *((_QWORD *)v313 + 2);
    v315 = &v421;
    goto LABEL_123;
  }
  if (v271 != 1)
  {
    v302 = sub_10000DF3C(&qword_1007FAF68);
    v303 = *(_QWORD *)(v363 + 72);
    v304 = *(unsigned __int8 *)(v363 + 80);
    v305 = (v304 + 32) & ~v304;
    v221 = swift_allocObject(v302, v305 + 2 * v303, v304 | 7);
    *(_OWORD *)(v221 + 16) = xmmword_10066F870;
    v306 = v221 + v305;
    sub_1000194E4(v395, v221 + v305, &qword_1007FAF58);
    v223 = (char *)(v221 + v305 + v303);
    v87 = v396;
    (*(void (**)(char *, char *, _QWORD *))(v396 + 16))(v223, v259, v120);
    ((void (*)(char *, _QWORD, uint64_t, _QWORD *))v387)(v223, 0, 1, v120);
    v406 = (char *)(v221 + v305);
    v307 = v357;
    sub_1000194E4(v306, v357, &qword_1007FAF58);
    v308 = v307;
    v309 = v355;
    sub_10006C29C(v308, v355, &qword_1007FAF58);
    v119 = *(int **)(v87 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, _QWORD *))v119)(v309, 1, v120) == 1)
    {
      sub_100011088(v309, &qword_1007FAF58);
      v214 = _swiftEmptyArrayStorage;
      v310 = v391;
      v311 = v309;
      v312 = v360;
LABEL_128:
      v321 = (uint64_t)v223;
      v322 = v357;
      sub_1000194E4(v321, v357, &qword_1007FAF58);
      sub_10006C29C(v322, v311, &qword_1007FAF58);
      if (((unsigned int (*)(uint64_t, uint64_t, _QWORD *))v119)(v311, 1, v120) == 1)
      {
        sub_100011088(v311, &qword_1007FAF58);
      }
      else
      {
        v323 = *(void (**)(char *, uint64_t, _QWORD *))(v396 + 32);
        v324 = v351;
        v323(v351, v311, v120);
        v323(v358, (uint64_t)v324, v120);
        if ((swift_isUniquelyReferenced_nonNull_native(v214) & 1) == 0)
          v214 = (_QWORD *)sub_100201DA4(0, v214[2] + 1, 1, (unint64_t)v214);
        v326 = v214[2];
        v325 = v214[3];
        if (v326 >= v325 >> 1)
          v214 = (_QWORD *)sub_100201DA4(v325 > 1, v326 + 1, 1, (unint64_t)v214);
        v214[2] = v326 + 1;
        v323((char *)v214+ ((*(unsigned __int8 *)(v396 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v396 + 80))+ *(_QWORD *)(v396 + 72) * v326, (uint64_t)v358, v120);
      }
      v327 = v364;
      v317 = v397;
      swift_setDeallocating(v221);
      swift_arrayDestroy(v406, *(_QWORD *)(v221 + 16), v327);
      v316 = swift_deallocClassInstance(v221, 32, 7);
      goto LABEL_136;
    }
    v85 = *(char **)(v87 + 32);
    v318 = v351;
    ((void (*)(char *, uint64_t, _QWORD *))v85)(v351, v309, v120);
    ((void (*)(char *, char *, _QWORD *))v85)(v358, v318, v120);
    v214 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) != 0)
    {
LABEL_125:
      v320 = v214[2];
      v319 = v214[3];
      if (v320 >= v319 >> 1)
        v214 = (_QWORD *)sub_100201DA4(v319 > 1, v320 + 1, 1, (unint64_t)v214);
      v214[2] = v320 + 1;
      ((void (*)(char *, char *, _QWORD *))v85)((char *)v214+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(_QWORD *)(v87 + 72) * v320, v358, v120);
      v312 = v360;
      v310 = v391;
      v311 = v355;
      goto LABEL_128;
    }
LABEL_147:
    v214 = (_QWORD *)sub_100201DA4(0, v214[2] + 1, 1, (unint64_t)v214);
    goto LABEL_125;
  }
  v272 = sub_10000DF3C(&qword_1007FAF68);
  v273 = *(_QWORD *)(v363 + 72);
  v274 = *(unsigned __int8 *)(v363 + 80);
  v275 = (v274 + 32) & ~v274;
  v276 = swift_allocObject(v272, v275 + 3 * v273, v274 | 7);
  *(_OWORD *)(v276 + 16) = xmmword_10066F860;
  v405 = (char *)v276;
  v277 = v276 + v275;
  sub_1000194E4(v395, v277, &qword_1007FAF58);
  v278 = v396;
  (*(void (**)(uint64_t, char *, _QWORD *))(v396 + 16))(v277 + v273, v259, v120);
  ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))v387)(v277 + v273, 0, 1, v120);
  sub_1000194E4(v394, v277 + 2 * v273, &qword_1007FAF58);
  v214 = _swiftEmptyArrayStorage;
  v279 = 3;
  v403 = v277;
  v280 = v277;
  v281 = (uint64_t)v401;
  do
  {
    v282 = v404;
    sub_1000194E4(v280, v404, &qword_1007FAF58);
    sub_10006C29C(v282, v281, &qword_1007FAF58);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v278 + 48))(v281, 1, v120) == 1)
    {
      sub_100011088(v281, &qword_1007FAF58);
    }
    else
    {
      v283 = *(void (**)(char *, uint64_t, _QWORD *))(v278 + 32);
      v284 = v399;
      v283(v399, v281, v120);
      v283(v406, (uint64_t)v284, v120);
      if ((swift_isUniquelyReferenced_nonNull_native(v214) & 1) == 0)
        v214 = (_QWORD *)sub_100201DA4(0, v214[2] + 1, 1, (unint64_t)v214);
      v286 = v214[2];
      v285 = v214[3];
      if (v286 >= v285 >> 1)
        v214 = (_QWORD *)sub_100201DA4(v285 > 1, v286 + 1, 1, (unint64_t)v214);
      v214[2] = v286 + 1;
      v283((char *)v214+ ((*(unsigned __int8 *)(v278 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v278 + 80))+ *(_QWORD *)(v278 + 72) * v286, (uint64_t)v406, v120);
      v281 = (uint64_t)v401;
    }
    v280 += v273;
    --v279;
  }
  while (v279);
  v313 = v405;
  swift_setDeallocating(v405);
  v314 = *((_QWORD *)v313 + 2);
  v315 = &v420;
LABEL_123:
  swift_arrayDestroy(*(v315 - 32), v314, v364);
  v316 = swift_deallocClassInstance(v313, 32, 7);
  v312 = v360;
  v310 = v391;
  v317 = v397;
LABEL_136:
  v328 = v359;
  ((void (*)(uint64_t))v402)(v316);
  v329 = *(void (**)(char *, uint64_t, uint64_t))(v392 + 16);
  v329(v310, v328 + v317[10], v393);
  v330 = v328;
  sub_10002F0D4(v328, type metadata accessor for TitleHeaderView.Style);
  v331 = *(void **)&v312[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView];
  if (v331)
  {
    *((_QWORD *)&v417 + 1) = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v418 = &protocol witness table for UIView;
    *(_QWORD *)&v416 = v331;
  }
  else
  {
    v418 = 0;
    v416 = 0u;
    v417 = 0u;
  }
  v332 = v101 - v106;
  v333 = v402;
  v402();
  v334 = *(_QWORD **)(v330 + v317[14]);
  v335 = v331;
  sub_10002F0D4(v330, type metadata accessor for TitleHeaderView.Style);
  v414 = &type metadata for CGFloat;
  v415 = &protocol witness table for CGFloat;
  v413 = v334;
  v336 = v312;
  v337 = v366;
  v338 = v310;
  v339 = v393;
  v340 = ((uint64_t (*)(char *, char *, uint64_t))v329)(v366, v338, v393);
  v341 = (uint64_t)v365;
  ((void (*)(uint64_t))v333)(v340);
  v342 = v369;
  (*(void (**)(char *, uint64_t, uint64_t))(v367 + 16))(v369, v341 + v317[11], v368);
  sub_10002F0D4(v341, type metadata accessor for TitleHeaderView.Style);
  v343 = v312[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_allowsAccessibilityLayouts];
  v344 = v373;
  (*(void (**)(char *, _QWORD, uint64_t))(v370 + 104))(v373, enum case for TitleHeaderLayout.AccessoryHorizontalAlignment.rightJustified(_:), v371);
  v345 = v372;
  TitleHeaderLayout.init(accessoryView:accessoryMargin:accessoryVerticalAlignment:accessoryHorizontalAlignment:children:childrenHorizontalAlignment:allowsAccessibilityLayouts:)(&v416, &v413, v337, v344, v214, v342, v343);
  v346 = v376;
  TitleHeaderLayout.placeChildren(relativeTo:in:)(v336, v99, v332, v103, v105);

  (*(void (**)(char *, uint64_t))(v377 + 8))(v346, v378);
  (*(void (**)(char *, uint64_t))(v374 + 8))(v345, v375);
  (*(void (**)(char *, uint64_t))(v392 + 8))(v391, v339);
  (*(void (**)(char *, _QWORD *))(v396 + 8))(v389, v120);
  sub_100011088(v394, &qword_1007FAF58);
  sub_100011088(v395, &qword_1007FAF58);
}

id sub_1000EA660()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  _BYTE v33[24];
  objc_super v34;

  v1 = sub_10000DF3C(&qword_1007FAFB0);
  __chkstk_darwin(v1);
  v3 = &v33[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (objc_class *)type metadata accessor for TitleHeaderView(0);
  v34.receiver = v0;
  v34.super_class = v4;
  objc_msgSendSuper2(&v34, "prepareForReuse");
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction + 8];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  sub_100019310(v6, v7);
  v8 = type metadata accessor for Accessory(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory], v33, 33, 0);
  sub_10009E84C((uint64_t)v3, v9);
  swift_endAccess(v33);
  sub_1000F0D24(0);
  v10 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork;
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork];
  if (v11)
  {
    v12 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView;
    v13 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView];
    if (v13)
    {
      objc_msgSend(v13, "removeFromSuperview", swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork]).n128_f64[0]);
      v14 = *(void **)&v0[v12];
    }
    else
    {
      swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork]);
      v14 = 0;
    }
    *(_QWORD *)&v0[v12] = 0;

    v15 = *(_QWORD *)&v0[v10];
  }
  else
  {
    v15 = 0;
  }
  *(_QWORD *)&v0[v10] = 0;
  swift_release(v15);
  sub_1000E6CC8(v11, v16);
  swift_release(v11);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork;
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork];
  if (v18)
  {
    v19 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView;
    v20 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView];
    if (v20)
    {
      objc_msgSend(v20, "removeFromSuperview", swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork]).n128_f64[0]);
      v21 = *(void **)&v0[v19];
    }
    else
    {
      swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork]);
      v21 = 0;
    }
    *(_QWORD *)&v0[v19] = 0;

    v22 = *(_QWORD *)&v0[v17];
  }
  else
  {
    v22 = 0;
  }
  *(_QWORD *)&v0[v17] = 0;
  swift_release(v22);
  sub_1000E6A58(v18, v23);
  swift_release(v18);
  v24 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText];
  v26 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText];
  v25 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8];
  if (v25)
  {
    v27 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel;
    v28 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel];
    if (v28)
    {
      objc_msgSend(v28, "removeFromSuperview", swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText+ 8]).n128_f64[0]);
      v29 = *(void **)&v0[v27];
    }
    else
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText + 8]);
      v29 = 0;
    }
    *(_QWORD *)&v0[v27] = 0;

    v30 = *((_QWORD *)v24 + 1);
  }
  else
  {
    v30 = 0;
  }
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  swift_bridgeObjectRelease(v30);
  sub_1000E65F0(v26, v25);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel], "setText:", 0, swift_bridgeObjectRelease(v25).n128_f64[0]);
}

uint64_t sub_1000EA980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE v40[80];

  v1 = sub_10000DF3C((uint64_t *)&unk_1007FAFC0);
  inited = swift_initStackObject(v1, v40);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel);
  if (v3)
  {
    v4 = objc_msgSend(v3, "text");
    if (v4)
    {
      v5 = v4;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v8 = v7;

    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    *(_QWORD *)(inited + 32) = v6;
    *(_QWORD *)(inited + 40) = v8;
  }
  else
  {
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = 0;
  }
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleLabel), "text"));
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v13;
  v14 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel);
  if (!v14)
  {
    *(_QWORD *)(inited + 64) = 0;
    *(_QWORD *)(inited + 72) = 0;
    v20 = *(_QWORD *)(inited + 40);
    if (v20)
      goto LABEL_18;
LABEL_14:
    v21 = _swiftEmptyArrayStorage;
    v22 = *(_QWORD *)(inited + 56);
    if (!v22)
      goto LABEL_26;
    goto LABEL_21;
  }
  v15 = objc_msgSend(v14, "text");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  *(_QWORD *)(inited + 64) = v17;
  *(_QWORD *)(inited + 72) = v19;
  v20 = *(_QWORD *)(inited + 40);
  if (!v20)
    goto LABEL_14;
LABEL_18:
  v23 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain(v20);
  v21 = sub_100200A80(0, 1, 1, _swiftEmptyArrayStorage);
  v25 = v21[2];
  v24 = v21[3];
  if (v25 >= v24 >> 1)
    v21 = sub_100200A80((_QWORD *)(v24 > 1), v25 + 1, 1, v21);
  v21[2] = v25 + 1;
  v26 = &v21[2 * v25];
  v26[4] = v23;
  v26[5] = v20;
  v22 = *(_QWORD *)(inited + 56);
  if (v22)
  {
LABEL_21:
    v27 = *(_QWORD *)(inited + 48);
    swift_bridgeObjectRetain(v22);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_100200A80(0, v21[2] + 1, 1, v21);
    v29 = v21[2];
    v28 = v21[3];
    if (v29 >= v28 >> 1)
      v21 = sub_100200A80((_QWORD *)(v28 > 1), v29 + 1, 1, v21);
    v21[2] = v29 + 1;
    v30 = &v21[2 * v29];
    v30[4] = v27;
    v30[5] = v22;
  }
LABEL_26:
  v31 = *(_QWORD *)(inited + 72);
  if (v31)
  {
    v32 = *(_QWORD *)(inited + 64);
    swift_bridgeObjectRetain(*(_QWORD *)(inited + 72));
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_100200A80(0, v21[2] + 1, 1, v21);
    v34 = v21[2];
    v33 = v21[3];
    if (v34 >= v33 >> 1)
      v21 = sub_100200A80((_QWORD *)(v33 > 1), v34 + 1, 1, v21);
    v21[2] = v34 + 1;
    v35 = &v21[2 * v34];
    v35[4] = v32;
    v35[5] = v31;
  }
  swift_bridgeObjectRelease(inited);
  v36 = sub_10000DF3C(&qword_100802220);
  v37 = sub_1000F1168();
  v38 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v36, v37);
  swift_bridgeObjectRelease(v21);
  return v38;
}

uint64_t sub_1000EAE78()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for TitleHeaderView(0);
  v1 = objc_msgSendSuper2(&v8, "_accessibilitySupplementaryFooterViews");
  if (v1)
  {
    v2 = v1;
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  }
  else
  {
    v3 = 0;
  }
  v4 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView];
  if (v4)
  {
    v5 = v4;
    swift_bridgeObjectRelease(v3);
    v6 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
    v3 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v3 + 16) = xmmword_10066FBA0;
    *(_QWORD *)(v3 + 56) = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    *(_QWORD *)(v3 + 32) = v5;
  }
  return v3;
}

id sub_1000EAFB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleHeaderView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000EB10C()
{
  return type metadata accessor for TitleHeaderView(0);
}

uint64_t type metadata accessor for TitleHeaderView(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_1007FADC0, (uint64_t)&nominal type descriptor for TitleHeaderView);
}

void sub_1000EB128(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[17];

  v6[0] = &unk_100675958;
  v6[1] = &unk_100675970;
  v6[2] = &unk_100675970;
  v6[3] = &unk_100675970;
  v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[5] = (char *)&value witness table for () + 64;
  v6[6] = &unk_100675970;
  v6[7] = &unk_100675970;
  v6[8] = &unk_100675970;
  v6[9] = &unk_100675970;
  v2 = type metadata accessor for TitleHeaderView.Style(319);
  if (v3 <= 0x3F)
  {
    v6[10] = *(_QWORD *)(v2 - 8) + 64;
    v6[11] = &unk_100675970;
    sub_10006A5F8(319, (unint64_t *)&qword_1007FADD0, type metadata accessor for Accessory);
    if (v5 <= 0x3F)
    {
      v6[12] = *(_QWORD *)(v4 - 8) + 64;
      v6[13] = &unk_100675958;
      v6[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[15] = &unk_100675988;
      v6[16] = &unk_1006759A0;
      swift_updateClassMetadata2(a1, 256, 17, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for TitleHeaderView.Style(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_1007FAE38, (uint64_t)&nominal type descriptor for TitleHeaderView.Style);
}

char *sub_1000EB230(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  char *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  int *v39;
  __int128 v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  __n128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  void (*v78)(char *, uint64_t, uint64_t, __n128);
  int *v79;
  uint64_t v80;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
    v10 = v9[6];
    v11 = &v7[v10];
    v12 = (uint64_t)a2 + v10;
    v80 = type metadata accessor for FontUseCase(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v80 - 8) + 16);
    v78 = v13;
    v14 = v4;
    v15 = swift_bridgeObjectRetain(v8);
    v13(v11, v12, v80, v15);
    *(_QWORD *)&v7[v9[7]] = *(char **)((char *)a2 + v9[7]);
    *(_DWORD *)&v7[v9[8]] = *(_DWORD *)((char *)a2 + v9[8]);
    v16 = v9[9];
    v17 = &v7[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = type metadata accessor for StaticDimension(0);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v20(&v7[v9[10]], (uint64_t)a2 + v9[10], v19);
    *(_DWORD *)&v7[v9[11]] = *(_DWORD *)((char *)a2 + v9[11]);
    v21 = v9[12];
    v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)&v7[v21 + 24] = v22;
    (**(void (***)(void))(v22 - 8))();
    v23 = v9[13];
    v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)&v7[v23 + 24] = v24;
    (**(void (***)(void))(v24 - 8))();
    v25 = a3[5];
    v79 = a3;
    v26 = &v7[v25];
    v27 = (uint64_t)a2 + v25;
    v28 = *(char **)((char *)a2 + v25);
    v29 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    v30 = *(_QWORD *)(v27 + 16);
    *((_QWORD *)v26 + 2) = v30;
    v31 = v9[6];
    v32 = &v26[v31];
    v33 = v27 + v31;
    v34 = v28;
    v35 = swift_bridgeObjectRetain(v30);
    v78(v32, v33, v80, v35);
    *(_QWORD *)&v26[v9[7]] = *(_QWORD *)(v27 + v9[7]);
    *(_DWORD *)&v26[v9[8]] = *(_DWORD *)(v27 + v9[8]);
    v20(&v26[v9[9]], v27 + v9[9], v19);
    v76 = v19;
    v77 = (void (*)(char *, char *, uint64_t))v20;
    v20(&v26[v9[10]], v27 + v9[10], v19);
    *(_DWORD *)&v26[v9[11]] = *(_DWORD *)(v27 + v9[11]);
    v36 = v9[12];
    v37 = *(_OWORD *)(v27 + v36 + 24);
    *(_OWORD *)&v26[v36 + 24] = v37;
    (**(void (***)(void))(v37 - 8))();
    v38 = v9[13];
    v39 = v79;
    v40 = *(_OWORD *)(v27 + v38 + 24);
    *(_OWORD *)&v26[v38 + 24] = v40;
    (**(void (***)(void))(v40 - 8))();
    v41 = v79[6];
    v42 = (void **)&v7[v41];
    v43 = (void **)((char *)a2 + v41);
    v44 = *((_QWORD *)v9 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v44 + 48))((char *)a2 + v41, 1, v9))
    {
      v45 = sub_10000DF3C(&qword_1007FADD8);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v47 = *v43;
      v48 = v43[1];
      *v42 = *v43;
      v42[1] = v48;
      v49 = v43[2];
      v42[2] = v49;
      v50 = v9[6];
      v51 = (char *)v42 + v50;
      v52 = (char *)v43 + v50;
      v53 = v47;
      v54 = swift_bridgeObjectRetain(v49);
      v39 = v79;
      v78(v51, (uint64_t)v52, v80, v54);
      *(void **)((char *)v42 + v9[7]) = *(void **)((char *)v43 + v9[7]);
      *(_DWORD *)((char *)v42 + v9[8]) = *(_DWORD *)((char *)v43 + v9[8]);
      v77((char *)v42 + v9[9], (char *)v43 + v9[9], v76);
      v77((char *)v42 + v9[10], (char *)v43 + v9[10], v76);
      *(_DWORD *)((char *)v42 + v9[11]) = *(_DWORD *)((char *)v43 + v9[11]);
      v55 = v9[12];
      v56 = *(_OWORD *)((char *)v43 + v55 + 24);
      *(_OWORD *)((char *)v42 + v55 + 24) = v56;
      (**(void (***)(void))(v56 - 8))();
      v57 = v9[13];
      v58 = *(_OWORD *)((char *)v43 + v57 + 24);
      *(_OWORD *)((char *)v42 + v57 + 24) = v58;
      (**(void (***)(void))(v58 - 8))();
      v46.n128_f64[0] = (*(double (**)(void **, _QWORD, uint64_t, int *))(v44 + 56))(v42, 0, 1, v9);
    }
    v59 = v39[8];
    v7[v39[7]] = *((_BYTE *)a2 + v39[7]);
    v7[v59] = *((_BYTE *)a2 + v59);
    v60 = v39[10];
    v7[v39[9]] = *((_BYTE *)a2 + v39[9]);
    v61 = &v7[v60];
    v62 = (uint64_t)a2 + v60;
    v63 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v46);
    v64.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v65 = v39[11];
    v66 = &v7[v65];
    v67 = (uint64_t)a2 + v65;
    v68 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v64);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
    v69 = v39[12];
    v70 = v39[13];
    v71 = *(char **)((char *)a2 + v69);
    *(_QWORD *)&v7[v69] = v71;
    v72 = *(char **)((char *)a2 + v70);
    *(_QWORD *)&v7[v70] = v72;
    *(_QWORD *)&v7[v39[14]] = *(char **)((char *)a2 + v39[14]);
    v73 = v71;
    v74 = v72;
  }
  return v7;
}

uint64_t type metadata accessor for TitleHeaderView.TextConfiguration(uint64_t a1)
{
  return sub_10005C17C(a1, qword_1007FAEF8, (uint64_t)&nominal type descriptor for TitleHeaderView.TextConfiguration);
}

void sub_1000EB690(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + v4[9];
  v9 = type metadata accessor for StaticDimension(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + v4[10], v9);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v4[12]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v4[13]));
  v11 = a1 + a2[5];

  v12 = swift_bridgeObjectRelease(*(_QWORD *)(v11 + 16));
  ((void (*)(uint64_t, uint64_t, __n128))v7)(v11 + v4[6], v6, v12);
  v10(v11 + v4[9], v9);
  v10(v11 + v4[10], v9);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v11 + v4[12]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v11 + v4[13]));
  v13 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v13, 1, v4))
  {

    v15 = swift_bridgeObjectRelease(*(_QWORD *)(v13 + 16));
    ((void (*)(uint64_t, uint64_t, __n128))v7)(v13 + v4[6], v6, v15);
    v10(v13 + v4[9], v9);
    v10(v13 + v4[10], v9);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v13 + v4[12]));
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v13 + v4[13]));
  }
  v16 = a1 + a2[10];
  v17 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v14);
  v18.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v19 = a1 + a2[11];
  v20 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);

}

char *sub_1000EB894(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  id v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  __n128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  void (*v79)(char *, uint64_t, uint64_t, __n128);
  uint64_t v80;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v8 = *(_QWORD *)(a2 + 16);
  *((_QWORD *)a1 + 2) = v8;
  v9 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = a2 + v10;
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
  v79 = v14;
  v80 = v13;
  v15 = v7;
  v16 = swift_bridgeObjectRetain(v8);
  v14(v11, v12, v13, v16);
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)(a2 + v9[7]);
  *(_DWORD *)&a1[v9[8]] = *(_DWORD *)(a2 + v9[8]);
  v17 = v9[9];
  v18 = &a1[v17];
  v19 = a2 + v17;
  v20 = type metadata accessor for StaticDimension(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v21(v18, v19, v20);
  v21(&a1[v9[10]], a2 + v9[10], v20);
  *(_DWORD *)&a1[v9[11]] = *(_DWORD *)(a2 + v9[11]);
  v22 = v9[12];
  v23 = *(_OWORD *)(a2 + v22 + 24);
  *(_OWORD *)&a1[v22 + 24] = v23;
  (**(void (***)(void))(v23 - 8))();
  v24 = v9[13];
  v25 = *(_OWORD *)(a2 + v24 + 24);
  *(_OWORD *)&a1[v24 + 24] = v25;
  (**(void (***)(void))(v25 - 8))();
  v26 = a3[5];
  v27 = &a1[v26];
  v28 = a2 + v26;
  v29 = *(void **)(a2 + v26);
  v30 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v31 = *(_QWORD *)(v28 + 16);
  *((_QWORD *)v27 + 2) = v31;
  v32 = v9[6];
  v33 = &v27[v32];
  v34 = v28 + v32;
  v35 = v29;
  v36 = swift_bridgeObjectRetain(v31);
  v79(v33, v34, v80, v36);
  *(_QWORD *)&v27[v9[7]] = *(_QWORD *)(v28 + v9[7]);
  *(_DWORD *)&v27[v9[8]] = *(_DWORD *)(v28 + v9[8]);
  v21(&v27[v9[9]], v28 + v9[9], v20);
  v76 = v20;
  v77 = (void (*)(char *, char *, uint64_t))v21;
  v21(&v27[v9[10]], v28 + v9[10], v20);
  *(_DWORD *)&v27[v9[11]] = *(_DWORD *)(v28 + v9[11]);
  v37 = v9[12];
  v38 = *(_OWORD *)(v28 + v37 + 24);
  *(_OWORD *)&v27[v37 + 24] = v38;
  (**(void (***)(void))(v38 - 8))();
  v39 = v9[13];
  v40 = *(_OWORD *)(v28 + v39 + 24);
  *(_OWORD *)&v27[v39 + 24] = v40;
  (**(void (***)(void))(v40 - 8))();
  v41 = a3[6];
  v42 = (void **)&a1[v41];
  v43 = (void **)(a2 + v41);
  v44 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v44 + 48))(a2 + v41, 1, v9))
  {
    v45 = sub_10000DF3C(&qword_1007FADD8);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v47 = *v43;
    v48 = v43[1];
    *v42 = *v43;
    v42[1] = v48;
    v49 = v43[2];
    v42[2] = v49;
    v50 = v9[6];
    v51 = (char *)v42 + v50;
    v52 = (char *)v43 + v50;
    v53 = v47;
    v54 = swift_bridgeObjectRetain(v49);
    v79(v51, (uint64_t)v52, v80, v54);
    *(void **)((char *)v42 + v9[7]) = *(void **)((char *)v43 + v9[7]);
    *(_DWORD *)((char *)v42 + v9[8]) = *(_DWORD *)((char *)v43 + v9[8]);
    v77((char *)v42 + v9[9], (char *)v43 + v9[9], v76);
    v77((char *)v42 + v9[10], (char *)v43 + v9[10], v76);
    *(_DWORD *)((char *)v42 + v9[11]) = *(_DWORD *)((char *)v43 + v9[11]);
    v55 = v9[12];
    v56 = *(_OWORD *)((char *)v43 + v55 + 24);
    *(_OWORD *)((char *)v42 + v55 + 24) = v56;
    (**(void (***)(void))(v56 - 8))();
    v57 = v9[13];
    v58 = *(_OWORD *)((char *)v43 + v57 + 24);
    *(_OWORD *)((char *)v42 + v57 + 24) = v58;
    (**(void (***)(void))(v58 - 8))();
    v46.n128_f64[0] = (*(double (**)(void **, _QWORD, uint64_t, int *))(v44 + 56))(v42, 0, 1, v9);
  }
  v59 = a3[8];
  a1[a3[7]] = *(_BYTE *)(a2 + a3[7]);
  a1[v59] = *(_BYTE *)(a2 + v59);
  v60 = a3[10];
  a1[a3[9]] = *(_BYTE *)(a2 + a3[9]);
  v61 = &a1[v60];
  v62 = a2 + v60;
  v63 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v46);
  v64.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  v65 = a3[11];
  v66 = &a1[v65];
  v67 = a2 + v65;
  v68 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v64);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
  v69 = a3[12];
  v70 = a3[13];
  v71 = *(void **)(a2 + v69);
  *(_QWORD *)&a1[v69] = v71;
  v72 = *(void **)(a2 + v70);
  *(_QWORD *)&a1[v70] = v72;
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)(a2 + a3[14]);
  v73 = v71;
  v74 = v72;
  return a1;
}

uint64_t sub_1000EBCA4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  void **v31;
  void **v32;
  uint64_t (*v33)(uint64_t, uint64_t, int *);
  int v34;
  void *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t, __n128);
  id v40;
  __n128 v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  char *v80;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v12 = v11[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for FontUseCase(0);
  v76 = *(_QWORD *)(v15 - 8);
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 24);
  v79(v13, v14, v15);
  *(_QWORD *)(a1 + v11[7]) = *(_QWORD *)(a2 + v11[7]);
  *(_DWORD *)(a1 + v11[8]) = *(_DWORD *)(a2 + v11[8]);
  v16 = v11[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for StaticDimension(0);
  v77 = *(_QWORD *)(v19 - 8);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 24);
  v20(v17, v18, v19);
  v20(a1 + v11[10], a2 + v11[10], v19);
  *(_DWORD *)(a1 + v11[11]) = *(_DWORD *)(a2 + v11[11]);
  sub_10001216C((_QWORD *)(a1 + v11[12]), (_QWORD *)(a2 + v11[12]));
  sub_10001216C((_QWORD *)(a1 + v11[13]), (_QWORD *)(a2 + v11[13]));
  v21 = a3[5];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(void **)(a2 + v21);
  v25 = *(void **)v22;
  *(_QWORD *)v22 = v24;
  v26 = v24;

  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  v27 = *(_QWORD *)(v23 + 16);
  v28 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v22 + 16) = v27;
  swift_bridgeObjectRetain(v27);
  v29 = swift_bridgeObjectRelease(v28);
  v78 = v15;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v79)(v22 + v11[6], v23 + v11[6], v15, v29);
  *(_QWORD *)(v22 + v11[7]) = *(_QWORD *)(v23 + v11[7]);
  *(_DWORD *)(v22 + v11[8]) = *(_DWORD *)(v23 + v11[8]);
  v20(v22 + v11[9], v23 + v11[9], v19);
  v20(v22 + v11[10], v23 + v11[10], v19);
  *(_DWORD *)(v22 + v11[11]) = *(_DWORD *)(v23 + v11[11]);
  sub_10001216C((_QWORD *)(v22 + v11[12]), (_QWORD *)(v23 + v11[12]));
  sub_10001216C((_QWORD *)(v22 + v11[13]), (_QWORD *)(v23 + v11[13]));
  v30 = a3[6];
  v31 = (void **)(a1 + v30);
  v32 = (void **)(a2 + v30);
  v75 = *((_QWORD *)v11 - 1);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v75 + 48);
  LODWORD(v23) = v33(a1 + v30, 1, v11);
  v34 = v33((uint64_t)v32, 1, v11);
  if (!(_DWORD)v23)
  {
    if (!v34)
    {
      v69 = *v32;
      v70 = *v31;
      *v31 = *v32;
      v71 = v69;

      v31[1] = v32[1];
      v72 = v32[2];
      v73 = v31[2];
      v31[2] = v72;
      swift_bridgeObjectRetain(v72);
      v74 = swift_bridgeObjectRelease(v73);
      ((void (*)(char *, char *, uint64_t, __n128))v79)((char *)v31 + v11[6], (char *)v32 + v11[6], v78, v74);
      *(void **)((char *)v31 + v11[7]) = *(void **)((char *)v32 + v11[7]);
      *(_DWORD *)((char *)v31 + v11[8]) = *(_DWORD *)((char *)v32 + v11[8]);
      v20((uint64_t)v31 + v11[9], (uint64_t)v32 + v11[9], v19);
      v20((uint64_t)v31 + v11[10], (uint64_t)v32 + v11[10], v19);
      *(_DWORD *)((char *)v31 + v11[11]) = *(_DWORD *)((char *)v32 + v11[11]);
      sub_10001216C((void **)((char *)v31 + v11[12]), (void **)((char *)v32 + v11[12]));
      sub_10001216C((void **)((char *)v31 + v11[13]), (void **)((char *)v32 + v11[13]));
      goto LABEL_7;
    }
    sub_10002F0D4((uint64_t)v31, type metadata accessor for TitleHeaderView.TextConfiguration);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    v50 = sub_10000DF3C(&qword_1007FADD8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_7;
  }
  v35 = *v32;
  *v31 = *v32;
  v31[1] = v32[1];
  v36 = v32[2];
  v31[2] = v36;
  v37 = v11[6];
  v38 = (char *)v31 + v37;
  v80 = (char *)v32 + v37;
  v39 = *(void (**)(char *, char *, uint64_t, __n128))(v76 + 16);
  v40 = v35;
  v41 = swift_bridgeObjectRetain(v36);
  v39(v38, v80, v78, v41);
  *(void **)((char *)v31 + v11[7]) = *(void **)((char *)v32 + v11[7]);
  *(_DWORD *)((char *)v31 + v11[8]) = *(_DWORD *)((char *)v32 + v11[8]);
  v42 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v42((char *)v31 + v11[9], (char *)v32 + v11[9], v19);
  v42((char *)v31 + v11[10], (char *)v32 + v11[10], v19);
  *(_DWORD *)((char *)v31 + v11[11]) = *(_DWORD *)((char *)v32 + v11[11]);
  v43 = v11[12];
  v44 = (char *)v31 + v43;
  v45 = *(uint64_t *)((char *)v32 + v43 + 24);
  *((_QWORD *)v44 + 3) = v45;
  *((_QWORD *)v44 + 4) = *(void **)((char *)v32 + v43 + 32);
  (**(void (***)(void))(v45 - 8))();
  v46 = v11[13];
  v47 = (char *)v31 + v46;
  v48 = *(uint64_t *)((char *)v32 + v46 + 24);
  *((_QWORD *)v47 + 3) = v48;
  *((_QWORD *)v47 + 4) = *(void **)((char *)v32 + v46 + 32);
  (**(void (***)(void))(v48 - 8))();
  (*(void (**)(void **, _QWORD, uint64_t, int *))(v75 + 56))(v31, 0, 1, v11);
LABEL_7:
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v51 = a3[10];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v49);
  v55.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v56 = a3[11];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v55);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
  v60 = a3[12];
  v61 = *(void **)(a1 + v60);
  v62 = *(void **)(a2 + v60);
  *(_QWORD *)(a1 + v60) = v62;
  v63 = v62;

  v64 = a3[13];
  v65 = *(void **)(a2 + v64);
  v66 = *(void **)(a1 + v64);
  *(_QWORD *)(a1 + v64) = v65;
  v67 = v65;

  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1000EC1B4(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v62)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v7 = v6[6];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_DWORD *)(a1 + v6[8]) = *(_DWORD *)(a2 + v6[8]);
  v12 = v6[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for StaticDimension(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v6[10], a2 + v6[10], v15);
  *(_DWORD *)(a1 + v6[11]) = *(_DWORD *)(a2 + v6[11]);
  v17 = v6[12];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  v21 = v6[13];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  v25 = a3[5];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *(_OWORD *)(v26 + 8) = *(_OWORD *)(a2 + v25 + 8);
  v62 = v11;
  v11((char *)(a1 + v25 + v6[6]), (char *)(a2 + v25 + v6[6]), v10);
  *(_QWORD *)(v26 + v6[7]) = *(_QWORD *)(v27 + v6[7]);
  *(_DWORD *)(v26 + v6[8]) = *(_DWORD *)(v27 + v6[8]);
  v16(v26 + v6[9], v27 + v6[9], v15);
  v16(v26 + v6[10], v27 + v6[10], v15);
  *(_DWORD *)(v26 + v6[11]) = *(_DWORD *)(v27 + v6[11]);
  v28 = v6[12];
  v29 = v26 + v28;
  v30 = v27 + v28;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  v32 = v6[13];
  v33 = v26 + v32;
  v34 = v27 + v32;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  v36 = a3[6];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  v39 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v39 + 48))(a2 + v36, 1, v6))
  {
    v40 = sub_10000DF3C(&qword_1007FADD8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    *v37 = *v38;
    *(_OWORD *)(v37 + 1) = *(_OWORD *)(v38 + 1);
    v62((char *)v37 + v6[6], (char *)v38 + v6[6], v10);
    *(_QWORD *)((char *)v37 + v6[7]) = *(_QWORD *)((char *)v38 + v6[7]);
    *(_DWORD *)((char *)v37 + v6[8]) = *(_DWORD *)((char *)v38 + v6[8]);
    v16((uint64_t)v37 + v6[9], (uint64_t)v38 + v6[9], v15);
    v16((uint64_t)v37 + v6[10], (uint64_t)v38 + v6[10], v15);
    *(_DWORD *)((char *)v37 + v6[11]) = *(_DWORD *)((char *)v38 + v6[11]);
    v42 = v6[12];
    v43 = (char *)v37 + v42;
    v44 = (char *)v38 + v42;
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    v46 = v6[13];
    v47 = (char *)v37 + v46;
    v48 = (char *)v38 + v46;
    *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
    v49 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v49;
    v41.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t, int *))(v39 + 56))(v37, 0, 1, v6);
  }
  v50 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v50) = *(_BYTE *)(a2 + v50);
  v51 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v41);
  v55.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v56 = a3[11];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v55);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
  v60 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1000EC54C(uint64_t a1, char *a2, int *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  void **v43;
  char *v44;
  uint64_t (*v45)(uint64_t, uint64_t, int *);
  int v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  void *v73;
  void *v74;
  void *v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v6 = *((_QWORD *)a2 + 2);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v9 = v8[6];
  v10 = a1 + v9;
  v11 = &a2[v9];
  v12 = type metadata accessor for FontUseCase(0);
  v87 = *(_QWORD *)(v12 - 8);
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v87 + 40);
  v13(v10, v11, v12);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)&a2[v8[7]];
  *(_DWORD *)(a1 + v8[8]) = *(_DWORD *)&a2[v8[8]];
  v14 = v8[9];
  v15 = a1 + v14;
  v16 = &a2[v14];
  v17 = type metadata accessor for StaticDimension(0);
  v86 = *(_QWORD *)(v17 - 8);
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v86 + 40);
  v18(v15, v16, v17);
  v18(a1 + v8[10], &a2[v8[10]], v17);
  *(_DWORD *)(a1 + v8[11]) = *(_DWORD *)&a2[v8[11]];
  v19 = v8[12];
  v20 = a1 + v19;
  v21 = &a2[v19];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v19));
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
  v23 = v8[13];
  v24 = a1 + v23;
  v25 = &a2[v23];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v23));
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  v27 = a3[5];
  v28 = a1 + v27;
  v29 = &a2[v27];
  v30 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)&a2[v27];

  v31 = *((_QWORD *)v29 + 2);
  v32 = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v28 + 8) = *((_QWORD *)v29 + 1);
  *(_QWORD *)(v28 + 16) = v31;
  v33 = swift_bridgeObjectRelease(v32);
  v88 = v12;
  ((void (*)(uint64_t, char *, uint64_t, __n128))v13)(v28 + v8[6], &v29[v8[6]], v12, v33);
  *(_QWORD *)(v28 + v8[7]) = *(_QWORD *)&v29[v8[7]];
  *(_DWORD *)(v28 + v8[8]) = *(_DWORD *)&v29[v8[8]];
  v18(v28 + v8[9], &v29[v8[9]], v17);
  v18(v28 + v8[10], &v29[v8[10]], v17);
  *(_DWORD *)(v28 + v8[11]) = *(_DWORD *)&v29[v8[11]];
  v34 = v8[12];
  v35 = v28 + v34;
  v36 = &v29[v34];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v28 + v34));
  v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_QWORD *)(v35 + 32) = *((_QWORD *)v36 + 4);
  v38 = v8[13];
  v39 = v28 + v38;
  v40 = &v29[v38];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v39);
  v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_QWORD *)(v39 + 32) = *((_QWORD *)v40 + 4);
  v42 = a3[6];
  v43 = (void **)(a1 + v42);
  v44 = &a2[v42];
  v85 = *((_QWORD *)v8 - 1);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v85 + 48);
  LODWORD(v36) = v45(a1 + v42, 1, v8);
  v46 = v45((uint64_t)v44, 1, v8);
  if (!(_DWORD)v36)
  {
    if (!v46)
    {
      v73 = *v43;
      *v43 = *(void **)v44;

      v74 = (void *)*((_QWORD *)v44 + 2);
      v75 = v43[2];
      v43[1] = (void *)*((_QWORD *)v44 + 1);
      v43[2] = v74;
      v76 = swift_bridgeObjectRelease(v75);
      ((void (*)(char *, char *, uint64_t, __n128))v13)((char *)v43 + v8[6], &v44[v8[6]], v88, v76);
      *(void **)((char *)v43 + v8[7]) = *(void **)&v44[v8[7]];
      *(_DWORD *)((char *)v43 + v8[8]) = *(_DWORD *)&v44[v8[8]];
      v18((uint64_t)v43 + v8[9], &v44[v8[9]], v17);
      v18((uint64_t)v43 + v8[10], &v44[v8[10]], v17);
      *(_DWORD *)((char *)v43 + v8[11]) = *(_DWORD *)&v44[v8[11]];
      v77 = v8[12];
      v78 = (char *)v43 + v77;
      v79 = &v44[v77];
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((void **)((char *)v43 + v77));
      v80 = *((_OWORD *)v79 + 1);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v80;
      *((_QWORD *)v78 + 4) = *((_QWORD *)v79 + 4);
      v81 = v8[13];
      v82 = (char *)v43 + v81;
      v83 = &v44[v81];
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((void **)((char *)v43 + v81));
      v56 = *(__n128 *)v83;
      v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
      goto LABEL_7;
    }
    sub_10002F0D4((uint64_t)v43, type metadata accessor for TitleHeaderView.TextConfiguration);
    goto LABEL_6;
  }
  if (v46)
  {
LABEL_6:
    v57 = sub_10000DF3C(&qword_1007FADD8);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_7;
  }
  *v43 = *(void **)v44;
  *(_OWORD *)(v43 + 1) = *(_OWORD *)(v44 + 8);
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))((char *)v43 + v8[6], &v44[v8[6]], v88);
  *(void **)((char *)v43 + v8[7]) = *(void **)&v44[v8[7]];
  *(_DWORD *)((char *)v43 + v8[8]) = *(_DWORD *)&v44[v8[8]];
  v47 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
  v47((char *)v43 + v8[9], &v44[v8[9]], v17);
  v47((char *)v43 + v8[10], &v44[v8[10]], v17);
  *(_DWORD *)((char *)v43 + v8[11]) = *(_DWORD *)&v44[v8[11]];
  v48 = v8[12];
  v49 = (char *)v43 + v48;
  v50 = &v44[v48];
  *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
  v51 = *((_OWORD *)v50 + 1);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v51;
  v52 = v8[13];
  v53 = (char *)v43 + v52;
  v54 = &v44[v52];
  *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
  v55 = *((_OWORD *)v54 + 1);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *((_OWORD *)v53 + 1) = v55;
  (*(void (**)(void **, _QWORD, uint64_t, int *))(v85 + 56))(v43, 0, 1, v8);
LABEL_7:
  v58 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = a2[a3[7]];
  *(_BYTE *)(a1 + v58) = a2[v58];
  v59 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = a2[a3[9]];
  v60 = a1 + v59;
  v61 = &a2[v59];
  v62 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v56);
  v63.n128_f64[0] = (*(double (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v64 = a3[11];
  v65 = a1 + v64;
  v66 = &a2[v64];
  v67 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v63);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  v68 = a3[12];
  v69 = *(void **)(a1 + v68);
  *(_QWORD *)(a1 + v68) = *(_QWORD *)&a2[v68];

  v70 = a3[13];
  v71 = *(void **)(a1 + v70);
  *(_QWORD *)(a1 + v70) = *(_QWORD *)&a2[v70];

  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)&a2[a3[14]];
  return a1;
}

uint64_t sub_1000ECA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ECA64);
}

uint64_t sub_1000ECA64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v19;

  v6 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10000DF3C(&qword_1007FADD8);
  v13 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v14 = a3[6];
LABEL_9:
    v10 = a1 + v14;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    return v9(v10, a2, v8);
  }
  v15 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v12);
  v13 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v14 = a3[10];
    goto LABEL_9;
  }
  v17 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v16);
  v13 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v8 = v17;
    v14 = a3[11];
    goto LABEL_9;
  }
  v19 = *(_QWORD *)(a1 + a3[13]);
  if (v19 >= 0xFFFFFFFF)
    LODWORD(v19) = -1;
  return (v19 + 1);
}

uint64_t sub_1000ECB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ECB64);
}

uint64_t sub_1000ECB64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t result;

  v8 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_10000DF3C(&qword_1007FADD8);
  v15 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v15 + 84) == a3)
  {
    v10 = v13;
    v16 = a4[6];
LABEL_9:
    v12 = a1 + v16;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    return v11(v12, a2, a2, v10);
  }
  v17 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v14);
  v15 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v15 + 84) == a3)
  {
    v10 = v17;
    v16 = a4[10];
    goto LABEL_9;
  }
  result = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v18);
  v15 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v15 + 84) == a3)
  {
    v10 = result;
    v16 = a4[11];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[13]) = (a2 - 1);
  return result;
}

void sub_1000ECC54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __n128 v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[11];

  v2 = type metadata accessor for TitleHeaderView.TextConfiguration(319);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v12[1] = v12[0];
    sub_10006A5F8(319, (unint64_t *)&unk_1007FAE48, type metadata accessor for TitleHeaderView.TextConfiguration);
    if (v6 <= 0x3F)
    {
      v12[2] = *(_QWORD *)(v4 - 8) + 64;
      v12[3] = &unk_1006759A0;
      v12[4] = &unk_1006759A0;
      v12[5] = &unk_1006759C8;
      v7 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(319, v5);
      if (v9 <= 0x3F)
      {
        v12[6] = *(_QWORD *)(v7 - 8) + 64;
        v10 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(319, v8);
        if (v11 <= 0x3F)
        {
          v12[7] = *(_QWORD *)(v10 - 8) + 64;
          v12[8] = &unk_100675970;
          v12[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
          v12[10] = (char *)&value witness table for Builtin.Int64 + 64;
          swift_initStructMetadata(a1, 256, 11, v12, a1 + 16);
        }
      }
    }
  }
}

char *sub_1000ECD58(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for FontUseCase(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12);
    v15 = a3[8];
    *(_QWORD *)&v7[a3[7]] = *(char **)((char *)a2 + a3[7]);
    *(_DWORD *)&v7[v15] = *(_DWORD *)((char *)a2 + v15);
    v16 = a3[9];
    v17 = &v7[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = type metadata accessor for StaticDimension(0);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v20(&v7[a3[10]], (uint64_t)a2 + a3[10], v19);
    v21 = a3[12];
    *(_DWORD *)&v7[a3[11]] = *(_DWORD *)((char *)a2 + a3[11]);
    v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)&v7[v21 + 24] = v22;
    (**(void (***)(void))(v22 - 8))();
    v23 = a3[13];
    v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)&v7[v23 + 24] = v24;
    (**(void (***)(void))(v24 - 8))();
  }
  return v7;
}

uint64_t sub_1000ECEBC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for FontUseCase(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[9];
  v7 = type metadata accessor for StaticDimension(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[10], v7);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + a2[12]));
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + a2[13]));
}

char *sub_1000ECF6C(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v8 = *(_QWORD *)(a2 + 16);
  *((_QWORD *)a1 + 2) = v8;
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = a2 + v9;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v7;
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  v15 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)(a2 + a3[7]);
  *(_DWORD *)&a1[v15] = *(_DWORD *)(a2 + v15);
  v16 = a3[9];
  v17 = &a1[v16];
  v18 = a2 + v16;
  v19 = type metadata accessor for StaticDimension(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], a2 + a3[10], v19);
  v21 = a3[12];
  *(_DWORD *)&a1[a3[11]] = *(_DWORD *)(a2 + a3[11]);
  v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)&a1[v21 + 24] = v22;
  (**(void (***)(void))(v22 - 8))();
  v23 = a3[13];
  v24 = *(_OWORD *)(a2 + v23 + 24);
  *(_OWORD *)&a1[v23 + 24] = v24;
  (**(void (***)(void))(v24 - 8))();
  return a1;
}

uint64_t sub_1000ED0A8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for FontUseCase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for StaticDimension(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(a1 + a3[10], a2 + a3[10], v18);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  sub_10001216C((_QWORD *)(a1 + a3[12]), (_QWORD *)(a2 + a3[12]));
  sub_10001216C((_QWORD *)(a1 + a3[13]), (_QWORD *)(a2 + a3[13]));
  return a1;
}

uint64_t sub_1000ED1D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for FontUseCase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for StaticDimension(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + a3[10], a2 + a3[10], v14);
  v16 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a3[13];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  return a1;
}

uint64_t sub_1000ED2E4(uint64_t a1, char *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *((_QWORD *)a2 + 2);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = &a2[v9];
  v12 = type metadata accessor for FontUseCase(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  *(_DWORD *)(a1 + v13) = *(_DWORD *)&a2[v13];
  v14 = a3[9];
  v15 = a1 + v14;
  v16 = &a2[v14];
  v17 = type metadata accessor for StaticDimension(0);
  v18 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  v18(a1 + a3[10], &a2[a3[10]], v17);
  v19 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)&a2[a3[11]];
  v20 = a1 + v19;
  v21 = &a2[v19];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v19));
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
  v23 = a3[13];
  v24 = a1 + v23;
  v25 = &a2[v23];
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v23));
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  return a1;
}

uint64_t sub_1000ED418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ED424);
}

uint64_t sub_1000ED424(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FontUseCase(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for StaticDimension(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1000ED4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ED4D0);
}

char *sub_1000ED4D0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for FontUseCase(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for StaticDimension(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_1000ED56C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];
  uint64_t v6;
  uint64_t v7;
  char *v8;
  const char *v9;
  const char *v10;

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = &unk_100675958;
  result = type metadata accessor for FontUseCase(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[4] = (char *)&value witness table for Builtin.Int32 + 64;
    result = type metadata accessor for StaticDimension(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      v8 = (char *)&value witness table for Builtin.Int32 + 64;
      v9 = "(";
      v10 = "(";
      swift_initStructMetadata(a1, 256, 10, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

double sub_1000ED634(int *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD), _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,void *a22)
{
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  char *v92;
  id v93;
  void (*v94)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v95;
  void *v96;
  __n128 v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  double v102;
  uint64_t v103;
  _OWORD *v104;
  double v105;
  double v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  NSString v112;
  id v113;
  double v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  _OWORD *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  double v131;
  double v132;
  char *v133;
  uint64_t v134;
  double v135;
  double v136;
  double v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  void (*v141)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  void (*v149)(_QWORD, _QWORD, _QWORD, _QWORD);
  __int128 v150;
  uint64_t v151;
  void *v152;
  __n128 v153;
  unint64_t v154;
  uint64_t v155;
  double v156;
  double v157;
  double v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  id v164;
  char *v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  id v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __n128 v184;
  unint64_t v185;
  uint64_t v186;
  double v187;
  uint64_t v188;
  double v189;
  double v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  NSString v195;
  id v196;
  void *v197;
  double v198;
  double v199;
  double v200;
  double v201;
  uint64_t v202;
  uint64_t v203;
  double v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  double v214;
  double v215;
  char *v216;
  uint64_t v217;
  double v218;
  double v219;
  double v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  id v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  int v231;
  void (*v232)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(char *, uint64_t, uint64_t);
  char *v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(char *, void *, uint64_t);
  char *v255;
  unint64_t v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  int *v269;
  char *v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void (*v275)(char *, uint64_t, uint64_t);
  char *v276;
  unint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  double v289;
  double v290;
  double v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  double v295;
  int v297;
  char v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  char *v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  _OWORD *v316;
  char *v317;
  uint64_t v318;
  _OWORD *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  double v335;
  double v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  _QWORD *v341;
  uint64_t v342;
  void *v343;
  uint64_t v344;
  __int128 v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  int *v349;
  id v350;
  char *v351;
  uint64_t v352;
  char *v353;
  void (*v354)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  char *v359;
  char *v360;
  char *v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  _QWORD v365[5];
  _QWORD v366[2];
  uint64_t v367;
  uint64_t v368;
  __int128 v369;
  __int128 v370;
  void *v371;
  __int128 v372;
  __int128 v373;
  uint64_t v374;
  __int128 v375;
  __int128 v376;
  void *v377;
  uint64_t v378;
  uint64_t v379;

  v338 = a8;
  v319 = a7;
  v344 = a6;
  *((_QWORD *)&v345 + 1) = a5;
  *(_QWORD *)&v345 = a4;
  v316 = a3;
  v354 = a2;
  v349 = a1;
  v336 = a10;
  v335 = a9;
  v358 = a20;
  v314 = type metadata accessor for AspectRatio(0);
  v313 = *(_QWORD *)(v314 - 8);
  v28 = __chkstk_darwin(v314);
  v312 = (char *)&v300 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308 = type metadata accessor for FontSource(0, v28);
  v307 = *(_QWORD *)(v308 - 8);
  __chkstk_darwin(v308);
  v306 = (char *)&v300 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v311 = type metadata accessor for StaticDimension(0);
  v310 = *(_QWORD *)(v311 - 8);
  v31 = __chkstk_darwin(v311);
  v309 = (char *)&v300 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v331 = type metadata accessor for TitleHeaderLayout.AccessoryHorizontalAlignment(0, v31);
  v330 = *(_QWORD *)(v331 - 8);
  v33 = __chkstk_darwin(v331);
  v323 = (char *)&v300 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v33);
  v327 = *(_QWORD *)(v328 - 8);
  v35 = __chkstk_darwin(v328);
  v329 = (char *)&v300 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v35);
  v324 = *(_QWORD *)(v325 - 8);
  v37 = __chkstk_darwin(v325);
  v326 = (char *)&v300 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v334 = type metadata accessor for TitleHeaderLayout(0, v37);
  v333 = *(_QWORD *)(v334 - 8);
  v39 = __chkstk_darwin(v334);
  v332 = (char *)&v300 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for TitleHeaderLayout.Child(0, v39);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v317 = (char *)&v300 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v304 = (char *)&v300 - v45;
  __chkstk_darwin(v46);
  v362 = (char *)&v300 - v47;
  __chkstk_darwin(v48);
  v357 = (char *)&v300 - v49;
  __chkstk_darwin(v50);
  v361 = (char *)&v300 - v51;
  __chkstk_darwin(v52);
  v356 = (char *)&v300 - v53;
  __chkstk_darwin(v54);
  v56 = (char *)&v300 - v55;
  v57 = sub_10000DF3C(&qword_1007FADD8);
  v58 = __chkstk_darwin(v57);
  v340 = (char *)&v300 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = type metadata accessor for LabelPlaceholderCompatibility(0, v58);
  v347 = *(_QWORD *)(v348 - 8);
  v60 = __chkstk_darwin(v348);
  v346 = (char *)&v300 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v342 = type metadata accessor for CharacterSet(0, v60);
  v62 = *(_QWORD *)(v342 - 8);
  __chkstk_darwin(v342);
  v64 = (char *)&v300 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = (_QWORD *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v339 = *(v65 - 1);
  __chkstk_darwin(v65);
  v355 = (uint64_t)&v300 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v337 = (uint64_t)&v300 - v68;
  __chkstk_darwin(v69);
  v71 = (char *)&v300 - v70;
  v322 = sub_10000DF3C(&qword_1007FAF58);
  v321 = *(_QWORD *)(v322 - 8);
  __chkstk_darwin(v322);
  v305 = (uint64_t)&v300 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v73);
  v318 = (uint64_t)&v300 - v74;
  __chkstk_darwin(v75);
  v359 = (char *)&v300 - v76;
  __chkstk_darwin(v77);
  v364 = (uint64_t)&v300 - v78;
  __chkstk_darwin(v79);
  v360 = (char *)&v300 - v80;
  __chkstk_darwin(v81);
  v363 = (uint64_t)&v300 - v82;
  __chkstk_darwin(v83);
  v303 = (char *)&v300 - v84;
  __chkstk_darwin(v85);
  v352 = (uint64_t)&v300 - v86;
  __chkstk_darwin(v87);
  v315 = (char *)&v300 - v88;
  *(_QWORD *)&v90 = __chkstk_darwin(v89).n128_u64[0];
  v92 = (char *)&v300 - v91;
  v343 = a22;
  v93 = objc_msgSend(a22, "traitCollection", v90);
  v353 = v56;
  v94 = v354;
  v351 = v92;
  v341 = v65;
  v350 = v93;
  v320 = v62;
  if (!v354)
  {
    v354 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v42 + 56);
    v354(v92, 1, 1, v41);
    v101 = v64;
    v120 = v338;
    goto LABEL_18;
  }
  v95 = v93;
  sub_10009E894(v358, (uint64_t)v71, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  v96 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(&v71[*((int *)v65 + 6)], v95);
  *(_QWORD *)&v375 = v349;
  *((_QWORD *)&v375 + 1) = v94;
  v97 = swift_bridgeObjectRetain(v94);
  static CharacterSet.excessiveLeading.getter(v97);
  v98 = sub_1000C0FAC();
  StringProtocol.rangeOfCharacter(from:options:range:)(v64, 0, 0, 0, 1, &type metadata for String, v98);
  v100 = v99;
  v101 = v64;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v342);
  *(_QWORD *)&v102 = swift_bridgeObjectRelease(*((_QWORD *)&v375 + 1)).n128_u64[0];
  v103 = 0;
  v104 = v316;
  if ((v100 & 1) == 0)
  {
    objc_msgSend(v96, "lineHeight", v102);
    v106 = ceil(v105 * 1.3);
    if ((~*(_QWORD *)&v106 & 0x7FF0000000000000) != 0)
    {
      if (v106 > -9.22337204e18)
      {
        if (v106 < 9.22337204e18)
        {
          v103 = (uint64_t)v106;
          goto LABEL_7;
        }
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_92;
  }
LABEL_7:
  v302 = v71;
  v301 = v103;
  if (!v104)
  {
    v120 = v338;
LABEL_16:
    v119 = 0;
    v377 = 0;
    v375 = 0u;
    v376 = 0u;
    goto LABEL_17;
  }
  v107 = v96;
  swift_retain(v104);
  dispatch thunk of Artwork.systemImageName.getter(v108);
  if (v109
    && (v110 = v109,
        v111 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v96), v112 = String._bridgeToObjectiveC()(), swift_bridgeObjectRelease(v110), v113 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v112, v111), v112, v111, v113))
  {
    objc_msgSend(v113, "size");
    v115 = v114;
    v117 = v116;
    v118 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
    v119 = LayoutViewPlaceholder.init(representing:)(v115, v117);
    swift_release(v104);

  }
  else
  {
    v121 = *(float *)(v358 + *((int *)v341 + 11));
    v122 = v358 + *((int *)v341 + 6);
    v123 = type metadata accessor for FontUseCase(0);
    v124 = v104;
    v125 = v306;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v306, v122, v123);
    v126 = v307;
    v127 = v308;
    (*(void (**)(char *, _QWORD, uint64_t))(v307 + 104))(v125, enum case for FontSource.useCase(_:), v308);
    *((_QWORD *)&v376 + 1) = v127;
    v377 = &protocol witness table for FontSource;
    v128 = sub_1000117C0(&v375);
    (*(void (**)(_QWORD *, char *, uint64_t))(v126 + 16))(v128, v125, v127);
    swift_retain(v124);
    v129 = v309;
    StaticDimension.init(_:scaledLike:)(&v375, v121);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
    v130 = StaticDimension.rawValue(in:)(v343);
    v132 = v131;
    Artwork.size.getter(v130);
    v133 = v312;
    AspectRatio.init(_:_:)(v134);
    v135 = AspectRatio.maxSize(fitting:)(v132, v132);
    v137 = v136;
    (*(void (**)(char *, uint64_t))(v313 + 8))(v133, v314);
    (*(void (**)(char *, uint64_t))(v310 + 8))(v129, v311);
    swift_release(v124);
    v138 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v138, *(unsigned int *)(v138 + 48), *(unsigned __int16 *)(v138 + 52));
    v119 = LayoutViewPlaceholder.init(representing:)(v135, v137);
    swift_release(v124);
  }
  v65 = v341;
  v120 = v338;
  v96 = v107;
  if (!v119)
    goto LABEL_16;
  *((_QWORD *)&v376 + 1) = type metadata accessor for LayoutViewPlaceholder(0);
  v377 = &protocol witness table for LayoutViewPlaceholder;
  *(_QWORD *)&v375 = v119;
LABEL_17:
  v374 = 0;
  v372 = 0u;
  v373 = 0u;
  v371 = 0;
  v370 = 0u;
  v369 = 0u;
  v139 = type metadata accessor for Feature(0);
  v367 = v139;
  v368 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v140 = sub_1000117C0(v366);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v139 - 8) + 104))(v140, enum case for Feature.measurement_with_labelplaceholder(_:), v139);
  v141 = v354;
  swift_bridgeObjectRetain(v354);
  v142 = v96;
  swift_retain(v119);
  LOBYTE(v139) = isFeatureEnabled(_:)(v366);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v366);
  v298 = v139 & 1;
  v143 = v346;
  v144 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v349, v141, v142, 4, 0, v301, 1, 0, v298);
  LabelPlaceholderCompatibility.layoutTextView.getter(v366, v144);
  (*(void (**)(char *, uint64_t))(v347 + 8))(v143, v348);
  v145 = (uint64_t)v315;
  v146 = (uint64_t)v302;
  sub_1000E5A10((uint64_t)&v375, v366, (uint64_t)&v372, (uint64_t)&v369);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v366);
  swift_release(v119);

  sub_100011088((uint64_t)&v369, &qword_1007FD370);
  sub_100011088((uint64_t)&v372, &qword_1007FD370);
  sub_10002F0D4(v146, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100011088((uint64_t)&v375, &qword_1007FAF60);
  v354 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v42 + 56);
  v354(v145, 0, 1, v41);
  sub_10006C29C(v145, (uint64_t)v351, &qword_1007FAF58);
LABEL_18:
  v62 = type metadata accessor for TitleHeaderView.Style(0);
  v147 = (uint64_t)v340;
  sub_1000194E4(v358 + *(int *)(v62 + 24), (uint64_t)v340, &qword_1007FADD8);
  v148 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v339 + 48))(v147, 1, v65);
  v96 = v360;
  v349 = (int *)v62;
  if (v148 == 1)
  {
    sub_100011088(v147, &qword_1007FADD8);
    v149 = v354;
    v354(v352, 1, 1, v41);
    v377 = 0;
    v150 = 0uLL;
    v375 = 0u;
    v376 = 0u;
  }
  else
  {
    v151 = v337;
    sub_10009055C(v147, v337, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    v152 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v151 + *((int *)v65 + 6), v350);
    if (v120)
    {
      *(_QWORD *)&v375 = v319;
      *((_QWORD *)&v375 + 1) = v120;
      v153 = swift_bridgeObjectRetain(v120);
      static CharacterSet.excessiveLeading.getter(v153);
      v154 = sub_1000C0FAC();
      StringProtocol.rangeOfCharacter(from:options:range:)(v101, 0, 0, 0, 1, &type metadata for String, v154);
      v100 = v155;
      (*(void (**)(char *, uint64_t))(v320 + 8))(v101, v342);
      *(_QWORD *)&v156 = swift_bridgeObjectRelease(*((_QWORD *)&v375 + 1)).n128_u64[0];
      v104 = 0;
      if ((v100 & 1) == 0)
      {
        objc_msgSend(v152, "lineHeight", v156);
        v158 = ceil(v157 * 1.3);
        if ((~*(_QWORD *)&v158 & 0x7FF0000000000000) == 0)
        {
LABEL_96:
          __break(1u);
          goto LABEL_97;
        }
        if (v158 <= -9.22337204e18)
        {
LABEL_97:
          __break(1u);
          goto LABEL_98;
        }
        if (v158 >= 9.22337204e18)
        {
LABEL_98:
          __break(1u);
          goto LABEL_99;
        }
        v104 = (_OWORD *)(uint64_t)v158;
      }
    }
    else
    {
      v104 = 0;
    }
    if (*(_BYTE *)(v358 + *(int *)(v62 + 36)) == 2)
    {
      v338 = a18;
      v339 = a17;
      v159 = v152;
      v160 = type metadata accessor for Feature(0);
      *((_QWORD *)&v376 + 1) = v160;
      v161 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v377 = (void *)v161;
      v162 = sub_1000117C0(&v375);
      v163 = enum case for Feature.measurement_with_labelplaceholder(_:);
      v316 = *(_OWORD **)(*(_QWORD *)(v160 - 8) + 104);
      ((void (*)(_QWORD *, _QWORD, uint64_t))v316)(v162, enum case for Feature.measurement_with_labelplaceholder(_:), v160);
      swift_bridgeObjectRetain(v120);
      v164 = v159;
      LOBYTE(v159) = isFeatureEnabled(_:)(&v375);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v375);
      LOBYTE(v297) = v159 & 1;
      v165 = v346;
      v166 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v319, v120, v164, 4, 0, v104, 1, 0, v297);
      LabelPlaceholderCompatibility.layoutTextView.getter(&v375, v166);
      v167 = *(void (**)(char *, uint64_t))(v347 + 8);
      v340 = v101;
      v319 = v104;
      v168 = v348;
      v167(v165, v348);
      *((_QWORD *)&v373 + 1) = v160;
      v374 = v161;
      v96 = v360;
      v169 = sub_1000117C0(&v372);
      v170 = v163;
      v62 = (uint64_t)v349;
      ((void (*)(_QWORD *, uint64_t, uint64_t))v316)(v169, v170, v160);
      v171 = v338;
      swift_bridgeObjectRetain(v338);
      v172 = v164;
      LOBYTE(v164) = isFeatureEnabled(_:)(&v372);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v372);
      v173 = v164 & 1;
      v65 = v341;
      LOBYTE(v299) = v173;
      v174 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v339, v171, v172, 4, 0, v319, 1, 0, v299);
      LabelPlaceholderCompatibility.layoutTextView.getter(&v369, v174);
      v101 = v340;
      v167(v165, v168);

      sub_10002F0D4(v337, type metadata accessor for TitleHeaderView.TextConfiguration);
      sub_10006C29C((uint64_t)&v369, (uint64_t)&v372, &qword_1007FD370);
      v149 = v354;
      v354(v352, 1, 1, v41);
      goto LABEL_31;
    }
    v377 = 0;
    v375 = 0u;
    v376 = 0u;
    v374 = 0;
    v372 = 0u;
    v373 = 0u;
    v371 = 0;
    v370 = 0u;
    v369 = 0u;
    v175 = type metadata accessor for Feature(0);
    v367 = v175;
    v368 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v176 = sub_1000117C0(v366);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v175 - 8) + 104))(v176, enum case for Feature.measurement_with_labelplaceholder(_:), v175);
    swift_bridgeObjectRetain(v120);
    v177 = v152;
    LOBYTE(v175) = isFeatureEnabled(_:)(v366);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v366);
    LOBYTE(v297) = v175 & 1;
    v178 = v346;
    v179 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v319, v120, v177, 4, 0, v104, 1, 0, v297);
    LabelPlaceholderCompatibility.layoutTextView.getter(v366, v179);
    (*(void (**)(char *, uint64_t))(v347 + 8))(v178, v348);
    v180 = (uint64_t)v303;
    v181 = v337;
    sub_1000E5A10((uint64_t)&v375, v366, (uint64_t)&v372, (uint64_t)&v369);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v366);

    sub_100011088((uint64_t)&v369, &qword_1007FD370);
    sub_100011088((uint64_t)&v372, &qword_1007FD370);
    sub_100011088((uint64_t)&v375, &qword_1007FAF60);
    sub_10002F0D4(v181, type metadata accessor for TitleHeaderView.TextConfiguration);
    v149 = v354;
    v354(v180, 0, 1, v41);
    sub_10006C29C(v180, v352, &qword_1007FAF58);
    v150 = 0uLL;
    v375 = 0u;
    v376 = 0u;
    v377 = 0;
  }
  v372 = v150;
  v373 = v150;
  v374 = 0;
LABEL_31:
  v62 = v358 + *(int *)(v62 + 20);
  v182 = v355;
  sub_10009E894(v62, v355, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  v104 = (_OWORD *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v182 + *((int *)v65 + 6), v350);
  v183 = *((_QWORD *)&v345 + 1);
  if (*((_QWORD *)&v345 + 1))
  {
    v369 = v345;
    v184 = swift_bridgeObjectRetain(*((_QWORD *)&v345 + 1));
    static CharacterSet.excessiveLeading.getter(v184);
    v185 = sub_1000C0FAC();
    StringProtocol.rangeOfCharacter(from:options:range:)(v101, 0, 0, 0, 1, &type metadata for String, v185);
    v100 = v186;
    (*(void (**)(char *, uint64_t))(v320 + 8))(v101, v342);
    *(_QWORD *)&v187 = swift_bridgeObjectRelease(*((_QWORD *)&v369 + 1)).n128_u64[0];
    v188 = 0;
    if ((v100 & 1) != 0)
      goto LABEL_38;
    objc_msgSend(v104, "lineHeight", v187);
    v190 = ceil(v189 * 1.3);
    if ((~*(_QWORD *)&v190 & 0x7FF0000000000000) != 0)
    {
      if (v190 > -9.22337204e18)
      {
        if (v190 < 9.22337204e18)
        {
          v188 = (uint64_t)v190;
          goto LABEL_38;
        }
        goto LABEL_95;
      }
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v188 = 0;
LABEL_38:
  v340 = (char *)a19;
  v354 = v149;
  v342 = v188;
  if (v344)
  {
    swift_retain(v344);
    dispatch thunk of Artwork.systemImageName.getter(v191);
    if (!v192)
      goto LABEL_42;
    v193 = v192;
    v194 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v104);
    v195 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v193);
    v196 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v195, v194);

    v65 = v341;
    v96 = v360;
    if (v196)
    {
      v197 = v104;
      objc_msgSend(v196, "size");
      v199 = v198;
      v201 = v200;
      v202 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v202, *(unsigned int *)(v202 + 48), *(unsigned __int16 *)(v202 + 52));
      v203 = LayoutViewPlaceholder.init(representing:)(v199, v201);
      swift_release(v344);

    }
    else
    {
LABEL_42:
      v197 = v104;
      v204 = *(float *)(v62 + *((int *)v65 + 11));
      v205 = v62 + *((int *)v65 + 6);
      v206 = type metadata accessor for FontUseCase(0);
      v207 = v306;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v306, v205, v206);
      v208 = v307;
      v209 = v308;
      (*(void (**)(char *, _QWORD, uint64_t))(v307 + 104))(v207, enum case for FontSource.useCase(_:), v308);
      *((_QWORD *)&v370 + 1) = v209;
      v371 = &protocol witness table for FontSource;
      v210 = sub_1000117C0(&v369);
      (*(void (**)(_QWORD *, char *, uint64_t))(v208 + 16))(v210, v207, v209);
      v211 = v344;
      swift_retain(v344);
      v212 = v309;
      StaticDimension.init(_:scaledLike:)(&v369, v204);
      (*(void (**)(char *, uint64_t))(v208 + 8))(v207, v209);
      v213 = StaticDimension.rawValue(in:)(v343);
      v215 = v214;
      Artwork.size.getter(v213);
      v216 = v312;
      AspectRatio.init(_:_:)(v217);
      v218 = AspectRatio.maxSize(fitting:)(v215, v215);
      v220 = v219;
      (*(void (**)(char *, uint64_t))(v313 + 8))(v216, v314);
      (*(void (**)(char *, uint64_t))(v310 + 8))(v212, v311);
      swift_release(v211);
      v221 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v221, *(unsigned int *)(v221 + 48), *(unsigned __int16 *)(v221 + 52));
      v203 = LayoutViewPlaceholder.init(representing:)(v218, v220);
      swift_release(v211);
    }
    v222 = (uint64_t)v359;
    v223 = (uint64_t)v340;
    v183 = *((_QWORD *)&v345 + 1);
    if (v203)
    {
      v224 = type metadata accessor for LayoutViewPlaceholder(0);
      v371 = &protocol witness table for LayoutViewPlaceholder;
      *((_QWORD *)&v370 + 1) = v224;
      *(_QWORD *)&v369 = v203;
      goto LABEL_47;
    }
  }
  else
  {
    v197 = v104;
    v222 = (uint64_t)v359;
    v223 = (uint64_t)v340;
  }
  v203 = 0;
  v371 = 0;
  v370 = 0u;
  v369 = 0u;
LABEL_47:
  v225 = type metadata accessor for Feature(0);
  v367 = v225;
  v368 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v226 = sub_1000117C0(v366);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v225 - 8) + 104))(v226, enum case for Feature.measurement_with_labelplaceholder(_:), v225);
  swift_bridgeObjectRetain(v183);
  v227 = v197;
  swift_retain(v203);
  LOBYTE(v225) = isFeatureEnabled(_:)(v366);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v366);
  LOBYTE(v297) = v225 & 1;
  v228 = v346;
  v229 = v345;
  *(_QWORD *)&v345 = v227;
  v230 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v229, v183, v227, 4, 0, v342, v223, 0, v297);
  LabelPlaceholderCompatibility.layoutTextView.getter(v366, v230);
  (*(void (**)(char *, uint64_t))(v347 + 8))(v228, v348);
  sub_1000E5A10((uint64_t)&v369, v366, (uint64_t)&v375, (uint64_t)&v372);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v366);
  sub_100011088((uint64_t)&v369, &qword_1007FAF60);
  v231 = *(unsigned __int8 *)(v358 + v349[9]);
  *((_QWORD *)&v345 + 1) = v203;
  if (!v231)
  {
    v245 = sub_10000DF3C(&qword_1007FAF68);
    v246 = *(_QWORD *)(v321 + 72);
    v247 = *(unsigned __int8 *)(v321 + 80);
    v248 = (v247 + 32) & ~v247;
    v249 = swift_allocObject(v245, v248 + 3 * v246, v247 | 7);
    *(_OWORD *)(v249 + 16) = xmmword_10066F860;
    v364 = v249;
    v250 = v249 + v248;
    sub_1000194E4((uint64_t)v351, v250, &qword_1007FAF58);
    sub_1000194E4(v352, v250 + v246, &qword_1007FAF58);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v250 + 2 * v246, v353, v41);
    v354(v250 + 2 * v246, 0, 1, v41);
    v65 = _swiftEmptyArrayStorage;
    v251 = 3;
    v362 = (char *)v250;
    v252 = v250;
    do
    {
      v253 = v363;
      sub_1000194E4(v252, v363, &qword_1007FAF58);
      sub_10006C29C(v253, (uint64_t)v96, &qword_1007FAF58);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v42 + 48))(v96, 1, v41) == 1)
      {
        sub_100011088((uint64_t)v96, &qword_1007FAF58);
      }
      else
      {
        v254 = *(void (**)(char *, void *, uint64_t))(v42 + 32);
        v255 = v356;
        v254(v356, v96, v41);
        v254(v361, v255, v41);
        if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
          v65 = (_QWORD *)sub_100201DA4(0, v65[2] + 1, 1, (unint64_t)v65);
        v257 = v65[2];
        v256 = v65[3];
        if (v257 >= v256 >> 1)
          v65 = (_QWORD *)sub_100201DA4(v256 > 1, v257 + 1, 1, (unint64_t)v65);
        v65[2] = v257 + 1;
        v254((char *)v65+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v257, v361, v41);
        v96 = v360;
      }
      v252 += v246;
      --v251;
    }
    while (v251);
    v266 = v364;
    swift_setDeallocating(v364);
    v267 = *(_QWORD *)(v266 + 16);
    v268 = &v379;
    goto LABEL_72;
  }
  v232 = v354;
  if (v231 == 1)
  {
    v233 = sub_10000DF3C(&qword_1007FAF68);
    v234 = *(_QWORD *)(v321 + 72);
    v235 = *(unsigned __int8 *)(v321 + 80);
    v236 = (v235 + 32) & ~v235;
    v237 = swift_allocObject(v233, v236 + 3 * v234, v235 | 7);
    *(_OWORD *)(v237 + 16) = xmmword_10066F860;
    v363 = v237;
    v238 = v237 + v236;
    sub_1000194E4((uint64_t)v351, v237 + v236, &qword_1007FAF58);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v238 + v234, v353, v41);
    v232(v238 + v234, 0, 1, v41);
    sub_1000194E4(v352, v238 + 2 * v234, &qword_1007FAF58);
    v65 = _swiftEmptyArrayStorage;
    v239 = 3;
    v361 = (char *)v238;
    do
    {
      v240 = v364;
      sub_1000194E4(v238, v364, &qword_1007FAF58);
      sub_10006C29C(v240, v222, &qword_1007FAF58);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v222, 1, v41) == 1)
      {
        sub_100011088(v222, &qword_1007FAF58);
      }
      else
      {
        v241 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
        v242 = v357;
        v241(v357, v222, v41);
        v241(v362, (uint64_t)v242, v41);
        if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
          v65 = (_QWORD *)sub_100201DA4(0, v65[2] + 1, 1, (unint64_t)v65);
        v244 = v65[2];
        v243 = v65[3];
        if (v244 >= v243 >> 1)
          v65 = (_QWORD *)sub_100201DA4(v243 > 1, v244 + 1, 1, (unint64_t)v65);
        v65[2] = v244 + 1;
        v241((char *)v65+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v244, (uint64_t)v362, v41);
        v222 = (uint64_t)v359;
      }
      v238 += v234;
      --v239;
    }
    while (v239);
    v266 = v363;
    swift_setDeallocating(v363);
    v267 = *(_QWORD *)(v266 + 16);
    v268 = &v378;
LABEL_72:
    swift_arrayDestroy(*(v268 - 32), v267, v322);
    swift_deallocClassInstance(v266, 32, 7);
    v269 = v349;
    goto LABEL_85;
  }
  v258 = sub_10000DF3C(&qword_1007FAF68);
  v259 = *(_QWORD *)(v321 + 72);
  v260 = *(unsigned __int8 *)(v321 + 80);
  v261 = (v260 + 32) & ~v260;
  v104 = (_OWORD *)swift_allocObject(v258, v261 + 2 * v259, v260 | 7);
  v104[1] = xmmword_10066F870;
  v100 = (uint64_t)v104 + v261;
  sub_1000194E4((uint64_t)v351, v100, &qword_1007FAF58);
  v96 = (void *)(v100 + v259);
  (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v96, v353, v41);
  v232((uint64_t)v96, 0, 1, v41);
  v262 = v318;
  sub_1000194E4(v100, v318, &qword_1007FAF58);
  v263 = v305;
  sub_10006C29C(v262, v305, &qword_1007FAF58);
  v101 = *(char **)(v42 + 48);
  v264 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v101)(v263, 1, v41);
  if (v264 != 1)
  {
    v62 = *(_QWORD *)(v42 + 32);
    v270 = v304;
    ((void (*)(char *, uint64_t, uint64_t))v62)(v304, v263, v41);
    ((void (*)(char *, char *, uint64_t))v62)(v317, v270, v41);
    v65 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) != 0)
    {
LABEL_74:
      v272 = v65[2];
      v271 = v65[3];
      if (v272 >= v271 >> 1)
        v65 = (_QWORD *)sub_100201DA4(v271 > 1, v272 + 1, 1, (unint64_t)v65);
      v65[2] = v272 + 1;
      ((void (*)(char *, char *, uint64_t))v62)((char *)v65+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v272, v317, v41);
      v265 = v305;
      goto LABEL_77;
    }
LABEL_99:
    v65 = (_QWORD *)sub_100201DA4(0, v65[2] + 1, 1, (unint64_t)v65);
    goto LABEL_74;
  }
  sub_100011088(v263, &qword_1007FAF58);
  v265 = v263;
  v65 = _swiftEmptyArrayStorage;
LABEL_77:
  v273 = (uint64_t)v96;
  v274 = v318;
  sub_1000194E4(v273, v318, &qword_1007FAF58);
  sub_10006C29C(v274, v265, &qword_1007FAF58);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v101)(v265, 1, v41) == 1)
  {
    sub_100011088(v265, &qword_1007FAF58);
    v269 = v349;
  }
  else
  {
    v275 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
    v276 = v304;
    v275(v304, v265, v41);
    v275(v317, (uint64_t)v276, v41);
    if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
      v65 = (_QWORD *)sub_100201DA4(0, v65[2] + 1, 1, (unint64_t)v65);
    v269 = v349;
    v278 = v65[2];
    v277 = v65[3];
    if (v278 >= v277 >> 1)
      v65 = (_QWORD *)sub_100201DA4(v277 > 1, v278 + 1, 1, (unint64_t)v65);
    v65[2] = v278 + 1;
    v275((char *)v65+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v278, (uint64_t)v317, v41);
  }
  swift_setDeallocating(v104);
  swift_arrayDestroy(v100, *((_QWORD *)v104 + 2), v322);
  swift_deallocClassInstance(v104, 32, 7);
LABEL_85:
  if (a11 == 0.0 && a12 == 0.0)
  {
    v371 = 0;
    v370 = 0u;
    v369 = 0u;
  }
  else
  {
    v279 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v279, *(unsigned int *)(v279 + 48), *(unsigned __int16 *)(v279 + 52));
    v280 = LayoutViewPlaceholder.init(representing:)(a11, a12);
    v371 = &protocol witness table for LayoutViewPlaceholder;
    *((_QWORD *)&v370 + 1) = v279;
    *(_QWORD *)&v369 = v280;
  }
  v281 = v323;
  sub_1000194E4((uint64_t)&v369, (uint64_t)v366, &qword_1007FAF60);
  v282 = v358;
  v283 = *(_QWORD *)(v358 + v269[14]);
  v365[3] = &type metadata for CGFloat;
  v365[4] = &protocol witness table for CGFloat;
  v365[0] = v283;
  v284 = v326;
  (*(void (**)(char *, uint64_t, uint64_t))(v324 + 16))(v326, v358 + v269[10], v325);
  v285 = v282 + v269[11];
  v286 = v329;
  (*(void (**)(char *, uint64_t, uint64_t))(v327 + 16))(v329, v285, v328);
  (*(void (**)(char *, _QWORD, uint64_t))(v330 + 104))(v281, enum case for TitleHeaderLayout.AccessoryHorizontalAlignment.rightJustified(_:), v331);
  v287 = v332;
  v288 = TitleHeaderLayout.init(accessoryView:accessoryMargin:accessoryVerticalAlignment:accessoryHorizontalAlignment:children:childrenHorizontalAlignment:allowsAccessibilityLayouts:)(v366, v365, v284, v281, v65, v286, a21 & 1);
  v289 = CGSize.subtracting(insets:)(v288);
  v291 = v290;
  v292 = sub_10000E99C((unint64_t *)&unk_1007FAF70, (uint64_t (*)(uint64_t))&type metadata accessor for TitleHeaderLayout, (uint64_t)&protocol conformance descriptor for TitleHeaderLayout);
  v293 = v334;
  v366[0] = dispatch thunk of Measurable.measurements(fitting:in:)(v343, v334, v292, v289, v291);
  v366[1] = v294;
  CGSize.add(outsets:)(a13, a14, a15, a16);
  sub_1000F0E5C(v282);
  swift_release(*((_QWORD *)&v345 + 1));

  (*(void (**)(char *, uint64_t))(v333 + 8))(v287, v293);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v353, v41);
  sub_10002F0D4(v355, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100011088((uint64_t)&v372, &qword_1007FD370);
  sub_100011088((uint64_t)&v375, &qword_1007FD370);
  sub_100011088(v352, &qword_1007FAF58);
  sub_100011088((uint64_t)v351, &qword_1007FAF58);
  v295 = *(double *)v366;
  sub_100011088((uint64_t)&v369, &qword_1007FAF60);
  return v295;
}

BOOL sub_1000EF958(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  char v54;
  double v55;
  double v56;
  int *v57;
  float v58;
  float v59;
  int *v60;
  char v61;
  float v62;
  float v63;
  _BYTE v64[4];
  int v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  _BYTE *v74;

  v4 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v4);
  v73 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v67 = &v64[-v7];
  __chkstk_darwin(v8);
  v71 = &v64[-v9];
  __chkstk_darwin(v10);
  v72 = &v64[-v11];
  __chkstk_darwin(v12);
  v69 = &v64[-v13];
  __chkstk_darwin(v14);
  v70 = &v64[-v15];
  __chkstk_darwin(v16);
  v74 = &v64[-v17];
  __chkstk_darwin(v18);
  v68 = &v64[-v19];
  __chkstk_darwin(v20);
  v66 = &v64[-v21];
  __chkstk_darwin(v22);
  v24 = &v64[-v23];
  __chkstk_darwin(v25);
  v27 = &v64[-v26];
  __chkstk_darwin(v28);
  v30 = &v64[-v29];
  __chkstk_darwin(v31);
  v33 = &v64[-v32];
  __chkstk_darwin(v34);
  v36 = &v64[-v35];
  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  v37 = static NSObject.== infix(_:_:)(*a1, *a2);
  sub_10009E894((uint64_t)a1, (uint64_t)v36, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a2, (uint64_t)v33, type metadata accessor for TitleHeaderView.TextConfiguration);
  if ((v37 & 1) == 0)
  {
    sub_10002F0D4((uint64_t)v33, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v36, type metadata accessor for TitleHeaderView.TextConfiguration);
LABEL_15:
    v43 = (uint64_t)v66;
    v44 = (uint64_t)v67;
    v45 = (uint64_t)v74;
    sub_10009E894((uint64_t)a1, (uint64_t)v30, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a2, (uint64_t)v27, type metadata accessor for TitleHeaderView.TextConfiguration);
    goto LABEL_16;
  }
  v38 = *((_QWORD *)v36 + 2);
  v39 = *((_QWORD *)v33 + 2);
  if (!v38)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v33 + 2));
    sub_10002F0D4((uint64_t)v33, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v36, type metadata accessor for TitleHeaderView.TextConfiguration);
    if (!v39)
    {
LABEL_23:
      sub_10009E894((uint64_t)a1, (uint64_t)v30, type metadata accessor for TitleHeaderView.TextConfiguration);
      sub_10009E894((uint64_t)a2, (uint64_t)v27, type metadata accessor for TitleHeaderView.TextConfiguration);
      v43 = (uint64_t)v66;
      v44 = (uint64_t)v67;
      goto LABEL_24;
    }
    v46 = v39;
    goto LABEL_14;
  }
  if (!v39)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v36 + 2));
    sub_10002F0D4((uint64_t)v33, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v36, type metadata accessor for TitleHeaderView.TextConfiguration);
    v46 = v38;
LABEL_14:
    swift_bridgeObjectRelease(v46);
    goto LABEL_15;
  }
  v40 = *((_QWORD *)v36 + 1);
  v41 = *((_QWORD *)v33 + 1);
  if (v40 == v41 && v38 == v39)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v36 + 2));
    sub_10002F0D4((uint64_t)v33, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v36, type metadata accessor for TitleHeaderView.TextConfiguration);
    swift_bridgeObjectRelease(v38);
    goto LABEL_23;
  }
  v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, *((_QWORD *)v36 + 2), v41, *((_QWORD *)v33 + 2), 0);
  swift_bridgeObjectRetain(v38);
  sub_10002F0D4((uint64_t)v33, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4((uint64_t)v36, type metadata accessor for TitleHeaderView.TextConfiguration);
  swift_bridgeObjectRelease(v38);
  sub_10009E894((uint64_t)a1, (uint64_t)v30, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a2, (uint64_t)v27, type metadata accessor for TitleHeaderView.TextConfiguration);
  v43 = (uint64_t)v66;
  v44 = (uint64_t)v67;
  v45 = (uint64_t)v74;
  if ((v65 & 1) == 0)
  {
LABEL_16:
    sub_10002F0D4((uint64_t)v27, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v30, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a1, (uint64_t)v24, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a2, v43, type metadata accessor for TitleHeaderView.TextConfiguration);
LABEL_17:
    sub_10002F0D4(v43, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v24, type metadata accessor for TitleHeaderView.TextConfiguration);
    v47 = v68;
    sub_10009E894((uint64_t)a1, (uint64_t)v68, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a2, v45, type metadata accessor for TitleHeaderView.TextConfiguration);
    v49 = (uint64_t)v71;
    v48 = (uint64_t)v72;
    v51 = (uint64_t)v69;
    v50 = (uint64_t)v70;
LABEL_18:
    sub_10002F0D4(v45, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4((uint64_t)v47, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a1, v50, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a2, v51, type metadata accessor for TitleHeaderView.TextConfiguration);
LABEL_19:
    sub_10002F0D4(v51, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4(v50, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a1, v48, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a2, v49, type metadata accessor for TitleHeaderView.TextConfiguration);
LABEL_20:
    sub_10002F0D4(v49, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4(v48, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10009E894((uint64_t)a1, v44, type metadata accessor for TitleHeaderView.TextConfiguration);
    v52 = v73;
    sub_10009E894((uint64_t)a2, (uint64_t)v73, type metadata accessor for TitleHeaderView.TextConfiguration);
LABEL_21:
    sub_10002F0D4((uint64_t)v52, type metadata accessor for TitleHeaderView.TextConfiguration);
    sub_10002F0D4(v44, type metadata accessor for TitleHeaderView.TextConfiguration);
    return 0;
  }
LABEL_24:
  v54 = static FontUseCase.== infix(_:_:)(&v30[*(int *)(v4 + 24)], &v27[*(int *)(v4 + 24)]);
  sub_10002F0D4((uint64_t)v27, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4((uint64_t)v30, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a1, (uint64_t)v24, type metadata accessor for TitleHeaderView.TextConfiguration);
  v45 = (uint64_t)v74;
  sub_10009E894((uint64_t)a2, v43, type metadata accessor for TitleHeaderView.TextConfiguration);
  if ((v54 & 1) == 0)
    goto LABEL_17;
  v55 = *(double *)&v24[*(int *)(v4 + 28)];
  sub_10002F0D4((uint64_t)v24, type metadata accessor for TitleHeaderView.TextConfiguration);
  v56 = *(double *)(v43 + *(int *)(v4 + 28));
  sub_10002F0D4(v43, type metadata accessor for TitleHeaderView.TextConfiguration);
  v47 = v68;
  sub_10009E894((uint64_t)a1, (uint64_t)v68, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a2, v45, type metadata accessor for TitleHeaderView.TextConfiguration);
  v57 = (int *)v4;
  v49 = (uint64_t)v71;
  v48 = (uint64_t)v72;
  v51 = (uint64_t)v69;
  v50 = (uint64_t)v70;
  if (v55 != v56)
    goto LABEL_18;
  v58 = *(float *)&v47[v57[8]];
  sub_10002F0D4((uint64_t)v47, type metadata accessor for TitleHeaderView.TextConfiguration);
  v59 = *(float *)(v45 + v57[8]);
  sub_10002F0D4(v45, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a1, v50, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a2, v51, type metadata accessor for TitleHeaderView.TextConfiguration);
  if (v58 != v59)
    goto LABEL_19;
  LODWORD(v74) = static StaticDimension.== infix(_:_:)(v50 + v57[9], v51 + v57[9]);
  v60 = v57;
  sub_10002F0D4(v51, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4(v50, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a1, v48, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a2, v49, type metadata accessor for TitleHeaderView.TextConfiguration);
  if ((v74 & 1) == 0)
    goto LABEL_20;
  v61 = static StaticDimension.== infix(_:_:)(v48 + v57[10], v49 + v57[10]);
  sub_10002F0D4(v49, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4(v48, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10009E894((uint64_t)a1, v44, type metadata accessor for TitleHeaderView.TextConfiguration);
  v52 = v73;
  sub_10009E894((uint64_t)a2, (uint64_t)v73, type metadata accessor for TitleHeaderView.TextConfiguration);
  if ((v61 & 1) == 0)
    goto LABEL_21;
  v62 = *(float *)(v44 + v60[11]);
  sub_10002F0D4(v44, type metadata accessor for TitleHeaderView.TextConfiguration);
  v63 = *(float *)&v52[v60[11]];
  sub_10002F0D4((uint64_t)v52, type metadata accessor for TitleHeaderView.TextConfiguration);
  return v62 == v63;
}

BOOL sub_1000F00F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  BOOL v50;
  int *v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BOOL8 v81;
  _QWORD *v83;
  _QWORD *v84;
  BOOL v85;
  int *v86;
  int v87;
  uint64_t v88;
  int v89;
  BOOL v90;
  int *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  char v97;
  uint64_t v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  char v103;
  id v104;
  char v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  _QWORD *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v4 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v116 = *(_QWORD *)(v4 - 8);
  v117 = v4;
  __chkstk_darwin(v4);
  v112 = (uint64_t *)((char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_1007FADD8);
  __chkstk_darwin(v6);
  v113 = (uint64_t *)((char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v115 = sub_10000DF3C(&qword_1007FAF90);
  __chkstk_darwin(v115);
  v9 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v118);
  v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v129 = (uint64_t)&v110 - v13;
  __chkstk_darwin(v14);
  v128 = (char *)&v110 - v15;
  __chkstk_darwin(v16);
  v127 = (char *)&v110 - v17;
  __chkstk_darwin(v18);
  v131 = (uint64_t)&v110 - v19;
  __chkstk_darwin(v20);
  v130 = (uint64_t)&v110 - v21;
  __chkstk_darwin(v22);
  v132 = (uint64_t)&v110 - v23;
  __chkstk_darwin(v24);
  v126 = (uint64_t)&v110 - v25;
  __chkstk_darwin(v26);
  v124 = (uint64_t)&v110 - v27;
  __chkstk_darwin(v28);
  v125 = (uint64_t)&v110 - v29;
  __chkstk_darwin(v30);
  v123 = (char *)&v110 - v31;
  __chkstk_darwin(v32);
  v122 = (uint64_t)&v110 - v33;
  __chkstk_darwin(v34);
  v121 = (char *)&v110 - v35;
  __chkstk_darwin(v36);
  v120 = (uint64_t)&v110 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v110 - v39;
  __chkstk_darwin(v41);
  v43 = (char *)&v110 - v42;
  __chkstk_darwin(v44);
  v46 = (char *)&v110 - v45;
  __chkstk_darwin(v47);
  v49 = (char *)&v110 - v48;
  v50 = sub_1000EF958(a1, a2);
  sub_10009E894((uint64_t)a1, (uint64_t)v49, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894((uint64_t)a2, (uint64_t)v46, type metadata accessor for TitleHeaderView.Style);
  v119 = a2;
  if (!v50)
  {
    sub_10002F0D4((uint64_t)v46, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4((uint64_t)v49, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894((uint64_t)a1, (uint64_t)v43, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894((uint64_t)a2, (uint64_t)v40, type metadata accessor for TitleHeaderView.Style);
    v53 = (uint64_t)a1;
    goto LABEL_7;
  }
  v111 = v9;
  v51 = v118;
  v52 = sub_1000EF958(&v49[v118[5]], &v46[v118[5]]);
  v114 = v11;
  sub_10002F0D4((uint64_t)v46, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v49, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894((uint64_t)a1, (uint64_t)v43, type metadata accessor for TitleHeaderView.Style);
  v11 = v114;
  sub_10009E894((uint64_t)a2, (uint64_t)v40, type metadata accessor for TitleHeaderView.Style);
  v53 = (uint64_t)a1;
  if (!v52)
  {
LABEL_7:
    v66 = v11;
    sub_10002F0D4((uint64_t)v40, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4((uint64_t)v43, type metadata accessor for TitleHeaderView.Style);
    v67 = v130;
    v70 = v132;
    v63 = (uint64_t)v123;
    v64 = (uint64_t)v121;
LABEL_8:
    v69 = (uint64_t)v119;
    v68 = v120;
    sub_10009E894(v53, v120, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894(v69, v64, type metadata accessor for TitleHeaderView.Style);
LABEL_9:
    sub_10002F0D4(v64, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v68, type metadata accessor for TitleHeaderView.Style);
    v71 = v122;
    sub_10009E894(v53, v122, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894(v69, v63, type metadata accessor for TitleHeaderView.Style);
LABEL_10:
    sub_10002F0D4(v63, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v71, type metadata accessor for TitleHeaderView.Style);
    v72 = v125;
    sub_10009E894(v53, v125, type metadata accessor for TitleHeaderView.Style);
    v73 = v124;
    sub_10009E894(v69, v124, type metadata accessor for TitleHeaderView.Style);
    v74 = (uint64_t)v127;
    v75 = (uint64_t)v66;
LABEL_11:
    sub_10002F0D4(v73, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v72, type metadata accessor for TitleHeaderView.Style);
    v76 = v126;
    sub_10009E894(v53, v126, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894(v69, v70, type metadata accessor for TitleHeaderView.Style);
LABEL_12:
    sub_10002F0D4(v70, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v76, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894(v53, v67, type metadata accessor for TitleHeaderView.Style);
    v77 = v131;
    sub_10009E894(v69, v131, type metadata accessor for TitleHeaderView.Style);
    v78 = (uint64_t)v128;
LABEL_13:
    sub_10002F0D4(v77, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v67, type metadata accessor for TitleHeaderView.Style);
LABEL_14:
    sub_10009E894(v53, v74, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894(v69, v78, type metadata accessor for TitleHeaderView.Style);
LABEL_15:
    sub_10002F0D4(v74, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v78, type metadata accessor for TitleHeaderView.Style);
    v79 = v53;
    v80 = v129;
    sub_10009E894(v79, v129, type metadata accessor for TitleHeaderView.Style);
    sub_10009E894(v69, v75, type metadata accessor for TitleHeaderView.Style);
    goto LABEL_16;
  }
  v54 = v51[6];
  v55 = &v40[v54];
  v56 = (uint64_t)v111;
  v57 = (uint64_t)&v111[*(int *)(v115 + 48)];
  sub_1000194E4((uint64_t)&v43[v54], (uint64_t)v111, &qword_1007FADD8);
  v58 = (uint64_t)v55;
  v59 = v56;
  sub_1000194E4(v58, v57, &qword_1007FADD8);
  v60 = v117;
  v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
  v62 = v61(v56, 1, v117);
  v63 = (uint64_t)v123;
  v64 = (uint64_t)v121;
  if (v62 == 1)
  {
    sub_10002F0D4((uint64_t)v40, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4((uint64_t)v43, type metadata accessor for TitleHeaderView.Style);
    v65 = v61(v57, 1, v60);
    v66 = v114;
    v67 = v130;
    if (v65 == 1)
    {
      sub_100011088((uint64_t)v111, &qword_1007FADD8);
      v68 = v120;
      sub_10009E894((uint64_t)a1, v120, type metadata accessor for TitleHeaderView.Style);
      v69 = (uint64_t)v119;
      sub_10009E894((uint64_t)v119, v64, type metadata accessor for TitleHeaderView.Style);
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  v83 = v113;
  sub_1000194E4(v59, (uint64_t)v113, &qword_1007FADD8);
  if (v61(v57, 1, v60) == 1)
  {
    sub_10002F0D4((uint64_t)v40, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4((uint64_t)v43, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4((uint64_t)v83, type metadata accessor for TitleHeaderView.TextConfiguration);
    v66 = v114;
    v67 = v130;
LABEL_20:
    sub_100011088((uint64_t)v111, &qword_1007FAF90);
    v70 = v132;
    goto LABEL_8;
  }
  v84 = v112;
  sub_10009055C(v57, (uint64_t)v112, type metadata accessor for TitleHeaderView.TextConfiguration);
  v85 = sub_1000EF958(v83, v84);
  sub_10002F0D4((uint64_t)v84, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_10002F0D4((uint64_t)v40, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v43, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v83, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100011088(v59, &qword_1007FADD8);
  v68 = v120;
  sub_10009E894(v53, v120, type metadata accessor for TitleHeaderView.Style);
  v69 = (uint64_t)v119;
  sub_10009E894((uint64_t)v119, v64, type metadata accessor for TitleHeaderView.Style);
  v66 = v114;
  v67 = v130;
  v70 = v132;
  if (!v85)
    goto LABEL_9;
LABEL_22:
  v86 = v118;
  v87 = *(unsigned __int8 *)(v68 + v118[7]);
  sub_10002F0D4(v68, type metadata accessor for TitleHeaderView.Style);
  v88 = v64;
  v89 = *(unsigned __int8 *)(v64 + v86[7]);
  sub_10002F0D4(v88, type metadata accessor for TitleHeaderView.Style);
  v71 = v122;
  sub_10009E894(v53, v122, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894(v69, v63, type metadata accessor for TitleHeaderView.Style);
  v90 = v87 == v89;
  v70 = v132;
  if (!v90)
    goto LABEL_10;
  v91 = v118;
  v92 = *(unsigned __int8 *)(v71 + v118[8]);
  sub_10002F0D4(v71, type metadata accessor for TitleHeaderView.Style);
  LODWORD(v91) = *(unsigned __int8 *)(v63 + v91[8]);
  sub_10002F0D4(v63, type metadata accessor for TitleHeaderView.Style);
  v93 = v125;
  sub_10009E894(v53, v125, type metadata accessor for TitleHeaderView.Style);
  v73 = v124;
  sub_10009E894(v69, v124, type metadata accessor for TitleHeaderView.Style);
  v90 = v92 == (_DWORD)v91;
  v72 = v93;
  v70 = v132;
  v74 = (uint64_t)v127;
  v75 = (uint64_t)v66;
  if (!v90)
    goto LABEL_11;
  v94 = v118[9];
  v95 = *(unsigned __int8 *)(v72 + v94);
  v96 = *(unsigned __int8 *)(v73 + v94);
  sub_10002F0D4(v73, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v72, type metadata accessor for TitleHeaderView.Style);
  v76 = v126;
  sub_10009E894(v53, v126, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894(v69, v132, type metadata accessor for TitleHeaderView.Style);
  v90 = v95 == v96;
  v70 = v132;
  if (!v90)
    goto LABEL_12;
  v97 = static TitleHeaderLayout.AccessoryVerticalAlignment.== infix(_:_:)(v76 + v118[10], v132 + v118[10]);
  sub_10002F0D4(v70, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v76, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894(v53, v67, type metadata accessor for TitleHeaderView.Style);
  v77 = v131;
  sub_10009E894(v69, v131, type metadata accessor for TitleHeaderView.Style);
  v78 = (uint64_t)v128;
  if ((v97 & 1) == 0)
    goto LABEL_13;
  v98 = v118[12];
  v99 = *(void **)(v67 + v98);
  v100 = *(void **)(v77 + v98);
  if (!v99)
  {
    v104 = v100;
    sub_10002F0D4(v77, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v67, type metadata accessor for TitleHeaderView.Style);
    if (!v100)
    {
      sub_10009E894(v53, v74, type metadata accessor for TitleHeaderView.Style);
      sub_10009E894(v69, v78, type metadata accessor for TitleHeaderView.Style);
      goto LABEL_35;
    }
LABEL_38:

    goto LABEL_14;
  }
  if (!v100)
  {
    v104 = v99;
    sub_10002F0D4(v131, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4(v130, type metadata accessor for TitleHeaderView.Style);
    goto LABEL_38;
  }
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v101 = v100;
  v102 = v99;
  v103 = static NSObject.== infix(_:_:)(v102, v101);
  sub_10002F0D4(v131, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v130, type metadata accessor for TitleHeaderView.Style);

  sub_10009E894(v53, v74, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894(v69, v78, type metadata accessor for TitleHeaderView.Style);
  if ((v103 & 1) == 0)
    goto LABEL_15;
LABEL_35:
  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  v105 = static NSObject.== infix(_:_:)(*(_QWORD *)(v74 + v118[13]), *(_QWORD *)(v78 + v118[13]));
  sub_10002F0D4(v74, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v78, type metadata accessor for TitleHeaderView.Style);
  v106 = v53;
  v80 = v129;
  sub_10009E894(v106, v129, type metadata accessor for TitleHeaderView.Style);
  sub_10009E894(v69, v75, type metadata accessor for TitleHeaderView.Style);
  if ((v105 & 1) != 0)
  {
    v108 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v107);
    v109 = sub_10000E99C((unint64_t *)&unk_1007FAF98, (uint64_t (*)(uint64_t))&type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment, (uint64_t)&protocol conformance descriptor for TitleHeaderLayout.ChildrenHorizontalAlignment);
    dispatch thunk of RawRepresentable.rawValue.getter(&v134, v108, v109);
    dispatch thunk of RawRepresentable.rawValue.getter(&v133, v108, v109);
    v81 = v134 == v133;
    goto LABEL_17;
  }
LABEL_16:
  v81 = 0;
LABEL_17:
  sub_10002F0D4(v75, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4(v80, type metadata accessor for TitleHeaderView.Style);
  return v81;
}

void sub_1000F0D24(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView];
  if (v4)
  {
    v5 = objc_opt_self(UIButton);
    v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
    if (v6)
      objc_msgSend(v6, "removeTarget:action:forControlEvents:", v1, "didTapWithAccessoryView:", 64);
    v7 = *(void **)&v1[v3];
    if (v7)
    {
      objc_msgSend(v7, "removeFromSuperview");
      v4 = *(void **)&v1[v3];
    }
    else
    {
      v4 = 0;
    }
  }
  *(_QWORD *)&v1[v3] = a1;
  v8 = a1;

  v14 = *(id *)&v1[v3];
  if (v14)
  {
    v9 = objc_opt_self(UIButton);
    v10 = swift_dynamicCastObjCClass(v14, v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = v14;
      objc_msgSend(v11, "addTarget:action:forControlEvents:", v1, "didTapWithAccessoryView:", 64);
    }
    else
    {
      v13 = v14;
    }
    objc_msgSend(v1, "addSubview:", v14);

  }
}

double sub_1000F0E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Main;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  double result;
  char *v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;

  v2 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - v6;
  Main = JUScreenClassGetMain(v8);
  sub_10009E894(a1, (uint64_t)v7, type metadata accessor for TitleHeaderView.Style);
  if (Main != 1)
  {
    sub_10002F0D4((uint64_t)v7, type metadata accessor for TitleHeaderView.Style);
    return 0.0;
  }
  v10 = &v7[*(int *)(v2 + 20)];
  if (qword_1007F1C58 != -1)
    swift_once(&qword_1007F1C58, sub_10030539C);
  v11 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v12 = (_QWORD *)sub_1000117A8(v11, (uint64_t)qword_100853C98);
  v13 = sub_1000EF958(v10, v12);
  sub_10009E894((uint64_t)v7, (uint64_t)v4, type metadata accessor for TitleHeaderView.Style);
  if (v13)
  {
    sub_10002F0D4((uint64_t)v4, type metadata accessor for TitleHeaderView.Style);
    sub_10002F0D4((uint64_t)v7, type metadata accessor for TitleHeaderView.Style);
    return 5.0;
  }
  v15 = &v4[*(int *)(v2 + 20)];
  if (qword_1007F1C60 != -1)
    swift_once(&qword_1007F1C60, sub_100305E38);
  v16 = (_QWORD *)sub_1000117A8(v11, (uint64_t)qword_100853CB0);
  v17 = sub_1000EF958(v15, v16);
  sub_10002F0D4((uint64_t)v4, type metadata accessor for TitleHeaderView.Style);
  sub_10002F0D4((uint64_t)v7, type metadata accessor for TitleHeaderView.Style);
  result = 5.0;
  if (!v17)
    return 0.0;
  return result;
}

void sub_1000F1030(void *a1, uint64_t *a2)
{
  char *v2;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;

  v4 = v2;
  v6 = type metadata accessor for DirectionalTextAlignment(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = *(void **)&v4[v10];
  if (v11)
  {
    objc_msgSend(v11, "removeFromSuperview");
    v12 = *(void **)&v4[v10];
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)&v4[v10] = a1;
  v13 = a1;

  v14 = *(void **)&v4[v10];
  if (v14)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DirectionalTextAlignment.leading(_:), v6);
    v15 = v14;
    dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v9);
    objc_msgSend(v4, "addSubview:", v15);

  }
}

uint64_t sub_1000F1124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TitleHeaderView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000F1168()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FAFD0;
  if (!qword_1007FAFD0)
  {
    v1 = sub_100010EF8(&qword_100802220);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1007FAFD0);
  }
  return result;
}

void sub_1000F11B4()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  _OWORD *v5;
  __int128 v6;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowText];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtwork] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_eyebrowArtworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtwork] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_titleArtworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_detailLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_shortDetailLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryView] = 0;
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessory];
  v3 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_accessoryAction];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_separatorInset];
  v6 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v5 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v5[1] = v6;
  v0[OBJC_IVAR____TtC22SubscribePageExtension15TitleHeaderView_allowsAccessibilityLayouts] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/TitleHeaderView.swift", 44, 2, 373, 0);
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for TitleHeaderView.Style.DetailPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000F1340 + 4 * byte_100675925[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000F1374 + 4 * byte_100675920[v4]))();
}

uint64_t sub_1000F1374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F137C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000F1384);
  return result;
}

uint64_t sub_1000F1390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000F1398);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000F139C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F13A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TitleHeaderView.Style.DetailPosition()
{
  return &type metadata for TitleHeaderView.Style.DetailPosition;
}

unint64_t sub_1000F13C4()
{
  unint64_t result;

  result = qword_1007FAFE8;
  if (!qword_1007FAFE8)
  {
    result = swift_getWitnessTable(&unk_100675AE8, &type metadata for TitleHeaderView.Style.DetailPosition);
    atomic_store(result, (unint64_t *)&qword_1007FAFE8);
  }
  return result;
}

uint64_t type metadata accessor for HeaderButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FB018;
  if (!qword_1007FB018)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeaderButton);
  return result;
}

uint64_t sub_1000F1444(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_1008519D8);
}

uint64_t sub_1000F1490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100045464(v0, qword_1007FAFF0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_1007FAFF0);
  if (qword_1007F2180 != -1)
    swift_once(&qword_1007F2180, sub_1004137FC);
  v2 = sub_1000117A8(v0, (uint64_t)qword_100854980);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1000F1520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeaderButton(0);
  if (qword_1007F1208 != -1)
    swift_once(&qword_1007F1208, sub_1000F1490);
  v4 = sub_1000117A8(v0, (uint64_t)qword_1007FAFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  result = DynamicTypeButton.__allocating_init(useCase:)(v3);
  qword_1007FB008 = result;
  return result;
}

void sub_1000F15E8()
{
  qword_1008519D0 = 0x4020000000000000;
}

uint64_t sub_1000F15F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v10;

  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  if (qword_1007F1208 != -1)
    swift_once(&qword_1007F1208, sub_1000F1490);
  v6 = sub_1000117A8(v2, (uint64_t)qword_1007FAFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = DynamicTypeButton.__allocating_init(useCase:)(v5);
  ObjectType = swift_getObjectType();
  swift_deallocPartialClassInstance(a1, ObjectType, 16, 7);
  return v7;
}

char *sub_1000F16E8(double a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  char v16;
  double v17;
  double v18;
  double v19;
  char *v20;
  NSString v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  CGAffineTransform v27;

  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
  v13 = (char *)DynamicTypeButton.__allocating_init(useCase:)(v12);
  *(double *)&v13[qword_1007FB010] = a1;
  v14 = v13;
  v15 = objc_msgSend(v14, "traitCollection");
  v16 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v16 & 1) != 0)
    v17 = a1;
  else
    v17 = 0.0;
  if ((v16 & 1) != 0)
    v18 = 0.0;
  else
    v18 = a1;
  if ((v16 & 1) != 0)
    v19 = -a1;
  else
    v19 = a1;
  if ((v16 & 1) == 0)
    a1 = -a1;
  objc_msgSend(v14, "setContentEdgeInsets:", 0.0, v18, 0.0, v17);
  objc_msgSend(v14, "setImageEdgeInsets:", 0.0, a1, 0.0, v19);
  v20 = v14;
  if (a3)
  {
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v14, "setTitle:forState:", v21, 0);

  objc_msgSend(v14, "setImage:forState:", a4, 0);
  CGAffineTransformMakeScale(&v27, -1.0, 1.0);
  objc_msgSend(v14, "setTransform:", &v27);
  v22 = objc_msgSend(v14, "titleLabel");
  if (v22)
  {
    v23 = v22;
    CGAffineTransformMakeScale(&v27, -1.0, 1.0);
    objc_msgSend(v23, "setTransform:", &v27);

  }
  v24 = objc_msgSend(v14, "imageView");
  if (v24)
  {
    v25 = v24;
    CGAffineTransformMakeScale(&v27, -1.0, 1.0);
    objc_msgSend(v25, "setTransform:", &v27);

    a4 = v25;
  }

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a5, v9);
  return v14;
}

id sub_1000F1988(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id result;
  double v7;
  id v8;
  char v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for HeaderButton(0);
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = objc_msgSend(v4, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v5 != result))
  {
    v7 = *(double *)&v2[qword_1007FB010];
    v8 = objc_msgSend(v2, "traitCollection");
    v9 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = 0.0;
    if ((v9 & 1) != 0)
      v11 = 0.0;
    else
      v11 = v7;
    if ((v9 & 1) != 0)
      v12 = -v7;
    else
      v12 = v7;
    if ((v9 & 1) == 0)
      v7 = -v7;
    objc_msgSend(v2, "setContentEdgeInsets:", 0.0, v11, 0.0, v10);
    return objc_msgSend(v2, "setImageEdgeInsets:", 0.0, v7, 0.0, v12);
  }
  return result;
}

void sub_1000F1AB8(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1000F1988(a3);

}

id sub_1000F1B10(char *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  *(_QWORD *)&a1[qword_1007FB010] = 0;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for HeaderButton(0);
  return objc_msgSendSuper2(&v10, "initWithFrame:", a2, a3, a4, a5);
}

id sub_1000F1B8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeaderButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000F1BC4()
{
  return type metadata accessor for HeaderButton(0);
}

double sub_1000F1BCC(double a1, double a2, double a3, uint64_t a4, NSString a5, uint64_t a6, void *a7, uint64_t a8)
{
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  void *v26;

  if (qword_1007F1210 != -1)
    swift_once(&qword_1007F1210, sub_1000F1520);
  v15 = (void *)qword_1007FB008;
  if (a5)
    a5 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setTitle:forState:", a5, 0);

  v16 = (void *)qword_1007FB008;
  objc_msgSend((id)qword_1007FB008, "setImage:forState:", a6, 0);
  v17 = objc_msgSend(v16, "titleLabel");
  v18 = v17;
  if (v17)
  {
    if (a7)
    {
      v19 = v17;
      v20 = a7;
    }
    else
    {
      v21 = objc_msgSend(v17, "font");
      if (!v21)
      {
        v23 = 0;
        goto LABEL_11;
      }
      v20 = v21;
    }
    v22 = a7;
    v23 = objc_msgSend(v20, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", a8);

LABEL_11:
    objc_msgSend(v18, "setFont:", v23);

  }
  objc_msgSend((id)qword_1007FB008, "sizeThatFits:", a1, a2);
  v25 = v24;

  v26 = (void *)qword_1007FB008;
  objc_msgSend((id)qword_1007FB008, "setTitle:forState:", 0, 0);
  objc_msgSend(v26, "setImage:forState:", 0, 0);
  return v25 + a3;
}

uint64_t sub_1000F1DA0(uint64_t a1, uint64_t a2, __n128 a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v15[5];

  v5 = a3.n128_f64[0];
  v6 = type metadata accessor for FontSource(0, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FontUseCase(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FontSource.useCase(_:), v6);
  v15[3] = v6;
  v15[4] = &protocol witness table for FontSource;
  v11 = sub_1000117C0(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v11, v9, v6);
  CGFloat.scalingLike(_:with:)(v15, a2, v5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v15);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return JUScreenClassGetMain(v12);
}

char *sub_1000F1EC0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  void *v18;
  char *v19;
  id v20;

  v5 = OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_pageView;
  v6 = type metadata accessor for ArcadeDownloadPackCategoriesPageView();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_continueButton;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v10 = OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_skipButton;
  *(_QWORD *)&v8[v10] = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
  *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_presenter] = a1;
  swift_retain(a1);

  v11 = *(void **)&v2[v5];
  swift_retain(a1);
  v12 = v11;
  swift_retain(a2);
  v13 = (char *)sub_10013FEAC(a1, v12, a2, v8);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_presenter];
  v15 = sub_1000F2804(&qword_1007FB0C0, "-*\v");
  v16 = v13;
  v17 = swift_retain(v14);
  dispatch thunk of ArcadeDownloadPackCategoriesPagePresenter.view.setter(v13, v15, v17);
  objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_continueButton], "addTarget:action:forControlEvents:", v16, "didTapContinueButton", 64, swift_release(v14).n128_f64[0]);
  v18 = *(void **)&v16[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_skipButton];
  v19 = v16;
  v20 = v18;
  objc_msgSend(v20, "addTarget:action:forControlEvents:", v19, "didTapSkipButton", 64);

  swift_release(a1);
  swift_release(a2);
  return v19;
}

void sub_1000F21EC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSString v14;
  void *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSString v21;
  NSString v22;
  NSString v23;
  id v24;
  id v25;

  v2 = v1;
  v4 = type metadata accessor for ArtworkLoader(0);
  v5 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32ArcadeDownloadPackViewController_objectGraph]
                 + qword_100854050);
  if (v5)
  {
    v6 = swift_allocObject(&unk_100728590, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    swift_retain(v6);
    swift_retain(v5);
    sub_1000A2248(a1, v5, (uint64_t)sub_1000F27FC, v6);
    swift_release(v5);
    v7 = swift_release_n(v6, 2);
    v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_continueButton];
    v9 = ArcadeDownloadPackCategoriesPage.primaryAction.getter(v7);
    Action.title.getter(v10);
    v12 = v11;
    v13 = swift_release(v9).n128_u64[0];
    if (v12)
    {
      v14 = String._bridgeToObjectiveC()();
      v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v8, "setTitle:forState:", v14, 0, *(double *)&v13);

    v15 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_skipButton];
    v16 = ArcadeDownloadPackCategoriesPage.dismissAction.getter();
    Action.title.getter(v17);
    v19 = v18;
    v20 = swift_release(v16).n128_u64[0];
    if (v19)
    {
      v21 = String._bridgeToObjectiveC()();
      v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
    }
    else
    {
      v21 = 0;
    }
    objc_msgSend(v15, "setTitle:forState:", v21, 0, *(double *)&v20);

    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setAccessibilityIdentifier:", v22);

    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setAccessibilityIdentifier:", v23);

    v24 = objc_msgSend(v2, "buttonTray");
    objc_msgSend(v24, "addButton:", v8);

    v25 = objc_msgSend(v2, "buttonTray");
    objc_msgSend(v25, "addButton:", v15);

    sub_100165D28();
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v4);
    __break(1u);
  }
}

uint64_t sub_1000F246C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result
                   + OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_presenter);
    swift_retain(v6);

    dispatch thunk of ArcadeDownloadPackCategoriesPagePresenter.toggle(category:)(a1);
    return swift_release(v6);
  }
  return result;
}

id sub_1000F24EC()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  char v6;

  v1 = v0;
  v2 = objc_msgSend(v0, "buttonTray");
  ArcadeDownloadPackCategoriesPagePresenterViewState.countTitle.getter();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCaptionText:style:", v5, 2, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v6 = ArcadeDownloadPackCategoriesPagePresenterViewState.categorySelectionEnabled.getter();
  sub_1003E64BC(v6 & 1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_continueButton], "setEnabled:", ArcadeDownloadPackCategoriesPagePresenterViewState.primaryButtonEnabled.getter() & 1);
}

double sub_1000F25C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  double result;

  v4 = v3;
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension32ArcadeDownloadPackViewController_objectGraph];
  v9 = type metadata accessor for ArcadeDownloadPackSuggestionsPagePresenter(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  swift_retain(v8);
  swift_bridgeObjectRetain(a1);
  v10 = swift_bridgeObjectRetain(a3);
  v11 = ArcadeDownloadPackSuggestionsPagePresenter.init(objectGraph:categories:subscriptionStatus:)(v8, a1, a2, a3, v10);
  v12 = objc_allocWithZone((Class)type metadata accessor for ArcadeDownloadPackSuggestionsViewController());
  swift_retain(v8);
  swift_retain(v11);
  v14 = sub_10013F170(v13, v8);
  v15 = objc_msgSend(v4, "navigationController");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "pushViewController:animated:", v14, 1);

  }
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_1000F26C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_presenter));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_continueButton));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController_skipButton));
}

uint64_t type metadata accessor for ArcadeDownloadPackCategoriesViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension42ArcadeDownloadPackCategoriesViewController);
}

uint64_t sub_1000F2784()
{
  return sub_1000F2804(&qword_1007FB0B0, byte_100678850);
}

uint64_t sub_1000F27A8()
{
  return sub_1000F2804(&qword_1007FB0B8, byte_100678818);
}

uint64_t sub_1000F27D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F27FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1000F246C(a1, v1);
}

uint64_t sub_1000F2804(unint64_t *a1, const char *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ArcadeDownloadPackCategoriesViewController();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ProductLockupAccessibilityLayout.iconView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011020(v1, a1);
}

uint64_t AppPromotionFormattedDateLayout.Metrics.textTopSpace.setter(__int128 *a1)
{
  _QWORD *v1;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v1);
  return sub_100010F3C(a1, (uint64_t)v1);
}

uint64_t (*ProductLockupAccessibilityLayout.Metrics.layoutMargins.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.artworkAspectRatio.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 20);
  v4 = type metadata accessor for AspectRatio(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppEventCardLayout.Metrics(uint64_t a1)
{
  return sub_10005C17C(a1, qword_1007FB1E8, (uint64_t)&nominal type descriptor for AppEventCardLayout.Metrics);
}

uint64_t AppEventCardLayout.Metrics.artworkAspectRatio.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 20);
  v4 = type metadata accessor for AspectRatio(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppEventCardLayout.Metrics.artworkAspectRatio.modify())()
{
  type metadata accessor for AppEventCardLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.notifyMePadding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2D3C(type metadata accessor for AppEventCardLayout.Metrics, a1);
}

uint64_t AppEventCardLayout.Metrics.notifyMePadding.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 24));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppEventCardLayout.Metrics.notifyMePadding.modify())()
{
  type metadata accessor for AppEventCardLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.kindTopSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2D80(type metadata accessor for AppEventCardLayout.Metrics, a1);
}

uint64_t AppEventCardLayout.Metrics.kindTopSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 28));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppEventCardLayout.Metrics.kindTopSpace.modify())()
{
  type metadata accessor for AppEventCardLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.titleTopSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2DC4(type metadata accessor for AppEventCardLayout.Metrics, a1);
}

uint64_t AppEventCardLayout.Metrics.titleTopSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 32));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppEventCardLayout.Metrics.titleTopSpace.modify())()
{
  type metadata accessor for AppEventCardLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.subtitleTopSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2E08(type metadata accessor for AppEventCardLayout.Metrics, a1);
}

uint64_t AppEventCardLayout.Metrics.subtitleTopSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 36));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppEventCardLayout.Metrics.subtitleTopSpace.modify())()
{
  type metadata accessor for AppEventCardLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.textBottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout.Metrics(0);
  return sub_100011020(v1 + *(int *)(v3 + 40), a1);
}

uint64_t AppEventCardLayout.Metrics.textBottomSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppEventCardLayout.Metrics(0) + 40));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  return sub_100010F3C(a1, (uint64_t)v3);
}

uint64_t (*AppEventCardLayout.Metrics.textBottomSpace.modify())()
{
  type metadata accessor for AppEventCardLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AppEventCardLayout.Metrics.init(contentHorizontalMargin:artworkAspectRatio:notifyMePadding:kindTopSpace:titleTopSpace:subtitleTopSpace:textBottomSpace:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X8>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;

  sub_100010F3C(a1, a8);
  v15 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v16 = a8 + v15[5];
  v17 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  sub_100010F3C(a3, a8 + v15[6]);
  sub_100010F3C(a4, a8 + v15[7]);
  sub_100010F3C(a5, a8 + v15[8]);
  sub_100010F3C(a6, a8 + v15[9]);
  return sub_100010F3C(a7, a8 + v15[10]);
}

uint64_t AppEventCardLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000F2CA4(v1, a1);
}

uint64_t sub_1000F2CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppEventCardLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AppEventCardLayout.shadowView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_100011020(v1 + *(int *)(v3 + 20), a1);
}

uint64_t type metadata accessor for AppEventCardLayout(uint64_t a1)
{
  return sub_10005C17C(a1, qword_1007FB120, (uint64_t)&nominal type descriptor for AppEventCardLayout);
}

uint64_t AppEventCardLayout.contentView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2D3C(type metadata accessor for AppEventCardLayout, a1);
}

uint64_t sub_1000F2D3C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_100011020(v2 + *(int *)(v4 + 24), a2);
}

uint64_t AppEventCardLayout.borderView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2D80(type metadata accessor for AppEventCardLayout, a1);
}

uint64_t sub_1000F2D80@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_100011020(v2 + *(int *)(v4 + 28), a2);
}

uint64_t AppEventCardLayout.mediaContentView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2DC4(type metadata accessor for AppEventCardLayout, a1);
}

uint64_t sub_1000F2DC4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_100011020(v2 + *(int *)(v4 + 32), a2);
}

uint64_t AppEventCardLayout.artworkView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F2E08(type metadata accessor for AppEventCardLayout, a1);
}

uint64_t sub_1000F2E08@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_100011020(v2 + *(int *)(v4 + 36), a2);
}

uint64_t AppEventCardLayout.videoView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 40), a1, &qword_1007FAF60);
}

uint64_t AppEventCardLayout.gradientBlurView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 44), a1, &qword_1007FAF60);
}

uint64_t AppEventCardLayout.notifyMeButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 48), a1, &qword_1007FAF60);
}

uint64_t AppEventCardLayout.kindLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_100011020(v1 + *(int *)(v3 + 52), a1);
}

uint64_t AppEventCardLayout.titleLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_100011020(v1 + *(int *)(v3 + 56), a1);
}

uint64_t AppEventCardLayout.subtitleLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 60), a1, &qword_1007FD370);
}

uint64_t AppEventCardLayout.separatorView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 64), a1, &qword_1007FAF60);
}

uint64_t AppEventCardLayout.lockupContainerView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 68), a1, &qword_1007FAF60);
}

uint64_t AppEventCardLayout.lockupView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppEventCardLayout(0);
  return sub_1000194E4(v1 + *(int *)(v3 + 72), a1, &qword_1007FAF60);
}

uint64_t AppEventCardLayout.init(metrics:shadowView:contentView:borderView:mediaContentView:artworkView:videoView:gradientBlurView:notifyMeButton:kindLabel:titleLabel:subtitleLabel:separatorView:lockupContainerView:lockupView:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, __int128 *a11, __int128 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int *v24;

  sub_1000F31FC(a1, a9);
  v24 = (int *)type metadata accessor for AppEventCardLayout(0);
  sub_100010F3C(a2, a9 + v24[5]);
  sub_100010F3C(a3, a9 + v24[6]);
  sub_100010F3C(a4, a9 + v24[7]);
  sub_100010F3C(a5, a9 + v24[8]);
  sub_100010F3C(a6, a9 + v24[9]);
  sub_10006C29C(a7, a9 + v24[10], &qword_1007FAF60);
  sub_10006C29C(a8, a9 + v24[11], &qword_1007FAF60);
  sub_10006C29C(a10, a9 + v24[12], &qword_1007FAF60);
  sub_100010F3C(a11, a9 + v24[13]);
  sub_100010F3C(a12, a9 + v24[14]);
  sub_10006C29C(a13, a9 + v24[15], &qword_1007FD370);
  sub_10006C29C(a14, a9 + v24[16], &qword_1007FAF60);
  sub_10006C29C(a15, a9 + v24[17], &qword_1007FAF60);
  return sub_10006C29C(a16, a9 + v24[18], &qword_1007FAF60);
}

uint64_t sub_1000F31FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppEventCardLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static AppEventCardLayout.estimatedMeasurementsNonAXLayout(fitting:using:shelfItems:asPartOf:in:)(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  sub_1000F4AD0(a1, a2, a3, a4, ObjectType, a5, a6);
}

void AppEventCardLayout.measurements(fitting:in:)(void *a1, double a2, double a3)
{
  _QWORD *v3;

  swift_getObjectType();
  sub_1000F4408(a1, v3, a2, a3);
}

uint64_t static AppPromotionCardLayout.prefersAccessibilityLayout(with:)(void *a1)
{
  id v1;
  char v2;

  v1 = objc_msgSend(a1, "preferredContentSizeCategory");
  v2 = static UIContentSizeCategory.>= infix(_:_:)();

  return v2 & 1;
}

uint64_t AppEventCardLayout.placeChildren(relativeTo:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  double Width;
  uint64_t v33;
  double Height;
  double v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  CGFloat v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  CGFloat MinX;
  double v53;
  CGFloat v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  CGFloat v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  id v66;
  id v67;
  char v68;
  double v69;
  double v70;
  double v71;
  CGFloat v72;
  double v73;
  double v74;
  double v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  double v80;
  double v81;
  double v82;
  id v83;
  id v84;
  char v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  CGFloat v92;
  CGFloat v93;
  double v94;
  CGFloat v95;
  CGFloat v96;
  uint64_t v97;
  uint64_t v98;
  CGFloat v99;
  CGFloat v100;
  CGFloat v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  CGFloat MinY;
  void (*v107)(char *, uint64_t);
  CGFloat v108;
  CGFloat v109;
  double v110;
  double v111;
  double v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  CGFloat v118;
  double v119;
  double v120;
  double v121;
  CGFloat v122;
  __int128 v123;
  CGFloat v124;
  double v125;
  char v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[3];
  uint64_t v131;
  uint64_t v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;

  v7 = v6;
  v117 = a2;
  v115 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FloatingPointRoundingRule(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for AppEventCardLayout(0);
  v19 = (_QWORD *)((char *)v6 + v18[5]);
  v20 = v19[3];
  v21 = v19[4];
  sub_100011064(v19, v20);
  dispatch thunk of LayoutView.frame.setter(v20, v21);
  v22 = (_QWORD *)((char *)v6 + v18[6]);
  v23 = v22[3];
  v24 = v22[4];
  sub_100011064(v22, v23);
  dispatch thunk of LayoutView.frame.setter(v23, v24);
  v25 = (_QWORD *)((char *)v6 + v18[7]);
  v26 = v25[3];
  v27 = v25[4];
  sub_100011064(v25, v26);
  dispatch thunk of LayoutView.frame.setter(v26, v27);
  v28 = v6[3];
  v29 = v6[4];
  sub_100011064(v7, v7[3]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28);
  v120 = AnyDimension.value(in:rounded:)(a1, v17, v28, v29);
  v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30(v17, v14);
  v31 = type metadata accessor for AppEventCardLayout.Metrics(0);
  v133.origin.x = 0.0;
  v133.origin.y = 0.0;
  v133.size.width = a5;
  v133.size.height = a6;
  Width = CGRectGetWidth(v133);
  Height = round(AspectRatio.height(fromWidth:)(v33, Width));
  v134.origin.x = 0.0;
  v134.origin.y = 0.0;
  v134.size.width = a5;
  v134.size.height = a6;
  if (vabdd_f64(Height, CGRectGetHeight(v134)) < 1.0)
  {
    v135.origin.x = 0.0;
    v135.origin.y = 0.0;
    v135.size.width = a5;
    v135.size.height = a6;
    Height = CGRectGetHeight(v135);
  }
  v136.origin.x = 0.0;
  v136.origin.y = 0.0;
  v136.size.width = a5;
  v136.size.height = a6;
  v35 = CGRectGetWidth(v136);
  v36 = (_QWORD *)((char *)v7 + v18[8]);
  v37 = v36[3];
  v38 = v36[4];
  sub_100011064(v36, v37);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v37, v38);
  v137.origin.x = 0.0;
  v137.origin.y = 0.0;
  v116 = v35;
  v137.size.width = v35;
  v137.size.height = Height;
  v39 = CGRectGetWidth(v137);
  v40 = (_QWORD *)((char *)v7 + v18[9]);
  v41 = v40[3];
  v42 = v40[4];
  sub_100011064(v40, v41);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v41, v42);
  sub_1000194E4((uint64_t)v7 + v18[10], (uint64_t)v130, &qword_1007FAF60);
  v43 = v131;
  if (v131)
  {
    v44 = v132;
    sub_100011064(v130, v131);
    dispatch thunk of LayoutView.frame.setter(v43, v44);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  }
  else
  {
    sub_100011088((uint64_t)v130, &qword_1007FAF60);
  }
  sub_1000194E4((uint64_t)v7 + v18[11], (uint64_t)v130, &qword_1007FAF60);
  v45 = v131;
  if (v131)
  {
    v46 = v132;
    sub_100011064(v130, v131);
    dispatch thunk of LayoutView.frame.setter(v45, v46);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  }
  else
  {
    sub_100011088((uint64_t)v130, &qword_1007FAF60);
  }
  sub_1000194E4((uint64_t)v7 + v18[17], (uint64_t)&v127, &qword_1007FAF60);
  v122 = a4;
  v121 = a3;
  v119 = Height;
  v118 = v39;
  if (!v128)
  {
    sub_100011088((uint64_t)&v127, &qword_1007FAF60);
    v51 = 1;
    MinX = 0.0;
    v53 = 0.0;
    v54 = 0.0;
    v55 = 0.0;
    goto LABEL_17;
  }
  sub_100010F3C(&v127, (uint64_t)v130);
  v47 = v131;
  v48 = v132;
  sub_100011064(v130, v131);
  if ((dispatch thunk of LayoutView.isHidden.getter(v47, v48) & 1) != 0)
    goto LABEL_16;
  sub_1000194E4((uint64_t)v7 + v18[18], (uint64_t)&v123, &qword_1007FAF60);
  if (v125 == 0.0)
  {
    sub_100011088((uint64_t)&v123, &qword_1007FAF60);
    goto LABEL_16;
  }
  sub_100010F3C(&v123, (uint64_t)&v127);
  v49 = v128;
  v50 = v129;
  sub_100011064(&v127, v128);
  if ((dispatch thunk of LayoutView.isHidden.getter(v49, v50) & 1) != 0)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v127);
LABEL_16:
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
    v51 = 1;
    MinX = 0.0;
    v53 = 0.0;
    v54 = 0.0;
    v55 = 0.0;
    goto LABEL_17;
  }
  v111 = sub_1000F4FBC(0.0, 0.0, a5, a6, 0.0, v120);
  v109 = v80;
  v110 = v81;
  v112 = v82;
  v108 = COERCE_DOUBLE(swift_getObjectType());
  v83 = objc_msgSend(a1, "traitCollection");
  v84 = objc_msgSend(v83, "preferredContentSizeCategory");
  MinY = *(double *)&UIContentSizeCategoryExtraExtraExtraLarge;
  v85 = static UIContentSizeCategory.>= infix(_:_:)(v84, UIContentSizeCategoryExtraExtraExtraLarge);

  v107 = v30;
  if ((v85 & 1) != 0)
  {
    if (qword_1007F13E8 != -1)
      swift_once(&qword_1007F13E8, sub_100159D80);
    v86 = qword_100851FC8;
  }
  else
  {
    if (qword_1007F13E0 != -1)
      swift_once(&qword_1007F13E0, sub_100159684);
    v86 = qword_100851FB0;
  }
  v87 = v115;
  v88 = sub_1000117A8(v115, (uint64_t)v86);
  v89 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v88, v87);
  v90 = objc_msgSend(a1, "traitCollection");
  v91 = objc_msgSend(v90, "preferredContentSizeCategory");
  static UIContentSizeCategory.>= infix(_:_:)(v91, *(_QWORD *)&MinY);

  type metadata accessor for SmallLockupView(0);
  v92 = v110;
  v93 = v112;
  sub_100193710(v89, a1, v110, v112);
  v55 = ceil(v94);
  v140.origin.x = 0.0;
  v140.origin.y = 0.0;
  v140.size.width = a5;
  v140.size.height = a6;
  MinX = CGRectGetMinX(v140);
  v141.origin.x = v111;
  v141.origin.y = v109;
  v141.size.width = v92;
  v141.size.height = v93;
  v95 = v109;
  v96 = v111;
  v53 = CGRectGetHeight(v141) - v55;
  v142.origin.x = 0.0;
  v142.origin.y = 0.0;
  v142.size.width = a5;
  v142.size.height = a6;
  v54 = CGRectGetWidth(v142);
  v97 = v131;
  v98 = v132;
  sub_100011064(v130, v131);
  dispatch thunk of LayoutView.frame.setter(v97, v98);
  v143.origin.x = v96;
  v99 = v95;
  v143.origin.y = v95;
  v100 = v110;
  v143.size.width = v110;
  v143.size.height = v112;
  v108 = CGRectGetMinX(v143);
  v144.origin.x = v111;
  v144.origin.y = v99;
  v144.size.width = v100;
  v101 = v112;
  v144.size.height = v112;
  MinY = CGRectGetMinY(v144);
  v145.origin.x = v111;
  v145.origin.y = v109;
  v145.size.width = v100;
  v145.size.height = v101;
  CGRectGetWidth(v145);
  v102 = v128;
  v103 = v129;
  sub_100011064(&v127, v128);
  v104 = dispatch thunk of LayoutView.frame.setter(v102, v103);
  (*(void (**)(uint64_t, uint64_t, __n128))(v114 + 8))(v89, v115, v104);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v127);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  v51 = 0;
  a3 = v121;
  v30 = v107;
LABEL_17:
  *(CGFloat *)&v123 = MinX;
  *((double *)&v123 + 1) = v53;
  v124 = v54;
  v125 = v55;
  v126 = v51;
  sub_1000194E4((uint64_t)v7 + v18[12], (uint64_t)&v127, &qword_1007FAF60);
  if (v128)
  {
    sub_100010F3C(&v127, (uint64_t)v130);
    v56 = v131;
    v57 = v132;
    sub_100011064(v130, v131);
    dispatch thunk of Measurable.measurements(fitting:in:)(a1, v56, *(_QWORD *)(v57 + 8), a5, a6);
    v58 = (_QWORD *)((char *)v7 + *(int *)(v31 + 24));
    v59 = v58[3];
    v60 = v58[4];
    sub_100011064(v58, v59);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v59);
    AnyDimension.value(in:rounded:)(a1, v17, v59, v60);
    v30(v17, v14);
    v138.origin.x = a3;
    v61 = v122;
    v138.origin.y = v122;
    v138.size.width = a5;
    v138.size.height = a6;
    CGRectGetMaxX(v138);
    v139.origin.x = a3;
    v139.origin.y = v61;
    v139.size.width = a5;
    v139.size.height = a6;
    CGRectGetMinY(v139);
    v62 = v131;
    v63 = v132;
    sub_100011064(v130, v131);
    CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v62, v63);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v130);
  }
  else
  {
    sub_100011088((uint64_t)&v127, &qword_1007FAF60);
  }
  v64 = v119;
  v65 = v118;
  v66 = objc_msgSend(a1, "traitCollection");
  v67 = objc_msgSend(v66, "preferredContentSizeCategory");
  v68 = static UIContentSizeCategory.>= infix(_:_:)(v67, UIContentSizeCategoryExtraExtraExtraLarge);

  if ((v68 & 1) != 0)
  {
    v69 = sub_1000F4FBC(0.0, 0.0, a5, a6, 0.0, v120);
    v70 = v122;
    v71 = v121;
    sub_1000F3E8C((uint64_t)&v123, (uint64_t)a1, 0.0, 0.0, v65, v64, v69, v72, v73, v74);
  }
  else
  {
    v75 = sub_1000F4FBC(0.0, 0.0, v116, v64, 0.0, v120);
    sub_1000F5390((uint64_t)a1, v75, v76, v77, v78);
    v70 = v122;
    v71 = v121;
  }
  return LayoutRect.init(representing:)(v71, v70, a5, a6);
}

uint64_t sub_1000F3E8C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, double a9, double a10)
{
  uint64_t v10;
  uint64_t v11;
  int *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  CGFloat MinX;
  uint64_t v35;
  uint64_t v36;
  CGFloat v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  CGFloat v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  CGFloat v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  CGPoint v79;
  CGFloat v80;
  CGFloat v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double MaxY;
  CGPoint v90;
  double v91;
  double v92;
  char v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v11 = v10;
  MaxY = CGRectGetMaxY(*(CGRect *)&a3);
  v18 = (int *)type metadata accessor for AppEventCardLayout(0);
  v19 = (_QWORD *)(v10 + v18[13]);
  v20 = v19[3];
  v21 = v19[4];
  sub_100011064(v19, v20);
  v22 = dispatch thunk of Measurable.measurements(fitting:in:)(a2, v20, *(_QWORD *)(*(_QWORD *)(v21 + 8) + 8), a9, a10);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v30 = (_QWORD *)(v10 + v29[7]);
  v31 = v30[3];
  v32 = v30[4];
  sub_100011064(v30, v31);
  v33 = AnyDimension.topMargin(from:in:)(a2, v31, v32, v22, v24, v26, v28);
  v97.origin.x = a7;
  v97.origin.y = a8;
  v97.size.width = a9;
  v97.size.height = a10;
  MinX = CGRectGetMinX(v97);
  v35 = v19[3];
  v36 = v19[4];
  sub_100011064(v19, v35);
  CGRect.withLayoutDirection(in:relativeTo:)(a2);
  dispatch thunk of LayoutView.frame.setter(v35, *(_QWORD *)(v36 + 8));
  v98.origin.x = MinX;
  v98.origin.y = MaxY + v33;
  v98.size.width = v22;
  v98.size.height = v24;
  v37 = CGRectGetMaxY(v98) - v28;
  v38 = (_QWORD *)(v11 + v18[14]);
  v39 = v38[3];
  v40 = v38[4];
  sub_100011064(v38, v39);
  v41 = a9;
  v42 = a10;
  v43 = dispatch thunk of Measurable.measurements(fitting:in:)(a2, v39, *(_QWORD *)(*(_QWORD *)(v40 + 8) + 8), a9, a10);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = (_QWORD *)(v11 + v29[8]);
  v51 = v50[3];
  v52 = v50[4];
  sub_100011064(v50, v51);
  v53 = AnyDimension.topMargin(from:in:)(a2, v51, v52, v43, v45, v47, v49);
  v99.origin.x = a7;
  v99.origin.y = a8;
  v99.size.width = v41;
  v99.size.height = v42;
  v54 = CGRectGetMinX(v99);
  v55 = v38[3];
  v56 = v38[4];
  sub_100011064(v38, v55);
  CGRect.withLayoutDirection(in:relativeTo:)(a2);
  dispatch thunk of LayoutView.frame.setter(v55, *(_QWORD *)(v56 + 8));
  v100.origin.x = v54;
  v100.origin.y = v37 + v53;
  v100.size.width = v43;
  v100.size.height = v45;
  v57 = CGRectGetMaxY(v100);
  sub_1000194E4(v11 + v18[15], (uint64_t)&v90, &qword_1007FD370);
  if (v92 == 0.0)
  {
    sub_100011088((uint64_t)&v90, &qword_1007FD370);
  }
  else
  {
    sub_100010F3C((__int128 *)&v90, (uint64_t)v94);
    v59 = v95;
    v58 = v96;
    sub_100011064(v94, v95);
    if ((dispatch thunk of LayoutView.hasContent.getter(v59, *(_QWORD *)(v58 + 8)) & 1) != 0)
    {
      v60 = v57 - v49;
      v61 = v95;
      v62 = v96;
      sub_100011064(v94, v95);
      v63 = dispatch thunk of Measurable.measurements(fitting:in:)(a2, v61, *(_QWORD *)(*(_QWORD *)(v62 + 8) + 8), v41, v42);
      v65 = v64;
      v67 = v66;
      v69 = v68;
      v70 = (_QWORD *)(v11 + v29[9]);
      v71 = v70[3];
      v72 = v70[4];
      sub_100011064(v70, v71);
      v73 = AnyDimension.topMargin(from:in:)(a2, v71, v72, v63, v65, v67, v69);
      v101.origin.x = a7;
      v101.origin.y = a8;
      v101.size.width = v41;
      v101.size.height = v42;
      v74 = CGRectGetMinX(v101);
      v75 = v95;
      v76 = v96;
      sub_100011064(v94, v95);
      CGRect.withLayoutDirection(in:relativeTo:)(a2);
      dispatch thunk of LayoutView.frame.setter(v75, *(_QWORD *)(v76 + 8));
      v102.origin.x = v74;
      v102.origin.y = v60 + v73;
      v102.size.width = v63;
      v102.size.height = v65;
      CGRectGetMaxY(v102);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v94);
  }
  sub_1000194E4(v11 + v18[16], (uint64_t)&v90, &qword_1007FAF60);
  if (v92 == 0.0)
    return sub_100011088((uint64_t)&v90, &qword_1007FAF60);
  sub_100010F3C((__int128 *)&v90, (uint64_t)v94);
  v77 = v95;
  v78 = v96;
  sub_100011064(v94, v95);
  if ((dispatch thunk of LayoutView.isHidden.getter(v77, v78) & 1) == 0)
  {
    sub_10006C29C(a1, (uint64_t)&v90, (uint64_t *)&unk_1007F4D70);
    if (v93 != 1)
    {
      v79 = v90;
      v80 = v91;
      v81 = v92;
      v82 = v95;
      v83 = v96;
      sub_100011064(v94, v95);
      dispatch thunk of Measurable.measurements(fitting:in:)(a2, v82, *(_QWORD *)(v83 + 8), v41, v42);
      v103.origin = v79;
      v103.size.width = v80;
      v103.size.height = v81;
      CGRectGetMinY(v103);
      v104.origin.x = a7;
      v104.origin.y = a8;
      v104.size.width = v41;
      v104.size.height = v42;
      CGRectGetMinX(v104);
      v105.origin.x = a7;
      v105.origin.y = a8;
      v105.size.width = v41;
      v105.size.height = v42;
      CGRectGetWidth(v105);
      v84 = v95;
      v85 = v96;
      sub_100011064(v94, v95);
      dispatch thunk of LayoutView.frame.setter(v84, v85);
    }
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v94);
}

void sub_1000F4408(void *a1, _QWORD *a2, double a3, double a4)
{
  int *v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;

  v8 = (int *)type metadata accessor for AppEventCardLayout(0);
  sub_1000194E4((uint64_t)a2 + v8[18], (uint64_t)v15, &qword_1007FAF60);
  v9 = v16;
  sub_100011088((uint64_t)v15, &qword_1007FAF60);
  v10 = objc_msgSend(a1, "traitCollection");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");
  v12 = static UIContentSizeCategory.>= infix(_:_:)(v11, UIContentSizeCategoryExtraExtraExtraLarge);

  if ((v12 & 1) != 0)
  {
    sub_1000F4590(a2, (_QWORD *)((char *)a2 + v8[13]), (_QWORD *)((char *)a2 + v8[14]), (uint64_t)a2 + v8[15], (uint64_t)a2 + v8[16], v9 != 0, a1, a3, a4);
  }
  else
  {
    if (qword_1007F13E0 != -1)
      swift_once(&qword_1007F13E0, sub_100159684);
    v13 = type metadata accessor for SmallLockupLayout.Metrics(0);
    v14 = sub_1000117A8(v13, (uint64_t)qword_100851FB0);
    sub_1000F4FD8(a3, a4, (uint64_t)a2, v14, v9 != 0, a1);
  }
}

double sub_1000F4590(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, char a6, void *a7, double a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;

  v81 = a5;
  v82 = a4;
  v16 = type metadata accessor for FloatingPointRoundingRule(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F13E8 != -1)
    swift_once(&qword_1007F13E8, sub_100159D80);
  v20 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v21 = sub_1000117A8(v20, (uint64_t)qword_100851FC8);
  v22 = sub_1000F4FD8(a8, a9, (uint64_t)a1, v21, a6 & 1, a7);
  v23 = a1[3];
  v24 = a1[4];
  sub_100011064(a1, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23);
  AnyDimension.value(in:rounded:)(a7, v19, v23, v24);
  v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v83 = v16;
  v80 = v25;
  v26 = ((uint64_t (*)(char *, uint64_t))v25)(v19, v16);
  v27 = CGSize.subtracting(insets:)(v26);
  v29 = v28;
  v30 = a2[3];
  v31 = a2[4];
  sub_100011064(a2, v30);
  v32 = dispatch thunk of Measurable.measurements(fitting:in:)(a7, v30, *(_QWORD *)(*(_QWORD *)(v31 + 8) + 8), v27, v29);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v40 = (_QWORD *)((char *)a1 + v39[7]);
  v41 = v40[3];
  v42 = v40[4];
  sub_100011064(v40, v41);
  AnyDimension.topMargin(from:in:)(a7, v41, v42, v32, v34, v36, v38);
  *(double *)v86 = v34;
  AnyDimension.bottomMargin(from:in:)(a7, &type metadata for CGFloat, &protocol witness table for CGFloat, v32, v34, v36, v38);
  v44 = a3[3];
  v43 = a3[4];
  sub_100011064(a3, v44);
  v45 = dispatch thunk of Measurable.measurements(fitting:in:)(a7, v44, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 8), v27, v29);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = (_QWORD *)((char *)a1 + v39[8]);
  v53 = v52[3];
  v54 = v52[4];
  sub_100011064(v52, v53);
  AnyDimension.topMargin(from:in:)(a7, v53, v54, v45, v47, v49, v51);
  *(double *)v86 = v47;
  AnyDimension.bottomMargin(from:in:)(a7, &type metadata for CGFloat, &protocol witness table for CGFloat, v45, v47, v49, v51);
  sub_1000194E4(v82, (uint64_t)&v84, &qword_1007FD370);
  if (v85)
  {
    sub_100010F3C(&v84, (uint64_t)v86);
    v56 = v87;
    v55 = v88;
    sub_100011064(v86, v87);
    if ((dispatch thunk of LayoutView.hasContent.getter(v56, *(_QWORD *)(v55 + 8)) & 1) != 0)
    {
      v57 = v87;
      v58 = v88;
      sub_100011064(v86, v87);
      v59 = dispatch thunk of Measurable.measurements(fitting:in:)(a7, v57, *(_QWORD *)(*(_QWORD *)(v58 + 8) + 8), v27, v29);
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v66 = (_QWORD *)((char *)a1 + v39[9]);
      v67 = v66[3];
      v68 = v66[4];
      sub_100011064(v66, v67);
      AnyDimension.topMargin(from:in:)(a7, v67, v68, v59, v61, v63, v65);
      *(double *)&v84 = v61;
      AnyDimension.bottomMargin(from:in:)(a7, &type metadata for CGFloat, &protocol witness table for CGFloat, v59, v61, v63, v65);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v86);
  }
  else
  {
    sub_100011088((uint64_t)&v84, &qword_1007FD370);
  }
  v69 = v81;
  v70 = v80;
  v71 = (_QWORD *)((char *)a1 + v39[10]);
  v72 = v71[3];
  v73 = v71[4];
  sub_100011064(v71, v72);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v72);
  AnyDimension.value(in:rounded:)(a7, v19, v72, v73);
  v70(v19, v83);
  sub_1000194E4(v69, (uint64_t)&v84, &qword_1007FAF60);
  if (v85)
  {
    sub_100010F3C(&v84, (uint64_t)v86);
    v74 = v87;
    v75 = v88;
    sub_100011064(v86, v87);
    if ((dispatch thunk of LayoutView.isHidden.getter(v74, v75) & 1) == 0)
    {
      v76 = v87;
      v77 = v88;
      sub_100011064(v86, v87);
      dispatch thunk of Measurable.measurements(fitting:in:)(a7, v76, *(_QWORD *)(v77 + 8), v27, v29);
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v86);
  }
  else
  {
    sub_100011088((uint64_t)&v84, &qword_1007FAF60);
  }
  return v22;
}

void sub_1000F4AD0(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[40];
  uint64_t v68;
  _QWORD v69[5];
  uint64_t v70;

  v57 = a3;
  v13 = type metadata accessor for LegacyAppState(0);
  v65 = *(_QWORD *)(v13 - 8);
  v66 = v13;
  __chkstk_darwin(v13);
  v64 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AdamId(0);
  v62 = *(_QWORD *)(v15 - 8);
  v63 = v15;
  __chkstk_darwin(v15);
  v61 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)_swiftEmptyArrayStorage;
  v70 = (uint64_t)_swiftEmptyArrayStorage;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v19 = a2 + 32;
    swift_bridgeObjectRetain(a2);
    do
    {
      sub_100011020(v19, (uint64_t)v69);
      sub_100011020((uint64_t)v69, (uint64_t)v67);
      v21 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      v23 = type metadata accessor for AppEvent(0, v22);
      if ((swift_dynamicCast(&v68, v67, v21, v23, 6) & 1) == 0)
        v68 = 0;
      v24 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
      v25 = v68;
      if (v68)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v27 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v26 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v27 >= v26 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
        v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
        specialized Array._endMutation()(v20);
      }
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease(a2);
    v17 = v70;
  }
  if ((unint64_t)v17 >> 62)
    goto LABEL_36;
  v28 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v28)
  {
    v60 = v17 & 0xC000000000000001;
    if ((v17 & 0xC000000000000001) != 0)
    {
      v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    }
    else
    {
      if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_46:
        v53 = sub_10000DF3C(&qword_1007FDEA0);
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v53);
        __break(1u);
        return;
      }
      v29 = *(_QWORD *)(v17 + 32);
      v30 = swift_retain(v29);
    }
    if ((AppEvent.hideLockupWhenNotInstalled.getter(v30) & 1) == 0)
    {
      swift_bridgeObjectRelease(v17);
      swift_release(v29);
      LOBYTE(v28) = 1;
      goto LABEL_41;
    }
    v54 = a1;
    v55 = a4;
    v56 = a5;
    a5 = 0;
    a1 = (_QWORD *)(v57 + qword_100854060);
    v58 = v17 & 0xFFFFFFFFFFFFFF8;
    v59 = v28 - 1;
    while (1)
    {
      v31 = *a1;
      if (!*a1)
        goto LABEL_46;
      v32 = a1[1];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v31);
      v35 = AppEvent.lockup.getter(v34);
      v36 = v61;
      Lockup.adamId.getter(v37);
      swift_release(v35);
      v38 = dispatch thunk of AppStateController.stateMachine(forApp:)(v36, ObjectType, v32);
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v63);
      v41 = swift_getObjectType();
      v42 = AppEvent.lockup.getter(v41);
      v43 = Lockup.includeBetaApps.getter(v42);
      v44 = swift_release(v42);
      v45 = v43 & 1;
      a4 = v64;
      v46 = dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)(v45, v41, v40, v44);
      LOBYTE(v42) = LegacyAppState.isLocalApplication.getter(v46);
      swift_unknownObjectRelease(v31);
      v47 = swift_unknownObjectRelease(v38);
      (*(void (**)(void *, uint64_t, __n128))(v65 + 8))(a4, v66, v47);
      swift_release(v29);
      if ((v42 & 1) != 0)
      {
        swift_bridgeObjectRelease(v17);
LABEL_31:
        LOBYTE(v28) = 1;
LABEL_33:
        a4 = v55;
        a1 = v54;
        goto LABEL_41;
      }
      if (v59 == a5)
      {
        swift_bridgeObjectRelease(v17);
        LOBYTE(v28) = 0;
        goto LABEL_33;
      }
      v48 = a5 + 1;
      if (!v60)
        break;
      v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(a5 + 1, v17);
      if (__OFADD__(v48, 1))
        goto LABEL_34;
LABEL_27:
      ++a5;
      if ((AppEvent.hideLockupWhenNotInstalled.getter(v49) & 1) == 0)
      {
        swift_bridgeObjectRelease(v17);
        swift_release(v29);
        goto LABEL_31;
      }
    }
    if (v48 >= *(_QWORD *)(v58 + 16))
      goto LABEL_35;
    v29 = *(_QWORD *)(v17 + 8 * a5 + 40);
    v49 = swift_retain(v29);
    if (!__OFADD__(v48, 1))
      goto LABEL_27;
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (v17 < 0)
      v50 = v17;
    else
      v50 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v28 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v17);
  }
  swift_bridgeObjectRelease(v17);
LABEL_41:
  if (qword_1007F13E0 != -1)
    swift_once(&qword_1007F13E0, sub_100159684);
  v51 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v52 = sub_1000117A8(v51, (uint64_t)qword_100851FB0);
  sub_1000F4FD8(a6, a7, (uint64_t)a1, v52, v28, a4);
}

double sub_1000F4FBC(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

double sub_1000F4FD8(double a1, double a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  __n128 v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  id v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t inited;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  double v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  __int128 v40;
  void *v41;
  void *v42;
  _BYTE v43[72];

  v35 = type metadata accessor for StackMeasurable.Axis(0);
  v34 = *(_QWORD *)(v35 - 8);
  v11 = __chkstk_darwin(v35);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for StackMeasurable(0, v11);
  v36 = *(_QWORD *)(v37 - 8);
  v14 = __chkstk_darwin(v37);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for VerticalSpaceMeasurable(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AppEventCardLayout.Metrics(0);
  v22 = AspectRatio.height(fromWidth:)(v21, a1);
  v38 = a6;
  v23 = objc_msgSend(a6, "traitCollection");
  sub_1001934E0(a4, (uint64_t)v23, a1, a2);
  v25 = v24;

  v39 = _swiftEmptyArrayStorage;
  v26 = sub_10000DF3C((uint64_t *)&unk_10081AD00);
  inited = swift_initStackObject(v26, v43);
  *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
  v41 = &type metadata for CGFloat;
  v42 = &protocol witness table for CGFloat;
  *(double *)&v40 = v22;
  *(_QWORD *)(inited + 56) = v17;
  *(_QWORD *)(inited + 64) = &protocol witness table for VerticalSpaceMeasurable;
  sub_1000117C0((_QWORD *)(inited + 32));
  VerticalSpaceMeasurable.init(_:multiplier:)(&v40, 1.0);
  sub_1000195B0(inited);
  if ((a5 & 1) != 0)
  {
    v41 = &type metadata for CGFloat;
    v42 = &protocol witness table for CGFloat;
    *(_QWORD *)&v40 = ceil(v25);
    VerticalSpaceMeasurable.init(_:multiplier:)(&v40, 1.0);
    v28 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
    {
      v28 = sub_1002005AC(0, v28[2] + 1, 1, v28);
      v39 = v28;
    }
    v30 = v28[2];
    v29 = v28[3];
    if (v30 >= v29 >> 1)
    {
      v28 = sub_1002005AC((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
      v39 = v28;
    }
    v41 = (void *)v17;
    v42 = &protocol witness table for VerticalSpaceMeasurable;
    v31 = sub_1000117C0(&v40);
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v31, v20, v17);
    v28[2] = v30 + 1;
    sub_100010F3C(&v40, (uint64_t)&v28[5 * v30 + 4]);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v13, enum case for StackMeasurable.Axis.vertical(_:), v35);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v13, 1, v39);
  v32 = StackMeasurable.measurements(fitting:in:)(v38, a1, a2);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  return v32;
}

void sub_1000F5390(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  CGFloat v33;
  CGFloat MinX;
  uint64_t v35;
  uint64_t v36;
  CGFloat v37;
  CGFloat v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  CGFloat v69;
  CGFloat v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;

  v6 = v5;
  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v17 = (_QWORD *)(v5 + v16[10]);
  v18 = v17[3];
  v19 = v17[4];
  sub_100011064(v17, v18);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v18);
  v20 = AnyDimension.value(in:rounded:)(a1, v15, v18, v19);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v76.origin.x = a2;
  v76.origin.y = a3;
  v76.size.width = a4;
  v76.size.height = a5;
  v21 = CGRectGetHeight(v76) - v20;
  v22 = (int *)type metadata accessor for AppEventCardLayout(0);
  sub_1000194E4(v6 + v22[15], (uint64_t)&v71, &qword_1007FD370);
  v70 = a3;
  if (v72)
  {
    sub_100010F3C(&v71, (uint64_t)v73);
    v24 = v74;
    v23 = v75;
    sub_100011064(v73, v74);
    if ((dispatch thunk of LayoutView.hasContent.getter(v24, *(_QWORD *)(v23 + 8)) & 1) != 0)
    {
      v25 = v74;
      v26 = v75;
      sub_100011064(v73, v74);
      v27 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v25, *(_QWORD *)(*(_QWORD *)(v26 + 8) + 8), a4, a5);
      v67 = v28;
      v68 = a4;
      v29 = a5;
      v31 = v30;
      v66 = v32;
      v33 = v32 + v21 - v30;
      v77.origin.x = a2;
      v77.origin.y = a3;
      v77.size.width = v68;
      v77.size.height = v29;
      MinX = CGRectGetMinX(v77);
      v35 = v74;
      v36 = v75;
      sub_100011064(v73, v74);
      v37 = a2;
      v38 = v33;
      CGRect.withLayoutDirection(in:relativeTo:)(a1);
      dispatch thunk of LayoutView.frame.setter(v35, *(_QWORD *)(v36 + 8));
      v39 = (_QWORD *)(v6 + v16[9]);
      v40 = v39[3];
      v41 = v39[4];
      sub_100011064(v39, v40);
      v42 = AnyDimension.topMargin(from:in:)(a1, v40, v41, v27, v31, v67, v66);
      v78.origin.x = MinX;
      v78.origin.y = v38;
      v78.size.width = v27;
      v78.size.height = v31;
      a5 = v29;
      a4 = v68;
      v21 = CGRectGetMinY(v78) - v42;
    }
    else
    {
      v37 = a2;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v73);
  }
  else
  {
    v37 = a2;
    sub_100011088((uint64_t)&v71, &qword_1007FD370);
  }
  v43 = (_QWORD *)(v6 + v22[14]);
  v44 = v43[3];
  v45 = v43[4];
  sub_100011064(v43, v44);
  v46 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v44, *(_QWORD *)(*(_QWORD *)(v45 + 8) + 8), a4, a5);
  v47 = a5;
  v49 = v48;
  v67 = v51;
  v68 = v50;
  v52 = v51 + v21 - v48;
  v79.origin.x = v37;
  v69 = v37;
  v53 = v70;
  v79.origin.y = v70;
  v79.size.width = a4;
  v79.size.height = v47;
  v54 = CGRectGetMinX(v79);
  v55 = v43[3];
  v56 = v43[4];
  sub_100011064(v43, v55);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v55, *(_QWORD *)(v56 + 8));
  v57 = (_QWORD *)(v6 + v16[8]);
  v58 = v57[3];
  v59 = v57[4];
  sub_100011064(v57, v58);
  AnyDimension.topMargin(from:in:)(a1, v58, v59, v46, v49, v68, v67);
  v80.origin.x = v54;
  v80.origin.y = v52;
  v80.size.width = v46;
  v80.size.height = v49;
  CGRectGetMinY(v80);
  v60 = (_QWORD *)(v6 + v22[13]);
  v61 = v60[3];
  v62 = v60[4];
  sub_100011064(v60, v61);
  dispatch thunk of Measurable.measurements(fitting:in:)(a1, v61, *(_QWORD *)(*(_QWORD *)(v62 + 8) + 8), a4, v47);
  v81.origin.x = v69;
  v81.origin.y = v53;
  v81.size.width = a4;
  v81.size.height = v47;
  CGRectGetMinX(v81);
  v63 = v60[3];
  v64 = v60[4];
  sub_100011064(v60, v63);
  CGRect.withLayoutDirection(in:relativeTo:)(a1);
  dispatch thunk of LayoutView.frame.setter(v63, *(_QWORD *)(v64 + 8));
}

_QWORD *initializeBufferWithCopyOfBuffer for AppEventCardLayout(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v38);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
    v9 = v8[5];
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for AspectRatio(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = v8[6];
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    v15 = v8[7];
    v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)v4 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    v17 = v8[8];
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)v4 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = v8[9];
    v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)v4 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    v21 = v8[10];
    v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)v4 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
    v23 = a3[5];
    v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)((char *)v4 + v23 + 24) = v24;
    (**(void (***)(void))(v24 - 8))();
    v25 = a3[6];
    v26 = *(_OWORD *)((char *)a2 + v25 + 24);
    *(_OWORD *)((char *)v4 + v25 + 24) = v26;
    (**(void (***)(void))(v26 - 8))();
    v27 = a3[7];
    v28 = *(_OWORD *)((char *)a2 + v27 + 24);
    *(_OWORD *)((char *)v4 + v27 + 24) = v28;
    (**(void (***)(void))(v28 - 8))();
    v29 = a3[8];
    v30 = *(_OWORD *)((char *)a2 + v29 + 24);
    *(_OWORD *)((char *)v4 + v29 + 24) = v30;
    (**(void (***)(void))(v30 - 8))();
    v31 = a3[9];
    v32 = *(_OWORD *)((char *)a2 + v31 + 24);
    *(_OWORD *)((char *)v4 + v31 + 24) = v32;
    (**(void (***)(void))(v32 - 8))();
    v33 = a3[10];
    v34 = (char *)v4 + v33;
    v35 = (uint64_t)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33 + 24);
    if (v36)
    {
      v37 = *(_QWORD *)(v35 + 32);
      *((_QWORD *)v34 + 3) = v36;
      *((_QWORD *)v34 + 4) = v37;
      (**(void (***)(void))(v36 - 8))();
    }
    else
    {
      v39 = *(_OWORD *)(v35 + 16);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v39;
      *((_QWORD *)v34 + 4) = *(_QWORD *)(v35 + 32);
    }
    v40 = a3[11];
    v41 = (char *)v4 + v40;
    v42 = (uint64_t)a2 + v40;
    v43 = *(uint64_t *)((char *)a2 + v40 + 24);
    if (v43)
    {
      v44 = *(_QWORD *)(v42 + 32);
      *((_QWORD *)v41 + 3) = v43;
      *((_QWORD *)v41 + 4) = v44;
      (**(void (***)(void))(v43 - 8))();
    }
    else
    {
      v45 = *(_OWORD *)(v42 + 16);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v45;
      *((_QWORD *)v41 + 4) = *(_QWORD *)(v42 + 32);
    }
    v46 = a3[12];
    v47 = (char *)v4 + v46;
    v48 = (uint64_t)a2 + v46;
    v49 = *(uint64_t *)((char *)a2 + v46 + 24);
    if (v49)
    {
      v50 = *(_QWORD *)(v48 + 32);
      *((_QWORD *)v47 + 3) = v49;
      *((_QWORD *)v47 + 4) = v50;
      (**(void (***)(void))(v49 - 8))();
    }
    else
    {
      v51 = *(_OWORD *)(v48 + 16);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v51;
      *((_QWORD *)v47 + 4) = *(_QWORD *)(v48 + 32);
    }
    v52 = a3[13];
    v53 = *(_OWORD *)((char *)a2 + v52 + 24);
    *(_OWORD *)((char *)v4 + v52 + 24) = v53;
    (**(void (***)(void))(v53 - 8))();
    v54 = a3[14];
    v55 = *(_OWORD *)((char *)a2 + v54 + 24);
    *(_OWORD *)((char *)v4 + v54 + 24) = v55;
    (**(void (***)(void))(v55 - 8))();
    v56 = a3[15];
    v57 = (char *)v4 + v56;
    v58 = (uint64_t)a2 + v56;
    v59 = *(uint64_t *)((char *)a2 + v56 + 24);
    if (v59)
    {
      v60 = *(_QWORD *)(v58 + 32);
      *((_QWORD *)v57 + 3) = v59;
      *((_QWORD *)v57 + 4) = v60;
      (**(void (***)(void))(v59 - 8))();
    }
    else
    {
      v61 = *(_OWORD *)(v58 + 16);
      *(_OWORD *)v57 = *(_OWORD *)v58;
      *((_OWORD *)v57 + 1) = v61;
      *((_QWORD *)v57 + 4) = *(_QWORD *)(v58 + 32);
    }
    v62 = a3[16];
    v63 = (char *)v4 + v62;
    v64 = (uint64_t)a2 + v62;
    v65 = *(uint64_t *)((char *)a2 + v62 + 24);
    if (v65)
    {
      v66 = *(_QWORD *)(v64 + 32);
      *((_QWORD *)v63 + 3) = v65;
      *((_QWORD *)v63 + 4) = v66;
      (**(void (***)(void))(v65 - 8))();
    }
    else
    {
      v67 = *(_OWORD *)(v64 + 16);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v67;
      *((_QWORD *)v63 + 4) = *(_QWORD *)(v64 + 32);
    }
    v68 = a3[17];
    v69 = (char *)v4 + v68;
    v70 = (uint64_t)a2 + v68;
    v71 = *(uint64_t *)((char *)a2 + v68 + 24);
    if (v71)
    {
      v72 = *(_QWORD *)(v70 + 32);
      *((_QWORD *)v69 + 3) = v71;
      *((_QWORD *)v69 + 4) = v72;
      (**(void (***)(void))(v71 - 8))();
    }
    else
    {
      v73 = *(_OWORD *)(v70 + 16);
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v73;
      *((_QWORD *)v69 + 4) = *(_QWORD *)(v70 + 32);
    }
    v74 = a3[18];
    v75 = (char *)v4 + v74;
    v76 = (uint64_t)a2 + v74;
    v77 = *(uint64_t *)((char *)a2 + v74 + 24);
    if (v77)
    {
      v78 = *(_QWORD *)(v76 + 32);
      *((_QWORD *)v75 + 3) = v77;
      *((_QWORD *)v75 + 4) = v78;
      (**(void (***)(void))(v77 - 8))();
    }
    else
    {
      v79 = *(_OWORD *)(v76 + 16);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v79;
      *((_QWORD *)v75 + 4) = *(_QWORD *)(v76 + 32);
    }
  }
  return v4;
}

_QWORD *destroy for AppEventCardLayout(_QWORD *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *result;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  v4 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v5 = (char *)a1 + v4[5];
  v6 = type metadata accessor for AspectRatio(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + v4[6]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + v4[7]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + v4[8]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + v4[9]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + v4[10]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[5]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[6]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[7]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[8]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[9]));
  v7 = (_QWORD *)((char *)a1 + a2[10]);
  if (v7[3])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v7);
  v8 = (_QWORD *)((char *)a1 + a2[11]);
  if (v8[3])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v8);
  v9 = (_QWORD *)((char *)a1 + a2[12]);
  if (v9[3])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v9);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[13]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[14]));
  v10 = (_QWORD *)((char *)a1 + a2[15]);
  if (v10[3])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  v11 = (_QWORD *)((char *)a1 + a2[16]);
  if (v11[3])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v11);
  v12 = (_QWORD *)((char *)a1 + a2[17]);
  if (v12[3])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
  result = (_QWORD *)((char *)a1 + a2[18]);
  if (result[3])
    return (_QWORD *)_s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(result);
  return result;
}

uint64_t initializeWithCopy for AppEventCardLayout(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = v7[6];
  v13 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  v14 = v7[7];
  v15 = *(_OWORD *)(a2 + v14 + 24);
  *(_OWORD *)(a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  v16 = v7[8];
  v17 = *(_OWORD *)(a2 + v16 + 24);
  *(_OWORD *)(a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  v18 = v7[9];
  v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  v20 = v7[10];
  v21 = *(_OWORD *)(a2 + v20 + 24);
  *(_OWORD *)(a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  v22 = a3[5];
  v23 = *(_OWORD *)(a2 + v22 + 24);
  *(_OWORD *)(a1 + v22 + 24) = v23;
  (**(void (***)(void))(v23 - 8))();
  v24 = a3[6];
  v25 = *(_OWORD *)(a2 + v24 + 24);
  *(_OWORD *)(a1 + v24 + 24) = v25;
  (**(void (***)(void))(v25 - 8))();
  v26 = a3[7];
  v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)(a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  v28 = a3[8];
  v29 = *(_OWORD *)(a2 + v28 + 24);
  *(_OWORD *)(a1 + v28 + 24) = v29;
  (**(void (***)(void))(v29 - 8))();
  v30 = a3[9];
  v31 = *(_OWORD *)(a2 + v30 + 24);
  *(_OWORD *)(a1 + v30 + 24) = v31;
  (**(void (***)(void))(v31 - 8))();
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 24);
  if (v35)
  {
    v36 = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 24) = v35;
    *(_QWORD *)(v33 + 32) = v36;
    (**(void (***)(void))(v35 - 8))();
  }
  else
  {
    v37 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v37;
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  }
  v38 = a3[11];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(_QWORD *)(a2 + v38 + 24);
  if (v41)
  {
    v42 = *(_QWORD *)(v40 + 32);
    *(_QWORD *)(v39 + 24) = v41;
    *(_QWORD *)(v39 + 32) = v42;
    (**(void (***)(void))(v41 - 8))();
  }
  else
  {
    v43 = *(_OWORD *)(v40 + 16);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *(_OWORD *)(v39 + 16) = v43;
    *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  }
  v44 = a3[12];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a2 + v44 + 24);
  if (v47)
  {
    v48 = *(_QWORD *)(v46 + 32);
    *(_QWORD *)(v45 + 24) = v47;
    *(_QWORD *)(v45 + 32) = v48;
    (**(void (***)(void))(v47 - 8))();
  }
  else
  {
    v49 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v49;
    *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  }
  v50 = a3[13];
  v51 = *(_OWORD *)(a2 + v50 + 24);
  *(_OWORD *)(a1 + v50 + 24) = v51;
  (**(void (***)(void))(v51 - 8))();
  v52 = a3[14];
  v53 = *(_OWORD *)(a2 + v52 + 24);
  *(_OWORD *)(a1 + v52 + 24) = v53;
  (**(void (***)(void))(v53 - 8))();
  v54 = a3[15];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(a2 + v54 + 24);
  if (v57)
  {
    v58 = *(_QWORD *)(v56 + 32);
    *(_QWORD *)(v55 + 24) = v57;
    *(_QWORD *)(v55 + 32) = v58;
    (**(void (***)(void))(v57 - 8))();
  }
  else
  {
    v59 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v59;
    *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  }
  v60 = a3[16];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(_QWORD *)(a2 + v60 + 24);
  if (v63)
  {
    v64 = *(_QWORD *)(v62 + 32);
    *(_QWORD *)(v61 + 24) = v63;
    *(_QWORD *)(v61 + 32) = v64;
    (**(void (***)(void))(v63 - 8))();
  }
  else
  {
    v65 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v65;
    *(_QWORD *)(v61 + 32) = *(_QWORD *)(v62 + 32);
  }
  v66 = a3[17];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)(a2 + v66 + 24);
  if (v69)
  {
    v70 = *(_QWORD *)(v68 + 32);
    *(_QWORD *)(v67 + 24) = v69;
    *(_QWORD *)(v67 + 32) = v70;
    (**(void (***)(void))(v69 - 8))();
  }
  else
  {
    v71 = *(_OWORD *)(v68 + 16);
    *(_OWORD *)v67 = *(_OWORD *)v68;
    *(_OWORD *)(v67 + 16) = v71;
    *(_QWORD *)(v67 + 32) = *(_QWORD *)(v68 + 32);
  }
  v72 = a3[18];
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = *(_QWORD *)(a2 + v72 + 24);
  if (v75)
  {
    v76 = *(_QWORD *)(v74 + 32);
    *(_QWORD *)(v73 + 24) = v75;
    *(_QWORD *)(v73 + 32) = v76;
    (**(void (***)(void))(v75 - 8))();
  }
  else
  {
    v77 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v77;
    *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  }
  return a1;
}

_QWORD *assignWithCopy for AppEventCardLayout(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;

  sub_10001216C(a1, a2);
  v6 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AspectRatio(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  sub_10001216C((_QWORD *)((char *)a1 + v6[6]), (_QWORD *)((char *)a2 + v6[6]));
  sub_10001216C((_QWORD *)((char *)a1 + v6[7]), (_QWORD *)((char *)a2 + v6[7]));
  sub_10001216C((_QWORD *)((char *)a1 + v6[8]), (_QWORD *)((char *)a2 + v6[8]));
  sub_10001216C((_QWORD *)((char *)a1 + v6[9]), (_QWORD *)((char *)a2 + v6[9]));
  sub_10001216C((_QWORD *)((char *)a1 + v6[10]), (_QWORD *)((char *)a2 + v6[10]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[8]), (_QWORD *)((char *)a2 + a3[8]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]));
  v11 = a3[10];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 24);
  if (*(_QWORD *)((char *)a1 + v11 + 24))
  {
    if (v14)
    {
      sub_10001216C(v12, v13);
      goto LABEL_8;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
  }
  else if (v14)
  {
    *((_QWORD *)v12 + 3) = v14;
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    (**(void (***)(char *, char *))(v14 - 8))(v12, v13);
    goto LABEL_8;
  }
  v15 = *(_OWORD *)v13;
  v16 = *((_OWORD *)v13 + 1);
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  *(_OWORD *)v12 = v15;
  *((_OWORD *)v12 + 1) = v16;
LABEL_8:
  v17 = a3[11];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 24);
  if (*(_QWORD *)((char *)a1 + v17 + 24))
  {
    if (v20)
    {
      sub_10001216C(v18, v19);
      goto LABEL_15;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  else if (v20)
  {
    *((_QWORD *)v18 + 3) = v20;
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    (**(void (***)(char *, char *))(v20 - 8))(v18, v19);
    goto LABEL_15;
  }
  v21 = *(_OWORD *)v19;
  v22 = *((_OWORD *)v19 + 1);
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  *(_OWORD *)v18 = v21;
  *((_OWORD *)v18 + 1) = v22;
LABEL_15:
  v23 = a3[12];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)((char *)a2 + v23 + 24);
  if (*(_QWORD *)((char *)a1 + v23 + 24))
  {
    if (v26)
    {
      sub_10001216C(v24, v25);
      goto LABEL_22;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  }
  else if (v26)
  {
    *((_QWORD *)v24 + 3) = v26;
    *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
    (**(void (***)(char *, char *))(v26 - 8))(v24, v25);
    goto LABEL_22;
  }
  v27 = *(_OWORD *)v25;
  v28 = *((_OWORD *)v25 + 1);
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  *(_OWORD *)v24 = v27;
  *((_OWORD *)v24 + 1) = v28;
LABEL_22:
  sub_10001216C((_QWORD *)((char *)a1 + a3[13]), (_QWORD *)((char *)a2 + a3[13]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[14]), (_QWORD *)((char *)a2 + a3[14]));
  v29 = a3[15];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a2 + v29 + 24);
  if (*(_QWORD *)((char *)a1 + v29 + 24))
  {
    if (v32)
    {
      sub_10001216C(v30, v31);
      goto LABEL_29;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v30);
  }
  else if (v32)
  {
    *((_QWORD *)v30 + 3) = v32;
    *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    (**(void (***)(char *, char *))(v32 - 8))(v30, v31);
    goto LABEL_29;
  }
  v33 = *(_OWORD *)v31;
  v34 = *((_OWORD *)v31 + 1);
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  *(_OWORD *)v30 = v33;
  *((_OWORD *)v30 + 1) = v34;
LABEL_29:
  v35 = a3[16];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a2 + v35 + 24);
  if (*(_QWORD *)((char *)a1 + v35 + 24))
  {
    if (v38)
    {
      sub_10001216C(v36, v37);
      goto LABEL_36;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v36);
  }
  else if (v38)
  {
    *((_QWORD *)v36 + 3) = v38;
    *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
    (**(void (***)(char *, char *))(v38 - 8))(v36, v37);
    goto LABEL_36;
  }
  v39 = *(_OWORD *)v37;
  v40 = *((_OWORD *)v37 + 1);
  *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
  *(_OWORD *)v36 = v39;
  *((_OWORD *)v36 + 1) = v40;
LABEL_36:
  v41 = a3[17];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)((char *)a2 + v41 + 24);
  if (*(_QWORD *)((char *)a1 + v41 + 24))
  {
    if (v44)
    {
      sub_10001216C(v42, v43);
      goto LABEL_43;
    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v42);
  }
  else if (v44)
  {
    *((_QWORD *)v42 + 3) = v44;
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    (**(void (***)(char *, char *))(v44 - 8))(v42, v43);
    goto LABEL_43;
  }
  v45 = *(_OWORD *)v43;
  v46 = *((_OWORD *)v43 + 1);
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  *(_OWORD *)v42 = v45;
  *((_OWORD *)v42 + 1) = v46;
LABEL_43:
  v47 = a3[18];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *((_QWORD *)v49 + 3);
  if (!*(_QWORD *)((char *)a1 + v47 + 24))
  {
    if (v50)
    {
      *((_QWORD *)v48 + 3) = v50;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
      (**(void (***)(char *, char *))(v50 - 8))(v48, v49);
      return a1;
    }
LABEL_49:
    v51 = *(_OWORD *)v49;
    v52 = *((_OWORD *)v49 + 1);
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    *(_OWORD *)v48 = v51;
    *((_OWORD *)v48 + 1) = v52;
    return a1;
  }
  if (!v50)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v48);
    goto LABEL_49;
  }
  sub_10001216C(v48, v49);
  return a1;
}

uint64_t initializeWithTake for AppEventCardLayout(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = v7[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = v7[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  v28 = v7[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v32 = a3[5];
  v33 = a3[6];
  v34 = a1 + v32;
  v35 = a2 + v32;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  v37 = a1 + v33;
  v38 = a2 + v33;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  v40 = a3[7];
  v41 = a3[8];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  v45 = a1 + v41;
  v46 = (__int128 *)(a2 + v41);
  v47 = *v46;
  v48 = v46[1];
  *(_QWORD *)(v45 + 32) = *((_QWORD *)v46 + 4);
  *(_OWORD *)v45 = v47;
  *(_OWORD *)(v45 + 16) = v48;
  v49 = a3[9];
  v50 = a3[10];
  v51 = a1 + v49;
  v52 = a2 + v49;
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  v54 = a1 + v50;
  v55 = a2 + v50;
  *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
  v56 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  v57 = a3[11];
  v58 = a3[12];
  v59 = a1 + v57;
  v60 = a2 + v57;
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  v61 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v61;
  v62 = a1 + v58;
  v63 = a2 + v58;
  *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  v64 = *(_OWORD *)(v63 + 16);
  *(_OWORD *)v62 = *(_OWORD *)v63;
  *(_OWORD *)(v62 + 16) = v64;
  v65 = a3[13];
  v66 = a3[14];
  v67 = a1 + v65;
  v68 = a2 + v65;
  *(_QWORD *)(v67 + 32) = *(_QWORD *)(v68 + 32);
  v69 = *(_OWORD *)(v68 + 16);
  *(_OWORD *)v67 = *(_OWORD *)v68;
  *(_OWORD *)(v67 + 16) = v69;
  v70 = a1 + v66;
  v71 = a2 + v66;
  *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
  v72 = *(_OWORD *)(v71 + 16);
  *(_OWORD *)v70 = *(_OWORD *)v71;
  *(_OWORD *)(v70 + 16) = v72;
  v73 = a3[15];
  v74 = a3[16];
  v75 = a1 + v73;
  v76 = a2 + v73;
  *(_QWORD *)(v75 + 32) = *(_QWORD *)(v76 + 32);
  v77 = *(_OWORD *)(v76 + 16);
  *(_OWORD *)v75 = *(_OWORD *)v76;
  *(_OWORD *)(v75 + 16) = v77;
  v78 = a1 + v74;
  v79 = a2 + v74;
  *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
  v80 = *(_OWORD *)(v79 + 16);
  *(_OWORD *)v78 = *(_OWORD *)v79;
  *(_OWORD *)(v78 + 16) = v80;
  v81 = a3[17];
  v82 = a3[18];
  v83 = a1 + v81;
  v84 = a2 + v81;
  *(_QWORD *)(v83 + 32) = *(_QWORD *)(v84 + 32);
  v85 = *(_OWORD *)(v84 + 16);
  *(_OWORD *)v83 = *(_OWORD *)v84;
  *(_OWORD *)(v83 + 16) = v85;
  v86 = a1 + v82;
  v87 = a2 + v82;
  v88 = *(_OWORD *)(v87 + 16);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_OWORD *)(v86 + 16) = v88;
  *(_QWORD *)(v86 + 32) = *(_QWORD *)(v87 + 32);
  return a1;
}

uint64_t assignWithTake for AppEventCardLayout(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v12));
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = v7[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v16));
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = v7[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v20));
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v24));
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  v28 = v7[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v28));
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v32 = a3[5];
  v33 = a1 + v32;
  v34 = a2 + v32;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v32));
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  v36 = a3[6];
  v37 = a1 + v36;
  v38 = a2 + v36;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v36));
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  v40 = a3[7];
  v41 = a1 + v40;
  v42 = a2 + v40;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v40));
  v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  v44 = a3[8];
  v45 = a1 + v44;
  v46 = a2 + v44;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v44));
  v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v48));
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  v51 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v51;
  v52 = a3[10];
  v53 = a1 + v52;
  v54 = a2 + v52;
  if (*(_QWORD *)(a1 + v52 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v53);
  v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  v56 = a3[11];
  v57 = a1 + v56;
  v58 = a2 + v56;
  if (*(_QWORD *)(a1 + v56 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v57);
  v59 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v59;
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
  v60 = a3[12];
  v61 = a1 + v60;
  v62 = a2 + v60;
  if (*(_QWORD *)(a1 + v60 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v61);
  v63 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v63;
  *(_QWORD *)(v61 + 32) = *(_QWORD *)(v62 + 32);
  v64 = a3[13];
  v65 = a1 + v64;
  v66 = a2 + v64;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v64));
  v67 = *(_OWORD *)(v66 + 16);
  *(_OWORD *)v65 = *(_OWORD *)v66;
  *(_OWORD *)(v65 + 16) = v67;
  *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
  v68 = a3[14];
  v69 = a1 + v68;
  v70 = a2 + v68;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v68));
  *(_QWORD *)(v69 + 32) = *(_QWORD *)(v70 + 32);
  v71 = *(_OWORD *)(v70 + 16);
  *(_OWORD *)v69 = *(_OWORD *)v70;
  *(_OWORD *)(v69 + 16) = v71;
  v72 = a3[15];
  v73 = a1 + v72;
  v74 = a2 + v72;
  if (*(_QWORD *)(a1 + v72 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v73);
  v75 = *(_OWORD *)(v74 + 16);
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *(_OWORD *)(v73 + 16) = v75;
  *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  v76 = a3[16];
  v77 = a1 + v76;
  v78 = a2 + v76;
  if (*(_QWORD *)(a1 + v76 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v77);
  v79 = *(_OWORD *)(v78 + 16);
  *(_OWORD *)v77 = *(_OWORD *)v78;
  *(_OWORD *)(v77 + 16) = v79;
  *(_QWORD *)(v77 + 32) = *(_QWORD *)(v78 + 32);
  v80 = a3[17];
  v81 = a1 + v80;
  v82 = a2 + v80;
  if (*(_QWORD *)(a1 + v80 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)v81);
  v83 = *(_OWORD *)(v82 + 16);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *(_OWORD *)(v81 + 16) = v83;
  *(_QWORD *)(v81 + 32) = *(_QWORD *)(v82 + 32);
  v84 = a3[18];
  v85 = a1 + v84;
  if (*(_QWORD *)(a1 + v84 + 24))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v84));
  v86 = *(_OWORD *)(a2 + v84 + 16);
  *(_OWORD *)v85 = *(_OWORD *)(a2 + v84);
  *(_OWORD *)(v85 + 16) = v86;
  *(_QWORD *)(v85 + 32) = *(_QWORD *)(a2 + v84 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEventCardLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F6BA4);
}

uint64_t sub_1000F6BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for AppEventCardLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEventCardLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F6C30);
}

uint64_t sub_1000F6C30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AppEventCardLayout.Metrics(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1000F6CAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  result = type metadata accessor for AppEventCardLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    v4[2] = "(";
    v4[3] = "(";
    v4[4] = "(";
    v4[5] = "(";
    v4[6] = &unk_100675CC0;
    v4[7] = &unk_100675CC0;
    v4[8] = &unk_100675CC0;
    v4[9] = "(";
    v4[10] = "(";
    v4[11] = &unk_100675CC0;
    v4[12] = &unk_100675CC0;
    v4[13] = &unk_100675CC0;
    v4[14] = &unk_100675CC0;
    swift_initStructMetadata(a1, 256, 15, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppEventCardLayout.Metrics(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for AspectRatio(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)v4 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
    v14 = a3[7];
    v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v4 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    v16 = a3[8];
    v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)v4 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
    v18 = a3[9];
    v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)v4 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
    v20 = a3[10];
    v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
  }
  return v4;
}

uint64_t destroy for AppEventCardLayout.Metrics(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for AspectRatio(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[6]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[7]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[8]));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[9]));
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)((char *)a1 + a2[10]));
}

uint64_t initializeWithCopy for AppEventCardLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  v13 = a3[7];
  v14 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  v15 = a3[8];
  v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  v17 = a3[9];
  v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  v19 = a3[10];
  v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  return a1;
}

_QWORD *assignWithCopy for AppEventCardLayout.Metrics(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_10001216C(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for AspectRatio(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  sub_10001216C((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[8]), (_QWORD *)((char *)a2 + a3[8]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]));
  sub_10001216C((_QWORD *)((char *)a1 + a3[10]), (_QWORD *)((char *)a2 + a3[10]));
  return a1;
}

uint64_t initializeWithTake for AppEventCardLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = a1 + v20;
  v25 = (__int128 *)(a2 + v20);
  v26 = *v25;
  v27 = v25[1];
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  *(_OWORD *)v24 = v26;
  *(_OWORD *)(v24 + 16) = v27;
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  return a1;
}

uint64_t assignWithTake for AppEventCardLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AspectRatio(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v11));
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v15));
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v19));
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v23));
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + v27));
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEventCardLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F7344);
}

uint64_t sub_1000F7344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AspectRatio(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppEventCardLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F73CC);
}

uint64_t sub_1000F73CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AspectRatio(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000F7440(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "(";
  result = type metadata accessor for AspectRatio(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "(";
    v4[3] = "(";
    v4[4] = "(";
    v4[5] = "(";
    v4[6] = "(";
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1000F75BC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v0 = ShareSheetAction.Activity.action.getter();
  v1 = Action.artwork.getter(v0);
  v2 = swift_release(v0);
  if (!v1)
    return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v3 = dispatch thunk of Artwork.isLocalImage.getter(v2);
  if ((v3 & 1) == 0)
    goto LABEL_9;
  v4 = dispatch thunk of Artwork.isSystemImage.getter(v3);
  if ((v4 & 1) != 0)
  {
    v5 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v1, 0, 1);
    goto LABEL_7;
  }
  if ((dispatch thunk of Artwork.isBundleImage.getter(v4) & 1) == 0)
  {
LABEL_9:
    swift_release(v1);
    return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v5 = sub_100485648(v1, 0);
LABEL_7:
  v6 = v5;
  swift_release(v1);
  if (v6)
    return v6;
  return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
}

id sub_1000F7724()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = type metadata accessor for ActionRunner.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_932442DA714B10A6559014343396A9F814ActionActivity_responder]);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = UIResponder.nearestActionRunner.getter();

    if (v8)
    {
      v9 = ShareSheetAction.Activity.action.getter();
      v14[3] = type metadata accessor for ActionActivity(0);
      v14[0] = v1;
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_932442DA714B10A6559014343396A9F814ActionActivity_objectGraph];
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionRunner.Origin.userInitiated(_:), v2);
      v11 = v1;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v9, v14, v5, v10);
      swift_release(v8);
      v12 = swift_release(v9);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);
      sub_1000131E0((uint64_t)v14);
    }
  }
  return objc_msgSend(v1, "activityDidFinish:", 1);
}

id sub_1000F78CC()
{
  return sub_1000F7E4C(0, (uint64_t (*)(void))type metadata accessor for ActionActivity);
}

uint64_t sub_1000F793C()
{
  return type metadata accessor for ActionActivity(0);
}

uint64_t type metadata accessor for ActionActivity(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FB278;
  if (!qword_1007FB278)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActionActivity);
  return result;
}

uint64_t sub_1000F7980(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for ShareSheetAction.Activity(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "\b";
    v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000F7A04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  char *v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  objc_class *v25;
  char *v26;
  char *v27;
  __n128 v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  Class v37;
  objc_class *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString *v44;
  NSString *v45;
  NSString *v46;
  NSString *v47;
  NSString *v48;
  NSString *v49;
  Class v50;
  uint64_t result;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  objc_super v65;
  objc_super v66;
  _QWORD *v67;

  v60 = a3;
  v8 = a2;
  v10 = type metadata accessor for ShareSheetAction.Activity(0, a2);
  v58 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkLoader(0);
  v14 = a5;
  v15 = *(_QWORD *)(a5 + qword_100854050);
  if (v15)
  {
    *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension22ActivityViewController_artworkLoader] = v15;
    swift_retain_n(v15, 2);
    v16 = v5;
    v61 = a1;
    v17 = sub_100396244(v15);
    swift_release(v15);

    v18 = *(_QWORD *)(v8 + 16);
    v19 = _swiftEmptyArrayStorage;
    v62 = a4;
    v59 = v14;
    if (v18)
    {
      v55 = v17;
      v57 = v16;
      v67 = _swiftEmptyArrayStorage;
      v64 = a4;
      swift_retain(v14);
      specialized ContiguousArray.reserveCapacity(_:)(v18);
      v20 = v58;
      v21 = *(unsigned __int8 *)(v58 + 80);
      v56 = v8;
      v22 = v8 + ((v21 + 32) & ~v21);
      v63 = *(_QWORD *)(v58 + 72);
      v23 = v14;
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
      do
      {
        v24(v12, v22, v10);
        v25 = (objc_class *)type metadata accessor for ActionActivity(0);
        v26 = (char *)objc_allocWithZone(v25);
        v27 = &v26[OBJC_IVAR____TtC22SubscribePageExtensionP33_932442DA714B10A6559014343396A9F814ActionActivity_responder];
        v28 = swift_unknownObjectWeakInit(&v26[OBJC_IVAR____TtC22SubscribePageExtensionP33_932442DA714B10A6559014343396A9F814ActionActivity_responder], 0);
        ((void (*)(char *, char *, uint64_t, __n128))v24)(&v26[OBJC_IVAR____TtC22SubscribePageExtensionP33_932442DA714B10A6559014343396A9F814ActionActivity_activity], v12, v10, v28);
        swift_unknownObjectWeakAssign(v27, v64);
        *(_QWORD *)&v26[OBJC_IVAR____TtC22SubscribePageExtensionP33_932442DA714B10A6559014343396A9F814ActionActivity_objectGraph] = v23;
        v66.receiver = v26;
        v66.super_class = v25;
        *(_QWORD *)&v29 = swift_retain(v23).n128_u64[0];
        v30 = objc_msgSendSuper2(&v66, "init", v29);
        v31 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v10);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v32 = v67[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
        specialized ContiguousArray._endMutation()(v33);
        v22 += v63;
        --v18;
      }
      while (v18);
      v19 = v67;

      swift_release(v23);
      v34 = v60;
      v8 = v56;
      v16 = v57;
      v17 = v55;
    }
    else
    {
      v34 = v60;
    }
    swift_bridgeObjectRelease(v8);
    v35 = sub_1004191B0(v17);
    swift_bridgeObjectRelease(v17);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v35);
    sub_1000F7EAC();
    v37 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    v38 = (objc_class *)type metadata accessor for ActivityViewController();
    v65.receiver = v16;
    v65.super_class = v38;
    v39 = objc_msgSendSuper2(&v65, "initWithActivityItems:applicationActivities:", isa, v37);

    v40 = v39;
    objc_msgSend(v40, "setSharingStyle:", v34);
    v41 = sub_10000DF3C((uint64_t *)&unk_100811BA0);
    v42 = swift_allocObject(v41, 80, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100671120;
    *(_QWORD *)(v42 + 32) = UIActivityTypeAddToReadingList;
    *(_QWORD *)(v42 + 40) = UIActivityTypeAssignToContact;
    *(_QWORD *)(v42 + 48) = UIActivityTypePostToFlickr;
    *(_QWORD *)(v42 + 56) = UIActivityTypePrint;
    *(_QWORD *)(v42 + 64) = UIActivityTypeSaveToCameraRoll;
    *(_QWORD *)(v42 + 72) = UIActivityTypeCopyToPasteboard;
    type metadata accessor for ActivityType(0);
    v43 = v40;
    v44 = UIActivityTypeAddToReadingList;
    v45 = UIActivityTypeAssignToContact;
    v46 = UIActivityTypePostToFlickr;
    v47 = UIActivityTypePrint;
    v48 = UIActivityTypeSaveToCameraRoll;
    v49 = UIActivityTypeCopyToPasteboard;
    v50 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "setExcludedActivityTypes:", v50, swift_bridgeObjectRelease(v42).n128_f64[0]);

    swift_release(v61);
    swift_release(v59);
    return (uint64_t)v43;
  }
  else
  {
    v52 = v13;
    v53 = v5;
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v52);
    __break(1u);
  }
  return result;
}

id sub_1000F7E40(uint64_t a1)
{
  return sub_1000F7E4C(a1, type metadata accessor for ActivityViewController);
}

id sub_1000F7E4C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for ActivityViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension22ActivityViewController);
}

unint64_t sub_1000F7EAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FB2B8;
  if (!qword_1007FB2B8)
  {
    v1 = objc_opt_self(UIActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007FB2B8);
  }
  return result;
}

void sub_1000F7EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (!v3)
  {
    if (!a1)
      return;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (!a1)
    goto LABEL_6;
  v7 = a1;
  v4 = type metadata accessor for ProductMedia(0);
  v5 = sub_10000E99C(&qword_1007FB3B8, (uint64_t (*)(uint64_t))&type metadata accessor for ProductMedia, (uint64_t)&protocol conformance descriptor for ProductMedia);
  swift_retain_n(v3, 2);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(&v8, &v7, v4, v5);
  v6 = v8;
  swift_release(v3);
  swift_release(v6);
  if ((v4 & 1) == 0)
LABEL_6:
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView), "reloadData", v7);
}

void sub_1000F7FB8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;

  v2 = v1;
  if (a1)
  {
    v3 = a1;
    v4 = type metadata accessor for VideoPlaybackCoordinator(0);
    v5 = *(void **)(v3 + qword_100854088);
    if (!v5)
      goto LABEL_10;
    v6 = type metadata accessor for VideoPlaybackScrollObserver(0);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v7 = v5;
    swift_retain(v3);
    v8 = VideoPlaybackScrollObserver.init(_:)(v5);
    CompoundScrollObserver.removeChild(_:)(v8, &protocol witness table for VideoPlaybackScrollObserver);
    swift_release(v3);

    swift_release(v8);
  }
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_objectGraph];
  if (!v3)
    return;
  v4 = type metadata accessor for VideoPlaybackCoordinator(0);
  v9 = *(void **)(v3 + qword_100854088);
  if (!v9)
  {
LABEL_10:
    v14 = v4;
    swift_retain(v3);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v14);
    __break(1u);
    return;
  }
  v10 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_compoundScrollObserver];
  v11 = type metadata accessor for VideoPlaybackScrollObserver(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v15 = v9;
  swift_retain(v3);
  v12 = VideoPlaybackScrollObserver.init(_:)(v9);
  CompoundScrollObserver.addChild(_:)(v12, &protocol witness table for VideoPlaybackScrollObserver);
  swift_release(v12);
  v13 = objc_msgSend(v2, "window");

  if (v13)
    objc_msgSend(v10, "scrollViewDidScroll:", *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView]);
  swift_release(v3);

}

uint64_t sub_1000F818C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1007F2A08 != -1)
    swift_once(&qword_1007F2A08, sub_10042D104);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100856168);
  qword_1007FB2D8 = v0;
  unk_1007FB2E0 = &protocol witness table for StaticDimension;
  v2 = sub_1000117C0(qword_1007FB2C0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

uint64_t sub_1000F8210(uint64_t a1)
{
  return sub_10004D81C(a1, &qword_1007FB300, &qword_1007FB308, qword_1007FB2E8);
}

uint64_t sub_1000F8224(uint64_t a1)
{
  return sub_10004D81C(a1, &qword_1007FB328, &qword_1007FB330, qword_1007FB310);
}

uint64_t sub_1000F8238(uint64_t a1)
{
  return sub_10004D81C(a1, &qword_100851A00, &qword_100851A08, qword_1008519E8);
}

char *sub_1000F824C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  id v43;
  id v44;
  objc_super v46;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_flowLayout;
  v11 = objc_allocWithZone((Class)type metadata accessor for NestedHorizontalShelfCollectionViewFlowLayout());
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  *(_QWORD *)&v4[v10] = v13;
  v14 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_compoundScrollObserver;
  v15 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)&v12[v14] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_fallbackHorizontalViewMargin] = 0x4020000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits] = 0;
  v16 = &v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_itemLayoutContext];
  v17 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryView] = 0;
  v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_displaysTopAccessoryDivider] = 0;
  v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_displaysBottomAccessoryDivider] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryDividerView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryDividerView] = 0;
  v18 = &v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotSelectionHandler];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v13, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView] = v19;

  v46.receiver = v12;
  v46.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  v21 = objc_msgSend(v20, "contentView");
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v22 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView;
  v23 = *(void **)&v20[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView];
  objc_msgSend(v23, "setDecelerationRate:", UIScrollViewDecelerationRateFast);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v23;
  v26 = objc_msgSend(v24, "clearColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = *(void **)&v20[v22];
  objc_msgSend(v27, "setAllowsSelection:", 1);
  objc_msgSend(v27, "setAlwaysBounceHorizontal:", 1);
  objc_msgSend(v27, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v27, "setDataSource:", v20);
  objc_msgSend(v27, "setDelegate:", v20);
  v28 = type metadata accessor for VideoCollectionViewCell(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v30 = v27;
  static UICollectionReusableView.defaultReuseIdentifier.getter(v31);
  v33 = v32;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = *(void **)&v20[v22];
  v36 = type metadata accessor for ScreenshotCollectionViewCell(0);
  v37 = swift_getObjCClassFromMetadata(v36);
  v38 = v35;
  static UICollectionReusableView.defaultReuseIdentifier.getter(v39);
  v41 = v40;
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "registerClass:forCellWithReuseIdentifier:", v37, v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

  v43 = objc_msgSend(v20, "contentView");
  v44 = *(id *)&v20[v22];
  objc_msgSend(v43, "addSubview:", v44);

  return v20;
}

id sub_1000F86A4()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  double v31;
  double v32;
  double v33;
  CGFloat MinY;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  double v41;
  uint64_t v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  char *v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  double v55;
  uint64_t v56;
  double v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double MaxY;
  uint64_t v64;
  CGFloat v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  double MinX;
  CGFloat v81;
  double v82;
  CGFloat v83;
  double v84;
  double Width;
  double v86;
  double v87;
  double v88;
  void *v89;
  void *v90;
  void *v91;
  id result;
  CGFloat v93;
  CGFloat v94;
  double v95;
  double v96;
  double v97;
  CGFloat v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  CGFloat v104;
  CGFloat v105;
  double v106;
  CGFloat v107;
  CGFloat v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  double v113;
  CGFloat v114;
  double v115;
  double v116;
  double v117;
  char v118[24];
  char v119[24];
  objc_super v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v103 = type metadata accessor for DividerView.Style(0);
  __chkstk_darwin(v103);
  v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120.receiver = v1;
  v120.super_class = ObjectType;
  objc_msgSendSuper2(&v120, "layoutSubviews", v7);
  v10 = objc_msgSend(v1, "contentView");
  v11 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v111 = LayoutMarginsAware<>.layoutFrame.getter(v11);
  v108 = v12;
  v107 = v13;
  v114 = v14;

  v102 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryView;
  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryView];
  v116 = 0.0;
  v16 = 0.0;
  v17 = 0.0;
  v18 = 0.0;
  if (v15)
  {
    v19 = v15;
    objc_msgSend(v19, "frame");
    v18 = v20;
    v17 = v21;
    if (qword_1007F1238 != -1)
      swift_once(&qword_1007F1238, sub_1000F8238);
    v22 = qword_100851A00;
    v23 = qword_100851A08;
    sub_100011064(qword_1008519E8, qword_100851A00);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    v16 = AnyDimension.value(in:rounded:)(v1, v9, v22, v23);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v101 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryView;
  v24 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryView];
  v117 = 0.0;
  v113 = 0.0;
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v25, "frame");
    v113 = v26;
    v117 = v27;
    if (qword_1007F1230 != -1)
      swift_once(&qword_1007F1230, sub_1000F8224);
    v28 = qword_1007FB328;
    v29 = qword_1007FB330;
    sub_100011064(qword_1007FB310, qword_1007FB328);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v28);
    v116 = AnyDimension.value(in:rounded:)(v1, v9, v28, v29);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v106 = v16;
  v100 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryDividerView;
  v30 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryDividerView];
  v112 = 0.0;
  v31 = 0.0;
  v32 = 0.0;
  v33 = 0.0;
  MinY = 0.0;
  if (v30)
  {
    v35 = v17;
    v36 = v18;
    v37 = (uint64_t)&v30[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style];
    swift_beginAccess(&v30[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style], v118, 0, 0);
    sub_1000FB5B0(v37, (uint64_t)v4);
    v38 = qword_1007F2028;
    v39 = v30;
    v40 = v39;
    if (v38 != -1)
      v39 = (char *)swift_once(&qword_1007F2028, sub_1003FC8FC);
    v41 = floor(*(double *)&qword_100854638);
    static Dimensions.defaultRoundingRule.getter(v39);
    v42 = type metadata accessor for StaticDimension(0);
    v43 = AnyDimension.value(in:rounded:)(v40, v9, v42, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v32 = v41 + v43;
    sub_1000FB638((uint64_t)v4);
    v44 = v111;
    v121.origin.x = v111;
    v45 = v108;
    v121.origin.y = v108;
    v31 = v107;
    v121.size.width = v107;
    v46 = v114;
    v121.size.height = v114;
    v33 = CGRectGetMaxX(v121) - v31;
    v122.origin.x = v44;
    v122.origin.y = v45;
    v122.size.width = v31;
    v122.size.height = v46;
    MinY = CGRectGetMinY(v122);

    v18 = v36;
    v17 = v35;
  }
  v104 = MinY;
  v105 = v31;
  v115 = v32;
  v99 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryDividerView;
  v47 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryDividerView];
  v110 = 0.0;
  v109 = 0.0;
  v48 = 0.0;
  if (v47)
  {
    v49 = v17;
    v50 = v18;
    v51 = (uint64_t)&v47[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style];
    swift_beginAccess(&v47[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style], v119, 0, 0);
    sub_1000FB5B0(v51, (uint64_t)v4);
    v52 = qword_1007F2028;
    v53 = v47;
    v54 = v53;
    if (v52 != -1)
      v53 = (char *)swift_once(&qword_1007F2028, sub_1003FC8FC);
    v55 = floor(*(double *)&qword_100854638);
    static Dimensions.defaultRoundingRule.getter(v53);
    v56 = type metadata accessor for StaticDimension(0);
    v57 = AnyDimension.value(in:rounded:)(v54, v9, v56, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v58 = v55 + v57;
    sub_1000FB638((uint64_t)v4);
    v59 = v111;
    v123.origin.x = v111;
    v60 = v108;
    v123.origin.y = v108;
    v61 = v107;
    v123.size.width = v107;
    v62 = v114;
    v123.size.height = v114;
    v109 = CGRectGetMaxX(v123) - v61;
    v124.origin.x = v59;
    v124.origin.y = v60;
    v124.size.width = v61;
    v124.size.height = v62;
    MaxY = CGRectGetMaxY(v124);

    v110 = v58;
    v48 = MaxY - ceil(v58);
    v112 = v61;
    v18 = v50;
    v17 = v49;
  }
  v64 = v101;
  if (*(_QWORD *)&v1[v101])
  {
    v65 = v33;
    if (qword_1007F1220 != -1)
      swift_once(&qword_1007F1220, sub_1000F818C);
    v66 = qword_1007FB2D8;
    v67 = unk_1007FB2E0;
    sub_100011064(qword_1007FB2C0, qword_1007FB2D8);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v66);
    v68 = AnyDimension.value(in:rounded:)(v1, v9, v66, v67);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    v65 = v33;
    v68 = 0.0;
  }
  v95 = v18;
  if (qword_1007F1228 != -1)
    swift_once(&qword_1007F1228, sub_1000F8210);
  v69 = qword_1007FB300;
  v70 = qword_1007FB308;
  sub_100011064(qword_1007FB2E8, qword_1007FB300);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v69);
  v71 = AnyDimension.value(in:rounded:)(v1, v9, v69, v70);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v97 = v68;
  v96 = v17;
  v72 = v17 + v117 + v106 + v116 + v68 + v71;
  v125.origin.x = v65;
  v73 = v104;
  v125.origin.y = v104;
  v74 = v105;
  v125.size.width = v105;
  v125.size.height = v115;
  v75 = CGRectGetHeight(v125) + v72;
  v126.origin.x = v109;
  v103 = *(_QWORD *)&v48;
  v126.origin.y = v48;
  v126.size.width = v112;
  v126.size.height = v110;
  v98 = CGRectGetHeight(v126) + v75;
  v76 = v111;
  v127.origin.x = v111;
  v77 = v108;
  v127.origin.y = v108;
  v78 = v107;
  v127.size.width = v107;
  v79 = v114;
  v127.size.height = v114;
  MinX = CGRectGetMinX(v127);
  v94 = v65;
  v128.origin.x = v65;
  v128.origin.y = v73;
  v128.size.width = v74;
  v128.size.height = v115;
  v81 = v97 + CGRectGetMaxY(v128);
  v129.origin.x = v76;
  v129.origin.y = v77;
  v129.size.width = v78;
  v129.size.height = v79;
  v82 = CGRectGetMinX(v129);
  v97 = MinX;
  v130.origin.x = MinX;
  v93 = v81;
  v130.origin.y = v81;
  v130.size.width = v113;
  v130.size.height = v117;
  v83 = v76;
  v84 = v116 + CGRectGetMaxY(v130);
  v131.origin.x = v83;
  v131.origin.y = v77;
  v131.size.width = v78;
  v131.size.height = v79;
  Width = CGRectGetWidth(v131);
  v132.origin.x = v83;
  v132.origin.y = v77;
  v132.size.width = v78;
  v132.size.height = v79;
  v86 = CGRectGetHeight(v132) - v98;
  v133.origin.x = v83;
  v133.origin.y = v77;
  v133.size.width = v78;
  v133.size.height = v79;
  v87 = CGRectGetMinX(v133);
  v134.origin.x = v82;
  v134.origin.y = v84;
  v134.size.width = Width;
  v134.size.height = v86;
  v88 = CGRectGetMaxY(v134);
  v89 = *(void **)&v1[v100];
  if (v89)
    objc_msgSend(v89, "setFrame:", v94, v104, v105, v115);
  v90 = *(void **)&v1[v64];
  if (v90)
    objc_msgSend(v90, "setFrame:", v97, v93, v113, v117);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView], "setFrame:", v82, v84, Width, v86);
  v91 = *(void **)&v1[v102];
  if (v91)
    objc_msgSend(v91, "setFrame:", v87, v106 + v88, v95, v96);
  result = *(id *)&v1[v99];
  if (result)
    return objc_msgSend(result, "setFrame:", v109, *(double *)&v103, v112, v110);
  return result;
}

void sub_1000F9038()
{
  sub_1000F9060(&OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_displaysTopAccessoryDivider, &OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryDividerView);
}

void sub_1000F904C()
{
  sub_1000F9060(&OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_displaysBottomAccessoryDivider, &OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryDividerView);
}

void sub_1000F9060(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  if (*(_BYTE *)(v2 + *a1) == 1)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DividerView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = *a2;
    v6 = *(void **)(v2 + *a2);
    if (v6)
    {
      objc_msgSend(v6, "removeFromSuperview");
      v7 = *(void **)(v2 + v5);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v2 + v5) = v4;
    v11 = v4;

    sub_1000F915C(a2);
  }
  else
  {
    v8 = *a2;
    v9 = *(void **)(v2 + *a2);
    if (v9)
    {
      objc_msgSend(v9, "removeFromSuperview");
      v10 = *(void **)(v2 + v8);
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)(v2 + v8) = 0;

    sub_1000F915C(a2);
  }
}

id sub_1000F915C(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _BYTE v21[24];

  v3 = type metadata accessor for DividerView.Style(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(void **)&v1[*a1];
  if (!v7)
    return objc_msgSend(v1, "setNeedsLayout", v4);
  v8 = qword_1007F2038;
  v9 = v7;
  if (v8 != -1)
    swift_once(&qword_1007F2038, sub_1003FC974);
  v10 = sub_1000117A8(v3, (uint64_t)qword_100854658);
  sub_1000FB5B0(v10, (uint64_t)v6);
  v11 = &v9[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style];
  swift_beginAccess(&v9[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_style], v21, 33, 0);
  sub_1000FB5F4((uint64_t)v6, (uint64_t)v11);
  swift_endAccess(v21);
  v12 = &v9[OBJC_IVAR____TtC22SubscribePageExtension11DividerView_separatorInset];
  v13 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v11;
  *((_OWORD *)v12 + 1) = v13;
  objc_msgSend(v9, "setNeedsLayout");
  objc_msgSend(v9, "setNeedsLayout");
  sub_1000FB638((uint64_t)v6);
  result = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits];
  if (result)
  {
    objc_msgSend(result, "pageMarginInsets");
    *(_QWORD *)v12 = v15;
    *((_QWORD *)v12 + 1) = v16;
    *((_QWORD *)v12 + 2) = v17;
    *((_QWORD *)v12 + 3) = v18;
    objc_msgSend(v9, "setNeedsLayout");
    v19 = objc_msgSend(v1, "contentView");
    objc_msgSend(v19, "addSubview:", v9);

    return objc_msgSend(v1, "setNeedsLayout", v4);
  }
  __break(1u);
  return result;
}

unint64_t sub_1000F934C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  Class v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  Class isa;
  id v26;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (!v3)
  {
LABEL_9:
    type metadata accessor for VideoCollectionViewCell(0);
    static UICollectionReusableView.defaultReuseIdentifier.getter(v21);
    v23 = v22;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v26 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v24, isa);

    return (unint64_t)v26;
  }
  swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media));
  v5 = ProductMedia.items.getter(v4);
  result = IndexPath.item.getter(v5);
  if ((v5 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v5);
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(v5 + 8 * result + 32);
    swift_retain(v7);
LABEL_6:
    swift_bridgeObjectRelease(v5);
    v9 = ProductMediaItem.screenshot.getter(v8);
    swift_release(v7);
    swift_release(v9);
    if (v9)
    {
      v10 = type metadata accessor for ScreenshotCollectionViewCell(0);
      static UICollectionReusableView.defaultReuseIdentifier.getter(v11);
      v13 = v12;
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      v15 = IndexPath._bridgeToObjectiveC()().super.isa;
      v16 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v14, v15);

      v17 = swift_dynamicCastClassUnconditional(v16, v10, 0, 0, 0);
      v18 = ProductMedia.platform.getter();
      v19 = *(_QWORD *)(v17
                      + OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView);
      v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform);
      *(_QWORD *)(v19 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform) = v18;
      swift_retain(v18);
      swift_release(v20);
      sub_10022E900();
      swift_release(v3);
      swift_release(v18);
      return v17;
    }
    swift_release(v3);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F96FC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, char *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v15 = a3;
  v16 = a4;
  v17 = a1;
  a6(v16, v14);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_1000F97C8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (!v3)
    return;
  swift_retain(v3);
  v6 = ProductMedia.items.getter(v5);
  swift_release(v3);
  v8 = IndexPath.item.getter(v7);
  if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
      swift_retain(v9);
      goto LABEL_6;
    }
    __break(1u);
    return;
  }
  v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
LABEL_6:
  swift_bridgeObjectRelease(v6);
  v11 = ProductMediaItem.screenshot.getter(v10);
  if (v11)
  {
    v12 = v11;
    v13 = v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotSelectionHandler;
    v14 = *(void (**)(uint64_t, uint64_t))(v2
                                                  + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotSelectionHandler);
    if (v14)
    {
      v15 = *(_QWORD *)(v13 + 8);
      swift_retain(v15);
      v17 = IndexPath.item.getter(v16);
      v14(v12, v17);
      sub_100019310((uint64_t)v14, v15);
    }
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);
    swift_release(v9);
    swift_release(v12);

  }
  else
  {
    swift_release(v9);
  }
}

uint64_t sub_1000F9BCC()
{
  return type metadata accessor for ProductMediaCollectionViewCell(0);
}

uint64_t type metadata accessor for ProductMediaCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FB3A0;
  if (!qword_1007FB3A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductMediaCollectionViewCell);
  return result;
}

void sub_1000F9C10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[16];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[7] = "\b";
  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = "\b";
    v4[10] = "\b";
    v4[11] = &unk_100675D98;
    v4[12] = &unk_100675D98;
    v4[13] = "\b";
    v4[14] = "\b";
    v4[15] = &unk_100675DB0;
    swift_updateClassMetadata2(a1, 256, 16, v4, a1 + 80);
  }
}

void sub_1000F9CC4(uint64_t a1, objc_class *a2, uint64_t a3)
{
  sub_1000FB228(a2, a3);
}

double sub_1000F9CD4(uint64_t a1, int a2, unsigned int a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  double v89;
  uint64_t v90;
  char v91;
  void (*v92)(uint64_t, uint64_t, double);
  double v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *inited;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  double v108;
  int64_t v109;
  int64_t v110;
  unint64_t v111;
  unint64_t v112;
  int64_t v113;
  int64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  double v119;
  unint64_t v120;
  int64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  int64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  double v129;
  unint64_t v130;
  unint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  int64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  double v145;
  uint64_t v146;
  double *v147;
  double v148;
  int64_t v150;
  int64_t v151;
  int64_t v152;
  double v153;
  int v154;
  unsigned int v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  char *v166;
  void *v167;
  char v168[40];
  _BYTE v169[64];
  double v170;
  double v171;

  v155 = a3;
  v154 = a2;
  v158 = type metadata accessor for FloatingPointRoundingRule(0);
  v157 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v156 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AspectRatio(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  *(_QWORD *)&v153 = (char *)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v162 = (unint64_t)&v153 - v21;
  __chkstk_darwin(v22);
  v165 = (char *)&v153 - v23;
  __chkstk_darwin(v24);
  v160 = (char *)&v153 - v25;
  v26 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v26);
  v166 = (char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v153 - v29;
  v32 = ProductMedia.platform.getter(v31);
  v163 = a1;
  v33 = ProductMedia.items.getter(v32);
  v34 = v33;
  if (v33 >> 62)
    goto LABEL_48;
  v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v33);
LABEL_3:
  v159 = v32;
  v167 = (void *)a4;
  if (v35)
  {
    v164 = v34 & 0xC000000000000001;
    v32 = 4;
    v161 = v18;
    while (1)
    {
      v39 = v32 - 4;
      if (v164)
      {
        v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v34);
        v41 = v40;
        a4 = v32 - 3;
        if (__OFADD__(v39, 1))
          goto LABEL_47;
      }
      else
      {
        v41 = *(_QWORD *)(v34 + 8 * v32);
        swift_retain(v41);
        a4 = v32 - 3;
        if (__OFADD__(v39, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          if (v34 < 0)
            v95 = v34;
          else
            v95 = v34 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v34);
          v35 = _CocoaArrayWrapper.endIndex.getter(v95);
          goto LABEL_3;
        }
      }
      v42 = v17;
      v43 = v34;
      v44 = v35;
      v45 = ProductMediaItem.screenshot.getter(v40);
      if (v45)
      {
        v36 = v45;
        v37 = dispatch thunk of Artwork.isPortrait.getter(v45);
        swift_release(v41);
        swift_release(v36);
        if ((v37 & 1) != 0)
          goto LABEL_15;
      }
      else
      {
        v46 = ProductMediaItem.video.getter(0);
        if (!v46)
        {
          swift_bridgeObjectRelease_n(v43, 2);
          swift_release(v41);
          goto LABEL_19;
        }
        v47 = v46;
        v48 = Video.preview.getter(v46);
        v49 = dispatch thunk of Artwork.isPortrait.getter(v48);
        swift_release(v41);
        swift_release(v47);
        swift_release(v48);
        if ((v49 & 1) != 0)
        {
LABEL_15:
          swift_bridgeObjectRelease_n(v43, 2);
LABEL_19:
          LODWORD(v164) = 1;
          v32 = v159;
          a4 = (uint64_t)v167;
          v17 = v42;
          v18 = v161;
          goto LABEL_20;
        }
      }
      ++v32;
      v35 = v44;
      v38 = a4 == v44;
      a4 = (uint64_t)v167;
      v34 = v43;
      v17 = v42;
      v18 = v161;
      if (v38)
      {
        swift_bridgeObjectRelease_n(v34, 2);
        LODWORD(v164) = 0;
        v32 = v159;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease_n(v34, 2);
  LODWORD(v164) = 0;
LABEL_20:
  swift_retain(v32);
  sub_10022F9D4(v50, (uint64_t)v169);
  swift_release(v32);
  v52 = ProductMedia.items.getter(v51);
  v53 = v52;
  if ((unint64_t)v52 >> 62)
  {
    if (v52 >= 0)
      v52 &= 0xFFFFFFFFFFFFFF8uLL;
    v54 = _CocoaArrayWrapper.endIndex.getter(v52);
  }
  else
  {
    v54 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v53);
  if (v54 <= 0)
  {
    type metadata accessor for Screenshots(0);
    v86 = v162;
    sub_10022F638(v162);
    v88 = dispatch thunk of MediaPlatform.isPhonePlatform.getter(v87);
    v89 = v153;
    v90 = (*(uint64_t (**)(double, uint64_t, uint64_t))(v18 + 16))(COERCE_DOUBLE(*(_QWORD *)&v153), v86, v17);
    if ((v88 & 1) != 0)
      v91 = AspectRatio.isPortrait.getter(v90);
    else
      v91 = 0;
    v92 = *(void (**)(uint64_t, uint64_t, double))(v18 + 8);
    ((void (*)(_QWORD, uint64_t))v92)(*(_QWORD *)&v89, v17);
    v93 = sub_100538CBC(0, v86, v91 & 1, (void *)a4, v170, v171, a7, a8, a9);
    v63 = v94;
    v92(v86, v17, v93);
  }
  else
  {
    v56 = ProductMedia.items.getter(v55);
    v57 = v56;
    if ((unint64_t)v56 >> 62)
    {
      if (v56 >= 0)
        v56 &= 0xFFFFFFFFFFFFFF8uLL;
      v58 = _CocoaArrayWrapper.endIndex.getter(v56);
      if (v58)
        goto LABEL_25;
    }
    else
    {
      v58 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v58)
      {
LABEL_25:
        if (v58 < 1)
          __break(1u);
        v153 = a5;
        v59 = a6;
        v60 = 0;
        v61 = v170;
        v62 = v171;
        v162 = v57 & 0xC000000000000001;
        v63 = 0.0;
        v163 = v57;
        while (1)
        {
          if (v162)
          {
            v67 = specialized _ArrayBuffer._getElementSlowPath(_:)(v60, v57);
            v68 = v67;
          }
          else
          {
            v68 = *(_QWORD *)(v57 + 8 * v60 + 32);
            swift_retain(v68);
          }
          v69 = ProductMediaItem.screenshot.getter(v67);
          if (v69)
          {
            v70 = v69;
            Artwork.size.getter(v69);
            v71 = v160;
            AspectRatio.init(_:_:)(v72);
            v73 = swift_release(v70);
            (*(void (**)(char *, char *, uint64_t, __n128))(v18 + 32))(v30, v71, v17, v73);
          }
          else
          {
            v75 = ProductMediaItem.video.getter(0);
            if (!v75)
            {
              v80 = 1;
              goto LABEL_39;
            }
            v76 = v75;
            v77 = Video.preview.getter(v75);
            swift_release(v76);
            Artwork.size.getter(v78);
            AspectRatio.init(_:_:)(v79);
            v74 = swift_release(v77);
          }
          v80 = 0;
LABEL_39:
          v81 = (uint64_t)v166;
          v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))(v30, v80, 1, v17, v74);
          v83 = dispatch thunk of MediaPlatform.isPhonePlatform.getter(v82);
          sub_1000FB568((uint64_t)v30, v81);
          v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v81, 1, v17);
          v85 = (uint64_t)v165;
          if ((_DWORD)v84 == 1)
          {
            AspectRatio.init(_:_:)(v84);
            sub_100011088(v81, (uint64_t *)&unk_1007FA760);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v165, v81, v17);
          }
          ++v60;
          sub_100538CBC(0, v85, v164 & v83, v167, v61, v62, a7, a8, a9);
          v65 = v64;
          v66 = swift_release(v68);
          (*(void (**)(uint64_t, uint64_t, __n128))(v18 + 8))(v85, v17, v66);
          if (v65 > v63)
            v63 = v65;
          sub_100011088((uint64_t)v30, (uint64_t *)&unk_1007FA760);
          v57 = v163;
          if (v58 == v60)
          {
            swift_bridgeObjectRelease(v163);
            a6 = v59;
            a5 = v153;
            a4 = (uint64_t)v167;
            goto LABEL_59;
          }
        }
      }
    }
    swift_bridgeObjectRelease(v57);
    v63 = 0.0;
  }
LABEL_59:
  v96 = sub_10000DF3C(&qword_1007FB3B0);
  inited = (_QWORD *)swift_initStackObject(v96, v168);
  *((_OWORD *)inited + 1) = xmmword_10066FBA0;
  *((double *)inited + 4) = v63;
  v98 = v158;
  v99 = v157;
  v100 = v156;
  if (a5 < COERCE_DOUBLE(1))
    goto LABEL_72;
  if (qword_1007F1220 != -1)
    goto LABEL_112;
  while (1)
  {
    v101 = qword_1007FB2D8;
    v102 = unk_1007FB2E0;
    sub_100011064(qword_1007FB2C0, qword_1007FB2D8);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v101);
    v103 = AnyDimension.value(in:rounded:)(a4, v100, v101, v102);
    v104 = a4;
    v105 = *(void (**)(char *, uint64_t))(v99 + 8);
    v105(v100, v98);
    if (qword_1007F1230 != -1)
      swift_once(&qword_1007F1230, sub_1000F8224);
    v106 = qword_1007FB328;
    v107 = qword_1007FB330;
    sub_100011064(qword_1007FB310, qword_1007FB328);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v106);
    v108 = AnyDimension.value(in:rounded:)(v104, v100, v106, v107);
    v105(v100, v98);
    v109 = inited[2];
    v110 = v109 + 3;
    if (__OFADD__(v109, 3))
    {
      __break(1u);
LABEL_114:
      if (v109 <= v110)
        v151 = v109 + 3;
      else
        v151 = v109;
      inited = sub_100201004((_QWORD *)1, v151, 1, inited);
      v109 = inited[2];
      v111 = inited[3];
      v112 = v111 >> 1;
      goto LABEL_65;
    }
    v111 = inited[3];
    v112 = v111 >> 1;
    if ((uint64_t)(v111 >> 1) < v110)
      goto LABEL_114;
LABEL_65:
    a4 = (uint64_t)v167;
    v113 = v109 + 1;
    if (v112 <= v109)
    {
      inited = sub_100201004((_QWORD *)(v111 > 1), v109 + 1, 1, inited);
      v111 = inited[3];
      v112 = v111 >> 1;
    }
    inited[2] = v113;
    *(double *)&inited[v109 + 4] = v103;
    v114 = v109 + 2;
    if ((uint64_t)v112 < v109 + 2)
      inited = sub_100201004((_QWORD *)(v111 > 1), v109 + 2, 1, inited);
    inited[2] = v114;
    *(double *)&inited[v113 + 4] = a5;
    v115 = inited[3];
    if (v109 + 3 > (uint64_t)(v115 >> 1))
      inited = sub_100201004((_QWORD *)(v115 > 1), v109 + 3, 1, inited);
    inited[2] = v109 + 3;
    *(double *)&inited[v114 + 4] = v108;
LABEL_72:
    if (a6 >= COERCE_DOUBLE(1))
    {
      if (qword_1007F1238 != -1)
        swift_once(&qword_1007F1238, sub_1000F8238);
      v116 = qword_100851A00;
      v117 = qword_100851A08;
      v118 = sub_100011064(qword_1008519E8, qword_100851A00);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v116);
      v119 = AnyDimension.value(in:rounded:)(a4, v100, v116, v117);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
      v120 = inited[2];
      v121 = v120 + 2;
      if (__OFADD__(v120, 2))
      {
        __break(1u);
        goto LABEL_119;
      }
      v122 = inited[3];
      v123 = v122 >> 1;
      if ((uint64_t)(v122 >> 1) < v121)
      {
        if ((uint64_t)v120 <= v121)
          v152 = v120 + 2;
        else
          v152 = inited[2];
        inited = sub_100201004((_QWORD *)1, v152, 1, inited);
        v120 = inited[2];
        v122 = inited[3];
        v123 = v122 >> 1;
      }
      v124 = v120 + 1;
      if (v123 <= v120)
      {
        inited = sub_100201004((_QWORD *)(v122 > 1), v120 + 1, 1, inited);
        v122 = inited[3];
        v123 = v122 >> 1;
      }
      inited[2] = v124;
      *(double *)&inited[v120 + 4] = a6;
      v125 = v120 + 2;
      if ((uint64_t)v123 < v125)
        inited = sub_100201004((_QWORD *)(v122 > 1), v125, 1, inited);
      inited[2] = v125;
      *(double *)&inited[v124 + 4] = v119;
    }
    if (qword_1007F1228 != -1)
      swift_once(&qword_1007F1228, sub_1000F8210);
    v126 = qword_1007FB300;
    v127 = qword_1007FB308;
    sub_100011064(qword_1007FB2E8, qword_1007FB300);
    v128 = v167;
    swift_getObjectType();
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v126);
    v129 = AnyDimension.value(in:rounded:)(v128, v100, v126, v127);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
    v131 = inited[2];
    v130 = inited[3];
    if (v131 >= v130 >> 1)
      inited = sub_100201004((_QWORD *)(v130 > 1), v131 + 1, 1, inited);
    a4 = v155;
    v132 = v154;
    inited[2] = v131 + 1;
    *(double *)&inited[v131 + 4] = v129;
    a6 = 0.0;
    a5 = 0.0;
    v118 = v167;
    if ((v132 & 1) != 0)
    {
      type metadata accessor for DividerView(0);
      if (qword_1007F2038 == -1)
      {
LABEL_88:
        v133 = type metadata accessor for DividerView.Style(0);
        v134 = sub_1000117A8(v133, (uint64_t)qword_100854658);
        a5 = sub_1003FD4DC(v134, (uint64_t)v118);
        goto LABEL_89;
      }
LABEL_119:
      swift_once(&qword_1007F2038, sub_1003FC974);
      goto LABEL_88;
    }
LABEL_89:
    if ((a4 & 1) != 0)
    {
      type metadata accessor for DividerView(0);
      if (qword_1007F2038 != -1)
        swift_once(&qword_1007F2038, sub_1003FC974);
      v135 = type metadata accessor for DividerView.Style(0);
      v136 = sub_1000117A8(v135, (uint64_t)qword_100854658);
      a6 = sub_1003FD4DC(v136, (uint64_t)v118);
    }
    v137 = inited[2];
    v138 = v137 + 2;
    if (__OFADD__(v137, 2))
    {
      __break(1u);
    }
    else
    {
      v139 = inited[3];
      v140 = v139 >> 1;
      if ((uint64_t)(v139 >> 1) >= v138)
        goto LABEL_95;
    }
    v150 = (uint64_t)v137 <= v138 ? v137 + 2 : v137;
    inited = sub_100201004((_QWORD *)1, v150, 1, inited);
    v137 = inited[2];
    v139 = inited[3];
    v140 = v139 >> 1;
LABEL_95:
    v141 = v137 + 1;
    if (v140 <= v137)
    {
      inited = sub_100201004((_QWORD *)(v139 > 1), v137 + 1, 1, inited);
      v139 = inited[3];
      v140 = v139 >> 1;
    }
    inited[2] = v141;
    *(double *)&inited[v137 + 4] = a5;
    v142 = v137 + 2;
    if ((uint64_t)v140 < (uint64_t)(v137 + 2))
      break;
    inited[2] = v142;
    *(double *)&inited[v141 + 4] = a6;
    if (v142 >= 1)
      goto LABEL_99;
    __break(1u);
LABEL_112:
    swift_once(&qword_1007F1220, sub_1000F818C);
  }
  inited = sub_100201004((_QWORD *)(v139 > 1), v137 + 2, 1, inited);
  inited[2] = v142;
  *(double *)&inited[v141 + 4] = a6;
LABEL_99:
  v143 = 0;
  v144 = v142 & 0xFFFFFFFFFFFFFFFELL;
  v145 = 0.0;
  do
  {
    v145 = v145 + *(double *)&inited[v143 + 4] + *(double *)&inited[v143 + 5];
    v143 += 2;
  }
  while (v144 != v143);
  if (v142 != v144)
  {
    v146 = v137 - v144 + 2;
    v147 = (double *)&inited[2 * ((unint64_t)v142 >> 1) + 4];
    do
    {
      v148 = *v147++;
      v145 = v145 + v148;
      --v146;
    }
    while (v146);
  }
  swift_release(v159);
  sub_100075D04((uint64_t)v169);
  swift_bridgeObjectRelease(inited);
  return a9;
}

uint64_t sub_1000FAB00(double a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE v39[64];
  double v40;
  double v41;

  v5 = type metadata accessor for AspectRatio(0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = ProductMedia.items.getter(v8);
  v10 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v11 = result;
    if (result)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v10);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  v11 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
    goto LABEL_22;
LABEL_3:
  if (v11 >= 1)
  {
    v12 = 0;
    v38 = v10 & 0xC000000000000001;
    v13 = _swiftEmptyArrayStorage;
    v35 = v11;
    while (1)
    {
      if (v38)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
        v16 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v10 + 8 * v12 + 32);
        swift_retain(v16);
      }
      v17 = ProductMediaItem.screenshot.getter(v15);
      if (v17)
        break;
      v19 = ProductMediaItem.video.getter(0);
      if (v19)
      {
        v20 = v19;
        v18 = Video.preview.getter(v19);
        swift_release(v20);
        goto LABEL_14;
      }
LABEL_6:
      ++v12;
      swift_release(v16);
      if (v11 == v12)
      {
        swift_bridgeObjectRelease(v10);
        return (uint64_t)v13;
      }
    }
    v18 = v17;
LABEL_14:
    Artwork.size.getter(v17);
    v22 = AspectRatio.init(_:_:)(v21);
    v23 = ProductMedia.hasPortraitPhoneMedia.getter(v22);
    v24 = v23;
    v25 = ProductMedia.platform.getter(v23);
    sub_10022F9D4(v25, (uint64_t)v39);
    swift_release(v25);
    sub_100075D04((uint64_t)v39);
    v26 = v40;
    v27 = v41;
    objc_msgSend(a3, "pageContainerSize");
    v30 = sub_100538CBC(0, (uint64_t)v7, v24 & 1, a3, v26, v27, v28, v29, a1);
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
    swift_retain(v18);
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100201138(0, v13[2] + 1, 1, v13);
    v34 = v13[2];
    v33 = v13[3];
    if (v34 >= v33 >> 1)
      v13 = sub_100201138((_QWORD *)(v33 > 1), v34 + 1, 1, v13);
    v13[2] = v34 + 1;
    v14 = (double *)&v13[3 * v34];
    *((_QWORD *)v14 + 4) = v18;
    v14[5] = v30;
    *((_QWORD *)v14 + 6) = v32;
    swift_release(v18);
    v11 = v35;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_1000FADA0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  __n128 v17;
  id v18;
  id v19;
  unsigned __int8 v20;
  uint64_t v21;
  void *v22;
  double v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  _BYTE v27[40];

  sub_100011020(a1, (uint64_t)v27);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v5 = type metadata accessor for ProductMedia(0);
  if (swift_dynamicCast(&v26, v27, v4, v5, 6))
  {
    v6 = v26;
    v7 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher;
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher];
    if (v8)
    {
      v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher];
    }
    else
    {
      v10 = type metadata accessor for ScreenshotFetcher();
      v9 = swift_allocObject(v10, 40, 7);
      v11 = v2;
      *(_QWORD *)(v9 + 16) = sub_10036A8B4((uint64_t)_swiftEmptyArrayStorage);
      *(_QWORD *)(v9 + 32) = 0;
      swift_unknownObjectWeakInit(v9 + 24);
      *(_QWORD *)(v9 + 32) = &off_100728620;
      swift_unknownObjectWeakAssign(v12, v11);

      v13 = *(_QWORD *)&v2[v7];
      *(_QWORD *)&v2[v7] = v9;
      swift_retain(v9);
      swift_release(v13);
      v14 = *(_QWORD *)&v2[v7];
      if (v14)
      {
        *(_QWORD *)(v14 + 32) = &off_100728620;
        swift_unknownObjectWeakAssign(v14 + 24, v11);
      }
    }
    v15 = objc_msgSend(v2, "traitCollection", swift_retain(v8).n128_f64[0]);
    v16 = objc_msgSend(v15, "userInterfaceIdiom");

    if (v16 == (id)1
      && (v18 = objc_msgSend(v2, "traitCollection"),
          v19 = objc_msgSend(v18, "horizontalSizeClass"),
          v18,
          v19 == (id)2))
    {
      v20 = 1;
    }
    else
    {
      v20 = 2;
    }
    v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media];
    if (v21)
    {
      v22 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits];
      if (!v22)
      {
        __break(1u);
        return;
      }
      swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media]);
      objc_msgSend(v2, "bounds", swift_unknownObjectRetain(v22).n128_f64[0]);
      v24 = (_QWORD *)sub_1000FAB00(v23, v21, v22);
      swift_release(v21);
      v17 = swift_unknownObjectRelease(v22);
    }
    else
    {
      v24 = _swiftEmptyArrayStorage;
    }
    v25 = ProductMedia.hasPortraitPhoneMedia.getter(v17);
    sub_1003FAB74((uint64_t)v24, v25 & 1, a2, v20);
    swift_release(v6);
    swift_bridgeObjectRelease(v24);
    swift_release(v9);
  }
}

void sub_1000FAFF0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_flowLayout;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NestedHorizontalShelfCollectionViewFlowLayout()), "init");
  v3 = OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_compoundScrollObserver;
  v4 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)&v1[v3] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_objectGraph] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_fallbackHorizontalViewMargin] = 0x4020000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits] = 0;
  v5 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_itemLayoutContext];
  v6 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryView] = 0;
  v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_displaysTopAccessoryDivider] = 0;
  v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_displaysBottomAccessoryDivider] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryDividerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryDividerView] = 0;
  v7 = &v1[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotSelectionHandler];
  *v7 = 0;
  v7[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ProductMediaCollectionViewCell.swift", 59, 2, 161, 0);
  __break(1u);
}

id sub_1000FB16C(void *a1)
{
  return sub_1000FB184(a1, &OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_topAccessoryView);
}

id sub_1000FB178(void *a1)
{
  return sub_1000FB184(a1, &OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_bottomAccessoryView);
}

id sub_1000FB184(void *a1, uint64_t *a2)
{
  char *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v4 = *a2;
  v5 = *(void **)&v2[*a2];
  if (v5)
  {
    objc_msgSend(v5, "removeFromSuperview");
    v6 = *(void **)&v2[v4];
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)&v2[v4] = a1;
  v7 = a1;

  v8 = *(void **)&v2[v4];
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v2, "contentView");
    objc_msgSend(v10, "addSubview:", v9);

  }
  return objc_msgSend(v2, "setNeedsLayout");
}

void sub_1000FB228(objc_class *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  Swift::Bool v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t Strong;
  void *v37;
  uint64_t v38;
  UIImage_optional v39;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v2, "window", v7);

  if (v10)
  {
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media];
    if (v11)
    {
      v12 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_collectionView];
      if ((uint64_t)objc_msgSend(v12, "numberOfSections", swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media]).n128_f64[0]) < 1)goto LABEL_16;
      v13 = objc_msgSend(v12, "numberOfItemsInSection:", 0);
      if ((uint64_t)v13 <= a2)
        goto LABEL_16;
      v14 = ProductMedia.items.getter(v13);
      v15 = v14;
      if ((unint64_t)v14 >> 62)
      {
        if (v14 >= 0)
          v14 &= 0xFFFFFFFFFFFFFF8uLL;
        v16 = _CocoaArrayWrapper.endIndex.getter(v14);
      }
      else
      {
        v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v15);
      if (v16 <= a2)
      {
LABEL_16:
        swift_release(v11);
        return;
      }
      v18 = ProductMedia.items.getter(v17);
      v19 = v18;
      if ((v18 & 0xC000000000000001) == 0)
      {
        if (a2 < 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
        {
          v20 = *(_QWORD *)(v18 + 8 * a2 + 32);
          swift_retain(v20);
          goto LABEL_12;
        }
        __break(1u);
        return;
      }
      v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v18);
LABEL_12:
      swift_bridgeObjectRelease(v19);
      v21 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
      v22 = swift_allocObject(v21, 48, 7);
      *(_OWORD *)(v22 + 16) = xmmword_10066F870;
      *(_QWORD *)(v22 + 32) = 0;
      *(_QWORD *)(v22 + 40) = a2;
      IndexPath.init(arrayLiteral:)(v22);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v24 = objc_msgSend(v12, "cellForItemAtIndexPath:", isa);

      if (v24)
      {
        v25 = type metadata accessor for ScreenshotCollectionViewCell(0);
        v26 = swift_dynamicCastClass(v24, v25);
        if (v26)
        {
          v27 = v26;
          v28 = v24;
          v29 = ProductMediaItem.screenshot.getter(v28);
          swift_release(v29);
          if (v29)
          {
            v30 = objc_retain(*(id *)(*(_QWORD *)(v27
                                                + OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView)
                                    + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView));
            v39.value.super.isa = a1;
            v39.is_nil = 1;
            ArtworkView.show(image:isAnimationPermitted:)(v39, v31);

            goto LABEL_24;
          }

        }
        v32 = type metadata accessor for VideoCollectionViewCell(0);
        v33 = swift_dynamicCastClass(v24, v32);
        if (v33)
        {
          v34 = v33;
          v24 = v24;
          v35 = ProductMediaItem.video.getter(v24);
          swift_release(v35);
          if (v35)
          {
            Strong = swift_unknownObjectWeakLoadStrong(v34 + OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView);
            if (Strong)
            {
              v37 = (void *)Strong;
              objc_msgSend(*(id *)(Strong + qword_10080FD18), "setImage:", a1);

            }
          }

        }
      }
LABEL_24:
      swift_release(v11);
      swift_release(v20);
    }
  }
}

uint64_t sub_1000FB568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FB5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DividerView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FB5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DividerView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FB638(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DividerView.Style(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000FB674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits))
    return 0;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (v1)
  {
    v2 = swift_retain(v1);
    v3 = ProductMedia.items.getter(v2);
    swift_release(v1);
    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v5 = v3;
      else
        v5 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v1 = _CocoaArrayWrapper.endIndex.getter(v5);
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v1 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v3);
  }
  return v1;
}

void sub_1000FB714(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  char v37;
  void *v38;
  char v39;
  double v40;
  double v41;
  double v42;
  id v43;
  double v44;
  double v45;
  _BYTE v47[64];
  double v48;
  double v49;

  v2 = v1;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v4);
  v6 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for AspectRatio(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v47[-v12 - 8];
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (v14)
  {
    v15 = objc_msgSend(a1, "frame", swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media)).n128_f64[0]);
    if (v16 > 0.0 && v17 > 0.0)
    {
      v18 = v16;
      v19 = ProductMedia.items.getter(v15);
      v20 = IndexPath.item.getter(v19);
      if ((v19 & 0xC000000000000001) == 0)
      {
        if ((v20 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v20 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v21 = *(_QWORD *)(v19 + 8 * v20 + 32);
          swift_retain(v21);
          goto LABEL_8;
        }
        __break(1u);
LABEL_23:
        __break(1u);
        return;
      }
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v19);
LABEL_8:
      swift_bridgeObjectRelease(v19);
      v23 = ProductMediaItem.screenshot.getter(v22);
      if (v23)
      {
        v24 = v23;
        Artwork.size.getter(v23);
        AspectRatio.init(_:_:)(v25);
        v26 = swift_release(v24);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v8 + 32))(v6, v10, v7, v26);
      }
      else
      {
        v28 = ProductMediaItem.video.getter(0);
        if (!v28)
        {
          v33 = 1;
LABEL_15:
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, v33, 1, v7, v27);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
          {
            swift_release(v14);
            swift_release(v21);
            sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007FA760);
            return;
          }
          v34 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v13, v6, v7);
          v35 = ProductMedia.platform.getter(v34);
          sub_10022F9D4(v35, (uint64_t)v47);
          v36 = swift_release(v35);
          v37 = ProductMedia.hasPortraitPhoneMedia.getter(v36);
          v38 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits);
          if (v38)
          {
            v39 = v37;
            v40 = v48;
            v41 = v49;
            *(_QWORD *)&v42 = swift_unknownObjectRetain(*(_QWORD *)(v2
                                                                  + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits)).n128_u64[0];
            objc_msgSend(v43, "pageContainerSize", v42);
            sub_100538CBC(0, (uint64_t)v13, v39 & 1, v38, v40, v41, v44, v45, v18);
            swift_unknownObjectRelease(v38);
            swift_release(v14);
            swift_release(v21);
            sub_100075D04((uint64_t)v47);
            (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
            return;
          }
          goto LABEL_23;
        }
        v29 = v28;
        v30 = Video.preview.getter(v28);
        swift_release(v29);
        Artwork.size.getter(v31);
        AspectRatio.init(_:_:)(v32);
        v27 = swift_release(v30);
      }
      v33 = 0;
      goto LABEL_15;
    }
    swift_release(v14);
  }
}

void sub_1000FBA54(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  char v53;
  Swift::Bool v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  __n128 v68;
  uint64_t Strong;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  _BYTE *v87;
  char v88;
  char v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  __n128 v113;
  char v114;
  _BYTE v115[4];
  int v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  _QWORD v129[5];
  char v130[32];
  UIImage_optional v131;

  v2 = v1;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007FA750);
  __chkstk_darwin(v4);
  v6 = &v115[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v115[-v8];
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v11 = __chkstk_darwin(v10);
  v127 = &v115[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for VideoControls(0, v11);
  __chkstk_darwin(v13);
  v126 = &v115[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v115[-v16];
  v18 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v19 = __chkstk_darwin(v18);
  v21 = &v115[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = type metadata accessor for VideoFillMode(0, v19);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = &v115[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = type metadata accessor for VideoConfiguration(0, v26);
  __chkstk_darwin(v27);
  v31 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_media);
  if (!v31)
    return;
  v121 = v9;
  v122 = v6;
  v123 = &v115[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = v30;
  v125 = v29;
  swift_retain(v31);
  v128 = v32;
  v33 = ProductMedia.items.getter(v32);
  v34 = IndexPath.item.getter(v33);
  if ((v33 & 0xC000000000000001) == 0)
  {
    if ((v34 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v34 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v35 = *(_QWORD *)(v33 + 8 * v34 + 32);
      swift_retain(v35);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_41;
  }
  v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v33);
LABEL_6:
  swift_bridgeObjectRelease(v33);
  v36 = type metadata accessor for ScreenshotCollectionViewCell(0);
  v37 = swift_dynamicCastClass(a1, v36);
  if (!v37)
  {
    v56 = type metadata accessor for VideoCollectionViewCell(0);
    v57 = swift_dynamicCastClass(a1, v56);
    v58 = v128;
    v120 = v57;
    if (v57)
    {
      v59 = a1;
      v60 = ProductMediaItem.video.getter(v59);
      if (v60)
      {
        v61 = v60;
        v118 = v59;
        v119 = v35;
        v62 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_objectGraph);
        if (!v62)
        {
          swift_release(v60);

          swift_release(v58);
          swift_release(v119);
          return;
        }
        v63 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher);
        v117 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_objectGraph);
        if (v63)
        {
          swift_retain(v63);
          swift_retain(v62);
          v65 = Video.preview.getter(v64);
          swift_beginAccess(v63 + 16, v130, 0, 0);
          v66 = *(_QWORD *)(v63 + 16);
          swift_bridgeObjectRetain(v66);
          swift_release(v63);
          v67 = sub_1002A133C(v65, v66);
          swift_release(v65);
          v68 = swift_bridgeObjectRelease(v66);
          if (v67)
          {
            Strong = swift_unknownObjectWeakLoadStrong(v120 + OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView);
            if (Strong)
            {
              v70 = (void *)Strong;
              objc_msgSend(*(id *)(Strong + qword_10080FD18), "setImage:", v67);

            }
          }
        }
        else
        {
          v68 = swift_retain(v62);
        }
        v73 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, __n128))(v23 + 104))(v25, enum case for VideoFillMode.scaleAspectFit(_:), v22, v68);
        v74 = Video.preview.getter(v73);
        Artwork.size.getter(v74);
        AspectRatio.init(_:_:)(v75);
        swift_release(v74);
        v76 = type metadata accessor for AspectRatio(0);
        v77 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v21, 0, 1, v76);
        v78 = Video.playbackControls.getter(v77);
        v79 = v126;
        v80 = Video.autoPlayPlaybackControls.getter(v78);
        v116 = Video.canPlayFullScreen.getter(v80);
        v81 = Video.allowsAutoPlay.getter();
        v82 = Video.looping.getter();
        v83 = v82;
        v84 = ProductMedia.platform.getter(v82);
        v86 = MediaPlatform.deviceCornerRadiusFactor.getter(v84, v85);
        v87 = (_BYTE *)v61;
        v89 = v88;
        swift_release(v84);
        v114 = v89 & 1;
        v90 = v123;
        VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v25, v21, v17, v79, v116 & 1, v81 & 1, v83 & 1, 1, v86, v114);
        v91 = type metadata accessor for VideoViewManager(0);
        v92 = v117;
        v93 = BaseObjectGraph.inject<A>(_:)(v129, v91, v91);
        v94 = v129[0];
        v95 = Video.playbackId.getter(v129, v93);
        v96 = (uint64_t)v127;
        Video.videoUrl.getter(v95);
        v97 = type metadata accessor for URL(0);
        v98 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 0, 1, v97);
        v99 = (uint64_t)v121;
        v100 = Video.templateMediaEvent.getter(v98);
        v101 = (uint64_t)v122;
        v126 = v87;
        Video.templateClickEvent.getter(v100);
        v102 = type metadata accessor for VideoView(0);
        v103 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
        v104 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v129, v96, v90, v99, v101, v92, v102, v103);
        sub_100011088(v101, (uint64_t *)&unk_1007FA750);
        sub_100011088(v99, (uint64_t *)&unk_1007FA750);
        sub_100011088(v96, (uint64_t *)&unk_1007F5150);
        sub_100011088((uint64_t)v129, (uint64_t *)&unk_1007F9850);
        v105 = v104;
        v106 = v120;
        sub_100355838((uint64_t)v104);

        v34 = type metadata accessor for VideoPlaybackCoordinator(0);
        v107 = *(void **)(v92 + qword_100854088);
        if (v107)
        {
          v108 = (void *)swift_unknownObjectWeakLoadStrong(v106 + OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView);
          if (v108)
            v109 = v103;
          else
            v109 = 0;
          v110 = sub_10000E99C(&qword_1007FB3C0, type metadata accessor for VideoCollectionViewCell, (uint64_t)&unk_1006861F0);
          v111 = v118;
          v112 = v107;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v108, v109, v106, v110);

          swift_release(v92);
          swift_release(v94);

          swift_release(v126);
          swift_release(v128);
          v113 = swift_release(v119);
          (*(void (**)(_BYTE *, uint64_t, __n128))(v124 + 8))(v90, v125, v113);
          return;
        }
LABEL_41:
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v34);
        __break(1u);
        return;
      }

    }
    v71 = v58;
    goto LABEL_25;
  }
  v38 = v37;
  v39 = a1;
  v40 = ProductMediaItem.screenshot.getter(v39);
  if (!v40)
  {

    v71 = v128;
LABEL_25:
    swift_release(v71);
    swift_release(v35);
    return;
  }
  v41 = v40;
  v42 = v35;
  v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_screenshotFetcher);
  if (v43)
  {
    swift_beginAccess(v43 + 16, v129, 0, 0);
    v44 = *(_QWORD *)(v43 + 16);
    swift_bridgeObjectRetain(v44);
    v45 = sub_1002A133C(v41, v44);
    swift_bridgeObjectRelease(v44);
    if (v45)
    {
      v46 = *(void **)(*(_QWORD *)(v38
                                 + OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView)
                     + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
      v47 = v45;
      v48 = v46;
      v49 = v47;
      v50 = v48;
      v51 = (void *)ArtworkView.image.getter();

      if (v51)
      {
        sub_100019574(0, (unint64_t *)&qword_1007FD5C0, UIImage_ptr);
        v52 = v49;
        v53 = static NSObject.== infix(_:_:)(v52, v51);

        v55 = v53 ^ 1;
      }
      else
      {

        v55 = 1;
      }
      v131.is_nil = v55 & 1;
      v131.value.super.isa = (Class)v45;
      ArtworkView.setImage(image:animated:)(v131, v54);

      swift_release(v128);
      swift_release(v42);
      v72 = v41;
    }
    else
    {
      swift_release(v41);

      swift_release(v128);
      v72 = v35;
    }
    swift_release(v72);
  }
  else
  {
    swift_release(v40);

    swift_release(v128);
    swift_release(v35);
  }
}

void sub_1000FC2BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id Strong;

  v3 = type metadata accessor for ScreenshotCollectionViewCell(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = *(void **)(*(_QWORD *)(v4
                              + OBJC_IVAR____TtC22SubscribePageExtension28ScreenshotCollectionViewCell_borderedScreenshotView)
                  + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
    v6 = a1;
    Strong = v5;
    ArtworkView.image.setter(0);
LABEL_3:

    return;
  }
  v7 = type metadata accessor for VideoCollectionViewCell(0);
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_objectGraph);
    if (v9)
    {
      v10 = v8;
      v11 = type metadata accessor for VideoPlaybackCoordinator(0);
      v12 = *(void **)(v9 + qword_100854088);
      if (v12)
      {
        Strong = (id)swift_unknownObjectWeakLoadStrong(v10 + OBJC_IVAR____TtC22SubscribePageExtension23VideoCollectionViewCell_videoView);
        if (Strong)
        {
          v13 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
          v14 = Strong;
        }
        else
        {
          v14 = 0;
          v13 = 0;
        }
        v15 = sub_10000E99C(&qword_1007FB3C0, type metadata accessor for VideoCollectionViewCell, (uint64_t)&unk_1006861F0);
        v16 = a1;
        swift_retain(v9);
        v6 = v12;
        dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v14, v13, v10, v15, 1);

        swift_release(v9);
        goto LABEL_3;
      }
      v17 = v11;
      v18 = a1;
      swift_retain(v9);
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v17);
      __break(1u);
    }
  }
}

void sub_1000FC48C(void *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;

  v4 = v2;
  v6 = objc_opt_self(UICollectionViewFlowLayout);
  v7 = swift_dynamicCastObjCClass(a1, v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits);
    if (v9)
    {
      swift_getObjectType();
      v10 = a1;
      swift_unknownObjectRetain(v9);
      PageTraitEnvironment.pageColumnMargin.getter();
      v12 = v11;
      swift_unknownObjectRelease(v9);
    }
    else
    {
      v13 = a1;
      v12 = 8.0;
    }
    objc_msgSend(v8, *a2, v12);

  }
  v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension30ProductMediaCollectionViewCell_pageTraits);
  if (v14)
  {
    swift_getObjectType();
    swift_unknownObjectRetain(v14);
    PageTraitEnvironment.pageColumnMargin.getter();
    swift_unknownObjectRelease(v14);
  }
}

id sub_1000FC678()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionViewTableLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionViewTableLayout()
{
  return objc_opt_self(_TtC22SubscribePageExtension25CollectionViewTableLayout);
}

uint64_t sub_1000FC6C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for PromotedContentInteractionTypeProvider()
{
  return objc_opt_self(_TtC22SubscribePageExtension38PromotedContentInteractionTypeProvider);
}

uint64_t sub_1000FC70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t KeyPath;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;

  v44 = a2;
  v40 = type metadata accessor for ComponentSeparator.Position(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PageGrid.Direction(0);
  v5 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  v43 = v5;
  v6 = __chkstk_darwin(v4);
  v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for PageGrid(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for ItemLayoutContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100675ED0);
  ItemLayoutContext.subscript.getter(&v46);
  v19 = swift_release(KeyPath);
  v20 = v46;
  LOBYTE(KeyPath) = UITraitCollection.isSizeClassRegular.getter(v19);

  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  if ((KeyPath & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_6;
  }
  v37 = v10;
  v21 = v43;
  v22 = swift_getKeyPath(&unk_100675ED0);
  ItemLayoutContext.subscript.getter(&v45);
  v23 = swift_release(v22);
  v24 = v45;
  LOBYTE(v22) = UITraitCollection.prefersAccessibilityLayouts.getter(v23);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((v22 & 1) != 0)
  {
LABEL_6:
    v34 = type metadata accessor for ComponentSeparator(0);
    v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
    v36 = v44;
    return v35(v36, 1, 1, v34);
  }
  v25 = swift_getKeyPath(&unk_100675F00);
  ItemLayoutContext.subscript.getter(v13);
  v26 = swift_release(v25);
  PageGrid.direction.getter(v26);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v37);
  v28 = v41;
  v27 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v41, enum case for PageGrid.Direction.horizontal(_:), v42);
  LOBYTE(v25) = static PageGrid.Direction.== infix(_:_:)(v9, v28);
  v29 = *(void (**)(char *, uint64_t))(v21 + 8);
  v29(v28, v27);
  v29(v9, v27);
  v30 = v44;
  if ((v25 & 1) != 0)
  {
    v31 = v39;
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v39, enum case for ComponentSeparator.Position.top(_:), v40);
    ComponentSeparator.init(position:leadingInset:trailingInset:)(v31, 0.0, 0.0);
    v32 = type metadata accessor for ComponentSeparator(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 0, 1, v32);
  }
  v34 = type metadata accessor for ComponentSeparator(0);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v36 = v30;
  return v35(v36, 1, 1, v34);
}

uint64_t sub_1000FCA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FC70C(a1, a2);
}

void sub_1000FCA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t KeyPath;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  id v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD v118[4];
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  char v124[8];
  char v125[8];

  v116 = a4;
  v92 = a3;
  v110 = type metadata accessor for ActionRunner.Origin(0);
  v109 = *(_QWORD *)(v110 - 8);
  v6 = __chkstk_darwin(v110);
  v108 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for FlowOrigin(0, v6);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v107 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for FlowAnimationBehavior(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v106 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for FlowPresentationContext(0);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v104 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetrics(0, v11);
  __chkstk_darwin(v12);
  v102 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v14);
  v99 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v17 = __chkstk_darwin(v16);
  v97 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for FlowPage(0, v17);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v95 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v21 = (uint64_t *)((char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_10000DF3C((uint64_t *)&unk_100802FD0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ItemLayoutContext(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Shelf.ContentType(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v91 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v112 = (char *)&v86 - v32;
  v113 = type metadata accessor for IndexPath(0);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v117 = (char *)&v86 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v125, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v35 = Strong;
    v36 = a2 + 16;
    swift_beginAccess(v36, v124, 0, 0);
    v37 = (void *)swift_unknownObjectWeakLoadStrong(v36);
    if (v37)
    {
      v38 = v37;
      v39 = UIResponder.nearestActionRunner.getter();

      v88 = v39;
      if (v39)
      {
        v87 = v38;
        v40 = v92;
        v41 = dispatch thunk of ComponentContainerCollectionElementsObserver.ContainerDelegate.indexPath(ofItem:)(v92);
        dispatch thunk of ComponentContainerCollectionElementsObserver.ContainerDelegate.modelContainment.getter(&v122, v41);
        v86 = v35;
        if (v123)
        {
          sub_100010F3C(&v122, (uint64_t)&v119);
          v42 = *((_QWORD *)&v120 + 1);
          v43 = v121;
          sub_100011064(&v119, *((uint64_t *)&v120 + 1));
          dispatch thunk of ComponentModelContainment.model(at:)(&v122, v40, v42, v43);
          v44 = *((_QWORD *)&v120 + 1);
          v45 = v121;
          sub_100011064(&v119, *((uint64_t *)&v120 + 1));
          v46 = v112;
          dispatch thunk of ComponentModelContainment.contentType(for:)(v40, v44, v45);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v119);
        }
        else
        {
          v47 = sub_100011088((uint64_t)&v122, &qword_1007F9690);
          v48 = ComponentContainerCollectionElementsObserver.ContainerDelegate.itemLayoutContext.getter(v47);
          ItemLayoutContext.item.getter(v48);
          v49 = *(void (**)(char *, uint64_t))(v27 + 8);
          v49(v29, v26);
          ReadOnlyLens.value.getter(&v122, v22);
          v50 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
          ComponentContainerCollectionElementsObserver.ContainerDelegate.itemLayoutContext.getter(v50);
          KeyPath = swift_getKeyPath(&unk_100675F40);
          ItemLayoutContext.subscript.getter(v21);
          v52 = swift_release(KeyPath);
          ((void (*)(char *, uint64_t, __n128))v49)(v29, v26, v52);
          v53 = swift_getKeyPath(&unk_100675F70);
          v46 = v112;
          v54 = v90;
          ReadOnlyLens.subscript.getter(v53, v90);
          v55 = swift_release(v53);
          (*(void (**)(_QWORD *, uint64_t, __n128))(v89 + 8))(v21, v54, v55);
        }
        v56 = type metadata accessor for ComponentViewOverflowViewController();
        sub_100011020((uint64_t)&v122, (uint64_t)&v119);
        v57 = (uint64_t)v91;
        (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v91, v46, v115);
        v58 = sub_1005989D0(v116, 0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011, 0x8000000100635B70);
        v59 = *((_QWORD *)&v120 + 1);
        v60 = v121;
        v61 = sub_100079870((uint64_t)&v119, *((uint64_t *)&v120 + 1));
        v62 = (void *)sub_10044261C(v61, v57, v58, v56, v59, v60);
        swift_release(v58);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v119);
        v121 = 0;
        v119 = 0u;
        v120 = 0u;
        v63 = v95;
        (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v95, enum case for FlowPage.componentOverflow(_:), v94);
        v64 = type metadata accessor for URL(0);
        v65 = v97;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v97, 1, 1, v64);
        v66 = type metadata accessor for ReferrerData(0);
        v67 = v99;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v99, 1, 1, v66);
        v68 = type metadata accessor for ComponentOverflowData(0);
        v118[3] = v68;
        v69 = (char *)sub_1000117C0(v118);
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(&v69[*(int *)(v68 + 20)], v117, v113);
        *(_QWORD *)v69 = v62;
        v70 = v62;
        v71 = v102;
        static ActionMetrics.notInstrumented.getter(v70);
        v72 = v104;
        (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v104, enum case for FlowPresentationContext.infer(_:), v98);
        v73 = v106;
        (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v106, enum case for FlowAnimationBehavior.infer(_:), v101);
        v74 = v107;
        v75 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v103 + 104))(v107, enum case for FlowOrigin.inapp(_:), v105);
        v76 = static FlowActionPresentation.stackPush.getter(v75);
        v78 = v77;
        v79 = type metadata accessor for FlowAction(0);
        swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
        v80 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v119, 0, 0, 0, v63, v65, 0, 0, v67, v118, v71, v72, v73, v74, 0, v76, v78);
        v119 = 0u;
        v120 = 0u;
        v81 = v109;
        v82 = v108;
        v83 = v110;
        (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v108, enum case for ActionRunner.Origin.userInitiated(_:), v110);
        v84 = v88;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v80, &v119, v82, v116);

        swift_release(v80);
        swift_release(v84);
        v85 = swift_release(v86);
        (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v82, v83, v85);
        sub_100011088((uint64_t)&v119, &qword_1007F6E90);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v115);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v122);
        (*(void (**)(char *, uint64_t))(v111 + 8))(v117, v113);
      }
      else
      {
        swift_release(v35);

      }
    }
    else
    {
      swift_release(v35);
    }
  }
}

void (*sub_1000FD404(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = swift_allocObject(&unk_100728690, 24, 7);
  swift_weakInit(v5 + 16);
  v6 = swift_allocObject(&unk_1007286B8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = (_QWORD *)swift_allocObject(&unk_1007286E0, 48, 7);
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a3;
  swift_retain(a3);
  return sub_1000FD534;
}

uint64_t sub_1000FD4B8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FD4DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FD500()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1000FD534()
{
  uint64_t *v0;

  sub_1000FCA4C(v0[2], v0[3], v0[4], v0[5]);
}

UIColor sub_1000FD548(uint64_t a1)
{
  return sub_1000FD574(0.9, a1, (UIColor *)&qword_100851A50);
}

UIColor sub_1000FD55C(uint64_t a1)
{
  return sub_1000FD574(0.6, a1, (UIColor *)&qword_100851A58);
}

UIColor sub_1000FD574(double a1, uint64_t a2, UIColor *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  UIColor result;

  sub_1000117FC();
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "blackColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", a1);

  v8 = objc_msgSend(v5, "whiteColor");
  v9 = objc_msgSend(v8, "colorWithAlphaComponent:", a1);

  result.super.isa = UIColor.init(light:dark:)((UIColor)v7, (UIColor)v9).super.isa;
  a3->super.isa = result.super.isa;
  return result;
}

char *sub_1000FD648(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_titleView;
  v10 = type metadata accessor for TitleHeaderView(0);
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");
  v13 = &v12[OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_currentState];
  v14 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for InteractiveTitleHeaderView(0);
  v15 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v16 = (void *)objc_opt_self(UIColor);
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v17, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_titleView]);

  return v17;
}

id sub_1000FDA30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTitleHeaderView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000FDA9C()
{
  return type metadata accessor for InteractiveTitleHeaderView(0);
}

uint64_t type metadata accessor for InteractiveTitleHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FB4C0;
  if (!qword_1007FB4C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InteractiveTitleHeaderView);
  return result;
}

void sub_1000FDAE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10005C114(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_1000FDB5C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_currentState;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000FDE34(v3, a1);
}

id sub_1000FDBB0(uint64_t a1)
{
  return sub_1000FDBD0(a1);
}

id sub_1000FDBD0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id result;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  _QWORD aBlock[5];
  uint64_t v24;
  char v25[24];

  v2 = v1;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&aBlock[-1] - v8;
  v10 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v11 = sub_10028B9EC();
  v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_titleView];
  result = objc_msgSend(v12, "overrideUserInterfaceStyle");
  if (result != (id)v11)
  {
    v14 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_currentState];
    swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_currentState], v25, 0, 0);
    sub_1000FDE34(v14, (uint64_t)v9);
    v15 = *(_QWORD *)(v10 - 8);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v10);
    sub_1000FDE7C((uint64_t)v9);
    if (v16 == 1)
    {
      objc_msgSend(v12, "setOverrideUserInterfaceStyle:", v11);
    }
    else
    {
      v17 = (void *)objc_opt_self(UIView);
      v18 = swift_allocObject(&unk_100728738, 32, 7);
      *(_QWORD *)(v18 + 16) = v2;
      *(_QWORD *)(v18 + 24) = v11;
      aBlock[4] = sub_1000FDF28;
      v24 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BD6CC;
      aBlock[3] = &unk_100728750;
      v19 = _Block_copy(aBlock);
      v20 = v24;
      v21 = v2;
      swift_release(v20);
      objc_msgSend(v17, "transitionWithView:duration:options:animations:completion:", v12, 5308420, v19, 0, 0.4);
      _Block_release(v19);
    }
    sub_10005EC94(a1, (uint64_t)v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v10);
    swift_beginAccess(v14, aBlock, 33, 0);
    sub_1000FDEBC((uint64_t)v6, v14);
    return (id)swift_endAccess(aBlock);
  }
  return result;
}

uint64_t sub_1000FDE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FDE7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000FDEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FDF04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000FDF28()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC22SubscribePageExtension26InteractiveTitleHeaderView_titleView), "setOverrideUserInterfaceStyle:", *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000FDF44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000FDF54(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_1000FDF5C(uint64_t a1)
{
  return sub_1000FDF68(a1, (uint64_t (*)(_QWORD))&type metadata accessor for GameCenterPlayer);
}

_QWORD *sub_1000FDF68(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[40];
  _QWORD *v15;

  v15 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v4);
  if (!v4)
    return v15;
  for (i = a1 + 32; ; i += 40)
  {
    sub_100011020(i, (uint64_t)v14);
    v6 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v7 = a2(0);
    v8 = swift_dynamicCast(&v13, v14, v6, v7, 6);
    if (!(_DWORD)v8)
      break;
    v9 = v13;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = v15[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
    v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
    specialized ContiguousArray._endMutation()(v11);
    if (!--v4)
      return v15;
  }
  v13 = 0;
  swift_release(v15);
  swift_release(v13);
  return 0;
}

void sub_1000FE074(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return;
  v12 = (void *)Strong;
  v13 = (uint64_t *)(Strong + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess(Strong + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_todayCards, &v26, 32, 0);
  v14 = *v13;
  if ((*v13 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v15 = *(_QWORD *)(v14 + 8 * a1 + 32);
      swift_retain(v15);
      goto LABEL_6;
    }
    __break(1u);
    return;
  }
  v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v14);
LABEL_6:
  swift_endAccess(&v26);

  v16 = swift_retain(v15);
  v17 = TodayCard.clickAction.getter(v16);
  swift_release(v15);
  if (!v17)
  {
LABEL_12:
    swift_release(v15);
    return;
  }
  swift_beginAccess(v10, v28, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v10);
  if (!v18 || (v19 = (void *)v18, v20 = UIResponder.nearestActionRunner.getter(), v19, !v20))
  {
    swift_release(v17);
    goto LABEL_12;
  }
  swift_beginAccess(v10, v25, 0, 0);
  v21 = swift_unknownObjectWeakLoadStrong(v10);
  if (v21)
  {
    v22 = v21;
    *((_QWORD *)&v27 + 1) = type metadata accessor for TodayBrickShelfCollectionViewCell(0);
    *(_QWORD *)&v26 = v22;
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v17, &v26, v9, a3);
  swift_release(v15);
  swift_release(v20);
  v23 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
  sub_1000131E0((uint64_t)&v26);
}

double sub_1000FE2A4(__n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  __n128 v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  double v21;
  uint64_t v23;

  v10 = a1.n128_f64[0];
  v11 = type metadata accessor for SmallStoryCardLayout.Metrics(0, a1);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (objc_class *)objc_msgSend(a8, "traitCollection", v13);
  sub_100234384(v16, (uint64_t)v15, v17);

  v18 = sub_1000FE420(a8);
  v19 = type metadata accessor for SmallStoryCardLayout(0);
  v20 = sub_1000FE6F0();
  v21 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v15, a8, v19, v20, v18, a2);
  (*(void (**)(char *, uint64_t, double))(v12 + 8))(v15, v11, v21);
  return v10;
}

uint64_t sub_1000FE3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1000FE4CC(a1, a3, a4, a7);
}

double sub_1000FE3B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_todayCards, v4, 1, 0);
  v2 = *v1;
  *v1 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10041A3F0(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

double sub_1000FE420(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  double v7;

  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v3 = v2;
  PageTraitEnvironment.pageColumnMargin.getter();
  v5 = (v3 - v4) / 1.5;
  v6 = objc_msgSend(a1, "traitCollection");
  if (objc_msgSend(v6, "userInterfaceIdiom") == (id)1 && objc_msgSend(v6, "horizontalSizeClass") == (id)2)
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v5 = v7;
  }

  return v5;
}

uint64_t sub_1000FE4CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(unint64_t);
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v5 = v4;
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_objectGraph);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_objectGraph) = a3;
  swift_release(v9);
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_artworkLoader);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_artworkLoader) = a2;
  swift_retain(a3);
  swift_release(v10);
  v11 = objc_msgSend(a4, "snapshotPageTraitEnvironment", swift_retain(a2).n128_f64[0]);
  v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_pageTraits);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_pageTraits) = v11;
  *(_QWORD *)&v13 = swift_unknownObjectRelease(v12).n128_u64[0];
  v14 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_flowLayout);
  objc_msgSend(a4, "pageMarginInsets", v13);
  objc_msgSend(v14, "setSectionInset:");
  v16 = Shelf.items.getter(v15);
  v17 = sub_1000FDF68(v16, (uint64_t (*)(_QWORD))&type metadata accessor for TodayCard);
  swift_bridgeObjectRelease(v16);
  if (v17)
    v18 = v17;
  else
    v18 = _swiftEmptyArrayStorage;
  v19 = (uint64_t *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess(v5 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_todayCards, v27, 1, 0);
  v20 = *v19;
  *v19 = (uint64_t)v18;
  sub_10041A3F0(v20);
  swift_bridgeObjectRelease(v20);
  v21 = swift_allocObject(&unk_1007287C0, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  v22 = swift_allocObject(&unk_1007287E8, 32, 7);
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = a3;
  v23 = (void (**)(unint64_t))(v5
                                               + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_didSelectHandler);
  v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_didSelectHandler);
  v25 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension33TodayBrickShelfCollectionViewCell_didSelectHandler + 8);
  *v23 = sub_1000FE6E8;
  v23[1] = (void (*)(unint64_t))v22;
  swift_retain(a3);
  return sub_100019310(v24, v25);
}

uint64_t sub_1000FE698()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FE6BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000FE6E8(unint64_t a1)
{
  uint64_t v1;

  sub_1000FE074(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1000FE6F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080E230;
  if (!qword_10080E230)
  {
    v1 = type metadata accessor for SmallStoryCardLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SmallStoryCardLayout, v1);
    atomic_store(result, (unint64_t *)&qword_10080E230);
  }
  return result;
}

void sub_1000FE738(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _BYTE v60[24];
  _QWORD v61[4];

  v58 = a2;
  v4 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v4);
  v55 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v54 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v2;
  v51 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerButton];
  v52 = a1;
  v50 = ArcadeLockup.offerDisplayProperties.getter(v20);
  v23 = ArcadeLockup.unsubscribedButtonAction.getter();
  v24 = ArcadeLockup.subscribedButtonAction.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for OfferButtonPresenterViewAlignment.center(_:), v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  v25 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  AccessibilityConditional.init(value:axValue:)(v18, v14, v15, v25);
  v26 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 0, 1, v26);
  v28 = v53;
  v27 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, enum case for OfferButtonSubtitlePosition.left(_:), v6);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v30 = v55;
  v29(v55, 1, 1, v6);
  v31 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)(v28, v30, v6, v31);
  v32 = v50;
  v33 = v58;
  sub_10013AB60(v50, v23, v24, (uint64_t)v22, (uint64_t)v10, v58, 0, 0);
  swift_release(v23);
  swift_release(v24);
  v34 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v10, v57, v34);
  v35 = sub_100060E60((uint64_t)v22);
  v36 = ArcadeLockup.subscribedSubtitle.getter(v35);
  v38 = v37;
  v39 = ArcadeLockup.nonsubscribedSubtitle.getter();
  v41 = v40;
  v42 = type metadata accessor for ArcadeSubscriptionManager(0);
  v43 = *(void **)(v33 + qword_100854068);
  if (v43)
  {
    v44 = type metadata accessor for ArcadeOfferLabelPresenter(0);
    swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    v45 = ArcadeOfferLabelPresenter.init(subscribedText:nonsubscribedText:subscriptionManager:)(v36, v38, v39, v41, v43);
    sub_10000E99C(&qword_1007FB4D0, type metadata accessor for ArcadeLockupView, (uint64_t)&unk_10067600C);
    v46 = v59;
    v47 = swift_unknownObjectRetain(v59);
    ArcadeOfferLabelPresenter.view.setter(v47);
    v61[3] = v44;
    v61[0] = v45;
    v48 = (uint64_t)&v46[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerLabelPresenter];
    swift_beginAccess(&v46[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_offerLabelPresenter], v60, 33, 0);
    swift_retain(v45);
    sub_1000FECDC((uint64_t)v61, v48);
    swift_endAccess(v60);
    objc_msgSend(v46, "setNeedsLayout");
    swift_release(v45);
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v42);
    __break(1u);
  }
}

id sub_1000FEB8C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  NSString v13;

  v5 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension16ArcadeLockupView_subtitleLabel];
  result = objc_msgSend(v5, "text");
  if (!result)
  {
    if (!a2)
      return result;
    goto LABEL_10;
  }
  v7 = result;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v10 = v9;

  if (!a2)
  {
    swift_bridgeObjectRelease(v10);
    v13 = 0;
    goto LABEL_12;
  }
  if (v8 == a1 && v10 == a2)
    return (id)swift_bridgeObjectRelease(v10);
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, a1, a2, 0);
  result = (id)swift_bridgeObjectRelease(v10);
  if ((v12 & 1) == 0)
  {
LABEL_10:
    v13 = String._bridgeToObjectiveC()();
LABEL_12:
    objc_msgSend(v5, "setText:", v13);

    objc_msgSend(v5, "setHidden:", static String.isNilOrEmpty(_:)(a1, a2) & 1);
    return objc_msgSend(v2, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_1000FECDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F6E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FED24()
{
  return sub_10000E99C(&qword_1007FB4D8, type metadata accessor for ArcadeFooterCollectionViewCell, (uint64_t)&unk_100676034);
}

double sub_1000FED50()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  double v6;
  uint64_t v8;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v2);
  v6 = sub_1000FEDE4(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v6;
}

double sub_1000FEDE4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  double *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  __n128 v35;
  objc_super v37;

  v1 = type metadata accessor for ArcadeFooterLayout.Metrics(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (id *)((char *)&v37.receiver - v6);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v12);
  v13 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v15 = v14;
  v16 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v17 = v16(v11, v8);
  v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  v19 = PageGrid.containerWidth.getter(v18);
  v20 = v16(v11, v8);
  v21 = ShelfLayoutContext.traitCollection.getter(v20);
  v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = (double *)&v23[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v24 = v19;
  v24[1] = 1.79769313e308;
  *(_QWORD *)&v23[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v37.receiver = v23;
  v37.super_class = v22;
  v25 = objc_msgSendSuper2(&v37, "init");
  if (qword_1007F2BE8 != -1)
    swift_once(&qword_1007F2BE8, sub_10048E168);
  v26 = sub_1000117A8(v1, (uint64_t)qword_100811ED0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v26, v1);
  __chkstk_darwin(v27);
  *((_QWORD *)&v37 - 2) = v25;
  Copyable.copyWithOverrides(in:)(v7, sub_1000FF08C, &v37 - 2, v1, &protocol witness table for ArcadeFooterLayout.Metrics);
  v28 = *(void (**)(char *, uint64_t))(v2 + 8);
  v28(v4, v1);

  v30 = ShelfLayoutContext.traitEnvironment.getter(v29);
  v31 = type metadata accessor for ArcadeFooterLayout(0);
  v32 = sub_10000E99C(&qword_1007FB4E0, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeFooterLayout, (uint64_t)&protocol conformance descriptor for ArcadeFooterLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v7, v30, v31, v32, v13, v15);
  v34 = v33;
  v35 = swift_unknownObjectRelease(v30);
  ((void (*)(_QWORD *, uint64_t, __n128))v28)(v7, v1, v35);
  return v34;
}

double sub_1000FF08C(uint64_t a1)
{
  uint64_t v1;

  return sub_10048E678(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000FF094()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver()
{
  return objc_opt_self(_TtC22SubscribePageExtension53ProductReviewFlowPreviewingCollectionElementsObserver);
}

uint64_t sub_1000FF0C4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  __n128 v8;
  _BYTE v10[16];

  v0 = sub_10000DF3C(&qword_1007F7D40);
  __chkstk_darwin(v0);
  v2 = &v10[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_10000DF3C(&qword_1007FB588);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ItemLayoutContext.mutableState.getter(v5);
  WritableStateLens.init(_:)(v2, &_s5StateVN_2);
  sub_1000D27DC();
  WritableStateLens<A>.updateValue(_:)(sub_1000FF210, v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1000FF1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return CollectionElementsObserver.willDisplayCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000FF1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return CollectionElementsObserver.didEndDisplayingCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000FF1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return CollectionElementsObserver.didSelectCell(_:in:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000FF1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return CollectionElementsObserver.prefetchCells(in:collectionView:asPartOf:)(a1, a2, a3, *v3);
}

uint64_t sub_1000FF1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return CollectionElementsObserver.willDisplayShelfSupplementary(_:in:registeredWith:collectionView:asPartOf:)(a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_1000FF1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return CollectionElementsObserver.didEndDisplayingShelfSupplementary(_:in:registeredWith:collectionView:asPartOf:)(a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_1000FF1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return CollectionElementsObserver.willDisplayItemSupplementary(_:in:registeredWith:collectionView:asPartOf:)(a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_1000FF1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return CollectionElementsObserver.didEndDisplayingItemSupplementary(_:in:registeredWith:collectionView:asPartOf:)(a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_1000FF200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return CollectionElementsObserver.willDisplayGlobalSupplementary(_:registeredWith:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000FF208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return CollectionElementsObserver.didEndDisplayingGlobalSupplementary(_:registeredWith:collectionView:asPartOf:)(a1, a2, a3, a4, *v4);
}

uint64_t sub_1000FF210(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(result + 1) = *(_BYTE *)(v1 + 16);
  return result;
}

void sub_1000FF21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, *(double *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_preferredArtworkSize), *(double *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_preferredArtworkSize + 8));
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_quoteView);
    v17 = OBJC_IVAR____TtC22SubscribePageExtension9QuoteView_artworkView;
    v18 = *(id *)(v16 + OBJC_IVAR____TtC22SubscribePageExtension9QuoteView_artworkView);
    Artwork.style.getter(v18);
    v19 = ArtworkView.style.setter(v7);
    *(_QWORD *)&v20 = Artwork.contentMode.getter(v19).n128_u64[0];
    v22 = ArtworkLoaderConfig.size.getter(objc_msgSend(v18, "setContentMode:", v21, v20));
    v24 = ArtworkView.imageSize.setter(v22, v23);
    v25 = Artwork.backgroundColor.getter(v24);
    if (!v25)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v25 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v25);

    objc_msgSend(*(id *)(v16 + v17), "setContentMode:", v14);
    v26 = *(void **)(v16 + v17);
    v27 = type metadata accessor for ArtworkView(0);
    v28 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v29 = v26;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2, 1, v29, v27, v28);
    swift_release(a1);
    swift_release(v15);

  }
}

void sub_1000FF440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;

  v2 = v1;
  swift_getObjectType();
  v5 = type metadata accessor for Artwork.Style(0, v4);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.Crop(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = swift_retain(a1);
    v14 = Artwork.crop.getter(v13);
    v15 = Artwork.Crop.preferredContentMode.getter(v14);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_pageTraits);
    if (v16)
    {
      swift_getObjectType();
      swift_unknownObjectRetain(v16);
      v18 = sub_10010583C(v17);
      v20 = v19;
      swift_unknownObjectRelease(v16);
    }
    else
    {
      v18 = 0.0;
      v20 = 0.0;
    }
    v21 = Artwork.config(_:mode:prefersLayeredImage:)(v15, 0, v18, v20);
    v22 = OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView;
    v23 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView);
    Artwork.style.getter(v23);
    v24 = ArtworkView.style.setter(v8);
    *(_QWORD *)&v25 = Artwork.contentMode.getter(v24).n128_u64[0];
    v27 = ArtworkLoaderConfig.size.getter(objc_msgSend(v23, "setContentMode:", v26, v25));
    v29 = ArtworkView.imageSize.setter(v27, v28);
    v30 = Artwork.backgroundColor.getter(v29);
    if (!v30)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v30 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v30);

    objc_msgSend(*(id *)(v2 + v22), "setContentMode:", v15);
    v31 = *(void **)(v2 + v22);
    v32 = type metadata accessor for ArtworkView(0);
    v33 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v34 = v31;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2, 1, v34, v32, v33);
    swift_release(a1);
    swift_release(v21);

  }
}

void sub_1000FF6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _BYTE v32[24];

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38TodayCardSmallLockupCollectionViewCell_lockupView);
    v16 = (double *)(v15 + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics);
    swift_beginAccess(v15 + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics, v32, 0, 0);
    v17 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, *v16, v16[1]);
    v18 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
    v19 = *(id *)(v15 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    Artwork.style.getter(v19);
    v20 = ArtworkView.style.setter(v7);
    *(_QWORD *)&v21 = Artwork.contentMode.getter(v20).n128_u64[0];
    v23 = ArtworkLoaderConfig.size.getter(objc_msgSend(v19, "setContentMode:", v22, v21));
    v25 = ArtworkView.imageSize.setter(v23, v24);
    v26 = Artwork.backgroundColor.getter(v25);
    if (!v26)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v26 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v26);

    v27 = *(void **)(v15 + v18);
    objc_msgSend(v27, "setContentMode:", v14);
    v28 = type metadata accessor for ArtworkView(0);
    v29 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v30 = v27;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v17, 2, 1, v30, v28, v29);
    swift_release(a1);
    swift_release(v17);

  }
}

void sub_1000FF8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _BYTE v44[24];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v44[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v43 = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v22 = v20;
    v21(v17, v14);
    v23 = OBJC_IVAR____TtC22SubscribePageExtension35TodayCardMarketingLockupOverlayView_lockupView;
    v24 = *(_QWORD *)(*(_QWORD *)(v3
                                + OBJC_IVAR____TtC22SubscribePageExtension35TodayCardMarketingLockupOverlayView_lockupView)
                    + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics;
    v25 = swift_beginAccess(v24, v44, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = objc_retain(*(id *)(*(_QWORD *)(v3 + v23)
                            + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView));
    Artwork.style.getter(v31);
    v32 = ArtworkView.style.setter(v8);
    *(_QWORD *)&v33 = Artwork.contentMode.getter(v32).n128_u64[0];
    v35 = ArtworkLoaderConfig.size.getter(objc_msgSend(v31, "setContentMode:", v34, v33));
    v37 = ArtworkView.imageSize.setter(v35, v36);
    v38 = Artwork.backgroundColor.getter(v37);
    if (!v38)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v38 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v38);

    objc_msgSend(*(id *)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView), "setContentMode:", v22);
    v39 = *(void **)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v39;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_1000FFBCC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD v46[2];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RibbonBarItemCellLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Artwork.Crop(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v46[1] = a2;
    v19 = swift_retain(a1);
    v20 = Artwork.crop.getter(v19);
    v46[0] = Artwork.Crop.preferredContentMode.getter(v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v21 = objc_msgSend(v3, "traitCollection");
    v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31RibbonBarItemCollectionViewCell_artworkSize];
    v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31RibbonBarItemCollectionViewCell_artworkSize + 8];
    v24 = v3[OBJC_IVAR____TtC22SubscribePageExtension31RibbonBarItemCollectionViewCell_artworkSize + 16];
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v21) & 1) != 0)
      sub_100184CA0((UITraitCollection)v21, (uint64_t)v14);
    else
      sub_100184F14(v22, v23, v24, v25, v26, v27, v28);
    v29 = v46[0];

    v30 = RibbonBarItemCellLayout.Metrics.artworkSize.getter();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v33 = Artwork.config(_:mode:prefersLayeredImage:)(v29, 0, v30, v32);
    v34 = *(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31RibbonBarItemCollectionViewCell_artworkView];
    Artwork.style.getter(v34);
    v35 = ArtworkView.style.setter(v9);
    *(_QWORD *)&v36 = Artwork.contentMode.getter(v35).n128_u64[0];
    v38 = ArtworkLoaderConfig.size.getter(objc_msgSend(v34, "setContentMode:", v37, v36));
    v40 = ArtworkView.imageSize.setter(v38, v39);
    v41 = Artwork.backgroundColor.getter(v40);
    if (!v41)
    {
      v42 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v41 = static UIColor.placeholderBackground.getter(v42);
    }
    ArtworkView.backgroundColor.setter(v41);

    objc_msgSend(v34, "setContentMode:", v29);
    v43 = type metadata accessor for ArtworkView(0);
    v44 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v45 = v34;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2, 1, v45, v43, v44);
    swift_release(a1);
    swift_release(v33);

  }
}

void sub_1000FFEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (qword_1007F2D60 != -1)
      swift_once(&qword_1007F2D60, sub_1004C2200);
    v15 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
    sub_1000117A8(v15, (uint64_t)qword_100856990);
    v16 = InAppPurchaseIconLayout.Metrics.mainIconDimension.getter();
    v17 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, v16, v16);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension37InAppPurchaseLockupCollectionViewCell_lockupView);
    v19 = OBJC_IVAR____TtC22SubscribePageExtension23InAppPurchaseLockupView_iconView;
    v20 = objc_retain(*(id *)(*(_QWORD *)(v18
                                        + OBJC_IVAR____TtC22SubscribePageExtension23InAppPurchaseLockupView_iconView)
                            + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView));
    Artwork.style.getter(v20);
    v21 = ArtworkView.style.setter(v7);
    *(_QWORD *)&v22 = Artwork.contentMode.getter(v21).n128_u64[0];
    v24 = ArtworkLoaderConfig.size.getter(objc_msgSend(v20, "setContentMode:", v23, v22));
    v26 = ArtworkView.imageSize.setter(v24, v25);
    v27 = Artwork.backgroundColor.getter(v26);
    if (!v27)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v27 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v27);

    v28 = *(void **)(*(_QWORD *)(v18 + v19) + OBJC_IVAR____TtC22SubscribePageExtension17InAppPurchaseView_artworkView);
    objc_msgSend(v28, "setContentMode:", v14);
    v29 = type metadata accessor for ArtworkView(0);
    v30 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v31 = v28;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v17, 2, 1, v31, v29, v30);
    swift_release(a1);
    swift_release(v17);

  }
}

void sub_10010011C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _BYTE v45[24];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v45[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v44 = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v22 = v20;
    v21(v17, v14);
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension29SmallLockupCollectionViewCell_lockupView);
    v24 = v23 + OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics;
    v25 = swift_beginAccess(v23 + OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics, v45, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
    v32 = *(id *)(v23 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    *(_QWORD *)&v34 = Artwork.contentMode.getter(v33).n128_u64[0];
    v36 = ArtworkLoaderConfig.size.getter(objc_msgSend(v32, "setContentMode:", v35, v34));
    v38 = ArtworkView.imageSize.setter(v36, v37);
    v39 = Artwork.backgroundColor.getter(v38);
    if (!v39)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v39 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v39);

    v40 = *(void **)(v23 + v31);
    objc_msgSend(v40, "setContentMode:", v22);
    v41 = type metadata accessor for ArtworkView(0);
    v42 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v43 = v40;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v43, v41, v42);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_1001003D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  id v25;
  __n128 v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD v50[3];

  v3 = v2;
  v49 = v3;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for Artwork.Style(0, v6);
  __chkstk_darwin(v7);
  v48 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007FAAC0);
  v47 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MediumLockupLayout.Metrics(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Artwork.Crop(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v45 = a2;
    v22 = swift_retain(a1);
    v23 = Artwork.crop.getter(v22);
    v44 = Artwork.Crop.preferredContentMode.getter(v23);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v24 = v49;
    v25 = objc_msgSend(v49, "traitCollection");
    sub_1001FB110((uint64_t)v17, v26);

    MediumLockupLayout.Metrics.artworkSize.getter();
    v27 = *(void (**)(char *, uint64_t))(v14 + 8);
    v28 = v44;
    v27(v17, v13);
    v50[0] = v24;
    v29 = Conditional.evaluate(with:)(v50, v9);
    (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v12, v9, v29);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v28, 0, *(double *)&v50[1], *(double *)&v50[2]);
    v31 = *(id *)&v24[OBJC_IVAR____TtC22SubscribePageExtension30MediumLockupCollectionViewCell_artworkView];
    v32 = v48;
    Artwork.style.getter(v31);
    v33 = ArtworkView.style.setter(v32);
    *(_QWORD *)&v34 = Artwork.contentMode.getter(v33).n128_u64[0];
    v36 = ArtworkLoaderConfig.size.getter(objc_msgSend(v31, "setContentMode:", v35, v34));
    v38 = ArtworkView.imageSize.setter(v36, v37);
    v39 = Artwork.backgroundColor.getter(v38);
    if (!v39)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v39 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v39);

    objc_msgSend(v31, "setContentMode:", v28);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v31;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_1001006F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;

  v3 = v2;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.Crop(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - v14;
  if (a1)
  {
    v16 = swift_retain(a1);
    v17 = Artwork.crop.getter(v16);
    static Artwork.Crop.boundingBox.getter(v17);
    v18 = sub_10000E99C(&qword_1007FB5E0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.Crop, (uint64_t)&protocol conformance descriptor for Artwork.Crop);
    v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v15, v9, v18);
    v20 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v21 = v20(v12, v9);
    if ((v19 & 1) != 0)
      v22 = 6;
    else
      v22 = Artwork.Crop.preferredContentMode.getter(v21);
    v20(v15, v9);
    v23 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, *(double *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_preferredArtworkSize), *(double *)(v3+ OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_preferredArtworkSize+ 8));
    v24 = *(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension29LargeLockupCollectionViewCell_artworkView);
    Artwork.style.getter(v24);
    v25 = ArtworkView.style.setter(v8);
    *(_QWORD *)&v26 = Artwork.contentMode.getter(v25).n128_u64[0];
    v28 = ArtworkLoaderConfig.size.getter(objc_msgSend(v24, "setContentMode:", v27, v26));
    v30 = ArtworkView.imageSize.setter(v28, v29);
    v31 = Artwork.backgroundColor.getter(v30);
    if (!v31)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v31 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v31);

    objc_msgSend(v24, "setContentMode:", v22);
    v32 = type metadata accessor for ArtworkView(0);
    v33 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v34 = v24;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v23, 2, 1, v34, v32, v33);
    swift_release(a1);
    swift_release(v23);

  }
}

void sub_10010097C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD v43[2];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AspectRatio(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43[1] = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v43[0] = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (qword_1007F1A80 != -1)
      swift_once(&qword_1007F1A80, sub_1002B6438);
    v20 = sub_1000117A8(v9, (uint64_t)qword_100853878);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v9);
    v21 = objc_msgSend(v3, "contentView");
    v22 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v22);
    v24 = v23;

    v26 = AspectRatio.height(fromWidth:)(v25, v24);
    v27 = objc_msgSend(v3, "contentView");
    LayoutMarginsAware<>.layoutFrame.getter(v22);
    v29 = v28;

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = v43[0];
    v31 = Artwork.config(_:mode:prefersLayeredImage:)(v43[0], 0, v29, v26);
    v32 = *(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension23BrickCollectionViewCell_artworkView];
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    *(_QWORD *)&v34 = Artwork.contentMode.getter(v33).n128_u64[0];
    v36 = ArtworkLoaderConfig.size.getter(objc_msgSend(v32, "setContentMode:", v35, v34));
    v38 = ArtworkView.imageSize.setter(v36, v37);
    v39 = Artwork.backgroundColor.getter(v38);
    if (!v39)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v39 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v39);

    objc_msgSend(v32, "setContentMode:", v30);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v32;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v31);

  }
}

void sub_100100CA8(uint64_t a1, uint64_t a2)
{
  sub_100100ED4(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension26TodayCardLockupOverlayView_lockupView);
}

void sub_100100CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, *(double *)(v2 + qword_100854600), *(double *)(v2 + qword_100854600 + 8));
    v16 = *(id *)(v2 + qword_1008545F8);
    Artwork.style.getter(v16);
    v17 = ArtworkView.style.setter(v7);
    *(_QWORD *)&v18 = Artwork.contentMode.getter(v17).n128_u64[0];
    v20 = ArtworkLoaderConfig.size.getter(objc_msgSend(v16, "setContentMode:", v19, v18));
    v22 = ArtworkView.imageSize.setter(v20, v21);
    v23 = Artwork.backgroundColor.getter(v22);
    if (!v23)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v23 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v23);

    objc_msgSend(v16, "setContentMode:", v14);
    v24 = type metadata accessor for ArtworkView(0);
    v25 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v26 = v16;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2, 1, v26, v24, v25);
    swift_release(a1);
    swift_release(v15);

  }
}

void sub_100100EC8(uint64_t a1, uint64_t a2)
{
  sub_100100ED4(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension34TodayCardAppEventLockupOverlayView_lockupView);
}

void sub_100100ED4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD v44[3];
  _BYTE v45[24];

  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v44[1] = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v21 = *a3;
    v22 = v20;
    v23 = *(_QWORD *)(v44[2] + v21);
    v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics;
    v25 = swift_beginAccess(v24, v45, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView;
    v32 = *(id *)(v23 + OBJC_IVAR____TtC22SubscribePageExtension19CrossLinkLockupView_artworkView);
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    *(_QWORD *)&v34 = Artwork.contentMode.getter(v33).n128_u64[0];
    v36 = ArtworkLoaderConfig.size.getter(objc_msgSend(v32, "setContentMode:", v35, v34));
    v38 = ArtworkView.imageSize.setter(v36, v37);
    v39 = Artwork.backgroundColor.getter(v38);
    if (!v39)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v39 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v39);

    v40 = *(void **)(v23 + v31);
    objc_msgSend(v40, "setContentMode:", v22);
    v41 = type metadata accessor for ArtworkView(0);
    v42 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v43 = v40;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v43, v41, v42);
    swift_release(a1);
    swift_release(v30);

  }
}

char *sub_1001011A0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *ObjCClassFromMetadata;
  id v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v4[OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_preferredArtworkSize];
  v13 = type metadata accessor for QuoteView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v13);
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v15 = objc_allocWithZone(ObjCClassFromMetadata);
  v16 = v4;
  v17 = objc_msgSend(v15, "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_quoteView] = v17;

  v23.receiver = v16;
  v23.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v20 = objc_msgSend(v18, "contentView");
  v21 = *(id *)&v18[OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_quoteView];
  objc_msgSend(v20, "addSubview:", v21);

  return v18;
}

uint64_t sub_100101504()
{
  return type metadata accessor for QuoteCollectionViewCell(0);
}

uint64_t type metadata accessor for QuoteCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FB5B8;
  if (!qword_1007FB5B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for QuoteCollectionViewCell);
  return result;
}

void sub_100101548(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_1006761C8;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

id sub_1001015CC()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_quoteView)
                           + OBJC_IVAR____TtC22SubscribePageExtension9QuoteView_artworkView));
}

double sub_1001015EC()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_preferredArtworkSize);
}

void sub_100101604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23QuoteCollectionViewCell_quoteView);
  v5 = OBJC_IVAR____TtC22SubscribePageExtension9QuoteView_artworkView;
  v6 = *(id *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension9QuoteView_artworkView);
  ArtworkView.isImageHidden.setter(1);

  v7 = *(void **)(v4 + v5);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v10 = v7;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, a2, v8, v9);

}

uint64_t sub_1001016BC(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E99C((unint64_t *)&unk_1007FB5D0, type metadata accessor for QuoteCollectionViewCell, (uint64_t)&unk_1006761E0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001016F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100101718(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

char *sub_100101738(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t isEscapingClosureAtFileLocation;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  void *v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  NSString v35;
  double v36;
  id v37;
  id v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  char *v44;
  objc_super v45;

  isEscapingClosureAtFileLocation = v3;
  v41 = a2;
  v42 = a3;
  v6 = a1 & 1;
  v7 = type metadata accessor for DirectionalTextAlignment(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for FontUseCase(0);
  v12 = *(v11 - 1);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_size) = v6;
  if ((a1 & 1) != 0)
  {
    v21 = qword_1007F2820;
    v22 = (id)isEscapingClosureAtFileLocation;
    if (v21 != -1)
      swift_once(&qword_1007F2820, sub_100417498);
    v20 = qword_100855D48;
    goto LABEL_7;
  }
  v18 = qword_1007F2818;
  v19 = (id)isEscapingClosureAtFileLocation;
  if (v18 != -1)
    goto LABEL_13;
  while (1)
  {
    v20 = qword_100855D30;
LABEL_7:
    v23 = sub_1000117A8((uint64_t)v11, (uint64_t)v20);
    (*(void (**)(char *, uint64_t, _QWORD *))(v12 + 16))(v14, v23, v11);
    (*(void (**)(char *, char *, _QWORD *))(v12 + 32))(v17, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, _QWORD *))(v12 + 56))(v17, 0, 1, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DirectionalTextAlignment.none(_:), v7);
    v24 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
    *(_QWORD *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_countLabel) = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 0, 1, 0, v10, 0, 0);

    v25 = (objc_class *)type metadata accessor for CountBadgeView();
    v45.receiver = (id)isEscapingClosureAtFileLocation;
    v45.super_class = v25;
    v26 = objc_msgSendSuper2(&v45, "initWithFrame:", 0.0, 0.0, 0.0, 0.0, v41);
    v27 = (void *)objc_opt_self(UIView);
    v10 = (char *)swift_allocObject(&unk_100728998, 25, 7);
    *((_QWORD *)v10 + 2) = v26;
    v10[24] = v6;
    v7 = swift_allocObject(&unk_1007289C0, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_10010222C;
    *(_QWORD *)(v7 + 24) = v10;
    aBlock[4] = sub_1000283D0;
    v44 = (char *)v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100101718;
    aBlock[3] = &unk_1007289D8;
    v17 = (char *)_Block_copy(aBlock);
    v14 = v44;
    v11 = v26;
    swift_retain(v7);
    objc_msgSend(v27, "performWithoutAnimation:", v17, swift_release(v14).n128_f64[0]);
    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 97, 59, 40, 1);
    swift_release(v7);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_13:
    swift_once(&qword_1007F2818, sub_1004173F8);
  }
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v11;
  v30 = objc_msgSend(v28, "redColor");
  objc_msgSend(v29, "setBackgroundColor:", v30);

  v31 = OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_countLabel;
  v32 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_countLabel];
  v33 = v42;
  if (v42)
  {
    v34 = v32;
    v35 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v33).n128_u64[0];
  }
  else
  {
    v37 = v32;
    v35 = 0;
  }
  objc_msgSend(v32, "setText:", v35, v36);

  v38 = *(id *)&v29[v31];
  v39 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v38, "setTextColor:", v39);

  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v29[v31]);
  objc_msgSend(v29, "setUserInteractionEnabled:", 0);
  swift_release(v10);

  return v29;
}

id sub_100101C24(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  double v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  NSString v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void **v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id (*v27)();
  uint64_t v28;

  v4 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_countLabel];
  v5 = objc_msgSend(v4, "text");
  if (a2)
  {
    if (v5)
    {

      v7 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(a2).n128_u64[0];
LABEL_9:
      objc_msgSend(v4, "setText:", v7, v6);

      return objc_msgSend(v2, "setNeedsLayout");
    }
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setText:", v17, swift_bridgeObjectRelease(a2).n128_f64[0]);

    v18 = (void *)objc_opt_self(UIView);
    v19 = swift_allocObject(&unk_100728AB0, 24, 7);
    *(_QWORD *)(v19 + 16) = v2;
    v27 = sub_1001022C4;
    v28 = v19;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_1000BD6CC;
    v26 = &unk_100728AC8;
    v10 = _Block_copy(&v23);
    v20 = v28;
    v21 = v2;
    swift_release(v20);
    objc_msgSend(v18, "animateWithDuration:delay:options:animations:completion:", 4, v10, 0, 0.2, 0.0);
  }
  else
  {
    if (!v5)
    {
      v7 = 0;
      goto LABEL_9;
    }

    v8 = (void *)objc_opt_self(UIView);
    v9 = swift_allocObject(&unk_100728A10, 24, 7);
    *(_QWORD *)(v9 + 16) = v2;
    v27 = sub_100102278;
    v28 = v9;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_1000BD6CC;
    v26 = &unk_100728A28;
    v10 = _Block_copy(&v23);
    v11 = v28;
    v12 = v2;
    swift_release(v11);
    v13 = swift_allocObject(&unk_100728A60, 24, 7);
    *(_QWORD *)(v13 + 16) = v12;
    v27 = sub_1001022A4;
    v28 = v13;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_100129140;
    v26 = &unk_100728A78;
    v14 = _Block_copy(&v23);
    v15 = v28;
    v16 = v12;
    swift_release(v15);
    objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 4, v10, v14, 0.2, 0.0);
    _Block_release(v14);
  }
  _Block_release(v10);
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_100102000(void *a1)
{
  CGAffineTransform v3;

  CGAffineTransformMakeScale(&v3, 0.0, 0.0);
  return objc_msgSend(a1, "setTransform:", &v3);
}

id sub_100102094()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CountBadgeView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CountBadgeView()
{
  return objc_opt_self(_TtC22SubscribePageExtension14CountBadgeView);
}

uint64_t storeEnumTagSinglePayload for CountBadgeView.Size(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100102140 + 4 * byte_100676235[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100102174 + 4 * byte_100676230[v4]))();
}

uint64_t sub_100102174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10010217C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100102184);
  return result;
}

uint64_t sub_100102190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100102198);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10010219C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001021A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CountBadgeView.Size()
{
  return &type metadata for CountBadgeView.Size;
}

unint64_t sub_1001021C4()
{
  unint64_t result;

  result = qword_1007FB620;
  if (!qword_1007FB620)
  {
    result = swift_getWitnessTable(&unk_1006762AC, &type metadata for CountBadgeView.Size);
    atomic_store(result, (unint64_t *)&qword_1007FB620);
  }
  return result;
}

uint64_t sub_100102208()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_10010222C()
{
  uint64_t v0;
  double v1;

  v1 = 9.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 12.0;
  return objc_msgSend(*(id *)(v0 + 16), "_setContinuousCornerRadius:", v1);
}

uint64_t sub_100102250()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100102260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100102270(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100102278()
{
  uint64_t v0;

  return sub_100102000(*(void **)(v0 + 16));
}

uint64_t sub_100102280()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001022A4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_countLabel), "setText:", 0);
}

id sub_1001022C4()
{
  uint64_t v0;
  void *v1;
  _QWORD v3[6];

  v1 = *(void **)(v0 + 16);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return objc_msgSend(v1, "setTransform:", v3);
}

id sub_100102300()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension14CountBadgeView_countLabel);
  result = objc_msgSend(v1, "text");
  if (result)
  {
    v3 = result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    v7 = String.count.getter(v4, v6);
    result = (id)swift_bridgeObjectRelease(v6);
    if (v7 >= 2)
      return objc_msgSend(v1, "sizeThatFits:", 0.0, 0.0);
  }
  return result;
}

uint64_t sub_100102408(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*v1 != *a1 || (static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 2) & 1) == 0)
    return 0;
  v3 = type metadata accessor for InfoDebugSetting();
  result = swift_dynamicCastClass(a1, v3);
  if (result)
  {
    v5 = (_QWORD *)result;
    v6 = *(_QWORD *)(result + 56);
    v7 = v5[8];
    v8 = v1[7];
    v9 = v1[8];
    v10 = v6 == v8 && v7 == v9;
    if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0), result = 0, (v11 & 1) != 0))
    {
      v12 = v5[10];
      v13 = v1[10];
      result = (v12 | v13) == 0;
      if (v12)
      {
        if (v13)
        {
          v14 = v5[9];
          v15 = v1[9];
          if (v14 == v15 && v12 == v13)
            return 1;
          else
            return _stringCompareWithSmolCheck(_:_:expecting:)(v14, v12, v15, v13, 0);
        }
      }
    }
  }
  return result;
}

void sub_1001024D8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  AnyHashable.hash(into:)();
  v4 = v1[7];
  v5 = v2[8];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[10];
  if (v6)
  {
    v7 = v2[9];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(a1, v7, v6);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_10010257C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
}

uint64_t sub_100102598()
{
  uint64_t v0;

  sub_100019370(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for InfoDebugSetting()
{
  return objc_opt_self(_TtC22SubscribePageExtension16InfoDebugSetting);
}

ValueMetadata *type metadata accessor for EngagementToggleActionImplementation()
{
  return &type metadata for EngagementToggleActionImplementation;
}

unint64_t sub_100102600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FB6F8;
  if (!qword_1007FB6F8)
  {
    v1 = type metadata accessor for EngagementToggleAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007FB6F8);
  }
  return result;
}

uint64_t sub_100102648(uint64_t *a1, uint64_t a2)
{
  return sub_100102650(*a1, a2);
}

uint64_t sub_100102650(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::Bool v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v3 = type metadata accessor for ActionOutcome(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppStoreEngagementManager(0, v5);
  v9 = *(_QWORD *)(a2 + qword_1008540A0);
  if (v9)
  {
    v10 = swift_retain(*(_QWORD *)(a2 + qword_1008540A0));
    v11 = EngagementToggleAction.identifier.getter(v10);
    v13 = v12;
    v14 = EngagementToggleAction.value.getter() & 1;
    v15._countAndFlagsBits = v11;
    v15._object = v13;
    AppStoreEngagementManager.setIdentifier(_:isEnabled:)(v15, v14);
    swift_bridgeObjectRelease(v13);
    sub_10000DF3C(&qword_100803510);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for ActionOutcome.performed(_:), v3);
    v16 = Promise.__allocating_init(value:)(v7);
    swift_release(v9);
    return v16;
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v8);
    __break(1u);
  }
  return result;
}

void sub_100102768(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  Swift::UInt v13;

  v3 = v1[2];
  v4 = v1[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = v1[4];
  v6 = v1[5];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = v1[6];
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    Hasher._combine(_:)(v8);
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v12 = v1[6];
  else
    v12 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v1[6], 2);
  v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(v13);
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v7);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * i + 32);
        swift_retain(v11);
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 104))(a1);
      swift_release(v11);
    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1001028CC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for DebugSection()
{
  return objc_opt_self(_TtC22SubscribePageExtension12DebugSection);
}

Swift::Int sub_100102920()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100102768((uint64_t)v1);
  return Hasher._finalize()();
}

void sub_100102960(uint64_t a1)
{
  sub_100102768(a1);
}

Swift::Int sub_100102980(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100102768((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1001029BC(_QWORD **a1, _QWORD **a2)
{
  return sub_100102A10(*a1, *a2);
}

unint64_t sub_1001029CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FB7C0;
  if (!qword_1007FB7C0)
  {
    v1 = type metadata accessor for DebugSection();
    result = swift_getWitnessTable(byte_100676404, v1);
    atomic_store(result, (unint64_t *)&qword_1007FB7C0);
  }
  return result;
}

uint64_t sub_100102A10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[2];
  v7 = a2[3];
  v8 = v4 == v6 && v5 == v7;
  if ((v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0) & 1) != 0)
    && ((v9 = a1[4], v10 = a1[5], v11 = a2[4], v12 = a2[5], v9 == v11) ? (v13 = v10 == v12) : (v13 = 0),
        v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v11, v12, 0) & 1) != 0))
  {
    return sub_100105F00(a1[6], a2[6]);
  }
  else
  {
    return 0;
  }
}

void sub_100102A8C()
{
  qword_1007FB7C8 = 0x4028000000000000;
}

UIContentSizeCategory sub_100102A9C()
{
  qword_1007FB7D0 = (uint64_t)UIContentSizeCategoryAccessibilityMedium;
  return UIContentSizeCategoryAccessibilityMedium;
}

double sub_100102BA8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  __C::UIContentSizeCategory_optional v6;
  id v7;
  Class isa;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  uint64_t v16;
  __C::UIContentSizeCategory_optional v17;

  v1 = type metadata accessor for SystemImage(0);
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = __chkstk_darwin(v1).n128_u64[0];
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "traitCollection", v3);
  if (qword_1007F1258 != -1)
    swift_once(&qword_1007F1258, sub_100102A9C);
  v17.is_nil = qword_1007FB7D0;
  v17.value._rawValue = 0;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v17, v6).super.isa;
  sub_100019574(0, &qword_1007FB818, UIImageSymbolConfiguration_ptr);
  v9 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(UIFontTextStyleTitle2, 6, 0, 0, 1);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for SystemImage.starFill(_:), v1);
  v10 = objc_msgSend(v9, "configurationWithTraitCollection:", isa);
  v11 = (void *)static SystemImage.load(_:with:)(v5, v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v12 = objc_msgSend(v11, "imageWithRenderingMode:", 2);

  objc_msgSend(v12, "size");
  v14 = v13;

  return v14;
}

void sub_100102D6C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  CGContext *v18;
  id v19;
  void *v20;
  CGColor *v21;
  double MidY;
  double v23;
  double v24;
  double v25;
  __C::UIContentSizeCategory_optional v26;
  id v27;
  double v28;
  Class isa;
  void *v30;
  void (*v31)(char *, _QWORD, uint64_t);
  id v32;
  uint64_t v33;
  void *v34;
  void (*v35)(char *, uint64_t);
  id v36;
  Class v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  double v44;
  double v45;
  char *v46;
  id v47;
  char v48;
  char *v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  void (*v59)(char *, uint64_t);
  id v60;
  id v61;
  char v62;
  double v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  id v68;
  id v69;
  char v70;
  double v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  id v76;
  id v77;
  char v78;
  double v79;
  uint64_t v80;
  double v81;
  double v82;
  double v83;
  id v84;
  id v85;
  char v86;
  double v87;
  uint64_t v88;
  double v89;
  double v90;
  double v91;
  unint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  CGColor *v98;
  CGContext *v99;
  char *v100;
  CGFloat v101;
  uint64_t v102;
  id v103;
  objc_super v104;
  __C::UIContentSizeCategory_optional v105;
  __C::UIContentSizeCategory_optional v106;
  __C::UIContentSizeCategory_optional v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;

  v5 = v4;
  v102 = type metadata accessor for FloatingPointRoundingRule(0);
  v10 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SystemImage(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (objc_class *)type metadata accessor for StarRatingControl();
  v104.receiver = v4;
  v104.super_class = v17;
  v101 = a4;
  objc_msgSendSuper2(&v104, "drawRect:", a1, a2, a3, a4);
  v18 = UIGraphicsGetCurrentContext();
  v19 = objc_msgSend(v4, "tintColor");
  if (v19)
  {
    v20 = v19;
    v21 = (CGColor *)objc_msgSend(v19, "CGColor");

    if (v18)
      CGContextSetFillColorWithColor(v18, v21);
    v96 = v12;
    v97 = v10;
    v98 = v21;
    v99 = v18;
    objc_msgSend(v5, "bounds");
    MidY = CGRectGetMidY(v108);
    v23 = sub_100102BA8();
    v25 = v24;
    v27 = objc_msgSend(v5, "traitCollection", v23);
    v100 = v5;
    if (qword_1007F1258 != -1)
      swift_once(&qword_1007F1258, sub_100102A9C);
    v28 = v25 * -0.5;
    v105.is_nil = qword_1007FB7D0;
    v105.value._rawValue = 0;
    isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v105, v26).super.isa;
    v95 = sub_100019574(0, &qword_1007FB818, UIImageSymbolConfiguration_ptr);
    v30 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(UIFontTextStyleTitle2, 6, 0, 0, 1);
    v31 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 104);
    v31(v16, enum case for SystemImage.starFill(_:), v13);
    v32 = objc_msgSend(v30, "configurationWithTraitCollection:", isa);
    v33 = v13;
    v34 = (void *)static SystemImage.load(_:with:)(v16, v32);

    v35 = *(void (**)(char *, uint64_t))(v14 + 8);
    v35(v16, v33);
    v103 = objc_msgSend(v34, "imageWithRenderingMode:", 2);

    v36 = objc_msgSend(v100, "traitCollection");
    v106.is_nil = qword_1007FB7D0;
    v106.value._rawValue = 0;
    v37 = UITraitCollection.clampingContentSizeCategory(min:max:)(v106, v107).super.isa;
    v38 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(UIFontTextStyleTitle2, 6, 0, 0, 1);
    v31(v16, enum case for SystemImage.star(_:), v33);
    v39 = objc_msgSend(v38, "configurationWithTraitCollection:", v37);
    v40 = (void *)static SystemImage.load(_:with:)(v16, v39);

    v35(v16, v33);
    v41 = objc_msgSend(v40, "imageWithRenderingMode:", 2);

    objc_msgSend(v103, "size");
    v43 = v42;
    if (qword_1007F1250 != -1)
      swift_once(&qword_1007F1250, sub_100102A8C);
    v44 = MidY + v28;
    v45 = *(double *)&qword_1007FB7C8;
    v46 = v100;
    v47 = objc_msgSend(v100, "traitCollection");
    v48 = UITraitCollection.prefersRightToLeftLayouts.getter();

    v49 = v96;
    v50 = v97;
    if ((v48 & 1) != 0)
    {
      v109.origin.x = a1;
      v109.origin.y = a2;
      v109.size.width = a3;
      v109.size.height = v101;
      v51 = CGRectGetMaxX(v109) - v43 + v45 * -0.0;
    }
    else
    {
      v51 = (v43 + v45) * 0.0;
    }
    v52 = OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating;
    v53 = enum case for FloatingPointRoundingRule.down(_:);
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
    v55 = v102;
    v54(v49, enum case for FloatingPointRoundingRule.down(_:), v102);
    v56 = CGPoint.rounded(_:)(v49, v51, v44);
    v58 = v57;
    v59 = *(void (**)(char *, uint64_t))(v50 + 8);
    v59(v49, v55);
    if (*(_QWORD *)&v46[v52])
      v60 = v103;
    else
      v60 = v41;
    objc_msgSend(v60, "drawAtPoint:", v56, v58);
    v61 = objc_msgSend(v46, "traitCollection");
    v62 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v62 & 1) != 0)
    {
      v110.origin.x = a1;
      v110.origin.y = a2;
      v110.size.width = a3;
      v110.size.height = v101;
      v63 = CGRectGetMaxX(v110) - (v43 + v43) - v45;
    }
    else
    {
      v63 = v43 + v45;
    }
    v64 = v102;
    v54(v49, v53, v102);
    v65 = CGPoint.rounded(_:)(v49, v63, v44);
    v67 = v66;
    v59(v49, v64);
    if (*(_QWORD *)&v46[v52] <= 1uLL)
      v68 = v41;
    else
      v68 = v103;
    objc_msgSend(v68, "drawAtPoint:", v65, v67);
    v69 = objc_msgSend(v46, "traitCollection");
    v70 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v70 & 1) != 0)
    {
      v111.origin.x = a1;
      v111.origin.y = a2;
      v111.size.width = a3;
      v111.size.height = v101;
      v71 = CGRectGetMaxX(v111) + v43 * -3.0 - (v45 + v45);
    }
    else
    {
      v71 = v43 + v45 + v43 + v45;
    }
    v72 = v102;
    v54(v49, v53, v102);
    v73 = CGPoint.rounded(_:)(v49, v71, v44);
    v75 = v74;
    v59(v49, v72);
    if (*(_QWORD *)&v46[v52] <= 2uLL)
      v76 = v41;
    else
      v76 = v103;
    objc_msgSend(v76, "drawAtPoint:", v73, v75);
    v77 = objc_msgSend(v46, "traitCollection");
    v78 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v78 & 1) != 0)
    {
      v112.origin.x = a1;
      v112.origin.y = a2;
      v112.size.width = a3;
      v112.size.height = v101;
      v79 = CGRectGetMaxX(v112) + v43 * -4.0 + v45 * -3.0;
    }
    else
    {
      v79 = (v43 + v45) * 3.0;
    }
    v80 = v102;
    v54(v49, v53, v102);
    v81 = CGPoint.rounded(_:)(v49, v79, v44);
    v83 = v82;
    v59(v49, v80);
    if (*(_QWORD *)&v46[v52] <= 3uLL)
      v84 = v41;
    else
      v84 = v103;
    objc_msgSend(v84, "drawAtPoint:", v81, v83);
    v85 = objc_msgSend(v46, "traitCollection");
    v86 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v86 & 1) != 0)
    {
      v113.origin.x = a1;
      v113.origin.y = a2;
      v113.size.width = a3;
      v113.size.height = v101;
      v87 = CGRectGetMaxX(v113) + v43 * -5.0 + v45 * -4.0;
    }
    else
    {
      v87 = (v43 + v45) * 4.0;
    }
    v88 = v102;
    v54(v49, v53, v102);
    v89 = CGPoint.rounded(_:)(v49, v87, v44);
    v91 = v90;
    v59(v49, v88);
    v92 = *(_QWORD *)&v46[v52];
    v93 = v103;
    if (v92 <= 4)
      v94 = v41;
    else
      v94 = v103;
    objc_msgSend(v94, "drawAtPoint:", v89, v91);

  }
  else
  {
    __break(1u);
  }
}

void sub_100103744(double a1)
{
  void *v1;
  void *v2;
  double v4;
  double v5;
  id v6;
  char v7;
  CGFloat MidX;
  double v9;
  double v10;
  double v11;
  double v12;
  CGRect v13;

  v2 = v1;
  if (qword_1007F1250 != -1)
    swift_once(&qword_1007F1250, sub_100102A8C);
  v4 = *(double *)&qword_1007FB7C8;
  v5 = (v4 + sub_100102BA8()) * 5.0;
  v6 = objc_msgSend(v1, "traitCollection");
  v7 = UITraitCollection.prefersRightToLeftLayouts.getter();

  objc_msgSend(v2, "bounds");
  MidX = CGRectGetMidX(v13);
  v9 = a1 - (MidX - v5 * 0.5);
  v10 = v5 * 0.5 + MidX - a1;
  if ((v7 & 1) == 0)
    v10 = v9;
  v11 = v10 / (v5 / 5.0);
  if (v11 > 5.0)
    v11 = 5.0;
  if (v11 <= 1.0)
    v11 = 1.0;
  v12 = ceil(v11);
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v12 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v12 >= 1.84467441e19)
LABEL_15:
    __break(1u);
}

id sub_1001039B0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;

  v6 = a1;
  v7._countAndFlagsBits = a3;
  v7._object = a4;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v7, v8)._object;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  return v10;
}

void sub_100103AC0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  objc_super v11;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v7 = v6;
    v8 = a1;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = a1;
    v9 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for StarRatingControl();
  objc_msgSendSuper2(&v11, *a4, v9);

}

unint64_t sub_100103BB8()
{
  void *v0;
  void *v1;
  unint64_t v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  char **v6;
  char *v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  NSString v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  unint64_t v28;

  v1 = v0;
  v2 = 0;
  v28 = (unint64_t)_swiftEmptyArrayStorage;
  v25 = (unint64_t)"ension.StarRatingControl";
  do
  {
    if (v2 >= 5)
    {
      v6 = &selRef_accessibilitySetStarRatingFive;
      if (v2 != 5)
      {
        v3._object = (void *)(v25 | 0x8000000000000000);
        v3._countAndFlagsBits = 0xD00000000000001ALL;
        v4._countAndFlagsBits = 0;
        v4._object = (void *)0xE000000000000000;
        object = localizedStringWithCount(_:count:comment:)(v3, v2, v4)._object;
LABEL_2:
        swift_bridgeObjectRelease(object);
        goto LABEL_3;
      }
    }
    else
    {
      v6 = off_100728C18[v2];
    }
    v7 = *v6;
    v8._countAndFlagsBits = 0xD00000000000001ALL;
    v8._object = (void *)0x8000000100635FD0;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    object = localizedStringWithCount(_:count:comment:)(v8, v2, v9)._object;
    if (!v7)
      goto LABEL_2;
    v27 = type metadata accessor for StarRatingControl();
    v26[0] = v1;
    v10 = v1;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v12 = v27;
    if (v27)
    {
      v13 = sub_100011064(v26, v27);
      v14 = *(_QWORD *)(v12 - 8);
      v15 = __chkstk_darwin(v13);
      v17 = (char *)&v26[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v14 + 16))(v17, v15);
      v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v12);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
    }
    else
    {
      v18 = 0;
    }
    v19 = objc_msgSend(objc_allocWithZone((Class)UIAccessibilityCustomAction), "initWithName:target:selector:", v11, v18, v7);

    swift_unknownObjectRelease(v18);
    v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);

LABEL_3:
    ++v2;
  }
  while (v2 != 6);
  return v28;
}

uint64_t sub_100103E94(uint64_t a1)
{
  char *v1;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v29;
  __n128 v30;
  void *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void *v34;
  __n128 v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String aBlock;
  uint64_t (*v46)(uint64_t);
  void *v47;
  void (*v48)();
  uint64_t v49;

  v41 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v41 - 8);
  v3 = __chkstk_darwin(v41);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0, v3);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v41 - v16;
  v18 = OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating;
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating] = a1;
  if (v19 != a1)
  {
    objc_msgSend(v1, "setNeedsDisplay", v15);
    a1 = *(_QWORD *)&v1[v18];
  }
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_lastSentRating];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_lastSentRating] = a1;
  if (v20 != a1)
    objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
  v21._object = (void *)0x8000000100635F60;
  v21._countAndFlagsBits = 0xD000000000000017;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = localizedString(_:comment:)(v21, v22);
  v24._countAndFlagsBits = 0xD00000000000001DLL;
  v24._object = (void *)0x8000000100635F80;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v26 = localizedString(_:comment:)(v24, v25);
  aBlock = v23;
  swift_bridgeObjectRetain(v23._object);
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v23._object);
  swift_bridgeObjectRelease(v26._object);
  v29 = aBlock;
  object = v29._object;
  countAndFlagsBits = v29._countAndFlagsBits;
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v31 = (void *)static OS_dispatch_queue.main.getter(v30);
  static DispatchTime.now()();
  + infix(_:_:)(v13, 1.5);
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v13, v10);
  v33 = swift_allocObject(&unk_100728BD8, 32, 7);
  *(_OWORD *)(v33 + 16) = __PAIR128__((unint64_t)object, countAndFlagsBits);
  v48 = sub_10010460C;
  v49 = v33;
  aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
  aBlock._object = (void *)1107296256;
  v46 = sub_1000BD6CC;
  v47 = &unk_100728BF0;
  v34 = _Block_copy(&aBlock);
  v35 = swift_release(v49);
  static DispatchQoS.unspecified.getter(v35);
  aBlock._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  v36 = sub_100033D20();
  v37 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v38 = sub_100033D68();
  v39 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v37, v38, v41, v36);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v9, v5, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v39);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
  return ((uint64_t (*)(char *, uint64_t))v32)(v17, v10);
}

void sub_1001041DC()
{
  UIAccessibilityNotifications v0;
  id v1;

  v0 = UIAccessibilityAnnouncementNotification;
  v1 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v0, v1);

}

id sub_1001043B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StarRatingControl();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StarRatingControl()
{
  return objc_opt_self(_TtC22SubscribePageExtension17StarRatingControl);
}

double sub_100104408()
{
  uint64_t v0;
  uint64_t v1;
  __C::UIContentSizeCategory_optional v2;
  uint64_t v3;
  char *v4;
  Class isa;
  void *v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  uint64_t v13;
  __C::UIContentSizeCategory_optional v14;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1258 != -1)
    swift_once(&qword_1007F1258, sub_100102A9C);
  v14.is_nil = qword_1007FB7D0;
  v14.value._rawValue = 0;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v14, v2).super.isa;
  sub_100019574(0, &qword_1007FB818, UIImageSymbolConfiguration_ptr);
  v6 = (void *)static UIImageSymbolConfiguration.configuration(textStyle:weight:scale:)(UIFontTextStyleTitle2, 6, 0, 0, 1);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for SystemImage.starFill(_:), v0);
  v7 = objc_msgSend(v6, "configurationWithTraitCollection:", isa);
  v8 = (void *)static SystemImage.load(_:with:)(v4, v7);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v9 = objc_msgSend(v8, "imageWithRenderingMode:", 2);

  objc_msgSend(v9, "size");
  v11 = v10;

  if (qword_1007F1250 != -1)
    swift_once(&qword_1007F1250, sub_100102A8C);
  return (v11 + *(double *)&qword_1007FB7C8) * 5.0 - *(double *)&qword_1007FB7C8;
}

uint64_t sub_1001045E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10010460C()
{
  sub_1001041DC();
}

uint64_t sub_100104614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100104624(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10010462C(void *a1)
{
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    objc_msgSend(a1, "locationInView:", v1);
    sub_100103744(v2);
    v4 = OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating;
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating];
    *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating] = v3;
    if (v5 != v3)
    {
      objc_msgSend(v1, "setNeedsDisplay");
      v3 = *(_QWORD *)&v1[v4];
    }
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_lastSentRating];
    *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_lastSentRating] = v3;
    if (v6 != v3)
      objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
  }
}

uint64_t sub_1001046BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  id v16;
  char v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t *v32;
  uint64_t *v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  _QWORD v42[2];
  void *v43;
  _BYTE v44[40];
  _QWORD v45[5];
  __int128 v46;
  void *v47;
  void *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _QWORD v52[6];

  v4 = a3.n128_f64[0];
  v42[1] = a2;
  v5 = type metadata accessor for BreakoutDetailsLayout.DetailDimension(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FloatingPointRoundingRule(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SmallBreakoutCollectionViewCell(0);
  swift_getObjectType();
  v13 = sub_10010583C((uint64_t)a1);
  v15 = v14;
  v51 = 0;
  v49 = 0u;
  v50 = 0u;
  v16 = objc_msgSend(a1, "traitCollection");
  v17 = UITraitCollection.isSizeClassCompact.getter(v16);

  if ((v17 & 1) != 0)
  {
    v18 = objc_msgSend(a1, "pageMarginInsets");
    v20 = v19;
    if (JUScreenClassGetMain(v18) == 1)
    {
      v21 = 160.0;
    }
    else
    {
      v28 = NSDirectionalEdgeInsets.edgeInsets.getter(0.0, v20, 0.0, 0.0);
      v29 = CGSize.subtracting(insets:)(v28) + -10.0;
      v52[0] = 0x4063800000000000;
      static Dimensions.defaultRoundingRule.getter(v30);
      v31 = AnyDimension.value(in:rounded:)(a1, v12, &type metadata for CGFloat, &protocol witness table for CGFloat);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v21 = v29 - v31;
    }
    v32 = qword_1007FAFF0 + 16;
    v33 = &qword_1007F1000;
    v52[3] = &type metadata for CGFloat;
    v52[4] = &protocol witness table for CGFloat;
    *(double *)v52 = v21;
    v47 = &type metadata for CGFloat;
    v48 = &protocol witness table for CGFloat;
    *(_QWORD *)&v46 = 0x4014000000000000;
    sub_100011088((uint64_t)&v49, (uint64_t *)&unk_100803C00);
    sub_10010592C((uint64_t)&v46, (uint64_t)&v49);
    v27 = 0.0;
  }
  else
  {
    objc_msgSend(a1, "pageContainerSize");
    v23 = v22;
    objc_msgSend(a1, "pageContainerSize");
    if (v24 >= v23)
    {
      PageTraitEnvironment.pageColumnWidth.getter();
      v27 = (v4 - (v34 + v34)) * 0.5;
      v20 = v27;
    }
    else
    {
      objc_msgSend(a1, "pageMarginInsets");
      v20 = v25;
      objc_msgSend(a1, "pageMarginInsets");
      v27 = v26;
    }
    v32 = &qword_1007FAFF0[2];
    v33 = &qword_1007F1000;
    if (qword_1007F1278 != -1)
      swift_once(&qword_1007F1278, sub_100104CFC);
    v35 = static SmallBreakoutLayout.rotatedIconFrameOffsets(rotation:iconSize:)(*(double *)&qword_1007FB850, v13, v15);
    v36 = v13 + v35 + v35;
    v37 = NSDirectionalEdgeInsets.edgeInsets.getter(0.0, v20, 0.0, v27);
    v38 = CGSize.subtracting(insets:)(v37);
    v47 = &type metadata for CGFloat;
    v48 = &protocol witness table for CGFloat;
    *(double *)&v46 = v38 + -10.0 - v36;
    sub_100011088((uint64_t)&v49, (uint64_t *)&unk_100803C00);
    sub_100010F3C(&v46, (uint64_t)v52);
    v49 = 0u;
    v50 = 0u;
    v51 = 0;
  }
  if (v33[79] != -1)
    swift_once(&qword_1007F1278, sub_100104CFC);
  v39 = *((double *)v32 + 266);
  sub_1001058E4((uint64_t)&v49, (uint64_t)&v46);
  v45[4] = &protocol witness table for CGFloat;
  v45[3] = &type metadata for CGFloat;
  v45[0] = 0x4024000000000000;
  sub_100011020((uint64_t)v52, (uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for BreakoutDetailsLayout.DetailDimension.static(_:), v5);
  if (qword_1007F1270 != -1)
    swift_once(&qword_1007F1270, sub_100104C48);
  v40 = sub_10000DF3C(&qword_1007FB8A0);
  sub_1000117A8(v40, (uint64_t)qword_100851A80);
  v43 = a1;
  Conditional.evaluate(with:)(&v43, v40);
  SmallBreakoutLayout.Metrics.init(iconSize:iconRotation:iconBottomOffset:detailsTrailingMargin:detailsWidth:layoutMargins:height:)(&v46, v45, v8, v44, v13, v15, v39, 0.0, v20, 0.0, v27);
  sub_100011088((uint64_t)&v49, (uint64_t *)&unk_100803C00);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v52);
}

double sub_100104B58()
{
  double result;

  if (qword_1007F1278 != -1)
    swift_once(&qword_1007F1278, sub_100104CFC);
  result = *(double *)&qword_1007FB850 * 0.0174532925;
  *(double *)&qword_1007FB830 = *(double *)&qword_1007FB850 * 0.0174532925;
  return result;
}

double sub_100104BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  int64x2_t v4;
  int64x2_t v5;

  v0 = sub_10000DF3C(&qword_1007FAAC0);
  sub_100045464(v0, qword_1007FB838);
  sub_1000117A8(v0, (uint64_t)qword_1007FB838);
  v4 = vdupq_n_s64(0x406C400000000000uLL);
  v5 = vdupq_n_s64(0x4072C00000000000uLL);
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for CGSize(0);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(&v5, &v4, v1, v2).n128_u64[0];
  return result;
}

double sub_100104C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  _QWORD v4[5];
  _QWORD v5[5];

  v0 = sub_10000DF3C(&qword_1007FB8A0);
  sub_100045464(v0, qword_100851A80);
  sub_1000117A8(v0, (uint64_t)qword_100851A80);
  v5[3] = &type metadata for Double;
  v5[4] = &protocol witness table for Double;
  v4[4] = &protocol witness table for Double;
  v5[0] = 0x4072C00000000000;
  v4[3] = &type metadata for Double;
  v4[0] = 0x406F400000000000;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  v2 = sub_10000DF3C(&qword_1007FB8A8);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v5, v4, v1, v2).n128_u64[0];
  return result;
}

void sub_100104CFC()
{
  qword_1007FB850 = 0xC03E000000000000;
}

char *sub_100104D0C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  CGAffineTransform v44;
  objc_super v45;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DF3C(&qword_100804490);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C(&qword_1007FB8B0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v5[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_itemLayoutContext];
  v21 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_backgroundArtwork] = 0;
  v22 = OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_detailsView;
  v23 = qword_1007F3048;
  v24 = v5;
  if (v23 != -1)
    swift_once(&qword_1007F3048, sub_1005585E4);
  v25 = sub_1000117A8(v14, (uint64_t)qword_100856EA8);
  sub_100105B1C(v25, (uint64_t)v16);
  v26 = sub_10000DF3C(&qword_1007F5D10);
  Conditional<>.init(value:)(v16, v26, v14);
  v27 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0));
  *(_QWORD *)&v5[v22] = sub_1004AA530((uint64_t)v19);
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_pageTraits] = 0;
  v28 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView] = static ArtworkView.iconArtworkView.getter(v28);

  v45.receiver = v24;
  v45.super_class = ObjectType;
  v29 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", a1, a2, a3, a4);
  v30 = objc_msgSend(v29, "contentView");
  objc_msgSend(v30, "setClipsToBounds:", 1);

  v31 = objc_msgSend(v29, "contentView");
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v32 = OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView;
  v33 = qword_1007F1418;
  v34 = *(id *)&v29[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView];
  if (v33 != -1)
    swift_once(&qword_1007F1418, sub_10015E410);
  v35 = type metadata accessor for Shadow(0);
  v36 = sub_1000117A8(v35, (uint64_t)qword_100852048);
  v37 = *(_QWORD *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v13, v36, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v13, 0, 1, v35);
  ArtworkView.shadow.setter(v13);

  v38 = qword_1007F1260;
  v39 = *(id *)&v29[v32];
  if (v38 != -1)
    swift_once(&qword_1007F1260, sub_100104B58);
  CGAffineTransformMakeRotation(&v44, *(CGFloat *)&qword_1007FB830);
  objc_msgSend(v39, "setTransform:", &v44);

  v40 = objc_msgSend(v29, "contentView");
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v29[v32]);

  v41 = objc_msgSend(v29, "contentView");
  v42 = *(id *)&v29[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_detailsView];
  objc_msgSend(v41, "addSubview:", v42);

  return v29;
}

id sub_100105250()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id result;
  void *v18;
  unint64_t v19;
  __n128 v20;
  id v21;
  void *v22;
  id v23;
  __n128 v24;
  _QWORD v25[5];
  _QWORD v26[5];
  objc_super v27;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SmallBreakoutLayout.Metrics(0, v5);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SmallBreakoutLayout(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.receiver = v1;
  v27.super_class = ObjectType;
  result = objc_msgSendSuper2(&v27, "layoutSubviews", v14);
  v18 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_pageTraits];
  if (v18)
  {
    swift_unknownObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_pageTraits]);
    LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    v20.n128_u64[0] = v19;
    sub_1001046BC(v18, (uint64_t)v11, v20);
    v21 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView];
    UIView.withUntransformedFrame.getter(v26);

    v22 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_detailsView];
    v25[3] = type metadata accessor for BreakoutDetailsView(0);
    v25[4] = &protocol witness table for UIView;
    v25[0] = v22;
    v23 = v22;
    SmallBreakoutLayout.init(metrics:iconView:detailsView:)(v11, v26, v25);
    objc_msgSend(v1, "bounds");
    SmallBreakoutLayout.placeChildren(relativeTo:in:)(v1);
    v24 = swift_unknownObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v24);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  return result;
}

uint64_t sub_100105468()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;
  objc_super v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v12.receiver = v0;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, "prepareForReuse");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_detailsView];
  sub_1004A9474();
  v11.receiver = v0;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "setBackgroundColor:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView];
  v10.receiver = v0;
  v10.super_class = ObjectType;
  v4 = v3;
  v5 = objc_msgSendSuper2(&v10, "backgroundColor");
  ArtworkView.backgroundColor.setter(v5);

  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler + 8);
  *v6 = 0;
  v6[1] = 0;
  return sub_100019310(v7, v8);
}

uint64_t sub_1001055EC()
{
  return type metadata accessor for SmallBreakoutCollectionViewCell(0);
}

uint64_t type metadata accessor for SmallBreakoutCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FB880;
  if (!qword_1007FB880)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallBreakoutCollectionViewCell);
  return result;
}

void sub_100105630(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

id sub_1001056B8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView);
}

double sub_1001056C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_pageTraits);
  if (!v1)
    return 0.0;
  swift_getObjectType();
  swift_getObjectType();
  swift_unknownObjectRetain(v1);
  v3 = sub_10010583C(v2);
  swift_unknownObjectRelease(v1);
  return v3;
}

void sub_100105754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v3 = v2;
  v5 = OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView;
  v6 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_iconView);
  ArtworkView.isImageHidden.setter(1);

  v7 = *(void **)(v3 + v5);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v10 = v7;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, a2, v8, v9);

}

uint64_t sub_100105800(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E99C(&qword_1007FB898, type metadata accessor for SmallBreakoutCollectionViewCell, (uint64_t)&unk_100676510);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_10010583C(uint64_t a1)
{
  uint64_t v3;
  _QWORD v4[2];

  if (JUScreenClassGetMain(a1) == 1)
    return 194.0;
  if (qword_1007F1268 != -1)
    swift_once(&qword_1007F1268, sub_100104BAC);
  v3 = sub_10000DF3C(&qword_1007FAAC0);
  sub_1000117A8(v3, (uint64_t)qword_1007FB838);
  v4[0] = a1;
  Conditional.evaluate(with:)(v4, v3);
  return *(double *)&v4[1];
}

uint64_t sub_1001058E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100803C00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010592C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100803C00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100105974()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007FB8B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_itemLayoutContext];
  v9 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_backgroundArtwork] = 0;
  v10 = OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_detailsView;
  if (qword_1007F3048 != -1)
    swift_once(&qword_1007F3048, sub_1005585E4);
  v11 = sub_1000117A8(v2, (uint64_t)qword_100856EA8);
  sub_100105B1C(v11, (uint64_t)v4);
  v12 = sub_10000DF3C(&qword_1007F5D10);
  Conditional<>.init(value:)(v4, v12, v2);
  v13 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0));
  *(_QWORD *)&v1[v10] = sub_1004AA530((uint64_t)v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31SmallBreakoutCollectionViewCell_pageTraits] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SmallBreakoutCollectionViewCell.swift", 60, 2, 141, 0);
  __break(1u);
}

uint64_t sub_100105B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BreakoutDetailsView.Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100105B60(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
    case 7:
      result = type metadata accessor for TodayCardChinSingleLockupView();
      break;
    case 1:
      result = type metadata accessor for TodayCardMarketingLockupOverlayView();
      break;
    case 2:
      result = type metadata accessor for TodayCardChinLockupListView(0);
      break;
    case 3:
      result = type metadata accessor for TodayCardParagraphOverlayView();
      break;
    case 4:
      result = type metadata accessor for TodayCardActionOverlayView(0);
      break;
    case 5:
      result = type metadata accessor for TodayCardThreeLineOverlayView();
      break;
    case 6:
      result = type metadata accessor for TodayCardArcadeLockupOverlayView();
      break;
    default:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "SubscribePageExtension/TodayCardOverlayType+Views.swift", 55, 2, 51, 0);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_100105C5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.items.getter();
  *a1 = result;
  return result;
}

void sub_100105C84(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a1);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
    {
LABEL_3:
      if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
      goto LABEL_4;
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
  }
  if (a2 < 0)
    v23 = a2;
  else
    v23 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(a2);
  if (v6 != v24)
    return;
LABEL_4:
  if (!v6)
    return;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return;
  if (v6 < 0)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    v13 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
      goto LABEL_18;
    goto LABEL_46;
  }
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_45;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_48;
  }
  v12 = *(_QWORD *)(a1 + 32);
  swift_retain(v12);
  v13 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
LABEL_18:
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v14 = *(_QWORD **)(a2 + 32);
      swift_retain(v14);
      goto LABEL_20;
    }
LABEL_48:
    __break(1u);
    return;
  }
LABEL_46:
  v14 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_20:
  v15 = sub_100080234(v14);
  swift_release(v12);
  swift_release(v14);
  if ((v15 & 1) != 0)
  {
    v16 = 1 - v6;
    v17 = 5;
    do
    {
      v6 = v16 + v17 == 5;
      if (v16 + v17 == 5)
        return;
      v20 = v17 - 4;
      if (v2)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, a1);
        if (v13)
          goto LABEL_22;
      }
      else
      {
        if (v20 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
        v21 = *(_QWORD *)(a1 + 8 * v17);
        swift_retain(v21);
        if (v13)
        {
LABEL_22:
          v18 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, a2);
          goto LABEL_23;
        }
      }
      if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_43;
      v18 = *(_QWORD **)(a2 + 8 * v17);
      swift_retain(v18);
LABEL_23:
      v19 = sub_100080234(v18);
      swift_release(v21);
      swift_release(v18);
      ++v17;
    }
    while ((v19 & 1) != 0);
  }
}

uint64_t sub_100105F00(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
LABEL_39:
    if (a2 < 0)
      v21 = a2;
    else
      v21 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(a2);
    if (v6 == v22)
      goto LABEL_4;
LABEL_43:
    LOBYTE(v6) = 0;
    return v6 & 1;
  }
LABEL_35:
  if (a1 < 0)
    v20 = a1;
  else
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(a1);
  v7 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_39;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_43;
LABEL_4:
  if (!v6)
    goto LABEL_33;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0)
    v8 = a1;
  if (!v5)
    v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  v9 = a2 & 0xFFFFFFFFFFFFFF8;
  v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v9 = a2;
  if (v7)
    v10 = v9;
  if (v8 == v10)
  {
LABEL_33:
    LOBYTE(v6) = 1;
    return v6 & 1;
  }
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_46;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v11 = *(_QWORD *)(a1 + 32);
    result = swift_retain(v11);
    v13 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
      goto LABEL_17;
LABEL_48:
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_19:
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 96))(v5);
    swift_release(v11);
    swift_release(v5);
    if ((v14 & 1) != 0)
    {
      v15 = v6 - 1;
      if (v6 != 1)
      {
        v16 = 0;
        v17 = v6 - 2;
        while (1)
        {
          if (v15 == v16)
          {
            __break(1u);
            goto LABEL_35;
          }
          v6 = v16 + 1;
          if (v2)
          {
            v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 + 1, a1);
            if (v13)
              goto LABEL_25;
          }
          else
          {
            v18 = *(_QWORD *)(a1 + 40 + 8 * v16);
            swift_retain(v18);
            if (v13)
            {
LABEL_25:
              v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 + 1, a2);
              goto LABEL_29;
            }
          }
          if (v6 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
          v5 = *(_QWORD *)(a2 + 40 + 8 * v16);
          swift_retain(v5);
LABEL_29:
          LOBYTE(v6) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 96))(v5);
          swift_release(v18);
          swift_release(v5);
          if ((v6 & 1) != 0 && v17 != v16++)
            continue;
          return v6 & 1;
        }
      }
      return v6 & 1;
    }
    goto LABEL_43;
  }
LABEL_47:
  result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  v11 = result;
  v13 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
    goto LABEL_48;
LABEL_17:
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(a2 + 32);
    swift_retain(v5);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

unint64_t sub_100106180(unint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = a2;
  v3 = result;
  v4 = result >> 62;
  if (result >> 62)
    goto LABEL_42;
  v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_46;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
  while (1)
  {
    if (!v5)
      return 1;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v3 < 0)
      v7 = v3;
    if (!v4)
      v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    v27 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v2 < 0)
      v8 = v2;
    if (v6)
      v9 = v8;
    if (v7 == v9)
      return 1;
    if (v5 < 0)
      break;
    v10 = (uint64_t *)(v3 + 32);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v11 = 0;
      v28 = v3;
      v29 = v2;
      v12 = v3 & 0xC000000000000001;
      v13 = v2 & 0xC000000000000001;
      v26 = v2 + 32;
      while (1)
      {
        if (v5 == v11)
        {
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        if (v12)
        {
          v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v28);
          if (!v13)
            goto LABEL_22;
        }
        else
        {
          v4 = v10[v11];
          swift_retain(v4);
          if (!v13)
          {
LABEL_22:
            if (v11 >= *(_QWORD *)(v27 + 16))
              goto LABEL_41;
            v14 = *(_QWORD *)(v26 + 8 * v11);
            swift_retain(v14);
            goto LABEL_24;
          }
        }
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v29);
LABEL_24:
        v2 = *(_QWORD *)(v4 + 16);
        v3 = *(_QWORD *)(v14 + 16);
        swift_release(v4);
        swift_release(v14);
        result = v2 == v3;
        if (v2 == v3)
        {
          v22 = v5 - 1 == v11++;
          if (!v22)
            continue;
        }
        return result;
      }
    }
    v15 = (uint64_t *)(v2 + 32);
    v16 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (!v5)
        goto LABEL_39;
      if (!v16)
        break;
      v18 = *v10++;
      v17 = v18;
      v19 = *v15++;
      v20 = *(_QWORD *)(v17 + 16);
      v21 = *(_QWORD *)(v19 + 16);
      --v16;
      result = v20 == v21;
      v22 = v20 != v21 || v5-- == 1;
      if (v22)
        return result;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v23);
    result = swift_bridgeObjectRelease(v3);
    v6 = (unint64_t)v2 >> 62;
    if (!((unint64_t)v2 >> 62))
      goto LABEL_3;
LABEL_46:
    if (v2 < 0)
      v24 = v2;
    else
      v24 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    result = swift_bridgeObjectRelease(v2);
    if (v5 != v25)
      return 0;
  }
  __break(1u);
  return result;
}

void sub_1001063BC(uint64_t a1, unint64_t a2)
{
  sub_1001068EC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, &qword_1007FAFA8, (uint64_t)&protocol conformance descriptor for Artwork);
}

id sub_1001063D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v2 = a2;
  v3 = a1;
  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v2);
    if (v5 == v32)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v3);
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v33 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v3 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_21:
    v14 = v13;
    sub_1000117FC();
    v15 = static NSObject.== infix(_:_:)(v12, v14);

    if ((v15 & 1) == 0)
      goto LABEL_54;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v33)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_59;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = static NSObject.== infix(_:_:)(v20, v21);

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_58;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = static NSObject.== infix(_:_:)(v2, v3);

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001066BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v6 = *v3++;
      v5 = v6;
      v8 = *v4++;
      v7 = v8;
      switch(v5)
      {
        case 6:
          if (v7 != 6)
            return 0;
          break;
        case 5:
          if (v7 != 5)
            return 0;
          break;
        case 4:
          if (v7 != 4)
            return 0;
          break;
        default:
          if ((v7 - 7) > 0xFFFFFFFC || v5 != v7)
            return 0;
          break;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_10010674C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  BOOL v22;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for AdamId(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v24 = *(_QWORD *)(v8 + 72);
      v25 = v8;
      v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
      v15 = v12 - 1;
      do
      {
        v16 = a1;
        v14(v11, a1 + v13, v4, v9);
        v17 = a2;
        ((void (*)(char *, unint64_t, uint64_t))v14)(v6, a2 + v13, v4);
        v18 = sub_10000E99C(&qword_1008083C0, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
        v19 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v6, v4, v18);
        v20 = *(void (**)(char *, uint64_t))(v25 + 8);
        v20(v6, v4);
        v20(v11, v4);
        v22 = v15-- != 0;
        if ((v19 & 1) == 0)
          break;
        v13 += v24;
        a2 = v17;
        a1 = v16;
      }
      while (v22);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

void sub_1001068D0(uint64_t a1, unint64_t a2)
{
  sub_1001068EC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for MediaPlatform, &qword_1007FB9A0, (uint64_t)&protocol conformance descriptor for MediaPlatform);
}

void sub_1001068EC(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v29;
  uint64_t v30;

  v5 = a2;
  v7 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_30;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_3;
  while (2)
  {
    if (v5 < 0)
      v21 = v5;
    else
      v21 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v5);
    if (v8 != v22)
      return;
LABEL_4:
    if (!v8)
      return;
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v10 = a1;
    if (!v7)
      v10 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    v12 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
    v24 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v5 < 0)
      v11 = v5;
    if (v9)
      v12 = v11;
    if (v10 == v12)
      return;
    if (v8 < 0)
    {
      __break(1u);
      return;
    }
    v7 = a3(0);
    v13 = 0;
    v14 = v5 & 0xC000000000000001;
    v25 = v5;
    v23 = v5 + 32;
    v5 = v8 - 1;
    while (v8 != v13)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        v30 = v15;
        if (v14)
          goto LABEL_19;
      }
      else
      {
        v15 = *(_QWORD *)(a1 + 32 + 8 * v13);
        swift_retain(v15);
        v30 = v15;
        if (v14)
        {
LABEL_19:
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v25);
          goto LABEL_23;
        }
      }
      if (v13 >= *(_QWORD *)(v24 + 16))
        goto LABEL_29;
      v16 = *(_QWORD *)(v23 + 8 * v13);
      swift_retain(v16);
LABEL_23:
      v29 = v16;
      v17 = sub_10000E99C(a4, a3, a5);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(&v30, &v29, v7, v17);
      swift_release(v15);
      swift_release(v16);
      if ((v18 & 1) != 0 && v5 != v13++)
        continue;
      return;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(a1);
    v9 = (unint64_t)v5 >> 62;
    if ((unint64_t)v5 >> 62)
      continue;
    break;
  }
LABEL_3:
  if (v8 == *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
}

Swift::Int sub_100106B14()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  Hasher.init(_seed:)(v6, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v3;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_100106B80()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;

  v1 = v0[1];
  v2 = v0[2];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v2;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
}

Swift::Int sub_100106BC8(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  Hasher.init(_seed:)(v7, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v4;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_100106C30(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

_QWORD *sub_100106C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  Swift::UInt v16;
  Swift::UInt v17;
  double v18;
  uint64_t v19;
  void *v20;
  char v21;
  Swift::UInt v23;
  Swift::UInt v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v45;
  _QWORD v46[6];
  char v47;

  v2 = v1;
  v4 = type metadata accessor for ShelfLayoutContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = ShelfLayoutContext.contentPageGrid.getter(v12);
  v14 = PageGrid.columnCount.getter(v13);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v14 > 1.0)
  {
    sub_10010FC2C((uint64_t)v46);
    v16 = v46[0];
    v17 = v46[1];
    v18 = *(double *)&v46[2];
    if ((v47 & 1) != 0)
    {
      v19 = 0;
    }
    else
    {
      v24 = v46[3];
      v23 = v46[4];
      v25 = *(double *)&v46[5];
      swift_beginAccess(v1 + 16, v46, 32, 0);
      v26 = *(_QWORD *)(v1 + 16);
      if (*(_QWORD *)(v26 + 16) && (v27 = sub_10036C494(v24, v23, v25), (v28 & 1) != 0))
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
        swift_bridgeObjectRetain(v19);
      }
      else
      {
        v19 = 0;
      }
      swift_endAccess(v46);
    }
    v30 = (_QWORD *)(v2 + 16);
    swift_beginAccess(v2 + 16, v46, 32, 0);
    v31 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v31 + 16) && (v32 = sub_10036C494(v16, v17, v18), (v33 & 1) != 0))
    {
      v29 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRetain(v29);
    }
    else
    {
      v29 = 0;
    }
    swift_endAccess(v46);
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if (!v29)
    {
      v35 = (void *)ShelfLayoutContext.traitCollection.getter(v34);
      v36 = UITraitCollection.isSizeClassCompact.getter(v35);

      if ((v36 & 1) != 0)
        v37 = sub_100592C4C((uint64_t)v7);
      else
        v37 = sub_100593BE4();
      v29 = (uint64_t)v37;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v19 && (v38 = *(_QWORD *)(v19 + 16)) != 0)
    {
      v39 = *(_QWORD *)(v19 + 8 * v38 + 24);
      swift_bridgeObjectRetain(v39);
      if (!*(_QWORD *)(v29 + 16))
        goto LABEL_25;
    }
    else
    {
      v39 = 0;
      if (!*(_QWORD *)(v29 + 16))
      {
LABEL_25:
        if (!v39)
          goto LABEL_34;
        goto LABEL_32;
      }
    }
    v40 = *(_QWORD *)(v29 + 32);
    swift_bridgeObjectRetain(v40);
    if (!v39)
    {
      if (!v40)
      {
LABEL_34:
        v40 = v29;
        v29 = sub_10059243C(v29);
      }
LABEL_35:
      swift_bridgeObjectRelease(v40);
LABEL_36:
      swift_beginAccess(v30, v46, 33, 0);
      swift_bridgeObjectRetain(v29);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
      v45 = *v30;
      *v30 = 0x8000000000000000;
      sub_10010B9CC(v29, v16, v17, isUniquelyReferenced_nonNull_native, v18);
      v43 = *v30;
      *v30 = v45;
      swift_bridgeObjectRelease(v43);
      swift_endAccess(v46);
      swift_bridgeObjectRelease(v19);
      return (_QWORD *)v29;
    }
    if (v40)
    {
      v41 = sub_1001066BC(v39, v40);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v40);
      if ((v41 & 1) == 0)
        goto LABEL_36;
      goto LABEL_34;
    }
LABEL_32:
    v40 = v39;
    goto LABEL_35;
  }
  v20 = (void *)ShelfLayoutContext.traitCollection.getter(v15);
  v21 = UITraitCollection.isSizeClassCompact.getter(v20);

  if ((v21 & 1) != 0)
    return sub_100592C4C(a1);
  else
    return sub_100593BE4();
}

void sub_100106FC4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = ItemLayoutContext.index.getter(v2);
  ItemLayoutContext.parentShelfLayoutContext.getter(v6);
  v7 = sub_100106C60((uint64_t)v4);
  sub_10010F860((uint64_t)v7);
  v9 = v8;
  swift_bridgeObjectRelease(v7);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    if (((v5 % v10) & 0x8000000000000000) == 0)
    {
      v11 = swift_release(v9);
      (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v11);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001070A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for TodayPageSectionGridTracker()
{
  return objc_opt_self(_TtC22SubscribePageExtension27TodayPageSectionGridTracker);
}

uint64_t getEnumTagSinglePayload for TodayPageSectionGridTracker.TrackedSectionKey(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TodayPageSectionGridTracker.TrackedSectionKey(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TodayPageSectionGridTracker.TrackedSectionKey()
{
  return &type metadata for TodayPageSectionGridTracker.TrackedSectionKey;
}

unint64_t sub_100107144()
{
  unint64_t result;

  result = qword_1007FB958;
  if (!qword_1007FB958)
  {
    result = swift_getWitnessTable("='\v", &type metadata for TodayPageSectionGridTracker.TrackedSectionKey);
    atomic_store(result, (unint64_t *)&qword_1007FB958);
  }
  return result;
}

void sub_100107188(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int64_t v40;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB9B0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = a2;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v37 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v38 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v19 >= v40)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v40)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v40)
            {
LABEL_34:
              if ((v39 & 1) != 0)
              {
                if (v38 >= 64)
                  bzero((void *)(v5 + 64), 8 * v40);
                else
                  *v10 = v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v9 >= v40)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(v5 + 56) + 40 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v24 = *(_BYTE *)(v22 + 32);
      v26 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 24);
      v28 = *(_QWORD *)v22;
      v27 = *(_QWORD *)(v22 + 8);
      v29 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v23);
      v30 = -1 << *(_BYTE *)(v8 + 32);
      v31 = v29 & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v14 + 8 * v32);
        }
        while (v36 == -1);
        v15 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v23;
      v16 = *(_QWORD *)(v8 + 56) + 40 * v15;
      *(_QWORD *)v16 = v28;
      *(_QWORD *)(v16 + 8) = v27;
      *(_QWORD *)(v16 + 16) = v26;
      *(_QWORD *)(v16 + 24) = v25;
      *(_BYTE *)(v16 + 32) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100107458(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB978);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release(v5);
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_10003B8E8(v22, v41);
    }
    else
    {
      sub_100010E9C((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease(v27);
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_10003B8E8(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_100107790(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = type metadata accessor for AdamId(0);
  v46 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2;
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB970);
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release(v8);
    v39 = v42;
LABEL_44:
    *v39 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  HIDWORD(v41) = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v45 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_26;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v43)
    {
      swift_release(v8);
      v39 = v42;
      v23 = v44;
      if ((v41 & 0x100000000) != 0)
      {
LABEL_39:
        v40 = 1 << *(_BYTE *)(v8 + 32);
        if (v40 >= 64)
          bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v40;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_43:
      swift_release(v8);
      goto LABEL_44;
    }
    v23 = v44;
    v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v24 = v44[v17];
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v46 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v46 + v45))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v5, v16);
    v27 = v8;
    v28 = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v21);
    v29 = *(_QWORD *)(v10 + 40);
    v30 = sub_10000E99C(&qword_1007F9268, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v5, v30);
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v5);
    *(_BYTE *)(*(_QWORD *)(v10 + 56) + v19) = v28;
    ++*(_QWORD *)(v10 + 16);
    v8 = v27;
  }
  v25 = v22 + 2;
  if (v25 >= v43)
  {
LABEL_36:
    swift_release(v8);
    v39 = v42;
    if ((v41 & 0x100000000) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v44[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v43)
      goto LABEL_36;
    v24 = v44[v17];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_100107B2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[9];

  v3 = v2;
  v47 = type metadata accessor for AdamId(0);
  v6 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10000DF3C(&qword_1007FBA00);
  v45 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v42 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v22 >= v43)
      goto LABEL_36;
    v23 = v44[v22];
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v23 = v44[v17];
      if (!v23)
        break;
    }
LABEL_23:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = v8;
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v25 + v30 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v46, v31, v47, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v46, v31, v47, v16);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v48, *(_QWORD *)(v10 + 40));
    String.hash(into:)(v48, v29, v28);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v29;
    v19[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v46, v47);
    ++*(_QWORD *)(v10 + 16);
    v8 = v26;
  }
  v24 = v22 + 2;
  if (v24 < v43)
  {
    v23 = v44[v24];
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v17 >= v43)
          goto LABEL_36;
        v23 = v44[v17];
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v17 = v24;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v8);
  v3 = v42;
  if ((v45 & 1) != 0)
  {
    v40 = 1 << *(_BYTE *)(v8 + 32);
    if (v40 >= 64)
      bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v44 = -1 << v40;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release(v8);
  *v3 = v10;
}

void sub_100107E94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA08);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v31[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100108198(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA48);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v36 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v20 >= v14)
          goto LABEL_34;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_34;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_34:
              if ((v37 & 1) == 0)
              {
                swift_release(v5);
                v3 = v36;
                goto LABEL_41;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v9 = v22;
          }
        }
LABEL_24:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
      v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
      v26 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v24);
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v24;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_100108440(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  v9 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA40);
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
    v42 = v46;
LABEL_44:
    *v42 = v11;
    return;
  }
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v48 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v47 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  v17 = swift_retain(v9);
  v18 = 0;
  v45 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v49 = v19;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_26;
    }
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v24 >= v47)
    {
      swift_release(v9);
      v42 = v46;
      v25 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        v43 = 1 << *(_BYTE *)(v9 + 32);
        if (v43 >= 64)
          bzero(v25, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v25 = -1 << v43;
        *(_QWORD *)(v9 + 16) = 0;
      }
LABEL_43:
      swift_release(v9);
      goto LABEL_44;
    }
    v25 = v48;
    v26 = v48[v24];
    ++v18;
    if (!v26)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v47)
        goto LABEL_36;
      v26 = v48[v18];
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + v49))(v8, *(_QWORD *)(v9 + 48) + v28 * v23, v5, v17);
    v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v11 + 40);
    v33 = sub_10000E99C((unint64_t *)&unk_10081C740, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v5, v33);
    v35 = -1 << *(_BYTE *)(v11 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v28 * v20, v8, v5);
    v21 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v20);
    *v21 = v31;
    v21[1] = v30;
    ++*(_QWORD *)(v11 + 16);
  }
  v27 = v24 + 2;
  if (v27 >= v47)
  {
LABEL_36:
    swift_release(v9);
    v42 = v46;
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v26 = v48[v27];
  if (v26)
  {
    v18 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v18 >= v47)
      goto LABEL_36;
    v26 = v48[v18];
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1001087D8(uint64_t a1, uint64_t a2)
{
  sub_100109358(a1, a2, &qword_1007FBA20);
}

void sub_1001087E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::UInt64 v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  Swift::UInt64 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39;
  uint64_t v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB968);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = v3;
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v9 << 6);
      }
      else
      {
        v24 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v24 >= v36)
          goto LABEL_39;
        v25 = v37[v24];
        ++v9;
        if (!v25)
        {
          v9 = v24 + 1;
          if (v24 + 1 >= v36)
            goto LABEL_39;
          v25 = v37[v9];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v36)
            {
LABEL_39:
              if ((v38 & 1) == 0)
              {
                swift_release(v5);
                v3 = v35;
                goto LABEL_46;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v25 = v37[v26];
            if (!v25)
            {
              while (1)
              {
                v9 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_48;
                if (v9 >= v36)
                  goto LABEL_39;
                v25 = v37[v9];
                ++v26;
                if (v25)
                  goto LABEL_36;
              }
            }
            v9 = v26;
          }
        }
LABEL_36:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v9 << 6);
      }
      v31 = *(_QWORD *)(v5 + 48) + 24 * v23;
      v39 = *(_OWORD *)v31;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v23);
      if ((v38 & 1) == 0)
        swift_bridgeObjectRetain(v33);
      Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v39);
      Hasher._combine(_:)(*((Swift::UInt *)&v39 + 1));
      if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v14 = v32;
      else
        v14 = 0;
      Hasher._combine(_:)(v14);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        v20 = v39;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v16) >> 6;
        v20 = v39;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v29 = v18 == v28;
          if (v18 == v28)
            v18 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v21 = *(_QWORD *)(v8 + 48) + 24 * v19;
      *(_OWORD *)v21 = v20;
      *(_QWORD *)(v21 + 16) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_46:
  *v3 = v8;
}

void sub_100108B00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA38);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v35 = 1 << *(_BYTE *)(v5 + 32);
    v36 = v3;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v23 >= v37)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v37)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v36;
                goto LABEL_43;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v37);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v9 >= v37)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
        v33 = v32;
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v31);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_100108DB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB980);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001090B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA30);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v33 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v11;
    v32 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v19 >= v14)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                swift_release(v5);
                v3 = v33;
                goto LABEL_41;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v35 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v18);
      v23 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v22);
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v22;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v16) = v35;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_100109358(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10000DF3C(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v35 = -1 << v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v36 = 1 << *(_BYTE *)(v6 + 32);
    v37 = v4;
    v38 = (unint64_t)(v12 + 63) >> 6;
    v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v23 = v22 | (v10 << 6);
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v24 >= v38)
          goto LABEL_36;
        v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          v10 = v24 + 1;
          if (v24 + 1 >= v38)
            goto LABEL_36;
          v25 = v11[v10];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v6);
                v4 = v37;
                goto LABEL_43;
              }
              if (v36 >= 64)
                bzero((void *)(v6 + 64), 8 * v38);
              else
                *v11 = v35;
              v4 = v37;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                v10 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_45;
                if (v10 >= v38)
                  goto LABEL_36;
                v25 = v11[v10];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v10 = v26;
          }
        }
LABEL_33:
        v14 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
      v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
      if ((a2 & 1) == 0)
        v34 = v33;
      v16 = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v32);
      v17 = -1 << *(_BYTE *)(v9 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v32;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v33;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release(v6);
LABEL_43:
  *v4 = v9;
}

void sub_100109604(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v3 = v2;
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10000DF3C(&qword_1007FB998);
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v38 = v3;
    v13 = 0;
    v14 = *(_QWORD *)(v10 + 64);
    v41 = (_QWORD *)(v10 + 64);
    v15 = 1 << *(_BYTE *)(v10 + 32);
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v17 = v16 & v14;
    v40 = (unint64_t)(v15 + 63) >> 6;
    v18 = v11 + 64;
    v39 = a2;
    v19 = 16;
    if ((a2 & 1) != 0)
      v19 = 32;
    v42 = v19;
    while (1)
    {
      if (v17)
      {
        v21 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v40)
          goto LABEL_35;
        v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v40)
            goto LABEL_35;
          v24 = v41[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_35:
              if ((v39 & 1) == 0)
              {
                swift_release(v10);
                v3 = v38;
                goto LABEL_42;
              }
              v36 = 1 << *(_BYTE *)(v10 + 32);
              if (v36 >= 64)
                bzero(v41, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v36;
              v3 = v38;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v13 >= v40)
                  goto LABEL_35;
                v24 = v41[v13];
                ++v25;
                if (v24)
                  goto LABEL_25;
              }
            }
            v13 = v25;
          }
        }
LABEL_25:
        v17 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v22);
      v27 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + v42))(v9, *(_QWORD *)(v10 + 56) + v27 * v22, v6);
      v28 = static Hasher._hash(seed:_:)(*(_QWORD *)(v12 + 40), v26);
      v29 = -1 << *(_BYTE *)(v12 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v18 + 8 * v31);
        }
        while (v35 == -1);
        v20 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v20) = v26;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 56) + v27 * v20, v9, v6);
      ++*(_QWORD *)(v12 + 16);
    }
  }
  swift_release(v10);
LABEL_42:
  *v3 = v12;
}

void sub_100109934(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA18);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_25;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v20 >= v38)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v39 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v38)
        goto LABEL_37;
      v22 = *(_QWORD *)(v39 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v38)
        {
LABEL_37:
          swift_release(v5);
          v3 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v39 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_46;
            if (v13 >= v38)
              goto LABEL_37;
            v22 = *(_QWORD *)(v39 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_24;
          }
        }
        v13 = v23;
      }
    }
LABEL_24:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_25:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v42 = *(_QWORD *)(v24 + 32);
      v40 = v25;
      v41 = v26;
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_10006BFD4(v24, (uint64_t)&v40);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      swift_retain(v27);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
    v16 = v40;
    v17 = v41;
    *(_QWORD *)(v15 + 32) = v42;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v27;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v21, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_100109C44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v3 = v2;
  v6 = type metadata accessor for BadgeType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB988);
  v46 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v44 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v42 = v2;
  v43 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain(v10);
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_36;
      v25 = v44[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_36:
          swift_release(v10);
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v43)
              goto LABEL_36;
            v25 = v44[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_retain(v29);
    }
    v30 = *(_QWORD *)(v12 + 40);
    v31 = sub_10000E99C(&qword_1007FB990, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v6, v31);
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v42;
  v24 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v10 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

void sub_100109FD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10000DF3C(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v35 = -1 << v12;
    v36 = v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v37 = (unint64_t)(v12 + 63) >> 6;
    v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v23 = v22 | (v10 << 6);
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v24 >= v37)
          goto LABEL_36;
        v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          v10 = v24 + 1;
          if (v24 + 1 >= v37)
            goto LABEL_36;
          v25 = v11[v10];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v37)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v36 >= 64)
                  bzero((void *)(v6 + 64), 8 * v37);
                else
                  *v11 = v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                v10 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_44;
                if (v10 >= v37)
                  goto LABEL_36;
                v25 = v11[v10];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v10 = v26;
          }
        }
LABEL_33:
        v14 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(v6 + 56);
      v33 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
      v34 = *(_QWORD *)(v32 + v31);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v32 + v31));
      v16 = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v33);
      v17 = -1 << *(_BYTE *)(v9 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release(v6);
  *v4 = v9;
}

void sub_10010A288(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB9B8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_10003B8E8(v24, v38);
      }
      else
      {
        sub_100010E9C((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_10003B8E8(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_10010A584(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB9C0);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10010A898(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t, __n128);
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;

  v53 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB9D0);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v7, a1, a2);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
    v42 = v46;
LABEL_44:
    *v42 = v9;
    return;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v48 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v47 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  v15 = swift_retain(v7);
  v16 = 0;
  v45 = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v49 = v7;
  v50 = v17;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v21 = v20 | (v16 << 6);
      goto LABEL_26;
    }
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v47)
    {
      swift_release(v7);
      v42 = v46;
      v23 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        v43 = 1 << *(_BYTE *)(v7 + 32);
        if (v43 >= 64)
          bzero(v23, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v43;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_43:
      swift_release(v7);
      goto LABEL_44;
    }
    v23 = v48;
    v24 = v48[v22];
    ++v16;
    if (!v24)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v47)
        goto LABEL_36;
      v24 = v48[v16];
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v5 + 72);
    v27 = v5;
    v28 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + v50);
    v29 = v53;
    v28(v52, *(_QWORD *)(v7 + 48) + v26 * v21, v53, v15);
    v30 = (char *)(*(_QWORD *)(v7 + 56) + 2 * v21);
    v51 = v30[1];
    v31 = *v30;
    v32 = *(_QWORD *)(v9 + 40);
    v33 = sub_10000E99C((unint64_t *)&unk_10081C740, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v29, v33);
    v35 = -1 << *(_BYTE *)(v9 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      v5 = v27;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      v5 = v27;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v14 + 8 * v37);
      }
      while (v41 == -1);
      v18 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 48) + v26 * v18, v52, v53);
    v19 = (_BYTE *)(*(_QWORD *)(v9 + 56) + 2 * v18);
    *v19 = v31;
    v19[1] = v51;
    ++*(_QWORD *)(v9 + 16);
    v7 = v49;
  }
  v25 = v22 + 2;
  if (v25 >= v47)
  {
LABEL_36:
    swift_release(v7);
    v42 = v46;
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v48[v25];
  if (v24)
  {
    v16 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v47)
      goto LABEL_36;
    v24 = v48[v16];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_10010AC48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FB9E0);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v38 = v3;
  v39 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v23 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v24 = v23 | (v13 << 6);
      goto LABEL_34;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v25 >= v39)
      break;
    v26 = (_QWORD *)(v5 + 64);
    v27 = *(_QWORD *)(v40 + 8 * v25);
    ++v13;
    if (!v27)
    {
      v13 = v25 + 1;
      if (v25 + 1 >= v39)
        goto LABEL_36;
      v27 = *(_QWORD *)(v40 + 8 * v13);
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_36:
          swift_release(v5);
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v27 = *(_QWORD *)(v40 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v13 >= v39)
              goto LABEL_36;
            v27 = *(_QWORD *)(v40 + 8 * v13);
            ++v28;
            if (v27)
              goto LABEL_33;
          }
        }
        v13 = v28;
      }
    }
LABEL_33:
    v11 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_34:
    v33 = 8 * v24;
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v33);
    v35 = *(void **)(*(_QWORD *)(v5 + 56) + v33);
    if ((v41 & 1) == 0)
    {
      swift_retain(v34);
      v36 = v35;
    }
    v14 = *(_QWORD *)(v8 + 40);
    v15 = type metadata accessor for Artwork(0);
    v16 = sub_10000E99C((unint64_t *)&qword_1007FB9E8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v15, v16);
    v18 = -1 << *(_BYTE *)(v8 + 32);
    v19 = v17 & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v31 = v20 == v30;
        if (v20 == v30)
          v20 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v20);
      }
      while (v32 == -1);
      v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }
    *(_QWORD *)(v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = 8 * v21;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v22) = v34;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v22) = v35;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v38;
  v26 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10010AF78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  _QWORD v42[9];

  v3 = v2;
  v6 = type metadata accessor for Accessory(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10000DF3C(&qword_1007FBA10);
  v41 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v37 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_36;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_36:
          swift_release(v9);
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v38)
              goto LABEL_36;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v41 & 1) != 0)
    {
      sub_10010FFBC(v26, (uint64_t)v8);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    else
    {
      sub_10010FF78(v26, (uint64_t)v8);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    Hasher.init(_seed:)(v42, *(_QWORD *)(v11 + 40));
    sub_100438E0C((uint64_t)v42);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_10010FFBC((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v37;
  v22 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_10010B2E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DF3C(&qword_1007FBA50);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

_OWORD *sub_10010B604(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_10036C10C(a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(v15[7] + 32 * v9);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
        return sub_10003B8E8(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_10010CDC8();
      goto LABEL_7;
    }
    sub_100107458(v12, a3 & 1);
    v18 = sub_10036C10C(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10010C810(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

void sub_10010B724(uint64_t a1, uint64_t a2, char a3)
{
  sub_10010C188(a1, a2, a3, &qword_1007FB9D8);
}

void sub_10010B730(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10036C324(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for AdamId(0);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10010D1AC();
      goto LABEL_7;
    }
    sub_100107B2C(v15, a4 & 1);
    v21 = sub_10036C324(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10010C874(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10010B86C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10036C324(a1, a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_10010D408();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (uint64_t *)(v18[6] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    *(double *)(v18[7] + 8 * v12) = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      swift_bridgeObjectRetain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_100107E94(v15, a3 & 1);
  v19 = sub_10036C324(a1, a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = v19;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10010B9C0(uint64_t a1, uint64_t a2, char a3)
{
  sub_10010BD7C(a1, a2, a3, &qword_1007FBA20);
}

void sub_10010B9CC(uint64_t a1, Swift::UInt a2, Swift::UInt a3, char a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_10036C494(a2, a3, a5);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v21 + 8 * v14));
        *(_QWORD *)(v21 + 8 * v14) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_10010D980();
      goto LABEL_7;
    }
    sub_1001087E4(v17, a4 & 1);
    v22 = sub_10036C494(a2, a3, a5);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10010C94C(v14, a2, a3, a1, v20, a5);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TodayPageSectionGridTracker.TrackedSectionKey);
  __break(1u);
}

void sub_10010BB08(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10036C110(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10010DB44();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_100108B00(v13, a3 & 1);
  v18 = sub_10036C110(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_10010BC40(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  double *v19;
  unint64_t v20;
  char v21;
  double *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10036C110(a1);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a2 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_10010DE8C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (double *)(v18[7] + 16 * v12);
      *v19 = a3;
      v19[1] = a4;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a1;
    v22 = (double *)(v18[7] + 16 * v12);
    *v22 = a3;
    v22[1] = a4;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1001090B8(v15, a2 & 1);
  v20 = sub_10036C110(a1);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_10010BD70(uint64_t a1, uint64_t a2, char a3)
{
  sub_10010BD7C(a1, a2, a3, &qword_1007FBA28);
}

void sub_10010BD7C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v4;
  v10 = *v4;
  v12 = sub_10036C110(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_10010E028(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = 8 * v12;
    *(_QWORD *)(v18[6] + v22) = a2;
    *(_QWORD *)(v18[7] + v22) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_100109358(v15, a3 & 1, a4);
  v20 = sub_10036C110(a2);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_10010BEC0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10036C148(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10010E3E0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      v18 = 8 * v10;
      swift_release(*(_QWORD *)(v17 + v18));
      *(_QWORD *)(v17 + v18) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100109934(v13, a3 & 1);
  v19 = sub_10036C148(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return;
  }
  v10 = v19;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10006BFD4(a2, (uint64_t)v27);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v21 = v16[6] + 40 * v10;
  v22 = v28;
  v23 = v27[1];
  *(_OWORD *)v21 = v27[0];
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v24 = v16[2];
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v26;
}

void sub_10010C020(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for BadgeType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10036C61C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      swift_release(*(_QWORD *)(v21 + 8 * v14));
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10010E5B8();
    goto LABEL_7;
  }
  sub_100109C44(v17, a3 & 1);
  v22 = sub_10036C61C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_10010C99C(v14, (uint64_t)v11, a1, v20);
}

void sub_10010C17C(uint64_t a1, uint64_t a2, char a3)
{
  sub_10010C188(a1, a2, a3, &qword_1007FB9F8);
}

void sub_10010C188(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v4;
  v10 = *v4;
  v12 = sub_10036C110(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_10010E7E8(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_release(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = 8 * v12;
    *(_QWORD *)(v18[6] + v22) = a2;
    *(_QWORD *)(v18[7] + v22) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_100109FD8(v15, a3 & 1, a4);
  v20 = sub_10036C110(a2);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

_OWORD *sub_10010C2CC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10036C324(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
        return sub_10003B8E8(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10010EB30();
      goto LABEL_7;
    }
    sub_10010A288(v15, a4 & 1);
    v21 = sub_10036C324(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10010CA34(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10010C3FC(__int16 a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10036C524(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_BYTE *)(v20[7] + 2 * v14);
      *v21 = a1 & 1;
      v21[1] = HIBYTE(a1) & 1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10010EEC8();
    goto LABEL_7;
  }
  sub_10010A898(v17, a3 & 1);
  v22 = sub_10036C524(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_10010CAE4(v14, (uint64_t)v11, a1 & 0x101, v20);
}

void sub_10010C560(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10036C6B4(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10010F2E8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      swift_retain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_10010AC48(v13, a3 & 1);
  v18 = sub_10036C6B4(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = type metadata accessor for Artwork(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

void sub_10010C6B0(uint64_t a1, uint64_t a2, char a3)
{
  sub_10010BD7C(a1, a2, a3, &qword_1007FB9C8);
}

void sub_10010C6BC(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for AdamId(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10036C3FC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v20[7] + v14) = a1 & 1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10010CF8C();
    goto LABEL_7;
  }
  sub_100107790(v17, a3 & 1);
  v21 = sub_10036C3FC(a2);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v21;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_10010CB8C(v14, (uint64_t)v11, a1 & 1, v20);
}

_OWORD *sub_10010C810(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_10003B8E8(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_10010C874(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for AdamId(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_10010C904(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

unint64_t sub_10010C94C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a5[(result >> 6) + 8] |= 1 << result;
  v6 = a5[6] + 24 * result;
  *(_QWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(double *)(v6 + 16) = a6;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v7 = a5[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a5[2] = v9;
  return result;
}

uint64_t sub_10010C99C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for BadgeType(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_10010CA34(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_10003B8E8(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_10010CA9C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_10010CAE4(unint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IndexPath(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_BYTE *)(a4[7] + 2 * a1);
  *v11 = a3 & 1;
  v11[1] = HIBYTE(a3) & 1;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_10010CB8C(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for AdamId(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void sub_10010CC24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;

  v1 = v0;
  sub_10000DF3C(&qword_1007FB9B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v27 = __clz(__rbit64(v25));
    v12 = (v25 - 1) & v25;
    v15 = v27 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)(v19 + 32);
    v21 = *(_OWORD *)v19;
    v22 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v23 = v21;
    *(_OWORD *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 32) = v20;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010CDC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  sub_10000DF3C(&qword_1007FB978);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100010E9C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10003B8E8(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010CF8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FB970);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v23 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010D1AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for AdamId(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FBA00);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release(v4);
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain(v20);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release(v4);
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10010D408()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10000DF3C(&qword_1007FBA08);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010D5B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_10000DF3C(&qword_1007FBA48);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010D740()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FBA40);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v1 = v8;
    return;
  }
  v26 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10010D974()
{
  sub_10010E028(&qword_1007FBA20);
}

void sub_10010D980()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10000DF3C(&qword_1007FB968);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v21 = *(_OWORD *)v17;
    *(_QWORD *)(v21 + 16) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010DB38()
{
  sub_10010E028(&qword_1007FB9C8);
}

void sub_10010DB44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_10000DF3C(&qword_1007FBA38);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010DCE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10000DF3C(&qword_1007FB980);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010DE8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  sub_10000DF3C(&qword_1007FBA30);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010E01C()
{
  sub_10010E028(&qword_1007FBA28);
}

void sub_10010E028(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  sub_10000DF3C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010E1C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for ImpressionMetrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FB998);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010E3E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  sub_10000DF3C(&qword_1007FBA18);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_10006BFD4(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_retain(v16);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010E5B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for BadgeType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FB988);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_retain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010E7E8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10000DF3C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010E980()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10000DF3C(&qword_1007FB9F0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010EB30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_10000DF3C(&qword_1007FB9B8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_100010E9C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_10003B8E8(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10010ED14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10000DF3C(&qword_1007FB9C0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010EEC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  _BYTE *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = type metadata accessor for IndexPath(0);
  v1 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FB9D0);
  v31 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    v29 = v31;
LABEL_28:
    *v29 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v7)
    memmove(v6, (const void *)(v3 + 64), 8 * v7);
  v9 = 0;
  v10 = *(_QWORD *)(v3 + 16);
  v36 = v5;
  v37 = v3;
  *(_QWORD *)(v5 + 16) = v10;
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v32 = v3 + 64;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v34;
  v14 = v35;
  v16 = v5;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v9 + 1;
    v19 = v37;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *(_QWORD *)(v32 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 2 * v18;
    v22 = (char *)(*(_QWORD *)(v19 + 56) + v21);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_BYTE *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    swift_release(v37);
    v29 = v31;
    v5 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10010F128()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_10000DF3C(&qword_1007FB9A8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100010E9C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10003B8E8(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010F2E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10000DF3C(&qword_1007FB9E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    swift_retain(v17);
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010F48C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for Accessory(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_1007FBA10);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v9 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v27 + 72) * v18;
    sub_10010FF78(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + v20);
    sub_10010FFBC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    v22 = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v9 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10010F6A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_10000DF3C(&qword_1007FBA50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10010F860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  char *v20;
  size_t v21;
  char *v22;
  size_t v23;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;

  v2 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  v7 = (char *)&_swiftEmptyArrayStorage[4];
LABEL_3:
  v9 = *(_QWORD *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_29:
      __break(1u);
    }
    else
    {
      while (1)
      {
        v10 = v3;
        v3 = *(_QWORD *)(v2 + 8 * v5);
        swift_bridgeObjectRetain(v3);
        swift_bridgeObjectRelease(v10);
        if (v3)
        {
          v8 = *(_QWORD *)(v3 + 16);
          if (v8)
            break;
        }
        ++v5;
        v11 = *(_QWORD *)(a1 + 16);
        if (v5 == v11)
          goto LABEL_25;
        if (v5 >= v11)
          goto LABEL_29;
      }
      v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        v13 = *(_BYTE *)(v3 + v12 + 32);
        if (!v4)
        {
          v14 = *((_QWORD *)v6 + 3);
          if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v28 = *(_BYTE *)(v3 + v12 + 32);
          v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
          if (v15 <= 1)
            v16 = 1;
          else
            v16 = v15;
          v17 = sub_10000DF3C(&qword_1007FB960);
          v18 = (char *)swift_allocObject(v17, v16 + 32, 7);
          v19 = 2 * j__malloc_size(v18) - 64;
          *((_QWORD *)v18 + 2) = v16;
          *((_QWORD *)v18 + 3) = v19;
          v20 = v18 + 32;
          v21 = *((_QWORD *)v6 + 3) >> 1;
          if (*((_QWORD *)v6 + 2))
          {
            v22 = v6 + 32;
            if (v18 != v6 || v20 >= &v22[v21])
            {
              v23 = v19;
              memmove(v18 + 32, v22, v21);
              v19 = v23;
            }
            *((_QWORD *)v6 + 2) = 0;
          }
          v7 = &v20[v21];
          v4 = (v19 >> 1) - v21;
          swift_release(v6);
          v6 = v18;
          v13 = v28;
        }
        v24 = __OFSUB__(v4--, 1);
        if (v24)
          goto LABEL_31;
        ++v12;
        *v7++ = v13;
        v8 = *(_QWORD *)(v3 + 16);
        if (v12 == v8)
          goto LABEL_3;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_25:
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v3);
  v25 = *((_QWORD *)v6 + 3);
  if (v25 >= 2)
  {
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v4);
    v27 = v26 - v4;
    if (v24)
    {
LABEL_33:
      __break(1u);
      return;
    }
    *((_QWORD *)v6 + 2) = v27;
  }
}

void sub_10010FA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  _OWORD v26[2];
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v3 = _swiftEmptyArrayStorage;
  v24 = v2;
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      sub_100010E9C(v6, (uint64_t)v25);
      *(_QWORD *)&v26[0] = v4;
      sub_10003B8E8(v25, (_OWORD *)((char *)v26 + 8));
      v28 = v26[0];
      v29 = v26[1];
      v30 = v27;
      if (!v5)
      {
        v8 = *((_QWORD *)v3 + 3);
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v9 = v1;
        v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        v12 = sub_10000DF3C(&qword_1007FBA58);
        v13 = (double *)swift_allocObject(v12, 40 * v11 + 32, 7);
        v14 = (uint64_t)(j__malloc_size(v13) - 32) / 40;
        *((_QWORD *)v13 + 2) = v11;
        *((_QWORD *)v13 + 3) = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = *((_QWORD *)v3 + 3) >> 1;
        if (*((_QWORD *)v3 + 2))
        {
          if (v13 != v3 || v15 >= (unint64_t)&v3[5 * v16 + 4])
            memmove(v13 + 4, v3 + 4, 40 * v16);
          v3[2] = 0.0;
        }
        v7 = (double *)(v15 + 40 * v16);
        v5 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        swift_release(v3);
        v3 = v13;
        v1 = v9;
      }
      v18 = __OFSUB__(v5--, 1);
      if (v18)
        break;
      ++v4;
      v19 = v28;
      v20 = v29;
      *((_QWORD *)v7 + 4) = v30;
      *(_OWORD *)v7 = v19;
      *((_OWORD *)v7 + 1) = v20;
      v7 += 5;
      v6 += 32;
      if (v1 == v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = 0;
LABEL_21:
  swift_bridgeObjectRelease(v24);
  v21 = *((_QWORD *)v3 + 3);
  if (v21 >= 2)
  {
    v22 = v21 >> 1;
    v18 = __OFSUB__(v22, v5);
    v23 = v22 - v5;
    if (v18)
    {
LABEL_27:
      __break(1u);
      return;
    }
    *((_QWORD *)v3 + 2) = v23;
  }
}

uint64_t sub_10010FC2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t KeyPath;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double (*v23)(char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  int v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  double v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v2 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v2);
  v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - v5;
  v7 = type metadata accessor for PageGrid(0);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v40 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v37 - v15;
  v41 = ShelfLayoutContext.index.getter(v14);
  ShelfLayoutContext.shelf.getter(v17);
  KeyPath = swift_getKeyPath(&unk_100676640);
  ReadOnlyLens.subscript.getter(KeyPath, v10);
  v19 = swift_release(KeyPath);
  v38 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v38(v16, v10, v19);
  v39 = *(_QWORD *)(v44 + 16);
  swift_bridgeObjectRelease(v44);
  v21 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v22 = PageGrid.containerWidth.getter(v21);
  v23 = *(double (**)(char *, uint64_t))(v42 + 8);
  v42 = v7;
  v24.n128_f64[0] = v23(v9, v7);
  v25 = (uint64_t)v43;
  ShelfLayoutContext.surroundingShelves.getter(v6, v43, v24);
  sub_10010FF38(v25);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10);
  if (v26 == 1)
  {
    result = sub_10010FF38((uint64_t)v6);
    v28 = 0;
    v29 = 0;
    v30 = 0.0;
LABEL_5:
    v36 = v39;
    *(_QWORD *)a1 = v41;
    *(_QWORD *)(a1 + 8) = v36;
    *(double *)(a1 + 16) = v22;
    *(_QWORD *)(a1 + 24) = v28;
    *(_QWORD *)(a1 + 32) = v29;
    *(double *)(a1 + 40) = v30;
    *(_BYTE *)(a1 + 48) = v26 == 1;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v40, v6, v10);
  result = ShelfLayoutContext.index.getter(v31);
  v28 = result - 1;
  if (!__OFSUB__(result, 1))
  {
    v32 = swift_getKeyPath(&unk_100676640);
    v33 = v40;
    ReadOnlyLens.subscript.getter(v32, v10);
    swift_release(v32);
    v29 = *(_QWORD *)(v44 + 16);
    swift_bridgeObjectRelease(v44);
    v35 = ShelfLayoutContext.contentPageGrid.getter(v34);
    v30 = PageGrid.containerWidth.getter(v35);
    v23(v9, v42);
    result = ((uint64_t (*)(char *, uint64_t))v38)(v33, v10);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10010FF10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.items.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10010FF38(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F4A68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10010FF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Accessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010FFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Accessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100110000(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  double result;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __objc2_meth_list **p_base_meths;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  char **v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  id v55;
  uint64_t v56;
  _BOOL8 v57;
  id v58;
  char *v59;
  _QWORD v60[3];
  uint64_t v61;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007FBA60);
  __chkstk_darwin(v4);
  v59 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - v7;
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Lockup(0);
  v25 = sub_1001106F4();
  ItemLayoutContext.typedModel<A>(as:)(v60, v24, v24, v25);
  v27 = v60[0];
  if (v60[0])
  {
    v58 = v2;
    v28 = *(char **)&v2[OBJC_IVAR____TtC22SubscribePageExtension29SmallLockupCollectionViewCell_lockupView];
    v29 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 1, 1, v29);
    v30 = type metadata accessor for ObjectGraph(0);
    v31 = swift_dynamicCastClassUnconditional(a2, v30, 0, 0, 0);
    v32 = type metadata accessor for OfferStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v20, 1, 1, v32);
    v33 = type metadata accessor for OfferEnvironment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
    v34 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v14, 1, 1, v34);
    v35 = type metadata accessor for OfferTint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v11, 1, 1, v35);
    sub_10054F220(v27, v28, (uint64_t)v23, v31, 0, 0, (uint64_t)v20, (uint64_t)v17, (uint64_t)v11, (uint64_t)v14);
    sub_100011088((uint64_t)v11, (uint64_t *)&unk_1007F76F0);
    v28[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    sub_100192BDC();
    p_base_meths = &TodayCardChinLockupListView.base_meths;
    objc_msgSend(v28, "setNeedsLayout");
    sub_100011088((uint64_t)v14, (uint64_t *)&unk_1007F7C10);
    sub_100011088((uint64_t)v17, (uint64_t *)&unk_1007F7C20);
    sub_100011088((uint64_t)v20, (uint64_t *)&unk_1007F7700);
    sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F7710);
    v37 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel;
    v38 = *(id *)&v28[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel];
    v39 = Lockup.subtitleTextColor.getter();
    if (!v39)
    {
      v40 = sub_1000117FC();
      v39 = static UIColor.secondaryText.getter(v40);
    }
    v41 = (void *)v39;
    objc_msgSend(v38, "setTextColor:", v39);

    v42 = &selRef_activityViewController_itemForActivityType_;
    v43 = objc_msgSend(*(id *)&v28[v37], "layer");
    Lockup.subtitleTextFilter.getter();
    v44 = type metadata accessor for TitleEffectFilterType(0);
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v46((uint64_t)v8, 1, v44) == 1)
    {
      sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007FBA60);
    }
    else
    {
      TitleEffectFilterType.compositingFilter.getter(v60);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v44);
      v47 = v61;
      if (v61)
      {
        v48 = sub_100011064(v60, v61);
        v49 = *(_QWORD *)(v47 - 8);
        v50 = __chkstk_darwin(v48);
        v52 = (char *)&v58 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v49 + 16))(v52, v50);
        v53 = _bridgeAnythingToObjectiveC<A>(_:)(v52, v47);
        v54 = *(void (**)(char *, uint64_t))(v49 + 8);
        v42 = &selRef_activityViewController_itemForActivityType_;
        v54(v52, v47);
        p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v60);
LABEL_9:
        objc_msgSend(v43, "setCompositingFilter:", v53);

        v55 = objc_msgSend(v28, v42[340], swift_unknownObjectRelease(v53).n128_f64[0]);
        v56 = (uint64_t)v59;
        Lockup.subtitleTextFilter.getter();
        v57 = v46(v56, 1, v44) == 1;
        sub_100011088(v56, (uint64_t *)&unk_1007FBA60);
        objc_msgSend(v55, "setAllowsGroupBlending:", v57);

        objc_msgSend(v58, (SEL)p_base_meths[408]);
        *(_QWORD *)&result = swift_release(v27).n128_u64[0];
        return result;
      }
    }
    v53 = 0;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100110584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension29SmallLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

uint64_t sub_1001105D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension29SmallLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_100110634(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension29SmallLockupCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_10011067C(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  Swift::Bool v4;
  objc_super v5;
  UIImage_optional v6;

  v5.receiver = v2;
  v5.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v3 = objc_retain(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29SmallLockupCollectionViewCell_lockupView]
                         + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
  v6.value.super.isa = 0;
  v6.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v6, v4);

}

unint64_t sub_1001106F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FBDA0;
  if (!qword_1007FBDA0)
  {
    v1 = type metadata accessor for Lockup(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Lockup, v1);
    atomic_store(result, (unint64_t *)&qword_1007FBDA0);
  }
  return result;
}

uint64_t sub_10011073C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100856150);
  qword_100851AD8 = v0;
  unk_100851AE0 = &protocol witness table for StaticDimension;
  v2 = sub_1000117C0(qword_100851AC0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

char *sub_1001107C0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  double left;
  double bottom;
  double right;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  objc_super v27;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v14 = &v11[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventViewTappedAction];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for AppEventSearchResultCollectionViewCell();
  v15 = objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v19 = (char *)v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_lockupView]);

  v21 = objc_msgSend(v19, "contentView");
  v22 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView]);

  v23 = *(void **)&v19[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer];
  objc_msgSend(v23, "addTarget:action:", v19, "handleTapWithGestureRecognizer:");
  objc_msgSend(v23, "setDelegate:", v19);
  v24 = *(id *)&v19[v22];
  v25 = v23;
  objc_msgSend(v24, "addGestureRecognizer:", v25);

  return v19;
}

id sub_100110A2C()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer], "removeTarget:action:", v0, 0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppEventSearchResultCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100110B3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  objc_class *v5;
  id v6;
  unint64_t v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  double MaxY;
  double Width;
  double v23;
  char *v24;
  double v25;
  void *v26;
  objc_super v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v1 = v0;
  v2 = type metadata accessor for AppEventCardLayout(0);
  __chkstk_darwin(v2);
  v4 = (id *)((char *)&v28.receiver - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (objc_class *)type metadata accessor for AppEventSearchResultCollectionViewCell();
  v28.receiver = v0;
  v28.super_class = v5;
  objc_msgSendSuper2(&v28, "layoutSubviews");
  v6 = objc_msgSend(v0, "contentView");
  v7 = sub_10000EF74();
  v8 = LayoutMarginsAware<>.layoutFrame.getter(v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_lockupView];
  v16.n128_f64[0] = v12;
  sub_10015329C(v16, v14);
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  objc_msgSend(v15, "setFrame:");
  if (qword_1007F1280 != -1)
    swift_once(&qword_1007F1280, sub_10011073C);
  v17 = qword_100851AD8;
  v18 = unk_100851AE0;
  sub_100011064(qword_100851AC0, qword_100851AD8);
  v19 = objc_msgSend(v1, "traitCollection");
  v20 = AnyDimension.value(with:)(v19, v17, v18);

  v29.origin.x = v8;
  v29.origin.y = v10;
  v29.size.width = v12;
  v29.size.height = v14;
  CGRectGetMinX(v29);
  objc_msgSend(v15, "frame");
  MaxY = CGRectGetMaxY(v30);
  v31.origin.x = v8;
  v31.origin.y = v10;
  v31.size.width = v12;
  v31.size.height = v14;
  Width = CGRectGetWidth(v31);
  v32.origin.x = v8;
  v32.origin.y = v10;
  v32.size.width = v12;
  v32.size.height = v14;
  v23 = CGRectGetMaxY(v32);
  v24 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView];
  if (qword_1007F10B0 != -1)
    swift_once(&qword_1007F10B0, sub_1000B40CC);
  v25 = v23 - (v20 + MaxY);
  sub_1005B0F60(xmmword_100851230, v24, Width, v25);
  v26 = *(void **)&v24[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView];
  sub_10015BF20((uint64_t)v4);
  sub_1005B08AC(v26, v4, Width, v25);
  sub_10001FA98((uint64_t)v4);
  objc_msgSend(v1, "bounds");
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  return objc_msgSend(v24, "setFrame:");
}

uint64_t sub_100110F34(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView)
                 + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_mediaContentView);
  sub_10000EF74();
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

void (*sub_100110FE0(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
  return sub_10001AD28;
}

id sub_100111040()
{
  char *v0;
  id v1;
  uint64_t v2;
  Swift::Bool v3;
  char *v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for AppEventSearchResultCollectionViewCell();
  v1 = objc_msgSendSuper2(&v8, "prepareForReuse");
  sub_1001537D4((uint64_t)v1, v2, v3);
  v4 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView];
  sub_1000B87D4();
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView];
  sub_10015CC74();
  v6 = &v4[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_initialLongPressLocation];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v4, "addSubview:", v5);
}

uint64_t type metadata accessor for AppEventSearchResultCollectionViewCell()
{
  return objc_opt_self(_TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell);
}

uint64_t sub_100111184()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView)+ OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
}

void sub_1001111B4(void *a1)
{
  sub_10015D208((uint64_t)a1);

}

uint64_t (*sub_1001111FC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100110FE0(v2);
  return sub_10001B55C;
}

void sub_100111240()
{
  sub_1005AF28C();
}

id sub_100111268()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView)
                           + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView));
}

id sub_10011128C()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView));
}

double sub_1001112A0()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0+ OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView)+ OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_formattedDateView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppEventView(0);
  v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetHeight(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_100111328()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_formattedDateView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppEventView(0);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_1001113B4(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100676798, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_1001113E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100676798, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_100111434(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100676798, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001B55C;
}

uint64_t sub_10011149C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_1007FBAB8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_100676708);
}

uint64_t sub_1001114C8(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C((unint64_t *)&unk_1007FBAC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_100676738);
}

void sub_1001114F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventViewTappedAction];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AppEventSearchResultCollectionViewCell.swift", 67, 2, 45, 0);
  __break(1u);
}

uint64_t sub_1001115F0(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  BOOL v19;
  uint64_t v20;
  _BOOL8 v21;
  CGPoint v23;
  CGPoint v24;
  CGPoint v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v2 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventView];
  v3 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView]
                + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_lockupView);
  if (!v3)
    return 0;
  v5 = v3;
  objc_msgSend(a1, "locationInView:", v1);
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  objc_msgSend(a1, "locationInView:", v2);
  v12 = v11;
  v14 = v13;
  objc_msgSend(a1, "locationInView:", v5);
  v16 = v15;
  v18 = v17;
  objc_msgSend(v2, "bounds");
  v23.x = v12;
  v23.y = v14;
  if (CGRectContainsPoint(v26, v23)
    && (objc_msgSend(v5, "bounds"), v24.x = v16, v24.y = v18, !CGRectContainsPoint(v27, v24))
    && *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38AppEventSearchResultCollectionViewCell_appEventViewTappedAction])
  {
    objc_msgSend(v1, "bounds");
    v25.x = v7;
    v25.y = v9;
    v19 = CGRectContainsPoint(v28, v25);

    if (v19)
    {
      if (!v10)
        return 1;
      v20 = objc_opt_self(UIControl);
      v21 = swift_dynamicCastObjCClass(v10, v20) == 0;
    }
    else
    {
      v21 = 0;
    }
    v5 = v10;
  }
  else
  {

    v21 = 0;
  }

  return v21;
}

void sub_1001118FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD **v7;
  _QWORD *v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  id v14;
  _BYTE v15[24];

  v14 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (v14)
  {
    v3 = objc_opt_self(UITabBarController);
    v4 = (void *)swift_dynamicCastObjCClass(v14, v3);
    if (v4)
    {
      v5 = v4;
      sub_1005C2B68(1, v4, a1);
      v6 = swift_allocObject(&unk_100728F98, 24, 7);
      *(_QWORD *)(v6 + 16) = v5;
      v7 = (_QWORD **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks);
      swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks, v15, 33, 0);
      v8 = *v7;
      v9 = v14;
      swift_retain(v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
      *v7 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_1002015D8(0, v8[2] + 1, 1, v8);
        *v7 = v8;
      }
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
      {
        v8 = sub_1002015D8((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
        *v7 = v8;
      }
      v8[2] = v12 + 1;
      v13 = &v8[3 * v12];
      v13[4] = sub_1001123C4;
      v13[5] = v6;
      *((_BYTE *)v13 + 48) = 2;
      swift_endAccess(v15);

      swift_release(v6);
    }
    else
    {

    }
  }
}

void sub_100111A94(void *a1)
{
  char *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v12;
  CGFloat v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  double v28;
  void *v29;
  CGFloat *v30;
  void *v31;
  CGFloat *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  CGFloat *v37;
  id v38;
  id v39;
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  CGFloat *v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v2 = v1;
  v39 = objc_msgSend(a1, "containerView");
  v4 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v6)
  {

LABEL_6:
    return;
  }
  v7 = v6;
  objc_msgSend(a1, "finalFrameForViewController:", v5);
  x = v46.origin.x;
  y = v46.origin.y;
  width = v46.size.width;
  height = v46.size.height;
  v12 = CGRectGetWidth(v46) * 0.2;
  v47.origin.x = x;
  v47.origin.y = y;
  v47.size.width = width;
  v47.size.height = height;
  v13 = CGRectGetHeight(v47) * 0.2;
  v48.origin.x = x;
  v48.origin.y = y;
  v48.size.width = width;
  v48.size.height = height;
  v49 = CGRectInset(v48, v12, v13);
  v14 = (double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31TodayTransitionPresentAnimation_originRect];
  if ((v1[OBJC_IVAR____TtC22SubscribePageExtension31TodayTransitionPresentAnimation_originRect + 32] & 1) != 0)
  {
    v15 = v49.origin.x;
    v16 = v49.origin.y;
    v17 = v49.size.width;
    v18 = v49.size.height;
  }
  else
  {
    v17 = v14[2];
    v18 = v14[3];
    v15 = *v14;
    v16 = v14[1];
  }
  objc_msgSend(v39, "addSubview:", v7);
  objc_msgSend(v7, "setFrame:", v15, v16, v17, v18);
  objc_msgSend(v7, "layoutIfNeeded");
  *(_QWORD *)&v19 = swift_unknownObjectRetain(a1).n128_u64[0];
  v21 = objc_msgSend(v20, "containerView", v19);
  v22 = objc_msgSend(v21, "traitCollection");

  LOBYTE(v21) = UITraitCollection.isSizeClassCompact.getter(v23);
  swift_unknownObjectRelease(a1);

  if ((v21 & 1) != 0)
    v24 = 0.62;
  else
    v24 = 0.61;
  v25 = objc_msgSend(a1, "containerView");
  v26 = objc_msgSend(v25, "traitCollection");

  LOBYTE(v25) = UITraitCollection.isSizeClassCompact.getter(v27);
  if ((v25 & 1) != 0)
    v28 = 0.8;
  else
    v28 = 0.84;
  v29 = (void *)objc_opt_self(UIView);
  v30 = (CGFloat *)swift_allocObject(&unk_100728EF8, 64, 7);
  *((_QWORD *)v30 + 2) = v2;
  *((_QWORD *)v30 + 3) = v7;
  v30[4] = x;
  v30[5] = y;
  v30[6] = width;
  v30[7] = height;
  v44 = sub_100112314;
  v45 = v30;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_1000BD6CC;
  v43 = &unk_100728F10;
  v31 = _Block_copy(&aBlock);
  v32 = v45;
  v33 = v2;
  v34 = v7;
  swift_release(v32);
  v35 = swift_allocObject(&unk_100728F48, 32, 7);
  *(_QWORD *)(v35 + 16) = a1;
  *(_QWORD *)(v35 + 24) = v33;
  v44 = sub_1001122E4;
  v45 = (CGFloat *)v35;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_100129140;
  v43 = &unk_100728F60;
  v36 = _Block_copy(&aBlock);
  v37 = v45;
  swift_unknownObjectRetain(a1);
  v38 = v33;
  swift_release(v37);
  objc_msgSend(v29, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 129, v31, v36, v24, 0.0, v28, 1.0);

  _Block_release(v36);
  _Block_release(v31);
}

void sub_100111E7C(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  double v21;
  id v22;
  id v23;
  uint64_t v24;
  double v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  void **aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;

  v2 = v1;
  v36 = objc_msgSend(a1, "containerView");
  v4 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v4)
    goto LABEL_11;
  v5 = v4;
  v6 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v6)
  {

LABEL_11:
    return;
  }
  v7 = v6;
  objc_msgSend(a1, "finalFrameForViewController:", v5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(v36, "addSubview:", v7);
  objc_msgSend(v7, "setFrame:", v9, v11, v13, v15);
  objc_msgSend(v7, "layoutIfNeeded");
  objc_msgSend(v7, "setAlpha:", 0.0);
  *(_QWORD *)&v16 = swift_unknownObjectRetain(a1).n128_u64[0];
  v18 = objc_msgSend(v17, "containerView", v16);
  v19 = objc_msgSend(v18, "traitCollection");

  LOBYTE(v18) = UITraitCollection.isSizeClassCompact.getter(v20);
  swift_unknownObjectRelease(a1);

  if ((v18 & 1) != 0)
    v21 = 0.62;
  else
    v21 = 0.61;
  v22 = objc_msgSend(a1, "containerView");
  v23 = objc_msgSend(v22, "traitCollection");

  LOBYTE(v22) = UITraitCollection.isSizeClassCompact.getter(v24);
  if ((v22 & 1) != 0)
    v25 = 0.8;
  else
    v25 = 0.84;
  v26 = (void *)objc_opt_self(UIView);
  v27 = swift_allocObject(&unk_100728E58, 32, 7);
  *(_QWORD *)(v27 + 16) = v2;
  *(_QWORD *)(v27 + 24) = v7;
  v41 = sub_100112290;
  v42 = v27;
  aBlock = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_1000BD6CC;
  v40 = &unk_100728E70;
  v28 = _Block_copy(&aBlock);
  v29 = v42;
  v30 = v2;
  v31 = v7;
  swift_release(v29);
  v32 = swift_allocObject(&unk_100728EA8, 32, 7);
  *(_QWORD *)(v32 + 16) = a1;
  *(_QWORD *)(v32 + 24) = v30;
  v41 = sub_1001122E4;
  v42 = v32;
  aBlock = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_100129140;
  v40 = &unk_100728EC0;
  v33 = _Block_copy(&aBlock);
  v34 = v42;
  swift_unknownObjectRetain(a1);
  v35 = v30;
  swift_release(v34);
  objc_msgSend(v26, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 129, v28, v33, v21, 0.0, v25, 1.0);

  _Block_release(v33);
  _Block_release(v28);
}

id sub_100112214()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayTransitionPresentAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TodayTransitionPresentAnimation()
{
  return objc_opt_self(_TtC22SubscribePageExtension31TodayTransitionPresentAnimation);
}

uint64_t sub_100112264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100112290()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  sub_10044C93C(1);
  return objc_msgSend(v1, "setAlpha:", 1.0);
}

uint64_t sub_1001122C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001122D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001122E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_100112314()
{
  double *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = (void *)*((_QWORD *)v0 + 3);
  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = v0[7];
  sub_10044C93C(1);
  return objc_msgSend(v1, "setFrame:", v2, v3, v4, v5);
}

uint64_t sub_100112374()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001123A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001123C4()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), "tabBar");
  objc_msgSend(v1, "setHidden:", 0);

}

uint64_t sub_100112424()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0, v2);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v6);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C0EC4();
  static DispatchQoS.userInitiated.getter();
  v17 = _swiftEmptyArrayStorage;
  v12 = sub_10000E99C(&qword_1007F97E8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_10000DF3C(&qword_1007F97F0);
  v14 = sub_1000C3384(&qword_1007F97F8, &qword_1007F97F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ELL, 0x80000001006363B0, v11, v8, v4, 0);
  qword_1007FBB10 = result;
  return result;
}

uint64_t sub_1001125E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  _QWORD *v30;
  char v31[16];
  id v32[4];

  v11 = type metadata accessor for OSLogger(0, a6);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  v32[0] = 0;
  LODWORD(a4) = objc_msgSend(v15, "setCategory:mode:options:error:", a3, a4, a5, v32);

  v16 = v32[0];
  if ((_DWORD)a4)
  {
    v17 = v32[0];
  }
  else
  {
    v18 = v32[0];
    v19 = _convertNSErrorToError(_:)(v16);

    swift_willThrow(v20);
    if (qword_1007F3440 != -1)
      swift_once(&qword_1007F3440, sub_1006023FC);
    v21 = sub_1000117A8(v11, (uint64_t)qword_1008575E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
    v22 = sub_10000DF3C(&qword_1007FD430);
    v23 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v24 = swift_allocObject(v22, ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ 2 * *(_QWORD *)(v23 + 72), *(unsigned __int8 *)(v23 + 80) | 7);
    *(_OWORD *)(v24 + 16) = xmmword_10066F870;
    LogMessage.init(stringLiteral:)(0xD000000000000027, 0x8000000100636380);
    swift_getErrorValue(v19, v31, &v29);
    v25 = v29;
    v26 = v30;
    v32[3] = v30;
    v27 = sub_1000117C0(v32);
    (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v26 - 1) + 16))(v27, v25, v26);
    static LogMessage.sensitive(_:)(v32);
    sub_1000131E0((uint64_t)v32);
    Logger.error(_:)(v24, v11, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v24);
    swift_errorRelease(v19);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return sub_100112B40(a1, a2, (uint64_t)&unk_100729028, (uint64_t)sub_1001131F4, (uint64_t)&unk_100729040);
}

uint64_t sub_100112874(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  unsigned int v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  _QWORD *v27;
  char v28[16];
  id v29[4];

  v5 = type metadata accessor for OSLogger(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self(AVAudioSession);
  v10 = objc_msgSend(v9, "sharedInstance");
  v11 = objc_msgSend(v10, "categoryOptions");

  if ((v11 & 1) == 0)
  {
    v12 = objc_msgSend(v9, "sharedInstance");
    v29[0] = 0;
    v13 = objc_msgSend(v12, "setCategory:mode:options:error:", AVAudioSessionCategoryPlayback, AVAudioSessionModeDefault, 1, v29);

    v14 = v29[0];
    if (v13)
    {
      v15 = v29[0];
    }
    else
    {
      v16 = v29[0];
      v17 = _convertNSErrorToError(_:)(v14);

      swift_willThrow();
      if (qword_1007F3440 != -1)
        swift_once(&qword_1007F3440, sub_1006023FC);
      v18 = sub_1000117A8(v5, (uint64_t)qword_1008575E8);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
      v19 = sub_10000DF3C(&qword_1007FD430);
      v20 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v21 = swift_allocObject(v19, ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ 2 * *(_QWORD *)(v20 + 72), *(unsigned __int8 *)(v20 + 80) | 7);
      *(_OWORD *)(v21 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0xD000000000000027, 0x8000000100636380);
      swift_getErrorValue(v17, v28, &v26);
      v22 = v26;
      v23 = v27;
      v29[3] = v27;
      v24 = sub_1000117C0(v29);
      (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v23 - 1) + 16))(v24, v22, v23);
      static LogMessage.sensitive(_:)(v29);
      sub_1000131E0((uint64_t)v29);
      Logger.error(_:)(v21, v5, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease(v21);
      swift_errorRelease(v17);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return sub_100112B40(a1, a2, (uint64_t)&unk_1007290C8, (uint64_t)sub_1001131F4, (uint64_t)&unk_1007290E0);
}

uint64_t sub_100112B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0, v11);
  v28 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C0EC4();
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  v19 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  aBlock[4] = a4;
  v32 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = a5;
  v20 = _Block_copy(aBlock);
  v21 = v32;
  sub_100019320(a1, a2);
  v22 = swift_release(v21);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v25 = sub_1000C3384((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v10, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v29);
}

double sub_100112D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1288 != -1)
    swift_once(&qword_1007F1288, sub_100112424);
  v12 = swift_allocObject(&unk_100729078, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_1001131FC;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100729090;
  v13 = _Block_copy(aBlock);
  sub_100019320(a1, a2);
  static DispatchQoS.unspecified.getter(v14);
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v17 = sub_1000C3384((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v4, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

double sub_100112F54(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD v27[2];
  uint64_t v28;
  double *v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1288 != -1)
    swift_once(&qword_1007F1288, sub_100112424);
  v27[1] = qword_1007FBB10;
  v18 = (_QWORD *)swift_allocObject(&unk_100728FD8, 56, 7);
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a1;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = sub_1001131C8;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BD6CC;
  aBlock[3] = &unk_100728FF0;
  v19 = _Block_copy(aBlock);
  sub_100019320(a4, a5);
  v20 = a1;
  v21 = a2;
  static DispatchQoS.unspecified.getter(v22);
  v29 = _swiftEmptyArrayStorage;
  v23 = sub_10000E99C((unint64_t *)&qword_1007F4F40, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v25 = sub_1000C3384((unint64_t *)&qword_1007F4F50, (uint64_t *)&unk_1007F8E00);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v24, v25, v10, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v13, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  return result;
}

uint64_t sub_10011318C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001131C8(__n128 a1)
{
  uint64_t *v1;

  return sub_1001125E0(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_1001131D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001131E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001131FC(__n128 a1)
{
  uint64_t v1;

  return sub_100112874(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100113208()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100113234()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

void *sub_100113274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_17;
LABEL_11:
      v7 = swift_retain(v5);
      v8 = dispatch thunk of Lockup.artwork.getter(v7);
      if (v8)
      {
        v9 = v8;
        v10 = Artwork.backgroundColor.getter();
        swift_release_n(v5, 2);
        v11 = swift_release(v9);
        if (v10)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v13 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v12 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v13 >= v12 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
          v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
          specialized Array._endMutation()(v14);
        }
      }
      else
      {
        swift_release_n(v5, 2);
      }
      ++v3;
      if (v6 == v2)
        goto LABEL_22;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v5);
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100113410(uint64_t a1, double a2)
{
  double *v2;
  double *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  double v10;
  double v11;
  double v12;
  _BYTE v14[40];
  _QWORD v15[5];

  v3 = v2;
  v6 = type metadata accessor for DisjointStack(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DisjointStack.init(with:)(0, 0);
  DisjointStack.insert(_:at:with:)(v3 + 6, 0, 1, sub_10036373C, 0);
  v10 = v3[2];
  v12 = v3[4];
  v11 = v3[5];
  sub_100011020((uint64_t)(v3 + 11), (uint64_t)v14);
  v15[3] = type metadata accessor for Margins(0);
  v15[4] = &protocol witness table for Margins;
  sub_1000117C0(v15);
  Margins.init(top:left:bottom:right:child:)(v14, 0.0, v10, v11, v12);
  DisjointStack.insert(_:at:with:)(v15, 0, 1, sub_10055359C, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v15);
  dispatch thunk of Placeable.place(at:with:)(a1, v6, &protocol witness table for DisjointStack, a2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

char *sub_100113580(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  _BOOL8 v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD v44[4];
  objc_super v45;
  _QWORD v46[12];
  __int128 v47;
  _OWORD v48[3];

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard] = 0;
  v10 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView;
  v11 = objc_allocWithZone((Class)type metadata accessor for HeaderView());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer;
  v14 = type metadata accessor for TodayListCardLockupContainer();
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView] = 0;
  v15 = &v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle];
  v16 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark] = 0;
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_otherCardToExchangeRiverWith]);
  v46[0] = sub_100051330;
  v46[1] = 0;
  v46[2] = sub_10055B6D0;
  v46[3] = 0;
  v46[4] = sub_10055B8A8;
  v46[5] = 0;
  v46[6] = sub_10055B8D0;
  v46[7] = 0;
  v46[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v46[9] = 0;
  v46[10] = sub_10055B6F8;
  v46[11] = 0;
  if (qword_1007F30D8 != -1)
    swift_once(&qword_1007F30D8, sub_100562FC4);
  v47 = xmmword_100856F70;
  v48[0] = *(_OWORD *)&qword_100856F80;
  *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)&qword_100856F88 + 1);
  v17 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView] = sub_10056339C((uint64_t)v46, &v47);

  v45.receiver = v12;
  v45.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "layer");
  objc_msgSend(v19, "setAllowsGroupBlending:", 0);

  v20 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer;
  v21 = *(_BYTE **)&v18[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  v22 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v23 = v18[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v24 = v21[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded];
  v21[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded] = v23;
  if (v23 != v24)
    objc_msgSend(v21, "setNeedsLayout");
  v25 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                            + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) == 1)
  {
    if (v18[v22])
      v26 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v26 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v27 = v18[*v26] == 4;
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v21, "setHidden:", v27);
  v28 = objc_msgSend(v21, "layer");
  objc_msgSend(v28, "setZPosition:", 0.0);

  v29 = objc_msgSend(v18, "contentView");
  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v18[v20]);

  v30 = objc_msgSend(v18, "backgroundView");
  if (v30)
  {
    v31 = v30;
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v32 = (void *)static UIColor.todayCardDefaultBackground.getter();
    objc_msgSend(v31, "setBackgroundColor:", v32);

  }
  sub_100113AB8();
  v33 = objc_msgSend(v18, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v18[v25]);

  v34 = objc_msgSend(v18, "contentView");
  v35 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView;
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView]);

  v36 = (char *)*(id *)&v18[v35];
  sub_100113C84();
  v37 = &v36[qword_100818340];
  *(_QWORD *)v37 = 0x4000000000000000;
  *((_QWORD *)v37 + 1) = 0;
  *((_QWORD *)v37 + 2) = 0;
  *((_QWORD *)v37 + 3) = 0x4018000000000000;
  *((_QWORD *)v37 + 4) = 0;
  v37[40] = 1;
  objc_msgSend(v36, "setNeedsLayout");

  v38 = objc_msgSend(v18, "contentView");
  objc_msgSend(v38, "setClipsToBounds:", 1);

  sub_100113D44();
  v39 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v40 = swift_allocObject(v39, 48, 7);
  *(_OWORD *)(v40 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v40 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v40 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v44[3] = ObjectType;
  v44[0] = v18;
  v41 = v18;
  v42 = UIView.registerForTraitChanges(_:target:action:)(v40, v44, "applyContentSizeCategoryUpdates");
  swift_unknownObjectRelease(v42);

  swift_bridgeObjectRelease(v40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  return v41;
}

uint64_t sub_100113AB8()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  id v11;
  char v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView;
  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    v9 = v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                              + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                  + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) == 1
      && v9 == 4)
    {
      v8 = -1;
    }
    else if (v9 == 6)
    {
      v11 = objc_msgSend(v0, "traitCollection", v4.n128_f64[0]);
      v12 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v12 & 1) != 0)
        v8 = 10;
      else
        v8 = 5;
      v7 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView;
    }
    else
    {
      v8 = 3;
    }
  }
  v13 = *(void **)&v1[v7];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for CornerStyle.continuous(_:), v2, v4);
  sub_1005F80D4((uint64_t)v6, v8, 14.0);
  v14 = v8 & 0xC;
  if ((v8 & 0xC) != 0)
    objc_msgSend(v13, "_setContinuousCornerRadius:", 14.0);
  else
    v14 = v8 & 3;
  v15 = objc_msgSend(v13, "layer");
  objc_msgSend(v15, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(v14));

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_100113C84()
{
  _BYTE *v0;
  uint64_t *v1;
  char v2;
  id v3;
  char v4;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                            + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) == 1)
  {
    if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    if (v0[*v1] == 6)
    {
      v2 = 1;
    }
    else
    {
      v3 = objc_msgSend(v0, "traitCollection");
      v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

      v2 = v4 ^ 1;
    }
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

id sub_100113D44()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  id *v19;
  __n128 v20;
  id v21;
  char v22;
  uint64_t *v23;
  void (*v24)(_BYTE *, uint64_t, __n128);
  _BYTE v26[24];
  char v27[24];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F5808);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for TodayCard.Style(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v26[-v10];
  __chkstk_darwin(v12);
  v14 = &v26[-v13];
  v15 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  objc_msgSend(v15, "setHidden:", (sub_100113C84() & 1) == 0);
  v16 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle];
  swift_beginAccess(v16, v27, 0, 0);
  sub_1000194E4(v16, (uint64_t)v4, &qword_1007F5808);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100011088((uint64_t)v4, &qword_1007F5808);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v14, v4, v5);
    if ((sub_100113C84() & 1) != 0
      && v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark] == 1)
    {
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v11, enum case for TodayCard.Style.dark(_:), v5);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v11, v14, v5);
    }
    v17 = sub_100113C84();
    sub_1005628BC((uint64_t)v11, v17 & 1);
    if ((sub_100113C84() & 1) != 0
      && (v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark] & 1) != 0
      || (*(_BYTE *)(*(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView]
                   + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) & 1) == 0
      && (!v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded]
        ? (v18 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory)
        : (v18 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory),
          v1[*v18] == 6))
    {
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for TodayCard.Style.dark(_:), v5);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v14, v5);
    }
    v19 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
    v20 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v26, 0, 0);
    if (*v19)
    {
      v21 = *v19;
      if ((sub_100113C84() & 1) != 0)
      {
        v22 = 1;
      }
      else if ((*(_BYTE *)(*(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView]
                          + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) & 1) != 0)
      {
        v22 = 0;
      }
      else
      {
        if (v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
          v23 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
        else
          v23 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
        v22 = v1[*v23] == 6;
      }
      sub_1005628BC((uint64_t)v8, v22);

    }
    v24 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
    v24(v8, v5, v20);
    ((void (*)(_BYTE *, uint64_t))v24)(v11, v5);
    ((void (*)(_BYTE *, uint64_t))v24)(v14, v5);
  }
  sub_100113AB8();
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_100114100()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  uint64_t v4;
  id v5;
  void **v6;
  _BYTE *v7;
  int v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  char v12[24];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView);
  swift_beginAccess(v2, v12, 0, 0);
  v3 = *v2;
  if (*v2)
  {
    v4 = *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled);
    v5 = v3;
    dispatch thunk of RiverView.isAnimating.setter(v4);

  }
  v6 = (void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, &v11, 0, 0);
  v7 = *v6;
  if (*v6)
  {
    v8 = *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled);
    v9 = v7[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_isAnimating];
    v7[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_isAnimating] = v8;
    if (v8 != v9)
    {
      v10 = v7;
      sub_100137710();

    }
  }
}

void sub_1001141D8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled) = a1;
  sub_100114100();
}

uint64_t sub_1001141EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000194E4(v3, a1, &qword_1008027B0);
}

uint64_t sub_100114248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _BYTE v12[24];

  v3 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000194E4(a1, (uint64_t)v5, &qword_1008027B0);
  v6 = v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid, v12, 33, 0);
  sub_10006C214((uint64_t)v5, v6, &qword_1008027B0);
  swift_endAccess(v12);
  v7 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
  sub_1000194E4(v6, (uint64_t)v5, &qword_1008027B0);
  v8 = (uint64_t)&v7[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_pageGrid];
  swift_beginAccess(&v7[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_pageGrid], v12, 33, 0);
  v9 = v7;
  sub_10006C214((uint64_t)v5, v8, &qword_1008027B0);
  swift_endAccess(v12);

  return sub_100011088(a1, &qword_1008027B0);
}

void sub_100114380()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *Strong;
  void *v9;
  void (*v10)(uint64_t);
  _BYTE *v11;
  id v12;
  char v13[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning;
  *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView]
           + qword_100818390) = v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning];
  sub_10056418C();
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v13, 0, 0);
  v4 = *v3;
  if (v4)
  {
    *(_BYTE *)(v4 + qword_100818390) = v1[v2];
    sub_10056418C();
  }
  v5 = *(_BYTE **)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
  v6 = v1[v2];
  v5[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_isTransitioning] = v6;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingImageView];
  *(_BYTE *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_isTransitioning) = v6;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_mirrorDelegate);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void (**)(uint64_t))((swift_isaMask & *Strong) + 0xC8);
    v11 = v5;
    v10(v6);

  }
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "setClipsToBounds:", (v1[v2] & 1) == 0);

}

void sub_1001144F4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning) = a1;
  sub_100114380();
}

uint64_t sub_100114508()
{
  _BYTE *v0;
  uint64_t *v1;
  id v3;
  char v4;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                            + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) != 1)
    return 1;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[*v1] == 6)
    return 0;
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

  return v4 & 1;
}

void sub_100114640(char a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  void *v6;
  _BYTE *v7;
  objc_super v8;
  objc_super v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v10.receiver = v2;
  v10.super_class = ObjectType;
  objc_msgSendSuper2(&v10, "setDragging:", a1 & 1);
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  v9.receiver = v2;
  v9.super_class = ObjectType;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isDragging) = objc_msgSendSuper2(&v9, "isDragging");
  v6 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
  if (v6)
  {
    v8.receiver = v2;
    v8.super_class = ObjectType;
    v7 = v6;
    v7[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isDragging] = objc_msgSendSuper2(&v8, "isDragging");

  }
}

uint64_t sub_10011484C(void *a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  char *v7;
  id v8;

  if (a1)
  {
    v3 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                  + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
    v4 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView];
    v5 = v3;
    v6 = objc_msgSend(a1, "superview");
    if (v6)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v7 = v4;
      v8 = v6;
      LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

      v5 = v7;
    }

  }
  else
  {
    LOBYTE(v6) = 0;
  }
  return v6 & 1;
}

void (*sub_100114928(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView);
  v3 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v2 + v3)+ OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_videoView);
  return sub_100114994;
}

void sub_100114994(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  void *Strong;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = *(void **)a1;
  v11 = *(char **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  v4 = *(_QWORD *)&v11[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView]
     + OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_videoView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  swift_unknownObjectWeakAssign(v4, v3);
  if ((a2 & 1) != 0)
  {
    v6 = v3;
    v7 = v11;
    sub_1001CC8B8(Strong, v8);

  }
  else
  {
    v9 = v11;
    sub_1001CC8B8(Strong, v10);
  }

}

void sub_100114A50()
{
  uint64_t v0;
  uint64_t isEscapingClosureAtFileLocation;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t *v18;
  int v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  __n128 v27;
  void (*v28)(char *, uint64_t);
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  id v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  id v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  id v54;
  id v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  id v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  id v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  id v78;
  char *v79;
  __n128 v80;
  uint64_t v81;
  __n128 v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[40];
  _QWORD v96[51];
  _QWORD v97[51];
  char v98[24];
  objc_super v99;

  isEscapingClosureAtFileLocation = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for VerticalStack(0);
  v93 = *(_QWORD *)(v3 - 8);
  v94 = v3;
  __chkstk_darwin(v3);
  v92 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DisjointStack(0);
  v91 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageGrid(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99.receiver = (id)isEscapingClosureAtFileLocation;
  v99.super_class = ObjectType;
  objc_msgSendSuper2(&v99, "layoutSubviews", v13);
  v16 = isEscapingClosureAtFileLocation
      + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid, v98, 0, 0);
  sub_1000194E4(v16, (uint64_t)v10, &qword_1008027B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100011088((uint64_t)v10, &qword_1008027B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    if (*(_BYTE *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded))
      v18 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v18 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v19 = *(unsigned __int8 *)(isEscapingClosureAtFileLocation + *v18);
    if (v19 == 7)
    {
      sub_1001158F8((uint64_t)v15, (uint64_t)v97);
      v29 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
      objc_msgSend(v29, "bounds");
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v37 = v36;

      v38 = v11;
      v39 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
      v40 = v92;
      v41.n128_f64[0] = v31;
      sub_100363104(v39, v41, v33, v35, v37);
      v42 = v94;
      v43 = dispatch thunk of Placeable.place(at:with:)(v39, v94, &protocol witness table for VerticalStack, v31);
      (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v40, v42, v43);

      sub_10011BAF4(v97);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v38);
    }
    else if (v19 == 6)
    {
      v44 = v11;
      sub_100115444((uint64_t)v15, (uint64_t)v96);
      if (v96[13])
      {
        memcpy(v97, v96, sizeof(v97));
        v45 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v45, "bounds");
        v47 = v46;
        v49 = v48;
        v51 = v50;
        v53 = v52;

        v54 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        sub_100398D84(v54, v47, v49, v51, v53);

        sub_10011BB28(v97);
      }
      else
      {
        sub_100011088((uint64_t)v96, &qword_1007FBC20);
        sub_1001158F8((uint64_t)v15, (uint64_t)v97);
        v69 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v69, "bounds");
        v71 = v70;
        v73 = v72;
        v75 = v74;
        v77 = v76;

        v78 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        v79 = v92;
        v80.n128_f64[0] = v71;
        sub_100363104(v78, v80, v73, v75, v77);
        v81 = v94;
        v82 = dispatch thunk of Placeable.place(at:with:)(v78, v94, &protocol witness table for VerticalStack, v71);
        (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v79, v81, v82);

        sub_10011BAF4(v97);
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v44);
    }
    else
    {
      v90 = v11;
      if (v19 == 4)
      {
        v94 = v12;
        sub_1001152D8((uint64_t)v15, (uint64_t)v97);
        v20 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v20, "bounds");
        v22 = v21;

        v23 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        DisjointStack.init(with:)(0, 0);
        DisjointStack.insert(_:at:with:)(&v97[6], 0, 1, sub_10036373C, 0);
        v24 = *(double *)&v97[5];
        v25 = *(double *)&v97[2];
        v26 = *(double *)&v97[4];
        sub_100011020((uint64_t)&v97[11], (uint64_t)v95);
        v96[3] = type metadata accessor for Margins(0);
        v96[4] = &protocol witness table for Margins;
        sub_1000117C0(v96);
        Margins.init(top:left:bottom:right:child:)(v95, 0.0, v25, v24, v26);
        DisjointStack.insert(_:at:with:)(v96, 0, 1, sub_10055359C, 0);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v96);
        v27 = dispatch thunk of Placeable.place(at:with:)(v23, v5, &protocol witness table for DisjointStack, v22);
        (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v7, v5, v27);

        sub_10011BB5C((uint64_t)v97);
        v28 = *(void (**)(char *, uint64_t))(v94 + 8);
      }
      else
      {
        sub_1001158F8((uint64_t)v15, (uint64_t)v97);
        v55 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v55, "bounds");
        v57 = v56;
        v59 = v58;
        v61 = v60;
        v63 = v62;

        v64 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        v65 = v92;
        v66.n128_f64[0] = v57;
        sub_100363104(v64, v66, v59, v61, v63);
        v67 = v94;
        v68 = dispatch thunk of Placeable.place(at:with:)(v64, v94, &protocol witness table for VerticalStack, v57);
        (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v65, v67, v68);

        sub_10011BAF4(v97);
        v28 = *(void (**)(char *, uint64_t))(v12 + 8);
      }
      v28(v15, v90);
    }
  }
  if (*(_BYTE *)(isEscapingClosureAtFileLocation
                + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory) == 4
    && *(_BYTE *)(isEscapingClosureAtFileLocation
                + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded) == 1
    && *(_BYTE *)(isEscapingClosureAtFileLocation
                + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory) == 5)
  {
    v83 = (void *)objc_opt_self(UIView);
    v84 = swift_allocObject(&unk_100729178, 24, 7);
    *(_QWORD *)(v84 + 16) = isEscapingClosureAtFileLocation;
    v85 = swift_allocObject(&unk_1007291A0, 32, 7);
    *(_QWORD *)(v85 + 16) = sub_10011BAB0;
    *(_QWORD *)(v85 + 24) = v84;
    v97[4] = sub_100030368;
    v97[5] = v85;
    v97[0] = _NSConcreteStackBlock;
    v97[1] = 1107296256;
    v97[2] = sub_100101718;
    v97[3] = &unk_1007291B8;
    v86 = _Block_copy(v97);
    v87 = v97[5];
    v88 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v85);
    objc_msgSend(v83, "performWithoutAnimation:", v86, swift_release(v87).n128_f64[0]);
    _Block_release(v86);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v85, "", 114, 462, 44, 1);
    swift_release(v84);
    *(_QWORD *)&v17 = swift_release(v85).n128_u64[0];
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  v89 = *(void **)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
  if (v89)
    objc_msgSend(v89, "layoutIfNeeded", v17);
  objc_msgSend(*(id *)(isEscapingClosureAtFileLocation+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer), "layoutIfNeeded", v17, v90);
}

id sub_1001152D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  char v5;
  uint64_t *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  id v21;

  v5 = v2[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v6 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v5)
    v6 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v7 = v2[*v6];
  v8 = objc_msgSend(v2, "traitCollection");
  sub_10011A7A8(a1, v7, v5, v8);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = sub_100113C84();
  v18 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  *(_QWORD *)(a2 + 72) = type metadata accessor for HeaderView();
  *(_QWORD *)(a2 + 80) = sub_10000E99C(&qword_1007FBC28, (uint64_t (*)(uint64_t))type metadata accessor for HeaderView, (uint64_t)&unk_100676910);
  *(_QWORD *)(a2 + 48) = v18;
  v21 = *(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
  *(_QWORD *)(a2 + 112) = type metadata accessor for TodayCardLabelsView(0);
  *(_QWORD *)(a2 + 120) = &protocol witness table for CustomLayoutView;
  *(_QWORD *)(a2 + 88) = v21;
  *(_BYTE *)a2 = v17 & 1;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = 0x4030000000000000;
  v19 = v18;
  return v21;
}

void sub_100115444(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  void *v5;
  void **v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  char *v38;
  id v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void **v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char v49;
  char v50;
  double v51;
  char v52[24];
  _OWORD v53[2];
  uint64_t v54;
  char v55[24];
  _OWORD v56[2];
  uint64_t v57;
  char v58[24];
  _OWORD v59[2];
  uint64_t v60;
  char v61[24];
  __int128 v62;
  uint64_t v63;
  void *v64;
  __int128 v65;
  uint64_t v66;
  void *v67;
  __int128 v68;
  uint64_t v69;
  void *v70;
  __int128 v71[2];
  __int128 v72[2];
  char v73[32];

  v3 = v2;
  v5 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
  if (v5
    && (v7 = (void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView],
        swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v73, 0, 0), (v8 = *v7) != 0)&& (v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard]) != 0)
  {
    swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard]);
    v10 = v5;
    v11 = v8;
    v12 = objc_msgSend(v3, "traitCollection");
    v51 = sub_10011A5F4(a1, v12);
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v19 = objc_msgSend(v3, "traitCollection");
    v20 = sub_10011B478(a1, v19);
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v50 = sub_100113C84();
    v27 = v3[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
    v49 = v3[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning];

    if (v27)
      v28 = 272.0;
    else
      v28 = 177.0;
    *(_QWORD *)&v71[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
    v29 = type metadata accessor for HeaderView();
    Measurable.placeable.getter(v72, v29, &protocol witness table for UIView);
    *(_QWORD *)&v68 = v11;
    v30 = type metadata accessor for TodayCardLabelsView(0);
    Measurable.placeable.getter(v71, v30, &protocol witness table for UIView);
    v31 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
    v69 = v30;
    v70 = &protocol witness table for CustomLayoutView;
    *(_QWORD *)&v68 = v31;
    v66 = type metadata accessor for TodayListCardLockupContainer();
    v67 = &protocol witness table for UIView;
    v64 = &protocol witness table for UIView;
    *(_QWORD *)&v65 = v10;
    v32 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer];
    v63 = v66;
    *(_QWORD *)&v62 = v32;
    v33 = &v32[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_listCells];
    swift_beginAccess(&v32[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_listCells], v61, 0, 0);
    v48 = *(_QWORD *)(*(_QWORD *)v33 + 16);
    v34 = &v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView], v58, 0, 0);
    if (*(_QWORD *)v34)
    {
      *(_QWORD *)&v56[0] = *(_QWORD *)v34;
      v35 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v36 = v10;
      v37 = v31;
      v38 = v32;
      Measurable.placeable.getter(v59, v35, &protocol witness table for UIView);
    }
    else
    {
      v60 = 0;
      memset(v59, 0, sizeof(v59));
      v39 = v10;
      v40 = v31;
      v41 = v32;
    }
    v42 = &v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView], v55, 0, 0);
    if (*(_QWORD *)v42)
    {
      *(_QWORD *)&v53[0] = *(_QWORD *)v42;
      v43 = sub_10000DF3C(&qword_1007F7128);
      Measurable.placeable.getter(v56, v43, &protocol witness table for UIView);
    }
    else
    {
      v57 = 0;
      memset(v56, 0, sizeof(v56));
    }
    v44 = (void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView], v52, 0, 0);
    v45 = *v44;
    if (v45)
    {
      v46 = type metadata accessor for RiverTodayCardBackgroundView(0);
      v47 = v45;
      Measurable.placeable.getter(v53, v46, &protocol witness table for UIView);

      swift_release(v9);
    }
    else
    {
      swift_release(v9);

      v54 = 0;
      memset(v53, 0, sizeof(v53));
    }
    *(_BYTE *)a2 = v27;
    *(_BYTE *)(a2 + 1) = v49;
    *(_BYTE *)(a2 + 2) = v50 & 1;
    *(double *)(a2 + 8) = v51;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v18;
    *(double *)(a2 + 40) = v20;
    *(_QWORD *)(a2 + 48) = v22;
    *(_QWORD *)(a2 + 56) = v24;
    *(_QWORD *)(a2 + 64) = v26;
    *(double *)(a2 + 72) = v28;
    sub_100010F3C(v72, a2 + 80);
    sub_100010F3C(v71, a2 + 120);
    sub_100010F3C(&v68, a2 + 160);
    sub_100010F3C(&v65, a2 + 200);
    sub_100010F3C(&v62, a2 + 240);
    *(_QWORD *)(a2 + 280) = v48;
    sub_10007B384((uint64_t)v59, a2 + 288);
    sub_10007B384((uint64_t)v56, a2 + 328);
    sub_10007B384((uint64_t)v53, a2 + 368);
  }
  else
  {
    *(_QWORD *)(a2 + 400) = 0;
    *(_OWORD *)(a2 + 368) = 0u;
    *(_OWORD *)(a2 + 384) = 0u;
    *(_OWORD *)(a2 + 336) = 0u;
    *(_OWORD *)(a2 + 352) = 0u;
    *(_OWORD *)(a2 + 304) = 0u;
    *(_OWORD *)(a2 + 320) = 0u;
    *(_OWORD *)(a2 + 272) = 0u;
    *(_OWORD *)(a2 + 288) = 0u;
    *(_OWORD *)(a2 + 240) = 0u;
    *(_OWORD *)(a2 + 256) = 0u;
    *(_OWORD *)(a2 + 208) = 0u;
    *(_OWORD *)(a2 + 224) = 0u;
    *(_OWORD *)(a2 + 176) = 0u;
    *(_OWORD *)(a2 + 192) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
}

id sub_1001158F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  double v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v26;

  v5 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v6 = v2[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v7 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v6)
    v7 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v8 = v2[*v7];
  v9 = objc_msgSend(v2, "traitCollection");
  sub_10011A7A8(a1, v8, v6, v9);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = sub_100113C84();
  v19 = v2[v5];

  if (v19)
    v20 = 272.0;
  else
    v20 = 177.0;
  v21 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  *(_QWORD *)(a2 + 88) = type metadata accessor for HeaderView();
  *(_QWORD *)(a2 + 96) = sub_10000E99C(&qword_1007FBC28, (uint64_t (*)(uint64_t))type metadata accessor for HeaderView, (uint64_t)&unk_100676910);
  *(_QWORD *)(a2 + 64) = v21;
  v22 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
  *(_QWORD *)(a2 + 128) = type metadata accessor for TodayCardLabelsView(0);
  *(_QWORD *)(a2 + 136) = &protocol witness table for CustomLayoutView;
  *(_QWORD *)(a2 + 104) = v22;
  v26 = *(id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  *(_QWORD *)(a2 + 168) = type metadata accessor for TodayListCardLockupContainer();
  *(_QWORD *)(a2 + 176) = &protocol witness table for UIView;
  *(_QWORD *)(a2 + 144) = v26;
  *(_BYTE *)a2 = v19;
  *(_BYTE *)(a2 + 1) = v18 & 1;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = 0x4030000000000000;
  *(double *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = 0x405B800000000000;
  v23 = v21;
  v24 = v22;
  return v26;
}

double sub_100115AFC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void **v15;
  double result;
  char *v17;
  unint64_t *v18;
  unint64_t v19;
  char *v20;
  _BYTE v21[24];
  char v22[24];
  char v23[24];
  _BYTE v24[24];
  objc_super v25;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F5808);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25.receiver = v1;
  v25.super_class = ObjectType;
  objc_msgSendSuper2(&v25, "prepareForReuse", v4);
  v7 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                         + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView));
  sub_1005F79F4();

  sub_100125B90();
  v8 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle], v24, 33, 0);
  sub_10006C214((uint64_t)v6, v9, &qword_1007F5808);
  swift_endAccess(v24);
  v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark] = 0;
  sub_100115D2C();
  v10 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView], v24, 0, 0);
  if (*v10)
  {
    v11 = *v10;
    v12 = dispatch thunk of RiverView.dataSource.getter();

    swift_beginAccess(v12 + 32, v23, 1, 0);
    v13 = *(_QWORD *)(v12 + 32);
    *(_QWORD *)(v12 + 32) = _swiftEmptyArrayStorage;
    swift_release(v12);
    swift_bridgeObjectRelease(v13);
    if (*v10)
    {
      v14 = *v10;
      dispatch thunk of RiverView.flushRows()();

    }
  }
  v15 = (void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView];
  *(_QWORD *)&result = swift_beginAccess(v15, v22, 0, 0).n128_u64[0];
  v17 = (char *)*v15;
  if (*v15)
  {
    v18 = (unint64_t *)&v17[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors];
    swift_beginAccess(&v17[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors], v21, 1, 0);
    v19 = *v18;
    *v18 = (unint64_t)_swiftEmptyArrayStorage;
    v20 = v17;
    sub_100136EF0(v19);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  }
  return result;
}

void sub_100115D2C()
{
  uint64_t v0;
  uint64_t *v1;
  id *v2;
  double v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id *v8;
  double v9;
  id v10;
  id *v11;
  double v12;
  id v13;
  id *v14;
  double v15;
  id v16;
  id *v17;
  uint64_t *v18;
  id *v19;
  double v20;
  id v21;
  double v22;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded))
    v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (*(_BYTE *)(v0 + *v1) == 6)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                          + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                              + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                  + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) != 1)
      return;
    v2 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView);
    *(_QWORD *)&v3 = swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView, v26, 1, 0).n128_u64[0];
    if (*v2)
    {
      objc_msgSend(*v2, "removeFromSuperview", v3);
      v4 = *v2;
    }
    else
    {
      v4 = 0;
    }
    *v2 = 0;

    v19 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView);
    *(_QWORD *)&v20 = swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView, v25, 1, 0).n128_u64[0];
    if (*v19)
    {
      objc_msgSend(*v19, "removeFromSuperview", v20);
      v21 = *v19;
    }
    else
    {
      v21 = 0;
    }
    *v19 = 0;

    v17 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    v18 = (uint64_t *)v24;
  }
  else
  {
    v5 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer;
    v6 = *(void **)(v0
                  + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
    if (v6)
    {
      objc_msgSend(v6, "removeFromSuperview");
      v7 = *(void **)(v0 + v5);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v0 + v5) = 0;

    v8 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView);
    *(_QWORD *)&v9 = swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView, v26, 1, 0).n128_u64[0];
    if (*v8)
    {
      objc_msgSend(*v8, "removeFromSuperview", v9);
      v10 = *v8;
    }
    else
    {
      v10 = 0;
    }
    *v8 = 0;

    v11 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView);
    *(_QWORD *)&v12 = swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView, v25, 1, 0).n128_u64[0];
    if (*v11)
    {
      objc_msgSend(*v11, "removeFromSuperview", v12);
      v13 = *v11;
    }
    else
    {
      v13 = 0;
    }
    *v11 = 0;

    v14 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView);
    *(_QWORD *)&v15 = swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView, v24, 1, 0).n128_u64[0];
    if (*v14)
    {
      objc_msgSend(*v14, "removeFromSuperview", v15);
      v16 = *v14;
    }
    else
    {
      v16 = 0;
    }
    *v14 = 0;

    v17 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    v18 = &v23;
  }
  *(_QWORD *)&v22 = swift_beginAccess(v17, v18, 0, 0).n128_u64[0];
  if (*v17)
    objc_msgSend(*v17, "setHidden:", 1, v22);
}

id sub_100115FC8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  uint64_t (*v11)();
  uint64_t (*v12)();
  uint64_t (*v13)();
  uint64_t (*v14)();
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _BYTE *v24;
  char v25;
  uint64_t v26;
  _BYTE *v27;
  char *v28;
  _BYTE *v29;
  int v30;
  int v31;
  double v32;
  objc_class *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _BYTE *v39;
  int v40;
  int v41;
  id *v42;
  char *v43;
  uint64_t *v44;
  int v45;
  uint64_t (*v46)();
  uint64_t (*v47)();
  uint64_t (*v48)();
  uint64_t (*v49)();
  uint64_t (**v50)();
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  objc_class *v61;
  uint64_t v62;
  uint64_t v63;
  char v64[24];
  objc_super v65;
  objc_super v66;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for CornerStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FB2EC();
  v7 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
  v8 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v9 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v9 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v10 = v0[*v9];
  v62 = v4;
  v63 = v3;
  v61 = (objc_class *)ObjectType;
  if (v10 == 6)
  {
    v11 = sub_100158F34;
    v12 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v13 = (uint64_t (*)())sub_10055BABC;
    v14 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else if (v10 == 4)
  {
    v11 = sub_1000D6130;
    v12 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v13 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v14 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else
  {
    v11 = (uint64_t (*)())sub_10055B6F8;
    v12 = (uint64_t (*)())sub_10055B8D0;
    v14 = (uint64_t (*)())sub_10055B8A8;
    v13 = (uint64_t (*)())sub_10055B6D0;
  }
  v15 = (uint64_t (**)())&v7[qword_100818380];
  v16 = *(_QWORD *)&v7[qword_100818380 + 8];
  v17 = *(_QWORD *)&v7[qword_100818380 + 24];
  v18 = *(_QWORD *)&v7[qword_100818380 + 40];
  v19 = *(_QWORD *)&v7[qword_100818380 + 56];
  v20 = *(_QWORD *)&v7[qword_100818380 + 72];
  v21 = *(_QWORD *)&v7[qword_100818380 + 88];
  *v15 = sub_100051330;
  v15[1] = 0;
  v15[2] = v13;
  v15[3] = 0;
  v15[4] = v14;
  v15[5] = 0;
  v15[6] = v12;
  v15[7] = 0;
  v15[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v15[9] = 0;
  v15[10] = v11;
  v15[11] = 0;
  swift_release(v21);
  swift_release(v20);
  swift_release(v19);
  swift_release(v18);
  swift_release(v17);
  swift_release(v16);
  sub_100563D88();
  sub_100113C84();
  v22 = &v7[qword_100818340];
  *(_QWORD *)v22 = 0x4000000000000000;
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0x4018000000000000;
  *((_QWORD *)v22 + 4) = 0;
  v22[40] = 1;
  objc_msgSend(v7, "setNeedsLayout");
  v23 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  v24 = *(_BYTE **)&v23[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView];
  v25 = v1[v8];
  v26 = OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_isExpanded;
  v24[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_isExpanded] = v25;
  v27 = *(_BYTE **)&v24[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingImageView];
  v27[OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_isExpanded] = v25;
  v28 = v24;
  objc_msgSend(v27, "setNeedsLayout");
  *(_BYTE *)(*(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView]
           + OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_isExpanded) = v24[v26];
  sub_1001CBB08();

  v29 = *(_BYTE **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  v30 = v1[v8];
  v31 = v29[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded];
  v29[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded] = v30;
  if (v30 != v31)
    objc_msgSend(v29, "setNeedsLayout");
  v32 = 14.0;
  if (v1[v8])
    v32 = 0.0;
  v33 = v61;
  v66.receiver = v1;
  v66.super_class = v61;
  objc_msgSendSuper2(&v66, "_setContinuousCornerRadius:", v32, v61);
  v65.receiver = v1;
  v65.super_class = v33;
  objc_msgSendSuper2(&v65, "_continuousCornerRadius");
  v35 = v34;
  v37 = v62;
  v36 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v6, enum case for CornerStyle.continuous(_:), v63);
  sub_1005F80D4((uint64_t)v6, 3, v35);
  v38 = objc_msgSend(v23, "layer");
  objc_msgSend(v38, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(3));

  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v36);
  v39 = *(_BYTE **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
  if (v39)
  {
    v40 = v1[v8];
    v41 = v39[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded];
    v39[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded] = v40;
    if (v40 != v41)
      objc_msgSend(v39, "setNeedsLayout");
  }
  v42 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v64, 0, 0);
  v43 = (char *)*v42;
  if (*v42)
  {
    v44 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    if (!v1[v8])
      v44 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v45 = v1[*v44];
    if (v45 == 6)
    {
      v46 = sub_100158F34;
      v47 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v48 = (uint64_t (*)())sub_10055BABC;
      v49 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    }
    else if (v45 == 4)
    {
      v46 = sub_1000D6130;
      v47 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v48 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v49 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    }
    else
    {
      v46 = (uint64_t (*)())sub_10055B6F8;
      v47 = (uint64_t (*)())sub_10055B8D0;
      v49 = (uint64_t (*)())sub_10055B8A8;
      v48 = (uint64_t (*)())sub_10055B6D0;
    }
    v50 = (uint64_t (**)())&v43[qword_100818380];
    v51 = *(_QWORD *)&v43[qword_100818380 + 8];
    v52 = *(_QWORD *)&v43[qword_100818380 + 24];
    v53 = *(_QWORD *)&v43[qword_100818380 + 40];
    v54 = *(_QWORD *)&v43[qword_100818380 + 56];
    v55 = *(_QWORD *)&v43[qword_100818380 + 72];
    v56 = *(_QWORD *)&v43[qword_100818380 + 88];
    *v50 = sub_100051330;
    v50[1] = 0;
    v50[2] = v48;
    v50[3] = 0;
    v50[4] = v49;
    v50[5] = 0;
    v50[6] = v47;
    v50[7] = 0;
    v50[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v50[9] = 0;
    v50[10] = v46;
    v50[11] = 0;
    v57 = v43;
    swift_release(v56);
    swift_release(v55);
    swift_release(v54);
    swift_release(v53);
    swift_release(v52);
    swift_release(v51);
    sub_100563D88();

    if (*v42)
    {
      v58 = (char *)*v42;
      sub_100113C84();
      v59 = &v58[qword_100818340];
      *(_QWORD *)v59 = 0x4000000000000000;
      *((_QWORD *)v59 + 1) = 0;
      *((_QWORD *)v59 + 2) = 0;
      *((_QWORD *)v59 + 3) = 0x4018000000000000;
      *((_QWORD *)v59 + 4) = 0;
      v59[40] = 1;
      objc_msgSend(v58, "setNeedsLayout");

    }
  }
  sub_100116568();
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_100116568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  id *v5;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  id *v9;
  double v10;
  uint64_t *v11;
  char v12;
  id *v13;
  double v14;
  uint64_t *v15;
  char v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning) & 1) == 0)
  {
    v1 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded))
      v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v3 = *(unsigned __int8 *)(v0 + *v2);
    if (v3 == 7)
    {
      v4 = 0;
    }
    else if (v3 == 6)
    {
      v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded) ^ 1u;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView), "setHidden:", v4);
    v5 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView);
    *(_QWORD *)&v6 = swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView, v25, 0, 0).n128_u64[0];
    if (*v5)
    {
      if (*(_BYTE *)(v0 + v1))
        v7 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v7 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v7) == 6)
        v8 = *(unsigned __int8 *)(v0 + v1);
      else
        v8 = 1;
      objc_msgSend(*v5, "setHidden:", v8, v6);
    }
    v9 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView);
    *(_QWORD *)&v10 = swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView, v24, 0, 0).n128_u64[0];
    if (*v9)
    {
      if (*(_BYTE *)(v0 + v1))
        v11 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v11 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v11) == 6)
        v12 = *(_BYTE *)(v0 + v1) | *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                                                         + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                                             + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia);
      else
        v12 = 1;
      objc_msgSend(*v9, "setHidden:", v12 & 1, v10);
    }
    v13 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    *(_QWORD *)&v14 = swift_beginAccess(v0+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, v23, 0, 0).n128_u64[0];
    if (*v13)
    {
      if (*(_BYTE *)(v0 + v1))
        v15 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v15 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v15) == 6)
        v16 = *(_BYTE *)(v0 + v1) | *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                                                         + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                                             + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia);
      else
        v16 = 1;
      objc_msgSend(*v13, "setHidden:", v16 & 1, v14);
    }
    if (*(_BYTE *)(v0 + v1))
      v17 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v17 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v18 = *(unsigned __int8 *)(v0 + *v17);
    if (v18 == 6)
      v19 = *(unsigned __int8 *)(v0 + v1) ^ 1u;
    else
      v19 = (v18 == 4) & *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                                          + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                                              + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                                  + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer), "setHidden:", v19, v14);
    v20 = *(void **)(v0
                   + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
    if (v20)
    {
      if (*(_BYTE *)(v0 + v1))
        v21 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v21 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v21) == 6)
        v22 = *(unsigned __int8 *)(v0 + v1);
      else
        v22 = 1;
      objc_msgSend(v20, "setHidden:", v22);
    }
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView), "setHidden:", (sub_100113C84() & 1) == 0);
  }
}

id sub_100116830(unsigned __int8 a1)
{
  char *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void **v7;
  _BYTE *v8;
  uint64_t *v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t *v12;
  _BYTE *v13;
  uint64_t *v14;
  char v16[24];

  v2 = v1;
  objc_msgSend(v1, "setNeedsLayout");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
  v5 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v6 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v6 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  *(_BYTE *)(v4 + qword_100818348) = v2[*v6];
  sub_100563CE8();
  v7 = (void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v16, 0, 0);
  v8 = *v7;
  if (*v7)
  {
    if (v2[v5])
      v9 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v9 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v8[qword_100818348] = v2[*v9];
    v10 = v8;
    sub_100563CE8();

  }
  v11 = *(_BYTE **)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                  + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
  if (v2[v5])
    v12 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v12 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v11[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_sizeCategory] = v2[*v12];
  v13 = v11;
  sub_1005F8480();

  if (v2[v5])
    v14 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v14 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  sub_10011699C(v2[*v14], a1);
  return objc_msgSend(v2, "setNeedsLayout");
}

void sub_10011699C(unsigned __int8 a1, unsigned __int8 a2)
{
  char *v2;
  char *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  void **v14;
  __n128 v15;
  void *v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  void **v27;
  void **v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  void *v43;
  int v44;
  int v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void **v50;
  double v51;
  id v52;
  char *v53;
  char *v54;
  void *v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];
  char v61[24];
  char v62[24];
  char v63[24];
  _QWORD v64[12];
  __int128 v65;
  _OWORD v66[2];
  CGRect v67;
  CGRect v68;

  v3 = v2;
  v4 = a1;
  v5 = a2;
  v6 = type metadata accessor for RiverViewStyling(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - v11;
  if (v4 == 7)
  {
    if (v5 == 7)
      return;
  }
  else if (v5 != 7)
  {
    switch(v4)
    {
      case 6:
        if (v5 == 6)
          return;
        break;
      case 5:
        if (v5 == 5)
          return;
        break;
      case 4:
        if (v5 == 4)
          return;
        break;
      default:
        if ((v5 - 7) <= 0xFFFFFFFC && v4 == v5)
          return;
        break;
    }
  }
  if (v3[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory] == 6)
  {
    v13 = static RiverViewStyling.defaultSpeed.getter();
    static RiverViewStyling.defaultRowOffsets.getter();
    RiverViewStyling.init(itemSize:interRowSpacing:interItemSpacing:speed:rowOffsets:reverseAlternatingRows:)(99.0, 99.0, 16.0, 16.0, v13);
    v14 = (void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView];
    v15 = swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView], v63, 1, 0);
    v16 = *v14;
    v59 = v7;
    if (v16)
    {
      objc_msgSend(v16, "setHidden:", 0, v15.n128_f64[0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v12, v6, v15);
      v17 = objc_allocWithZone((Class)type metadata accessor for RiverTodayCardBackgroundView(0));
      v18 = sub_1001367C8((uint64_t)v9);
      objc_msgSend(v18, "setClipsToBounds:", 1);
      v19 = v18;
      objc_msgSend(v3, "bounds");
      CGRectGetWidth(v67);
      objc_msgSend(v3, "bounds");
      CGRectGetHeight(v68);
      objc_msgSend(v19, "bounds");
      objc_msgSend(v19, "setBounds:");

      objc_msgSend(v19, "_setContinuousCornerRadius:", 14.0);
      v20 = objc_msgSend(v19, "layer");
      v21 = objc_msgSend(v3, "traitCollection");
      v22 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v22 & 1) != 0)
        v23 = 10;
      else
        v23 = 5;
      objc_msgSend(v20, "setMaskedCorners:", v23);

      v24 = *v14;
      *v14 = v19;
      v25 = v19;

      v26 = objc_msgSend(v3, "contentView");
      objc_msgSend(v26, "addSubview:", v25);

    }
    v27 = (void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView], v62, 1, 0);
    if (!*v27)
    {
      v28 = (void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView];
      swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView], v60, 1, 0);
      if (!*v28)
      {
        v29 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        objc_msgSend(v29, "setClipsToBounds:", 1);
        v30 = *v27;
        *v27 = v29;
        v31 = v29;

        v32 = objc_msgSend(v3, "contentView");
        objc_msgSend(v32, "addSubview:", v31);

        v33 = type metadata accessor for RiverCardDataSource();
        v34 = swift_allocObject(v33, 56, 7);
        *(_QWORD *)(v34 + 32) = _swiftEmptyArrayStorage;
        *(_OWORD *)(v34 + 16) = xmmword_100672730;
        *(int64x2_t *)(v34 + 40) = vdupq_n_s64(0x4058C00000000000uLL);
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v9, v12, v6);
        v35 = objc_allocWithZone((Class)sub_10000DF3C(&qword_1007F7128));
        v36 = swift_retain(v34);
        v37 = (void *)RiverView.init(dataSource:styling:)(v36);
        objc_msgSend(v37, "setClipsToBounds:", 0);
        v38 = *v28;
        *v28 = v37;
        v39 = v37;

        objc_msgSend(v31, "addSubview:", v39);
        swift_release(v34);

      }
    }
    v40 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer;
    if (!*(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer])
    {
      v41 = type metadata accessor for TodayListCardLockupContainer();
      v42 = (unsigned __int8 *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v41)), "init");
      v43 = v42;
      v44 = v3[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
      v45 = v42[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded];
      v42[OBJC_IVAR____TtC22SubscribePageExtension28TodayListCardLockupContainer_isExpanded] = v44;
      if (v44 != v45)
        objc_msgSend(v42, "setNeedsLayout");
      v46 = objc_msgSend(v43, "layer");
      objc_msgSend(v46, "setZPosition:", 0.0);

      objc_msgSend(v43, "setClipsToBounds:", 1);
      v47 = *(void **)&v3[v40];
      *(_QWORD *)&v3[v40] = v43;
      v48 = v43;

      v49 = objc_msgSend(v3, "contentView");
      objc_msgSend(v49, "addSubview:", v48);

    }
    v50 = (void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
    *(_QWORD *)&v51 = swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v61, 1, 0).n128_u64[0];
    if (!*v50)
    {
      v64[0] = sub_100051330;
      v64[1] = 0;
      v64[2] = sub_10055BABC;
      v64[3] = 0;
      v64[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v64[5] = 0;
      v64[6] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v64[7] = 0;
      v64[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v64[9] = 0;
      v64[10] = sub_100158F34;
      v64[11] = 0;
      if (qword_1007F30D8 != -1)
        swift_once(&qword_1007F30D8, sub_100562FC4);
      v65 = xmmword_100856F70;
      v66[0] = *(_OWORD *)&qword_100856F80;
      *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)&qword_100856F88 + 1);
      v52 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
      v53 = sub_10056339C((uint64_t)v64, &v65);
      sub_100113C84();
      v54 = &v53[qword_100818340];
      *(_QWORD *)v54 = 0x4000000000000000;
      *((_QWORD *)v54 + 1) = 0;
      *((_QWORD *)v54 + 2) = 0;
      *((_QWORD *)v54 + 3) = 0x4018000000000000;
      *((_QWORD *)v54 + 4) = 0;
      v54[40] = 1;
      objc_msgSend(v53, "setNeedsLayout");
      v53[qword_100818348] = v4;
      sub_100563CE8();
      v55 = *v50;
      *v50 = v53;
      v56 = v53;

      v57 = objc_msgSend(v3, "contentView");
      objc_msgSend(v57, "addSubview:", v56);

    }
    objc_msgSend(v3, "setNeedsLayout", v51);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v6);
  }
  else
  {
    sub_100115D2C();
  }
}

id sub_1001170D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  int v5;
  char *v6;
  uint64_t v7;
  int v8;
  char v9;
  id v10;
  char v12[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory] == 4)
  {
    v3 = objc_msgSend(v0, "contentView");
    objc_msgSend(v3, "setClipsToBounds:", 1);

  }
  objc_msgSend(v1, "setNeedsLayout");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
  v5 = v1[v2];
  *(_BYTE *)(v4 + qword_100818350) = v5;
  if (v5 != 7)
  {
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100818358)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100818360)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100818370)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
  }
  v6 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v12, 0, 0);
  v7 = *(_QWORD *)v6;
  if (*(_QWORD *)v6)
  {
    v8 = v1[v2];
    *(_BYTE *)(v7 + qword_100818350) = v8;
    if (v8 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(v7 + qword_100818358)
               + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v8;
      *(_BYTE *)(*(_QWORD *)(v7 + qword_100818360)
               + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v8;
      *(_BYTE *)(*(_QWORD *)(v7 + qword_100818370)
               + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v8;
    }
  }
  v9 = v1[v2];
  v10 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                          + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView));
  sub_1005F7C4C(v9);

  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_10011728C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v6, v18, 1, 0);
  swift_weakAssign(v6, a2);
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v3 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock, &v17, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100019310(v8, v9);
  v10 = (void (*)(__n128))*v7;
  if (*v7)
  {
    v11 = v7[1];
    v12 = swift_retain(v11);
    v10(v12);
    sub_100019310((uint64_t)v10, v11);
  }
  v13 = type metadata accessor for TodayListCardLockupContainer();
  v14 = sub_10000E99C(&qword_1007FBC18, (uint64_t (*)(uint64_t))type metadata accessor for TodayListCardLockupContainer, (uint64_t)"A(\v");
  NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v13, v14);
  v15 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
  if (v15)
  {
    v16 = v15;
    NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v13, v14);

  }
}

void sub_1001173C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator, v15, 1, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    ImpressionsCalculator.removeAllElements()();
    swift_release(v6);
  }
  swift_weakAssign(v4, 0);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock, &v14, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100019310(v8, v9);
  v10 = type metadata accessor for TodayListCardLockupContainer();
  v11 = sub_10000E99C(&qword_1007FBC18, (uint64_t (*)(uint64_t))type metadata accessor for TodayListCardLockupContainer, (uint64_t)"A(\v");
  NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v10, v11);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
  if (v12)
  {
    v13 = v12;
    NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v10, v11);

  }
}

void sub_1001174F0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  char *v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v5 = v4;
  v40 = a4;
  v9 = type metadata accessor for TodayCard.Style(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F5808);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FB730(a1, a2, a3);
  v16 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard];
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard] = a1;
  swift_release(v16);
  swift_retain(a1);
  v18 = TodayCard.media.getter(v17);
  v19 = type metadata accessor for TodayCardMediaList(0);
  v20 = swift_dynamicCastClass(v18, v19);
  if (v20)
  {
    v22 = v20;
    v37 = v18;
    TodayCard.style.getter(v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    v23 = (uint64_t)&v5[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle];
    swift_beginAccess(&v5[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle], v41, 33, 0);
    sub_10006C214((uint64_t)v15, v23, &qword_1007F5808);
    v24 = swift_endAccess(v41);
    v25 = TodayCardMediaList.isMediaDark.getter(v24);
    v26 = a3;
    v27 = OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark;
    v5[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark] = v25 & 1;
    v36 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v28 = v5[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
    v38 = a2;
    v39 = v26;
    sub_100117858(a1, v22, a2, v28, v26, v40);
    v29 = *(char **)&v5[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
    if ((sub_100113C84() & 1) != 0 && v5[v27] == 1)
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for TodayCard.Style.dark(_:), v9);
    else
      TodayCard.style.getter(v30);
    sub_10011B0E0(v29, a1, v22, (uint64_t)v12, v38);
    v31.n128_f64[0] = (*(double (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v32 = TodayCardMediaList.lockups.getter(v31);
    v33 = type metadata accessor for ArtworkLoader(0);
    v34 = v40;
    v35 = *(_QWORD *)(v40 + qword_100854050);
    if (v35)
    {
      swift_retain(*(_QWORD *)(v40 + qword_100854050));
      sub_100127674(v32, v35, v34);
      swift_bridgeObjectRelease(v32);
      swift_release(v35);
      if (v5[v36] == 6)
        sub_100117D08(a1, v22, v38, v39, v34);
      sub_100113AB8();
      sub_100115D2C();
      sub_100116568();
      sub_100113D44();
      sub_100118404();
      objc_msgSend(v5, "setNeedsLayout");
      swift_release(v37);
    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v33);
      __break(1u);
    }
  }
  else
  {
    swift_release(v18);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                         + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
             + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) = 0;
    sub_100116568();
  }
}

uint64_t sub_100117858(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __n128 v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;

  v7 = v6;
  v59 = a5;
  v60 = a6;
  v57 = a4;
  v58 = a3;
  v61 = a2;
  v8 = type metadata accessor for EditorialDisplayOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - v13;
  v65 = TodayCard.media.getter(v15);
  v16 = type metadata accessor for TodayCardMedia(0);
  v17 = sub_10000DF3C(&qword_1007FBC08);
  if ((swift_dynamicCast(&v62, &v65, v16, v17, 6) & 1) != 0)
  {
    v55 = v9;
    v56 = v8;
    sub_100010F3C(&v62, (uint64_t)v66);
    sub_100011064(v66, v67);
    v18 = objc_msgSend(v6, "traitCollection");
    v19 = TodayCardMediaWithArtwork.video(for:)();

    if (v19)
    {
      v20 = v67;
      v21 = v68;
      sub_100011064(v66, v67);
      v22 = dispatch thunk of TodayCardMediaWithArtwork.artworkLayoutsWithMetrics.getter(v20, v21);
      if (v22)
      {
        v24 = v22;
        sub_10011ABF0(v19, v22, v58, v59, v60, v23);
        swift_bridgeObjectRelease(v24);
        v25 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
        if (qword_1007F11E8 != -1)
          swift_once(&qword_1007F11E8, sub_1000DE9D4);
        v26 = qword_100851958;
        v27 = unk_100851960;
        v28 = TodayCardMediaList.isMediaDark.getter();
        v30 = TodayCard.editorialDisplayOptions.getter(v29);
        v31 = EditorialDisplayOptions.useMaterialBlur.getter(v30);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v56);
        v32 = *(char **)(v25
                       + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView);
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRetain(v27);
        sub_1000DF764(v26, v27);
        if ((v28 & 1) != 0)
          v33 = 2;
        else
          v33 = 1;
        *(_QWORD *)&v32[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = v33;
        sub_1000DF6A8();
        objc_msgSend(v32, "setHidden:", (v31 & 1) == 0);
        v34 = v19;
LABEL_25:
        swift_release(v34);
        return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
      }
      swift_release(v19);
    }
    v35 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
    v9 = v55;
    v8 = v56;
  }
  else
  {
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    v35 = sub_100011088((uint64_t)&v62, &qword_1007FBC10);
  }
  v65 = TodayCard.media.getter(v35);
  if ((swift_dynamicCast(&v62, &v65, v16, v17, 6) & 1) != 0)
  {
    sub_100010F3C(&v62, (uint64_t)v66);
    v36 = v67;
    v37 = v68;
    sub_100011064(v66, v67);
    v38 = objc_msgSend(v7, "traitCollection");
    v39 = TodayCardMediaWithArtwork.artwork(for:)(v38, v36, v37);

    if (v39)
    {
      v40 = v67;
      v41 = v68;
      sub_100011064(v66, v67);
      v42 = dispatch thunk of TodayCardMediaWithArtwork.artworkLayoutsWithMetrics.getter(v40, v41);
      if (v42)
      {
        v43 = v42;
        if (v57 == 7)
          v44 = v58;
        else
          v44 = v57;
        sub_10011AF00(v39, v42, v44, v59, v60);
        swift_bridgeObjectRelease(v43);
        v45 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
        if (qword_1007F11E0 != -1)
          swift_once(&qword_1007F11E0, sub_1000DE890);
        v46 = qword_100851948;
        v47 = unk_100851950;
        v48 = TodayCardMediaList.isMediaDark.getter();
        v50 = TodayCard.editorialDisplayOptions.getter(v49);
        v51 = EditorialDisplayOptions.useMaterialBlur.getter(v50);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v52 = *(char **)(v45
                       + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView);
        swift_bridgeObjectRetain(v46);
        swift_bridgeObjectRetain(v47);
        sub_1000DF764(v46, v47);
        if ((v48 & 1) != 0)
          v53 = 2;
        else
          v53 = 1;
        *(_QWORD *)&v52[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = v53;
        sub_1000DF6A8();
        objc_msgSend(v52, "setHidden:", (v51 & 1) == 0);
        v34 = v39;
        goto LABEL_25;
      }
      swift_release(v39);
    }
    result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  }
  else
  {
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    result = sub_100011088((uint64_t)&v62, &qword_1007FBC10);
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                       + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
           + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) = 0;
  return result;
}

double sub_100117D08(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  char *v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  __n128 v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t *v41;
  void **v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  id v46;
  __n128 v47;
  uint64_t *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77[24];
  _BYTE v78[32];
  _BYTE v79[24];
  _BYTE v80[24];
  _BYTE v81[32];

  v6 = v5;
  v75 = a5;
  v10 = type metadata accessor for TodayCard.Style(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v76 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView);
  v73 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  v74 = v13;
  v14 = v5 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView;
  v15 = v5 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView;
  if ((*(_BYTE *)(*(_QWORD *)(v13
                             + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                 + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) & 1) != 0)
  {
    swift_beginAccess(v15, v81, 0, 0);
    if (*(_QWORD *)v14)
    {
      v16 = *(id *)v14;
      v17 = dispatch thunk of RiverView.dataSource.getter();

      swift_beginAccess(v17 + 32, v80, 1, 0);
      v18 = *(_QWORD *)(v17 + 32);
      *(_QWORD *)(v17 + 32) = _swiftEmptyArrayStorage;
      swift_release(v17);
      swift_bridgeObjectRelease(v18);
    }
    v19 = (void **)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    swift_beginAccess(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, v79, 0, 0);
    v20 = (char *)*v19;
    if (*v19)
    {
      v21 = (unint64_t *)&v20[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors];
      swift_beginAccess(&v20[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors], v78, 1, 0);
      v22 = *v21;
      *v21 = (unint64_t)_swiftEmptyArrayStorage;
      v23 = v20;
LABEL_12:
      sub_100136EF0(v22);

      swift_bridgeObjectRelease(v22);
    }
  }
  else
  {
    swift_beginAccess(v15, v81, 0, 0);
    if (*(_QWORD *)v14)
    {
      v24 = *(id *)v14;
      v25 = dispatch thunk of RiverView.dataSource.getter();

      v72 = TodayCardMediaList.lockups.getter(v26);
      swift_beginAccess(v25 + 32, v80, 1, 0);
      v27 = a2;
      v28 = *(_QWORD *)(v25 + 32);
      *(_QWORD *)(v25 + 32) = v72;
      swift_release(v25);
      v29 = v28;
      a2 = v27;
      swift_bridgeObjectRelease(v29);
      if (*(_QWORD *)v14)
      {
        v30 = *(id *)v14;
        v31 = dispatch thunk of RiverView.dataSource.getter();

        v32 = type metadata accessor for ArtworkLoader(0);
        v33 = *(_QWORD *)(v75 + qword_100854050);
        if (!v33)
          goto LABEL_59;
        v34 = *(_QWORD *)(v31 + 16);
        *(_QWORD *)(v31 + 16) = v33;
        swift_retain(v33);
        swift_release(v31);
        swift_release(v34);
      }
    }
    v35 = (id *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    swift_beginAccess(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, v79, 0, 0);
    if (*v35)
    {
      v23 = (char *)*v35;
      v37 = TodayCardMediaList.lockups.getter(v36);
      v38 = sub_100113274(v37);
      v72 = v6;
      v39 = a2;
      v40 = (unint64_t)v38;
      swift_bridgeObjectRelease(v37);
      v41 = (unint64_t *)&v23[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors];
      swift_beginAccess(&v23[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors], v78, 1, 0);
      v22 = *v41;
      *v41 = v40;
      a2 = v39;
      v6 = v72;
      goto LABEL_12;
    }
  }
  v42 = (void **)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView);
  v43 = swift_beginAccess(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView, v77, 0, 0);
  v44 = *v42;
  if (*v42)
  {
    if (*(_BYTE *)(*(_QWORD *)(v74 + v73) + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) == 1)
    {
      v45 = (uint64_t)v76;
      if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_isMediaDark) & 1) == 0)
      {
LABEL_16:
        v46 = v44;
        TodayCard.style.getter(v47);
        v45 = (uint64_t)v76;
LABEL_22:
        sub_10011B0E0((char *)v44, a1, a2, v45, a3);

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v45, v10);
        goto LABEL_23;
      }
    }
    else
    {
      if (*(_BYTE *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded))
        v48 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v48 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v45 = (uint64_t)v76;
      if (*(_BYTE *)(v6 + *v48) != 6)
        goto LABEL_16;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v11 + 104))(v45, enum case for TodayCard.Style.dark(_:), v10, v43);
    v49 = v44;
    goto LABEL_22;
  }
LABEL_23:
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded) & 1) != 0)
    return v43.n128_f64[0];
  v50 = TodayCardMediaList.lockups.getter(v43);
  v14 = v50;
  v10 = (unint64_t)v50 >> 62;
  if ((unint64_t)v50 >> 62)
  {
    if (v50 < 0)
      v31 = v50;
    else
      v31 = v50 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v50);
    v55 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRetain(v14);
    v54 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v14);
    if ((v54 & 0x8000000000000000) == 0)
      goto LABEL_60;
    __break(1u);
    goto LABEL_56;
  }
  if (*(uint64_t *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10) >= 6)
    v51 = 6;
  else
    v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((v50 & 0xC000000000000001) != 0)
  {
LABEL_29:
    if (v51)
    {
      type metadata accessor for Lockup(0);
      v52 = 0;
      do
      {
        v53 = v52 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v52);
        v52 = v53;
      }
      while (v51 != v53);
    }
    goto LABEL_32;
  }
  while (1)
  {
LABEL_32:
    if (v10)
    {
      if (v14 < 0)
        v56 = v14;
      else
        v56 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v55 = _CocoaArrayWrapper.subscript.getter(0, v51, v56);
      v10 = v57;
      v54 = v58;
      a2 = v59;
      swift_bridgeObjectRelease_n(v14, 2);
      if ((a2 & 1) == 0)
        goto LABEL_39;
    }
    else
    {
      v54 = 0;
      v55 = v14 & 0xFFFFFFFFFFFFFF8;
      v10 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
      a2 = (2 * v51) | 1;
      if ((a2 & 1) == 0)
        goto LABEL_39;
    }
    v60 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v61 = swift_unknownObjectRetain_n(v55, 2);
    v62 = (_QWORD *)swift_dynamicCastClass(v61, v60);
    if (!v62)
    {
      swift_unknownObjectRelease(v55);
      v62 = _swiftEmptyArrayStorage;
    }
    v63 = v62[2];
    swift_release(v62);
    if (__OFSUB__(a2 >> 1, v54))
    {
LABEL_56:
      __break(1u);
LABEL_57:
      swift_unknownObjectRelease(v64);
LABEL_39:
      v14 = (uint64_t)sub_10052E838(v55, v10, v54, a2);
      goto LABEL_46;
    }
    v64 = v55;
    if (v63 != (a2 >> 1) - v54)
      goto LABEL_57;
    v14 = swift_dynamicCastClass(v55, v60);
    if (!v14)
    {
      swift_unknownObjectRelease(v55);
      v14 = (uint64_t)_swiftEmptyArrayStorage;
    }
LABEL_46:
    swift_unknownObjectRelease(v55);
    v65 = *(void **)(v6
                   + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
    v66 = v75;
    if (!v65)
      goto LABEL_49;
    v6 = type metadata accessor for ArtworkLoader(0);
    v31 = *(_QWORD *)(v66 + qword_100854050);
    v67 = v65;
    if (v31)
      break;
    v32 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v6);
    __break(1u);
LABEL_59:
    v55 = v75;
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v32);
    __break(1u);
LABEL_60:
    if (v55 >= 6)
      v69 = 6;
    else
      v69 = v55;
    if (v55 >= 0)
      v51 = v69;
    else
      v51 = 6;
    swift_bridgeObjectRetain(v14);
    v70 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v14);
    if (v70 < v51)
      __break(1u);
    if ((v14 & 0xC000000000000001) != 0)
      goto LABEL_29;
  }
  v68 = v67;
  swift_retain(v31);
  sub_100127674(v14, v31, v66);

  swift_release(v31);
LABEL_49:
  v43.n128_u64[0] = swift_release(v14).n128_u64[0];
  return v43.n128_f64[0];
}

void sub_100118404()
{
  _BYTE *v0;
  uint64_t *v1;
  id *v2;
  id v3;
  id v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE v12[24];

  sub_1004F8C48();
  v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v1 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) == 0
    && v0[*v1] == 6
    && (v2 = (id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView],
        swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v12, 0, 0), *v2))
  {
    v3 = *v2;
    v4 = objc_msgSend(v0, "contentView");
    sub_100562A54();
    if (v5)
    {
      v7 = v5;
      v8 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v4, "setAccessibilityLabel:", v8, v6);

  }
  else
  {
    v4 = objc_msgSend(v0, "contentView");
    sub_100562A54();
    if (v9)
    {
      v11 = v9;
      v8 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v4, "setAccessibilityLabel:", v8, v10);
  }

}

void sub_100118564(void *a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t ObjectType;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  char *v24;
  id *v25;
  id v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  void **v37;
  void *v38;
  void **v39;
  void *v40;
  char *v41;
  id v42;
  void *v43;
  void *v44;
  char *v45;
  id v46;
  char *v47;
  id v48;
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[24];

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = a3 & 1;
  v10 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004F7F14((uint64_t)a1, a2, a3 & 1);
  v13 = swift_dynamicCastClass(a1, ObjectType);
  if (v13)
  {
    v14 = (char *)v13;
    v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard);
    v16 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard];
    *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard] = v15;
    v48 = a1;
    swift_retain(v15);
    swift_release(v16);
    v47 = *(char **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
    v17 = *(void **)&v47[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView];
    v18 = *(char **)&v14[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
    v19 = *(void **)&v18[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView];
    v20 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
    swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid], v52, 0, 0);
    sub_1000194E4(v20, (uint64_t)v12, &qword_1008027B0);
    if (v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v21 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v21 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v22 = v4[*v21];
    v23 = v17;
    v24 = v19;
    sub_1005F7D8C(v24, v9, (uint64_t)v12, v22);

    sub_100011088((uint64_t)v12, &qword_1008027B0);
    if (v9)
    {
      sub_100118988(v14);
    }
    else
    {
      v25 = (id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView];
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverView], v51, 0, 0);
      if (*v25)
      {
        v26 = *v25;
        dispatch thunk of RiverView.isAnimating.setter(0);

      }
      swift_unknownObjectWeakAssign(&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_otherCardToExchangeRiverWith], v14);
      v27 = (char *)*(id *)&v14[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_labelsView];
      sub_100566058(v27);

      v28 = (char *)*(id *)&v14[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer];
      sub_100127710(v28);

      objc_msgSend(v18, "frame");
      v29 = v47;
      objc_msgSend(v47, "setFrame:");
      objc_msgSend(v29, "setHidden:", objc_msgSend(v18, "isHidden"));
      v30 = *(char **)&v18[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView];
      v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style];
      v32 = *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_style + 8];
      v33 = *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle];
      swift_bridgeObjectRetain(v31);
      v34 = objc_msgSend(v30, "isHidden", swift_bridgeObjectRetain(v32).n128_f64[0]);
      v35 = *(char **)&v29[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView];
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v32);
      sub_1000DF764(v31, v32);
      v36 = 1;
      if (v33 == 2)
        v36 = 2;
      *(_QWORD *)&v35[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = v36;
      sub_1000DF6A8();
      objc_msgSend(v35, "setHidden:", v34);
      swift_bridgeObjectRelease(v32);
      objc_msgSend(v29, "setNeedsLayout", swift_bridgeObjectRelease(v31).n128_f64[0]);
      v37 = (void **)&v14[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
      swift_beginAccess(&v14[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v50, 0, 0);
      v38 = *v37;
      if (*v37)
      {
        v39 = (void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView];
        swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView], v49, 0, 0);
        v40 = *v39;
        if (v40)
        {
          v41 = v38;
          v42 = v40;
          sub_100566058(v41);

        }
      }
      v43 = *(void **)&v14[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
      if (v43)
      {
        v44 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
        if (v44)
        {
          v45 = v43;
          v46 = v44;
          sub_100127710(v45);

        }
      }
      sub_100118404();
    }
    objc_msgSend(v4, "setNeedsLayout");

  }
}

char *sub_100118988(char *result)
{
  _BYTE *v1;
  uint64_t *v2;
  char *v3;
  uint64_t KeyPath;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void **v13;
  void *v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26[24];

  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView]
                             + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)
                 + OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia) & 1) == 0)
  {
    if (v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    if (v1[*v2] == 6)
    {
      v3 = result;
      KeyPath = swift_getKeyPath(&unk_100676A80);
      v5 = objc_msgSend(v1, "contentView");
      v6 = swift_getKeyPath(&unk_100676A80);
      v7 = objc_msgSend(v3, "contentView");
      sub_10011B7F0(v1, KeyPath, v5, v3, v6, v7);
      swift_release(KeyPath);

      swift_release(v6);
      v8 = swift_getKeyPath(&unk_100676AA0);
      v9 = objc_msgSend(v1, "contentView");
      v10 = swift_getKeyPath(&unk_100676AA0);
      v11 = objc_msgSend(v3, "contentView");
      sub_10011B654(v1, v8, v9, v3, v10, v11);
      swift_release(v8);

      swift_release(v10);
      v12 = swift_getKeyPath(&unk_100676AC0);
      v13 = (void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView];
      swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView], v26, 0, 0);
      v14 = *v13;
      v15 = swift_getKeyPath(&unk_100676AC0);
      v16 = (id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView];
      swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_riverContainerView], &v25, 0, 0);
      v17 = *v16;
      v18 = *v16;
      v19 = v14;
      sub_10011B7F0(v1, v12, v14, v3, v15, v17);
      swift_release(v12);

      swift_release(v15);
      v20 = swift_getKeyPath(&unk_100676AE0);
      v21 = objc_msgSend(v1, "contentView");
      v22 = swift_getKeyPath(&unk_100676AE0);
      v23 = *v16;
      v24 = v23;
      sub_10011B7F0(v1, v20, v21, v3, v22, v23);
      swift_release(v20);

      swift_release(v22);
      objc_msgSend(v3, "setNeedsLayout");
      return (char *)objc_msgSend(v1, "setNeedsLayout");
    }
  }
  return result;
}

void sub_100118D44(uint64_t a1, unsigned int a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t (*v17)(void);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  __n128 v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  uint64_t (*v40)(void);
  uint64_t (*v41)(void);
  uint64_t (*v42)(void);
  uint64_t (*v43)(void);
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  char v58;
  __n128 v59;
  __n128 v60;
  id v61;
  char v62;
  __n128 v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75[12])(void);
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v9 = type metadata accessor for EditorialDisplayOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v74 = a4;
    v14 = TodayCard.media.getter(v11);
    v15 = type metadata accessor for TodayCardMediaList(0);
    v16 = (uint64_t (*)(void))swift_dynamicCastClass(v14, v15);
    if (v16)
    {
      v69 = v9;
      v73 = v14;
      v75[0] = v16;
      v17 = v16;
      v18 = TodayCardMediaWithArtwork.video(for:)(a5, v15, &protocol witness table for TodayCardMediaList);
      v72 = v17;
      v75[0] = v17;
      v71 = TodayCardMediaWithArtwork.artwork(for:)(a5, v15, &protocol witness table for TodayCardMediaList);
      v70 = v18;
      if (__PAIR128__(v71, v18) == 0)
      {
        if (a2 == 6)
          sub_10011A5F4(v74, a5);
        else
          sub_10011A7A8(v74, a2, 1, a5);
        v23 = v21;
        v24 = v22;
        v25.n128_f64[0] = PageGrid.columnWidth.getter(v20);
        v26 = v25.n128_f64[0] - v23;
        v68 = (char *)TodayCard.heading.getter(v25);
        v28 = v27;
        v67 = TodayCard.title.getter(v68);
        v30 = v29;
        v31 = TodayCard.media.getter(v67);
        v32 = swift_dynamicCastClass(v31, v15);
        if (v32)
        {
          v33 = TodayCardMediaList.marketingText.getter(v32);
          v35 = v34;
          v36 = v31;
          v37 = v33;
          v38 = swift_release(v36);
        }
        else
        {
          v38 = swift_release(v31);
          v37 = 0;
          v35 = 0;
        }
        v39 = v26 - v24;
        if (a2 == 6)
        {
          v40 = sub_100158F34;
          v41 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
          v42 = (uint64_t (*)(void))sub_10055BABC;
          v43 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        }
        else if (a2 == 4)
        {
          v40 = sub_1000D6130;
          v41 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
          v42 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
          v43 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        }
        else
        {
          v40 = (uint64_t (*)(void))sub_10055B6F8;
          v41 = (uint64_t (*)(void))sub_10055B8D0;
          v43 = (uint64_t (*)(void))sub_10055B8A8;
          v42 = (uint64_t (*)(void))sub_10055B6D0;
        }
        v75[0] = sub_100051330;
        v75[1] = 0;
        v75[2] = v42;
        v75[3] = 0;
        v75[4] = v43;
        v75[5] = 0;
        v75[6] = v41;
        v75[7] = 0;
        v75[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        v75[9] = 0;
        v75[10] = v40;
        v75[11] = 0;
        v44 = TodayCard.editorialDisplayOptions.getter(v38);
        v76 = 0x4000000000000000uLL;
        v77 = 0;
        v78 = 0x4018000000000000;
        v79 = 0;
        v80 = 1;
        v44.n128_f64[0] = v39;
        sub_100565648(v68, v28, v67, v30, v37, v35, v75, (uint64_t)v13, v44, 1.79769313e308, &v76, a5);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v30);
        v45 = swift_bridgeObjectRelease(v28);
        v19.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v69, v45);
      }
      v46 = TodayCardMediaList.lockups.getter(v19);
      v47 = v46;
      if ((unint64_t)v46 >> 62)
      {
        if (v46 >= 0)
          v46 &= 0xFFFFFFFFFFFFFF8uLL;
        v48 = _CocoaArrayWrapper.endIndex.getter(v46);
      }
      else
      {
        v48 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v49 = v70;
      swift_bridgeObjectRelease(v47);
      type metadata accessor for TodayListCardLockupContainer();
      sub_1001249DC(v48, a5);
      if ((UITraitCollection.isSizeClassRegular.getter(v50) & 1) != 0)
      {
        if (qword_1007F2A30 != -1)
          swift_once(&qword_1007F2A30, sub_10042D158);
        v52 = type metadata accessor for StaticDimension(0);
        sub_1000117A8(v52, (uint64_t)qword_1008561E0);
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v53 = sub_10000DF3C(&qword_1007F5840);
        v54 = swift_allocObject(v53, 40, 7);
        *(_OWORD *)(v54 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v54 + 32) = a5;
        v55 = a5;
        v56 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v54);
        dispatch thunk of AnyDimension.rawValue(in:)(v56, v52, &protocol witness table for StaticDimension);

      }
      else
      {
        PageGrid.safeAreaInsets.getter(v51);
      }
      v57 = objc_msgSend(a5, "preferredContentSizeCategory");
      v58 = static UIContentSizeCategory.> infix(_:_:)(v57, UIContentSizeCategoryExtraLarge);

      if ((v58 & 1) != 0)
      {
        v59.n128_u64[0] = 8.0;
        v60.n128_u64[0] = 8.0;
      }
      else
      {
        v59.n128_u64[0] = 20.0;
        v60.n128_u64[0] = 20.0;
      }
      static UIEdgeInsets.vertical(top:bottom:)(v59, v60);
      v61 = objc_msgSend(a5, "preferredContentSizeCategory");
      v62 = static UIContentSizeCategory.> infix(_:_:)(v61, UIContentSizeCategoryExtraLarge);

      if ((v62 & 1) != 0)
      {
        v63.n128_u64[0] = 8.0;
        v64.n128_u64[0] = 8.0;
      }
      else
      {
        v63.n128_u64[0] = 20.0;
        v64.n128_u64[0] = 20.0;
      }
      static UIEdgeInsets.vertical(top:bottom:)(v63, v64);
      v65 = v73;
      swift_release(v71);
      swift_release(v49);
      swift_release(v65);
    }
    else
    {
      swift_release(v14);
    }
  }
  else
  {
    sub_1004FAAD8(a2, a4, a5);
  }
}

void sub_1001192F4()
{
  uint64_t v0;
  id *v1;
  id v2;
  _BYTE v3[24];

  sub_1005627E0();
  v1 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_topLabelsView, v3, 0, 0);
  if (*v1)
  {
    v2 = *v1;
    sub_1005627E0();

  }
}

double sub_100119360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t KeyPath;
  __n128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::OpaquePointer v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;

  v5 = type metadata accessor for PageGrid(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TodayCard(0);
  v10 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v11 = ItemLayoutContext.typedModel<A>(as:)(&v41, v9, v9, v10);
  v13 = v41;
  if (v41)
  {
    v14 = TodayCard.media.getter(v11);
    swift_release(v13);
    v15 = type metadata accessor for TodayCardMediaList(0);
    v16 = swift_dynamicCastClass(v14, v15);
    if (v16)
    {
      v18 = (void *)v16;
      v19 = TodayCardMediaList.lockups.getter(v17);
      v39 = a2;
      sub_1001282B4(v19);
      swift_bridgeObjectRelease(v19);
      v20 = type metadata accessor for TodayPageSectionGridTracker();
      v21 = type metadata accessor for BaseObjectGraph(0);
      inject<A, B>(_:from:)(&v41, v20, a3, v20, v21);
      v22 = (uint64_t)v41;
      sub_100106FC4();
      HIDWORD(v38) = v23;
      v41 = v18;
      KeyPath = swift_getKeyPath(&unk_100676A20);
      ItemLayoutContext.subscript.getter(&v40);
      v25 = swift_release(KeyPath);
      v26 = v40;
      v27 = TodayCardMediaWithArtwork.prefetchableArtwork(for:)(v40, v15, &protocol witness table for TodayCardMediaList, v25);

      if (v27)
      {
        v28 = TodayCardMediaList.artworkLayoutsWithMetrics.getter();
        if (v28)
        {
          v29 = v28;
          v30 = swift_getKeyPath(&unk_100676A50);
          ItemLayoutContext.subscript.getter(v8);
          swift_release(v30);
          v31 = swift_getKeyPath(&unk_100676A20);
          ItemLayoutContext.subscript.getter(&v41);
          swift_release(v31);
          v32 = v41;
          v33 = sub_1005F8A08(v27, v29, HIDWORD(v38), 177.0, (uint64_t)v8, v41);
          swift_bridgeObjectRelease(v29);

          (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
          v34 = sub_10000DF3C(&qword_1007F5840);
          v35 = swift_allocObject(v34, 40, 7);
          *(_OWORD *)(v35 + 16) = xmmword_10066FE60;
          *(_QWORD *)(v35 + 32) = v33;
          v41 = (void *)v35;
          specialized Array._endMutation()(v35);
          v36._rawValue = v41;
          swift_retain(v33);
          ArtworkLoader.prefetchArtwork(using:)(v36);
          swift_release(v14);
          swift_release(v22);
          swift_release(v27);
          swift_release(v33);
          *(_QWORD *)&result = swift_bridgeObjectRelease(v36._rawValue).n128_u64[0];
          return result;
        }
        swift_release(v27);
      }
      swift_release(v14);
      v37 = v22;
    }
    else
    {
      v37 = v14;
    }
    *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  }
  return result;
}

void sub_100119640(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  id v6;

  v6 = objc_retain(*(id *)(*(_QWORD *)(v3
                                     + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                         + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView));
  sub_1005F7EA8(a1, a3);

}

uint64_t sub_100119704()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v21[40];
  uint64_t v22;
  char v23[40];

  v1 = v0;
  v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if ((v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) == 0
    && v0[*v2] == 6
    && (v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer]) != 0)
  {
    v4 = sub_10000DF3C(&qword_1007F5840);
    inited = swift_initStackObject(v4, v21);
    *(_OWORD *)(inited + 16) = xmmword_10066FE60;
    v6 = v3;
    v7 = objc_msgSend(v1, "contentView");
    *(_QWORD *)(inited + 32) = v7;
    v22 = inited;
    specialized Array._endMutation()(v7);
    v8 = v22;
    v9 = objc_msgSend(v6, "subviews");
    v10 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    v22 = v8;
    sub_100019718(v11);
    v12 = v22;
    v13 = sub_100419684(v22);
    swift_bridgeObjectRelease(v12);

  }
  else
  {
    v14 = sub_10000DF3C(&qword_1007F5840);
    v15 = swift_initStackObject(v14, v23);
    *(_OWORD *)(v15 + 16) = xmmword_10066FE60;
    v16 = objc_msgSend(v1, "contentView");
    *(_QWORD *)(v15 + 32) = v16;
    v22 = v15;
    specialized Array._endMutation()(v16);
    v17 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer], "subviews");
    v18 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v22 = v15;
    sub_100019718(v19);
    v13 = sub_100419684(v15);
    swift_bridgeObjectRelease(v15);
  }
  return v13;
}

uint64_t sub_1001199BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_todayCard));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer));

  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_cardStyle, &qword_1007F5808);
  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_otherCardToExchangeRiverWith);
}

uint64_t sub_100119B50()
{
  return type metadata accessor for ListTodayCardCollectionViewCell(0);
}

uint64_t type metadata accessor for ListTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007FBB98;
  if (!qword_1007FBB98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ListTodayCardCollectionViewCell);
  return result;
}

void sub_100119B94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = "\b";
  v4[7] = "\b";
  v4[8] = "\b";
  sub_10006F8D0(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    v4[10] = &unk_1006768B8;
    v4[11] = &unk_1006768D0;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 608);
  }
}

uint64_t sub_100119C3C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)+ OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView)+ OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_videoView);
}

void sub_100119C78(void *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *Strong;
  char *v5;
  uint64_t v6;

  v2 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView]
     + OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_videoView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  swift_unknownObjectWeakAssign(v3, a1);
  v5 = v2;
  sub_1001CC8B8(Strong, v6);

}

uint64_t (*sub_100119D10(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100114928(v2);
  return sub_10001B55C;
}

uint64_t sub_100119D54()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E99C(&qword_1007FBC00, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_1006769B0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100119D9C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E99C(&qword_1007FBC00, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_1006769B0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_100119DFC(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E99C(&qword_1007FBC00, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_1006769B0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001B55C;
}

char *sub_100119E78()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  v1 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  v2 = type metadata accessor for StoryCardMediaView(0);
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView;
  if (qword_1007F11F0 != -1)
    swift_once(&qword_1007F11F0, sub_1000DEB34);
  v6 = off_1007FA9E0;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v6);
  *(_QWORD *)&v4[v5] = sub_1000DEB5C(v7);

  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for HeaderView();
  v8 = (char *)objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView];
  v10 = v8;
  objc_msgSend(v10, "addSubview:", v9);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView]);
  objc_msgSend(v10, "setClipsToBounds:", 1);

  return v10;
}

void sub_10011A004()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  char v4;
  uint64_t v5;
  double v6;
  double v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for HeaderView();
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setFrame:");
  sub_10011A2F4();
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = UITraitCollection.prefersRightToLeftLayouts.getter();

  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView];
  v6 = 0.174532925;
  if ((v4 & 1) != 0)
    v6 = -0.174532925;
  v7 = *(double *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_rotationAngle);
  *(double *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_rotationAngle) = v6;
  if (v6 != v7)
    sub_1000DF328();
}

void sub_10011A120(uint64_t a1, uint64_t a2, double a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  id v16;
  uint64_t v17;
  id v18;

  v4 = v3;
  v8 = type metadata accessor for CornerStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005F80D4(a1, a2, a3);
  v12 = a2 & 0xC;
  if ((a2 & 0xC) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    if (v13 == enum case for CornerStyle.continuous(_:))
    {
      objc_msgSend(v4, "_setContinuousCornerRadius:", a3);
    }
    else
    {
      v14 = v13;
      v15 = enum case for CornerStyle.arc(_:);
      objc_msgSend(v4, "_setCornerRadius:", a3);
      if (v14 != v15)
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    v16 = objc_msgSend(v4, "layer");
    objc_msgSend(v16, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(v12));

  }
  else
  {
    v18 = objc_msgSend(v4, "layer");
    objc_msgSend(v18, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(a2 & 3));

  }
}

void sub_10011A2F4()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  char *v5;
  double MinX;
  double v7;
  double v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView];
  objc_msgSend(v2, "frame");
  v3 = CGRectGetHeight(v9) * 0.5 * 0.176326981;
  objc_msgSend(v2, "frame");
  v4 = ceil(v3 + CGRectGetHeight(v10));
  v5 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView];
  objc_msgSend(v2, "frame");
  MinX = CGRectGetMinX(v11);
  objc_msgSend(v2, "frame");
  v7 = CGRectGetHeight(v12) + -145.0;
  if (v7 < 0.0)
    v8 = 0.0;
  else
    v8 = v7;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v5, "setFrame:", MinX, v8, CGRectGetWidth(v13), v4);
  *(double *)&v5[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientStartY] = v3 / v4;
  sub_1000DF328();
  *(double *)&v5[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_gradientEndY] = (v3 + 145.0) / v4;
  sub_1000DF328();
}

id sub_10011A460()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeaderView()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView);
}

uint64_t sub_10011A4EC(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E99C(&qword_1007FBBE0, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_10069339C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10011A534()
{
  return sub_10000E99C(&qword_1007FBBE8, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100676940);
}

uint64_t sub_10011A560()
{
  return sub_10000E99C(&qword_1007FBBF0, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100676970);
}

uint64_t sub_10011A58C()
{
  return sub_10000E99C(&qword_1007FBBF8, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_10068E2B0);
}

uint64_t sub_10011A5B8(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E99C(&qword_1007FBC00, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_1006769B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_10011A5F4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  uint64_t v18;

  v4 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1004FAFA8((uint64_t)v6, a2);
  v9 = sub_100011088((uint64_t)v6, &qword_1008027B0);
  if ((UITraitCollection.isSizeClassRegular.getter(v9) & 1) != 0)
  {
    if (qword_1007F2A30 != -1)
      swift_once(&qword_1007F2A30, sub_10042D158);
    v11 = type metadata accessor for StaticDimension(0);
    sub_1000117A8(v11, (uint64_t)qword_1008561E0);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v12 = sub_10000DF3C(&qword_1007F5840);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v13 + 32) = a2;
    v14 = a2;
    v15 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v13);
    v16 = dispatch thunk of AnyDimension.rawValue(in:)(v15, v11, &protocol witness table for StaticDimension);

  }
  else
  {
    v16 = PageGrid.safeAreaInsets.getter(v10);
  }
  return v16 + 20.0;
}

void sub_10011A7A8(uint64_t a1, int a2, char a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  _BYTE *v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t, __n128);
  id v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  _BYTE v49[4];
  int v50;
  id v51;

  v51 = a4;
  v50 = a2;
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v49[-v11];
  v13 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v13);
  v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v49[-v17];
  __chkstk_darwin(v19);
  v21 = &v49[-v20];
  v24 = __chkstk_darwin(v22);
  v25 = &v49[-v23];
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16);
  if ((a3 & 1) != 0)
  {
    v26(&v49[-v23], a1, v6, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    sub_1000194E4((uint64_t)v25, (uint64_t)v21, &qword_1008027B0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v21, 1, v6) == 1)
    {
      sub_100011088((uint64_t)v21, &qword_1008027B0);
      v27 = v51;
    }
    else
    {
      v28 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v21, v6);
      v29 = PageGrid.horizontalDirectionalMargins.getter(v28);
      v31 = 34.0;
      if (v30 <= 34.0)
        v32 = v30;
      else
        v32 = 34.0;
      PageGrid.horizontalDirectionalMargins.getter(v29);
      if (v33 <= 34.0)
        v31 = v33;
      v27 = v51;
      v34 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v51, "layoutDirection"), 0.0, v32, 0.0, v31);
      (*(void (**)(_BYTE *, uint64_t, double))(v7 + 8))(v12, v6, v34);
    }
    v35 = sub_100011088((uint64_t)v25, &qword_1008027B0);
    if ((UITraitCollection.isSizeClassRegular.getter(v35) & 1) != 0)
    {
      if (qword_1007F2A30 != -1)
        swift_once(&qword_1007F2A30, sub_10042D158);
      v37 = type metadata accessor for StaticDimension(0);
      sub_1000117A8(v37, (uint64_t)qword_1008561E0);
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v38 = sub_10000DF3C(&qword_1007F5840);
      v39 = swift_allocObject(v38, 40, 7);
      *(_OWORD *)(v39 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v39 + 32) = v27;
      v40 = v27;
      v41 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v39);
      dispatch thunk of AnyDimension.rawValue(in:)(v41, v37, &protocol witness table for StaticDimension);

    }
    else
    {
      PageGrid.safeAreaInsets.getter(v36);
    }
  }
  else
  {
    v26(v18, a1, v6, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
    sub_1000194E4((uint64_t)v18, (uint64_t)v15, &qword_1008027B0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    {
      sub_100011088((uint64_t)v15, &qword_1008027B0);
    }
    else
    {
      v42 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v15, v6);
      v43 = 12.0;
      v44 = 12.0;
      if (v50 != 4)
      {
        v45 = PageGrid.horizontalDirectionalMargins.getter(v42);
        v44 = 20.0;
        v43 = v46 <= 20.0 ? v46 : 20.0;
        PageGrid.horizontalDirectionalMargins.getter(v45);
        if (v47 <= 20.0)
          v44 = v47;
      }
      v48 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v51, "layoutDirection"), 0.0, v43, 0.0, v44);
      (*(void (**)(_BYTE *, uint64_t, double))(v7 + 8))(v9, v6, v48);
    }
    sub_100011088((uint64_t)v18, &qword_1008027B0);
  }
}

uint64_t sub_10011ABF0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;

  v7 = v6;
  v55 = a4;
  v56 = a5;
  v54 = a3;
  v53 = a2;
  v9 = type metadata accessor for VideoControls(0, a6);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - v13;
  v15 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VideoFillMode(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for VideoConfiguration(0, v23);
  v51 = *(_QWORD *)(v24 - 8);
  v52 = v24;
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v20 + 104))(v22, enum case for VideoFillMode.scaleAspectFill(_:), v19, v25);
  v29 = Video.preview.getter(v28);
  Artwork.size.getter(v29);
  AspectRatio.init(_:_:)(v30);
  swift_release(v29);
  v31 = type metadata accessor for AspectRatio(0);
  v32 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 0, 1, v31);
  v33 = Video.playbackControls.getter(v32);
  v34 = Video.autoPlayPlaybackControls.getter(v33);
  v35 = 0;
  if ((Video.canPlayFullScreen.getter(v34) & 1) != 0)
    v35 = v7[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v36 = Video.allowsAutoPlay.getter();
  v37 = Video.looping.getter();
  v38 = VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v22, v18, v14, v11, v35, v36 & 1, v37 & 1, 0, 0, 1);
  v39 = Video.preview.getter(v38);
  v40 = objc_msgSend(v7, "traitCollection");
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = sub_1005F8A08(v39, v53, v54, 177.0, v55, v40);
  swift_release(v39);

  v45 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  v46 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  v47 = objc_retain(*(id *)(v45
                          + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView));
  sub_1005F8F58(a1, v41, (uint64_t)v27, v44, v43, v42, v56);

  v48 = v7[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
  v49 = *(id *)(v45 + v46);
  sub_1005F7C4C(v48);
  swift_release(v44);

  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v27, v52);
}

void sub_10011AF00(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *Strong;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v28;

  v6 = v5;
  v12 = objc_msgSend(v6, "traitCollection");
  v26 = sub_1005F8A08(a1, a2, a3, 177.0, a4, v12);

  v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  v14 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  v15 = *(void **)(v13
                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
  v16 = type metadata accessor for ArtworkLoader(0);
  v17 = type metadata accessor for BaseObjectGraph(0);
  v18 = v15;
  inject<A, B>(_:from:)(&v28, v16, a5, v16, v17);
  v19 = v28;
  v20 = *(char **)&v18[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingVideoView];
  v21 = &v20[OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_videoView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v20[OBJC_IVAR____TtC22SubscribePageExtension18RevealingVideoView_videoView]);
  swift_unknownObjectWeakAssign(v21, 0);
  sub_1001CC8B8(Strong, v23);

  v24 = *(void **)&v18[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_revealingImageView];
  sub_1004536C0(v26, a2, a4, a3, v19);
  objc_msgSend(v24, "setHidden:", 0);
  objc_msgSend(v20, "setHidden:", 1);
  swift_release(v19);
  v18[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia] = 1;

  LOBYTE(v6) = v6[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
  v25 = *(id *)(v13 + v14);
  sub_1005F7C4C((char)v6);
  swift_release(v26);

}

id sub_10011B0E0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  char v28;
  char *v29;
  __n128 v30;
  char *v31;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[13];

  v38 = a1;
  v39 = a4;
  v6 = type metadata accessor for EditorialDisplayOptions(0);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F51D8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = TodayCard.heading.getter(v10);
  v14 = v13;
  v36 = TodayCard.title.getter(v37);
  v16 = v15;
  v35 = TodayCard.shortTitle.getter();
  v18 = v17;
  TodayCard.titleCharacteristics.getter();
  v19 = type metadata accessor for StringCharacteristics(0);
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
  v34 = TodayCardMediaList.marketingText.getter(v20);
  v22 = v21;
  TodayCard.editorialDisplayOptions.getter(v23);
  if (a5 == 6)
  {
    v24 = sub_100158F34;
    v25 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v26 = sub_10055BABC;
    v27 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else if (a5 == 4)
  {
    v24 = sub_1000D6130;
    v25 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v26 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v27 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else
  {
    v24 = sub_10055B6F8;
    v25 = sub_10055B8D0;
    v27 = sub_10055B8A8;
    v26 = sub_10055B6D0;
  }
  v42[0] = sub_100051330;
  v42[1] = 0;
  v42[2] = v26;
  v42[3] = 0;
  v42[4] = v27;
  v42[5] = 0;
  v42[6] = v25;
  v42[7] = 0;
  v42[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v42[9] = 0;
  v42[10] = v24;
  v42[11] = 0;
  v28 = sub_100113C84();
  v33 = a5;
  v29 = v38;
  sub_100561F94(v37, v14, v36, v16, v35, v18, (uint64_t)v12, v34, v22, v39, v33, (uint64_t)v8, 0, 0, 0, (uint64_t)v42, v28 & 1);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16);
  v30 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v8, v41, v30);
  sub_100011088((uint64_t)v12, &qword_1007F51D8);
  sub_100113C84();
  v31 = &v29[qword_100818340];
  *(_QWORD *)v31 = 0x4000000000000000;
  *((_QWORD *)v31 + 1) = 0;
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0x4018000000000000;
  *((_QWORD *)v31 + 4) = 0;
  v31[40] = 1;
  return objc_msgSend(v29, "setNeedsLayout");
}

_BYTE *sub_10011B3A8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *result;
  uint64_t *v5;
  id v6;
  char v7;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_headerView];
  v3 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  result = *(_BYTE **)(v2
                     + OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView);
  if (result[OBJC_IVAR____TtC22SubscribePageExtension18StoryCardMediaView_hasMedia] != 1)
    return v0;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v5 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v5 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[*v5] != 6)
  {
    v6 = objc_msgSend(v0, "traitCollection");
    v7 = UITraitCollection.prefersAccessibilityLayouts.getter(v6);

    result = v1;
    if ((v7 & 1) == 0)
      return *(_BYTE **)(v2 + v3);
  }
  return result;
}

double sub_10011B478(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;

  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v23 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v23 - v13, a1, v4, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  sub_1000194E4((uint64_t)v14, (uint64_t)v10, &qword_1008027B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_100011088((uint64_t)v10, &qword_1008027B0);
  }
  else
  {
    v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    v16 = PageGrid.horizontalDirectionalMargins.getter(v15);
    v18 = 20.0;
    if (v17 <= 20.0)
      v19 = v17;
    else
      v19 = 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v16);
    if (v20 <= 20.0)
      v18 = v20;
    v21 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(a2, "layoutDirection"), 0.0, v19, 0.0, v18);
    (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v21);
  }
  sub_100011088((uint64_t)v14, &qword_1008027B0);
  return 20.0;
}

void sub_10011B654(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v9;
  void (*v10)(_QWORD *, _QWORD);
  id *v11;
  id v12;
  id v13;
  id v14;
  void (*v15)(_QWORD *, _QWORD);
  id *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD v27[4];
  id v28;

  v28 = a4;
  v9 = a4;
  v10 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a5);
  v12 = *v11;
  v13 = *v11;
  v10(v27, 0);

  objc_msgSend(v13, "removeFromSuperview");
  v28 = a1;
  v14 = a1;
  v15 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a2);
  v17 = *v16;
  v18 = *v16;
  v15(v27, 0);

  objc_msgSend(v18, "removeFromSuperview");
  if (v12)
  {
    v27[0] = v14;
    v28 = v12;
    v19 = v13;
    v20 = v14;
    swift_setAtReferenceWritableKeyPath(v27, a2, &v28);

    objc_msgSend(a3, "addSubview:", v19);
  }
  if (v17)
  {
    v27[0] = v9;
    v28 = v17;
    v21 = v18;
    v22 = v9;
    v23 = v21;
    swift_setAtReferenceWritableKeyPath(v27, a5, &v28);

    if (a6)
    {
      v24 = v23;
      objc_msgSend(a6, "addSubview:", v24);

    }
  }

}

void sub_10011B7F0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v9;
  void (*v10)(_QWORD *, _QWORD);
  id *v11;
  id v12;
  id v13;
  id v14;
  void (*v15)(_QWORD *, _QWORD);
  id *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD v27[4];
  id v28;

  v28 = a4;
  v9 = a4;
  v10 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a5);
  v12 = *v11;
  v13 = *v11;
  v10(v27, 0);

  if (v12)
    objc_msgSend(v13, "removeFromSuperview");
  v28 = a1;
  v14 = a1;
  v15 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a2);
  v17 = *v16;
  v18 = *v16;
  v15(v27, 0);

  if (v17)
    objc_msgSend(v18, "removeFromSuperview");
  if (v12)
  {
    v27[0] = v14;
    v28 = v12;
    v19 = v13;
    v20 = v14;
    swift_setAtReferenceWritableKeyPath(v27, a2, &v28);

    if (a3)
      objc_msgSend(a3, "addSubview:", v19);
  }
  if (v17)
  {
    v27[0] = v9;
    v28 = v17;
    v21 = v18;
    v22 = v9;
    v23 = v21;
    swift_setAtReferenceWritableKeyPath(v27, a5, &v28);

    if (a6)
    {
      v24 = v23;
      objc_msgSend(a6, "addSubview:", v24);

    }
  }

}

void sub_10011B99C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_mediaView;
  v3 = type metadata accessor for StoryCardMediaView(0);
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtensionP33_8767515069BB09BCE0E30A883EC3EF0710HeaderView_gradientBlurView;
  if (qword_1007F11F0 != -1)
    swift_once(&qword_1007F11F0, sub_1000DEB34);
  v5 = off_1007FA9E0;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v5);
  *(_QWORD *)&v1[v4] = sub_1000DEB5C(v6);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ListTodayCardCollectionViewCell.swift", 60, 2, 1416, 0);
  __break(1u);
}

uint64_t sub_10011BA8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10011BAB0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC22SubscribePageExtension31ListTodayCardCollectionViewCell_lockupContainer), "layoutIfNeeded");
}

uint64_t sub_10011BACC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011BADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10011BAEC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_10011BAF4(_QWORD *a1)
{
  destroy for ListTodayCardLayout(a1);
  return a1;
}

_QWORD *sub_10011BB28(_QWORD *a1)
{
  destroy for ExtraWideListTodayCardLayout(a1);
  return a1;
}

uint64_t sub_10011BB5C(uint64_t a1)
{
  destroy for MiniListCardLayout(a1);
  return a1;
}

uint64_t sub_10011BB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t (*v95)(char *, uint64_t);
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  char *v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t);
  char *v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __n128 v168;
  __n128 v169;
  int *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  __n128 v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t, uint64_t);
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  __n128 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  __n128 v198;
  __n128 v199;
  __n128 v200;
  uint64_t v201;
  __n128 v202;
  uint64_t v203;
  __n128 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  const char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  __n128 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  __n128 v234;
  __n128 v235;
  void (*v236)(char *, uint64_t, uint64_t);
  char *v237;
  uint64_t v238;
  __n128 v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  __n128 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  __n128 v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  __n128 v269;
  __n128 v270;
  __n128 v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void (*v275)(char *, char *, uint64_t);
  char *v276;
  uint64_t v277;
  __n128 v278;
  int v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  void (*v286)(char *, char *, uint64_t);
  char *v287;
  uint64_t v288;
  __n128 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  __n128 v293;
  uint64_t v294;
  void (*v295)(char *, char *, uint64_t);
  _QWORD *v296;
  uint64_t v297;
  __n128 v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  __n128 v307;
  __n128 v308;
  __n128 v309;
  uint64_t v310;
  void (*v311)(char *, char *, uint64_t);
  char *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  const char *v320;
  char *v321;
  uint64_t v322;
  __n128 v323;
  uint64_t v324;
  uint64_t v325;
  void (*v326)(char *, char *, uint64_t);
  char *v327;
  _QWORD *v328;
  uint64_t v329;
  __n128 v330;
  uint64_t v331;
  uint64_t v332;
  __n128 v333;
  char v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  __n128 v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  __n128 v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  __n128 v349;
  uint64_t v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  __n128 v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  __n128 v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  __n128 v367;
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  void (*v375)(char *, char *, uint64_t);
  char *v376;
  uint64_t v377;
  __n128 v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void (*v385)(char *, char *, uint64_t);
  char *v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  __n128 v391;
  uint64_t v392;
  uint64_t v393;
  _QWORD *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t *v402;
  uint64_t v403;
  char *v404;
  char *v405;
  uint64_t v406;
  __n128 v407;
  uint64_t v408;
  uint64_t v409;
  __n128 v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  __n128 v418;
  _QWORD *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  char *v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  __n128 v434;
  __n128 v435;
  uint64_t v436;
  __n128 v437;
  _QWORD *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  const char *v448;
  uint64_t v449;
  __n128 v450;
  uint64_t v451;
  void *v452;
  uint64_t v453;
  char *v454;
  char *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  void (*v461)(char *, char *, uint64_t);
  char *v462;
  uint64_t v463;
  __n128 v464;
  uint64_t v465;
  uint64_t v466;
  char *v467;
  uint64_t v468;
  __n128 v469;
  uint64_t v470;
  uint64_t v471;
  int v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  void (*v476)(char *, char *, uint64_t);
  char *v477;
  uint64_t v478;
  __n128 v479;
  uint64_t v480;
  uint64_t v481;
  char *v482;
  uint64_t v483;
  __n128 v484;
  uint64_t v485;
  uint64_t v486;
  int v487;
  uint64_t v488;
  uint64_t v489;
  __n128 v490;
  uint64_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  int v498;
  _QWORD *v499;
  _QWORD *v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t *v509;
  uint64_t v510;
  uint64_t v511;
  char *v512;
  _QWORD *v513;
  _QWORD *v514;
  char *v515;
  _QWORD *v516;
  uint64_t v517;
  char *v518;
  char *v519;
  uint64_t v520;
  char *v521;
  char *v522;
  char *v523;
  char *v524;
  uint64_t v525;
  uint64_t *v526;
  _QWORD *v527;
  uint64_t v528;
  char *v529;
  _QWORD *v530;
  char *v531;
  char *v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  char *v536;
  _QWORD *v537;
  char *v538;
  char *v539;
  char *v540;
  char *v541;
  uint64_t v542;
  char *v543;
  char *v544;
  char *v545;
  char *v546;
  uint64_t v547;
  char *v548;
  char *v549;
  char *v550;
  char *v551;
  uint64_t v552;
  uint64_t v553;
  char *v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t *v560;
  uint64_t v561;
  uint64_t v562;
  __int128 v563;
  uint64_t v564;

  v559 = a3;
  v560 = (uint64_t *)a2;
  v4 = sub_10000DF3C(&qword_1007FBC30);
  __chkstk_darwin(v4);
  v527 = (uint64_t **)((char *)&v509 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v528 = type metadata accessor for ComponentOverflowData(0);
  v525 = *(_QWORD *)(v528 - 8);
  __chkstk_darwin(v528);
  v526 = (uint64_t *)((char *)&v509 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C((uint64_t *)&unk_10080BCB0);
  __chkstk_darwin(v7);
  v530 = (uint64_t **)((char *)&v509 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C((uint64_t *)&unk_1008083B0);
  __chkstk_darwin(v9);
  v537 = (uint64_t **)((char *)&v509 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v534 = type metadata accessor for AdamId(0);
  v533 = *(_QWORD *)(v534 - 8);
  v11 = __chkstk_darwin(v534);
  v532 = (char *)&v509 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v555 = type metadata accessor for OSLogger(0, v11);
  v553 = *(_QWORD *)(v555 - 8);
  __chkstk_darwin(v555);
  v554 = (char *)&v509 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v14);
  v524 = (char *)&v509 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v523 = (char *)&v509 - v17;
  __chkstk_darwin(v18);
  v522 = (char *)&v509 - v19;
  __chkstk_darwin(v20);
  v519 = (char *)&v509 - v21;
  __chkstk_darwin(v22);
  v520 = (uint64_t)&v509 - v23;
  __chkstk_darwin(v24);
  v517 = (uint64_t)&v509 - v25;
  __chkstk_darwin(v26);
  v531 = (char *)&v509 - v27;
  __chkstk_darwin(v28);
  v551 = (char *)&v509 - v29;
  __chkstk_darwin(v30);
  v538 = (char *)&v509 - v31;
  __chkstk_darwin(v32);
  v539 = (char *)&v509 - v33;
  __chkstk_darwin(v34);
  v542 = (uint64_t)&v509 - v35;
  __chkstk_darwin(v36);
  v541 = (char *)&v509 - v37;
  __chkstk_darwin(v38);
  v544 = (char *)&v509 - v39;
  __chkstk_darwin(v40);
  v545 = (char *)&v509 - v41;
  __chkstk_darwin(v42);
  v548 = (char *)&v509 - v43;
  __chkstk_darwin(v44);
  v546 = (char *)&v509 - v45;
  __chkstk_darwin(v46);
  v48 = (char *)&v509 - v47;
  v49 = type metadata accessor for URL(0);
  v556 = *(_QWORD *)(v49 - 8);
  v557 = v49;
  __chkstk_darwin(v49);
  v521 = (char *)&v509 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v518 = (char *)&v509 - v52;
  __chkstk_darwin(v53);
  v515 = (char *)&v509 - v54;
  __chkstk_darwin(v55);
  v512 = (char *)&v509 - v56;
  __chkstk_darwin(v57);
  v529 = (char *)&v509 - v58;
  __chkstk_darwin(v59);
  v549 = (char *)&v509 - v60;
  __chkstk_darwin(v61);
  v536 = (char *)&v509 - v62;
  __chkstk_darwin(v63);
  v535 = (char *)&v509 - v64;
  __chkstk_darwin(v65);
  v540 = (char *)&v509 - v66;
  __chkstk_darwin(v67);
  v543 = (char *)&v509 - v68;
  __chkstk_darwin(v69);
  v71 = (char *)&v509 - v70;
  __chkstk_darwin(v72);
  v74 = (char *)&v509 - v73;
  v76 = __chkstk_darwin(v75);
  v550 = (char *)&v509 - v77;
  v78 = type metadata accessor for FlowPage(0, v76);
  v79 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v81 = (char *)&v509 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for FlowDestination(0);
  v558 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v516 = (uint64_t **)((char *)&v509 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v84);
  v514 = (uint64_t **)((char *)&v509 - v85);
  __chkstk_darwin(v86);
  v513 = (uint64_t **)((char *)&v509 - v87);
  __chkstk_darwin(v88);
  v90 = (uint64_t *)((char *)&v509 - v89);
  v92 = __chkstk_darwin(v91);
  v94 = (uint64_t *)((char *)&v509 - v93);
  FlowAction.page.getter(v92);
  v511 = v79;
  v95 = *(uint64_t (**)(char *, uint64_t))(v79 + 88);
  v552 = v78;
  v96 = v95(v81, v78);
  if ((_DWORD)v96 == enum case for FlowPage.search(_:))
  {
    v98 = type metadata accessor for SearchAction(0);
    v99 = __chkstk_darwin(v98);
    v100 = (uint64_t)v560;
    *(&v509 - 2) = v560;
    FlowAction.pageData<A>(as:or:)(&v563, v99);
    swift_release(a1);
    sub_100011088(v100, &qword_1007F6E90);
    *v90 = v563;
    swift_storeEnumTagMultiPayload(v90, v82, 4);
    sub_10009055C((uint64_t)v90, (uint64_t)v94, type metadata accessor for FlowDestination);
    v101 = v559;
    v102 = v82;
LABEL_76:
    v119 = v558;
    goto LABEL_77;
  }
  v103 = v90;
  v509 = v94;
  v547 = a1;
  v510 = v82;
  if ((_DWORD)v96 == enum case for FlowPage.product(_:))
  {
    v104 = v547;
    FlowAction.pageUrl.getter();
    v106 = v556;
    v105 = v557;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v48, 1, v557) == 1)
    {
      sub_100011088((uint64_t)v48, (uint64_t *)&unk_1007F5150);
      v107 = (uint64_t)v560;
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v108 = v555;
      v109 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v111 = v553;
      v110 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v109, v108);
      v112 = sub_10000DF3C(&qword_1007FD430);
      v113 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v114 = swift_allocObject(v112, ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ 2 * *(_QWORD *)(v113 + 72), *(unsigned __int8 *)(v113 + 80) | 7);
      *(_OWORD *)(v114 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0x20676E697373694DLL, 0xEF726F66204C5255);
      v564 = v552;
      sub_1000117C0(&v563);
      FlowAction.page.getter(v115);
      static LogMessage.sensitive(_:)(&v563);
      sub_100011088((uint64_t)&v563, &qword_1007F6E90);
      Logger.debug(_:)(v114, v108, &protocol witness table for OSLogger);
      swift_release(v104);
      v116 = swift_bridgeObjectRelease(v114);
      (*(void (**)(char *, uint64_t, __n128))(v111 + 8))(v110, v108, v116);
      v117 = v107;
      goto LABEL_8;
    }
    v134 = v550;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v550, v48, v105);
    v135 = type metadata accessor for ShelfBasedProductPage(0);
    v136 = __chkstk_darwin(v135);
    *(&v509 - 2) = v560;
    FlowAction.pageData<A>(as:or:)(&v563, v136);
    v137 = v563;
    if ((_QWORD)v563)
    {
      v138 = swift_retain(v563);
      v139 = ShelfBasedProductPage.fullProductFetchedAction.getter(v138);
      swift_release(v137);
    }
    else
    {
      v139 = 0;
    }
    v170 = (int *)sub_10000DF3C(&qword_1007F7958);
    v171 = v170[12];
    v172 = v170[16];
    v173 = v170[20];
    v555 = v170[24];
    v174 = v556;
    v175 = v557;
    (*(void (**)(uint64_t *, char *, uint64_t))(v556 + 16))(v103, v134, v557);
    *(uint64_t *)((char *)v103 + v171) = 0;
    *(uint64_t *)((char *)v103 + v172) = v137;
    *(uint64_t *)((char *)v103 + v173) = v139;
    swift_retain(v139);
    v176 = swift_retain(v137);
    v177 = FlowAction.pageDataPageRenderMetrics.getter(v176);
    swift_release(v137);
    swift_release(v139);
    v178 = swift_release(v104);
    (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v134, v175, v178);
    sub_100011088((uint64_t)v560, &qword_1007F6E90);
    *(uint64_t *)((char *)v103 + v555) = v177;
    v179 = v103;
    v102 = v510;
    v180 = v510;
    v181 = 0;
    goto LABEL_36;
  }
  if ((_DWORD)v96 == enum case for FlowPage.dynamicUI(_:))
  {
    v120 = (uint64_t)v551;
    v121 = v547;
    FlowAction.pageUrl.getter();
    v122 = v556;
    v123 = v557;
    v124 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v556 + 48))(v120, 1, v557);
    v125 = (uint64_t)v560;
    if (v124 == 1)
    {
      sub_100011088(v120, (uint64_t *)&unk_1007F5150);
      v119 = v558;
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v126 = v555;
      v127 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v129 = v553;
      v128 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v127, v126);
      v130 = sub_10000DF3C(&qword_1007FD430);
      v131 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v132 = swift_allocObject(v130, ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ 2 * *(_QWORD *)(v131 + 72), *(unsigned __int8 *)(v131 + 80) | 7);
      *(_OWORD *)(v132 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0x20676E697373694DLL, 0xEF726F66204C5255);
      v564 = v552;
      sub_1000117C0(&v563);
LABEL_22:
      FlowAction.page.getter(v133);
      static LogMessage.sensitive(_:)(&v563);
      sub_100011088((uint64_t)&v563, &qword_1007F6E90);
      Logger.debug(_:)(v132, v126, &protocol witness table for OSLogger);
      swift_release(v121);
      v147 = swift_bridgeObjectRelease(v132);
      (*(void (**)(char *, uint64_t, __n128))(v129 + 8))(v128, v126, v147);
LABEL_23:
      v148 = v125;
LABEL_24:
      sub_100011088(v148, &qword_1007F6E90);
      v118 = 1;
      v101 = v559;
      goto LABEL_25;
    }
    v149 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 32);
    v150 = v549;
    v149(v549, v120, v123);
    type metadata accessor for DynamicUIRequestInfo(0);
    FlowAction.pageData<A>(as:or:)(&v563, v151);
    v152 = v563;
    v119 = v558;
    if (!(_QWORD)v563)
    {
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v191 = v555;
      v192 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v194 = v553;
      v193 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v192, v191);
      v195 = sub_10000DF3C(&qword_1007FD430);
      v196 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v197 = swift_allocObject(v195, ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80))+ 2 * *(_QWORD *)(v196 + 72), *(unsigned __int8 *)(v196 + 80) | 7);
      *(_OWORD *)(v197 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0xD000000000000021, 0x80000001006368A0);
      v564 = v552;
      sub_1000117C0(&v563);
      FlowAction.page.getter(v198);
      static LogMessage.sensitive(_:)(&v563);
      sub_100011088((uint64_t)&v563, &qword_1007F6E90);
      Logger.debug(_:)(v197, v191, &protocol witness table for OSLogger);
      swift_release(v121);
      v199 = swift_bridgeObjectRelease(v197);
      (*(void (**)(char *, uint64_t, __n128))(v194 + 8))(v193, v191, v199);
      (*(void (**)(char *, uint64_t, __n128))(v556 + 8))(v150, v557, v200);
      goto LABEL_23;
    }
    swift_release(v121);
    sub_100011088(v125, &qword_1007F6E90);
    v153 = *(int *)(sub_10000DF3C((uint64_t *)&unk_10080BDE0) + 48);
    v94 = v509;
    v149((char *)v509, (uint64_t)v150, v123);
    *(uint64_t *)((char *)v94 + v153) = v152;
    v154 = v94;
    v102 = v510;
    v155 = v510;
    v156 = 3;
LABEL_28:
    swift_storeEnumTagMultiPayload(v154, v155, v156);
    v101 = v559;
LABEL_77:
    sub_10009055C((uint64_t)v94, v101, type metadata accessor for FlowDestination);
    v118 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v101, v118, 1, v102);
  }
  if ((_DWORD)v96 == enum case for FlowPage.webView(_:))
  {
    v140 = v547;
    v141 = (uint64_t)v548;
    FlowAction.pageUrl.getter();
    v142 = v556;
    v143 = v557;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v556 + 48))(v141, 1, v557) == 1)
    {
      sub_100011088(v141, (uint64_t *)&unk_1007F5150);
      v119 = v558;
      v125 = (uint64_t)v560;
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v126 = v555;
      v144 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v129 = v553;
      v128 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v144, v126);
      v145 = sub_10000DF3C(&qword_1007FD430);
      v146 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v132 = swift_allocObject(v145, ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ 2 * *(_QWORD *)(v146 + 72), *(unsigned __int8 *)(v146 + 80) | 7);
      *(_OWORD *)(v132 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0x20676E697373694DLL, 0xEF726F66204C5255);
      v564 = v552;
      sub_1000117C0(&v563);
      v121 = v547;
      goto LABEL_22;
    }
    swift_release(v140);
    sub_100011088((uint64_t)v560, &qword_1007F6E90);
    v183 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 32);
    v183(v71, v141, v143);
    v94 = v509;
    v183((char *)v509, (uint64_t)v71, v143);
    v184 = v94;
    v102 = v510;
    v185 = v510;
    v186 = 2;
LABEL_74:
    swift_storeEnumTagMultiPayload(v184, v185, v186);
    goto LABEL_75;
  }
  if ((_DWORD)v96 == enum case for FlowPage.unknown(_:))
  {
    v157 = (uint64_t)v546;
    v158 = v547;
    FlowAction.pageUrl.getter();
    v160 = v556;
    v159 = v557;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v556 + 48))(v157, 1, v557) == 1)
    {
      sub_100011088(v157, (uint64_t *)&unk_1007F5150);
      v119 = v558;
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v161 = v555;
      v162 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v164 = v553;
      v163 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v162, v161);
      v165 = sub_10000DF3C(&qword_1007FD430);
      v166 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v167 = swift_allocObject(v165, ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ 2 * *(_QWORD *)(v166 + 72), *(unsigned __int8 *)(v166 + 80) | 7);
      *(_OWORD *)(v167 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0x20676E697373694DLL, 0xEF726F66204C5255);
      v564 = v552;
      sub_1000117C0(&v563);
      FlowAction.page.getter(v168);
      static LogMessage.sensitive(_:)(&v563);
      sub_100011088((uint64_t)&v563, &qword_1007F6E90);
      Logger.debug(_:)(v167, v161, &protocol witness table for OSLogger);
      swift_release(v158);
      v169 = swift_bridgeObjectRelease(v167);
      (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v163, v161, v169);
      v148 = (uint64_t)v560;
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 32))(v74, v157, v159);
    sub_10000DF3C((uint64_t *)&unk_1007F7960);
    v201 = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v160 + 16))(v90, v74, v159);
    FlowAction.origin.getter(v201);
    v202 = swift_release(v158);
    (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v74, v159, v202);
    sub_100011088((uint64_t)v560, &qword_1007F6E90);
    v179 = v90;
    v102 = v510;
    v180 = v510;
    v181 = 1;
LABEL_36:
    swift_storeEnumTagMultiPayload(v179, v180, v181);
    v182 = (uint64_t)v103;
LABEL_37:
    v94 = v509;
    sub_10009055C(v182, (uint64_t)v509, type metadata accessor for FlowDestination);
LABEL_75:
    v101 = v559;
    goto LABEL_76;
  }
  v187 = v547;
  if ((_DWORD)v96 == enum case for FlowPage.viewController(_:))
  {
    v188 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v189 = __chkstk_darwin(v188);
    v125 = (uint64_t)v560;
    *(&v509 - 2) = v560;
    FlowAction.pageData<A>(as:or:)(&v563, v189);
    v190 = v563;
    if ((_QWORD)v563)
    {
      swift_release(v187);
      sub_100011088(v125, &qword_1007F6E90);
      v94 = v509;
      *v509 = v190;
      v184 = v94;
      v102 = v510;
      v185 = v510;
      v186 = 19;
      goto LABEL_74;
    }
    v119 = v558;
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v210 = v555;
    v219 = sub_1000117A8(v555, (uint64_t)qword_100857618);
    v213 = v553;
    v212 = v554;
    (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v219, v210);
    v220 = sub_10000DF3C(&qword_1007FD430);
    v221 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v216 = swift_allocObject(v220, ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80))+ 2 * *(_QWORD *)(v221 + 72), *(unsigned __int8 *)(v221 + 80) | 7);
    *(_OWORD *)(v216 + 16) = xmmword_10066F870;
    v217 = 0xD000000000000026;
    v222 = "Missing view controller to present for";
    goto LABEL_62;
  }
  v125 = (uint64_t)v560;
  if ((_DWORD)v96 == enum case for FlowPage.gallery(_:))
  {
    v203 = sub_10000DF3C(&qword_1007F48C0);
    v204 = __chkstk_darwin(v203);
    *(&v509 - 2) = (uint64_t *)v125;
    FlowAction.pageData<A>(as:or:)(&v563, v204);
    v205 = v563;
    if ((_QWORD)v563)
    {
      swift_release(v187);
      sub_100011088(v125, &qword_1007F6E90);
      v94 = v509;
      *v509 = v205;
      v184 = v94;
      v102 = v510;
      v185 = v510;
      v186 = 6;
      goto LABEL_74;
    }
    v119 = v558;
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v210 = v555;
    v231 = sub_1000117A8(v555, (uint64_t)qword_100857618);
    v213 = v553;
    v212 = v554;
    (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v231, v210);
    v232 = sub_10000DF3C(&qword_1007FD430);
    v233 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v216 = swift_allocObject(v232, ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ 2 * *(_QWORD *)(v233 + 72), *(unsigned __int8 *)(v233 + 80) | 7);
    *(_OWORD *)(v216 + 16) = xmmword_10066F870;
    v217 = 0xD000000000000013;
    v222 = "Missing artwork for";
LABEL_62:
    v218 = (unint64_t)(v222 - 32) | 0x8000000000000000;
    goto LABEL_63;
  }
  if ((_DWORD)v96 == enum case for FlowPage.video(_:))
  {
    v206 = (uint64_t)v545;
    FlowAction.pageUrl.getter();
    v207 = v556;
    v208 = v557;
    v209 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v556 + 48))(v206, 1, v557);
    v119 = v558;
    if (v209 != 1)
    {
      v236 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 32);
      v237 = v543;
      v236(v543, v206, v208);
      v238 = type metadata accessor for Video(0);
      v239 = __chkstk_darwin(v238);
      *(&v509 - 2) = (uint64_t *)v125;
      v240 = FlowAction.pageData<A>(as:or:)(&v563, v239);
      v241 = v563;
      if ((_QWORD)v563)
      {
        v242 = Video.preview.getter(v240);
        swift_release(v241);
        swift_release(v187);
      }
      else
      {
        swift_release(v187);
        v242 = 0;
      }
      v94 = v509;
      sub_100011088(v125, &qword_1007F6E90);
      v255 = *(int *)(sub_10000DF3C(&qword_1007F7978) + 48);
      v236((char *)v94, (uint64_t)v237, v208);
      *(uint64_t *)((char *)v94 + v255) = v242;
      v154 = v94;
      v102 = v510;
      v155 = v510;
      v156 = 7;
      goto LABEL_28;
    }
    sub_100011088(v206, (uint64_t *)&unk_1007F5150);
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v210 = v555;
    v211 = sub_1000117A8(v555, (uint64_t)qword_100857618);
    v213 = v553;
    v212 = v554;
    (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v211, v210);
    v214 = sub_10000DF3C(&qword_1007FD430);
    v215 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v216 = swift_allocObject(v214, ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ 2 * *(_QWORD *)(v215 + 72), *(unsigned __int8 *)(v215 + 80) | 7);
    *(_OWORD *)(v216 + 16) = xmmword_10066F870;
    v217 = 0x20676E697373694DLL;
    v218 = 0xEF726F66204C5255;
LABEL_63:
    LogMessage.init(stringLiteral:)(v217, v218);
    v564 = v552;
    sub_1000117C0(&v563);
    FlowAction.page.getter(v234);
    static LogMessage.sensitive(_:)(&v563);
    sub_100011088((uint64_t)&v563, &qword_1007F6E90);
    Logger.debug(_:)(v216, v210, &protocol witness table for OSLogger);
    swift_release(v187);
    v235 = swift_bridgeObjectRelease(v216);
    (*(void (**)(char *, uint64_t, __n128))(v213 + 8))(v212, v210, v235);
    goto LABEL_23;
  }
  v223 = v556;
  v224 = v557;
  if ((_DWORD)v96 == enum case for FlowPage.page(_:))
  {
    v225 = (uint64_t)v544;
    FlowAction.pageUrl.getter();
    v226 = type metadata accessor for GenericPage(0);
    v227 = __chkstk_darwin(v226);
    *(&v509 - 2) = (uint64_t *)v125;
    FlowAction.pageData<A>(as:or:)(&v563, v227);
    swift_release(v187);
    sub_100011088(v125, &qword_1007F6E90);
    v228 = v563;
    v229 = sub_10000DF3C((uint64_t *)&unk_1007F7980);
    v94 = v509;
    v230 = (uint64_t)v509 + *(int *)(v229 + 48);
    *v509 = v228;
    sub_10006C29C(v225, v230, (uint64_t *)&unk_1007F5150);
    v184 = v94;
    v102 = v510;
    v185 = v510;
    v186 = 8;
    goto LABEL_74;
  }
  if ((_DWORD)v96 == enum case for FlowPage.searchChartsAndCategories(_:))
  {
    v243 = (uint64_t)v544;
    FlowAction.pageUrl.getter();
    v244 = type metadata accessor for SearchChartsAndCategoriesPage(0);
    v245 = __chkstk_darwin(v244);
    *(&v509 - 2) = (uint64_t *)v125;
    FlowAction.pageData<A>(as:or:)(&v563, v245);
    swift_release(v187);
    sub_100011088(v125, &qword_1007F6E90);
    v246 = v563;
    v247 = sub_10000DF3C(&qword_1007F7970);
    v94 = v509;
    v248 = (uint64_t)v509 + *(int *)(v247 + 48);
    *v509 = v246;
    sub_10006C29C(v243, v248, (uint64_t *)&unk_1007F5150);
    v184 = v94;
    v102 = v510;
    v185 = v510;
    v186 = 5;
    goto LABEL_74;
  }
  if ((_DWORD)v96 == enum case for FlowPage.topCharts(_:))
  {
    v249 = (uint64_t)v544;
    FlowAction.pageUrl.getter();
    v250 = type metadata accessor for TopChartsPage(0);
    v251 = __chkstk_darwin(v250);
    *(&v509 - 2) = (uint64_t *)v125;
    FlowAction.pageData<A>(as:or:)(&v563, v251);
    swift_release(v187);
    sub_100011088(v125, &qword_1007F6E90);
    v252 = v563;
    v253 = sub_10000DF3C(&qword_10080BD70);
    v94 = v509;
    v254 = (uint64_t)v509 + *(int *)(v253 + 48);
    *v509 = v252;
    sub_10006C29C(v249, v254, (uint64_t *)&unk_1007F5150);
    v184 = v94;
    v102 = v510;
    v185 = v510;
    v186 = 9;
    goto LABEL_74;
  }
  if ((_DWORD)v96 == enum case for FlowPage.updates(_:))
  {
    swift_release(v547);
    sub_100011088(v125, &qword_1007F6E90);
    v94 = v509;
    v184 = v509;
    v102 = v510;
    v185 = v510;
    v186 = 42;
    goto LABEL_74;
  }
  if ((_DWORD)v96 == enum case for FlowPage.today(_:))
  {
    v257 = v541;
    FlowAction.pageUrl.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v223 + 48))(v257, 1, v224) != 1)
    {
      swift_release(v187);
      sub_100011088(v125, &qword_1007F6E90);
      v275 = *(void (**)(char *, char *, uint64_t))(v223 + 32);
      v276 = v540;
      v275(v540, v257, v224);
      v94 = v509;
      v275((char *)v509, v276, v224);
      v184 = v94;
      v102 = v510;
      v185 = v510;
      v186 = 20;
      goto LABEL_74;
    }
    v258 = (uint64_t)v257;
    goto LABEL_82;
  }
  if ((_DWORD)v96 == enum case for FlowPage.article(_:))
  {
    FlowAction.pageUrl.getter();
    type metadata accessor for ArticlePage(0);
    FlowAction.pageData<A>(as:or:)(&v563, v271);
    v272 = v563;
    sub_1000194E4(v125, (uint64_t)&v563, &qword_1007F6E90);
    if (v564)
    {
      v273 = type metadata accessor for TodayCard(0);
      if (swift_dynamicCast(&v562, &v563, (char *)&type metadata for Any + 8, v273, 6))
        v274 = v562;
      else
        v274 = 0;
    }
    else
    {
      sub_100011088((uint64_t)&v563, &qword_1007F6E90);
      v274 = 0;
    }
    v281 = ArticlePage.__allocating_init(copying:replacingCard:)(v272, v274);
    swift_release(v547);
    sub_100011088((uint64_t)v560, &qword_1007F6E90);
    v282 = sub_10000DF3C(&qword_1007F6840);
    v94 = v509;
    v283 = (uint64_t)v509 + *(int *)(v282 + 48);
    *v509 = v281;
    sub_10006C29C(v542, v283, (uint64_t *)&unk_1007F5150);
    v184 = v94;
    v102 = v510;
    v185 = v510;
    v186 = 21;
    goto LABEL_74;
  }
  if ((_DWORD)v96 == enum case for FlowPage.purchases(_:))
  {
    sub_100019574(0, &qword_1007FBC38, AMSFamilyMember_ptr);
    v277 = v547;
    FlowAction.pageData<A>(as:or:)(&v563, v278);
    swift_release(v277);
    sub_100011088((uint64_t)v560, &qword_1007F6E90);
    *v103 = v563;
    v179 = v103;
    v102 = v510;
    v180 = v510;
    v181 = 22;
    goto LABEL_36;
  }
  v279 = v96;
  if ((_DWORD)v96 == enum case for FlowPage.inAppPurchaseInstall(_:))
  {
    v280 = v539;
    FlowAction.pageUrl.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v280, 1, v557) != 1)
    {
      v285 = v557;
      v286 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
      v287 = v535;
      v286(v535, v539, v557);
      type metadata accessor for InAppPurchaseInstallPage(0);
      v288 = v547;
      FlowAction.pageData<A>(as:or:)(&v563, v289);
      swift_release(v288);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v290 = v563;
      v291 = *(int *)(sub_10000DF3C(&qword_1007F79C0) + 48);
      v94 = v509;
      v286((char *)v509, v287, v285);
      *(uint64_t *)((char *)v94 + v291) = v290;
      v184 = v94;
      v102 = v510;
      v185 = v510;
      v186 = 23;
      goto LABEL_74;
    }
    v258 = (uint64_t)v539;
    goto LABEL_82;
  }
  if ((_DWORD)v96 != enum case for FlowPage.writeReview(_:))
  {
    if ((_DWORD)v96 == enum case for FlowPage.reviews(_:))
    {
      v292 = type metadata accessor for ReviewsPage(0);
      v293 = __chkstk_darwin(v292);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v293);
      v294 = v563;
      if ((_QWORD)v563)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v294;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 25;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v317 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v317, v259);
      v318 = sub_10000DF3C(&qword_1007FD430);
      v319 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v318, ((*(unsigned __int8 *)(v319 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v319 + 80))+ 2 * *(_QWORD *)(v319 + 72), *(unsigned __int8 *)(v319 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD00000000000001DLL;
      v320 = "Missing reviews page data for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.account(_:))
    {
      v310 = v547;
      FlowAction.pageUrl.getter();
      swift_release(v310);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v179 = v103;
      v102 = v510;
      v180 = v510;
      v181 = 26;
      goto LABEL_36;
    }
    if ((_DWORD)v96 == enum case for FlowPage.finance(_:))
    {
      v316 = v547;
      FlowAction.pageUrl.getter();
      swift_release(v316);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v179 = v103;
      v102 = v510;
      v180 = v510;
      v181 = 27;
      goto LABEL_36;
    }
    if ((_DWORD)v96 == enum case for FlowPage.mso(_:))
    {
      v321 = v531;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v321, 1, v557) != 1)
      {
        v325 = v557;
        v326 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
        v327 = v529;
        v326(v529, v531, v557);
        type metadata accessor for MSOContext(0);
        v328 = v530;
        v329 = v547;
        FlowAction.pageData<A>(as:or:)(v530, v330);
        swift_release(v329);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v331 = sub_10000DF3C((uint64_t *)&unk_1007F79D0);
        v94 = v509;
        v332 = (uint64_t)v509 + *(int *)(v331 + 48);
        v326((char *)v509, v327, v325);
        sub_10006C29C((uint64_t)v328, v332, (uint64_t *)&unk_10080BCB0);
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 28;
        goto LABEL_74;
      }
      v258 = (uint64_t)v531;
      goto LABEL_82;
    }
    if ((_DWORD)v96 == enum case for FlowPage.versionHistory(_:))
    {
      v322 = type metadata accessor for GenericPage(0);
      v323 = __chkstk_darwin(v322);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v323);
      v324 = v563;
      if ((_QWORD)v563)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v324;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 29;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v341 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v341, v259);
      v342 = sub_10000DF3C(&qword_1007FD430);
      v343 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v342, ((*(unsigned __int8 *)(v343 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v343 + 80))+ 2 * *(_QWORD *)(v343 + 72), *(unsigned __int8 *)(v343 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000025;
      v320 = "Missing version history page data for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.onboarding(_:))
    {
      v333 = __chkstk_darwin(v96);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v333);
      v334 = v563;
      if (v563 != 4)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *(_BYTE *)v509 = v334;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 30;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v335 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v335, v259);
      v336 = sub_10000DF3C(&qword_1007FD430);
      v337 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v336, ((*(unsigned __int8 *)(v337 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v337 + 80))+ 2 * *(_QWORD *)(v337 + 72), *(unsigned __int8 *)(v337 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000011;
      v320 = "Missing store for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.reviewDetail(_:))
    {
      v338 = type metadata accessor for Review(0);
      v339 = __chkstk_darwin(v338);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v339);
      v340 = v563;
      if ((_QWORD)v563)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v340;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 31;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v355 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v355, v259);
      v356 = sub_10000DF3C(&qword_1007FD430);
      v357 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v356, ((*(unsigned __int8 *)(v357 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v357 + 80))+ 2 * *(_QWORD *)(v357 + 72), *(unsigned __int8 *)(v357 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD00000000000001DLL;
      v320 = "Missing review to present for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.editorsChoiceDetail(_:))
    {
      v344 = type metadata accessor for EditorsChoice(0);
      v345 = __chkstk_darwin(v344);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v345);
      v346 = v563;
      if ((_QWORD)v563)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v346;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 32;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v364 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v364, v259);
      v365 = sub_10000DF3C(&qword_1007FD430);
      v366 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v365, ((*(unsigned __int8 *)(v366 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v366 + 80))+ 2 * *(_QWORD *)(v366 + 72), *(unsigned __int8 *)(v366 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000025;
      v320 = "Missing editors choice to present for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.arcade(_:))
    {
      v347 = (uint64_t)v544;
      v348 = v547;
      FlowAction.pageUrl.getter();
      type metadata accessor for ArcadePage(0);
      FlowAction.pageData<A>(as:or:)(&v563, v349);
      v350 = v563;
      v351 = v103;
      sub_10000DF3C(&qword_1007F7998);
      *v103 = v350;
      v352 = v517;
      sub_1000194E4(v347, v517, (uint64_t *)&unk_1007F5150);
      v353 = v520;
      sub_1000194E4(v347, v520, (uint64_t *)&unk_1007F5150);
      v354 = swift_retain(v350);
      ArcadePageUrls.init(subscriberUrl:nonSubscriberUrl:)(v352, v353, v354);
      swift_release(v350);
      swift_release(v348);
      sub_100011088(v347, (uint64_t *)&unk_1007F5150);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v102 = v510;
      swift_storeEnumTagMultiPayload(v351, v510, 13);
      v182 = (uint64_t)v351;
      goto LABEL_37;
    }
    if ((_DWORD)v96 == enum case for FlowPage.arcadeSubscribe(_:))
    {
      type metadata accessor for ArcadeSubscribePage(0);
      v358 = v547;
      FlowAction.pageData<A>(as:or:)(&v563, v359);
      v360 = v563;
      v361 = sub_10000DF3C(&qword_1007F79A0);
      v362 = *(int *)(v361 + 48);
      v363 = *(int *)(v361 + 64);
      FlowAction.pageUrl.getter();
      swift_release(v358);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      *(uint64_t *)((char *)v103 + v362) = v360;
      *((_BYTE *)v103 + v363) = 0;
      v179 = v103;
      v102 = v510;
      v180 = v510;
      v181 = 14;
      goto LABEL_36;
    }
    if ((_DWORD)v96 == enum case for FlowPage.upsellMarketingItem(_:))
    {
      type metadata accessor for MarketingItemRequestInfo(0);
      FlowAction.pageData<A>(as:or:)(&v563, v367);
      v368 = v563;
      if ((_QWORD)v563)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v368;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 15;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v371 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v371, v259);
      v372 = sub_10000DF3C(&qword_1007FD430);
      v373 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v372, ((*(unsigned __int8 *)(v373 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v373 + 80))+ 2 * *(_QWORD *)(v373 + 72), *(unsigned __int8 *)(v373 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD00000000000003BLL;
      v320 = "Missing marketing item request info for upsell presentation";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.arcadeSeeAllGames(_:))
    {
      v369 = v519;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v369, 1, v557) != 1)
      {
        v374 = v557;
        v375 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
        v376 = v512;
        v375(v512, v519, v557);
        type metadata accessor for ArcadeSeeAllGamesPage(0);
        v377 = v547;
        FlowAction.pageData<A>(as:or:)(&v563, v378);
        swift_release(v377);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v379 = v563;
        v380 = sub_10000DF3C(&qword_1007F79A8);
        v94 = v509;
        v381 = (char *)v509 + *(int *)(v380 + 48);
        *v509 = v379;
        v375(v381, v376, v374);
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 16;
        goto LABEL_74;
      }
      v258 = (uint64_t)v519;
      goto LABEL_82;
    }
    if ((_DWORD)v96 == enum case for FlowPage.arcadeWelcome(_:))
    {
      v370 = v522;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v370, 1, v557) != 1)
      {
        v384 = v557;
        v385 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
        v386 = v515;
        v385(v515, v522, v557);
        v387 = sub_10000DF3C((uint64_t *)&unk_1007F79B0);
        v388 = (char *)v103 + *(int *)(v387 + 48);
        v389 = (char *)v103 + *(int *)(v387 + 64);
        type metadata accessor for ArcadeWelcomePage(0);
        v390 = v547;
        FlowAction.pageData<A>(as:or:)(v103, v391);
        swift_release(v390);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v392 = enum case for ArcadeWelcomePage.ContentType.none(_:);
        v393 = type metadata accessor for ArcadeWelcomePage.ContentType(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v393 - 8) + 104))(v388, v392, v393);
        v385(v389, v386, v384);
        v179 = v103;
        v102 = v510;
        v180 = v510;
        v181 = 17;
        goto LABEL_36;
      }
      v258 = (uint64_t)v522;
      goto LABEL_82;
    }
    if ((_DWORD)v96 == enum case for FlowPage.arcadeDownloadPackCategories(_:))
    {
      FlowAction.pageData<A>(as:or:)(&v563, v97);
      v382 = *((_QWORD *)&v563 + 1);
      if (*((_QWORD *)&v563 + 1))
      {
        v383 = v563;
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v383;
        v94[1] = v382;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 18;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v399 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v399, v259);
      v400 = sub_10000DF3C(&qword_1007FD430);
      v401 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v400, ((*(unsigned __int8 *)(v401 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v401 + 80))+ 2 * *(_QWORD *)(v401 + 72), *(unsigned __int8 *)(v401 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD00000000000001ELL;
      v320 = "Missing subscriptionStatus for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.componentOverflow(_:))
    {
      v394 = v527;
      v395 = v528;
      FlowAction.pageData<A>(as:or:)(v527, v97);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v525 + 48))(v394, 1, v395) != 1)
      {
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v402 = v526;
        sub_10009055C((uint64_t)v527, (uint64_t)v526, type metadata accessor for ComponentOverflowData);
        v403 = sub_10000DF3C((uint64_t *)&unk_100818A90);
        v94 = v509;
        v404 = (char *)v509 + *(int *)(v403 + 48);
        *v509 = *v402;
        v405 = (char *)v402 + *(int *)(v528 + 20);
        v406 = type metadata accessor for IndexPath(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v406 - 8) + 32))(v404, v405, v406);
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 41;
        goto LABEL_74;
      }
      sub_100011088((uint64_t)v527, &qword_1007FBC30);
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v396 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v396, v259);
      v397 = sub_10000DF3C(&qword_1007FD430);
      v398 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v397, ((*(unsigned __int8 *)(v398 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v398 + 80))+ 2 * *(_QWORD *)(v398 + 72), *(unsigned __int8 *)(v398 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD00000000000002CLL;
      v320 = "Missing ComponentOverflowData to present for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.notificationSettings(_:))
    {
      swift_release(v547);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v94 = v509;
      v184 = v509;
      v102 = v510;
      v185 = v510;
      v186 = 47;
      goto LABEL_74;
    }
    if ((_DWORD)v96 == enum case for FlowPage.gameAchievements(_:))
    {
      v407 = __chkstk_darwin(v96);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v407);
      v408 = v563;
      if ((_QWORD)v563)
      {
        v409 = *((_QWORD *)&v563 + 1);
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v408;
        v94[1] = v409;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 35;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v413 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v413, v259);
      v414 = sub_10000DF3C(&qword_1007FD430);
      v415 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v414, ((*(unsigned __int8 *)(v415 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v415 + 80))+ 2 * *(_QWORD *)(v415 + 72), *(unsigned __int8 *)(v415 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000031;
      v320 = "Missing GameCenterAchievementsPage to present for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.gameCenterDashboard(_:))
    {
      swift_release(v547);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v94 = v509;
      v184 = v509;
      v102 = v510;
      v185 = v510;
      v186 = 48;
      goto LABEL_74;
    }
    if ((_DWORD)v96 == enum case for FlowPage.gameCenterLeaderboards(_:))
    {
      v410 = __chkstk_darwin(v96);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v410);
      v411 = v563;
      if ((_QWORD)v563)
      {
        v412 = *((_QWORD *)&v563 + 1);
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v94 = v509;
        *v509 = v411;
        v94[1] = v412;
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 33;
        goto LABEL_74;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v426 = v555;
      v427 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v429 = v553;
      v428 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v427, v426);
      v430 = sub_10000DF3C(&qword_1007FD430);
      v431 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v432 = swift_allocObject(v430, ((*(unsigned __int8 *)(v431 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v431 + 80))+ 2 * *(_QWORD *)(v431 + 72), *(unsigned __int8 *)(v431 + 80) | 7);
      *(_OWORD *)(v432 + 16) = xmmword_10066F870;
      LogMessage.init(stringLiteral:)(0xD000000000000031, 0x8000000100636650);
      v564 = v552;
      sub_1000117C0(&v563);
      v433 = v547;
      FlowAction.page.getter(v434);
      static LogMessage.sensitive(_:)(&v563);
      sub_100011088((uint64_t)&v563, &qword_1007F6E90);
      Logger.debug(_:)(v432, v426, &protocol witness table for OSLogger);
      v435 = swift_bridgeObjectRelease(v432);
      (*(void (**)(char *, uint64_t, __n128))(v429 + 8))(v428, v426, v435);
      swift_release(v433);
      goto LABEL_86;
    }
    if ((_DWORD)v96 == enum case for FlowPage.gameCenterPlayerProfile(_:))
    {
      v416 = v547;
      FlowAction.pageData<A>(as:or:)(&v563, v97);
      swift_release(v416);
      sub_100011088((uint64_t)v560, &qword_1007F6E90);
      v94 = v509;
      *(_OWORD *)v509 = v563;
      v184 = v94;
      v102 = v510;
      v185 = v510;
      v186 = 34;
      goto LABEL_74;
    }
    if ((_DWORD)v96 == enum case for FlowPage.reportAConcern(_:))
    {
      v417 = type metadata accessor for ReportConcernAction(0);
      v418 = __chkstk_darwin(v417);
      *(&v509 - 2) = v560;
      v419 = FlowAction.pageData<A>(as:or:)(&v563, v418);
      v420 = v563;
      if ((_QWORD)v563)
      {
        v421 = ReportConcernAction.reasons.getter(v419);
        v422 = ReportConcernAction.explanation.getter();
        v424 = v423;
        v425 = ReportConcernAction.sendAction.getter();
        swift_release(v420);
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        *v103 = v421;
        v103[1] = v422;
        v103[2] = v424;
        v103[3] = v425;
        v179 = v103;
        v102 = v510;
        v180 = v510;
        v181 = 11;
        goto LABEL_36;
      }
      goto LABEL_202;
    }
    if ((_DWORD)v96 == enum case for FlowPage.reviewSummaryReportConcern(_:))
    {
      v436 = type metadata accessor for ReviewSummaryReportConcernAction(0);
      v437 = __chkstk_darwin(v436);
      *(&v509 - 2) = v560;
      v438 = FlowAction.pageData<A>(as:or:)(&v563, v437);
      v439 = v563;
      if ((_QWORD)v563)
      {
        v440 = ReviewSummaryReportConcernAction.concerns.getter(v438);
        v441 = ReviewSummaryReportConcernAction.comment.getter();
        v443 = v442;
        v444 = ReviewSummaryReportConcernAction.sendAction.getter();
        swift_release(v439);
        swift_release(v547);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        *v103 = v440;
        v103[1] = v441;
        v103[2] = v443;
        v103[3] = v444;
        v179 = v103;
        v102 = v510;
        v180 = v510;
        v181 = 12;
        goto LABEL_36;
      }
LABEL_202:
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v445 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v445, v259);
      v446 = sub_10000DF3C(&qword_1007FD430);
      v447 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v446, ((*(unsigned __int8 *)(v447 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v447 + 80))+ 2 * *(_QWORD *)(v447 + 72), *(unsigned __int8 *)(v447 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v448 = "Missing ReportConcernAction to present for";
LABEL_205:
      v267 = (unint64_t)(v448 - 32) | 0x8000000000000000;
      v266 = 0xD00000000000002ALL;
      goto LABEL_85;
    }
    if ((_DWORD)v96 == enum case for FlowPage.shareSheet(_:))
    {
      v449 = type metadata accessor for ShareSheetAction(0);
      v450 = __chkstk_darwin(v449);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v563, v450);
      v451 = v563;
      if ((_QWORD)v563)
      {
        if (qword_100803BB0 != 255 && (qword_100803BB0 & 1) != 0)
        {
          v452 = (void *)qword_100803B88;
          v453 = *(int *)(sub_10000DF3C(&qword_1007F7990) + 80);
          *v103 = ShareSheetAction.data.getter(v452);
          v103[1] = ShareSheetAction.activities.getter();
          ShareSheetAction.shareSheetStyle.getter();
          swift_release(v451);
          swift_release(v547);
          sub_100011088((uint64_t)v560, &qword_1007F6E90);
          *(uint64_t *)((char *)v103 + v453) = (uint64_t)v452;
          v102 = v510;
          swift_storeEnumTagMultiPayload(v103, v510, 10);
          v182 = (uint64_t)v103;
          goto LABEL_37;
        }
        swift_release(v563);
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v456 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v456, v259);
      v457 = sub_10000DF3C(&qword_1007FD430);
      v458 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v457, ((*(unsigned __int8 *)(v458 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v458 + 80))+ 2 * *(_QWORD *)(v458 + 72), *(unsigned __int8 *)(v458 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000027;
      v320 = "Missing shareSheetAction to present for";
      goto LABEL_119;
    }
    if ((_DWORD)v96 == enum case for FlowPage.privacyDetail(_:))
    {
      v454 = v523;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v454, 1, v557) != 1)
      {
        v460 = v556;
        v459 = v557;
        v461 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
        v462 = v518;
        v461(v518, v523, v557);
        type metadata accessor for GenericPage(0);
        v463 = v547;
        FlowAction.pageData<A>(as:or:)(&v563, v464);
        swift_release(v463);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v465 = v563;
        v466 = *(int *)(sub_10000DF3C((uint64_t *)&unk_1007F7980) + 48);
        v94 = v509;
        v467 = (char *)v509 + v466;
        *v509 = v465;
        v461((char *)v94 + v466, v462, v459);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v460 + 56))(v467, 0, 1, v459);
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 36;
        goto LABEL_74;
      }
      v258 = (uint64_t)v523;
      goto LABEL_82;
    }
    if ((_DWORD)v96 == enum case for FlowPage.privacyDefinitions(_:))
    {
      v455 = v524;
      FlowAction.pageUrl.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v455, 1, v557) != 1)
      {
        v475 = v556;
        v474 = v557;
        v476 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
        v477 = v521;
        v476(v521, v524, v557);
        type metadata accessor for GenericPage(0);
        v478 = v547;
        FlowAction.pageData<A>(as:or:)(&v563, v479);
        swift_release(v478);
        sub_100011088((uint64_t)v560, &qword_1007F6E90);
        v480 = v563;
        v481 = *(int *)(sub_10000DF3C((uint64_t *)&unk_1007F7980) + 48);
        v94 = v509;
        v482 = (char *)v509 + v481;
        *v509 = v480;
        v476((char *)v94 + v481, v477, v474);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v475 + 56))(v482, 0, 1, v474);
        v184 = v94;
        v102 = v510;
        v185 = v510;
        v186 = 37;
        goto LABEL_74;
      }
      v258 = (uint64_t)v524;
      goto LABEL_82;
    }
    if ((_DWORD)v96 == enum case for FlowPage.appEventDetail(_:))
    {
      v468 = type metadata accessor for AppEventDetailPage(0);
      v469 = __chkstk_darwin(v468);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v562, v469);
      v470 = v562;
      if (v562)
      {
        swift_release(v547);
        sub_10006C29C((uint64_t)v560, (uint64_t)&v563, &qword_1007F6E90);
        if (v564)
        {
          v471 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
          v472 = swift_dynamicCast(&v561, &v563, (char *)&type metadata for Any + 8, v471, 6);
          v473 = v561;
          if (!v472)
            v473 = 0;
        }
        else
        {
          sub_100011088((uint64_t)&v563, &qword_1007F6E90);
          v473 = 0;
        }
        v499 = v513;
        *v513 = v470;
        v499[1] = v473;
        v500 = v499;
        v102 = v510;
        v501 = v510;
        v502 = 38;
        goto LABEL_259;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v495 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v495, v259);
      v496 = sub_10000DF3C(&qword_1007FD430);
      v497 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v496, ((*(unsigned __int8 *)(v497 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v497 + 80))+ 2 * *(_QWORD *)(v497 + 72), *(unsigned __int8 *)(v497 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000029;
      v320 = "Missing AppEventDetailPage to present for";
    }
    else
    {
      if ((_DWORD)v96 != enum case for FlowPage.contingentOfferDetail(_:))
      {
        if ((_DWORD)v96 != enum case for FlowPage.offerItemDetail(_:))
        {
          v498 = enum case for FlowPage.personalizationTransparency(_:);
          swift_release(v547);
          sub_100011088((uint64_t)v560, &qword_1007F6E90);
          if (v279 != v498)
          {
            (*(void (**)(char *, uint64_t))(v511 + 8))(v81, v552);
            goto LABEL_9;
          }
          v94 = v509;
          v184 = v509;
          v102 = v510;
          v185 = v510;
          v186 = 49;
          goto LABEL_74;
        }
        v489 = type metadata accessor for OfferItemDetailPage(0);
        v490 = __chkstk_darwin(v489);
        *(&v509 - 2) = v560;
        FlowAction.pageData<A>(as:or:)(&v562, v490);
        v491 = v562;
        if (!v562)
        {
          if (qword_1007F3450 != -1)
            swift_once(&qword_1007F3450, sub_10060243C);
          v259 = v555;
          v506 = sub_1000117A8(v555, (uint64_t)qword_100857618);
          v262 = v553;
          v261 = v554;
          (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v506, v259);
          v507 = sub_10000DF3C(&qword_1007FD430);
          v508 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
          v265 = swift_allocObject(v507, ((*(unsigned __int8 *)(v508 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v508 + 80))+ 2 * *(_QWORD *)(v508 + 72), *(unsigned __int8 *)(v508 + 80) | 7);
          *(_OWORD *)(v265 + 16) = xmmword_10066F870;
          v448 = "Missing OfferItemDetailPage to present for";
          goto LABEL_205;
        }
        swift_release(v547);
        sub_10006C29C((uint64_t)v560, (uint64_t)&v563, &qword_1007F6E90);
        if (v564)
        {
          v492 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
          v493 = swift_dynamicCast(&v561, &v563, (char *)&type metadata for Any + 8, v492, 6);
          v494 = v561;
          if (!v493)
            v494 = 0;
        }
        else
        {
          sub_100011088((uint64_t)&v563, &qword_1007F6E90);
          v494 = 0;
        }
        v499 = v516;
        *v516 = v491;
        v499[1] = v494;
        v500 = v499;
        v102 = v510;
        v501 = v510;
        v502 = 40;
LABEL_259:
        swift_storeEnumTagMultiPayload(v500, v501, v502);
        v182 = (uint64_t)v499;
        goto LABEL_37;
      }
      v483 = type metadata accessor for ContingentOfferDetailPage(0);
      v484 = __chkstk_darwin(v483);
      *(&v509 - 2) = v560;
      FlowAction.pageData<A>(as:or:)(&v562, v484);
      v485 = v562;
      if (v562)
      {
        swift_release(v547);
        sub_10006C29C((uint64_t)v560, (uint64_t)&v563, &qword_1007F6E90);
        if (v564)
        {
          v486 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
          v487 = swift_dynamicCast(&v561, &v563, (char *)&type metadata for Any + 8, v486, 6);
          v488 = v561;
          if (!v487)
            v488 = 0;
        }
        else
        {
          sub_100011088((uint64_t)&v563, &qword_1007F6E90);
          v488 = 0;
        }
        v499 = v514;
        *v514 = v485;
        v499[1] = v488;
        v500 = v499;
        v102 = v510;
        v501 = v510;
        v502 = 39;
        goto LABEL_259;
      }
      if (qword_1007F3450 != -1)
        swift_once(&qword_1007F3450, sub_10060243C);
      v259 = v555;
      v503 = sub_1000117A8(v555, (uint64_t)qword_100857618);
      v262 = v553;
      v261 = v554;
      (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v503, v259);
      v504 = sub_10000DF3C(&qword_1007FD430);
      v505 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v265 = swift_allocObject(v504, ((*(unsigned __int8 *)(v505 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v505 + 80))+ 2 * *(_QWORD *)(v505 + 72), *(unsigned __int8 *)(v505 + 80) | 7);
      *(_OWORD *)(v265 + 16) = xmmword_10066F870;
      v266 = 0xD000000000000030;
      v320 = "Missing ContingentOfferDetailPage to present for";
    }
LABEL_119:
    v267 = (unint64_t)(v320 - 32) | 0x8000000000000000;
LABEL_85:
    LogMessage.init(stringLiteral:)(v266, v267);
    v564 = v552;
    sub_1000117C0(&v563);
    v268 = v547;
    FlowAction.page.getter(v269);
    static LogMessage.sensitive(_:)(&v563);
    sub_100011088((uint64_t)&v563, &qword_1007F6E90);
    Logger.debug(_:)(v265, v259, &protocol witness table for OSLogger);
    swift_release(v268);
    v270 = swift_bridgeObjectRelease(v265);
    (*(void (**)(char *, uint64_t, __n128))(v262 + 8))(v261, v259, v270);
    goto LABEL_86;
  }
  v284 = v538;
  FlowAction.pageUrl.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48))(v284, 1, v557) == 1)
  {
    v258 = (uint64_t)v538;
LABEL_82:
    sub_100011088(v258, (uint64_t *)&unk_1007F5150);
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v259 = v555;
    v260 = sub_1000117A8(v555, (uint64_t)qword_100857618);
    v262 = v553;
    v261 = v554;
    (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v260, v259);
    v263 = sub_10000DF3C(&qword_1007FD430);
    v264 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v265 = swift_allocObject(v263, ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80))+ 2 * *(_QWORD *)(v264 + 72), *(unsigned __int8 *)(v264 + 80) | 7);
    *(_OWORD *)(v265 + 16) = xmmword_10066F870;
    v266 = 0x20676E697373694DLL;
    v267 = 0xEF726F66204C5255;
    goto LABEL_85;
  }
  v295 = *(void (**)(char *, char *, uint64_t))(v556 + 32);
  v295(v536, v538, v557);
  v296 = v537;
  v297 = v534;
  FlowAction.pageData<A>(as:or:)(v537, v298);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v533 + 48))(v296, 1, v297) != 1)
  {
    swift_release(v547);
    sub_100011088((uint64_t)v560, &qword_1007F6E90);
    v311 = *(void (**)(char *, char *, uint64_t))(v533 + 32);
    v312 = v532;
    v313 = v534;
    v311(v532, (char *)v537, v534);
    v314 = sub_10000DF3C(&qword_1007F79C8);
    v94 = v509;
    v315 = (char *)v509 + *(int *)(v314 + 48);
    v295((char *)v509, v536, v557);
    v311(v315, v312, v313);
    v184 = v94;
    v102 = v510;
    v185 = v510;
    v186 = 24;
    goto LABEL_74;
  }
  sub_100011088((uint64_t)v537, (uint64_t *)&unk_1008083B0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v299 = v555;
  v300 = sub_1000117A8(v555, (uint64_t)qword_100857618);
  v302 = v553;
  v301 = v554;
  (*(void (**)(char *, uint64_t, uint64_t))(v553 + 16))(v554, v300, v299);
  v303 = sub_10000DF3C(&qword_1007FD430);
  v304 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v305 = swift_allocObject(v303, ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ 2 * *(_QWORD *)(v304 + 72), *(unsigned __int8 *)(v304 + 80) | 7);
  *(_OWORD *)(v305 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x80000001006368F0);
  v564 = v552;
  sub_1000117C0(&v563);
  v306 = v547;
  FlowAction.page.getter(v307);
  static LogMessage.sensitive(_:)(&v563);
  sub_100011088((uint64_t)&v563, &qword_1007F6E90);
  Logger.debug(_:)(v305, v299, &protocol witness table for OSLogger);
  swift_release(v306);
  v308 = swift_bridgeObjectRelease(v305);
  (*(void (**)(char *, uint64_t, __n128))(v302 + 8))(v301, v299, v308);
  (*(void (**)(char *, uint64_t, __n128))(v556 + 8))(v536, v557, v309);
LABEL_86:
  v117 = (uint64_t)v560;
LABEL_8:
  sub_100011088(v117, &qword_1007F6E90);
LABEL_9:
  v118 = 1;
  v119 = v558;
  v101 = v559;
LABEL_25:
  v102 = v510;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v101, v118, 1, v102);
}

uint64_t FlowAction.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  _QWORD v9[4];

  v3 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_retain(v1);
  dispatch thunk of Action.clickSender.getter(v9, v6);
  sub_10011BB90(v1, (uint64_t)v9, (uint64_t)v5);
  v7 = type metadata accessor for FlowDestination(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_10009055C((uint64_t)v5, a1, type metadata accessor for FlowDestination);
  swift_storeEnumTagMultiPayload(a1, v7, 50);
  return sub_100011088((uint64_t)v5, &qword_1007F7950);
}

double sub_100120084@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_100120090(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = (char *)&type metadata for () + 8;
}

uint64_t sub_1001200A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000194E4(*(_QWORD *)(v1 + 16), a1, &qword_1007F6E90);
}

void sub_1001200D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v33[2];

  v8 = type metadata accessor for Artwork.Style(0, a2);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.Crop(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v33[1] = a2;
    v16 = swift_retain(a1);
    Artwork.crop.getter(v16);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 32))(v15, a3, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v18 = (*(double (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    v20 = Artwork.config(_:mode:prefersLayeredImage:)(v17, 0, v18, v19);
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
    v22 = (void *)v21(a3, a4);
    Artwork.style.getter(v22);
    v23 = ArtworkView.style.setter(v11);
    v24 = objc_msgSend(v22, "setContentMode:", Artwork.contentMode.getter(v23));
    v25 = ArtworkLoaderConfig.size.getter(v24);
    v27 = ArtworkView.imageSize.setter(v25, v26);
    v28 = Artwork.backgroundColor.getter(v27);
    if (!v28)
    {
      sub_1000117FC();
      v28 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v28);

    v29 = (void *)v21(a3, a4);
    objc_msgSend(v29, "setContentMode:", v17);

    v30 = (void *)v21(a3, a4);
    v31 = type metadata accessor for ArtworkView(0);
    v32 = sub_100059C5C();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v20, 2, 1, v30, v31, v32);
    swift_release(a1);
    swift_release(v20);

  }
}

void sub_1001202F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  void *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  v8 = (void *)v7(a3, a4);
  ArtworkView.isImageHidden.setter(1);

  v11 = (id)v7(a3, a4);
  v9 = type metadata accessor for ArtworkView(0);
  v10 = sub_100059C5C();
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, a2, v9, v10);

}

uint64_t sub_1001203A4()
{
  return Artwork.Crop.preferredContentMode.getter();
}

uint64_t sub_1001203C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = AppEvent.moduleVideo.getter(v6);
  if (v7)
  {
    v8 = v7;
    v9 = Video.preview.getter(v7);
    swift_release(v8);
  }
  else
  {
    result = AppEvent.moduleArtwork.getter();
    if (!result)
      return result;
    v9 = result;
  }
  swift_retain(v9);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_artworkView);
  if (qword_1007F3180 != -1)
    swift_once(&qword_1007F3180, sub_100589EBC);
  v12 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v13 = sub_1000117A8(v12, (uint64_t)qword_100857028);
  v14 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v13);
  v16 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v11, "contentMode"), 0, v14, v15);
  Artwork.style.getter(v16);
  v17 = ArtworkView.style.setter(v5);
  *(_QWORD *)&v18 = Artwork.contentMode.getter(v17).n128_u64[0];
  v20 = ArtworkLoaderConfig.size.getter(objc_msgSend(v11, "setContentMode:", v19, v18));
  v22 = ArtworkView.imageSize.setter(v20, v21);
  v23 = Artwork.backgroundColor.getter(v22);
  if (!v23)
  {
    sub_1000117FC();
    v23 = static UIColor.placeholderBackground.getter();
  }
  ArtworkView.backgroundColor.setter(v23);
  v24 = type metadata accessor for ArtworkView(0);
  v25 = sub_100059C5C();
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v16, 2, 1, v11, v24, v25);
  swift_release(v16);
  return swift_release_n(v9, 2);
}

uint64_t sub_10012059C(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17[24];
  UIImage_optional v18;

  v4 = v3;
  v18.value.super.isa = 0;
  v18.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v18, a3);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_titleLabel), "setText:", 0);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventFormattedDateView);
  v6 = type metadata accessor for AppEventFormattedDatePresenter(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *(_QWORD *)(v7 + 32) = 0;
  swift_unknownObjectWeakInit(v7 + 24);
  v8 = v7 + OBJC_IVAR____TtC22SubscribePageExtension30AppEventFormattedDatePresenter_currentFormattedDate;
  v9 = type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC22SubscribePageExtension30AppEventFormattedDatePresenter_updateTimer) = 0;
  *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess(v7 + 24, v17, 1, 0);
  *(_QWORD *)(v7 + 32) = &off_100726CD0;
  swift_unknownObjectWeakAssign(v7 + 24, v5);
  sub_1001EFE40();
  v10 = (uint64_t *)(v5
                  + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter);
  swift_beginAccess(v10, &v16, 1, 0);
  v11 = *v10;
  *v10 = v7;
  swift_release(v11);
  v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventViewTappedAction);
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventViewTappedAction);
  v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventViewTappedAction + 8);
  *v12 = 0;
  v12[1] = 0;
  return sub_100019310(v13, v14);
}

id sub_10012070C(uint64_t a1, __n128 a2)
{
  char *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  char v19[24];

  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_titleLabel];
  AppEvent.title.getter(a1, a2);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_appEventFormattedDateView];
  v10 = AppEvent.formattedDates.getter(v9);
  v11 = type metadata accessor for AppEventFormattedDatePresenter(0);
  v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  *(_QWORD *)(v12 + 32) = 0;
  swift_unknownObjectWeakInit(v12 + 24);
  v13 = v12 + OBJC_IVAR____TtC22SubscribePageExtension30AppEventFormattedDatePresenter_currentFormattedDate;
  v14 = type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC22SubscribePageExtension30AppEventFormattedDatePresenter_updateTimer) = 0;
  *(_QWORD *)(v12 + 16) = v10;
  swift_beginAccess(v12 + 24, v19, 1, 0);
  *(_QWORD *)(v12 + 32) = &off_100726CD0;
  swift_unknownObjectWeakAssign(v12 + 24, v8);
  sub_1001EFE40();
  v15 = (uint64_t *)(v8
                  + OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter);
  swift_beginAccess(v15, &v18, 1, 0);
  v16 = *v15;
  *v15 = v12;
  return objc_msgSend(v3, "setNeedsLayout", swift_release(v16).n128_f64[0]);
}

double *sub_100120878(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;

  v1 = type metadata accessor for Artwork.Crop(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = AppEvent.moduleVideo.getter(v5);
  if (v6)
  {
    v7 = v6;
    v8 = Video.preview.getter(v6);
    swift_release(v7);
  }
  else
  {
    v9 = AppEvent.moduleArtwork.getter();
    if (!v9)
      return _swiftEmptyArrayStorage;
    v8 = v9;
  }
  v10 = swift_retain(v8);
  v11 = Artwork.crop.getter(v10);
  v12 = Artwork.Crop.preferredContentMode.getter(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (qword_1007F3180 != -1)
    swift_once(&qword_1007F3180, sub_100589EBC);
  v13 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v14 = sub_1000117A8(v13, (uint64_t)qword_100857028);
  v15 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v14);
  v17 = Artwork.config(_:mode:prefersLayeredImage:)(v12, 0, v15, v16);
  swift_retain(v17);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  v20 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v19 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v20 >= v19 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
  specialized Array._endMutation()(v21);
  swift_release(v17);
  swift_release_n(v8, 2);
  return (double *)v24;
}

uint64_t sub_100120A14(int a1, int a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v63)(_QWORD);
  double left;
  double bottom;
  double right;
  __int128 v67;
  uint64_t v68;
  __int128 v70;
  char v71;
  char *v72;
  char v73;
  uint64_t v74;
  double v75;
  char *v76;
  double v77;
  __int128 v78;
  char *v79;
  char v80;
  uint64_t v81;
  char *v82;
  char *v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  __int128 v91;
  char *v92;
  double v93;
  double v94;
  char v95;
  uint64_t v96;
  double v97;
  double v98;
  char *v99;
  char *v100;
  __int128 v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  double v113;
  double v114;
  double v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  int v123;
  int v124;
  unsigned int v125;
  void (*v126)(_QWORD);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[2];

  v123 = a2;
  v3 = sub_10000DF3C(&qword_1007F5870);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for PageGrid.HorizontalMargins(0, v4);
  v126 = *(void (**)(_QWORD))(v129 - 8);
  __chkstk_darwin(v129);
  v8 = (_OWORD *)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v9);
  v122 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v121 = (char *)&v107 - v12;
  __chkstk_darwin(v13);
  v120 = (char *)&v107 - v14;
  __chkstk_darwin(v15);
  v118 = (char *)&v107 - v16;
  __chkstk_darwin(v17);
  v117 = (char *)&v107 - v18;
  __chkstk_darwin(v19);
  v116 = (char *)&v107 - v20;
  __chkstk_darwin(v21);
  v112 = (char *)&v107 - v22;
  __chkstk_darwin(v23);
  v111 = (char *)&v107 - v24;
  __chkstk_darwin(v25);
  v110 = (char *)&v107 - v26;
  __chkstk_darwin(v27);
  *(_QWORD *)&v115 = (char *)&v107 - v28;
  __chkstk_darwin(v29);
  v109 = (char *)&v107 - v30;
  __chkstk_darwin(v31);
  v108 = (char *)&v107 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v107 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v107 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v107 - v40;
  __chkstk_darwin(v42);
  v44 = (char *)&v107 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v107 - v46;
  v48 = sub_10000DF3C(&qword_1007F5878);
  v49 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v50 = *(_QWORD *)(v49 + 72);
  v51 = *(unsigned __int8 *)(v49 + 80);
  v52 = (v51 + 32) & ~v51;
  v127 = v50;
  v53 = swift_allocObject(v48, v52 + 6 * v50, v51 | 7);
  *(_OWORD *)(v53 + 16) = xmmword_100671120;
  v119 = v53;
  v128 = v53 + v52;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v54 = xmmword_100856810;
  v124 = a1;
  if ((a1 & 1) != 0)
    v55 = 0x3FF0000000000000;
  else
    v55 = 0x4000000000000000;
  v130[0] = v55;
  v56 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v56);
  v130[0] = 0x4020000000000000;
  v57 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  v130[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  __asm { FMOV            V0.2D, #16.0 }
  *v8 = _Q0;
  v63 = (void (*)(_QWORD))*((_QWORD *)v126 + 13);
  v125 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v126 = v63;
  v63(v8);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v130[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for Bool, &protocol witness table for Bool);
  v130[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v47, v6, v38, v44, v41, v8, *(double *)&v54, *((double *)&v54 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v67 = xmmword_100856820;
  if ((v124 & 1) != 0)
    v68 = 0x3FF0000000000000;
  else
    v68 = 0x4000000000000000;
  v130[0] = v68;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  v130[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  v130[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  __asm { FMOV            V0.2D, #20.0 }
  *v8 = _Q0;
  ((void (*)(_OWORD *, _QWORD, uint64_t))v126)(v8, v125, v129);
  LOBYTE(v130[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for Bool, &protocol witness table for Bool);
  v130[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v35, v6, v38, v44, v41, v8, *(double *)&v67, *((double *)&v67 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v70 = xmmword_100856830;
  v71 = v123;
  v72 = v108;
  v73 = v124;
  if ((v124 & 1) != 0)
    v74 = 0x4000000000000000;
  else
    v74 = 0x4008000000000000;
  v130[0] = v74;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  if ((v71 & 1) != 0)
    v75 = 12.0;
  else
    v75 = 20.0;
  *(double *)v130 = v75;
  v76 = v109;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *(double *)v130 = v75;
  v77 = v115;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *v8 = vdupq_n_s64(0x4041000000000000uLL);
  ((void (*)(_OWORD *, _QWORD, uint64_t))v126)(v8, v125, v129);
  LOBYTE(v130[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for Bool, &protocol witness table for Bool);
  v130[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v72, v6, v44, v76, *(_QWORD *)&v77, v8, *(double *)&v70, *((double *)&v70 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v115 = left;
  v78 = xmmword_100856870;
  v79 = v110;
  v80 = v73;
  v114 = bottom;
  v113 = right;
  if ((v73 & 1) != 0)
    v81 = 0x4000000000000000;
  else
    v81 = 0x4010000000000000;
  v130[0] = v81;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *(double *)v130 = v75;
  v82 = v111;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *(double *)v130 = v75;
  v83 = v112;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *v8 = vdupq_n_s64(0x4041000000000000uLL);
  ((void (*)(_OWORD *, _QWORD, uint64_t))v126)(v8, v125, v129);
  v84 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v86 = v85;
  v88 = v87;
  v90 = v89;
  LOBYTE(v130[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for Bool, &protocol witness table for Bool);
  v130[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v79, v6, v44, v82, v83, v8, *(double *)&v78, *((double *)&v78 + 1), v84, v86, v88, v90);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v91 = xmmword_100856880;
  v92 = v116;
  v93 = v114;
  v94 = v113;
  v95 = v123;
  if ((v80 & 1) != 0)
    v96 = 0x4008000000000000;
  else
    v96 = 0x4014000000000000;
  v130[0] = v96;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  v97 = v115;
  if ((v95 & 1) != 0)
    v98 = 12.0;
  else
    v98 = 24.0;
  *(double *)v130 = v98;
  v99 = v117;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *(double *)v130 = v75;
  v100 = v118;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *v8 = vdupq_n_s64(0x404A000000000000uLL);
  ((void (*)(_OWORD *, _QWORD, uint64_t))v126)(v8, v125, v129);
  LOBYTE(v130[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for Bool, &protocol witness table for Bool);
  v130[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v92, v6, v44, v99, v100, v8, *(double *)&v91, *((double *)&v91 + 1), UIEdgeInsetsZero.top, v97, v93, v94);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v101 = xmmword_100856890;
  v102 = v120;
  if ((v80 & 1) != 0)
    v103 = 0x4008000000000000;
  else
    v103 = 0x4018000000000000;
  v130[0] = v103;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *(double *)v130 = v98;
  v104 = v121;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *(double *)v130 = v75;
  v105 = v122;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  *v8 = vdupq_n_s64(0x404A000000000000uLL);
  ((void (*)(_OWORD *, _QWORD, uint64_t))v126)(v8, v125, v129);
  LOBYTE(v130[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for Bool, &protocol witness table for Bool);
  v130[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v130, &type metadata for CGFloat, v57);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v102, v6, v44, v104, v105, v8, *(double *)&v101, *((double *)&v101 + 1), UIEdgeInsetsZero.top, v97, v93, v94);
  return v119;
}

BOOL static TodayCardTitleBackingGradient.Style.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TodayCardTitleBackingGradient.Style.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int TodayCardTitleBackingGradient.Style.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

unint64_t sub_100121620()
{
  unint64_t result;

  result = qword_1007FBC40;
  if (!qword_1007FBC40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BreakoutBadgeType, &type metadata for BreakoutBadgeType);
    atomic_store(result, (unint64_t *)&qword_1007FBC40);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BreakoutBadgeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001216B0 + 4 * byte_100676BA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001216E4 + 4 * asc_100676BA0[v4]))();
}

uint64_t sub_1001216E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001216EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001216F4);
  return result;
}

uint64_t sub_100121700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100121708);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10012170C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100121714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BreakoutBadgeType()
{
  return &type metadata for BreakoutBadgeType;
}

id sub_100121730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  void *v40;
  uint64_t v41;
  NSString v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)();
  uint64_t v51;
  void (**v52)();
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[24];
  char v64[24];

  v4 = v3;
  v58 = a3;
  v59 = a2;
  v60 = type metadata accessor for BreakoutDetails.BackgroundStyle(0);
  v62 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for BreakoutDetails.TextAlignment(0);
  v7 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BreakoutDetails.Badge(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - v15;
  BreakoutDetails.badge.getter(v17);
  v18 = &v3[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_badge];
  v19 = swift_beginAccess(v18, v64, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v13, v18, v10, v19);
  v20 = swift_beginAccess(v18, v63, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 24))(v18, v16, v10, v20);
  swift_endAccess(v63);
  sub_1004ABBF4((uint64_t)v13, v21);
  v22 = *(void (**)(char *, uint64_t))(v11 + 8);
  v22(v16, v10);
  v23 = ((uint64_t (*)(char *, uint64_t))v22)(v13, v10);
  v24 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_titleLabel];
  BreakoutDetails.title.getter(v23);
  if (v25)
  {
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v24, "setText:", v28, v26);

  v29 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_descriptionLabel];
  BreakoutDetails.description.getter();
  if (v30)
  {
    v32 = v30;
    v33 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  else
  {
    v33 = 0;
  }
  objc_msgSend(v29, "setText:", v33, v31);

  v35 = BreakoutDetails.callToActionButtonAction.getter(v34);
  if (v35)
  {
    v37 = v35;
    Action.title.getter(v36);
    v40 = *(void **)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButton];
    if (v38)
    {
      v41 = v38;
      v42 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v41).n128_u64[0];
    }
    else
    {
      v42 = 0;
    }
    v48 = v59;
    objc_msgSend(v40, "setTitle:forState:", v42, 0, v39);

    v49 = swift_allocObject(&unk_1007293F0, 24, 7);
    swift_unknownObjectWeakInit(v49 + 16, v4);
    v50 = (void (*)())swift_allocObject(&unk_100729418, 40, 7);
    *((_QWORD *)v50 + 2) = v49;
    *((_QWORD *)v50 + 3) = v37;
    v51 = v58;
    *((_QWORD *)v50 + 4) = v58;
    v52 = (void (**)())&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler];
    v53 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler];
    v54 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler + 8];
    *v52 = sub_100122914;
    v52[1] = v50;
    swift_retain(v51);
    v46 = sub_100019310(v53, v54);
    v47 = v60;
  }
  else
  {
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButton], "setTitle:forState:", 0, 0);
    v43 = &v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler];
    v44 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler];
    v45 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension19BreakoutDetailsView_callToActionButtonHandler + 8];
    *(_QWORD *)v43 = 0;
    *((_QWORD *)v43 + 1) = 0;
    v46 = sub_100019310(v44, v45);
    v48 = v59;
    v47 = v60;
  }
  v55 = BreakoutDetails.textAlignment.getter(v46);
  BreakoutDetails.backgroundStyle.getter(v55);
  sub_1004A9690(v48, (uint64_t)v9, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v6, v47);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v61);
  return objc_msgSend(v4, "setNeedsLayout");
}

void sub_100121AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v18[24];
  __int128 v19;
  __int128 v20;
  _BYTE v21[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v18, 0, 0);
      v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        v15 = v14;
        *((_QWORD *)&v20 + 1) = type metadata accessor for BreakoutDetailsView(0);
        *(_QWORD *)&v19 = v15;
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v19, v9, a3);
      v16 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_100011088((uint64_t)&v19, &qword_1007F6E90);
    }
  }
}

void sub_100121C48(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, _QWORD *a4@<X8>, double a5@<D0>)
{
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, __n128);
  double v34;
  int *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  unint64_t v45;
  char v46;
  char v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  char v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char *v66;
  unint64_t v67;
  char v68;
  char v69;
  double v70;
  double v71;
  double v72;
  double v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, __n128);
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  __n128 v112;
  char *v113;
  unint64_t v114;
  char v115;
  char v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  double v121;
  uint64_t v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  id v130;
  char v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  int v143;
  int v144;
  id v145[2];
  id v146;
  char *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  int *v154;
  char *v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(_QWORD *);
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  _QWORD v169[3];
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  _BYTE v175[40];
  _BYTE v176[32];
  uint64_t v177;
  _BYTE v178[40];
  _QWORD v179[3];
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  v167 = a2;
  v148 = a4;
  v153 = type metadata accessor for BreakoutDetails.Badge(0);
  v151 = *(_QWORD *)(v153 - 8);
  v8 = __chkstk_darwin(v153);
  v152 = (char *)v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for LabelPlaceholderCompatibility(0, v8);
  v162 = *(_QWORD *)(v165 - 8);
  v10 = __chkstk_darwin(v165);
  v12 = (char *)v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CharacterSet(0, v10);
  v160 = *(_QWORD *)(v13 - 8);
  v161 = v13;
  v14 = __chkstk_darwin(v13);
  v159 = (char *)v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BreakoutDetailsLayout.Metrics(0, v14);
  v149 = *(_QWORD *)(v16 - 8);
  v150 = v16;
  __chkstk_darwin(v16);
  v147 = (char *)v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v166 = (uint64_t)v145 - v19;
  v20 = type metadata accessor for BreakoutDetails.BackgroundStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v25 = __chkstk_darwin(v24).n128_u64[0];
  v27 = (char *)v145 - v26;
  v168 = objc_msgSend(a3, "traitCollection", v25);
  BreakoutDetails.backgroundStyle.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for BreakoutDetails.BackgroundStyle.material(_:), v20);
  v28 = sub_10000E99C(&qword_1007FBC48, (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetails.BackgroundStyle, (uint64_t)&protocol conformance descriptor for BreakoutDetails.BackgroundStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&v192, v20, v28);
  dispatch thunk of RawRepresentable.rawValue.getter(&v188, v20, v28);
  v29 = v193;
  v30 = v189;
  if (v192 == v188 && v193 == v189)
  {
    v31 = 1;
    v30 = v193;
  }
  else
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v192, v193, v188, v189, 0);
  }
  swift_bridgeObjectRelease(v29);
  v32 = swift_bridgeObjectRelease(v30);
  v33 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
  v33(v23, v20, v32);
  ((void (*)(char *, uint64_t))v33)(v27, v20);
  if ((v31 & 1) != 0)
    v34 = 20.0;
  else
    v34 = 0.0;
  v35 = (int *)type metadata accessor for BreakoutDetailsView.Config(0);
  v36 = v167;
  sub_1004A9990(v167, v166, 0.0, v34, *(double *)(v167 + v35[20]), v34);
  v37 = sub_1000466E4();
  v38 = v36 + v35[10];
  v164 = v37;
  v39 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v38, v168);
  v40 = BreakoutDetails.title.getter();
  if (v41)
  {
    v42 = v41;
    v192 = v40;
    v193 = v41;
    v43 = swift_bridgeObjectRetain(v41);
    v44 = v159;
    static CharacterSet.excessiveLeading.getter(v43);
    v45 = sub_1000C0FAC();
    StringProtocol.rangeOfCharacter(from:options:range:)(v44, 0, 0, 0, 1, &type metadata for String, v45);
    v47 = v46;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v44, v161);
    *(_QWORD *)&v48 = swift_bridgeObjectRelease(v193).n128_u64[0];
    if ((v47 & 1) == 0)
    {
      objc_msgSend(v39, "lineHeight", v48);
      v50 = v49;
      swift_bridgeObjectRelease(v42);
      v51 = ceil(v50 * 1.3);
      if ((~*(_QWORD *)&v51 & 0x7FF0000000000000) != 0)
      {
        if (v51 > -9.22337204e18)
        {
          if (v51 < 9.22337204e18)
          {
            v52 = (uint64_t)v51;
            goto LABEL_16;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_48;
    }
    swift_bridgeObjectRelease(v42);
  }
  v52 = 0;
LABEL_16:
  v53 = BreakoutDetails.title.getter();
  v55 = v54;
  v56 = type metadata accessor for Feature(0);
  v194 = v56;
  v158 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v195 = v158;
  v57 = sub_1000117C0(&v192);
  v156 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v163 = *(void (**)(_QWORD *))(*(_QWORD *)(v56 - 8) + 104);
  v157 = v56;
  v163(v57);
  v58 = v39;
  v59 = isFeatureEnabled(_:)(&v192);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v192);
  v60 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v53, v55, v58, 4, 0, v52, 0, 0, v59 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v192, v60);
  v162 = *(_QWORD *)(v162 + 8);
  ((void (*)(char *, uint64_t))v162)(v12, v165);
  v61 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v167 + v35[13], v168);
  v62 = BreakoutDetails.description.getter();
  v64 = v63;
  v154 = v35;
  v155 = v12;
  v146 = v58;
  if (v63)
  {
    v188 = v62;
    v189 = v63;
    v65 = swift_bridgeObjectRetain(v63);
    v66 = v159;
    static CharacterSet.excessiveLeading.getter(v65);
    v67 = sub_1000C0FAC();
    StringProtocol.rangeOfCharacter(from:options:range:)(v66, 0, 0, 0, 1, &type metadata for String, v67);
    v69 = v68;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v66, v161);
    *(_QWORD *)&v70 = swift_bridgeObjectRelease(v189).n128_u64[0];
    if ((v69 & 1) == 0)
    {
      objc_msgSend(v58, "lineHeight", v70);
      v72 = v71;
      swift_bridgeObjectRelease(v64);
      v73 = ceil(v72 * 1.3);
      if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) != 0)
      {
        if (v73 > -9.22337204e18)
        {
          if (v73 < 9.22337204e18)
          {
            v74 = a1;
            v64 = (uint64_t)v73;
            goto LABEL_24;
          }
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v74 = a1;
    swift_bridgeObjectRelease(v64);
    v64 = 0;
  }
  else
  {
    v74 = a1;
  }
LABEL_24:
  v75 = BreakoutDetails.description.getter();
  v77 = v76;
  v79 = v157;
  v78 = (void *)v158;
  v190 = v157;
  v191 = v158;
  v80 = sub_1000117C0(&v188);
  v81 = v156;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v163)(v80, v156, v79);
  v82 = v61;
  v83 = isFeatureEnabled(_:)(&v188);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v188);
  LOBYTE(v143) = v83 & 1;
  v84 = v155;
  v145[0] = v82;
  v85 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v75, v77, v82, 4, 0, v64, 0, 0, v143);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v188, v85);
  v86 = v165;
  v87 = ((uint64_t (*)(char *, uint64_t))v162)(v84, v165);
  v88 = (uint64_t *)v152;
  v145[1] = v74;
  BreakoutDetails.badge.getter(v87);
  v89 = v151;
  v90 = v153;
  v91 = (*(uint64_t (**)(uint64_t *, uint64_t))(v151 + 88))(v88, v153);
  if (v91 == enum case for BreakoutDetails.Badge.text(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v89 + 96))(v88, v90);
    v92 = *v88;
    v93 = v88[1];
    v94 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v167 + v154[9], v168);
    *((_QWORD *)&v186 + 1) = v79;
    v187 = v78;
    v95 = sub_1000117C0(&v185);
    ((void (*)(_QWORD *, uint64_t, uint64_t))v163)(v95, v81, v79);
    v96 = isFeatureEnabled(_:)(&v185);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v185);
    LOBYTE(v144) = v96 & 1;
    v97 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v92, v93, v94, 4, 0, 0, 0, 0, v144);
    LabelPlaceholderCompatibility.layoutTextView.getter(v179, v97);
    v98 = (void (*)(char *, uint64_t, __n128))v162;
    ((void (*)(char *, uint64_t))v162)(v84, v86);
    v99 = v180;
    v100 = v181;
    v101 = sub_100011064(v179, v180);
    *((_QWORD *)&v183 + 1) = v99;
    v184 = *(_QWORD *)(v100 + 8);
    v102 = sub_1000117C0(&v182);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v102, v101, v99);
    sub_10006C29C((uint64_t)&v182, (uint64_t)&v185, &qword_1007FAF60);
    v103 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v179);
    v104 = BreakoutDetails.callToActionButtonAction.getter(v103);
    if (v104)
      goto LABEL_26;
LABEL_41:
    v184 = 0;
    v182 = 0u;
    v183 = 0u;
    goto LABEL_42;
  }
  if (v91 == enum case for BreakoutDetails.Badge.wordmark(_:))
  {
    v123 = *(double *)(v167 + 32);
    v124 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v124, *(unsigned int *)(v124 + 48), *(unsigned __int16 *)(v124 + 52));
    v125 = LayoutViewPlaceholder.init(representing:)(a5, v123);
    *((_QWORD *)&v186 + 1) = v124;
    v187 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v185 = v125;
  }
  else
  {
    v187 = 0;
    v185 = 0u;
    v186 = 0u;
    if (v91 != enum case for BreakoutDetails.Badge.none(_:))
      (*(void (**)(uint64_t *, uint64_t))(v89 + 8))(v88, v90);
  }
  v84 = v155;
  v98 = (void (*)(char *, uint64_t, __n128))v162;
  v104 = ((uint64_t (*)(void))BreakoutDetails.callToActionButtonAction.getter)();
  if (!v104)
    goto LABEL_41;
LABEL_26:
  v105 = v104;
  v106 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v167 + v154[14], v168);
  v108 = Action.title.getter(v107);
  if (!v109)
  {
    v122 = 0;
    v119 = v157;
    v118 = v158;
    goto LABEL_38;
  }
  v111 = v109;
  *(_QWORD *)&v182 = v108;
  *((_QWORD *)&v182 + 1) = v109;
  v112 = swift_bridgeObjectRetain(v109);
  v113 = v159;
  static CharacterSet.excessiveLeading.getter(v112);
  v114 = sub_1000C0FAC();
  StringProtocol.rangeOfCharacter(from:options:range:)(v113, 0, 0, 0, 1, &type metadata for String, v114);
  v116 = v115;
  (*(void (**)(char *, uint64_t))(v160 + 8))(v113, v161);
  *(_QWORD *)&v117 = swift_bridgeObjectRelease(*((_QWORD *)&v182 + 1)).n128_u64[0];
  v119 = v157;
  v118 = v158;
  if ((v116 & 1) != 0)
  {
    v110 = swift_bridgeObjectRelease(v111);
    v122 = 0;
    goto LABEL_38;
  }
  objc_msgSend(v106, "lineHeight", v117);
  v121 = v120;
  v110 = swift_bridgeObjectRelease(v111);
  v110.n128_f64[0] = ceil(v121 * 1.3);
  if ((~v110.n128_u64[0] & 0x7FF0000000000000) == 0)
    goto LABEL_52;
  if (v110.n128_f64[0] <= -9.22337204e18)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v110.n128_f64[0] >= 9.22337204e18)
  {
LABEL_54:
    __break(1u);
    return;
  }
  v122 = (uint64_t)v110.n128_f64[0];
LABEL_38:
  v126 = Action.title.getter(v110);
  v128 = v127;
  *((_QWORD *)&v183 + 1) = v119;
  v184 = v118;
  v129 = sub_1000117C0(&v182);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v163)(v129, v156, v119);
  v130 = v106;
  v131 = isFeatureEnabled(_:)(&v182);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v182);
  LOBYTE(v144) = v131 & 1;
  v132 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v126, v128, v130, 4, 0, v122, 0, 0, v144);
  LabelPlaceholderCompatibility.layoutTextView.getter(v179, v132);

  v133 = swift_release(v105);
  v98(v84, v165, v133);
  sub_10006C29C((uint64_t)v179, (uint64_t)&v182, &qword_1007FD370);
LABEL_42:
  v135 = v149;
  v134 = v150;
  v136 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v147, v166, v150);
  sub_100011020((uint64_t)&v192, (uint64_t)v179);
  sub_100011020((uint64_t)&v188, (uint64_t)v178);
  v177 = 0;
  memset(v176, 0, sizeof(v176));
  sub_1000194E4((uint64_t)&v185, (uint64_t)v175, &qword_1007FAF60);
  sub_1000194E4((uint64_t)&v182, (uint64_t)v169, &qword_1007FD370);
  v137 = v170;
  if (v170)
  {
    v138 = v171;
    v139 = sub_100011064(v169, v170);
    *((_QWORD *)&v173 + 1) = v137;
    v174 = *(_QWORD *)(v138 + 8);
    v140 = sub_1000117C0(&v172);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v140, v139, v137);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v169);
  }
  else
  {
    sub_100011088((uint64_t)v169, &qword_1007FD370);
    v172 = 0u;
    v173 = 0u;
    v174 = 0;
  }
  v141 = type metadata accessor for BreakoutDetailsLayout(0);
  v142 = v148;
  v148[3] = v141;
  v142[4] = sub_10000E99C(&qword_1007FBC50, (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetailsLayout, (uint64_t)&protocol conformance descriptor for BreakoutDetailsLayout);
  v142[5] = sub_10000E99C(&qword_1007FBC58, (uint64_t (*)(uint64_t))&type metadata accessor for BreakoutDetailsLayout, (uint64_t)&protocol conformance descriptor for BreakoutDetailsLayout);
  sub_1000117C0(v142);
  BreakoutDetailsLayout.init(metrics:titleLabel:descriptionLabel:badgeText:badgeWordmark:callToActionButton:)(v136, v179, v178, v176, v175, &v172);

  sub_100011088((uint64_t)&v182, &qword_1007FD370);
  sub_100011088((uint64_t)&v185, &qword_1007FAF60);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v188);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v192);
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v166, v134);
}

uint64_t sub_1001228BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001228E0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100122914()
{
  uint64_t *v0;

  sub_100121AF8(v0[2], v0[3], v0[4]);
}

void sub_100122920(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double (*v16)(char *, uint64_t);
  __n128 v17;
  uint64_t KeyPath;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  char *v27;
  double *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  unsigned __int8 v33;

  v31 = a1;
  v30 = a3;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v12);
  v13 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v15 = v14;
  v16 = *(double (**)(char *, uint64_t))(v9 + 8);
  v17.n128_f64[0] = v16(v11, v8);
  ShelfLayoutContext.shelf.getter(v17);
  KeyPath = swift_getKeyPath(&unk_100676CB8);
  ReadOnlyLens.subscript.getter(KeyPath, v4);
  v19 = swift_release(KeyPath);
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v19);
  v21 = v33;
  v22 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v23 = PageGrid.containerWidth.getter(v22);
  v24 = ((uint64_t (*)(char *, uint64_t))v16)(v11, v8);
  v25 = ShelfLayoutContext.traitCollection.getter(v24);
  v26 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v27 = (char *)objc_allocWithZone(v26);
  v28 = (double *)&v27[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v28 = v23;
  v28[1] = 1.79769313e308;
  *(_QWORD *)&v27[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v25;
  v32.receiver = v27;
  v32.super_class = v26;
  v29 = objc_msgSendSuper2(&v32, "init");
  (*(void (**)(uint64_t, id, uint64_t, double, double))(*(_QWORD *)(a2 + 8) + 16))(v21, v29, v31, v13, v15);

}

uint64_t sub_100122B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  double *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;

  v28 = a5;
  v27[3] = a6;
  v27[1] = a2;
  v9 = type metadata accessor for ShelfLayoutContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007FBC60);
  __chkstk_darwin(v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ComponentPrefetchSizing(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[2] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v18);
  dispatch thunk of static ArtworkPrefetchingShelfComponentView.sizingForArtworkPrefetch(in:asPartOf:)(v12, a3, a4, v28);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_100011088((uint64_t)v15, &qword_1007FBC60);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  v22 = sub_100122D60();
  __chkstk_darwin(v22);
  v27[-2] = v20;
  v23 = (uint64_t)sub_1002C1368((void (*)(uint64_t *__return_ptr, uint64_t *))sub_100123014, (uint64_t)&v27[-4], (uint64_t)v22);
  swift_bridgeObjectRelease(v22);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v25 = v23;
    else
      v25 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v23);
    if (!v26)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v23);
LABEL_6:
  v24 = swift_bridgeObjectRelease(v23);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v17 + 8))(v20, v16, v24);
}

double *sub_100122D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath("(\v\x1B");
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v12 = swift_getKeyPath(&unk_100676C88);
  ReadOnlyLens.subscript.getter(v12, v7);
  v13 = swift_release(v12);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
  v14 = sub_100123038();
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v3, v0, v14);
  v16 = *(void (**)(char *, uint64_t))(v1 + 8);
  v16(v3, v0);
  v16(v6, v0);
  if ((v15 & 1) != 0)
    return _swiftEmptyArrayStorage;
  v17 = sub_10000DF3C(&qword_1007FBC68);
  ItemLayoutContext.typedModel<A>(as:)(&v26, v17, v17);
  if (!v27)
  {
    sub_100011088((uint64_t)&v26, (uint64_t *)&unk_100813F70);
    return _swiftEmptyArrayStorage;
  }
  sub_100010F3C(&v26, (uint64_t)v28);
  v18 = v29;
  v19 = v30;
  sub_100011064(v28, v29);
  v20 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v18, v19);
  if (!v20)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v28);
    return _swiftEmptyArrayStorage;
  }
  v21 = v20;
  v22 = sub_10000DF3C(&qword_1007F5840);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)&v26 = v23;
  specialized Array._endMutation()(v23);
  v24 = v26;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v28);
  return (double *)v24;
}

