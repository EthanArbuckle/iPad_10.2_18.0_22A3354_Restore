double sub_1000025F4()
{
  double result;

  result = 59.0;
  xmmword_1000631F0 = xmmword_10004DD80;
  return result;
}

int64x2_t sub_100002608()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404E000000000000uLL);
  xmmword_100063200 = (__int128)result;
  return result;
}

int64x2_t sub_10000261C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_100063210 = (__int128)result;
  return result;
}

uint64_t sub_100002630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int64_t v33;
  uint64_t v34;
  int *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  double *v59;
  CGFloat tx;
  CGFloat ty;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  double *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD *v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  __int128 v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  CGAffineTransform v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;

  v125 = a2;
  v109 = type metadata accessor for AppIconConfiguration(0);
  v5 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v7 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004380(&qword_100060960);
  __chkstk_darwin(v8);
  v111 = (uint64_t *)((char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = sub_100004380(&qword_100060968);
  __chkstk_darwin(v110);
  v113 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100004380(&qword_100060970);
  v11 = __chkstk_darwin(v124);
  *(_QWORD *)&v112 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v114 = (char *)&v106 - v13;
  v14 = sub_100004380(&qword_100060978);
  __chkstk_darwin(v14);
  v108 = (uint64_t)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100004380(&qword_100060980);
  __chkstk_darwin(v107);
  v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100004380(&qword_100060988);
  __chkstk_darwin(v18);
  v20 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100004380(&qword_100060990);
  v21 = __chkstk_darwin(v119);
  v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v106 - v24;
  v121 = sub_100004380(&qword_100060998);
  __chkstk_darwin(v121);
  v123 = (uint64_t)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100004380(&qword_1000609A0);
  __chkstk_darwin(v117);
  v115 = (uint64_t)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100004380(&qword_1000609A8);
  __chkstk_darwin(v122);
  v118 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for AppIcon(0);
  v29 = *(_QWORD *)(v116 - 8);
  v30 = __chkstk_darwin(v116);
  v32 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v120 = a1;
  v33 = *(_QWORD *)(a1 + 16);
  if (v33 == 1)
  {
    v45 = v107;
    v46 = v18;
    v113 = v23;
    v114 = v25;
    v47 = v108;
    sub_1000043C0(v120 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), v108, type metadata accessor for AppIcon);
    v48 = v116;
    v49 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v47, 0, 1, v116);
    if (qword_100060838 != -1)
      v49 = swift_once(&qword_100060838, sub_100002608);
    v50 = xmmword_100063200;
    v51 = static Alignment.center.getter(v49);
    _FrameLayout.init(width:height:alignment:)(&v127, v50, 0, *((_QWORD *)&v50 + 1), 0, v51, v52);
    sub_1000047CC(v47, (uint64_t)v17, &qword_100060978);
    v53 = &v17[*(int *)(v45 + 36)];
    v54 = v128;
    *(_OWORD *)v53 = v127;
    *((_OWORD *)v53 + 1) = v54;
    *((_OWORD *)v53 + 2) = v129;
    v55 = sub_100004810(v47, &qword_100060978);
    v56 = static UnitPoint.center.getter(v55);
    v58 = v57;
    sub_1000047CC((uint64_t)v17, (uint64_t)v20, &qword_100060980);
    v59 = (double *)&v20[*(int *)(v46 + 36)];
    *v59 = -0.436332313;
    v59[1] = v56;
    *((_QWORD *)v59 + 2) = v58;
    sub_100004810((uint64_t)v17, &qword_100060980);
    CGAffineTransformMakeTranslation(&v126, 16.0, 9.0);
    v120 = *(_OWORD *)&v126.a;
    v112 = *(_OWORD *)&v126.c;
    tx = v126.tx;
    ty = v126.ty;
    v62 = (uint64_t)v113;
    sub_1000047CC((uint64_t)v20, (uint64_t)v113, &qword_100060988);
    v63 = v119;
    v64 = v62 + *(int *)(v119 + 36);
    v65 = v112;
    *(_OWORD *)v64 = v120;
    *(_OWORD *)(v64 + 16) = v65;
    *(CGFloat *)(v64 + 32) = tx;
    *(CGFloat *)(v64 + 40) = ty;
    sub_100004810((uint64_t)v20, &qword_100060988);
    v66 = &qword_100060990;
    v67 = (uint64_t)v114;
    sub_100004788(v62, (uint64_t)v114, &qword_100060990);
    v68 = v115;
    sub_1000047CC(v67, v115, &qword_100060990);
    swift_storeEnumTagMultiPayload(v68, v117, 1);
    v69 = sub_1000044EC();
    v70 = sub_100004534();
    v71 = (uint64_t)v118;
    _ConditionalContent<>.init(storage:)(v68, v48, v63, v69, v70);
    v72 = v123;
    sub_1000047CC(v71, v123, &qword_1000609A8);
    swift_storeEnumTagMultiPayload(v72, v121, 0);
    v73 = sub_100004484();
    v74 = sub_1000046F4();
    _ConditionalContent<>.init(storage:)(v72, v122, v124, v73, v74);
    sub_100004810(v71, &qword_1000609A8);
    v75 = v67;
  }
  else
  {
    if (!v33)
    {
      v34 = UUID.init()(v30);
      v35 = (int *)v109;
      *(_QWORD *)&v32[*(int *)(v109 + 20)] = 0;
      v36 = &v32[v35[6]];
      *(_QWORD *)v36 = 0;
      *((_QWORD *)v36 + 1) = 0;
      v36[16] = 1;
      v32[v35[7]] = 0;
      v32[v35[8]] = 1;
      static WidgetAccentedRenderingMode.fullColor.getter(v34);
      v37 = v115;
      sub_1000043C0((uint64_t)v32, v115, type metadata accessor for AppIcon);
      swift_storeEnumTagMultiPayload(v37, v117, 0);
      v38 = sub_1000044EC();
      v39 = sub_100004534();
      v40 = (uint64_t)v118;
      _ConditionalContent<>.init(storage:)(v37, v116, v119, v38, v39);
      v41 = v123;
      sub_1000047CC(v40, v123, &qword_1000609A8);
      swift_storeEnumTagMultiPayload(v41, v121, 0);
      v42 = sub_100004484();
      v43 = sub_1000046F4();
      _ConditionalContent<>.init(storage:)(v41, v122, v124, v42, v43);
      sub_100004810(v40, &qword_1000609A8);
      return sub_100004404((uint64_t)v32);
    }
    *(_QWORD *)&v127 = _swiftEmptyArrayStorage;
    v76 = v120;
    swift_bridgeObjectRetain(v120);
    sub_10002D994(0, v33, 0);
    v77 = v76 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v78 = *(_QWORD *)(v29 + 72);
    v79 = v127;
    do
    {
      sub_1000043C0(v77, (uint64_t)v32, type metadata accessor for AppIcon);
      sub_1000043C0((uint64_t)v32, (uint64_t)v7, type metadata accessor for AppIconConfiguration);
      sub_100004404((uint64_t)v32);
      if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
      {
        sub_10002D994(0, *(_QWORD *)(v79 + 16) + 1, 1);
        v79 = v127;
      }
      v81 = *(_QWORD *)(v79 + 16);
      v80 = *(_QWORD *)(v79 + 24);
      if (v81 >= v80 >> 1)
      {
        sub_10002D994(v80 > 1, v81 + 1, 1);
        v79 = v127;
      }
      *(_QWORD *)(v79 + 16) = v81 + 1;
      sub_100004440((uint64_t)v7, v79+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v81);
      v77 += v78;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease(v120);
    v82 = sub_10000B084(v79, 6, 0, 1);
    v83 = swift_release(v79);
    v84 = static HorizontalAlignment.center.getter(v83);
    v85 = (uint64_t)v111;
    *v111 = v84;
    *(_QWORD *)(v85 + 8) = 0;
    *(_BYTE *)(v85 + 16) = 1;
    v86 = sub_100004380(&qword_1000609B0);
    sub_100003098(v82, v85 + *(int *)(v86 + 44), a3);
    v87 = swift_bridgeObjectRelease(v82);
    v88 = static UnitPoint.center.getter(v87);
    v90 = v89;
    v91 = (uint64_t)v113;
    sub_1000047CC(v85, (uint64_t)v113, &qword_100060960);
    v92 = (double *)(v91 + *(int *)(v110 + 36));
    *v92 = -0.261799388;
    v92[1] = v88;
    *((_QWORD *)v92 + 2) = v90;
    v93 = sub_100004810(v85, &qword_100060960);
    if (qword_100060830 != -1)
      v93 = swift_once(&qword_100060830, sub_1000025F4);
    v95 = *((_QWORD *)&xmmword_1000631F0 + 1);
    v94 = xmmword_1000631F0;
    v96 = static Alignment.center.getter(v93);
    _FrameLayout.init(width:height:alignment:)(&v127, v94, 0, v95, 0, v96, v97);
    v98 = v112;
    sub_1000047CC(v91, v112, &qword_100060968);
    v99 = v124;
    v100 = (_OWORD *)(v98 + *(int *)(v124 + 36));
    v101 = v128;
    *v100 = v127;
    v100[1] = v101;
    v100[2] = v129;
    sub_100004810(v91, &qword_100060968);
    v66 = &qword_100060970;
    v102 = (uint64_t)v114;
    sub_100004788(v98, (uint64_t)v114, &qword_100060970);
    v103 = v123;
    sub_1000047CC(v102, v123, &qword_100060970);
    swift_storeEnumTagMultiPayload(v103, v121, 1);
    v104 = sub_100004484();
    v105 = sub_1000046F4();
    _ConditionalContent<>.init(storage:)(v103, v122, v99, v104, v105);
    v75 = v102;
  }
  return sub_100004810(v75, v66);
}

uint64_t sub_100003098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_100004380(&qword_100060A08);
  v7 = __chkstk_darwin(v6);
  v33 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v32 = (uint64_t)&v32 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v32 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v32 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v32 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v32 - v21;
  *(_QWORD *)v22 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v23 = sub_100004380(&qword_100060A10);
  v24 = sub_100003328(a1, (uint64_t)&v22[*(int *)(v23 + 44)], a3);
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v24);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v25 = sub_1000037CC(a1, (uint64_t)&v19[*(int *)(v23 + 44)], a3);
  *(_QWORD *)v16 = static VerticalAlignment.center.getter(v25);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  sub_100003C74(a1, (uint64_t)&v16[*(int *)(v23 + 44)], a3);
  sub_1000047CC((uint64_t)v22, (uint64_t)v13, &qword_100060A08);
  v26 = v32;
  sub_1000047CC((uint64_t)v19, v32, &qword_100060A08);
  v27 = v33;
  sub_1000047CC((uint64_t)v16, v33, &qword_100060A08);
  sub_1000047CC((uint64_t)v13, a2, &qword_100060A08);
  v28 = (int *)sub_100004380(&qword_100060A18);
  v29 = a2 + v28[12];
  *(double *)v29 = a3;
  *(_BYTE *)(v29 + 8) = 0;
  sub_1000047CC(v26, a2 + v28[16], &qword_100060A08);
  v30 = a2 + v28[20];
  *(double *)v30 = a3;
  *(_BYTE *)(v30 + 8) = 0;
  sub_1000047CC(v27, a2 + v28[24], &qword_100060A08);
  sub_100004810((uint64_t)v16, &qword_100060A08);
  sub_100004810((uint64_t)v19, &qword_100060A08);
  sub_100004810((uint64_t)v22, &qword_100060A08);
  sub_100004810(v27, &qword_100060A08);
  sub_100004810(v26, &qword_100060A08);
  return sub_100004810((uint64_t)v13, &qword_100060A08);
}

uint64_t sub_100003328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  CGFloat tx;
  CGFloat ty;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  CGFloat v43;
  CGFloat v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  CGAffineTransform v58;
  _OWORD v59[3];
  CGAffineTransform v60;

  v7 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004380(&qword_100060A28);
  v14 = __chkstk_darwin(v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v51 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v51 - v19;
  v21 = __chkstk_darwin(v18);
  if (*(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)&v55 = *(_QWORD *)(a1 + 16);
    v56 = v21;
    v57 = (uint64_t)&v51 - v22;
    v51 = v23;
    v52 = a2;
    v3 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
    a1 += (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v24 = sub_1000043C0(a1, (uint64_t)v9, type metadata accessor for AppIconConfiguration);
    if (qword_100060840 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  v24 = swift_once(&qword_100060840, sub_10000261C);
LABEL_3:
  v25 = xmmword_100063210;
  v26 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(v59, v25, 0, *((_QWORD *)&v25 + 1), 0, v26, v27);
  sub_1000043C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for AppIcon);
  v28 = &v12[*(int *)(v10 + 36)];
  v29 = v59[1];
  *(_OWORD *)v28 = v59[0];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v59[2];
  sub_100004404((uint64_t)v9);
  CGAffineTransformMakeTranslation(&v60, 0.0, 0.0);
  v54 = *(_OWORD *)&v60.a;
  v53 = *(_OWORD *)&v60.c;
  tx = v60.tx;
  ty = v60.ty;
  sub_1000047CC((uint64_t)v12, (uint64_t)v20, &qword_100060A20);
  v32 = v56;
  v33 = &v20[*(int *)(v56 + 36)];
  v34 = v53;
  *(_OWORD *)v33 = v54;
  *((_OWORD *)v33 + 1) = v34;
  *((CGFloat *)v33 + 4) = tx;
  *((CGFloat *)v33 + 5) = ty;
  sub_100004810((uint64_t)v12, &qword_100060A20);
  v35 = v57;
  result = sub_100004788((uint64_t)v20, v57, &qword_100060A28);
  if ((unint64_t)v55 < 2)
  {
    __break(1u);
  }
  else
  {
    v37 = sub_1000043C0(a1 + *(_QWORD *)(v3 + 72), (uint64_t)v9, type metadata accessor for AppIconConfiguration);
    v38 = xmmword_100063210;
    v39 = static Alignment.center.getter(v37);
    _FrameLayout.init(width:height:alignment:)(&v60, v38, 0, *((_QWORD *)&v38 + 1), 0, v39, v40);
    sub_1000043C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for AppIcon);
    v41 = &v12[*(int *)(v10 + 36)];
    v42 = *(_OWORD *)&v60.c;
    *(_OWORD *)v41 = *(_OWORD *)&v60.a;
    *((_OWORD *)v41 + 1) = v42;
    *((_OWORD *)v41 + 2) = *(_OWORD *)&v60.tx;
    sub_100004404((uint64_t)v9);
    CGAffineTransformMakeTranslation(&v58, 0.0, 0.0);
    v55 = *(_OWORD *)&v58.a;
    v54 = *(_OWORD *)&v58.c;
    v43 = v58.tx;
    v44 = v58.ty;
    sub_1000047CC((uint64_t)v12, (uint64_t)v17, &qword_100060A20);
    v45 = &v17[*(int *)(v32 + 36)];
    v46 = v54;
    *(_OWORD *)v45 = v55;
    *((_OWORD *)v45 + 1) = v46;
    *((CGFloat *)v45 + 4) = v43;
    *((CGFloat *)v45 + 5) = v44;
    sub_100004810((uint64_t)v12, &qword_100060A20);
    sub_100004788((uint64_t)v17, (uint64_t)v20, &qword_100060A28);
    sub_1000047CC(v35, (uint64_t)v17, &qword_100060A28);
    v47 = v51;
    sub_1000047CC((uint64_t)v20, v51, &qword_100060A28);
    v48 = v52;
    sub_1000047CC((uint64_t)v17, v52, &qword_100060A28);
    v49 = sub_100004380(&qword_100060A30);
    v50 = v48 + *(int *)(v49 + 48);
    *(double *)v50 = a3;
    *(_BYTE *)(v50 + 8) = 0;
    sub_1000047CC(v47, v48 + *(int *)(v49 + 64), &qword_100060A28);
    sub_100004810((uint64_t)v20, &qword_100060A28);
    sub_100004810(v35, &qword_100060A28);
    sub_100004810(v47, &qword_100060A28);
    return sub_100004810((uint64_t)v17, &qword_100060A28);
  }
  return result;
}

uint64_t sub_1000037CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  CGFloat tx;
  CGFloat ty;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t result;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  CGFloat v44;
  CGFloat v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  CGAffineTransform v60;
  _OWORD v61[3];
  CGAffineTransform v62;

  v7 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004380(&qword_100060A28);
  v14 = __chkstk_darwin(v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v52 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v52 - v19;
  v21 = __chkstk_darwin(v18);
  v24 = (char *)&v52 - v23;
  if (*(_QWORD *)(a1 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v58 = *(_QWORD *)(a1 + 16);
    v59 = v21;
    v54 = v22;
    v55 = a2;
    v25 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
    v3 = *(_QWORD *)(v25 + 72);
    v53 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v26 = sub_1000043C0(v53 + 2 * v3, (uint64_t)v9, type metadata accessor for AppIconConfiguration);
    if (qword_100060840 == -1)
      goto LABEL_3;
  }
  v26 = swift_once(&qword_100060840, sub_10000261C);
LABEL_3:
  v27 = xmmword_100063210;
  v28 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v61, v27, 0, *((_QWORD *)&v27 + 1), 0, v28, v29);
  sub_1000043C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for AppIcon);
  v30 = &v12[*(int *)(v10 + 36)];
  v31 = v61[1];
  *(_OWORD *)v30 = v61[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v61[2];
  sub_100004404((uint64_t)v9);
  CGAffineTransformMakeTranslation(&v62, 0.0, 0.0);
  v57 = *(_OWORD *)&v62.a;
  v56 = *(_OWORD *)&v62.c;
  tx = v62.tx;
  ty = v62.ty;
  sub_1000047CC((uint64_t)v12, (uint64_t)v20, &qword_100060A20);
  v34 = v59;
  v35 = &v20[*(int *)(v59 + 36)];
  v36 = v56;
  *(_OWORD *)v35 = v57;
  *((_OWORD *)v35 + 1) = v36;
  *((CGFloat *)v35 + 4) = tx;
  *((CGFloat *)v35 + 5) = ty;
  sub_100004810((uint64_t)v12, &qword_100060A20);
  result = sub_100004788((uint64_t)v20, (uint64_t)v24, &qword_100060A28);
  if ((unint64_t)v58 < 4)
  {
    __break(1u);
  }
  else
  {
    v38 = sub_1000043C0(v53 + 3 * v3, (uint64_t)v9, type metadata accessor for AppIconConfiguration);
    v39 = xmmword_100063210;
    v40 = static Alignment.center.getter(v38);
    _FrameLayout.init(width:height:alignment:)(&v62, v39, 0, *((_QWORD *)&v39 + 1), 0, v40, v41);
    sub_1000043C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for AppIcon);
    v42 = &v12[*(int *)(v10 + 36)];
    v43 = *(_OWORD *)&v62.c;
    *(_OWORD *)v42 = *(_OWORD *)&v62.a;
    *((_OWORD *)v42 + 1) = v43;
    *((_OWORD *)v42 + 2) = *(_OWORD *)&v62.tx;
    sub_100004404((uint64_t)v9);
    CGAffineTransformMakeTranslation(&v60, 0.0, 0.0);
    v58 = *(_OWORD *)&v60.a;
    v57 = *(_OWORD *)&v60.c;
    v44 = v60.tx;
    v45 = v60.ty;
    sub_1000047CC((uint64_t)v12, (uint64_t)v17, &qword_100060A20);
    v46 = &v17[*(int *)(v34 + 36)];
    v47 = v57;
    *(_OWORD *)v46 = v58;
    *((_OWORD *)v46 + 1) = v47;
    *((CGFloat *)v46 + 4) = v44;
    *((CGFloat *)v46 + 5) = v45;
    sub_100004810((uint64_t)v12, &qword_100060A20);
    sub_100004788((uint64_t)v17, (uint64_t)v20, &qword_100060A28);
    sub_1000047CC((uint64_t)v24, (uint64_t)v17, &qword_100060A28);
    v48 = v54;
    sub_1000047CC((uint64_t)v20, v54, &qword_100060A28);
    v49 = v55;
    sub_1000047CC((uint64_t)v17, v55, &qword_100060A28);
    v50 = sub_100004380(&qword_100060A30);
    v51 = v49 + *(int *)(v50 + 48);
    *(double *)v51 = a3;
    *(_BYTE *)(v51 + 8) = 0;
    sub_1000047CC(v48, v49 + *(int *)(v50 + 64), &qword_100060A28);
    sub_100004810((uint64_t)v20, &qword_100060A28);
    sub_100004810((uint64_t)v24, &qword_100060A28);
    sub_100004810(v48, &qword_100060A28);
    return sub_100004810((uint64_t)v17, &qword_100060A28);
  }
  return result;
}

uint64_t sub_100003C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  CGFloat tx;
  CGFloat ty;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t result;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  CGFloat v44;
  CGFloat v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  CGAffineTransform v60;
  _OWORD v61[3];
  CGAffineTransform v62;

  v7 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004380(&qword_100060A28);
  v14 = __chkstk_darwin(v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v52 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v52 - v19;
  v21 = __chkstk_darwin(v18);
  v24 = (char *)&v52 - v23;
  if (*(_QWORD *)(a1 + 16) < 5uLL)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v58 = *(_QWORD *)(a1 + 16);
    v59 = v21;
    v54 = v22;
    v55 = a2;
    v25 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
    v3 = *(_QWORD *)(v25 + 72);
    v53 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v26 = sub_1000043C0(v53 + 4 * v3, (uint64_t)v9, type metadata accessor for AppIconConfiguration);
    if (qword_100060840 == -1)
      goto LABEL_3;
  }
  v26 = swift_once(&qword_100060840, sub_10000261C);
LABEL_3:
  v27 = xmmword_100063210;
  v28 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v61, v27, 0, *((_QWORD *)&v27 + 1), 0, v28, v29);
  sub_1000043C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for AppIcon);
  v30 = &v12[*(int *)(v10 + 36)];
  v31 = v61[1];
  *(_OWORD *)v30 = v61[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v61[2];
  sub_100004404((uint64_t)v9);
  CGAffineTransformMakeTranslation(&v62, 0.0, 0.0);
  v57 = *(_OWORD *)&v62.a;
  v56 = *(_OWORD *)&v62.c;
  tx = v62.tx;
  ty = v62.ty;
  sub_1000047CC((uint64_t)v12, (uint64_t)v20, &qword_100060A20);
  v34 = v59;
  v35 = &v20[*(int *)(v59 + 36)];
  v36 = v56;
  *(_OWORD *)v35 = v57;
  *((_OWORD *)v35 + 1) = v36;
  *((CGFloat *)v35 + 4) = tx;
  *((CGFloat *)v35 + 5) = ty;
  sub_100004810((uint64_t)v12, &qword_100060A20);
  result = sub_100004788((uint64_t)v20, (uint64_t)v24, &qword_100060A28);
  if ((unint64_t)v58 < 6)
  {
    __break(1u);
  }
  else
  {
    v38 = sub_1000043C0(v53 + 5 * v3, (uint64_t)v9, type metadata accessor for AppIconConfiguration);
    v39 = xmmword_100063210;
    v40 = static Alignment.center.getter(v38);
    _FrameLayout.init(width:height:alignment:)(&v62, v39, 0, *((_QWORD *)&v39 + 1), 0, v40, v41);
    sub_1000043C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for AppIcon);
    v42 = &v12[*(int *)(v10 + 36)];
    v43 = *(_OWORD *)&v62.c;
    *(_OWORD *)v42 = *(_OWORD *)&v62.a;
    *((_OWORD *)v42 + 1) = v43;
    *((_OWORD *)v42 + 2) = *(_OWORD *)&v62.tx;
    sub_100004404((uint64_t)v9);
    CGAffineTransformMakeTranslation(&v60, 0.0, 0.0);
    v58 = *(_OWORD *)&v60.a;
    v57 = *(_OWORD *)&v60.c;
    v44 = v60.tx;
    v45 = v60.ty;
    sub_1000047CC((uint64_t)v12, (uint64_t)v17, &qword_100060A20);
    v46 = &v17[*(int *)(v34 + 36)];
    v47 = v57;
    *(_OWORD *)v46 = v58;
    *((_OWORD *)v46 + 1) = v47;
    *((CGFloat *)v46 + 4) = v44;
    *((CGFloat *)v46 + 5) = v45;
    sub_100004810((uint64_t)v12, &qword_100060A20);
    sub_100004788((uint64_t)v17, (uint64_t)v20, &qword_100060A28);
    sub_1000047CC((uint64_t)v24, (uint64_t)v17, &qword_100060A28);
    v48 = v54;
    sub_1000047CC((uint64_t)v20, v54, &qword_100060A28);
    v49 = v55;
    sub_1000047CC((uint64_t)v17, v55, &qword_100060A28);
    v50 = sub_100004380(&qword_100060A30);
    v51 = v49 + *(int *)(v50 + 48);
    *(double *)v51 = a3;
    *(_BYTE *)(v51 + 8) = 0;
    sub_1000047CC(v48, v49 + *(int *)(v50 + 64), &qword_100060A28);
    sub_100004810((uint64_t)v20, &qword_100060A28);
    sub_100004810((uint64_t)v24, &qword_100060A28);
    sub_100004810(v48, &qword_100060A28);
    return sub_100004810((uint64_t)v17, &qword_100060A28);
  }
  return result;
}

uint64_t sub_100004124()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10000413C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100002630(*(_QWORD *)v1, a1, *(double *)(v1 + 8));
}

BOOL sub_100004148(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

__n128 initializeWithTake for ThumbnailFallbackView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10000416C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000418C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1000041DC(a1, &qword_100060950, (uint64_t)&unk_10005D938);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1000041DC(a1, &qword_100060958, (uint64_t)&unk_10005D9B8);
}

void sub_1000041DC(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ThumbnailFallbackView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ThumbnailFallbackView(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for ThumbnailFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  return a1;
}

uint64_t *assignWithTake for ThumbnailFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ThumbnailFallbackView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThumbnailFallbackView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailFallbackView()
{
  return &type metadata for ThumbnailFallbackView;
}

uint64_t sub_100004370(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000504F8, 1);
}

uint64_t sub_100004380(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000043C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100004404(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppIcon(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100004440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppIconConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100004484()
{
  return sub_100004880(&qword_1000609B8, &qword_1000609A8, (void (*)(void))sub_1000044EC, (void (*)(void))sub_100004534);
}

uint64_t sub_1000044A8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000044EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000609C0;
  if (!qword_1000609C0)
  {
    v1 = type metadata accessor for AppIcon(255);
    result = swift_getWitnessTable(&unk_10004E1B0, v1);
    atomic_store(result, (unint64_t *)&qword_1000609C0);
  }
  return result;
}

unint64_t sub_100004534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000609C8;
  if (!qword_1000609C8)
  {
    v1 = sub_1000044A8(&qword_100060990);
    sub_1000045E4(&qword_1000609D0, &qword_100060988, (void (*)(void))sub_1000045C0);
    sub_1000046B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000609C8);
  }
  return result;
}

uint64_t sub_1000045C0()
{
  return sub_1000045E4(&qword_1000609D8, &qword_100060980, (void (*)(void))sub_10000464C);
}

uint64_t sub_1000045E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000044A8(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000464C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000609E0;
  if (!qword_1000609E0)
  {
    v1 = sub_1000044A8(&qword_100060978);
    sub_1000044EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1000609E0);
  }
  return result;
}

unint64_t sub_1000046B0()
{
  unint64_t result;

  result = qword_1000609E8;
  if (!qword_1000609E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _TransformEffect, &type metadata for _TransformEffect);
    atomic_store(result, (unint64_t *)&qword_1000609E8);
  }
  return result;
}

uint64_t sub_1000046F4()
{
  return sub_1000045E4(&qword_1000609F0, &qword_100060970, (void (*)(void))sub_100004718);
}

uint64_t sub_100004718()
{
  return sub_1000045E4(&qword_1000609F8, &qword_100060968, (void (*)(void))sub_10000473C);
}

unint64_t sub_10000473C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060A00;
  if (!qword_100060A00)
  {
    v1 = sub_1000044A8(&qword_100060960);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100060A00);
  }
  return result;
}

uint64_t sub_100004788(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100004380(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000047CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100004380(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100004810(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100004380(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000484C()
{
  return sub_100004880(&qword_100060A38, &qword_100060A40, (void (*)(void))sub_100004484, (void (*)(void))sub_1000046F4);
}

uint64_t sub_100004880(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1000044A8(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1000048FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1000049D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(a1, v2) != 1)
    return swift_release(*a1);
  v3 = type metadata accessor for ColorScheme(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_100004A38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_100004AE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_100004BA0((uint64_t)a1);
    v6 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100004BA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004380(&qword_100060A48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100004BE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100004C88(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100004BA0((uint64_t)a1);
    v6 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100004D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100004D4C);
}

uint64_t sub_100004D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_100004380(&qword_100060A50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_100004DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100004DD4);
}

uint64_t sub_100004DD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100004380(&qword_100060A50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for PlatterView(uint64_t a1)
{
  uint64_t result;

  result = qword_100060AB0;
  if (!qword_100060AB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlatterView);
  return result;
}

void sub_100004E8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100004EFC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10004DE78;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_100004EFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100060AC0)
  {
    v2 = type metadata accessor for ColorScheme(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100060AC0);
  }
}

uint64_t sub_100004F50(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050564, 1);
}

BOOL sub_100004F60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100004F78()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100004FBC()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100004FE4(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

double sub_100005024@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  void (*v12)(char *, uint64_t);
  __int128 *v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  double result;
  __int128 v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;

  v3 = type metadata accessor for ColorScheme(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v26 - v8;
  v10 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for PlatterView(0) + 20));
  sub_10004644C((uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for ColorScheme.light(_:), v3);
  v11 = static ColorScheme.== infix(_:_:)(v9, v7);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  v12(v9, v3);
  if ((v10 & 1) != 0)
  {
    if ((v11 & 1) != 0)
    {
      if (qword_100060890 != -1)
        swift_once(&qword_100060890, sub_1000121EC);
      v13 = &xmmword_1000632C8;
    }
    else
    {
      if (qword_100060898 != -1)
        swift_once(&qword_100060898, sub_100012294);
      v13 = &xmmword_1000632F0;
    }
    v15 = *(_QWORD *)v13;
    v26 = *(__int128 *)((char *)v13 + 8);
    v16 = *((_QWORD *)v13 + 3);
    v17 = *((_QWORD *)v13 + 4);
    v27 = swift_bridgeObjectRetain(v15);
    v28 = v26;
    v29 = v16;
    v30 = v17;
    v31 = 1;
  }
  else
  {
    if ((v11 & 1) != 0)
    {
      if (qword_100060880 != -1)
        swift_once(&qword_100060880, sub_10001209C);
      v14 = &xmmword_100063278;
    }
    else
    {
      if (qword_100060888 != -1)
        swift_once(&qword_100060888, sub_100012144);
      v14 = &xmmword_1000632A0;
    }
    v18 = *(_QWORD *)v14;
    v26 = *(__int128 *)((char *)v14 + 8);
    v19 = *((_QWORD *)v14 + 3);
    v20 = *((_QWORD *)v14 + 4);
    v27 = swift_bridgeObjectRetain(v18);
    v28 = v26;
    v29 = v19;
    v30 = v20;
    v31 = 0;
  }
  v21 = sub_100005288();
  _ConditionalContent<>.init(storage:)(&v27, &type metadata for LinearGradient, &type metadata for LinearGradient, v21, v21);
  result = *(double *)&v32;
  v23 = v33;
  v24 = v34;
  v25 = v35;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 32) = v24;
  *(_BYTE *)(a1 + 40) = v25;
  return result;
}

unint64_t sub_100005288()
{
  unint64_t result;

  result = qword_100060AF0;
  if (!qword_100060AF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LinearGradient, &type metadata for LinearGradient);
    atomic_store(result, (unint64_t *)&qword_100060AF0);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for AppIconConfiguration.Style(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PlatterView.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000053B4 + 4 * byte_10004DE45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000053E8 + 4 * byte_10004DE40[v4]))();
}

uint64_t sub_1000053E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000053F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000053F8);
  return result;
}

uint64_t sub_100005404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000540CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100005410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100005418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100005424(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100005430(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PlatterView.Style()
{
  return &type metadata for PlatterView.Style;
}

unint64_t sub_100005450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060AF8;
  if (!qword_100060AF8)
  {
    v1 = sub_1000044A8(&qword_100060B00);
    sub_100005288();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060AF8);
  }
  return result;
}

unint64_t sub_1000054B8()
{
  unint64_t result;

  result = qword_100060B08;
  if (!qword_100060B08)
  {
    result = swift_getWitnessTable(&unk_10004DF28, &type metadata for PlatterView.Style);
    atomic_store(result, (unint64_t *)&qword_100060B08);
  }
  return result;
}

uint64_t sub_1000054FC()
{
  uint64_t v0;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  sub_100005660(v0, qword_100063220);
  sub_1000056A0(v0, (uint64_t)qword_100063220);
  return OSLogger.Subsystem.init(rawValue:)(0xD00000000000001ALL, 0x8000000100059590);
}

uint64_t sub_10000555C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSLogger(0);
  sub_100005660(v4, qword_100063238);
  sub_1000056A0(v4, (uint64_t)qword_100063238);
  if (qword_100060848 != -1)
    swift_once(&qword_100060848, sub_1000054FC);
  v5 = sub_1000056A0(v0, (uint64_t)qword_100063220);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSLogger.init(subsystem:category:)(v3, 0x6469577961646F54, 0xEB00000000746567);
}

uint64_t *sub_100005660(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_1000056A0(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_1000056B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for OSSignpostID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t sub_100005750(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OSSignpostID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100005784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_1000057F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_100005864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_1000058D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_10000593C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100005948);
}

uint64_t sub_100005948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OSSignpostID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100005984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100005990);
}

uint64_t sub_100005990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OSSignpostID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Trace(uint64_t a1)
{
  uint64_t result;

  result = qword_100060B68;
  if (!qword_100060B68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Trace);
  return result;
}

uint64_t sub_100005A0C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for OSSignpostID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10004DF80;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100005A7C(unint64_t a1, int a2, uint64_t a3, void *a4)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  dispatch_group_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void ***p_aBlock;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, unint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  void ***v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  void (*v42)(uint64_t, unint64_t);
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  unint64_t v49;
  void (*isa)(dispatch_group_t, unint64_t, uint64_t);
  dispatch_group_t v51;
  uint64_t (*v52)(dispatch_group_t, uint64_t);
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  NSObject *v67;
  NSObject *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  NSObject *v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  Swift::String v77;
  unint64_t v78;
  char *v79;
  dispatch_group_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  NSObject *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  Swift::Int v108;
  Swift::Int v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  id v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  Swift::String v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  Swift::String v125;
  _QWORD *v126;
  uint64_t v127;
  NSObject *v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  size_t v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  void *v145;
  _QWORD *v146;
  char *v147;
  uint64_t v148;
  void *v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  uint64_t v156;
  dispatch_group_t v157;
  _QWORD *v158;
  uint64_t result;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD v163[2];
  unsigned int (*v164)(char *, uint64_t);
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  void (*v175)(uint64_t, unint64_t);
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, unint64_t);
  unint64_t v183;
  dispatch_group_t v184;
  char *v185;
  id v186;
  NSObject *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  _QWORD *v193;
  void **aBlock;
  uint64_t v195;
  uint64_t (*v196)(uint64_t);
  void *v197;
  uint64_t (*v198)();
  _QWORD *v199;

  v186 = a4;
  v189 = a3;
  LODWORD(v188) = a2;
  v192 = a1;
  v4 = (int *)type metadata accessor for AppIconConfiguration(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)v163 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for DispatchWorkItemFlags(0);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)v163 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for DispatchQoS(0);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v167 = (char *)v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for WidgetFamily(0);
  v10 = *(dispatch_group_t *)(v190 - 8);
  __chkstk_darwin(v190);
  v166 = (char *)v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v173 = (char *)v163 - v13;
  __chkstk_darwin(v14);
  v185 = (char *)v163 - v15;
  __chkstk_darwin(v16);
  v184 = (dispatch_group_t)((char *)v163 - v17);
  __chkstk_darwin(v18);
  v174 = (char *)v163 - v19;
  v20 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v20);
  p_aBlock = (void ***)((char *)v163 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for OSLogger(0);
  v24 = *(_QWORD **)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (uint64_t)v163 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    goto LABEL_61;
LABEL_2:
  v27 = sub_1000056A0(v23, (uint64_t)qword_100063238);
  v28 = (void (*)(uint64_t, uint64_t, unint64_t))v24[2];
  v181 = v27;
  v182 = v28;
  ((void (*)(uint64_t))v28)(v26);
  v29 = sub_100004380(&qword_100060BA0);
  v30 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v31 = *(_QWORD *)(v30 + 72);
  v32 = *(unsigned __int8 *)(v30 + 80);
  v33 = (v32 + 32) & ~v32;
  v180 = v29;
  v178 = v33 + v31;
  v177 = v32 | 7;
  v34 = swift_allocObject(v29, v33 + v31, v32 | 7);
  v176 = xmmword_10004DFA0;
  *(_OWORD *)(v34 + 16) = xmmword_10004DFA0;
  v191 = v26;
  v179 = v33;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1);
  v35._countAndFlagsBits = 0xD000000000000023;
  v35._object = (void *)0x80000001000595B0;
  v36 = p_aBlock;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  v38 = WidgetTodayCardTemplate.storyId.getter(v37);
  v197 = &type metadata for String;
  aBlock = (void **)v38;
  v195 = v39;
  LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(&aBlock);
  sub_100004810((uint64_t)&aBlock, &qword_100060BA8);
  v40._countAndFlagsBits = 46;
  v40._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v40);
  v41 = v191;
  v187 = v36;
  LogMessage.init(stringInterpolation:)(v36);
  Logger.info(_:)(v34, v23, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v34);
  v42 = (void (*)(uint64_t, unint64_t))v24[1];
  v183 = v23;
  v175 = v42;
  v43 = ((uint64_t (*)(uint64_t, uint64_t))v42)(v41, v23);
  v44 = TimelineProviderContext.displaySize.getter(v43);
  v46 = v45;
  v48 = v47;
  v49 = (unint64_t)v174;
  TimelineProviderContext.family.getter(v44);
  isa = (void (*)(dispatch_group_t, unint64_t, uint64_t))v10[2].isa;
  v51 = v184;
  v23 = v190;
  isa(v184, v49, v190);
  v52 = (uint64_t (*)(dispatch_group_t, uint64_t))v10[11].isa;
  v53 = v52(v51, v23);
  v165 = (void (*)(char *, char *, uint64_t))isa;
  v164 = (unsigned int (*)(char *, uint64_t))v52;
  if (v53 != enum case for WidgetFamily.systemLarge(_:))
  {
    ((void (*)(dispatch_group_t, uint64_t))v10[1].isa)(v51, v23);
    goto LABEL_10;
  }
  if ((v188 & 1) != 0)
  {
    if (qword_100060910 != -1)
      goto LABEL_87;
    goto LABEL_6;
  }
  if (qword_100060830 != -1)
    swift_once(&qword_100060830, sub_1000025F4);
  v48 = *((double *)&xmmword_1000631F0 + 1);
  v46 = *(double *)&xmmword_1000631F0;
  while (1)
  {
LABEL_10:
    v54 = (char *)v10[1].isa;
    v55 = ((uint64_t (*)(unint64_t, uint64_t))v54)(v49, v23);
    v49 = v192;
    v56 = WidgetTodayCardTemplate.iconArtwork.getter(v55);
    v57 = v56;
    if ((unint64_t)v56 >> 62)
    {
      if (v56 >= 0)
        v56 &= 0xFFFFFFFFFFFFFF8uLL;
      v58 = _CocoaArrayWrapper.endIndex.getter(v56);
    }
    else
    {
      v58 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v59 = swift_bridgeObjectRelease(v57);
    v60 = TimelineProviderContext.displaySize.getter(v59);
    v62 = v61;
    v63 = (uint64_t)v185;
    TimelineProviderContext.family.getter(v60);
    v64 = sub_100007FAC(v58, v188 & 1, v63, v62);
    v66 = v65;
    v174 = v54;
    ((void (*)(uint64_t, uint64_t))v54)(v63, v23);
    v67 = dispatch_group_create();
    v185 = (char *)swift_allocObject(&unk_10005DB98, 24, 7);
    *((_QWORD *)v185 + 2) = 0;
    v68 = ((uint64_t (*)(void))WidgetTodayCardTemplate.editorialArtwork.getter)();
    if (v68)
    {
      v69 = v191;
      v184 = v68;
      v70 = v183;
      v182(v191, v181, v183);
      v71 = swift_allocObject(v180, v178, v177);
      *(_OWORD *)(v71 + 16) = v176;
      v163[1] = v71 + v179;
      v72 = v187;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
      v73._countAndFlagsBits = 0xD000000000000024;
      v73._object = (void *)0x8000000100059600;
      LogMessage.StringInterpolation.appendLiteral(_:)(v73);
      v75 = WidgetTodayCardTemplate.storyId.getter(v74);
      v197 = &type metadata for String;
      aBlock = (void **)v75;
      v195 = v76;
      LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(&aBlock);
      sub_100004810((uint64_t)&aBlock, &qword_100060BA8);
      v77._countAndFlagsBits = 0x2E64657565757120;
      v77._object = (void *)0xE800000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v77);
      LogMessage.init(stringInterpolation:)(v72);
      Logger.info(_:)(v71, v70, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease(v71);
      v78 = v70;
      v79 = v185;
      v175(v69, v78);
      dispatch_group_enter(v67);
      v80 = v184;
      v81 = sub_100041A1C((uint64_t)v184, v46, v48);
      v82 = (_QWORD *)swift_allocObject(&unk_10005DC60, 40, 7);
      v82[2] = v79;
      v82[3] = v49;
      v82[4] = v67;
      v83 = swift_allocObject(&unk_10005DC88, 32, 7);
      *(_QWORD *)(v83 + 16) = sub_10000839C;
      *(_QWORD *)(v83 + 24) = v82;
      v84 = swift_allocObject(&unk_10005DCB0, 32, 7);
      *(_QWORD *)(v84 + 16) = v192;
      *(_QWORD *)(v84 + 24) = v67;
      v85 = sub_100008218();
      swift_retain_n(v192, 2);
      v86 = v67;
      swift_retain(v79);
      v88 = static OS_dispatch_queue.main.getter(v87);
      v197 = (void *)v85;
      v198 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
      aBlock = (void **)v88;
      Promise.then(perform:orCatchError:on:)(sub_1000083CC, v83, sub_10000843C, v84, &aBlock);
      swift_release(v80);
      swift_release(v81);
      swift_release(v83);
      v89 = v84;
      v49 = v192;
      swift_release(v89);
      v68 = sub_100008444(&aBlock);
    }
    v184 = v67;
    v90 = WidgetTodayCardTemplate.iconArtwork.getter(v68);
    v91 = v90;
    if ((unint64_t)v90 >> 62)
    {
      if (v90 >= 0)
        v90 &= 0xFFFFFFFFFFFFFF8uLL;
      v92 = _CocoaArrayWrapper.endIndex.getter(v90);
    }
    else
    {
      v92 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v93 = v190;
    v94 = v173;
    v95 = swift_bridgeObjectRelease(v91);
    v96 = WidgetTodayCardTemplate.editorialArtwork.getter(v95);
    swift_release(v96);
    TimelineProviderContext.family.getter(v97);
    if (v96)
    {
      v98 = 0;
    }
    else
    {
      v99 = v166;
      v165(v166, v94, v93);
      if (v164(v99, v93) == enum case for WidgetFamily.systemSmall(_:))
      {
        v98 = v92 > 4 ? 3 : 4;
      }
      else
      {
        v98 = (v188 & 1) != 0 ? 11 : 6;
        ((void (*)(char *, uint64_t))v174)(v99, v93);
      }
    }
    v100 = ((uint64_t (*)(char *, uint64_t))v174)(v94, v93);
    v101 = WidgetTodayCardTemplate.iconArtwork.getter(v100);
    v102 = v101;
    if ((unint64_t)v101 >> 62)
    {
      if (v101 >= 0)
        v101 &= 0xFFFFFFFFFFFFFF8uLL;
      v103 = _CocoaArrayWrapper.endIndex.getter(v101);
    }
    else
    {
      v103 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v102);
    v104 = v103 >= v98 ? v98 : v103;
    v105 = swift_allocObject(&unk_10005DBC0, 24, 7);
    v190 = v105;
    *(_QWORD *)(v105 + 16) = _swiftEmptyArrayStorage;
    v106 = v49;
    v107 = WidgetTodayCardTemplate.iconArtwork.getter(v105);
    if (v104 < 0)
    {
      __break(1u);
    }
    else
    {
      v106 = v107;
      v98 = v107 >> 62;
      if (!(v107 >> 62))
      {
        if (*(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10) < v104)
          goto LABEL_77;
        goto LABEL_34;
      }
    }
    v160 = v106 < 0 ? v106 : v106 & 0xFFFFFFFFFFFFFF8;
    result = _CocoaArrayWrapper.endIndex.getter(v160);
    if (result < 0)
      break;
    swift_bridgeObjectRetain(v106);
    v161 = _CocoaArrayWrapper.endIndex.getter(v160);
    swift_bridgeObjectRelease(v106);
    if (v161 < v104)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
LABEL_34:
    if ((v106 & 0xC000000000000001) != 0 && v104)
    {
      type metadata accessor for Artwork(0);
      v108 = 0;
      do
      {
        v109 = v108 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v108);
        v108 = v109;
      }
      while (v104 != v109);
    }
    if (v98)
    {
      if (v106 < 0)
        v112 = v106;
      else
        v112 = v106 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v106);
      v110 = _CocoaArrayWrapper.subscript.getter(0, v104, v112);
      v111 = v113;
      v98 = v114;
      v49 = v115;
      swift_bridgeObjectRelease_n(v106, 2);
    }
    else
    {
      v110 = v106 & 0xFFFFFFFFFFFFFF8;
      v111 = (_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 32);
      v49 = (2 * v104) | 1;
    }
    v116 = v186;
    v98 = (uint64_t)sub_100007E74(v111, v98, v49, v64, v66);
    swift_unknownObjectRelease(v110);

    if (!((unint64_t)v98 >> 62))
    {
      v117 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_46;
    }
LABEL_78:
    if (v98 < 0)
      v162 = v98;
    else
      v162 = v98 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v98);
    v117 = _CocoaArrayWrapper.endIndex.getter(v162);
    swift_bridgeObjectRelease(v98);
LABEL_46:
    v118 = v192;
    v10 = v187;
    if (v117 >= 1)
    {
      v189 = v98;
      v119 = v191;
      v49 = v183;
      v182(v191, v181, v183);
      v120 = swift_allocObject(v180, v178, v177);
      *(_OWORD *)(v120 + 16) = v176;
      v188 = v120 + v179;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1);
      v121._object = (void *)0x80000001000595E0;
      v121._countAndFlagsBits = 0xD000000000000019;
      LogMessage.StringInterpolation.appendLiteral(_:)(v121);
      v123 = WidgetTodayCardTemplate.storyId.getter(v122);
      v197 = &type metadata for String;
      aBlock = (void **)v123;
      v195 = v124;
      LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(&aBlock);
      sub_100004810((uint64_t)&aBlock, &qword_100060BA8);
      v125._countAndFlagsBits = 0x2E64657565757120;
      v125._object = (void *)0xE800000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v125);
      LogMessage.init(stringInterpolation:)(v10);
      Logger.info(_:)(v120, v49, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease(v120);
      v175(v119, v49);
      v10 = v184;
      dispatch_group_enter(v184);
      v126 = (_QWORD *)swift_allocObject(&unk_10005DC38, 40, 7);
      v127 = v190;
      v126[2] = v118;
      v126[3] = v127;
      v126[4] = v10;
      sub_100008218();
      swift_retain(v118);
      v128 = v10;
      v129 = v127;
      v98 = v189;
      swift_retain(v129);
      v131 = (void *)static OS_dispatch_queue.main.getter(v130);
      v132 = sub_100004380(&qword_100060BC8);
      resolveAllSequentially<A>(futures:publisherQueue:andThen:)(v98, v131, sub_100008358, v126, v132);
      swift_release(v126);

    }
    v133 = swift_bridgeObjectRelease(v98);
    v134 = WidgetTodayCardTemplate.iconArtwork.getter(v133);
    v135 = v134;
    if ((unint64_t)v134 >> 62)
    {
      if (v134 >= 0)
        v134 &= 0xFFFFFFFFFFFFFF8uLL;
      v136 = _CocoaArrayWrapper.endIndex.getter(v134);
    }
    else
    {
      v136 = *(_QWORD *)((v134 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v135);
    v23 = v136 - v104;
    v137 = v136 == v104;
    if (v136 < v104)
    {
      __break(1u);
    }
    else
    {
      v24 = _swiftEmptyArrayStorage;
      v10 = (dispatch_group_t)_swiftEmptyArrayStorage;
      if (v137)
      {
LABEL_59:
        sub_100004380(&qword_100060BB0);
        v143 = Promise.__allocating_init()();
        v144 = sub_100008218();
        v145 = (void *)static OS_dispatch_queue.main.getter(v144);
        v146 = (_QWORD *)swift_allocObject(&unk_10005DBE8, 56, 7);
        v146[2] = v118;
        v146[3] = v143;
        v147 = v185;
        v148 = v190;
        v146[4] = v185;
        v146[5] = v148;
        v146[6] = v10;
        v198 = sub_100008298;
        v199 = v146;
        aBlock = _NSConcreteStackBlock;
        v195 = 1107296256;
        v196 = sub_100007D48;
        v197 = &unk_10005DC00;
        v149 = _Block_copy(&aBlock);
        swift_retain(v118);
        swift_retain(v147);
        swift_retain(v148);
        swift_retain(v143);
        v150 = v167;
        static DispatchQoS.unspecified.getter(v151);
        v193 = _swiftEmptyArrayStorage;
        v152 = sub_1000082C0();
        v153 = sub_100004380((uint64_t *)&unk_100062BF0);
        v154 = sub_100008308();
        v155 = v170;
        v156 = v172;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v193, v153, v154, v172, v152);
        v157 = v184;
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v150, v155, v145, v149);
        _Block_release(v149);

        (*(void (**)(char *, uint64_t))(v171 + 8))(v155, v156);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v150, v169);
        v158 = v199;
        swift_release(v147);
        swift_release(v148);
        swift_release(v158);
        return v143;
      }
      aBlock = (void **)_swiftEmptyArrayStorage;
      p_aBlock = &aBlock;
      v138 = sub_10002D994(0, v23 & ~(v23 >> 63), 0);
      if ((v23 & 0x8000000000000000) == 0)
      {
        v10 = (dispatch_group_t)aBlock;
        v26 = 1;
        while (1)
        {
          v139 = static WidgetAccentedRenderingMode.fullColor.getter(v138);
          UUID.init()(v139);
          *(_QWORD *)&v7[v4[5]] = 0;
          v140 = &v7[v4[6]];
          *(_QWORD *)v140 = 0;
          *((_QWORD *)v140 + 1) = 0;
          v140[16] = 1;
          v7[v4[7]] = 0;
          v7[v4[8]] = 0;
          aBlock = (void **)&v10->isa;
          v142 = (unint64_t)v10[2].isa;
          v141 = (unint64_t)v10[3].isa;
          if (v142 >= v141 >> 1)
          {
            p_aBlock = &aBlock;
            sub_10002D994(v141 > 1, v142 + 1, 1);
            v10 = (dispatch_group_t)aBlock;
          }
          v10[2].isa = (Class)(v142 + 1);
          v138 = sub_100004440((uint64_t)v7, (uint64_t)v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v142);
          if (!v23)
            break;
          if (!--v23)
          {
            v118 = v192;
            goto LABEL_59;
          }
        }
        __break(1u);
LABEL_61:
        swift_once(&qword_100060850, sub_10000555C);
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_87:
    swift_once(&qword_100060910, sub_100033E6C);
LABEL_6:
    v48 = v48 - *(double *)&qword_100063368;
  }
  __break(1u);
  return result;
}

void sub_100006A28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  _QWORD v28[4];
  _BYTE v29[24];

  v8 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 16, v29, 1, 0);
  v15 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;

  v16 = qword_100060850;
  v17 = a2;
  if (v16 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v18 = sub_1000056A0(v11, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v18, v11);
  v19 = sub_100004380(&qword_100060BA0);
  v20 = type metadata accessor for LogMessage(0);
  v21 = swift_allocObject(v19, ((*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) | 7);
  *(_OWORD *)(v21 + 16) = xmmword_10004DFA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 1);
  v22._object = (void *)0x8000000100059600;
  v22._countAndFlagsBits = 0xD000000000000024;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  v24 = WidgetTodayCardTemplate.storyId.getter(v23);
  v28[3] = &type metadata for String;
  v28[0] = v24;
  v28[1] = v25;
  LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(v28);
  sub_100004810((uint64_t)v28, &qword_100060BA8);
  v26._countAndFlagsBits = 0x6465656363757320;
  v26._object = (void *)0xEB000000002E6465;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  LogMessage.init(stringInterpolation:)(v10);
  Logger.info(_:)(v21, v11, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  dispatch_group_leave(a5);
}

void sub_100006C6C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  Swift::String v24;
  uint64_t v25;
  _QWORD *v26;
  char v27[8];
  _QWORD v28[3];
  void *v29;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSLogger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v12 = sub_1000056A0(v8, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = sub_100004380(&qword_100060BA0);
  v14 = type metadata accessor for LogMessage(0);
  v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) | 7);
  *(_OWORD *)(v15 + 16) = xmmword_10004DFA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 2);
  v16._object = (void *)0x8000000100059600;
  v16._countAndFlagsBits = 0xD000000000000024;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  v18 = WidgetTodayCardTemplate.storyId.getter(v17);
  v29 = &type metadata for String;
  v28[0] = v18;
  v28[1] = v19;
  LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(v28);
  sub_100004810((uint64_t)v28, &qword_100060BA8);
  v20._countAndFlagsBits = 0x3A44454C49414620;
  v20._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  swift_getErrorValue(a1, v27, &v25);
  v21 = v25;
  v22 = v26;
  v29 = v26;
  v23 = sub_100008464(v28);
  (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v22 - 1) + 16))(v23, v21, v22);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v28);
  sub_100004810((uint64_t)v28, &qword_100060BA8);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v7);
  Logger.info(_:)(v15, v8, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  dispatch_group_leave(a3);
}

void sub_100006EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  _QWORD *v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t v78;
  int64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  dispatch_group_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, char *, uint64_t);
  uint64_t v118;
  int *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  char v126[8];
  _QWORD *v127;
  uint64_t v128;
  void *v129;

  v103 = a5;
  v102 = a4;
  v104 = a1;
  v123 = sub_100004380(&qword_100060BC8);
  v6 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v117 = (void (*)(uint64_t, char *, uint64_t))((char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v105 = (uint64_t)&v99 - v9;
  v10 = sub_100004380(&qword_100060BD0);
  v99 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v116 = (uint64_t)&v99 - v14;
  v15 = sub_100004380(&qword_100060BD8);
  __chkstk_darwin(v15);
  v107 = (uint64_t)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v121 = (uint64_t)&v99 - v18;
  __chkstk_darwin(v19);
  v122 = (uint64_t)&v99 - v20;
  v21 = type metadata accessor for AppIconConfiguration(0);
  v118 = *(_QWORD *)(v21 - 8);
  v119 = (int *)v21;
  __chkstk_darwin(v21);
  v100 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for OSLogger(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD **)(a2 + 16);
  v106 = v12;
  v120 = v30;
  v101 = v6;
  if (v30)
  {
    if (qword_100060850 != -1)
      swift_once(&qword_100060850, sub_10000555C);
    v31 = sub_1000056A0(v26, (uint64_t)qword_100063238);
    v114 = *(void (**)(char *))(v27 + 16);
    v115 = v31;
    v114(v29);
    v32 = sub_100004380(&qword_100060BA0);
    v33 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v34 = *(_QWORD *)(v33 + 72);
    v35 = *(unsigned __int8 *)(v33 + 80);
    v36 = (v35 + 32) & ~v35;
    v113 = v32;
    v111 = v36 + v34;
    v110 = v35 | 7;
    v37 = swift_allocObject(v32, v36 + v34, v35 | 7);
    v109 = xmmword_10004DFA0;
    *(_OWORD *)(v37 + 16) = xmmword_10004DFA0;
    v112 = v36;
    v108 = (void (*)(char *, uint64_t))(v37 + v36);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 3);
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    v129 = &type metadata for Int;
    v127 = v120;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
    sub_100004810((uint64_t)&v127, &qword_100060BA8);
    v39._countAndFlagsBits = 47;
    v39._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    v40 = *(_QWORD **)(v104 + 16);
    v129 = &type metadata for Int;
    v127 = v40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
    sub_100004810((uint64_t)&v127, &qword_100060BA8);
    v41._object = (void *)0x8000000100059650;
    v41._countAndFlagsBits = 0xD000000000000019;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    v43 = WidgetTodayCardTemplate.storyId.getter(v42);
    v129 = &type metadata for String;
    v127 = (_QWORD *)v43;
    v128 = v44;
    LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(&v127);
    sub_100004810((uint64_t)&v127, &qword_100060BA8);
    v45._countAndFlagsBits = 46;
    v45._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    LogMessage.init(stringInterpolation:)(v25);
    v46 = v29;
    Logger.error(_:)(v37, v26, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v37);
    v108 = *(void (**)(char *, uint64_t))(v27 + 8);
    v108(v29, v26);
    swift_bridgeObjectRetain(a2);
    v47 = 0;
    do
    {
      v48 = a2;
      v49 = *(_QWORD *)(a2 + 8 * (_QWORD)v47 + 32);
      v47 = (_QWORD *)((char *)v47 + 1);
      ((void (*)(char *, uint64_t, uint64_t))v114)(v46, v115, v26);
      v50 = v26;
      v51 = swift_allocObject(v113, v111, v110);
      *(_OWORD *)(v51 + 16) = v109;
      swift_errorRetain(v49);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
      v52._countAndFlagsBits = 0x7265206863746546;
      v52._object = (void *)0xED0000203A726F72;
      LogMessage.StringInterpolation.appendLiteral(_:)(v52);
      swift_getErrorValue(v49, v126, &v124);
      v53 = v124;
      v54 = v125;
      v129 = v125;
      v55 = sub_100008464(&v127);
      (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v54 - 1) + 16))(v55, v53, v54);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_100004810((uint64_t)&v127, &qword_100060BA8);
      v56._countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      LogMessage.init(stringInterpolation:)(v25);
      v46 = v29;
      Logger.error(_:)(v51, v50, &protocol witness table for OSLogger);
      v57 = v51;
      v26 = v50;
      swift_bridgeObjectRelease(v57);
      v58 = v49;
      a2 = v48;
      swift_errorRelease(v58);
      v108(v29, v50);
    }
    while (v120 != v47);
    swift_bridgeObjectRelease(v48);
    v12 = v106;
  }
  else
  {
    if (qword_100060850 != -1)
      swift_once(&qword_100060850, sub_10000555C);
    v59 = sub_1000056A0(v26, (uint64_t)qword_100063238);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v59, v26);
    v60 = sub_100004380(&qword_100060BA0);
    v61 = type metadata accessor for LogMessage(0);
    v62 = swift_allocObject(v60, ((*(unsigned __int8 *)(*(_QWORD *)(v61 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v61 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v61 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v61 - 8) + 80) | 7);
    *(_OWORD *)(v62 + 16) = xmmword_10004DFA0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1);
    v63._countAndFlagsBits = 0xD00000000000001DLL;
    v63._object = (void *)0x8000000100059630;
    LogMessage.StringInterpolation.appendLiteral(_:)(v63);
    v65 = WidgetTodayCardTemplate.storyId.getter(v64);
    v129 = &type metadata for String;
    v127 = (_QWORD *)v65;
    v128 = v66;
    LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(&v127);
    sub_100004810((uint64_t)&v127, &qword_100060BA8);
    v67._countAndFlagsBits = 0x6465656363757320;
    v67._object = (void *)0xEB000000002E6465;
    LogMessage.StringInterpolation.appendLiteral(_:)(v67);
    LogMessage.init(stringInterpolation:)(v25);
    Logger.info(_:)(v62, v26, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v62);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  v68 = *(_QWORD *)(v104 + 16);
  v69 = v101;
  v70 = (uint64_t)v100;
  if (v68)
  {
    v71 = v104 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
    v72 = *(_QWORD *)(v99 + 72);
    swift_bridgeObjectRetain(v104);
    v73 = _swiftEmptyArrayStorage;
    do
    {
      v74 = v116;
      sub_1000047CC(v71, v116, &qword_100060BD0);
      sub_100004788(v74, (uint64_t)v12, &qword_100060BD0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v12, 1, v123) == 1)
      {
        sub_100004810((uint64_t)v12, &qword_100060BD0);
      }
      else
      {
        v75 = v105;
        sub_100004788((uint64_t)v12, v105, &qword_100060BC8);
        sub_100004788(v75, (uint64_t)v117, &qword_100060BC8);
        if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) != 0)
          v76 = v73;
        else
          v76 = (_QWORD *)sub_100032D78(0, v73[2] + 1, 1, v73);
        v78 = v76[2];
        v77 = v76[3];
        if (v78 >= v77 >> 1)
          v76 = (_QWORD *)sub_100032D78(v77 > 1, v78 + 1, 1, v76);
        v76[2] = v78 + 1;
        v73 = v76;
        sub_100004788((uint64_t)v117, (uint64_t)v76+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v78, &qword_100060BC8);
        v12 = v106;
      }
      v71 += v72;
      --v68;
    }
    while (v68);
    swift_bridgeObjectRelease(v104);
    v79 = v73[2];
    if (v79)
      goto LABEL_22;
LABEL_35:
    swift_bridgeObjectRelease(v73);
    v80 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }
  v73 = _swiftEmptyArrayStorage;
  v79 = _swiftEmptyArrayStorage[2];
  if (!v79)
    goto LABEL_35;
LABEL_22:
  v127 = _swiftEmptyArrayStorage;
  sub_10002D994(0, v79, 0);
  v80 = v127;
  v81 = *(unsigned __int8 *)(v69 + 80);
  v114 = (void (*)(char *))v73;
  v82 = (char *)v73 + ((v81 + 32) & ~v81);
  v120 = *(_QWORD **)(v69 + 72);
  v83 = type metadata accessor for Artwork.Style(0);
  v84 = *(_QWORD *)(v83 - 8);
  v117 = *(void (**)(uint64_t, char *, uint64_t))(v84 + 16);
  LODWORD(v116) = enum case for Artwork.Style.round(_:);
  LODWORD(v115) = enum case for Artwork.Style.pill(_:);
  do
  {
    v85 = v122;
    v86 = *(void **)&v82[*(int *)(v123 + 48)];
    v117(v122, v82, v83);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v83);
    v87 = v85;
    v88 = v121;
    sub_1000047CC(v87, v121, &qword_100060BD8);
    v89 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v88, 1, v83) != 1)
    {
      v90 = v107;
      sub_1000047CC(v88, v107, &qword_100060BD8);
      v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 88))(v90, v83);
      if (v91 == (_DWORD)v116)
      {
        v89 = 2;
      }
      else if (v91 == (_DWORD)v115)
      {
        v89 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v107, v83);
        v89 = 0;
      }
      v88 = v121;
    }
    sub_100004810(v88, &qword_100060BD8);
    v92 = sub_100004810(v122, &qword_100060BD8);
    v93 = v119;
    static WidgetAccentedRenderingMode.fullColor.getter(v92);
    UUID.init()(v86);
    *(_QWORD *)(v70 + v93[5]) = v86;
    v94 = v70 + v93[6];
    *(_QWORD *)v94 = 0;
    *(_QWORD *)(v94 + 8) = 0;
    *(_BYTE *)(v94 + 16) = 1;
    *(_BYTE *)(v70 + v93[7]) = v89;
    *(_BYTE *)(v70 + v93[8]) = 1;
    v127 = v80;
    v96 = v80[2];
    v95 = v80[3];
    if (v96 >= v95 >> 1)
    {
      sub_10002D994(v95 > 1, v96 + 1, 1);
      v80 = v127;
    }
    v80[2] = v96 + 1;
    sub_100004440(v70, (uint64_t)v80+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(_QWORD *)(v118 + 72) * v96);
    v82 = (char *)v120 + (_QWORD)v82;
    --v79;
  }
  while (v79);
  swift_bridgeObjectRelease(v114);
LABEL_36:
  v97 = v102;
  swift_beginAccess(v102 + 16, &v127, 1, 0);
  v98 = *(_QWORD *)(v97 + 16);
  *(_QWORD *)(v97 + 16) = v80;
  swift_bridgeObjectRelease(v98);
  dispatch_group_leave(v103);
}

uint64_t sub_100007A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[24];
  _QWORD v60[5];

  v55 = a5;
  v57 = a2;
  v56 = type metadata accessor for WidgetTodayCard(0);
  __chkstk_darwin(v56);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v53 = a3 + 16;
  v54 = a4 + 16;
  v16 = sub_1000056A0(v12, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_100004380(&qword_100060BA0);
  v52 = a4;
  v18 = v17;
  v19 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = *(unsigned __int8 *)(v19 + 80);
  v51 = a3;
  v22 = swift_allocObject(v18, ((v21 + 32) & ~v21) + v20, v21 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_10004DFA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1);
  v23._object = (void *)0x8000000100059670;
  v23._countAndFlagsBits = 0xD000000000000027;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  v24 = ((uint64_t (*)(void))WidgetTodayCardTemplate.storyId.getter)();
  v60[3] = &type metadata for String;
  v60[0] = v24;
  v60[1] = v25;
  LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(v60);
  sub_100004810((uint64_t)v60, &qword_100060BA8);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  LogMessage.init(stringInterpolation:)(v11);
  Logger.info(_:)(v22, v12, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v22);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v28 = WidgetTodayCardTemplate.storyId.getter(v27);
  v49 = v29;
  v50 = v28;
  v30 = WidgetTodayCardTemplate.heading.getter();
  v47 = v31;
  v48 = v30;
  v32 = WidgetTodayCardTemplate.title.getter();
  v34 = v33;
  v35 = WidgetTodayCardTemplate.isDark.getter();
  swift_beginAccess(v53, v60, 0, 0);
  v36 = *(void **)(v51 + 16);
  swift_beginAccess(v54, v59, 0, 0);
  v58 = *(_QWORD *)(v52 + 16);
  v37 = v58;
  v38 = v36;
  swift_bridgeObjectRetain(v37);
  v39 = swift_bridgeObjectRetain(v55);
  v40 = sub_100007D74(v39);
  v41 = v58;
  v42 = WidgetTodayCardTemplate.backgroundColor.getter(v40);
  v43 = WidgetTodayCardTemplate.url.getter();
  WidgetTodayCardTemplate.eventStartDate.getter(v43);
  v44 = v49;
  *(_QWORD *)v8 = v50;
  *((_QWORD *)v8 + 1) = v44;
  v45 = v47;
  *((_QWORD *)v8 + 2) = v48;
  *((_QWORD *)v8 + 3) = v45;
  *((_QWORD *)v8 + 4) = v32;
  *((_QWORD *)v8 + 5) = v34;
  v8[48] = v35 & 1;
  *((_QWORD *)v8 + 7) = v36;
  *((_QWORD *)v8 + 8) = v41;
  *((_QWORD *)v8 + 9) = v42;
  Promise.resolve(_:)(v8);
  return sub_1000084A0((uint64_t)v8);
}

uint64_t sub_100007D48(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_100007D74(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  result = sub_100032D64(result, v14, 1, v3);
  v3 = (_QWORD *)result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  v8 = (v3[3] >> 1) - v7;
  result = type metadata accessor for AppIconConfiguration(0);
  if (v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = *(_QWORD *)(result - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  result = swift_arrayInitWithCopy((char *)v3 + v10 + *(_QWORD *)(v9 + 72) * v7, v6 + v10, v2, result);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

_QWORD *sub_100007E74(_QWORD *result, uint64_t a2, unint64_t a3, double a4, double a5)
{
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = a3 >> 1;
  v6 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_13;
  v7 = result;
  result = _swiftEmptyArrayStorage;
  if (v6)
  {
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)((a3 >> 1) - a2);
    if (v6 < 0)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    v11 = 0;
    v12 = &v7[a2];
    while (1)
    {
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      if (a2 + v11 >= v5 || v11 >= v6)
        goto LABEL_12;
      v14 = v12[v11];
      swift_retain(v14);
      v16 = sub_100041A1C(v15, a4, a5);
      swift_release(v14);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v18 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
      v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v19);
      ++v11;
      if (v13 == v6)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

double sub_100007FAC(uint64_t a1, char a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  double v14;
  uint64_t v16;

  v8 = type metadata accessor for WidgetFamily(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a3, v8, v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == enum case for WidgetFamily.systemSmall(_:))
  {
    if (a1 != 1)
    {
      if (a1 == 2)
        return a4 * 0.66;
      else
        return a4 * 0.5;
    }
  }
  else if (v13 == enum case for WidgetFamily.systemMedium(_:))
  {
    if ((unint64_t)(a1 - 1) > 3)
      return 0.36 * a4;
    else
      return dbl_10004DFC8[a1 - 1] * a4;
  }
  else if (v13 == enum case for WidgetFamily.systemLarge(_:))
  {
    if ((a2 & 1) != 0)
    {
      if (qword_100060910 != -1)
        swift_once(&qword_100060910, sub_100033E6C);
      if ((unint64_t)(a1 - 1) > 3)
        v14 = 0.36;
      else
        v14 = dbl_10004DFC8[a1 - 1];
      return (a4 - *(double *)&qword_100063368) * v14;
    }
    else if (a1 <= 1)
    {
      if (qword_100060838 != -1)
        swift_once(&qword_100060838, sub_100002608);
      return *(double *)&xmmword_100063200;
    }
    else
    {
      if (qword_100060840 != -1)
        swift_once(&qword_100060840, sub_10000261C);
      return *(double *)&xmmword_100063210;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return a4;
}

uint64_t sub_1000081D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000081F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100008218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062C20;
  if (!qword_100062C20)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100062C20);
  }
  return result;
}

uint64_t sub_100008254()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100008298()
{
  uint64_t *v0;

  return sub_100007A04(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1000082A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000082B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000082C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060BB8;
  if (!qword_100060BB8)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_100060BB8);
  }
  return result;
}

unint64_t sub_100008308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060BC0;
  if (!qword_100060BC0)
  {
    v1 = sub_1000044A8((uint64_t *)&unk_100062BF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100060BC0);
  }
  return result;
}

void sub_100008358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100006EE4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_100008368()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10000839C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100006A28(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_1000083A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000083CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = sub_100004380(&qword_100060BC8);
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_100008410()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10000843C(uint64_t a1)
{
  uint64_t v1;

  sub_100006C6C(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_100008444(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *sub_100008464(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_1000084A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetTodayCard(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1000084DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[9];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for WidgetAccentedRenderingMode(0);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v19 = v10;
    v18(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_1000085CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  v5 = a1 + *(int *)(a2 + 36);
  v6 = type metadata accessor for WidgetAccentedRenderingMode(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_100008634(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for WidgetAccentedRenderingMode(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18 = v9;
  v17(v14, v15, v16);
  return a1;
}

uint64_t sub_1000086F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *v13;
  *(_BYTE *)(v12 + 16) = *((_BYTE *)v13 + 16);
  *(_OWORD *)v12 = v14;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_1000087C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_100008874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = a3[7];
  v11 = a1 + v9;
  v12 = (__int128 *)(a2 + v9);
  v13 = *v12;
  *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
  *(_OWORD *)v11 = v13;
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_100008930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000893C);
}

uint64_t sub_10000893C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = type metadata accessor for WidgetAccentedRenderingMode(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v11);
  }
}

uint64_t sub_1000089F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000089FC);
}

uint64_t sub_1000089FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
      return result;
    }
    v10 = type metadata accessor for WidgetAccentedRenderingMode(0);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for AppIconConfiguration(uint64_t a1)
{
  return sub_10000A508(a1, qword_100060C38, (uint64_t)&nominal type descriptor for AppIconConfiguration);
}

uint64_t sub_100008AB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "\b";
    v5[2] = &unk_10004E050;
    v5[3] = &unk_10004E068;
    v5[4] = &unk_10004E080;
    result = type metadata accessor for WidgetAccentedRenderingMode(319);
    if (v4 <= 0x3F)
    {
      v5[5] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100008B60()
{
  return sub_100008DD8(&qword_100060C80, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

BOOL sub_100008B8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100008BA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  void *v7;
  id v8;
  uint64_t v9;
  Swift::UInt64 v10;
  Swift::UInt64 v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = sub_100008DD8(&qword_100060C80, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  v6 = (int *)type metadata accessor for AppIconConfiguration(0);
  v7 = *(void **)(v1 + v6[5]);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    v8 = v7;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v9 = v2 + v6[6];
  if (*(_BYTE *)(v9 + 16) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v11 = *(_QWORD *)v9;
    v10 = *(_QWORD *)(v9 + 8);
    Hasher._combine(_:)(1u);
    if ((v11 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v12 = v11;
    else
      v12 = 0;
    Hasher._combine(_:)(v12);
    if ((v10 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v13 = v10;
    else
      v13 = 0;
    Hasher._combine(_:)(v13);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + v6[7]));
  Hasher._combine(_:)(*(_BYTE *)(v2 + v6[8]));
  v14 = type metadata accessor for WidgetAccentedRenderingMode(0);
  v15 = sub_100008DD8(&qword_100060C90, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetAccentedRenderingMode, (uint64_t)&protocol conformance descriptor for WidgetAccentedRenderingMode);
  return dispatch thunk of Hashable.hash(into:)(a1, v14, v15);
}

Swift::Int sub_100008CF8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100008BA0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100008D38(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100008BA0((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100008D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_100008DAC()
{
  return sub_100008DD8(&qword_100060C88, type metadata accessor for AppIconConfiguration, (uint64_t)&unk_10004E0D0);
}

uint64_t sub_100008DD8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100008E18(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)@<X0>(uint64_t@<X8>);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  _QWORD *v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;

  v114 = a1;
  v100 = sub_100004380(&qword_100060D38);
  __chkstk_darwin(v100);
  v104 = (uint64_t)&v100 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100004380(&qword_100060D40);
  v2 = __chkstk_darwin(v113);
  v102 = (uint64_t)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v100 - v4;
  v6 = sub_100004380(&qword_100060D48);
  __chkstk_darwin(v6);
  v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Capsule(0);
  v10 = __chkstk_darwin(v9);
  v103 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v100 - v12;
  v14 = type metadata accessor for AppIconContentView(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100004380(&qword_100060D50);
  __chkstk_darwin(v17);
  v106 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100004380(&qword_100060D58);
  v19 = __chkstk_darwin(v109);
  v101 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v105 = (uint64_t)&v100 - v21;
  v110 = sub_100004380(&qword_100060D60);
  __chkstk_darwin(v110);
  v112 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100004380(&qword_100060D68);
  __chkstk_darwin(v107);
  v24 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = sub_100004380(&qword_100060D70);
  __chkstk_darwin(v111);
  v108 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AppIcon(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin(v26);
  v29 = type metadata accessor for AppIconConfiguration(0);
  if (*(_BYTE *)(v115 + *(int *)(v29 + 28)))
  {
    if (*(_BYTE *)(v115 + *(int *)(v29 + 28)) == 1)
    {
      sub_1000043C0(v115, (uint64_t)v16, type metadata accessor for AppIconConfiguration);
      v30 = enum case for RoundedCornerStyle.continuous(_:);
      v31 = type metadata accessor for RoundedCornerStyle(0);
      v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
      v32(v13, v30, v31);
      v33 = v106;
      v34 = v106 + *(int *)(v17 + 36);
      sub_1000043C0((uint64_t)v13, v34, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
      *(_WORD *)(v34 + *(int *)(sub_100004380(&qword_100060DB0) + 36)) = 256;
      sub_1000043C0((uint64_t)v16, v33, type metadata accessor for AppIconContentView);
      sub_10000A7A8((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
      sub_10000A7A8((uint64_t)v16, type metadata accessor for AppIconContentView);
      v35 = (uint64_t)v103;
      v36 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v103, v30, v31);
      v37 = static Color.black.getter(v36);
      v38 = v37;
      v39.n128_u64[0] = 0x3FB999999999999ALL;
      if (!*(_BYTE *)(v115 + *(int *)(v29 + 32)))
        v39.n128_f64[0] = 0.0;
      v40 = Color.opacity(_:)(v37, v39);
      swift_release(v38);
      StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v116, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
      sub_1000043C0(v35, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
      v41 = &v8[*(int *)(sub_100004380(&qword_100060DF8) + 36)];
      v42 = v117;
      *(_OWORD *)v41 = v116;
      *((_OWORD *)v41 + 1) = v42;
      *((_QWORD *)v41 + 4) = v118;
      v43 = sub_100004380(&qword_100060E00);
      *(_QWORD *)&v8[*(int *)(v43 + 52)] = v40;
      *(_WORD *)&v8[*(int *)(v43 + 56)] = 256;
      v44 = static Alignment.center.getter(v43);
      v46 = v45;
      v47 = (uint64_t *)&v8[*(int *)(sub_100004380(&qword_100060E08) + 36)];
      *v47 = v44;
      v47[1] = v46;
      v48 = sub_10000A7A8(v35, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
      v49 = static Alignment.center.getter(v48);
      v51 = v50;
      v52 = v109;
      v53 = (uint64_t)v101;
      v54 = (uint64_t)&v101[*(int *)(v109 + 36)];
      sub_1000047CC((uint64_t)v8, v54, &qword_100060D48);
      v55 = (uint64_t *)(v54 + *(int *)(sub_100004380(&qword_100060DC0) + 36));
      *v55 = v49;
      v55[1] = v51;
      v56 = v106;
      sub_1000047CC(v106, v53, &qword_100060D50);
      sub_100004810((uint64_t)v8, &qword_100060D48);
      sub_100004810(v56, &qword_100060D50);
      v57 = &qword_100060D58;
      v58 = v105;
      sub_100004788(v53, v105, &qword_100060D58);
      sub_1000047CC(v58, (uint64_t)v24, &qword_100060D58);
      swift_storeEnumTagMultiPayload(v24, v107, 1);
      v59 = sub_100004380(&qword_100060D88);
      v60 = sub_10000B4D0(&qword_100060D80, &qword_100060D88, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v61 = sub_10000A5C0();
      v62 = (uint64_t)v108;
      _ConditionalContent<>.init(storage:)(v24, v59, v52, v60, v61);
      v63 = v112;
      sub_1000047CC(v62, v112, &qword_100060D70);
      swift_storeEnumTagMultiPayload(v63, v110, 0);
      v64 = sub_10000A53C();
      v65 = sub_10000A704();
      _ConditionalContent<>.init(storage:)(v63, v111, v113, v64, v65);
      sub_100004810(v62, &qword_100060D70);
      v66 = v58;
    }
    else
    {
      v77 = v115;
      sub_1000043C0(v115, (uint64_t)v16, type metadata accessor for AppIconConfiguration);
      v78 = v104;
      sub_1000043C0((uint64_t)v16, v104, type metadata accessor for AppIconContentView);
      *(_WORD *)(v78 + *(int *)(v100 + 36)) = 256;
      v79 = sub_10000A7A8((uint64_t)v16, type metadata accessor for AppIconContentView);
      v80 = static Color.black.getter(v79);
      v81 = v80;
      v82.n128_u64[0] = 0x3FB999999999999ALL;
      if (!*(_BYTE *)(v77 + *(int *)(v29 + 32)))
        v82.n128_f64[0] = 0.0;
      v115 = Color.opacity(_:)(v80, v82);
      swift_release(v81);
      v83 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v116, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
      v84 = v116;
      v85 = v117;
      v86 = v118;
      v87 = static Alignment.center.getter(v83);
      v89 = v88;
      v90 = static Alignment.center.getter(v87);
      v92 = v91;
      v93 = v102;
      sub_1000047CC(v78, v102, &qword_100060D38);
      v94 = v113;
      v95 = v93 + *(int *)(v113 + 36);
      v96 = *((_QWORD *)&v116 + 1);
      *(_QWORD *)v95 = v84;
      *(_QWORD *)(v95 + 8) = v96;
      *(_OWORD *)(v95 + 16) = v85;
      *(_QWORD *)(v95 + 32) = v86;
      *(_QWORD *)(v95 + 40) = v115;
      *(_WORD *)(v95 + 48) = 256;
      *(_QWORD *)(v95 + 56) = v87;
      *(_QWORD *)(v95 + 64) = v89;
      *(_QWORD *)(v95 + 72) = v90;
      *(_QWORD *)(v95 + 80) = v92;
      sub_100004810(v78, &qword_100060D38);
      v57 = &qword_100060D40;
      sub_100004788(v93, (uint64_t)v5, &qword_100060D40);
      v97 = v112;
      sub_1000047CC((uint64_t)v5, v112, &qword_100060D40);
      swift_storeEnumTagMultiPayload(v97, v110, 1);
      v98 = sub_10000A53C();
      v99 = sub_10000A704();
      _ConditionalContent<>.init(storage:)(v97, v111, v94, v98, v99);
      v66 = (uint64_t)v5;
    }
    sub_100004810(v66, v57);
  }
  else
  {
    sub_1000043C0(v115, (uint64_t)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AppIcon);
    v67 = *(unsigned __int8 *)(v27 + 80);
    v68 = (v67 + 16) & ~v67;
    v69 = swift_allocObject(&unk_10005DD68, v68 + v28, v67 | 7);
    sub_10000B460((uint64_t)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v69 + v68, type metadata accessor for AppIcon);
    *v24 = sub_10000A898;
    v24[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v69;
    swift_storeEnumTagMultiPayload(v24, v107, 0);
    swift_retain(v69);
    v70 = sub_100004380(&qword_100060D88);
    v71 = sub_10000B4D0(&qword_100060D80, &qword_100060D88, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    v72 = sub_10000A5C0();
    v73 = (uint64_t)v108;
    _ConditionalContent<>.init(storage:)(v24, v70, v109, v71, v72);
    v74 = v112;
    sub_1000047CC(v73, v112, &qword_100060D70);
    swift_storeEnumTagMultiPayload(v74, v110, 0);
    v75 = sub_10000A53C();
    v76 = sub_10000A704();
    _ConditionalContent<>.init(storage:)(v74, v111, v113, v75, v76);
    sub_100004810(v73, &qword_100060D70);
    swift_release(v69);
  }
}

uint64_t sub_100009770@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  double v24;
  double v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t *v38;
  double v39;
  uint64_t v40;
  double v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  double *v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  v69 = a2;
  v3 = sub_100004380(&qword_100060E10);
  __chkstk_darwin(v3);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RoundedRectangle(0);
  v7 = __chkstk_darwin(v6);
  v68 = (double *)((char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v10 = (double *)((char *)&v64 - v9);
  v11 = type metadata accessor for AppIconContentView(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004380(&qword_100060E18);
  __chkstk_darwin(v14);
  v70 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100004380(&qword_100060E20);
  __chkstk_darwin(v66);
  v67 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a1;
  v17 = sub_1000043C0(a1, (uint64_t)v13, type metadata accessor for AppIconConfiguration);
  v18 = GeometryProxy.size.getter(v17);
  if (v19 >= v18)
  {
    v24 = v19;
    if (qword_1000608D8 != -1)
      swift_once(&qword_1000608D8, sub_100021CC8);
    v21 = *(double *)&qword_100061D10;
    v22 = qword_1000608D0;
    v23 = &qword_100061D08;
    v20 = v24;
  }
  else
  {
    v20 = v18;
    if (qword_1000608D8 != -1)
      swift_once(&qword_1000608D8, sub_100021CC8);
    v21 = *(double *)&qword_100061D10;
    v22 = qword_1000608D0;
    v23 = &qword_100061D00;
  }
  if (v22 != -1)
    swift_once(&qword_1000608D0, sub_100021C78);
  v25 = v21 * (v20 / *(double *)v23);
  v64 = v6;
  v26 = (char *)v10 + *(int *)(v6 + 20);
  v27 = enum case for RoundedCornerStyle.continuous(_:);
  v28 = type metadata accessor for RoundedCornerStyle(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
  v29(v26, v27, v28);
  *v10 = v25;
  v10[1] = v25;
  v30 = v70;
  v31 = v70 + *(int *)(v14 + 36);
  sub_1000043C0((uint64_t)v10, v31, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v31 + *(int *)(sub_100004380(&qword_100060E28) + 36)) = 256;
  sub_1000043C0((uint64_t)v13, v30, type metadata accessor for AppIconContentView);
  sub_10000A7A8((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v32 = sub_10000A7A8((uint64_t)v13, type metadata accessor for AppIconContentView);
  v33 = GeometryProxy.size.getter(v32);
  if (v34 >= v33)
  {
    v39 = v34;
    if (qword_1000608D8 != -1)
      swift_once(&qword_1000608D8, sub_100021CC8);
    v36 = *(double *)&qword_100061D10;
    v37 = qword_1000608D0;
    v38 = &qword_100061D08;
    v35 = v39;
  }
  else
  {
    v35 = v33;
    if (qword_1000608D8 != -1)
      swift_once(&qword_1000608D8, sub_100021CC8);
    v36 = *(double *)&qword_100061D10;
    v37 = qword_1000608D0;
    v38 = &qword_100061D00;
  }
  v40 = v64;
  if (v37 != -1)
    swift_once(&qword_1000608D0, sub_100021C78);
  v41 = v36 * (v35 / *(double *)v38);
  v42 = v68;
  v43 = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)((char *)v68 + *(int *)(v40 + 20), v27, v28);
  *v42 = v41;
  v42[1] = v41;
  v44 = static Color.black.getter(v43);
  v45 = type metadata accessor for AppIconConfiguration(0);
  v46.n128_u64[0] = 0x3FB999999999999ALL;
  if (!*(_BYTE *)(v65 + *(int *)(v45 + 32)))
    v46.n128_f64[0] = 0.0;
  v47 = Color.opacity(_:)(v44, v46);
  swift_release(v44);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v71, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  sub_1000043C0((uint64_t)v42, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v48 = &v5[*(int *)(sub_100004380(&qword_100060E30) + 36)];
  v49 = v71[1];
  *(_OWORD *)v48 = v71[0];
  *((_OWORD *)v48 + 1) = v49;
  *((_QWORD *)v48 + 4) = v72;
  v50 = sub_100004380(&qword_100060E38);
  *(_QWORD *)&v5[*(int *)(v50 + 52)] = v47;
  *(_WORD *)&v5[*(int *)(v50 + 56)] = 256;
  v51 = static Alignment.center.getter(v50);
  v53 = v52;
  v54 = (uint64_t *)&v5[*(int *)(sub_100004380(&qword_100060E40) + 36)];
  *v54 = v51;
  v54[1] = v53;
  v55 = sub_10000A7A8((uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v56 = static Alignment.center.getter(v55);
  v58 = v57;
  v59 = (uint64_t)v67;
  v60 = (uint64_t)&v67[*(int *)(v66 + 36)];
  sub_1000047CC((uint64_t)v5, v60, &qword_100060E10);
  v61 = (uint64_t *)(v60 + *(int *)(sub_100004380(&qword_100060E48) + 36));
  *v61 = v56;
  v61[1] = v58;
  v62 = v70;
  sub_1000047CC(v70, v59, &qword_100060E18);
  sub_100004810((uint64_t)v5, &qword_100060E10);
  sub_100004810(v62, &qword_100060E18);
  return sub_100004788(v59, v69, &qword_100060E20);
}

uint64_t sub_100009CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  UIColor v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int16 v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  char v64;
  __int128 v65;
  __int16 v66;
  char v67;

  v59 = a2;
  v60 = sub_100004380(&qword_100060EF8);
  __chkstk_darwin(v60);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004380(&qword_100060F00);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Image.ResizingMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100060F08);
  v55 = *(_QWORD *)(v12 - 8);
  v56 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100004380(&qword_100060F10);
  v15 = __chkstk_darwin(v58);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v57 = (uint64_t)&v52 - v18;
  v19 = type metadata accessor for AppIconConfiguration(0);
  v20 = v19;
  v21 = a1;
  v22 = *(void **)(a1 + *(int *)(v19 + 20));
  if (v22)
  {
    v54 = v22;
    v23 = Image.init(uiImage:)();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
    v24 = Image.resizable(capInsets:resizingMode:)(v11, v23, 0.0, 0.0, 0.0, 0.0);
    v53 = v4;
    v25 = v24;
    v26 = swift_release(v23);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v26);
    v27 = v21 + *(int *)(v20 + 36);
    v28 = type metadata accessor for WidgetAccentedRenderingMode(0);
    v29 = *(_QWORD *)(v28 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v7, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v7, 0, 1, v28);
    Image.widgetAccentedRenderingMode(_:)(v7, v25);
    swift_release(v25);
    sub_100004810((uint64_t)v7, &qword_100060F00);
    v31 = v55;
    v30 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v17, v14, v56);
    v32 = v58;
    v33 = &v17[*(int *)(v58 + 36)];
    *(_QWORD *)v33 = 0;
    *((_WORD *)v33 + 4) = 1;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
    v34 = v57;
    sub_100004788((uint64_t)v17, v57, &qword_100060F10);
    v35 = (uint64_t)v53;
    sub_1000047CC(v34, (uint64_t)v53, &qword_100060F10);
    swift_storeEnumTagMultiPayload(v35, v60, 0);
    v36 = sub_100004380(&qword_100060F28);
    v37 = sub_10000AF68();
    v38 = sub_10000AFE0();
    _ConditionalContent<>.init(storage:)(v35, v32, v36, v37, v38);

    return sub_100004810(v34, &qword_100060F10);
  }
  else
  {
    v40 = v60;
    v41 = v58;
    if (*(_BYTE *)(a1 + *(int *)(v19 + 32)) == 1)
    {
      sub_10000B04C(0, (unint64_t *)&qword_100060F40, UIColor_ptr);
      v42.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.10259).super.isa;
      v43 = Color.init(uiColor:)(v42.super.isa);
      v44 = 0x3FF0000000000000;
      if (*(_BYTE *)(a1 + *(int *)(v20 + 28)) == 1)
        v44 = 0x3FF5555555555555;
      v61 = v43;
      v62 = v44;
      v63 = 0;
      v64 = 0;
    }
    else
    {
      v61 = static Color.clear.getter();
      v62 = 0;
      v63 = 0;
      v64 = 1;
    }
    v45 = sub_100004380(&qword_100060F18);
    v46 = sub_10000AF04();
    _ConditionalContent<>.init(storage:)(&v61, v45, &type metadata for Color, v46, &protocol witness table for Color);
    v47 = v66;
    v48 = v67;
    *(_OWORD *)v4 = v65;
    *((_WORD *)v4 + 8) = v47;
    v4[18] = v48;
    swift_storeEnumTagMultiPayload(v4, v40, 1);
    v49 = sub_100004380(&qword_100060F28);
    v50 = sub_10000AF68();
    v51 = sub_10000AFE0();
    return _ConditionalContent<>.init(storage:)(v4, v41, v49, v50, v51);
  }
}

uint64_t sub_10000A178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100004380(&qword_100060EF0);
  return sub_100009CF8(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10000A1C0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  double *v12;
  char v13;
  uint64_t v14;

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for AppIconConfiguration(0);
  v5 = v4[5];
  v6 = *(void **)(a1 + v5);
  v7 = *(void **)(a2 + v5);
  if (v6)
  {
    if (!v7)
      return 0;
    sub_10000B04C(0, &qword_100060C98, UIImage_ptr);
    v8 = v7;
    v9 = v6;
    v10 = static NSObject.== infix(_:_:)();

    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  v11 = v4[6];
  v12 = (double *)(a1 + v11);
  v13 = *(_BYTE *)(a1 + v11 + 16);
  v14 = a2 + v11;
  if ((v13 & 1) != 0)
  {
    if (!*(_BYTE *)(v14 + 16))
      return 0;
  }
  else
  {
    if ((*(_BYTE *)(v14 + 16) & 1) != 0)
      return 0;
    if (*v12 != *(double *)v14 || v12[1] != *(double *)(v14 + 8))
      return 0;
  }
  if (*(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7])
    || *(unsigned __int8 *)(a1 + v4[8]) != *(unsigned __int8 *)(a2 + v4[8]))
  {
    return 0;
  }
  return static WidgetAccentedRenderingMode.== infix(_:_:)(a1 + v4[9], a2 + v4[9]);
}

uint64_t sub_10000A300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000A30C);
}

uint64_t sub_10000A310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000A31C);
}

uint64_t type metadata accessor for AppIcon(uint64_t a1)
{
  return sub_10000A508(a1, qword_100060CF8, (uint64_t)&nominal type descriptor for AppIcon);
}

uint64_t getEnumTagSinglePayload for AppIconConfiguration.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIconConfiguration.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10000A414 + 4 * byte_10004DFF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10000A448 + 4 * byte_10004DFF0[v4]))();
}

uint64_t sub_10000A448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000A450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10000A458);
  return result;
}

uint64_t sub_10000A464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000A46CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10000A470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000A478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10000A484(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppIconConfiguration.Style()
{
  return &type metadata for AppIconConfiguration.Style;
}

unint64_t sub_10000A4A0()
{
  unint64_t result;

  result = qword_100060D30;
  if (!qword_100060D30)
  {
    result = swift_getWitnessTable(&unk_10004E188, &type metadata for AppIconConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_100060D30);
  }
  return result;
}

uint64_t sub_10000A4E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050648, 1);
}

uint64_t type metadata accessor for AppIconContentView(uint64_t a1)
{
  return sub_10000A508(a1, qword_100060EA8, (uint64_t)&nominal type descriptor for AppIconContentView);
}

uint64_t sub_10000A508(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

unint64_t sub_10000A53C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060D78;
  if (!qword_100060D78)
  {
    v1 = sub_1000044A8(&qword_100060D70);
    sub_10000B4D0(&qword_100060D80, &qword_100060D88, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    sub_10000A5C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060D78);
  }
  return result;
}

unint64_t sub_10000A5C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060D90;
  if (!qword_100060D90)
  {
    v1 = sub_1000044A8(&qword_100060D58);
    sub_10000A664(&qword_100060D98, &qword_100060D50, &qword_100060DA8, &qword_100060DB0);
    sub_10000B4D0(&qword_100060DB8, &qword_100060DC0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060D90);
  }
  return result;
}

uint64_t sub_10000A664(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1000044A8(a2);
    sub_100008DD8(&qword_100060DA0, type metadata accessor for AppIconContentView, (uint64_t)&unk_10004E214);
    sub_10000B4D0(a3, a4, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000A704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060DC8;
  if (!qword_100060DC8)
  {
    v1 = sub_1000044A8(&qword_100060D40);
    sub_10000A664(&qword_100060DD0, &qword_100060D38, &qword_100060DD8, &qword_100060DE0);
    sub_10000B4D0(&qword_100060DE8, &qword_100060DF0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060DC8);
  }
  return result;
}

uint64_t sub_10000A7A8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000A7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(type metadata accessor for AppIcon(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for AppIconConfiguration(0);

  v9 = v6 + *(int *)(v8 + 36);
  v10 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10000A898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppIcon(0) - 8) + 80);
  return sub_100009770(v1 + ((v3 + 16) & ~v3), a1);
}

_QWORD *sub_10000A8E4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  uint64_t v19;

  v4 = type metadata accessor for AppIconConfiguration(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = v6[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v11[16] = v12[16];
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v13 = v6[9];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for WidgetAccentedRenderingMode(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18 = v9;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_10000A9E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for AppIconConfiguration(0);

  v4 = a1 + *(int *)(v3 + 36);
  v5 = type metadata accessor for WidgetAccentedRenderingMode(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_10000AA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for AppIconConfiguration(0);
  v6 = v5[5];
  v7 = *(void **)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  v8 = v5[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  v11 = v5[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for WidgetAccentedRenderingMode(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v7;
  v15(v12, v13, v14);
  return a1;
}

uint64_t sub_10000AB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for AppIconConfiguration(0);
  v6 = v5[5];
  v7 = *(void **)(a1 + v6);
  v8 = *(void **)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v8;
  v9 = v8;

  v10 = v5[6];
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
  *(_OWORD *)v11 = v13;
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  v14 = v5[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_10000ABF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for AppIconConfiguration(0);
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  v9 = v5[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t sub_10000ACB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for AppIconConfiguration(0);
  v6 = v5[5];
  v7 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);

  v8 = v5[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  v11 = v5[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_10000AD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000AD8C);
}

uint64_t sub_10000AD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppIconConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10000ADCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000ADD8);
}

uint64_t sub_10000ADDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppIconConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_10000AE1C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for AppIconConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10000AE88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060EE0;
  if (!qword_100060EE0)
  {
    v1 = sub_1000044A8(&qword_100060EE8);
    sub_10000A53C();
    sub_10000A704();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060EE0);
  }
  return result;
}

uint64_t sub_10000AEF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050670, 1);
}

unint64_t sub_10000AF04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060F20;
  if (!qword_100060F20)
  {
    v1 = sub_1000044A8(&qword_100060F18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060F20);
  }
  return result;
}

unint64_t sub_10000AF68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060F30;
  if (!qword_100060F30)
  {
    v1 = sub_1000044A8(&qword_100060F10);
    swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060F30);
  }
  return result;
}

unint64_t sub_10000AFE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060F38;
  if (!qword_100060F38)
  {
    v1 = sub_1000044A8(&qword_100060F28);
    sub_10000AF04();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060F38);
  }
  return result;
}

uint64_t sub_10000B04C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10000B084(uint64_t a1, uint64_t a2, int64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  int64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;

  v8 = sub_100004380(&qword_100060F48);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for AppIconConfiguration(0);
  v12 = __chkstk_darwin(v11);
  v59 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v50 - v15;
  v17 = _swiftEmptyArrayStorage;
  v58 = *(_QWORD *)(a1 + 16);
  if (!v58 || a2 < 1)
    return (uint64_t)v17;
  v53 = a4;
  v51 = v10;
  v52 = a3;
  v18 = 0;
  v63 = _swiftEmptyArrayStorage;
  v19 = *(unsigned __int8 *)(v14 + 80);
  v56 = a2;
  v57 = (v19 + 32) & ~v19;
  v20 = *(_QWORD *)(v14 + 72);
  v54 = v20;
  v55 = a1 + v57;
  do
  {
    v21 = v59;
    sub_1000043C0(v55 + v20 * (v18 % v58), v59, type metadata accessor for AppIconConfiguration);
    v22 = *(void **)(v21 + v11[5]);
    v23 = v21 + v11[6];
    v24 = *(_QWORD *)v23;
    v61 = *(_QWORD *)(v23 + 8);
    v62 = v24;
    v25 = *(_BYTE *)(v21 + v11[7]);
    v26 = *(_BYTE *)(v23 + 16);
    v60 = *(unsigned __int8 *)(v21 + v11[8]);
    v27 = v11[9];
    v28 = v21 + v27;
    v29 = &v16[v27];
    v30 = type metadata accessor for WidgetAccentedRenderingMode(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v29, v28, v30);
    UUID.init()(v22);
    *(_QWORD *)&v16[v11[5]] = v22;
    v31 = &v16[v11[6]];
    v32 = v61;
    *(_QWORD *)v31 = v62;
    *((_QWORD *)v31 + 1) = v32;
    v31[16] = v26;
    v16[v11[7]] = v25;
    v16[v11[8]] = v60;
    sub_10000A7A8(v21, type metadata accessor for AppIconConfiguration);
    v33 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
      v33 = (_QWORD *)sub_100032D64(0, v33[2] + 1, 1, v33);
    v35 = v33[2];
    v34 = v33[3];
    v36 = v56;
    if (v35 >= v34 >> 1)
      v33 = (_QWORD *)sub_100032D64(v34 > 1, v35 + 1, 1, v33);
    ++v18;
    v33[2] = v35 + 1;
    v37 = (uint64_t)v33 + v57 + v35 * v54;
    v20 = v54;
    v38 = sub_10000B460((uint64_t)v16, v37, type metadata accessor for AppIconConfiguration);
    v63 = v33;
  }
  while (v36 != v18);
  if ((v53 & 1) != 0)
  {
LABEL_13:
    if (v33[2] < v36)
    {
      __break(1u);
    }
    else
    {
      v45 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v46 = swift_unknownObjectRetain_n(v33, 2);
      v47 = (_QWORD *)swift_dynamicCastClass(v46, v45);
      if (!v47)
      {
        swift_bridgeObjectRelease(v33);
        v47 = _swiftEmptyArrayStorage;
      }
      v48 = v47[2];
      swift_release(v47);
      if (v48 == v36)
      {
        v17 = (_QWORD *)swift_dynamicCastClass(v33, v45);
        if (!v17)
        {
          swift_bridgeObjectRelease(v33);
          v17 = _swiftEmptyArrayStorage;
        }
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease(v33);
    sub_100046C14((uint64_t)v33, (uint64_t)v33 + v57, 0, (2 * v36) | 1);
    v17 = v49;
LABEL_19:
    swift_bridgeObjectRelease(v33);
    return (uint64_t)v17;
  }
  v39 = v59;
  v40 = static WidgetAccentedRenderingMode.fullColor.getter(v38);
  result = UUID.init()(v40);
  *(_QWORD *)(v39 + v11[5]) = 0;
  v42 = v39 + v11[6];
  *(_QWORD *)v42 = 0;
  *(_QWORD *)(v42 + 8) = 0;
  *(_BYTE *)(v42 + 16) = 1;
  *(_BYTE *)(v39 + v11[7]) = 0;
  *(_BYTE *)(v39 + v11[8]) = 0;
  v43 = v52;
  if (v33[2] < v52)
  {
    __break(1u);
  }
  else if ((v52 & 0x8000000000000000) == 0)
  {
    v44 = (uint64_t)v51;
    sub_10000B460(v59, (uint64_t)v51, type metadata accessor for AppIconConfiguration);
    sub_100032BB4(v43, v43, v44);
    v33 = v63;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000B460(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000B4A4()
{
  return sub_10000B4D0(&qword_100060F50, &qword_100060F58, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_10000B4D0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000044A8(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MediumFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t initializeWithCopy for MediumFallbackView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MediumFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for MediumFallbackView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for MediumFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediumFallbackView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediumFallbackView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumFallbackView()
{
  return &type metadata for MediumFallbackView;
}

uint64_t sub_10000B708(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000506D4, 1);
}

uint64_t sub_10000B718@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  CGFloat tx;
  CGFloat ty;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t *v151;
  char *v152;
  uint64_t v153;
  double *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  CGAffineTransform v186;

  v2 = v1;
  v184 = a1;
  v3 = type metadata accessor for AppIcon(0);
  v158 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for AppIconConfiguration(0);
  *(_QWORD *)&v185 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v157 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004380(&qword_100060F60);
  __chkstk_darwin(v7);
  v161 = (uint64_t *)((char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v159 = sub_100004380(&qword_100060F68);
  __chkstk_darwin(v159);
  v162 = (uint64_t)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100004380(&qword_100060F70);
  v10 = __chkstk_darwin(v172);
  v160 = (uint64_t)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v163 = (uint64_t)&v151 - v12;
  v155 = type metadata accessor for GridItem.Size(0);
  v153 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v154 = (double *)((char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for GridItem(0);
  __chkstk_darwin(v14);
  v152 = (char *)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_100004380(&qword_100060F78);
  __chkstk_darwin(v169);
  v170 = (uint64_t)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100004380(&qword_100060F80);
  __chkstk_darwin(v183);
  v171 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100004380(&qword_100060F88);
  __chkstk_darwin(v166);
  v167 = (uint64_t)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_100004380(&qword_100060F90);
  __chkstk_darwin(v176);
  v168 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100004380(&qword_100060F98);
  v21 = __chkstk_darwin(v20);
  v173 = (uint64_t)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v151 - v23;
  v178 = sub_100004380(&qword_100060FA0);
  __chkstk_darwin(v178);
  v26 = (char *)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100004380(&qword_100060FA8);
  __chkstk_darwin(v165);
  v151 = (uint64_t *)((char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v180 = sub_100004380(&qword_100060FB0);
  __chkstk_darwin(v180);
  v182 = (uint64_t)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_100004380(&qword_100060FB8);
  __chkstk_darwin(v174);
  v175 = (uint64_t)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100004380(&qword_100060FC0);
  __chkstk_darwin(v30);
  v32 = (char *)&v151 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100004380(&qword_100060FC8);
  __chkstk_darwin(v33);
  v164 = (char *)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100004380(&qword_100060FD0);
  __chkstk_darwin(v181);
  v177 = (char *)&v151 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for AppIconContentView(0);
  v37 = __chkstk_darwin(v36);
  v39 = (char *)&v151 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v179 = v2;
  v40 = *v2;
  v41 = *(_QWORD *)(*v2 + 16);
  switch(v41)
  {
    case 0:
      v42 = UUID.init()(v37);
      v43 = (int *)v156;
      *(_QWORD *)&v39[*(int *)(v156 + 20)] = 0;
      v44 = &v39[v43[6]];
      *(_QWORD *)v44 = 0;
      *((_QWORD *)v44 + 1) = 0;
      v44[16] = 1;
      v39[v43[7]] = 0;
      v39[v43[8]] = 1;
      static WidgetAccentedRenderingMode.fullColor.getter(v42);
      sub_1000043C0((uint64_t)v39, (uint64_t)v32, type metadata accessor for AppIconContentView);
      swift_storeEnumTagMultiPayload(v32, v30, 0);
      v45 = v33;
      v46 = sub_100008DD8(&qword_100060DA0, type metadata accessor for AppIconContentView, (uint64_t)&unk_10004E214);
      v47 = sub_10000B4D0(&qword_100061010, &qword_100060FA8, (uint64_t)&protocol conformance descriptor for HStack<A>);
      v48 = (uint64_t)v164;
      _ConditionalContent<>.init(storage:)(v32, v36, v165, v46, v47);
      v49 = v175;
      sub_1000047CC(v48, v175, &qword_100060FC8);
      swift_storeEnumTagMultiPayload(v49, v174, 0);
      v50 = sub_10000ECBC();
      v51 = sub_10000ED58();
      v52 = (uint64_t)v177;
      _ConditionalContent<>.init(storage:)(v49, v45, v176, v50, v51);
      sub_100004810(v48, &qword_100060FC8);
      v53 = v182;
      sub_1000047CC(v52, v182, &qword_100060FD0);
      swift_storeEnumTagMultiPayload(v53, v180, 0);
      v54 = sub_10000EC98();
      v55 = sub_10000EDD4();
      _ConditionalContent<>.init(storage:)(v53, v181, v183, v54, v55);
      sub_100004810(v52, &qword_100060FD0);
      return sub_10000A7A8((uint64_t)v39, type metadata accessor for AppIconContentView);
    case 1:
      v76 = static VerticalAlignment.center.getter(v37);
      v77 = (uint64_t)v151;
      *v151 = v76;
      *(_QWORD *)(v77 + 8) = 0;
      *(_BYTE *)(v77 + 16) = 1;
      v78 = sub_100004380(&qword_100061040);
      sub_10000C968((double *)v179, v77 + *(int *)(v78 + 44));
      sub_1000047CC(v77, (uint64_t)v32, &qword_100060FA8);
      swift_storeEnumTagMultiPayload(v32, v30, 1);
      v79 = v33;
      v80 = sub_100008DD8(&qword_100060DA0, type metadata accessor for AppIconContentView, (uint64_t)&unk_10004E214);
      v81 = sub_10000B4D0(&qword_100061010, &qword_100060FA8, (uint64_t)&protocol conformance descriptor for HStack<A>);
      v82 = (uint64_t)v164;
      _ConditionalContent<>.init(storage:)(v32, v36, v165, v80, v81);
      v83 = v175;
      sub_1000047CC(v82, v175, &qword_100060FC8);
      swift_storeEnumTagMultiPayload(v83, v174, 0);
      v84 = sub_10000ECBC();
      v85 = sub_10000ED58();
      v86 = (uint64_t)v177;
      _ConditionalContent<>.init(storage:)(v83, v79, v176, v84, v85);
      sub_100004810(v82, &qword_100060FC8);
      v87 = v182;
      sub_1000047CC(v86, v182, &qword_100060FD0);
      swift_storeEnumTagMultiPayload(v87, v180, 0);
      v88 = sub_10000EC98();
      v89 = sub_10000EDD4();
      _ConditionalContent<>.init(storage:)(v87, v181, v183, v88, v89);
      sub_100004810(v86, &qword_100060FD0);
      v90 = v77;
      v91 = &qword_100060FA8;
      return sub_100004810(v90, v91);
    case 2:
      v92 = (uint64_t)v26;
      *(_QWORD *)v26 = static VerticalAlignment.center.getter(v37);
      *((_QWORD *)v26 + 1) = 0;
      v26[16] = 1;
      v93 = sub_100004380(&qword_100061028);
      v94 = v33;
      v95 = &v26[*(int *)(v93 + 44)];
      *(_QWORD *)v24 = static HorizontalAlignment.center.getter(v93);
      *((_QWORD *)v24 + 1) = 0;
      v24[16] = 1;
      v96 = sub_100004380(&qword_100061030);
      sub_10000CDA4(v179, (uint64_t)&v24[*(int *)(v96 + 44)], -50.0, -25.0);
      v97 = v173;
      sub_1000047CC((uint64_t)v24, v173, &qword_100060F98);
      *(_QWORD *)v95 = 0;
      v95[8] = 1;
      v98 = sub_100004380(&qword_100061038);
      sub_1000047CC(v97, (uint64_t)&v95[*(int *)(v98 + 48)], &qword_100060F98);
      sub_100004810((uint64_t)v24, &qword_100060F98);
      sub_100004810(v97, &qword_100060F98);
      v99 = &qword_100060FA0;
      v100 = v167;
      sub_1000047CC(v92, v167, &qword_100060FA0);
      v101 = v100;
      v102 = v166;
      v103 = 0;
      goto LABEL_13;
    case 3:
      v92 = (uint64_t)v26;
      *(_QWORD *)v26 = static VerticalAlignment.center.getter(v37);
      *((_QWORD *)v26 + 1) = 0;
      v26[16] = 1;
      v104 = sub_100004380(&qword_100061028);
      v94 = v33;
      v105 = &v26[*(int *)(v104 + 44)];
      *(_QWORD *)v24 = static HorizontalAlignment.center.getter(v104);
      *((_QWORD *)v24 + 1) = 0;
      v24[16] = 1;
      v106 = sub_100004380(&qword_100061030);
      sub_10000CDA4(v179, (uint64_t)&v24[*(int *)(v106 + 44)], -30.0, -15.0);
      v107 = v173;
      sub_1000047CC((uint64_t)v24, v173, &qword_100060F98);
      *(_QWORD *)v105 = 0;
      v105[8] = 1;
      v108 = sub_100004380(&qword_100061038);
      sub_1000047CC(v107, (uint64_t)&v105[*(int *)(v108 + 48)], &qword_100060F98);
      sub_100004810((uint64_t)v24, &qword_100060F98);
      sub_100004810(v107, &qword_100060F98);
      v99 = &qword_100060FA0;
      v100 = v167;
      sub_1000047CC(v92, v167, &qword_100060FA0);
      v101 = v100;
      v102 = v166;
      v103 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v101, v102, v103);
      v109 = sub_10000B4D0(&qword_100060FE0, &qword_100060FA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
      v110 = (uint64_t)v168;
      _ConditionalContent<>.init(storage:)(v100, v178, v178, v109, v109);
      v111 = v175;
      sub_1000047CC(v110, v175, &qword_100060F90);
      swift_storeEnumTagMultiPayload(v111, v174, 1);
      v112 = sub_10000ECBC();
      v113 = sub_10000ED58();
      v114 = (uint64_t)v177;
      _ConditionalContent<>.init(storage:)(v111, v94, v176, v112, v113);
      sub_100004810(v110, &qword_100060F90);
      v115 = v182;
      sub_1000047CC(v114, v182, &qword_100060FD0);
      swift_storeEnumTagMultiPayload(v115, v180, 0);
      v116 = sub_10000EC98();
      v117 = sub_10000EDD4();
      _ConditionalContent<>.init(storage:)(v115, v181, v183, v116, v117);
      sub_100004810(v114, &qword_100060FD0);
      v90 = v92;
      goto LABEL_23;
    case 4:
      v118 = (uint64_t)v26;
      *(_QWORD *)v26 = static VerticalAlignment.center.getter(v37);
      *((_QWORD *)v26 + 1) = 0;
      v26[16] = 1;
      v119 = sub_100004380(&qword_100061028);
      v120 = &v26[*(int *)(v119 + 44)];
      *(_QWORD *)v24 = static HorizontalAlignment.center.getter(v119);
      *((_QWORD *)v24 + 1) = 0;
      v24[16] = 1;
      v121 = sub_100004380(&qword_100061030);
      sub_10000CDA4(v179, (uint64_t)&v24[*(int *)(v121 + 44)], -25.0, -12.0);
      v122 = v173;
      sub_1000047CC((uint64_t)v24, v173, &qword_100060F98);
      *(_QWORD *)v120 = 0;
      v120[8] = 1;
      v123 = sub_100004380(&qword_100061038);
      sub_1000047CC(v122, (uint64_t)&v120[*(int *)(v123 + 48)], &qword_100060F98);
      sub_100004810((uint64_t)v24, &qword_100060F98);
      sub_100004810(v122, &qword_100060F98);
      v99 = &qword_100060FA0;
      v124 = v170;
      sub_1000047CC((uint64_t)v26, v170, &qword_100060FA0);
      swift_storeEnumTagMultiPayload(v124, v169, 0);
      v125 = sub_10000B4D0(&qword_100060FE0, &qword_100060FA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
      v126 = sub_10000F008(&qword_100060FE8, &qword_100060F70, (void (*)(void))sub_10000EC14);
      v127 = (uint64_t)v171;
      v128 = v124;
      v129 = v178;
      v130 = v172;
      goto LABEL_22;
    default:
      v57 = (_QWORD *)v179;
      v58 = *(double *)(v179 + 8) * 0.36;
      v59 = *(double *)(v179 + 32);
      v60 = *(double *)(v179 + 40);
      v61 = v58 * 2.5 + v60 + v60;
      v62 = v60 + v58 * 1.5;
      v63 = *(double *)(v179 + 24);
      v64 = v154;
      *v154 = v58;
      (*(void (**)(double *, _QWORD, uint64_t))(v153 + 104))(v64, enum case for GridItem.Size.fixed(_:), v155);
      v65 = v152;
      GridItem.init(_:spacing:alignment:)(v64, *(_QWORD *)&v60, 0, 0, 0, 1);
      v66 = sub_10000D100(v65, 3);
      swift_bridgeObjectRelease(v66);
      sub_10000EBC4(v57);
      *(_QWORD *)&v186.a = _swiftEmptyArrayStorage;
      sub_10002D994(0, v41, 0);
      v67 = v40 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
      v68 = *(_QWORD *)(v158 + 72);
      v69 = *(_QWORD *)&v186.a;
      v70 = v185;
      v71 = (uint64_t)v157;
      v72 = (uint64_t)v157;
      do
      {
        sub_1000043C0(v67, (uint64_t)v5, type metadata accessor for AppIcon);
        sub_1000043C0((uint64_t)v5, v71, type metadata accessor for AppIconConfiguration);
        sub_10000A7A8((uint64_t)v5, type metadata accessor for AppIcon);
        if ((swift_isUniquelyReferenced_nonNull_native(v69) & 1) == 0)
        {
          sub_10002D994(0, *(_QWORD *)(v69 + 16) + 1, 1);
          v70 = v185;
          v69 = *(_QWORD *)&v186.a;
        }
        v74 = *(_QWORD *)(v69 + 16);
        v73 = *(_QWORD *)(v69 + 24);
        if (v74 >= v73 >> 1)
        {
          sub_10002D994(v73 > 1, v74 + 1, 1);
          v70 = v185;
          v69 = *(_QWORD *)&v186.a;
        }
        *(_QWORD *)(v69 + 16) = v74 + 1;
        v75 = v69
            + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))
            + *(_QWORD *)(v70 + 72) * v74;
        v71 = v72;
        sub_100004440(v72, v75);
        v67 += v68;
        --v41;
      }
      while (v41);
      if (v63 >= v61)
        v131 = v61 - v63;
      else
        v131 = v63 - v61;
      if (v59 >= v62)
        v132 = v62 - v59;
      else
        v132 = v59 - v62;
      v133 = v179;
      sub_10000EBEC((_QWORD *)v179);
      v134 = sub_10000B084(v69, 12, 5, 0);
      swift_release(v69);
      v136 = static HorizontalAlignment.center.getter(v135);
      v137 = (uint64_t)v161;
      *v161 = v136;
      *(_QWORD *)(v137 + 8) = 0;
      *(_BYTE *)(v137 + 16) = 1;
      v138 = sub_100004380(&qword_100060FD8);
      sub_10000D1E4(v134, v133, v137 + *(int *)(v138 + 44), v58);
      swift_bridgeObjectRelease(v134);
      v139 = v162;
      sub_1000047CC(v137, v162, &qword_100060F60);
      v140 = v139 + *(int *)(v159 + 36);
      *(_QWORD *)v140 = 0xBFD0C152382D7365;
      *(double *)(v140 + 8) = v61 / (v58 * 3.0 + v60 * 3.0 + -1.0);
      *(double *)(v140 + 16) = v62 / (v58 * 4.0 + v60 * 4.0 + -1.0);
      sub_100004810(v137, &qword_100060F60);
      CGAffineTransformMakeTranslation(&v186, v131, v132);
      v185 = *(_OWORD *)&v186.a;
      v179 = *(_OWORD *)&v186.c;
      tx = v186.tx;
      ty = v186.ty;
      v143 = v160;
      sub_1000047CC(v139, v160, &qword_100060F68);
      v144 = v172;
      v145 = v143 + *(int *)(v172 + 36);
      v146 = v179;
      *(_OWORD *)v145 = v185;
      *(_OWORD *)(v145 + 16) = v146;
      *(CGFloat *)(v145 + 32) = tx;
      *(CGFloat *)(v145 + 40) = ty;
      sub_100004810(v139, &qword_100060F68);
      v99 = &qword_100060F70;
      v118 = v163;
      sub_100004788(v143, v163, &qword_100060F70);
      v147 = v170;
      sub_1000047CC(v118, v170, &qword_100060F70);
      swift_storeEnumTagMultiPayload(v147, v169, 1);
      v125 = sub_10000B4D0(&qword_100060FE0, &qword_100060FA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
      v126 = sub_10000F008(&qword_100060FE8, &qword_100060F70, (void (*)(void))sub_10000EC14);
      v127 = (uint64_t)v171;
      v128 = v147;
      v129 = v178;
      v130 = v144;
LABEL_22:
      _ConditionalContent<>.init(storage:)(v128, v129, v130, v125, v126);
      v148 = v182;
      sub_1000047CC(v127, v182, &qword_100060F80);
      swift_storeEnumTagMultiPayload(v148, v180, 1);
      v149 = sub_10000EC98();
      v150 = sub_10000EDD4();
      _ConditionalContent<>.init(storage:)(v148, v181, v183, v149, v150);
      sub_100004810(v127, &qword_100060F80);
      v90 = v118;
LABEL_23:
      v91 = v99;
      return sub_100004810(v90, v91);
  }
}

uint64_t sub_10000C968@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = sub_100004380(&qword_100061048);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v23 - v8;
  v10 = sub_100004380(&qword_100061050);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v23 - v15;
  *(_QWORD *)v16 = static HorizontalAlignment.center.getter(v14);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = *(_QWORD *)a1;
  v18 = *(_QWORD *)(*(_QWORD *)a1 + 16) - 1;
  if (v18 > 3)
    v19 = 0.36;
  else
    v19 = dbl_10004E370[v18];
  v20 = (uint64_t)&v16[*(int *)(sub_100004380(&qword_100061058) + 44)];
  sub_10000CB50(v17, (uint64_t)v7, v19, a1[6], -16.0, 20.0, 0.0, 0.0);
  sub_100004788((uint64_t)v7, (uint64_t)v9, &qword_100061048);
  sub_100004788((uint64_t)v9, v20, &qword_100061048);
  sub_1000047CC((uint64_t)v16, (uint64_t)v13, &qword_100061050);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v21 = sub_100004380(&qword_100061060);
  sub_1000047CC((uint64_t)v13, a2 + *(int *)(v21 + 48), &qword_100061050);
  sub_100004810((uint64_t)v16, &qword_100061050);
  return sub_100004810((uint64_t)v13, &qword_100061050);
}

uint64_t sub_10000CB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];

  v9 = v8;
  v18 = sub_100004380(&qword_100061068);
  __chkstk_darwin(v18);
  v20 = (_QWORD *)((char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(double *)(v9 + 8);
  v23 = v22 / (v22 * a3 - (double)(v21 - 1) * a7);
  v24 = fabs(sin(a4 * 3.14159265 / 180.0 * 0.5) * (sqrt(v22 * v22 + v22 * v22) - v22)) * a3;
  *v20 = static Alignment.center.getter(v25);
  v20[1] = v26;
  sub_100004380(&qword_100061070);
  v40[0] = 0;
  v40[1] = v21;
  KeyPath = swift_getKeyPath(&unk_10004E350);
  v28 = swift_allocObject(&unk_10005DEB0, 136, 7);
  v29 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v28 + 24) = *(_OWORD *)v9;
  *(_QWORD *)(v28 + 16) = a1;
  *(_OWORD *)(v28 + 40) = v29;
  *(_OWORD *)(v28 + 56) = *(_OWORD *)(v9 + 32);
  *(_QWORD *)(v28 + 72) = *(_QWORD *)(v9 + 48);
  *(double *)(v28 + 80) = a3;
  *(double *)(v28 + 88) = a4;
  *(double *)(v28 + 96) = a5;
  *(double *)(v28 + 104) = a6;
  *(double *)(v28 + 112) = a7;
  *(double *)(v28 + 120) = a8;
  *(double *)(v28 + 128) = v24;
  swift_bridgeObjectRetain(a1);
  sub_10000EBC4((_QWORD *)v9);
  v30 = sub_100004380(&qword_100061078);
  v31 = sub_100004380(&qword_100061080);
  v32 = sub_10000EEB8();
  v33 = sub_10000EF68();
  v34 = ForEach<>.init(_:id:content:)(v40, KeyPath, sub_10000EE9C, v28, v30, v31, v32, &protocol witness table for Int, v33);
  v35 = static UnitPoint.topTrailing.getter(v34);
  v37 = v36;
  sub_1000047CC((uint64_t)v20, a2, &qword_100061068);
  v38 = a2 + *(int *)(sub_100004380(&qword_100061048) + 36);
  *(double *)v38 = v23;
  *(double *)(v38 + 8) = v23;
  *(double *)(v38 + 16) = v35;
  *(_QWORD *)(v38 + 24) = v37;
  return sub_100004810((uint64_t)v20, &qword_100061068);
}

uint64_t sub_10000CDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;

  v8 = sub_100004380(&qword_100061048);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004380(&qword_1000610D8);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD **)a1;
  sub_10000EBC4((_QWORD *)a1);
  v15 = sub_10000CF54(v14);
  v16 = v15;
  v17 = v14[2];
  if ((unint64_t)(v17 - 1) > 3)
    v18 = 0.36;
  else
    v18 = dbl_10004E370[v17 - 1];
  sub_10000CB50(v15, (uint64_t)v10, v18, *(double *)(a1 + 48), -16.0, 24.0, a3, a4);
  v19 = swift_bridgeObjectRelease(v16);
  v20 = static Edge.Set.top.getter(v19);
  v21 = EdgeInsets.init(_all:)(fabs(a4) * ((double)v17 + -1.0));
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_1000047CC((uint64_t)v10, (uint64_t)v13, &qword_100061048);
  v28 = &v13[*(int *)(v11 + 36)];
  *v28 = v20;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_100004810((uint64_t)v10, &qword_100061048);
  return sub_100004788((uint64_t)v13, a2, &qword_1000610D8);
}

uint64_t sub_10000CF54(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for AppIcon(0);
  v17 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v3);
  v18 = (uint64_t)&v15 - v7;
  v8 = a1[2];
  if (v8 < 2)
    return (uint64_t)a1;
  v9 = 0;
  v10 = v8 >> 1;
  v11 = v8 - 1;
  v16 = v8 >> 1;
  while (1)
  {
    if (v9 == v11)
      goto LABEL_4;
    v12 = a1[2];
    if (v9 >= v12)
      break;
    v13 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v14 = *(_QWORD *)(v17 + 72);
    result = sub_1000043C0((uint64_t)a1 + v13 + v14 * v9, v18, type metadata accessor for AppIcon);
    if (v11 >= v12)
      goto LABEL_14;
    sub_1000043C0((uint64_t)a1 + v13 + v14 * v11, (uint64_t)v5, type metadata accessor for AppIcon);
    result = swift_isUniquelyReferenced_nonNull_native(a1);
    if ((result & 1) == 0)
    {
      result = sub_100033190(a1);
      a1 = (_QWORD *)result;
    }
    if (v9 >= a1[2])
      goto LABEL_15;
    result = sub_10000F164((uint64_t)v5, (uint64_t)a1 + v13 + v14 * v9);
    if (v11 >= a1[2])
      goto LABEL_16;
    result = sub_10000F164(v18, (uint64_t)a1 + v13 + v14 * v11);
    v10 = v16;
LABEL_4:
    ++v9;
    --v11;
    if (v10 == v9)
      return (uint64_t)a1;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

char *sub_10000D100(char *result, uint64_t a2)
{
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (a2)
    {
      v4 = type metadata accessor for GridItem(0);
      v5 = (char *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      *((_QWORD *)v5 + 2) = a2;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v8(&v5[v7], v3, v4);
      v9 = a2 - 1;
      if (a2 != 1)
      {
        v10 = *(_QWORD *)(v6 + 72);
        v11 = &v5[v10 + v7];
        do
        {
          v8(v11, v3, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      v5 = (char *)&_swiftEmptyArrayStorage;
    }
    v12 = type metadata accessor for GridItem(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v3, v12);
    return v5;
  }
  return result;
}

uint64_t sub_10000D1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v8 = sub_100004380(&qword_1000610E0);
  v9 = __chkstk_darwin(v8);
  v48 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v47 = (uint64_t)&v45 - v12;
  v13 = __chkstk_darwin(v11);
  v50 = (uint64_t)&v45 - v14;
  v15 = __chkstk_darwin(v13);
  v49 = (uint64_t)&v45 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v45 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v45 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v45 - v24;
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v45 - v27;
  *(_QWORD *)v28 = static VerticalAlignment.center.getter(v26);
  *((_QWORD *)v28 + 1) = 0;
  v28[16] = 1;
  v29 = sub_100004380(&qword_1000610E8);
  v30 = sub_10000D548(a1, a2, (uint64_t)&v28[*(int *)(v29 + 44)], a4);
  v46 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)v25 = static VerticalAlignment.center.getter(v30);
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  v31 = sub_10000D9C8(a1, a2, (uint64_t)&v25[*(int *)(v29 + 44)], a4);
  *(_QWORD *)v22 = static VerticalAlignment.center.getter(v31);
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v32 = sub_10000DE44(a1, a2, (uint64_t)&v22[*(int *)(v29 + 44)], a4);
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v32);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v33 = (uint64_t)&v19[*(int *)(v29 + 44)];
  v45 = v19;
  sub_10000E2C0(a1, a2, v33, a4);
  v34 = v49;
  sub_1000047CC((uint64_t)v28, v49, &qword_1000610E0);
  v35 = v50;
  sub_1000047CC((uint64_t)v25, v50, &qword_1000610E0);
  v36 = v47;
  sub_1000047CC((uint64_t)v22, v47, &qword_1000610E0);
  v37 = v48;
  sub_1000047CC((uint64_t)v19, v48, &qword_1000610E0);
  sub_1000047CC(v34, a3, &qword_1000610E0);
  v38 = (int *)sub_100004380(&qword_1000610F0);
  v39 = a3;
  v40 = a3 + v38[12];
  v41 = v46;
  *(_QWORD *)v40 = v46;
  *(_BYTE *)(v40 + 8) = 0;
  sub_1000047CC(v35, v39 + v38[16], &qword_1000610E0);
  v42 = v39 + v38[20];
  *(_QWORD *)v42 = v41;
  *(_BYTE *)(v42 + 8) = 0;
  sub_1000047CC(v36, v39 + v38[24], &qword_1000610E0);
  v43 = v39 + v38[28];
  *(_QWORD *)v43 = v41;
  *(_BYTE *)(v43 + 8) = 0;
  sub_1000047CC(v37, v39 + v38[32], &qword_1000610E0);
  sub_100004810((uint64_t)v45, &qword_1000610E0);
  sub_100004810((uint64_t)v22, &qword_1000610E0);
  sub_100004810((uint64_t)v25, &qword_1000610E0);
  sub_100004810((uint64_t)v28, &qword_1000610E0);
  sub_100004810(v37, &qword_1000610E0);
  sub_100004810(v36, &qword_1000610E0);
  sub_100004810(v50, &qword_1000610E0);
  return sub_100004810(v49, &qword_1000610E0);
}

uint64_t sub_10000D548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[3];
  _OWORD v63[3];
  _OWORD v64[3];

  v8 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100004380(&qword_100060A20);
  v11 = __chkstk_darwin(v61);
  v12 = __chkstk_darwin(v11);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v55 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v55 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v55 - v20;
  result = __chkstk_darwin(v19);
  v26 = (char *)&v55 - v25;
  v27 = *(_QWORD *)(a1 + 16);
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  v60 = a2;
  v57 = v24;
  v58 = v23;
  v59 = a3;
  v28 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
  v29 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v30 = sub_1000043C0(v29, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v31 = static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(v62, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v31, v32);
  sub_1000043C0((uint64_t)v10, (uint64_t)v21, type metadata accessor for AppIcon);
  v33 = &v21[*(int *)(v61 + 36)];
  v34 = v62[1];
  *(_OWORD *)v33 = v62[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v62[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  v56 = v26;
  result = sub_100004788((uint64_t)v21, (uint64_t)v26, &qword_100060A20);
  if (v27 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v35 = *(_QWORD *)(v60 + 40);
  v36 = *(_QWORD *)(v28 + 72);
  v37 = sub_1000043C0(v29 + v36, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v63, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v38, v39);
  sub_1000043C0((uint64_t)v10, (uint64_t)v18, type metadata accessor for AppIcon);
  v40 = &v18[*(int *)(v61 + 36)];
  v41 = v63[1];
  *(_OWORD *)v40 = v63[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v63[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v18, (uint64_t)v21, &qword_100060A20);
  if (v27 >= 3)
  {
    v42 = sub_1000043C0(v29 + 2 * v36, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
    v43 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(v64, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v43, v44);
    sub_1000043C0((uint64_t)v10, (uint64_t)v15, type metadata accessor for AppIcon);
    v45 = &v15[*(int *)(v61 + 36)];
    v46 = v64[1];
    *(_OWORD *)v45 = v64[0];
    *((_OWORD *)v45 + 1) = v46;
    *((_OWORD *)v45 + 2) = v64[2];
    sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
    sub_100004788((uint64_t)v15, (uint64_t)v18, &qword_100060A20);
    v47 = v35;
    v48 = (uint64_t)v56;
    sub_1000047CC((uint64_t)v56, (uint64_t)v15, &qword_100060A20);
    v49 = v57;
    sub_1000047CC((uint64_t)v21, v57, &qword_100060A20);
    v50 = v58;
    sub_1000047CC((uint64_t)v18, v58, &qword_100060A20);
    v51 = v59;
    sub_1000047CC((uint64_t)v15, v59, &qword_100060A20);
    v52 = (int *)sub_100004380(&qword_1000610F8);
    v53 = v51 + v52[12];
    *(_QWORD *)v53 = v47;
    *(_BYTE *)(v53 + 8) = 0;
    sub_1000047CC(v49, v51 + v52[16], &qword_100060A20);
    v54 = v51 + v52[20];
    *(_QWORD *)v54 = v47;
    *(_BYTE *)(v54 + 8) = 0;
    sub_1000047CC(v50, v51 + v52[24], &qword_100060A20);
    sub_100004810((uint64_t)v18, &qword_100060A20);
    sub_100004810((uint64_t)v21, &qword_100060A20);
    sub_100004810(v48, &qword_100060A20);
    sub_100004810(v50, &qword_100060A20);
    sub_100004810(v49, &qword_100060A20);
    return sub_100004810((uint64_t)v15, &qword_100060A20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10000D9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _OWORD v60[3];
  _OWORD v61[3];
  _OWORD v62[3];

  v8 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004380(&qword_100060A20);
  v12 = __chkstk_darwin(v11);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v55 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v55 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v55 - v21;
  result = __chkstk_darwin(v20);
  v27 = (char *)&v55 - v26;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28 < 4)
  {
    __break(1u);
    goto LABEL_6;
  }
  v58 = a2;
  v55 = v25;
  v56 = v24;
  v57 = a3;
  v29 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
  v30 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v31 = *(_QWORD *)(v29 + 72);
  v32 = sub_1000043C0(v30 + 3 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v33 = static Alignment.center.getter(v32);
  _FrameLayout.init(width:height:alignment:)(v60, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v33, v34);
  v59 = v27;
  sub_1000043C0((uint64_t)v10, (uint64_t)v22, type metadata accessor for AppIcon);
  v35 = &v22[*(int *)(v11 + 36)];
  v36 = v60[1];
  *(_OWORD *)v35 = v60[0];
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v60[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v22, (uint64_t)v59, &qword_100060A20);
  if (v28 == 4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v58 + 40);
  v37 = sub_1000043C0(v30 + 4 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v61, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v38, v39);
  sub_1000043C0((uint64_t)v10, (uint64_t)v19, type metadata accessor for AppIcon);
  v40 = &v19[*(int *)(v11 + 36)];
  v41 = v61[1];
  *(_OWORD *)v40 = v61[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v61[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v19, (uint64_t)v22, &qword_100060A20);
  if (v28 >= 6)
  {
    v42 = sub_1000043C0(v30 + 5 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
    v43 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(v62, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v43, v44);
    sub_1000043C0((uint64_t)v10, (uint64_t)v16, type metadata accessor for AppIcon);
    v45 = &v16[*(int *)(v11 + 36)];
    v46 = v62[1];
    *(_OWORD *)v45 = v62[0];
    *((_OWORD *)v45 + 1) = v46;
    *((_OWORD *)v45 + 2) = v62[2];
    sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
    sub_100004788((uint64_t)v16, (uint64_t)v19, &qword_100060A20);
    v47 = (uint64_t)v59;
    sub_1000047CC((uint64_t)v59, (uint64_t)v16, &qword_100060A20);
    v48 = v55;
    sub_1000047CC((uint64_t)v22, v55, &qword_100060A20);
    v49 = v56;
    sub_1000047CC((uint64_t)v19, v56, &qword_100060A20);
    v50 = v57;
    sub_1000047CC((uint64_t)v16, v57, &qword_100060A20);
    v51 = (int *)sub_100004380(&qword_1000610F8);
    v52 = v50 + v51[12];
    v53 = v58;
    *(_QWORD *)v52 = v58;
    *(_BYTE *)(v52 + 8) = 0;
    sub_1000047CC(v48, v50 + v51[16], &qword_100060A20);
    v54 = v50 + v51[20];
    *(_QWORD *)v54 = v53;
    *(_BYTE *)(v54 + 8) = 0;
    sub_1000047CC(v49, v50 + v51[24], &qword_100060A20);
    sub_100004810((uint64_t)v19, &qword_100060A20);
    sub_100004810((uint64_t)v22, &qword_100060A20);
    sub_100004810(v47, &qword_100060A20);
    sub_100004810(v49, &qword_100060A20);
    sub_100004810(v48, &qword_100060A20);
    return sub_100004810((uint64_t)v16, &qword_100060A20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10000DE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _OWORD v60[3];
  _OWORD v61[3];
  _OWORD v62[3];

  v8 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004380(&qword_100060A20);
  v12 = __chkstk_darwin(v11);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v55 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v55 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v55 - v21;
  result = __chkstk_darwin(v20);
  v27 = (char *)&v55 - v26;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28 < 7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v58 = a2;
  v55 = v25;
  v56 = v24;
  v57 = a3;
  v29 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
  v30 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v31 = *(_QWORD *)(v29 + 72);
  v32 = sub_1000043C0(v30 + 6 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v33 = static Alignment.center.getter(v32);
  _FrameLayout.init(width:height:alignment:)(v60, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v33, v34);
  v59 = v27;
  sub_1000043C0((uint64_t)v10, (uint64_t)v22, type metadata accessor for AppIcon);
  v35 = &v22[*(int *)(v11 + 36)];
  v36 = v60[1];
  *(_OWORD *)v35 = v60[0];
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v60[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v22, (uint64_t)v59, &qword_100060A20);
  if (v28 == 7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v58 + 40);
  v37 = sub_1000043C0(v30 - v31 + 8 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v61, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v38, v39);
  sub_1000043C0((uint64_t)v10, (uint64_t)v19, type metadata accessor for AppIcon);
  v40 = &v19[*(int *)(v11 + 36)];
  v41 = v61[1];
  *(_OWORD *)v40 = v61[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v61[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v19, (uint64_t)v22, &qword_100060A20);
  if (v28 >= 9)
  {
    v42 = sub_1000043C0(v30 + 8 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
    v43 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(v62, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v43, v44);
    sub_1000043C0((uint64_t)v10, (uint64_t)v16, type metadata accessor for AppIcon);
    v45 = &v16[*(int *)(v11 + 36)];
    v46 = v62[1];
    *(_OWORD *)v45 = v62[0];
    *((_OWORD *)v45 + 1) = v46;
    *((_OWORD *)v45 + 2) = v62[2];
    sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
    sub_100004788((uint64_t)v16, (uint64_t)v19, &qword_100060A20);
    v47 = (uint64_t)v59;
    sub_1000047CC((uint64_t)v59, (uint64_t)v16, &qword_100060A20);
    v48 = v55;
    sub_1000047CC((uint64_t)v22, v55, &qword_100060A20);
    v49 = v56;
    sub_1000047CC((uint64_t)v19, v56, &qword_100060A20);
    v50 = v57;
    sub_1000047CC((uint64_t)v16, v57, &qword_100060A20);
    v51 = (int *)sub_100004380(&qword_1000610F8);
    v52 = v50 + v51[12];
    v53 = v58;
    *(_QWORD *)v52 = v58;
    *(_BYTE *)(v52 + 8) = 0;
    sub_1000047CC(v48, v50 + v51[16], &qword_100060A20);
    v54 = v50 + v51[20];
    *(_QWORD *)v54 = v53;
    *(_BYTE *)(v54 + 8) = 0;
    sub_1000047CC(v49, v50 + v51[24], &qword_100060A20);
    sub_100004810((uint64_t)v19, &qword_100060A20);
    sub_100004810((uint64_t)v22, &qword_100060A20);
    sub_100004810(v47, &qword_100060A20);
    sub_100004810(v49, &qword_100060A20);
    sub_100004810(v48, &qword_100060A20);
    return sub_100004810((uint64_t)v16, &qword_100060A20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10000E2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _OWORD v60[3];
  _OWORD v61[3];
  _OWORD v62[3];

  v8 = type metadata accessor for AppIcon(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004380(&qword_100060A20);
  v12 = __chkstk_darwin(v11);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v55 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v55 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v55 - v21;
  result = __chkstk_darwin(v20);
  v27 = (char *)&v55 - v26;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28 < 0xA)
  {
    __break(1u);
    goto LABEL_6;
  }
  v58 = a2;
  v55 = v25;
  v56 = v24;
  v57 = a3;
  v29 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
  v30 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v31 = *(_QWORD *)(v29 + 72);
  v32 = sub_1000043C0(v30 + 9 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v33 = static Alignment.center.getter(v32);
  _FrameLayout.init(width:height:alignment:)(v60, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v33, v34);
  v59 = v27;
  sub_1000043C0((uint64_t)v10, (uint64_t)v22, type metadata accessor for AppIcon);
  v35 = &v22[*(int *)(v11 + 36)];
  v36 = v60[1];
  *(_OWORD *)v35 = v60[0];
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v60[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v22, (uint64_t)v59, &qword_100060A20);
  if (v28 == 10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v58 + 40);
  v37 = sub_1000043C0(v30 + 10 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v61, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v38, v39);
  sub_1000043C0((uint64_t)v10, (uint64_t)v19, type metadata accessor for AppIcon);
  v40 = &v19[*(int *)(v11 + 36)];
  v41 = v61[1];
  *(_OWORD *)v40 = v61[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v61[2];
  sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
  result = sub_100004788((uint64_t)v19, (uint64_t)v22, &qword_100060A20);
  if (v28 >= 0xC)
  {
    v42 = sub_1000043C0(v30 + 11 * v31, (uint64_t)v10, type metadata accessor for AppIconConfiguration);
    v43 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(v62, *(_QWORD *)&a4, 0, *(_QWORD *)&a4, 0, v43, v44);
    sub_1000043C0((uint64_t)v10, (uint64_t)v16, type metadata accessor for AppIcon);
    v45 = &v16[*(int *)(v11 + 36)];
    v46 = v62[1];
    *(_OWORD *)v45 = v62[0];
    *((_OWORD *)v45 + 1) = v46;
    *((_OWORD *)v45 + 2) = v62[2];
    sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIcon);
    sub_100004788((uint64_t)v16, (uint64_t)v19, &qword_100060A20);
    v47 = (uint64_t)v59;
    sub_1000047CC((uint64_t)v59, (uint64_t)v16, &qword_100060A20);
    v48 = v55;
    sub_1000047CC((uint64_t)v22, v55, &qword_100060A20);
    v49 = v56;
    sub_1000047CC((uint64_t)v19, v56, &qword_100060A20);
    v50 = v57;
    sub_1000047CC((uint64_t)v16, v57, &qword_100060A20);
    v51 = (int *)sub_100004380(&qword_1000610F8);
    v52 = v50 + v51[12];
    v53 = v58;
    *(_QWORD *)v52 = v58;
    *(_BYTE *)(v52 + 8) = 0;
    sub_1000047CC(v48, v50 + v51[16], &qword_100060A20);
    v54 = v50 + v51[20];
    *(_QWORD *)v54 = v53;
    *(_BYTE *)(v54 + 8) = 0;
    sub_1000047CC(v49, v50 + v51[24], &qword_100060A20);
    sub_100004810((uint64_t)v19, &qword_100060A20);
    sub_100004810((uint64_t)v22, &qword_100060A20);
    sub_100004810(v47, &qword_100060A20);
    sub_100004810(v49, &qword_100060A20);
    sub_100004810(v48, &qword_100060A20);
    return sub_100004810((uint64_t)v16, &qword_100060A20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10000E740@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, CGFloat a11@<D6>)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  CGFloat tx;
  CGFloat ty;
  char *v52;
  __int128 v53;
  CGFloat v54;
  CGFloat v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  CGAffineTransform v75;
  _OWORD v76[3];

  v72 = a3;
  v21 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v21);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100004380(&qword_1000610C8);
  __chkstk_darwin(v24);
  v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v73 = sub_100004380(&qword_1000610B8);
  __chkstk_darwin(v73);
  v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100004380(&qword_1000610A8);
  __chkstk_darwin(v74);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100004380(&qword_100061080);
  result = __chkstk_darwin(v31);
  v34 = (char *)&v69 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *a1;
  if (v35 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if ((unint64_t)v35 >= *(_QWORD *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v71 = result;
  v36 = type metadata accessor for AppIcon(0);
  v37 = a2
      + ((*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72) * v35;
  v38 = *(double *)(v72 + 8) * a5;
  v72 = a4;
  v39 = v38;
  v40 = static Alignment.center.getter(v36);
  _FrameLayout.init(width:height:alignment:)(v76, *(_QWORD *)&v39, 0, *(_QWORD *)&v39, 0, v40, v41);
  v42 = sub_1000043C0(v37, (uint64_t)v23, type metadata accessor for AppIcon);
  v43 = &v23[*(int *)(v21 + 36)];
  v44 = v76[1];
  *(_OWORD *)v43 = v76[0];
  *((_OWORD *)v43 + 1) = v44;
  *((_OWORD *)v43 + 2) = v76[2];
  v45 = a6 * 0.0174532925;
  v46 = static UnitPoint.center.getter(v42);
  v48 = v47;
  sub_1000047CC((uint64_t)v23, (uint64_t)v26, &qword_100060A20);
  v49 = &v26[*(int *)(v24 + 36)];
  *(double *)v49 = v45;
  *((double *)v49 + 1) = v46;
  *((_QWORD *)v49 + 2) = v48;
  sub_100004810((uint64_t)v23, &qword_100060A20);
  CGAffineTransformMakeTranslation(&v75, (double)v35 * a9 + a7, (double)v35 * a10 + a8);
  v70 = *(_OWORD *)&v75.a;
  v69 = *(_OWORD *)&v75.c;
  tx = v75.tx;
  ty = v75.ty;
  sub_1000047CC((uint64_t)v26, (uint64_t)v28, &qword_1000610C8);
  v52 = &v28[*(int *)(v73 + 36)];
  v53 = v69;
  *(_OWORD *)v52 = v70;
  *((_OWORD *)v52 + 1) = v53;
  *((CGFloat *)v52 + 4) = tx;
  *((CGFloat *)v52 + 5) = ty;
  sub_100004810((uint64_t)v26, &qword_1000610C8);
  CGAffineTransformMakeTranslation(&v75, -a11, a11);
  v73 = *(_OWORD *)&v75.a;
  v70 = *(_OWORD *)&v75.c;
  v54 = v75.tx;
  v55 = v75.ty;
  sub_1000047CC((uint64_t)v28, (uint64_t)v30, &qword_1000610B8);
  v56 = &v30[*(int *)(v74 + 36)];
  v57 = v70;
  *(_OWORD *)v56 = v73;
  *((_OWORD *)v56 + 1) = v57;
  *((CGFloat *)v56 + 4) = v54;
  *((CGFloat *)v56 + 5) = v55;
  v58 = sub_100004810((uint64_t)v28, &qword_1000610B8);
  v59 = static Color.black.getter(v58);
  v60 = v59;
  v61.n128_u64[0] = 0x3FB999999999999ALL;
  if (!v35)
    v61.n128_f64[0] = 0.0;
  v62 = Color.opacity(_:)(v59, v61);
  swift_release(v60);
  sub_1000047CC((uint64_t)v30, (uint64_t)v34, &qword_1000610A8);
  v63 = &v34[*(int *)(v71 + 36)];
  *(_QWORD *)v63 = v62;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v63 + 8) = _Q0;
  *((_QWORD *)v63 + 3) = 0x3FF0000000000000;
  sub_100004810((uint64_t)v30, &qword_1000610A8);
  return sub_100004788((uint64_t)v34, v72, &qword_100061080);
}

uint64_t sub_10000EB84@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B718(a1);
}

_QWORD *sub_10000EBC4(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

_QWORD *sub_10000EBEC(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

unint64_t sub_10000EC14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060FF0;
  if (!qword_100060FF0)
  {
    v1 = sub_1000044A8(&qword_100060F68);
    sub_10000B4D0(&qword_100060FF8, &qword_100060F60, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100060FF0);
  }
  return result;
}

uint64_t sub_10000EC98()
{
  return sub_100004880(&qword_100061000, &qword_100060FD0, (void (*)(void))sub_10000ECBC, (void (*)(void))sub_10000ED58);
}

unint64_t sub_10000ECBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061008;
  if (!qword_100061008)
  {
    v1 = sub_1000044A8(&qword_100060FC8);
    sub_100008DD8(&qword_100060DA0, type metadata accessor for AppIconContentView, (uint64_t)&unk_10004E214);
    sub_10000B4D0(&qword_100061010, &qword_100060FA8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061008);
  }
  return result;
}

unint64_t sub_10000ED58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061018;
  if (!qword_100061018)
  {
    v1 = sub_1000044A8(&qword_100060F90);
    sub_10000B4D0(&qword_100060FE0, &qword_100060FA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061018);
  }
  return result;
}

unint64_t sub_10000EDD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061020;
  if (!qword_100061020)
  {
    v1 = sub_1000044A8(&qword_100060F80);
    sub_10000B4D0(&qword_100060FE0, &qword_100060FA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10000F008(&qword_100060FE8, &qword_100060F70, (void (*)(void))sub_10000EC14);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061020);
  }
  return result;
}

uint64_t sub_10000EE70()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_10000EE9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10000E740(a1, *(_QWORD *)(v2 + 16), v2 + 24, a2, *(double *)(v2 + 80), *(double *)(v2 + 88), *(double *)(v2 + 96), *(double *)(v2 + 104), *(double *)(v2 + 112), *(double *)(v2 + 120), *(CGFloat *)(v2 + 128));
}

unint64_t sub_10000EEB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061088;
  if (!qword_100061088)
  {
    v1 = sub_1000044A8(&qword_100061078);
    sub_10000EF24();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100061088);
  }
  return result;
}

unint64_t sub_10000EF24()
{
  unint64_t result;

  result = qword_100061090;
  if (!qword_100061090)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100061090);
  }
  return result;
}

unint64_t sub_10000EF68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061098;
  if (!qword_100061098)
  {
    v1 = sub_1000044A8(&qword_100061080);
    sub_10000F008(&qword_1000610A0, &qword_1000610A8, (void (*)(void))sub_10000EFEC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061098);
  }
  return result;
}

uint64_t sub_10000EFEC()
{
  return sub_10000F008(&qword_1000610B0, &qword_1000610B8, (void (*)(void))sub_10000F074);
}

uint64_t sub_10000F008(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000044A8(a2);
    a3();
    sub_1000046B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000F074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000610C0;
  if (!qword_1000610C0)
  {
    v1 = sub_1000044A8(&qword_1000610C8);
    sub_10000F0E0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000610C0);
  }
  return result;
}

unint64_t sub_10000F0E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000610D0;
  if (!qword_1000610D0)
  {
    v1 = sub_1000044A8(&qword_100060A20);
    sub_100008DD8((unint64_t *)&qword_1000609C0, type metadata accessor for AppIcon, (uint64_t)&unk_10004E1B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000610D0);
  }
  return result;
}

uint64_t sub_10000F164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppIcon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F1A8()
{
  return sub_100004880(&qword_100061100, &qword_100061108, (void (*)(void))sub_10000EC98, (void (*)(void))sub_10000EDD4);
}

uint64_t *sub_10000F1DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    v23 = *(int *)(a3 + 24);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 1);
    if (v26)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v24[16] = v25[16];
      v27 = *((_QWORD *)v25 + 3);
      *((_QWORD *)v24 + 3) = v27;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v27);
    }
    else
    {
      v28 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v28;
    }
  }
  return a1;
}

uint64_t sub_10000F370(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;

  v4 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v7 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (char *)a1 + *(int *)(a2 + 24);
  result = *((_QWORD *)v9 + 1);
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(*((_QWORD *)v9 + 3));
  }
  return result;
}

uint64_t *sub_10000F458(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *v14;
    *v13 = *v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *((_QWORD *)v23 + 1);
  if (v24)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v22[16] = v23[16];
    v25 = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 3) = v25;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
  }
  else
  {
    v26 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v26;
  }
  return a1;
}

uint64_t *sub_10000F5C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061110);
    v6 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = *(int *)(a3 + 20);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_100004810((uint64_t)a1 + v12, &qword_100061118);
    v15 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  v21 = *(int *)(a3 + 24);
  v22 = (uint64_t)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(uint64_t *)((char *)a1 + v21 + 8);
  v25 = *((_QWORD *)v23 + 1);
  if (v24)
  {
    if (v25)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v26 = *((_QWORD *)v23 + 1);
      *(_QWORD *)(v22 + 8) = v26;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRelease(v24);
      *(_BYTE *)(v22 + 16) = v23[16];
      v27 = *((_QWORD *)v23 + 3);
      v28 = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v22 + 24) = v27;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v28);
    }
    else
    {
      sub_10000F7B8(v22);
      v31 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *(_OWORD *)(v22 + 16) = v31;
    }
  }
  else if (v25)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v29 = *((_QWORD *)v23 + 1);
    *(_QWORD *)(v22 + 8) = v29;
    *(_BYTE *)(v22 + 16) = v23[16];
    v30 = *((_QWORD *)v23 + 3);
    *(_QWORD *)(v22 + 24) = v30;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
  }
  else
  {
    v32 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v32;
  }
  return a1;
}

uint64_t sub_10000F7B8(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for LocalizedStringKey - 1) + 8))();
  return a1;
}

char *sub_10000F7EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  v6 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  return a1;
}

char *sub_10000F91C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061110);
    v6 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100004810((uint64_t)&a1[v8], &qword_100061118);
    v11 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = *(int *)(a3 + 24);
  v14 = (uint64_t)&a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)&a1[v13 + 8];
  if (!v16)
    goto LABEL_12;
  v17 = *((_QWORD *)v15 + 1);
  if (!v17)
  {
    sub_10000F7B8(v14);
LABEL_12:
    v19 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v19;
    return a1;
  }
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v17;
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(v14 + 16) = v15[16];
  v18 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v14 + 24) = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t sub_10000FAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000FAC0);
}

uint64_t sub_10000FAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_100004380(&qword_100061120);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061128);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_10000FB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000FB8C);
}

uint64_t sub_10000FB8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100004380(&qword_100061120);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100004380(&qword_100061128);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for PlaceholderTodayCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100061188;
  if (!qword_100061188)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaceholderTodayCardView);
  return result;
}

void sub_10000FC78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_10000FD24(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000FD24(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = " ";
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_10000FD24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_10000FD70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050724, 1);
}

__n128 sub_10000FD80@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v30;
  double v31;
  double v32;
  uint64_t v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a17;
  v19 = a15;
  v20 = a12;
  v21 = a10;
  v22 = a2 & 1;
  v23 = a1;
  if ((_DWORD)v22)
    v23 = -INFINITY;
  v24 = a4 & 1;
  v25 = a3;
  if ((_DWORD)v24)
    v25 = v23;
  v26 = a6 & 1;
  v27 = a8 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v25;
  if (v23 > v25 || v25 > v28)
    goto LABEL_22;
  v30 = a7;
  if ((a8 & 1) != 0)
    v30 = -INFINITY;
  v31 = a10;
  if ((a11 & 1) != 0)
    v31 = v30;
  v32 = a12;
  if ((a13 & 1) != 0)
    v32 = v31;
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v41 = a1;
    v42 = a3;
    v39 = v24;
    v40 = v22;
    v34 = static os_log_type_t.fault.getter();
    v35 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v34, &_mh_execute_header, v35, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v24 = v39;
    v22 = v40;
    v19 = a15;
    v21 = a10;
    v20 = a12;
    a1 = v41;
    a3 = v42;
    a5 = v43;
    v18 = a17;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v22, *(_QWORD *)&a3, v24, *(_QWORD *)&a5, v26, *(_QWORD *)&a7, v27, *(_QWORD *)&v21, a11 & 1, *(_QWORD *)&v20, a13 & 1, a14, v19);
  *(_QWORD *)a9 = a16;
  *(_BYTE *)(a9 + 8) = v18 & 1;
  v36 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v45[6];
  v37 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v37;
  result = (__n128)v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(__n128 *)(a9 + 64) = result;
  return result;
}

double sub_10000FF28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10000FFD8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100061240, &qword_100061248).n128_u64[0];
  return result;
}

double sub_10000FF80@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10000FFD8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100061230, &qword_100061238).n128_u64[0];
  return result;
}

__n128 sub_10000FFD8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_1000047CC(v18, v19, a16);
  v41 = v19 + *(int *)(sub_100004380(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

uint64_t sub_1000101A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t *v106;
  uint64_t v107;
  _OWORD *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _OWORD *v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _QWORD v126[2];
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t *v163;
  _OWORD v164[8];

  v160 = a2;
  v145 = type metadata accessor for RedactionReasons(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v135);
  v136 = (_QWORD *)((char *)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v139 = type metadata accessor for CardDetailView(0);
  __chkstk_darwin(v139);
  v134 = (char *)v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100004380(&qword_1000611E0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100004380(&qword_1000611E8);
  v158 = *(_QWORD *)(v159 - 8);
  v7 = __chkstk_darwin(v159);
  v138 = (char *)v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v137 = (uint64_t)v126 - v9;
  v152 = type metadata accessor for ContentSizeCategory(0);
  v151 = *(_QWORD *)(v152 - 8);
  v10 = __chkstk_darwin(v152);
  v150 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v161 = (uint64_t)v126 - v12;
  v130 = type metadata accessor for WidgetFamily(0);
  v129 = *(_QWORD *)(v130 - 8);
  v13 = __chkstk_darwin(v130);
  v128 = (char *)v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v127 = (uint64_t)v126 - v15;
  v16 = type metadata accessor for PlaceholderTodayCardView(0);
  v17 = __chkstk_darwin(v16);
  v149 = (uint64_t)v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v148 = (uint64_t)v126 - v19;
  v20 = sub_100004380(&qword_1000611F0);
  v21 = __chkstk_darwin(v20);
  v157 = (uint64_t)v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v156 = (uint64_t)v126 - v23;
  v24 = sub_100004380(&qword_100061120);
  __chkstk_darwin(v24);
  v163 = (_QWORD *)((char *)v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_100004380(&qword_100061128);
  __chkstk_darwin(v26);
  v162 = (_QWORD *)((char *)v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = (int *)type metadata accessor for TitleView(0);
  __chkstk_darwin(v28);
  v30 = (char *)v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100004380(&qword_1000611F8);
  v32 = __chkstk_darwin(v31);
  v155 = (uint64_t)v126 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)v126 - v35;
  __chkstk_darwin(v34);
  v126[1] = v16;
  v37 = *(int *)(v16 + 24);
  v153 = a1;
  v38 = (uint64_t *)(a1 + v37);
  v39 = *(_QWORD *)(a1 + v37 + 8);
  v154 = (uint64_t)v126 - v40;
  if (v39)
  {
    v41 = v38[3];
    v42 = *v38;
    v43 = v38[2] & 1;
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v41);
    v44 = Text.init(_:tableName:bundle:comment:)(v42, v39, v43, v41, 0x617A696C61636F4CLL, 0xEB00000000656C62, 0, 0, 0, 256);
  }
  else
  {
    v48 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
    v44 = Text.init(_:tableName:bundle:comment:)(v48, v50, v49 & 1, v51, 0, 0, 0, 0, 0, 256);
  }
  v147 = v44;
  v146 = v45;
  v52 = v47;
  v53 = v46 & 1;
  KeyPath = swift_getKeyPath(&unk_10004E458);
  v55 = (uint64_t)v162;
  *v162 = KeyPath;
  v133 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v55, v133, 0);
  v56 = swift_getKeyPath(&unk_10004E488);
  v57 = (uint64_t)v163;
  *v163 = v56;
  v132 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v57, v132, 0);
  v58 = swift_getKeyPath(&unk_10004E4B8);
  v59 = (uint64_t *)&v30[v28[6]];
  *v59 = v58;
  v131 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v59, v131, 0);
  sub_100004788(v55, (uint64_t)v30, &qword_100061128);
  sub_100004788(v57, (uint64_t)&v30[v28[5]], &qword_100061120);
  v60 = &v30[v28[7]];
  v61 = v146;
  *(_QWORD *)v60 = v147;
  *((_QWORD *)v60 + 1) = v61;
  *((_QWORD *)v60 + 2) = v53;
  *((_QWORD *)v60 + 3) = v52;
  v30[v28[8]] = 1;
  sub_1000043C0((uint64_t)v30, (uint64_t)v36, type metadata accessor for TitleView);
  *(_QWORD *)&v36[*(int *)(v31 + 36)] = 0x3FF0000000000000;
  sub_10000A7A8((uint64_t)v30, type metadata accessor for TitleView);
  v62 = v154;
  v63 = sub_100004788((uint64_t)v36, v154, &qword_1000611F8);
  v64 = static Alignment.center.getter(v63);
  sub_10000FD80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v164, 0.0, 1, INFINITY, 0, v64, v65, 0, 1);
  v66 = v38[1];
  v67 = v153;
  v68 = v148;
  sub_1000043C0(v153, v148, type metadata accessor for PlaceholderTodayCardView);
  if (!v66)
  {
    sub_10000A7A8(v68, type metadata accessor for PlaceholderTodayCardView);
    v76 = v149;
    sub_1000043C0(v67, v149, type metadata accessor for PlaceholderTodayCardView);
    v77 = v152;
    v78 = v151;
    v79 = (uint64_t)v150;
    goto LABEL_9;
  }
  v69 = v127;
  sub_1000466B0(v127);
  v70 = v129;
  v71 = v128;
  v72 = v130;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v128, enum case for WidgetFamily.systemSmall(_:), v130);
  v73 = sub_100008DD8(&qword_100061200, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  v74 = dispatch thunk of static Equatable.== infix(_:_:)(v69, v71, v72, v73);
  v75 = *(void (**)(char *, uint64_t))(v70 + 8);
  v75(v71, v72);
  v75((char *)v69, v72);
  sub_10000A7A8(v68, type metadata accessor for PlaceholderTodayCardView);
  v76 = v149;
  sub_1000043C0(v67, v149, type metadata accessor for PlaceholderTodayCardView);
  v77 = v152;
  v78 = v151;
  v79 = (uint64_t)v150;
  if ((v74 & 1) == 0)
  {
LABEL_9:
    sub_10000A7A8(v76, type metadata accessor for PlaceholderTodayCardView);
    goto LABEL_10;
  }
  v80 = v161;
  sub_10004647C(v161);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v78 + 104))(v79, enum case for ContentSizeCategory.large(_:), v77);
  v81 = sub_100010F58(v80, v79);
  v82 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  v82(v79, v77);
  v82(v80, v77);
  sub_10000A7A8(v76, type metadata accessor for PlaceholderTodayCardView);
  if (!v81)
  {
    v83 = 1;
    v84 = v159;
    v85 = v156;
    goto LABEL_17;
  }
LABEL_10:
  v86 = (uint64_t)v136;
  *v136 = 0xD000000000000011;
  *(_QWORD *)(v86 + 8) = 0x80000001000596A0;
  swift_storeEnumTagMultiPayload(v86, v135, 0);
  v87 = (uint64_t)v134;
  v88 = v62;
  v89 = v161;
  sub_10004647C(v161);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v78 + 104))(v79, enum case for ContentSizeCategory.extraExtraExtraLarge(_:), v77);
  v90 = sub_1000112E0(v89, v79);
  v91 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  v91(v79, v77);
  v92 = v89;
  v62 = v88;
  v91(v92, v77);
  if (v90)
    v93 = 0x656E696C20656E4FLL;
  else
    v93 = 0xD000000000000024;
  if (v90)
    v94 = 0xEE00656C74697420;
  else
    v94 = 0x80000001000596C0;
  v95 = swift_getKeyPath(&unk_10004E458);
  v96 = (uint64_t)v162;
  *v162 = v95;
  swift_storeEnumTagMultiPayload(v96, v133, 0);
  v97 = swift_getKeyPath(&unk_10004E488);
  v98 = (uint64_t)v163;
  *v163 = v97;
  swift_storeEnumTagMultiPayload(v98, v132, 0);
  v99 = swift_getKeyPath(&unk_10004E4B8);
  v100 = (int *)v139;
  v101 = (uint64_t *)(v87 + *(int *)(v139 + 24));
  *v101 = v99;
  swift_storeEnumTagMultiPayload(v101, v131, 0);
  sub_100004788(v96, v87, &qword_100061128);
  sub_100004788(v98, v87 + v100[5], &qword_100061120);
  v102 = (_QWORD *)(v87 + v100[7]);
  *v102 = swift_getKeyPath(&unk_10004E4E8);
  v103 = sub_100004380(&qword_100061210);
  swift_storeEnumTagMultiPayload(v102, v103, 0);
  v104 = sub_100011670(v86, v87 + v100[8]);
  v105 = v87 + v100[9];
  *(_QWORD *)v105 = sub_10001E180;
  *(_QWORD *)(v105 + 8) = 0;
  *(_BYTE *)(v105 + 16) = 0;
  v106 = (unint64_t *)(v87 + v100[10]);
  *v106 = v93;
  v106[1] = v94;
  v107 = v87 + v100[11];
  *(_QWORD *)v107 = sub_10001E180;
  *(_QWORD *)(v107 + 8) = 0;
  *(_BYTE *)(v107 + 16) = 0;
  *(_QWORD *)(v87 + v100[12]) = 0x8000000000000000;
  *(_QWORD *)(v87 + v100[13]) = 0x7FF0000000000000;
  v108 = (_OWORD *)(v87 + v100[14]);
  *v108 = xmmword_10004E390;
  v108[1] = xmmword_10004E3A0;
  v109 = v143;
  static RedactionReasons.placeholder.getter(v104);
  v110 = sub_100008DD8(&qword_100061218, type metadata accessor for CardDetailView, (uint64_t)&unk_10004FCC8);
  v111 = v140;
  View.redacted(reason:)(v109, v100, v110);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v109, v145);
  sub_10000A7A8(v87, type metadata accessor for CardDetailView);
  v112 = v141;
  v113 = (uint64_t)v138;
  v114 = v142;
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v111, v142);
  v84 = v159;
  *(_QWORD *)(v113 + *(int *)(v159 + 36)) = 0x4000000000000000;
  (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v114);
  v115 = v137;
  sub_100004788(v113, v137, &qword_1000611E8);
  v85 = v156;
  sub_100004788(v115, v156, &qword_1000611E8);
  v83 = 0;
LABEL_17:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v85, v83, 1, v84);
  v116 = v155;
  sub_1000047CC(v62, v155, &qword_1000611F8);
  v117 = v157;
  sub_1000047CC(v85, v157, &qword_1000611F0);
  v118 = v160;
  sub_1000047CC(v116, v160, &qword_1000611F8);
  v119 = sub_100004380(&qword_100061208);
  v120 = (_OWORD *)(v118 + *(int *)(v119 + 48));
  v121 = v164[5];
  v120[4] = v164[4];
  v120[5] = v121;
  v122 = v164[7];
  v120[6] = v164[6];
  v120[7] = v122;
  v123 = v164[1];
  *v120 = v164[0];
  v120[1] = v123;
  v124 = v164[3];
  v120[2] = v164[2];
  v120[3] = v124;
  sub_1000047CC(v117, v118 + *(int *)(v119 + 64), &qword_1000611F0);
  sub_100004810(v85, &qword_1000611F0);
  sub_100004810(v62, &qword_1000611F8);
  sub_100004810(v117, &qword_1000611F0);
  return sub_100004810(v116, &qword_1000611F8);
}

uint64_t sub_100010EFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = static HorizontalAlignment.leading.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v3 = sub_100004380(&qword_1000611D8);
  return sub_1000101A4(v1, a1 + *(int *)(v3 + 44));
}

BOOL sub_100010F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v19 - v9, a2, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:))
      goto LABEL_7;
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a1, v4);
  v16 = v12(v8, v4);
  if (v16 == v15)
  {
    v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        v17 = 4;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        v17 = 5;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        v17 = 6;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        v17 = 7;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        v17 = 8;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        v17 = 9;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        v17 = 10;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v17 = 11;
        return v14 >= v17;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v17 = 3;
  }
  return v14 >= v17;
}

BOOL sub_1000112E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v19 - v9, a1, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:))
      goto LABEL_7;
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a2, v4);
  v16 = v12(v8, v4);
  if (v16 == v15)
  {
    v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        v17 = 4;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        v17 = 5;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        v17 = 6;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        v17 = 7;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        v17 = 8;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        v17 = 9;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        v17 = 10;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v17 = 11;
        return v14 >= v17;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v17 = 3;
  }
  return v14 >= v17;
}

uint64_t sub_100011670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CardDetailView.Heading(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000116B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061220;
  if (!qword_100061220)
  {
    v1 = sub_1000044A8(&qword_100061228);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100061220);
  }
  return result;
}

uint64_t sub_100011704(uint64_t a1, char a2)
{
  _QWORD *v2;
  CFIndex AppIntegerValue;
  char *v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  NSString v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  ValueMetadata *v25;
  _UNKNOWN **v26;
  Boolean keyExistsAndHasValidFormat[24];
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  _QWORD v32[5];

  if (a2)
  {
    v31 = xmmword_10004DFA0;
    v32[3] = &type metadata for WelcomeOnboardingStep;
    v32[4] = &off_10005E660;
    v32[0] = a1;
    swift_retain(a1);
    sub_100011C74((uint64_t)v32, (uint64_t)&v29);
    v2 = sub_100011CB8(&v29, v30);
    if ((static ResilientDeepLinkController.hasResilientDeepLinks(bag:)(*v2) & 1) != 0)
      goto LABEL_13;
    keyExistsAndHasValidFormat[0] = 0;
    if (qword_1000608C0 != -1)
      swift_once(&qword_1000608C0, sub_10001DF94);
    if (kSSUserDefaultsIdentifier)
    {
      AppIntegerValue = CFPreferencesGetAppIntegerValue((CFStringRef)qword_100061AA0, kSSUserDefaultsIdentifier, keyExistsAndHasValidFormat);
      if (!keyExistsAndHasValidFormat[0] || AppIntegerValue < 6)
      {
LABEL_15:
        sub_100011CDC(&v29, (uint64_t)keyExistsAndHasValidFormat);
        v11 = _swiftEmptyArrayStorage;
        v23 = _swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        {
          sub_10002D9EC(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v11 = v23;
        }
        v13 = v11[2];
        v12 = v11[3];
        if (v13 >= v12 >> 1)
        {
          sub_10002D9EC((_QWORD *)(v12 > 1), v13 + 1, 1);
          v11 = v23;
        }
        v14 = sub_100011CF4((uint64_t)keyExistsAndHasValidFormat, v28);
        __chkstk_darwin(v14);
        v16 = (uint64_t *)((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *))(v17 + 16))(v16);
        v18 = *v16;
        v26 = &off_10005E660;
        v25 = &type metadata for WelcomeOnboardingStep;
        *(_QWORD *)&v24 = v18;
        v11[2] = v13 + 1;
        sub_100011CDC(&v24, (uint64_t)&v11[5 * v13 + 4]);
        sub_100008444(keyExistsAndHasValidFormat);
        v10 = v23;
        goto LABEL_20;
      }
      v4 = sub_10001DFC8();
      v5 = *((_QWORD *)v4 + 2);
      if (v5)
      {
        v6 = (void *)objc_opt_self(AMSAcknowledgePrivacyTask);
        v7 = v4 + 40;
        while (1)
        {
          v8 = *v7;
          swift_bridgeObjectRetain(*v7);
          v9 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v8);
          LODWORD(v8) = objc_msgSend(v6, "acknowledgementNeededForPrivacyIdentifier:", v9);

          if ((_DWORD)v8)
            break;
          v7 += 2;
          if (!--v5)
            goto LABEL_12;
        }
        swift_bridgeObjectRelease(v4);
        goto LABEL_15;
      }
LABEL_12:
      swift_bridgeObjectRelease(v4);
LABEL_13:
      sub_100008444(&v29);
      v10 = _swiftEmptyArrayStorage;
LABEL_20:
      v19 = v31;
      v20 = sub_100004380(&qword_100061258);
      swift_arrayDestroy(v32, v19, v20);
      return (uint64_t)v10;
    }
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005ELL, 0x8000000100059770, "AppStoreWidgetsExtension/OnboardingConfiguration+Extensions.swift", 65, 2, 22, 0);
  __break(1u);
  return result;
}

BOOL static OnboardingConfiguration.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void OnboardingConfiguration.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int OnboardingConfiguration.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

unint64_t sub_100011AD4()
{
  unint64_t result;

  result = qword_100061250;
  if (!qword_100061250)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OnboardingConfiguration, &type metadata for OnboardingConfiguration);
    atomic_store(result, (unint64_t *)&qword_100061250);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OnboardingConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100011BF4 + 4 * byte_10004E525[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100011C28 + 4 * byte_10004E520[v4]))();
}

uint64_t sub_100011C28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100011C30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100011C38);
  return result;
}

uint64_t sub_100011C44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100011C4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100011C50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100011C58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingConfiguration()
{
  return &type metadata for OnboardingConfiguration;
}

uint64_t sub_100011C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_100011CB8(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100011CDC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100011CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_100011D1C()
{
  uint64_t v0;
  uint64_t v1;
  UIColor v2;
  UIColor v3;
  uint64_t result;

  v0 = sub_100004380(&qword_100061260);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10004E5E0;
  sub_1000123E4();
  v2.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.10773, 0.78429, 0.98851, 1.0).super.isa;
  *(_QWORD *)(v1 + 32) = Color.init(uiColor:)(v2.super.isa);
  v3.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.11167, 0.44028, 0.94921, 1.0).super.isa;
  *(_QWORD *)(v1 + 40) = Color.init(uiColor:)(v3.super.isa);
  specialized Array._endMutation()();
  result = Gradient.init(colors:)(v1);
  qword_100063250 = result;
  return result;
}

uint64_t sub_100011DF4(uint64_t a1)
{
  return sub_100011EE4(a1, &qword_100063258);
}

uint64_t sub_100011E00()
{
  uint64_t v0;
  uint64_t v1;
  UIColor v2;
  UIColor v3;
  uint64_t result;

  v0 = sub_100004380(&qword_100061260);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10004E5E0;
  sub_1000123E4();
  v2.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.10196, 0.76078, 0.96078, 1.0).super.isa;
  *(_QWORD *)(v1 + 32) = Color.init(uiColor:)(v2.super.isa);
  v3.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.1098, 0.40784, 0.88627, 1.0).super.isa;
  *(_QWORD *)(v1 + 40) = Color.init(uiColor:)(v3.super.isa);
  specialized Array._endMutation()();
  result = Gradient.init(colors:)(v1);
  qword_100063260 = result;
  return result;
}

uint64_t sub_100011ED8(uint64_t a1)
{
  return sub_100011EE4(a1, &qword_100063268);
}

uint64_t sub_100011EE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  Class isa;
  id v6;
  Class v7;
  id v8;
  uint64_t result;

  v3 = sub_100004380(&qword_100061260);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10004E5E0;
  sub_1000123E4();
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  v6 = -[objc_class colorWithAlphaComponent:](isa, "colorWithAlphaComponent:", 0.2);

  *(_QWORD *)(v4 + 32) = Color.init(uiColor:)(v6);
  v7 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  v8 = -[objc_class colorWithAlphaComponent:](v7, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v4 + 40) = Color.init(uiColor:)(v8);
  specialized Array._endMutation()();
  result = Gradient.init(colors:)(v4);
  *a2 = result;
  return result;
}

uint64_t sub_100011FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t result;

  v0 = sub_100004380(&qword_100061260);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10004E5E0;
  v2 = static Color.black.getter(v1);
  v3.n128_u64[0] = 0x3FB999999999999ALL;
  v4 = Color.opacity(_:)(v2, v3);
  swift_release(v2);
  *(_QWORD *)(v1 + 32) = v4;
  v6 = static Color.black.getter(v5);
  v7.n128_u64[0] = 0.25;
  v8 = Color.opacity(_:)(v6, v7);
  v9 = swift_release(v6);
  *(_QWORD *)(v1 + 40) = v8;
  specialized Array._endMutation()(v9);
  result = Gradient.init(colors:)(v1);
  qword_100063270 = result;
  return result;
}

double sub_10001209C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  if (qword_100060858 != -1)
    swift_once(&qword_100060858, sub_100011D1C);
  v0 = qword_100063250;
  v1 = swift_bridgeObjectRetain(qword_100063250);
  v2 = static UnitPoint.top.getter(v1);
  v4 = v3;
  v5 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v8, v0, v2, v4, v5, v6);
  result = *(double *)v8;
  xmmword_100063278 = v8[0];
  *(_OWORD *)algn_100063288 = v8[1];
  qword_100063298 = v9;
  return result;
}

double sub_100012144()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  if (qword_100060860 != -1)
    swift_once(&qword_100060860, sub_100011DF4);
  v0 = qword_100063258;
  v1 = swift_bridgeObjectRetain(qword_100063258);
  v2 = static UnitPoint.top.getter(v1);
  v4 = v3;
  v5 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v8, v0, v2, v4, v5, v6);
  result = *(double *)v8;
  xmmword_1000632A0 = v8[0];
  unk_1000632B0 = v8[1];
  qword_1000632C0 = v9;
  return result;
}

double sub_1000121EC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  if (qword_100060868 != -1)
    swift_once(&qword_100060868, sub_100011E00);
  v0 = qword_100063260;
  v1 = swift_bridgeObjectRetain(qword_100063260);
  v2 = static UnitPoint.top.getter(v1);
  v4 = v3;
  v5 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v8, v0, v2, v4, v5, v6);
  result = *(double *)v8;
  xmmword_1000632C8 = v8[0];
  *(_OWORD *)algn_1000632D8 = v8[1];
  qword_1000632E8 = v9;
  return result;
}

double sub_100012294()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  if (qword_100060870 != -1)
    swift_once(&qword_100060870, sub_100011ED8);
  v0 = qword_100063268;
  v1 = swift_bridgeObjectRetain(qword_100063268);
  v2 = static UnitPoint.top.getter(v1);
  v4 = v3;
  v5 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v8, v0, v2, v4, v5, v6);
  result = *(double *)v8;
  xmmword_1000632F0 = v8[0];
  unk_100063300 = v8[1];
  qword_100063310 = v9;
  return result;
}

double sub_10001233C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;

  if (qword_100060878 != -1)
    swift_once(&qword_100060878, sub_100011FEC);
  v0 = qword_100063270;
  v1 = swift_bridgeObjectRetain(qword_100063270);
  v2 = static UnitPoint.top.getter(v1);
  v4 = v3;
  v5 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v8, v0, v2, v4, v5, v6);
  result = *(double *)v8;
  xmmword_100063318 = v8[0];
  *(_OWORD *)algn_100063328 = v8[1];
  qword_100063338 = v9;
  return result;
}

unint64_t sub_1000123E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100060F40;
  if (!qword_100060F40)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100060F40);
  }
  return result;
}

void sub_100012420()
{
  qword_100063340 = 0x4030000000000000;
}

_QWORD *sub_100012430(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __int128 v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    v23 = a3[6];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = v24;
      v29 = v26;
      v30 = 1;
    }
    else
    {
      v31 = *v25;
      *v24 = *v25;
      swift_retain(v31);
      v28 = v24;
      v29 = v26;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    v32 = a3[7];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    if (*(_QWORD *)((char *)a2 + v32 + 24))
    {
      v35 = *(_QWORD *)v34;
      v36 = *((_QWORD *)v34 + 1);
      v37 = v34[16];
      sub_10001265C(*(_QWORD *)v34, v36, v37);
      *(_QWORD *)v33 = v35;
      *((_QWORD *)v33 + 1) = v36;
      v33[16] = v37;
      v38 = *((_QWORD *)v34 + 3);
      *((_QWORD *)v33 + 3) = v38;
      swift_bridgeObjectRetain(v38);
    }
    else
    {
      v39 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v39;
    }
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_10001265C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

void sub_10001266C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + a2[5]);
  v7 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)((char *)a1 + a2[6]);
  v10 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (char *)a1 + a2[7];
  if (*((_QWORD *)v12 + 3))
  {
    sub_1000127AC(*(_QWORD *)v12, *((_QWORD *)v12 + 1), v12[16]);
    swift_bridgeObjectRelease(*((_QWORD *)v12 + 3));
  }
}

uint64_t sub_1000127AC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

_QWORD *sub_1000127BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  __int128 v37;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *v14;
    *v13 = *v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  v21 = a3[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = v22;
    v27 = v24;
    v28 = 1;
  }
  else
  {
    v29 = *v23;
    *v22 = *v23;
    swift_retain(v29);
    v26 = v22;
    v27 = v24;
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v27, v28);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  if (*(_QWORD *)((char *)a2 + v30 + 24))
  {
    v33 = *(_QWORD *)v32;
    v34 = *((_QWORD *)v32 + 1);
    v35 = v32[16];
    sub_10001265C(*(_QWORD *)v32, v34, v35);
    *(_QWORD *)v31 = v33;
    *((_QWORD *)v31 + 1) = v34;
    v31[16] = v35;
    v36 = *((_QWORD *)v32 + 3);
    *((_QWORD *)v31 + 3) = v36;
    swift_bridgeObjectRetain(v36);
  }
  else
  {
    v37 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v37;
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1000129BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = a3[5];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_100004810((uint64_t)a1 + v12, &qword_100061110);
    v15 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
    v21 = a3[6];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    sub_100004810((uint64_t)a1 + v21, &qword_100060A48);
    v24 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = v22;
      v27 = v24;
      v28 = 1;
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v26 = v22;
      v27 = v24;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  v30 = a3[7];
  v31 = (uint64_t)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(_QWORD *)((char *)a1 + v30 + 24);
  v34 = *(_QWORD *)((char *)a2 + v30 + 24);
  if (v33)
  {
    if (v34)
    {
      v35 = *(_QWORD *)v32;
      v36 = *((_QWORD *)v32 + 1);
      v37 = v32[16];
      sub_10001265C(*(_QWORD *)v32, v36, v37);
      v38 = *(_QWORD *)v31;
      v39 = *(_QWORD *)(v31 + 8);
      v40 = *(_BYTE *)(v31 + 16);
      *(_QWORD *)v31 = v35;
      *(_QWORD *)(v31 + 8) = v36;
      *(_BYTE *)(v31 + 16) = v37;
      sub_1000127AC(v38, v39, v40);
      v41 = *((_QWORD *)v32 + 3);
      v42 = *(_QWORD *)(v31 + 24);
      *(_QWORD *)(v31 + 24) = v41;
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRelease(v42);
    }
    else
    {
      sub_100012C5C(v31);
      v47 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *(_OWORD *)(v31 + 16) = v47;
    }
  }
  else if (v34)
  {
    v43 = *(_QWORD *)v32;
    v44 = *((_QWORD *)v32 + 1);
    v45 = v32[16];
    sub_10001265C(*(_QWORD *)v32, v44, v45);
    *(_QWORD *)v31 = v43;
    *(_QWORD *)(v31 + 8) = v44;
    *(_BYTE *)(v31 + 16) = v45;
    v46 = *((_QWORD *)v32 + 3);
    *(_QWORD *)(v31 + 24) = v46;
    swift_bridgeObjectRetain(v46);
  }
  else
  {
    v48 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v48;
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100012C5C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Text - 1) + 8))();
  return a1;
}

char *sub_100012C90(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  a1[v19] = a2[v19];
  return a1;
}

char *sub_100012E40(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100004810((uint64_t)&a1[v8], &qword_100061110);
    v11 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    sub_100004810((uint64_t)&a1[v13], &qword_100060A48);
    v16 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v18 = a3[7];
  v19 = (uint64_t)&a1[v18];
  v20 = &a2[v18];
  if (!*(_QWORD *)&a1[v18 + 24])
    goto LABEL_15;
  if (!*((_QWORD *)v20 + 3))
  {
    sub_100012C5C(v19);
LABEL_15:
    v26 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v26;
    goto LABEL_16;
  }
  v21 = v20[16];
  v22 = *(_QWORD *)v19;
  v23 = *(_QWORD *)(v19 + 8);
  v24 = *(_BYTE *)(v19 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = v21;
  sub_1000127AC(v22, v23, v24);
  v25 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v19 + 24) = *((_QWORD *)v20 + 3);
  swift_bridgeObjectRelease(v25);
LABEL_16:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_100013074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013080);
}

uint64_t sub_100013080(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  int v17;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061120);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_100004380(&qword_100060A50);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  v17 = v16 - 1;
  if (v17 < 0)
    v17 = -1;
  return (v17 + 1);
}

uint64_t sub_100013168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013174);
}

uint64_t sub_100013174(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_100004380(&qword_100061120);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_100004380(&qword_100060A50);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7] + 24) = a2;
  return result;
}

uint64_t type metadata accessor for TitleView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000612D0;
  if (!qword_1000612D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TitleView);
  return result;
}

void sub_100013288(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_10000FD24(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000FD24(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10000FD24(319, (unint64_t *)&qword_100060AC0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = " ";
        v8[4] = &unk_10004E660;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10001336C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000507AC, 1);
}

void sub_10001337C()
{
  qword_100061268 = 0x403E000000000000;
}

void sub_10001338C()
{
  qword_100061270 = 0x403A000000000000;
}

uint64_t sub_10001339C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t);
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t KeyPath;
  uint64_t *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;

  LODWORD(v177) = a7;
  v153 = a6;
  v164 = a5;
  v165 = a3;
  v178 = a4;
  v170 = a1;
  v171 = a2;
  v176 = a8;
  v159 = type metadata accessor for BlendMode(0);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WidgetFamily(0);
  v10 = *(_QWORD *)(v9 - 8);
  v160 = v9;
  KeyPath = v10;
  __chkstk_darwin(v9);
  v163 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100004380(&qword_1000613C8);
  __chkstk_darwin(v154);
  v156 = (char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100004380(&qword_1000613D0);
  __chkstk_darwin(v155);
  v14 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100004380(&qword_1000613D8);
  __chkstk_darwin(v15);
  v17 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100004380(&qword_1000613E0);
  __chkstk_darwin(v18);
  v20 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100004380(&qword_1000613E8);
  v21 = __chkstk_darwin(v175);
  v23 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v146 - v24;
  v173 = sub_100004380(&qword_1000613F0);
  __chkstk_darwin(v173);
  v174 = (uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for DynamicTypeFont(0);
  v27 = __chkstk_darwin(v167);
  v162 = (uint64_t *)((char *)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  v168 = (uint64_t)&v146 - v29;
  v30 = sub_100004380(&qword_1000613F8);
  v31 = __chkstk_darwin(v30);
  v166 = (uint64_t)&v146 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v169 = (uint64_t)&v146 - v33;
  v34 = sub_100004380(&qword_100061230);
  __chkstk_darwin(v34);
  v36 = (char *)&v146 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100004380(&qword_100061400);
  __chkstk_darwin(v37);
  v39 = (char *)&v146 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100004380(&qword_100061408);
  v41 = __chkstk_darwin(v40);
  v172 = __chkstk_darwin(v41);
  if ((v177 & 1) != 0)
  {
    v77 = v160;
    v148 = v15;
    v149 = v17;
    v150 = v14;
    v151 = v20;
    v152 = v23;
    v177 = (uint64_t)v25;
    v78 = v178;
    if (v178)
    {
      v79 = v165;
      v80 = v165 & 1;
      v81 = enum case for WidgetFamily.systemSmall(_:);
      v82 = KeyPath;
      v83 = *(void (**)(char *, uint64_t, uint64_t))(KeyPath + 104);
      v84 = v163;
      v83(v163, enum case for WidgetFamily.systemSmall(_:), v160);
      sub_10001265C(v170, v171, v80);
      v85 = sub_100008DD8((unint64_t *)&qword_1000614C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
      swift_bridgeObjectRetain(v78);
      dispatch thunk of RawRepresentable.rawValue.getter(&v180, v77, v85);
      dispatch thunk of RawRepresentable.rawValue.getter(&v179, v77, v85);
      v87 = v179;
      v86 = v180;
      v88 = *(uint64_t (**)(char *, uint64_t))(v82 + 8);
      v89 = v88(v84, v77);
      if (v86 == v87)
      {
        v90 = ContentSizeCategory.isAccessibilityCategory.getter(v89);
        v91 = 4;
        if ((v90 & 1) != 0)
          v91 = 5;
      }
      else
      {
        v91 = 3;
      }
      v147 = v91;
      v102 = (uint64_t)v156;
      KeyPath = swift_getKeyPath(&unk_10004E728);
      v156 = (char *)swift_getKeyPath(&unk_10004E758);
      v153 = swift_getKeyPath(&unk_10004E788);
      v103 = v163;
      v83(v163, v81, v77);
      dispatch thunk of RawRepresentable.rawValue.getter(&v180, v77, v85);
      dispatch thunk of RawRepresentable.rawValue.getter(&v179, v77, v85);
      v105 = v179;
      v104 = v180;
      v106 = v88(v103, v77);
      if (v104 == v105)
        v107 = static Font.footnote.getter(v106);
      else
        v107 = static Font.subheadline.getter(v106);
      v108 = v107;
      v109 = v79 & 1;
      v110 = enum case for ContentSizeCategory.accessibilityMedium(_:);
      v111 = type metadata accessor for ContentSizeCategory(0);
      v112 = *(_QWORD *)(v111 - 8);
      v113 = v169;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 104))(v169, v110, v111);
      v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
      v114(v113, 0, 1, v111);
      v115 = v166;
      sub_1000047CC(v113, v166, &qword_1000613F8);
      v116 = swift_getKeyPath(&unk_10004E7B8);
      v117 = (uint64_t)v162;
      *v162 = v116;
      v118 = sub_100004380(&qword_100061118);
      swift_storeEnumTagMultiPayload(v117, v118, 0);
      v119 = v167;
      v120 = (_QWORD *)(v117 + *(int *)(v167 + 20));
      *v120 = swift_getKeyPath(&unk_10004E7E8);
      v121 = sub_100004380(&qword_100061110);
      swift_storeEnumTagMultiPayload(v120, v121, 0);
      v122 = v117 + *(int *)(v119 + 28);
      v114(v122, 1, 1, v111);
      *(_QWORD *)(v117 + *(int *)(v119 + 24)) = v108;
      swift_retain(v108);
      sub_1000152E0(v115, v122);
      v123 = v168;
      sub_100015328(v117, v168);
      sub_10001536C(v123, v102 + *(int *)(v154 + 36));
      v125 = v170;
      v124 = v171;
      *(_QWORD *)v102 = v170;
      *(_QWORD *)(v102 + 8) = v124;
      LOBYTE(v113) = v109;
      *(_BYTE *)(v102 + 16) = v109;
      v126 = v178;
      v127 = KeyPath;
      *(_QWORD *)(v102 + 24) = v178;
      *(_QWORD *)(v102 + 32) = v127;
      *(_QWORD *)(v102 + 40) = v147;
      *(_BYTE *)(v102 + 48) = 0;
      v128 = v156;
      *(_QWORD *)(v102 + 56) = v156;
      *(_BYTE *)(v102 + 64) = 0;
      v129 = v153;
      *(_QWORD *)(v102 + 72) = v153;
      *(_QWORD *)(v102 + 80) = 0x3FECCCCCCCCCCCCDLL;
      sub_10001265C(v125, v124, v113);
      swift_bridgeObjectRetain(v126);
      swift_retain(v127);
      swift_retain(v128);
      swift_retain(v129);
      sub_1000153B0(v123);
      swift_release(v108);
      sub_100004810(v169, &qword_1000613F8);
      sub_1000127AC(v125, v124, v113);
      swift_release(v129);
      swift_release(v128);
      swift_release(v127);
      swift_bridgeObjectRelease(v126);
      v130 = (uint64_t)v150;
      sub_1000047CC(v102, (uint64_t)v150, &qword_1000613C8);
      *(_WORD *)(v130 + *(int *)(v155 + 36)) = 256;
      v131 = sub_100004810(v102, &qword_1000613C8);
      v132 = static Color.secondary.getter(v131);
      v133 = swift_getKeyPath(&unk_10004E6F8);
      v134 = (uint64_t)v149;
      sub_1000047CC(v130, (uint64_t)v149, &qword_1000613D0);
      v135 = (uint64_t *)(v134 + *(int *)(v148 + 36));
      *v135 = v133;
      v135[1] = v132;
      sub_100004810(v130, &qword_1000613D0);
      v136 = (uint64_t)v151;
      sub_1000047CC(v134, (uint64_t)v151, &qword_1000613D8);
      sub_100004810(v134, &qword_1000613D8);
      v137 = v158;
      v138 = v157;
      v139 = v159;
      (*(void (**)(char *, _QWORD, uint64_t))(v158 + 104))(v157, enum case for BlendMode.plusLighter(_:), v159);
      v140 = sub_100004380(&qword_100061410);
      v101 = (uint64_t)v152;
      (*(void (**)(char *, char *, uint64_t))(v137 + 16))(&v152[*(int *)(v140 + 36)], v138, v139);
      sub_1000047CC(v136, v101, &qword_1000613E0);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v139);
      sub_100004810(v136, &qword_1000613E0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 56))(v101, 0, 1, v140);
    }
    else
    {
      v100 = sub_100004380(&qword_100061410);
      v101 = (uint64_t)v152;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v152, 1, 1, v100);
    }
    v93 = &qword_1000613E8;
    v141 = v177;
    sub_100004788(v101, v177, &qword_1000613E8);
    v142 = v174;
    sub_1000047CC(v141, v174, &qword_1000613E8);
    swift_storeEnumTagMultiPayload(v142, v173, 1);
    v143 = sub_100014D88();
    v144 = sub_100014EB8();
    _ConditionalContent<>.init(storage:)(v142, v172, v175, v143, v144);
    v99 = v141;
  }
  else
  {
    KeyPath = v34;
    v163 = (char *)v37;
    v164 = v43;
    v177 = (uint64_t)&v146 - v42;
    v44 = v178;
    if (v178)
    {
      v45 = static Font.Weight.semibold.getter();
      LOBYTE(v180) = v165 & 1;
      v46 = Text.fontWeight(_:)(*(_QWORD *)&v45, 0, v170, v171, v165 & 1, v44);
      v170 = v47;
      v171 = v46;
      v178 = v48;
      LODWORD(v165) = v49 & 1;
      v50 = static Font.title3.getter();
      v51 = enum case for ContentSizeCategory.accessibilityMedium(_:);
      v52 = type metadata accessor for ContentSizeCategory(0);
      v53 = *(_QWORD *)(v52 - 8);
      v54 = v169;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 104))(v169, v51, v52);
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
      v55(v54, 0, 1, v52);
      v56 = v166;
      sub_1000047CC(v54, v166, &qword_1000613F8);
      v57 = swift_getKeyPath(&unk_10004E7B8);
      v58 = (uint64_t)v162;
      *v162 = v57;
      v59 = sub_100004380(&qword_100061118);
      swift_storeEnumTagMultiPayload(v58, v59, 0);
      v60 = v167;
      v61 = (_QWORD *)(v58 + *(int *)(v167 + 20));
      *v61 = swift_getKeyPath(&unk_10004E7E8);
      v62 = sub_100004380(&qword_100061110);
      swift_storeEnumTagMultiPayload(v61, v62, 0);
      v63 = v58 + *(int *)(v60 + 28);
      v55(v63, 1, 1, v52);
      v64 = *(int *)(v60 + 24);
      v160 = v50;
      *(_QWORD *)(v58 + v64) = v50;
      swift_retain(v50);
      sub_1000152E0(v56, v63);
      v65 = v168;
      sub_100015328(v58, v168);
      sub_10001536C(v65, (uint64_t)&v36[*(int *)(KeyPath + 36)]);
      v67 = v170;
      v66 = v171;
      *(_QWORD *)v36 = v171;
      *((_QWORD *)v36 + 1) = v67;
      LOBYTE(v52) = v165;
      v36[16] = v165;
      v68 = v178;
      *((_QWORD *)v36 + 3) = v178;
      sub_10001265C(v66, v67, v52);
      swift_bridgeObjectRetain(v68);
      sub_1000153B0(v65);
      swift_release(v160);
      sub_100004810(v54, &qword_1000613F8);
      sub_1000127AC(v66, v67, v52);
      v69 = swift_bridgeObjectRelease(v68);
      v70 = static Color.primary.getter(v69);
      v71 = swift_getKeyPath(&unk_10004E6F8);
      sub_1000047CC((uint64_t)v36, (uint64_t)v39, &qword_100061230);
      v72 = v163;
      v73 = (uint64_t *)&v39[*((int *)v163 + 9)];
      *v73 = v71;
      v73[1] = v70;
      sub_100004810((uint64_t)v36, &qword_100061230);
      v74 = sub_100014FC0(&qword_100061420, &qword_100061400, (void (*)(void))sub_100014E34);
      v75 = v164;
      View.unredacted()(v72, v74);
      sub_100004810((uint64_t)v39, &qword_100061400);
      v76 = sub_100004380(&qword_1000614D0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
    }
    else
    {
      v92 = sub_100004380(&qword_1000614D0);
      v75 = v164;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v164, 1, 1, v92);
    }
    v93 = &qword_100061408;
    v94 = v75;
    v95 = v177;
    sub_100004788(v94, v177, &qword_100061408);
    v96 = v174;
    sub_1000047CC(v95, v174, &qword_100061408);
    swift_storeEnumTagMultiPayload(v96, v173, 0);
    v97 = sub_100014D88();
    v98 = sub_100014EB8();
    _ConditionalContent<>.init(storage:)(v96, v172, v175, v97, v98);
    v99 = v95;
  }
  return sub_100004810(v99, v93);
}

uint64_t sub_10001409C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;

  v50 = a2;
  v3 = sub_100004380(&qword_100061320);
  v4 = __chkstk_darwin(v3);
  v51 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v49 = (uint64_t *)((char *)&v40 - v6);
  v7 = type metadata accessor for ContentSizeCategory(0);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for WidgetFamily(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100061328);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100004380(&qword_100061330);
  v15 = __chkstk_darwin(v41);
  v45 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v47 = (uint64_t)&v40 - v17;
  v18 = type metadata accessor for TitleView(0);
  v19 = *(int *)(v18 + 28);
  v20 = *(unsigned __int8 *)(a1 + *(int *)(v18 + 32));
  v21 = *(_QWORD *)(a1 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  v23 = *(_QWORD *)(a1 + v19 + 16);
  v24 = *(_QWORD *)(a1 + v19 + 24);
  sub_1000466B0((uint64_t)v11);
  v48 = a1;
  sub_10004647C((uint64_t)v9);
  v46 = v14;
  sub_10001339C(v21, v22, v23, v24, (uint64_t)v11, (uint64_t)v9, v20, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v42);
  if (qword_1000608A8 != -1)
    swift_once(&qword_1000608A8, sub_100012420);
  v25 = qword_100063340;
  v26 = static Edge.Set.all.getter();
  v28 = v45;
  v27 = (uint64_t)v46;
  sub_1000047CC((uint64_t)v46, v45, &qword_100061328);
  v29 = v28 + *(int *)(v41 + 36);
  *(_BYTE *)v29 = v26;
  *(_QWORD *)(v29 + 8) = v25;
  *(_QWORD *)(v29 + 16) = v25;
  *(_QWORD *)(v29 + 24) = 0;
  *(_QWORD *)(v29 + 32) = 0;
  *(_BYTE *)(v29 + 40) = 0;
  sub_100004810(v27, &qword_100061328);
  v30 = v47;
  v31 = sub_100004788(v28, v47, &qword_100061330);
  v32 = static HorizontalAlignment.trailing.getter(v31);
  v33 = (uint64_t)v49;
  *v49 = v32;
  *(_QWORD *)(v33 + 8) = 0;
  *(_BYTE *)(v33 + 16) = 1;
  v34 = sub_100004380(&qword_100061338);
  sub_10001443C(v48, v33 + *(int *)(v34 + 44));
  sub_1000047CC(v30, v28, &qword_100061330);
  v35 = v51;
  sub_1000047CC(v33, v51, &qword_100061320);
  v36 = v50;
  sub_1000047CC(v28, v50, &qword_100061330);
  v37 = sub_100004380(&qword_100061340);
  v38 = v36 + *(int *)(v37 + 48);
  *(_QWORD *)v38 = 0;
  *(_BYTE *)(v38 + 8) = 1;
  sub_1000047CC(v35, v36 + *(int *)(v37 + 64), &qword_100061320);
  sub_100004810(v33, &qword_100061320);
  sub_100004810(v30, &qword_100061330);
  sub_100004810(v35, &qword_100061320);
  return sub_100004810(v28, &qword_100061330);
}

uint64_t sub_10001443C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  uint64_t v101;

  v78 = a1;
  v89 = type metadata accessor for ColorScheme(0);
  v86 = *(_QWORD *)(v89 - 8);
  v3 = __chkstk_darwin(v89);
  v81 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v80 = (uint64_t)&v69 - v5;
  v6 = sub_100004380(&qword_100061348);
  __chkstk_darwin(v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061350);
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100061358);
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100004380(&qword_100061360);
  __chkstk_darwin(v79);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100004380(&qword_100061368);
  v85 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v82 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100004380(&qword_100061370);
  v18 = __chkstk_darwin(v77);
  v90 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v76 = (char *)&v69 - v21;
  v22 = __chkstk_darwin(v20);
  v87 = (uint64_t)&v69 - v23;
  if (qword_1000608B0 != -1)
    v22 = swift_once(&qword_1000608B0, sub_10001337C);
  v24 = qword_100061268;
  v25 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(&v96, 0, 1, v24, 0, v25, v26);
  v75 = v96;
  v74 = v97;
  v73 = v98;
  v72 = v99;
  v71 = v100;
  v70 = v101;
  v27 = Image.init(_internalSystemName:)(0x65726F7473707061, 0xE800000000000000);
  v28 = enum case for Image.TemplateRenderingMode.template(_:);
  v29 = type metadata accessor for Image.TemplateRenderingMode(0);
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v11, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v29);
  v31 = Image.renderingMode(_:)(v11, v27);
  swift_release(v27);
  v32 = sub_100004810((uint64_t)v11, &qword_100061350);
  v33 = static Font.Weight.semibold.getter(v32);
  v34 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 1, 1, v34);
  v35 = static Font.system(size:weight:design:)(*(_QWORD *)&v33, 0, v8, 20.0);
  sub_100004810((uint64_t)v8, &qword_100061348);
  KeyPath = swift_getKeyPath(&unk_10004E6C8);
  v37 = static Color.primary.getter(KeyPath);
  v38 = swift_getKeyPath(&unk_10004E6F8);
  v91 = v31;
  v92 = KeyPath;
  v93 = v35;
  v94 = v38;
  v95 = v37;
  v39 = sub_100004380(&qword_100061378);
  v40 = sub_100014FC0(&qword_100061380, &qword_100061378, (void (*)(void))sub_100014C50);
  View.widgetAccentable(_:)(1, v39, v40);
  swift_release(v37);
  swift_release(v38);
  swift_release(v35);
  swift_release(KeyPath);
  swift_release(v31);
  type metadata accessor for TitleView(0);
  v41 = v80;
  sub_10004644C(v80);
  v42 = v86;
  v43 = v81;
  v44 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v81, enum case for ColorScheme.dark(_:), v89);
  v45 = static ColorScheme.== infix(_:_:)(v41, v43);
  v46 = *(void (**)(char *, uint64_t))(v42 + 8);
  v46(v43, v44);
  v47 = ((uint64_t (*)(uint64_t, uint64_t))v46)(v41, v44);
  if ((v45 & 1) != 0)
  {
    v48 = static Color.black.getter(v47);
    v49.n128_u64[0] = 0x3FC999999999999ALL;
    v50 = Color.opacity(_:)(v48, v49);
    v51 = swift_release(v48);
  }
  else
  {
    v50 = static Color.clear.getter(v47);
  }
  v53 = v83;
  v52 = v84;
  (*(void (**)(char *, char *, uint64_t, __n128))(v83 + 16))(v16, v14, v84, v51);
  v54 = v79;
  v55 = &v16[*(int *)(v79 + 36)];
  *(_QWORD *)v55 = v50;
  *(_OWORD *)(v55 + 8) = xmmword_10004E600;
  *((_QWORD *)v55 + 3) = 0x3FF0000000000000;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v52);
  v56 = sub_100014CD4();
  v57 = v82;
  View.unredacted()(v54, v56);
  v58 = sub_100004810((uint64_t)v16, &qword_100061360);
  v59 = static HorizontalAlignment.trailing.getter(v58);
  v60 = v85;
  v61 = (uint64_t)v76;
  v62 = v88;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v76, v57, v88);
  v63 = (uint64_t *)(v61 + *(int *)(v77 + 36));
  *v63 = v59;
  v63[1] = (uint64_t)sub_100014AFC;
  v63[2] = 0;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v62);
  v64 = v87;
  sub_100004788(v61, v87, &qword_100061370);
  v65 = v90;
  sub_1000047CC(v64, v90, &qword_100061370);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v75;
  *(_BYTE *)(a2 + 24) = v74;
  *(_QWORD *)(a2 + 32) = v73;
  *(_BYTE *)(a2 + 40) = v72;
  v66 = v70;
  *(_QWORD *)(a2 + 48) = v71;
  *(_QWORD *)(a2 + 56) = v66;
  v67 = sub_100004380(&qword_1000613C0);
  sub_1000047CC(v65, a2 + *(int *)(v67 + 48), &qword_100061370);
  sub_100004810(v64, &qword_100061370);
  return sub_100004810(v65, &qword_100061370);
}

double sub_100014AFC(uint64_t a1)
{
  uint64_t v1;
  double v2;

  v1 = static HorizontalAlignment.center.getter(a1);
  v2 = ViewDimensions.subscript.getter(v1);
  if (qword_1000608B8 != -1)
    swift_once(&qword_1000608B8, sub_10001338C);
  return v2 + *(double *)&qword_100061270;
}

uint64_t sub_100014B60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = static VerticalAlignment.top.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v3 = sub_100004380(&qword_100061318);
  return sub_10001409C(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100014BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100014BD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100014BF8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_100014C20(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_100014C50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061388;
  if (!qword_100061388)
  {
    v1 = sub_1000044A8(&qword_100061390);
    sub_10000B4D0(&qword_100061398, &qword_1000613A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061388);
  }
  return result;
}

unint64_t sub_100014CD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000613B8;
  if (!qword_1000613B8)
  {
    v1 = sub_1000044A8(&qword_100061360);
    v2[0] = sub_1000044A8(&qword_100061378);
    v2[1] = sub_100014FC0(&qword_100061380, &qword_100061378, (void (*)(void))sub_100014C50);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000613B8);
  }
  return result;
}

unint64_t sub_100014D88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100061418;
  if (!qword_100061418)
  {
    v1 = sub_1000044A8(&qword_100061408);
    v2[0] = sub_1000044A8(&qword_100061400);
    v2[1] = sub_100014FC0(&qword_100061420, &qword_100061400, (void (*)(void))sub_100014E34);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100061418);
  }
  return result;
}

unint64_t sub_100014E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061428;
  if (!qword_100061428)
  {
    v1 = sub_1000044A8(&qword_100061230);
    sub_100008DD8(&qword_100061430, type metadata accessor for DynamicTypeFont, (uint64_t)&unk_10004F18C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061428);
  }
  return result;
}

unint64_t sub_100014EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061438;
  if (!qword_100061438)
  {
    v1 = sub_1000044A8(&qword_1000613E8);
    sub_1000045E4(&qword_100061440, &qword_100061410, (void (*)(void))sub_100014F3C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100061438);
  }
  return result;
}

unint64_t sub_100014F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061448;
  if (!qword_100061448)
  {
    v1 = sub_1000044A8(&qword_1000613E0);
    sub_100014FC0(&qword_100061450, &qword_1000613D8, (void (*)(void))sub_100015044);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061448);
  }
  return result;
}

uint64_t sub_100014FC0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000044A8(a2);
    a3();
    sub_10000B4D0(&qword_1000613A8, &qword_1000613B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100015044()
{
  return sub_1000045E4(&qword_100061458, &qword_1000613D0, (void (*)(void))sub_100015068);
}

unint64_t sub_100015068()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061460;
  if (!qword_100061460)
  {
    v1 = sub_1000044A8(&qword_1000613C8);
    sub_1000150EC();
    sub_100008DD8(&qword_100061430, type metadata accessor for DynamicTypeFont, (uint64_t)&unk_10004F18C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061460);
  }
  return result;
}

unint64_t sub_1000150EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061468;
  if (!qword_100061468)
  {
    v1 = sub_1000044A8(&qword_100061470);
    sub_100015170();
    sub_10000B4D0(&qword_1000614B8, &qword_1000614C0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061468);
  }
  return result;
}

unint64_t sub_100015170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061478;
  if (!qword_100061478)
  {
    v1 = sub_1000044A8(&qword_100061480);
    sub_1000151F4();
    sub_10000B4D0(&qword_1000614A8, &qword_1000614B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061478);
  }
  return result;
}

unint64_t sub_1000151F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061488;
  if (!qword_100061488)
  {
    v1 = sub_1000044A8(&qword_100061490);
    sub_10000B4D0(&qword_100061498, &qword_1000614A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061488);
  }
  return result;
}

void sub_100015288(double *a1@<X8>)
{
  *a1 = EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_1000152B0(double *a1)
{
  return EnvironmentValues.minimumScaleFactor.setter(*a1);
}

uint64_t sub_1000152E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_1000613F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100015328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicTypeFont(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001536C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicTypeFont(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000153B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DynamicTypeFont(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for TitleView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100015438 + 4 * byte_10004E615[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10001546C + 4 * byte_10004E610[v4]))();
}

uint64_t sub_10001546C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100015474(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10001547CLL);
  return result;
}

uint64_t sub_100015488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100015490);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100015494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001549C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TitleView.Style()
{
  return &type metadata for TitleView.Style;
}

uint64_t sub_1000154B8()
{
  return sub_10000B4D0(&qword_1000614D8, &qword_1000614E0, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

unint64_t sub_1000154E8()
{
  unint64_t result;

  result = qword_1000614E8;
  if (!qword_1000614E8)
  {
    result = swift_getWitnessTable(&unk_10004E860, &type metadata for TitleView.Style);
    atomic_store(result, (unint64_t *)&qword_1000614E8);
  }
  return result;
}

uint64_t *sub_10001552C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    v23 = *(int *)(a3 + 24);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v24[16] = v25[16];
    v27 = *((_QWORD *)v25 + 3);
    *((_QWORD *)v24 + 3) = v27;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
  }
  return a1;
}

uint64_t sub_1000156AC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v7 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease(*((_QWORD *)v9 + 1));
  return swift_bridgeObjectRelease(*((_QWORD *)v9 + 3));
}

uint64_t *sub_100015780(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *v14;
    *v13 = *v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v22[16] = v23[16];
  v25 = *((_QWORD *)v23 + 3);
  *((_QWORD *)v22 + 3) = v25;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  return a1;
}

uint64_t *sub_1000158D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = *(int *)(a3 + 20);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_100004810((uint64_t)a1 + v12, &qword_100061110);
    v15 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(uint64_t *)((char *)a2 + v21);
  v24 = *(uint64_t *)((char *)a2 + v21 + 8);
  v25 = *(uint64_t *)((char *)a1 + v21 + 8);
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v22[16] = v23[16];
  v26 = *((_QWORD *)v23 + 3);
  v27 = *((_QWORD *)v22 + 3);
  *((_QWORD *)v22 + 3) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  return a1;
}

char *sub_100015A6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  return a1;
}

char *sub_100015B9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100004810((uint64_t)&a1[v8], &qword_100061110);
    v11 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  v17 = *(_QWORD *)&a1[v13 + 8];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v17);
  v14[16] = v15[16];
  v18 = *((_QWORD *)v14 + 3);
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t sub_100015D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100015D20);
}

uint64_t sub_100015D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061120);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100015DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100015DE0);
}

uint64_t sub_100015DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100004380(&qword_100061120);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TodayWidgetFallbackEntryView(uint64_t a1)
{
  uint64_t result;

  result = qword_100061548;
  if (!qword_100061548)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetFallbackEntryView);
  return result;
}

void sub_100015ECC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_10000FD24(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000FD24(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = " ";
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_100015F78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000507FC, 1);
}

uint64_t sub_100015F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[16];
  uint64_t v32;

  v2 = v1;
  v29 = a1;
  v30 = type metadata accessor for ContainerBackgroundPlacement(0);
  v28 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorScheme(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061588);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100061590);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000161E4(v1, (uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ColorScheme.dark(_:), v5);
  KeyPath = swift_getKeyPath(&unk_10004E938);
  v16 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  v17 = sub_100004380(&qword_100061598);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v16 + *(int *)(v17 + 28), v8, v5);
  *v16 = KeyPath;
  sub_1000047CC((uint64_t)v11, (uint64_t)v14, &qword_100061588);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = sub_100004810((uint64_t)v11, &qword_100061588);
  v19 = static ContainerBackgroundPlacement.widget.getter(v18);
  v32 = v2;
  v20 = static Alignment.center.getter(v19);
  v22 = v21;
  v23 = sub_100004380(&qword_1000615A0);
  v24 = sub_100016AA0();
  v25 = sub_100016C24();
  View.containerBackground<A>(for:alignment:content:)(v4, v20, v22, sub_100016A80, v31, v12, v23, v24, v25);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v30);
  return sub_100004810((uint64_t)v14, &qword_100061590);
}

uint64_t sub_1000161E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a2;
  v3 = sub_100004380(&qword_100061120);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for PlaceholderTodayCardView(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061600);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100004380(&qword_1000615D0);
  __chkstk_darwin(v39);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WidgetFamily(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000466B0((uint64_t)v17);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if ((_DWORD)v18 == enum case for WidgetFamily.systemLarge(_:))
  {
    *(_QWORD *)v13 = static HorizontalAlignment.center.getter(v18);
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    v19 = sub_100004380(&qword_100061608);
    sub_100016588(a1, (uint64_t)&v13[*(int *)(v19 + 44)]);
    sub_1000047CC((uint64_t)v13, (uint64_t)v11, &qword_1000615D0);
    swift_storeEnumTagMultiPayload(v11, v9, 0);
    v20 = sub_10000B4D0(&qword_1000615C8, &qword_1000615D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v21 = sub_100008DD8(&qword_1000615D8, type metadata accessor for PlaceholderTodayCardView, (uint64_t)&unk_10004E408);
    _ConditionalContent<>.init(storage:)(v11, v39, v6, v20, v21);
    return sub_100004810((uint64_t)v13, &qword_1000615D0);
  }
  else
  {
    v23 = a1 + *(int *)(type metadata accessor for TodayWidgetFallbackEntryView(0) + 24);
    v24 = *(_QWORD *)v23;
    v36 = *(_QWORD *)(v23 + 8);
    v37 = *(unsigned __int8 *)(v23 + 16);
    v38 = v24;
    v25 = *(_QWORD *)(v23 + 24);
    *v5 = swift_getKeyPath(&unk_10004E998);
    v26 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v5, v26, 0);
    KeyPath = swift_getKeyPath(&unk_10004E9C8);
    v28 = v6;
    v29 = (uint64_t *)&v8[*(int *)(v6 + 20)];
    *v29 = KeyPath;
    v30 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    sub_100016CF8((uint64_t)v5, (uint64_t)v8);
    v31 = &v8[*(int *)(v28 + 24)];
    v32 = v36;
    *(_QWORD *)v31 = v38;
    *((_QWORD *)v31 + 1) = v32;
    *((_QWORD *)v31 + 2) = v37;
    *((_QWORD *)v31 + 3) = v25;
    sub_1000043C0((uint64_t)v8, (uint64_t)v11, type metadata accessor for PlaceholderTodayCardView);
    swift_storeEnumTagMultiPayload(v11, v9, 1);
    v33 = sub_10000B4D0(&qword_1000615C8, &qword_1000615D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v34 = sub_100008DD8(&qword_1000615D8, type metadata accessor for PlaceholderTodayCardView, (uint64_t)&unk_10004E408);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v25);
    _ConditionalContent<>.init(storage:)(v11, v39, v28, v33, v34);
    sub_10000A7A8((uint64_t)v8, type metadata accessor for PlaceholderTodayCardView);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_100016588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v34;

  v4 = sub_100004380(&qword_100061120);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PlaceholderTodayCardView(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v34 - v11;
  v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TodayWidgetFallbackEntryView(0) + 24));
  v15 = *v13;
  v14 = v13[1];
  v16 = *((unsigned __int8 *)v13 + 16);
  v17 = v13[3];
  *v6 = swift_getKeyPath(&unk_10004E998);
  v18 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v6, v18, 0);
  KeyPath = swift_getKeyPath(&unk_10004E9C8);
  v20 = (uint64_t *)&v12[*(int *)(v7 + 20)];
  *v20 = KeyPath;
  v21 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  sub_100016CF8((uint64_t)v6, (uint64_t)v12);
  v22 = &v12[*(int *)(v7 + 24)];
  *(_QWORD *)v22 = v15;
  *((_QWORD *)v22 + 1) = v14;
  *((_QWORD *)v22 + 2) = v16;
  *((_QWORD *)v22 + 3) = v17;
  v23 = sub_100004380(&qword_100061610);
  v24 = *(_QWORD *)(type metadata accessor for TodayCardListViewItem(0) - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 32) & ~v26;
  v28 = swift_allocObject(v23, v27 + 2 * v25, v26 | 7);
  *(_OWORD *)(v28 + 16) = xmmword_10004E5E0;
  v29 = v28 + v27;
  v30 = type metadata accessor for WidgetTodayCard(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v29, 1, 1, v30);
  v31(v29 + v25, 1, 1, v30);
  sub_1000043C0((uint64_t)v12, (uint64_t)v10, type metadata accessor for PlaceholderTodayCardView);
  sub_1000043C0((uint64_t)v10, a2, type metadata accessor for PlaceholderTodayCardView);
  v32 = (_QWORD *)(a2 + *(int *)(sub_100004380(&qword_100061618) + 48));
  *v32 = 0x4030000000000000;
  v32[1] = v28;
  v32[2] = 0x4024000000000000;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  sub_10000A7A8((uint64_t)v12, type metadata accessor for PlaceholderTodayCardView);
  swift_bridgeObjectRelease(v28);
  return sub_10000A7A8((uint64_t)v10, type metadata accessor for PlaceholderTodayCardView);
}

uint64_t sub_100016800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[2];

  v21[1] = a1;
  v1 = sub_100004380(&qword_1000615F8);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PlatterView(0);
  v5 = __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v9 = (char *)v21 - v8;
  v10 = type metadata accessor for WidgetFamily(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000466B0((uint64_t)v13);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  v15 = enum case for WidgetFamily.systemLarge(_:);
  *v7 = swift_getKeyPath(&unk_10004E968);
  v16 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v7, v16, 0);
  v17 = *(int *)(v4 + 20);
  if (v14 == v15)
  {
    *((_BYTE *)v7 + v17) = 1;
    sub_100016CA8((uint64_t)v7, (uint64_t)v9);
    sub_1000043C0((uint64_t)v9, (uint64_t)v3, type metadata accessor for PlatterView);
    swift_storeEnumTagMultiPayload(v3, v1, 0);
    v18 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    _ConditionalContent<>.init(storage:)(v3, v4, v4, v18, v18);
    return sub_10000A7A8((uint64_t)v9, type metadata accessor for PlatterView);
  }
  else
  {
    *((_BYTE *)v7 + v17) = 0;
    sub_100016CA8((uint64_t)v7, (uint64_t)v9);
    sub_1000043C0((uint64_t)v9, (uint64_t)v3, type metadata accessor for PlatterView);
    swift_storeEnumTagMultiPayload(v3, v1, 1);
    v20 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    _ConditionalContent<>.init(storage:)(v3, v4, v4, v20, v20);
    sub_10000A7A8((uint64_t)v9, type metadata accessor for PlatterView);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_100016A80@<X0>(uint64_t a1@<X8>)
{
  return sub_100016800(a1);
}

unint64_t sub_100016AA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000615A8;
  if (!qword_1000615A8)
  {
    v1 = sub_1000044A8(&qword_100061590);
    sub_100016B24();
    sub_10000B4D0(&qword_1000615E0, &qword_100061598, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000615A8);
  }
  return result;
}

unint64_t sub_100016B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000615B0;
  if (!qword_1000615B0)
  {
    v1 = sub_1000044A8(&qword_100061588);
    sub_100016B88();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000615B0);
  }
  return result;
}

unint64_t sub_100016B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000615B8;
  if (!qword_1000615B8)
  {
    v1 = sub_1000044A8(&qword_1000615C0);
    sub_10000B4D0(&qword_1000615C8, &qword_1000615D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100008DD8(&qword_1000615D8, type metadata accessor for PlaceholderTodayCardView, (uint64_t)&unk_10004E408);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000615B8);
  }
  return result;
}

unint64_t sub_100016C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000615E8;
  if (!qword_1000615E8)
  {
    v1 = sub_1000044A8(&qword_1000615A0);
    sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000615E8);
  }
  return result;
}

uint64_t sub_100016CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlatterView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100061120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016D40()
{
  _QWORD v1[4];

  v1[0] = sub_1000044A8(&qword_100061590);
  v1[1] = sub_1000044A8(&qword_1000615A0);
  v1[2] = sub_100016AA0();
  v1[3] = sub_100016C24();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
}

uint64_t sub_100016DB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = v0;
  sub_100004380(&qword_1000616E8);
  *(_QWORD *)(v0 + 16) = Promise.__allocating_init()();
  *(_BYTE *)(v0 + 24) = 0;
  setenv("JSC_criticalGCMemoryThreshold", "0.25", 1);
  setenv("JavaScriptCoreUseJIT", "0", 1);
  v2 = (void *)objc_opt_self(NSURLCache);
  v3 = objc_msgSend(v2, "sharedURLCache");
  objc_msgSend(v3, "setDiskCapacity:", 40485760);

  v4 = objc_msgSend(v2, "sharedURLCache");
  objc_msgSend(v4, "setMemoryCapacity:", 0);

  return v1;
}

uint64_t sub_100016E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  ValueMetadata *v33;
  void *v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v31 = a1;
  v1 = type metadata accessor for ASKBootstrap.TargetType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Bag.Profile(0);
  v5 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v30 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v30);
  v11 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v28 - v13;
  Date.init()(v12);
  Bag.Profile.init(name:version:)(0x65726F7453707041, 0xE800000000000000, 49, 0xE100000000000000);
  v33 = &type metadata for EmptyAppStateControllerFactory;
  v34 = (void *)sub_1000176B8();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ASKBootstrap.TargetType.todayWidget(_:), v1);
  static ASKBootstrapFactory.make(bagProfile:appStateControllerFactory:targetType:)(v35, v7, v32, v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100008444(v32);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
  v15 = v36;
  v16 = v37;
  sub_100011CB8(v35, v36);
  v17 = dispatch thunk of ASKBootstrapProtocol.start()(v15, v16);
  v18 = v30;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v30);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = (v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_10005E1B8, v21 + 8, v19 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v22 + v20, v11, v18);
  v23 = v31;
  *(_QWORD *)(v22 + v21) = v31;
  v24 = sub_100008218();
  v25 = swift_retain_n(v23, 2);
  v26 = static OS_dispatch_queue.main.getter(v25);
  v33 = (ValueMetadata *)v24;
  v34 = &protocol witness table for OS_dispatch_queue;
  v32[0] = v26;
  Promise.then(perform:orCatchError:on:)(sub_100017770, v22, sub_1000177C0, v23, v32);
  swift_release(v17);
  swift_release(v22);
  swift_release(v23);
  sub_100008444(v32);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v18);
  return sub_100008444(v35);
}

void sub_100017148(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v36 = a3;
  v32 = a2;
  v4 = type metadata accessor for OSLogger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = *a1;
  v12 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()(v9);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v13 = sub_1000056A0(v4, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  v14 = sub_100004380(&qword_100060BA0);
  v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ 3 * *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10004EA00;
  LogMessage.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100059860);
  v33 = v12;
  v17 = Date.timeIntervalSince(_:)(v32);
  v37[3] = &type metadata for Double;
  *(double *)v37 = v17;
  static LogMessage.safe(_:)(v37);
  sub_1000177C8((uint64_t)v37);
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100059880);
  Logger.debug(_:)(v16, v4, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for BaseObjectGraph(0);
  v18 = swift_retain(v11);
  v19 = BaseObjectGraph.__allocating_init(_:)(v18);
  v20 = sub_100004380(&qword_1000616D0);
  v21 = *(_QWORD *)(type metadata accessor for Dependency(0) - 8);
  v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72), *(unsigned __int8 *)(v21 + 80) | 7);
  *(_OWORD *)(v22 + 16) = xmmword_10004DFA0;
  v23 = (objc_class *)type metadata accessor for WidgetArtworkLoader();
  v37[0] = objc_msgSend(objc_allocWithZone(v23), "init");
  Dependency.init<A>(satisfying:with:)(v23, v37, v23);
  v37[0] = v22;
  v24 = sub_100004380(&qword_1000616D8);
  v25 = sub_100017808();
  v26 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v37, v24, v25);
  swift_bridgeObjectRelease(v22);
  v27 = swift_release(v19);
  dispatch thunk of BaseObjectGraph.name.setter(0x65726F7453707041, 0xEF73746567646957, v27);
  v28 = v36;
  v29 = *(_QWORD *)(v36 + 16);
  v37[0] = v26;
  swift_retain(v29);
  Promise.resolve(_:)(v37);
  v30 = swift_release(v29);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v33, v35, v30);
  swift_release(v26);
  *(_BYTE *)(v28 + 24) = 0;
}

void sub_1000174A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  _QWORD v19[4];

  v4 = type metadata accessor for OSLogger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v8 = sub_1000056A0(v4, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_100004380(&qword_100060BA0);
  v10 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 2 * *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_10004E5E0;
  LogMessage.init(stringLiteral:)(0xD000000000000030, 0x8000000100059820);
  swift_getErrorValue(a1, v18, &v16);
  v12 = v16;
  v13 = v17;
  v19[3] = v17;
  v14 = sub_100008464(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v14, v12, v13);
  static LogMessage.safe(_:)(v19);
  sub_1000177C8((uint64_t)v19);
  Logger.error(_:)(v11, v4, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = *(_QWORD *)(a2 + 16);
  swift_retain(v15);
  Promise.reject(_:)(a1);
  swift_release(v15);
  *(_BYTE *)(a2 + 24) = 0;
}

uint64_t sub_100017674()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for Bootstrap()
{
  return objc_opt_self(_TtC24AppStoreWidgetsExtension9Bootstrap);
}

unint64_t sub_1000176B8()
{
  unint64_t result;

  result = qword_1000616C8;
  if (!qword_1000616C8)
  {
    result = swift_getWitnessTable(&unk_10004F5C0, &type metadata for EmptyAppStateControllerFactory);
    atomic_store(result, (unint64_t *)&qword_1000616C8);
  }
  return result;
}

uint64_t sub_1000176FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100017770(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_100017148(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1000177C0(uint64_t a1)
{
  uint64_t v1;

  sub_1000174A0(a1, v1);
}

uint64_t sub_1000177C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004380(&qword_100060BA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100017808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000616E0;
  if (!qword_1000616E0)
  {
    v1 = sub_1000044A8(&qword_1000616D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000616E0);
  }
  return result;
}

uint64_t *sub_100017854(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    v13 = v10[2];
    v14 = v10[3];
    sub_100017908(*v10, v12, v13, v14);
    *v9 = v11;
    v9[1] = v12;
    v9[2] = v13;
    v9[3] = v14;
  }
  return a1;
}

uint64_t sub_100017908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a3 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRetain(a4);
}

uint64_t sub_100017938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_100017984(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 16), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 24));
}

uint64_t sub_100017984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a3 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a2);
  return swift_bridgeObjectRelease(a4);
}

uint64_t sub_1000179B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  sub_100017908(*v9, v11, v12, v13);
  *v8 = v10;
  v8[1] = v11;
  v8[2] = v12;
  v8[3] = v13;
  return a1;
}

uint64_t sub_100017A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  sub_100017908(*v9, v11, v12, v13);
  v14 = *v8;
  v15 = v8[1];
  v16 = v8[2];
  v17 = v8[3];
  *v8 = v10;
  v8[1] = v11;
  v8[2] = v12;
  v8[3] = v13;
  sub_100017984(v14, v15, v16, v17);
  return a1;
}

uint64_t sub_100017AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_100017B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = *v8;
  v11 = v8[1];
  v12 = v8[2];
  v13 = v8[3];
  v14 = v9[1];
  *(_OWORD *)v8 = *v9;
  *((_OWORD *)v8 + 1) = v14;
  sub_100017984(v10, v11, v12, v13);
  return a1;
}

uint64_t sub_100017BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100017BB0);
}

uint64_t sub_100017BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((*(_QWORD *)(a1 + *(int *)(a3 + 20) + 16) >> 1) > 0x80000000)
    return -(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 16) >> 1);
  return 0;
}

uint64_t sub_100017C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100017C3C);
}

uint64_t sub_100017C3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = 0;
  v10[2] = 2 * -(int)a2;
  v10[3] = 0;
  return result;
}

uint64_t type metadata accessor for TodayWidgetEntry(uint64_t a1)
{
  uint64_t result;

  result = qword_100061748;
  if (!qword_100061748)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetEntry);
  return result;
}

uint64_t sub_100017CFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = " ";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100017D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v3 = sub_100004380(&qword_100061780);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v37 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - v10;
  v12 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TodayWidgetEntry(0) + 20));
  v14 = v12[2];
  if (v14 < 0)
    goto LABEL_15;
  v15 = *v12;
  v34 = v12[1];
  v16 = v12[3];
  v17 = _swiftEmptyArrayStorage;
  v38 = _swiftEmptyArrayStorage;
  v18 = *(_QWORD *)(v15 + 16);
  result = swift_bridgeObjectRetain(v15);
  v36 = v18;
  if (!v18)
  {
LABEL_14:
    sub_100017984(v15, v34, v14, v16);
    v29 = v17[2];
    v13 = swift_release(v17);
    v13.n128_u32[0] = 1.0;
    if (v29)
    {
LABEL_16:
      TimelineEntryRelevance.init(score:duration:)(v13, 3600.0);
      v30 = type metadata accessor for TimelineEntryRelevance(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 0, 1, v30);
    }
LABEL_15:
    v13.n128_u32[0] = 981668463;
    goto LABEL_16;
  }
  v31 = v16;
  v32 = v14;
  v33 = a1;
  v20 = 0;
  v35 = v15;
  while (v20 < *(_QWORD *)(v15 + 16))
  {
    v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v22 = *(_QWORD *)(v7 + 72);
    sub_100018068(v15 + v21 + v22 * v20, (uint64_t)v11);
    sub_1000180AC((uint64_t)&v11[*(int *)(v6 + 48)], (uint64_t)v5);
    v23 = type metadata accessor for Date(0);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v5, 1, v23);
    sub_1000180F4((uint64_t)v5);
    if (v24 == 1)
    {
      result = sub_1000084A0((uint64_t)v11);
    }
    else
    {
      v25 = v7;
      v26 = v6;
      sub_100018134((uint64_t)v11, v37);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        sub_10002DA08(0, v17[2] + 1, 1);
      v17 = v38;
      v28 = v38[2];
      v27 = v38[3];
      if (v28 >= v27 >> 1)
      {
        sub_10002DA08(v27 > 1, v28 + 1, 1);
        v17 = v38;
      }
      v17[2] = v28 + 1;
      result = sub_100018134(v37, (uint64_t)v17 + v21 + v28 * v22);
      v6 = v26;
      v7 = v25;
      v15 = v35;
    }
    if (v36 == ++v20)
    {
      v17 = v38;
      v14 = v32;
      a1 = v33;
      v16 = v31;
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10001802C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_100018068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetTodayCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000180AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100061780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000180F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004380(&qword_100061780);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100018134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetTodayCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for TodayWidgetEntry.Content(uint64_t *a1)
{
  return sub_100017984(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *initializeWithCopy for TodayWidgetEntry.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_100017908(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for TodayWidgetEntry.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_100017908(*a2, v4, v5, v6);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_100017984(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for TodayWidgetEntry.Content(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *assignWithTake for TodayWidgetEntry.Content(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_100017984(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayWidgetEntry.Content(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayWidgetEntry.Content(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10001831C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 63;
}

uint64_t sub_100018328(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_100018338(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for TodayWidgetEntry.Content()
{
  return &type metadata for TodayWidgetEntry.Content;
}

uint64_t sub_10001835C()
{
  unint64_t v0;

  v0 = sub_100018424();
  return static WidgetBundleBuilder.buildBlock<A>(_:)(v0, &type metadata for TodayWidget, v0);
}

int main(int argc, const char **argv, const char **envp)
{
  sub_1000183C0();
  static WidgetBundle.main()();
  return 0;
}

unint64_t sub_1000183C0()
{
  unint64_t result;

  result = qword_100061788;
  if (!qword_100061788)
  {
    result = swift_getWitnessTable(&unk_10004EB18, &type metadata for AppStoreWidgetBundle);
    atomic_store(result, (unint64_t *)&qword_100061788);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreWidgetBundle()
{
  return &type metadata for AppStoreWidgetBundle;
}

uint64_t sub_100018414(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000508C0, 1);
}

unint64_t sub_100018424()
{
  unint64_t result;

  result = qword_100061790;
  if (!qword_100061790)
  {
    result = swift_getWitnessTable(&unk_10004ECD8, &type metadata for TodayWidget);
    atomic_store(result, (unint64_t *)&qword_100061790);
  }
  return result;
}

uint64_t sub_100018468()
{
  _QWORD v1[2];

  v1[0] = &type metadata for TodayWidget;
  v1[1] = sub_100018424();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of static WidgetBundleBuilder.buildBlock<A>(_:)>>, 1);
}

uint64_t sub_1000184A4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10004EBE0);
  v2 = swift_getKeyPath(&unk_10004EC08);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100018514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV24AppStoreWidgetsExtension22SingleLineTextObserver5State__isSingleLine;
  v2 = sub_100004380(&qword_100061888);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100018568()
{
  return type metadata accessor for SingleLineTextObserver.State(0);
}

uint64_t type metadata accessor for SingleLineTextObserver.State(uint64_t a1)
{
  uint64_t result;

  result = qword_1000617C8;
  if (!qword_1000617C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SingleLineTextObserver.State);
  return result;
}

void sub_1000185AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100018618();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_100018618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1000617D8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1000617D8);
  }
}

void *sub_10001866C()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100018678@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for SingleLineTextObserver.State(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000186B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v26)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v27;
  uint64_t (**v28)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a4;
  v34 = a5;
  v31 = a1;
  v32 = a3;
  v35 = a6;
  v7 = type metadata accessor for GeometryProxy(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = sub_100004380(&qword_100061898);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004380(&qword_1000618A8);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10004EC78);
  v17 = sub_100004380(&qword_100061890);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, a2, v17);
  v18 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v18 = KeyPath;
  *((_QWORD *)v18 + 1) = 1;
  v18[16] = 0;
  sub_1000047CC((uint64_t)v12, (uint64_t)v15, &qword_100061898);
  sub_100004810((uint64_t)v12, &qword_100061898);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v7);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 40) & ~v19;
  v21 = (char *)swift_allocObject(&unk_10005E380, v20 + v9, v19 | 7);
  v22 = v33;
  *((_QWORD *)v21 + 2) = v32;
  *((_QWORD *)v21 + 3) = v22;
  *((_QWORD *)v21 + 4) = v34;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v21[v20], (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v23 = swift_retain(v22);
  v24 = static Alignment.center.getter(v23);
  v26 = v25;
  v27 = v35;
  sub_1000047CC((uint64_t)v15, v35, &qword_1000618A8);
  v28 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(v27 + *(int *)(sub_100004380(&qword_1000618B0) + 36));
  *v28 = sub_10001912C;
  v28[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v21;
  v28[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v24;
  v28[3] = v26;
  return sub_100004810((uint64_t)v15, &qword_1000618A8);
}

uint64_t sub_1000188D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a3;
  v30 = a4;
  v28 = a2;
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v27 - v15;
  v17 = static Color.clear.getter(v14);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18(v16, a5, v9);
  v18(v13, a1, v9);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v19 + 40) & ~v19;
  v21 = (v11 + v19 + v20) & ~v19;
  v22 = (char *)swift_allocObject(&unk_10005E3A8, v21 + v11, v19 | 7);
  v23 = v29;
  *((_QWORD *)v22 + 2) = v28;
  *((_QWORD *)v22 + 3) = v23;
  *((_QWORD *)v22 + 4) = v30;
  v24 = &v22[v20];
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v24, v16, v9);
  v25(&v22[v21], v13, v9);
  *a6 = v17;
  a6[1] = (uint64_t)sub_100019214;
  a6[3] = 0;
  a6[4] = 0;
  a6[2] = (uint64_t)v22;
  return swift_retain(v23);
}

uint64_t sub_100018A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  BOOL v8;
  uint64_t KeyPath;
  uint64_t v10;
  BOOL v12;

  v3 = swift_retain(a2);
  v4 = GeometryProxy.size.getter(v3);
  v6 = v5;
  GeometryProxy.size.getter(v4);
  v8 = v6 == v7;
  KeyPath = swift_getKeyPath(&unk_10004EBE0);
  v10 = swift_getKeyPath(&unk_10004EC08);
  v12 = v8;
  return static Published.subscript.setter(&v12, a2, KeyPath, v10);
}

uint64_t sub_100018AC0()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_100018AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t (*v25)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v26;
  uint64_t (**v27)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a2;
  v4 = sub_100004380(&qword_100061890);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004380(&qword_100061898);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v12 = v2[2];
  v30 = v2[1];
  v31 = v11;
  KeyPath = swift_getKeyPath(&unk_10004EC78);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v15 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v15 = KeyPath;
  *((_QWORD *)v15 + 1) = v12;
  v15[16] = 0;
  v14(v7, a1, v4);
  v16 = *(unsigned __int8 *)(v5 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_10005E358, v18 + 24, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v19 + v17, v7, v4);
  v20 = (_QWORD *)(v19 + v18);
  v21 = v30;
  *v20 = v31;
  v20[1] = v21;
  v20[2] = v12;
  v22 = swift_retain(v21);
  v23 = static Alignment.center.getter(v22);
  v25 = v24;
  v26 = v32;
  sub_1000047CC((uint64_t)v10, v32, &qword_100061898);
  v27 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v26 + *(int *)(sub_100004380(&qword_1000618A0) + 36));
  *v27 = sub_10001904C;
  v27[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v19;
  v27[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v23;
  v27[3] = v25;
  return sub_100004810((uint64_t)v10, &qword_100061898);
}

uint64_t sub_100018C98@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10004EBE0);
  v5 = swift_getKeyPath(&unk_10004EC08);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100018D18(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10004EBE0);
  v5 = swift_getKeyPath(&unk_10004EC08);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t destroy for SingleLineTextObserver(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *_s24AppStoreWidgetsExtension22SingleLineTextObserverVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for SingleLineTextObserver(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for SingleLineTextObserver(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for SingleLineTextObserver(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release(v5);
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleLineTextObserver(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleLineTextObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleLineTextObserver()
{
  return &type metadata for SingleLineTextObserver;
}

uint64_t sub_100018F08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10005097C, 1);
}

uint64_t sub_100018F18@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100018F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100018F78(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100018FA4(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100018FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100004380(&qword_100061890);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 24, v5);
}

uint64_t sub_10001904C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(sub_100004380(&qword_100061890) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1000186B4(a1, v2 + v6, *v7, v7[1], v7[2], a2);
}

uint64_t sub_1000190B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001912C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return sub_1000188D4(a1, v2[2], v2[3], v2[4], (uint64_t)v2 + ((v5 + 40) & ~v5), a2);
}

uint64_t sub_100019180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = v7 + v5;
  swift_release(*(_QWORD *)(v0 + 24));
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v6);
}

uint64_t sub_100019214()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  return sub_100018A28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100019260()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000618B8;
  if (!qword_1000618B8)
  {
    v1 = sub_1000044A8(&qword_1000618A0);
    sub_1000192E4();
    sub_10000B4D0(&qword_1000618D0, &qword_1000618D8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000618B8);
  }
  return result;
}

unint64_t sub_1000192E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000618C0;
  if (!qword_1000618C0)
  {
    v1 = sub_1000044A8(&qword_100061898);
    sub_10000B4D0(&qword_1000618C8, &qword_100061890, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10000B4D0(&qword_100061498, &qword_1000614A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000618C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayWidget()
{
  return &type metadata for TodayWidget;
}

uint64_t sub_100019390(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000509C0, 1);
}

uint64_t sub_1000193A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  int v73;
  _BYTE v74[4];
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  unint64_t v91;

  v86 = a1;
  v79 = type metadata accessor for TodayWidgetTimelineProvider(0);
  __chkstk_darwin(v79);
  v2 = &v74[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for WidgetKind(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v74[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100004380(&qword_1000618E0);
  v80 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v74[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100004380(&qword_1000618E8);
  v11 = *(_QWORD *)(v10 - 8);
  v81 = v10;
  v82 = v11;
  __chkstk_darwin(v10);
  *(_QWORD *)&v78 = &v74[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v88 = sub_100004380(&qword_1000618F0);
  v83 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v87 = &v74[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100004380(&qword_1000618F8);
  v15 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  v85 = v15;
  __chkstk_darwin(v14);
  v89 = &v74[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = enum case for WidgetKind.today(_:);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 104);
  v19 = v18(v6, enum case for WidgetKind.today(_:), v3);
  v20 = WidgetKind.rawValue.getter(v19);
  v22 = v21;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v18(v2, v17, v3);
  v23 = type metadata accessor for TodayWidgetEntryView(0);
  v24 = sub_100008DD8(&qword_100061900, type metadata accessor for TodayWidgetEntryView, (uint64_t)&unk_100050010);
  v25 = sub_100008DD8(&qword_100061908, type metadata accessor for TodayWidgetTimelineProvider, (uint64_t)&unk_10004F3CC);
  StaticConfiguration.init<A>(kind:provider:content:)(v20, v22, v2, sub_1000199E4, 0, v23, v79, v24, v25);
  v26 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000020, 0x8000000100059950);
  v30 = Text.init(_:tableName:bundle:comment:)(v26, v28, v27 & 1, v29, 0x617A696C61636F4CLL, 0xEB00000000656C62, 0, 0, 0, 256);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  v37 = sub_100019A84();
  v38 = v78;
  WidgetConfiguration.configurationDisplayName(_:)(v30, v32, v36, v34, v7, v37);
  sub_1000127AC(v30, v32, v36);
  swift_bridgeObjectRelease(v34);
  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v9, v7);
  v39 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100059980);
  LOWORD(v73) = 256;
  v43 = Text.init(_:tableName:bundle:comment:)(v39, v41, v40 & 1, v42, 0x617A696C61636F4CLL, 0xEB00000000656C62, 0, 0, 0, v73);
  v45 = v44;
  v47 = v46;
  v49 = v48 & 1;
  v90 = v7;
  v91 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v51 = v81;
  WidgetConfiguration.description(_:)(v43, v45, v49, v47, v81, OpaqueTypeConformance2);
  sub_1000127AC(v43, v45, v49);
  swift_bridgeObjectRelease(v47);
  v52 = v51;
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v38, v51);
  v53 = sub_100004380(&qword_100061918);
  v82 = v53;
  v54 = type metadata accessor for WidgetFamily(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(_QWORD *)(v55 + 72);
  v57 = *(unsigned __int8 *)(v55 + 80);
  v58 = (v57 + 32) & ~v57;
  v79 = v57 | 7;
  v80 = v58 + 3 * v56;
  v59 = swift_allocObject(v53, v80, v57 | 7);
  v78 = xmmword_10004EA00;
  *(_OWORD *)(v59 + 16) = xmmword_10004EA00;
  v77 = enum case for WidgetFamily.systemSmall(_:);
  v60 = *(void (**)(uint64_t))(v55 + 104);
  v60(v59 + v58);
  v76 = enum case for WidgetFamily.systemMedium(_:);
  v60(v59 + v58 + v56);
  v75 = enum case for WidgetFamily.systemLarge(_:);
  v60(v59 + v58 + 2 * v56);
  v90 = v52;
  v91 = OpaqueTypeConformance2;
  v61 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v62 = v88;
  v63 = v87;
  WidgetConfiguration.supportedFamilies(_:)(v59, v88, v61);
  swift_bridgeObjectRelease(v59);
  (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v63, v62);
  v64 = sub_100004380(&qword_100061920);
  v65 = *(_QWORD *)(type metadata accessor for WidgetLocation(0) - 8);
  v66 = swift_allocObject(v64, ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ 2 * *(_QWORD *)(v65 + 72), *(unsigned __int8 *)(v65 + 80) | 7);
  *(_OWORD *)(v66 + 16) = xmmword_10004E5E0;
  v67 = static WidgetLocation.lockScreen.getter();
  static WidgetLocation.continuityMac.getter(v67);
  v68 = swift_allocObject(v82, v80, v79);
  *(_OWORD *)(v68 + 16) = v78;
  ((void (*)(uint64_t, _QWORD, uint64_t))v60)(v68 + v58, v77, v54);
  ((void (*)(uint64_t, _QWORD, uint64_t))v60)(v68 + v58 + v56, v76, v54);
  ((void (*)(uint64_t, _QWORD, uint64_t))v60)(v68 + v58 + 2 * v56, v75, v54);
  v90 = v88;
  v91 = v61;
  v69 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v70 = v84;
  v71 = v89;
  WidgetConfiguration.disfavoredLocations(_:for:)(v66, v68, v84, v69);
  swift_bridgeObjectRelease(v66);
  swift_bridgeObjectRelease(v68);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v85 + 8))(v71, v70);
}

uint64_t sub_1000199E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TodayWidgetEntry(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a2 = swift_getKeyPath(&unk_10004ED18);
  v8 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(a2, v8, 0);
  v9 = (_QWORD *)((char *)a2 + *(int *)(type metadata accessor for TodayWidgetEntryView(0) + 20));
  *v9 = v4;
  v9[1] = v5;
  v9[2] = v6;
  v9[3] = v7;
  return sub_100017908(v4, v5, v6, v7);
}

unint64_t sub_100019A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061910;
  if (!qword_100061910)
  {
    v1 = sub_1000044A8(&qword_1000618E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for StaticConfiguration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100061910);
  }
  return result;
}

uint64_t sub_100019AD0()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_100019AF0()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_100019B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;

  v0 = sub_1000044A8(&qword_1000618F8);
  v1 = sub_1000044A8(&qword_1000618F0);
  v2 = sub_1000044A8(&qword_1000618E8);
  v7 = sub_1000044A8(&qword_1000618E0);
  v8 = sub_100019A84();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v7 = v2;
  v8 = OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v7 = v1;
  v8 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v7 = v0;
  v8 = v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disfavoredLocations(_:for:)>>, 1);
}

uint64_t initializeWithCopy for SmallFallbackView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for SmallFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t *assignWithTake for SmallFallbackView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for SmallFallbackView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmallFallbackView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SmallFallbackView()
{
  return &type metadata for SmallFallbackView;
}

uint64_t sub_100019D50(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050A04, 1);
}

double sub_100019D60(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  void *v11;

  if (!*(_QWORD *)(a1 + 16))
    return a3;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppIcon(0) - 8) + 80);
  v6 = a1 + ((v5 + 32) & ~v5);
  v7 = type metadata accessor for AppIconConfiguration(0);
  v8 = *(void **)(v6 + *(int *)(v7 + 20));
  if (!v8)
    return a3;
  objc_msgSend(v8, "size");
  v10 = v9;
  v11 = *(void **)(v6 + *(int *)(v7 + 20));
  if (v11)
    objc_msgSend(v11, "size");
  return v10;
}

_QWORD *sub_100019E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  char *v42;
  int *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(__int128 *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  __int128 v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  uint64_t v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  double v158;
  double v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(__int128 *, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  double v173;
  double v174;
  double v175;
  double v176;
  double v177;
  double v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _OWORD *v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _BYTE v224[488];
  _BYTE v225[481];
  _QWORD v226[58];
  __int128 v227;
  _OWORD v228[29];

  v223 = a2;
  v9 = sub_100004380(&qword_100061928);
  v201 = *(_QWORD *)(v9 - 8);
  v202 = v9;
  __chkstk_darwin(v9);
  v200 = (char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_100004380(&qword_100061930);
  v11 = __chkstk_darwin(v213);
  v199 = (char *)&v192 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v203 = (uint64_t)&v192 - v13;
  v211 = sub_100004380(&qword_100061938);
  __chkstk_darwin(v211);
  v212 = (uint64_t)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_100004380(&qword_100061940);
  __chkstk_darwin(v222);
  v214 = (char *)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v208);
  v209 = (char *)&v192 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for GridItem.Size(0);
  v205 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v18 = (__int128 *)((char *)&v192 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100004380(&qword_100061948);
  v196 = *(_QWORD *)(v19 - 8);
  v197 = v19;
  __chkstk_darwin(v19);
  v195 = (char *)&v192 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100004380(&qword_100061950);
  v21 = __chkstk_darwin(v210);
  v194 = (char *)&v192 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v198 = (uint64_t)&v192 - v23;
  v192 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v192);
  v25 = (char *)&v192 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_100004380(&qword_100061958);
  v26 = __chkstk_darwin(v206);
  v28 = (char *)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v193 = (uint64_t)&v192 - v29;
  v219 = sub_100004380(&qword_100061960);
  __chkstk_darwin(v219);
  v221 = (uint64_t)&v192 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_100004380(&qword_100061968);
  __chkstk_darwin(v215);
  v217 = (char *)&v192 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100004380(&qword_100061970);
  __chkstk_darwin(v32);
  v34 = (char *)&v192 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = sub_100004380(&qword_100061978);
  __chkstk_darwin(v216);
  v204 = (char *)&v192 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = sub_100004380(&qword_100061980);
  __chkstk_darwin(v220);
  *(_QWORD *)&v218 = (char *)&v192 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for AppIcon(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = __chkstk_darwin(v37);
  v42 = (char *)&v192 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(_QWORD *)(a1 + 16))
  {
    case 0:
      v43 = (int *)type metadata accessor for AppIconConfiguration(0);
      v44 = static WidgetAccentedRenderingMode.fullColor.getter(v43);
      UUID.init()(v44);
      *(_QWORD *)&v42[v43[5]] = 0;
      v45 = &v42[v43[6]];
      *(_QWORD *)v45 = 0;
      *((_QWORD *)v45 + 1) = 0;
      v45[16] = 1;
      v42[v43[7]] = 0;
      v42[v43[8]] = 1;
      sub_1000043C0((uint64_t)v42, (uint64_t)v34, type metadata accessor for AppIcon);
      swift_storeEnumTagMultiPayload(v34, v32, 0);
      v46 = sub_100008DD8((unint64_t *)&qword_1000609C0, type metadata accessor for AppIcon, (uint64_t)&unk_10004E1B0);
      v47 = sub_10001DBA8();
      v48 = (uint64_t)v204;
      _ConditionalContent<>.init(storage:)(v34, v37, v206, v46, v47);
      v49 = v217;
      sub_1000047CC(v48, (uint64_t)v217, &qword_100061978);
      swift_storeEnumTagMultiPayload(v49, v215, 0);
      v50 = sub_100004380(&qword_1000619E8);
      v51 = sub_10001DB24();
      v52 = sub_10001DC14();
      v53 = v218;
      _ConditionalContent<>.init(storage:)(v49, v216, v50, v51, v52);
      sub_100004810(v48, &qword_100061978);
      v54 = v221;
      sub_1000047CC(v53, v221, &qword_100061980);
      swift_storeEnumTagMultiPayload(v54, v219, 0);
      v55 = sub_10001DB00();
      v56 = sub_10001DCB8();
      _ConditionalContent<>.init(storage:)(v54, v220, v222, v55, v56);
      sub_100004810(v53, &qword_100061980);
      return (_QWORD *)sub_10000A7A8((uint64_t)v42, type metadata accessor for AppIcon);
    case 1:
      v98 = sub_100019D60(a1, v40, a4);
      v99 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
      v101 = a4 / v100;
      v102 = a4 / v100 * sub_100019D60(a1, v98, a4);
      sub_100019D60(a1, v102, a4);
      v104 = v101 * v103;
      v106 = static Alignment.center.getter(v105);
      _FrameLayout.init(width:height:alignment:)(&v227, *(_QWORD *)&v102, 0, *(_QWORD *)&v104, 0, v106, v107);
      sub_1000043C0(v99, (uint64_t)v25, type metadata accessor for AppIcon);
      v108 = &v25[*(int *)(v192 + 36)];
      v109 = v228[0];
      *(_OWORD *)v108 = v227;
      *((_OWORD *)v108 + 1) = v109;
      *((_OWORD *)v108 + 2) = v228[1];
      sub_1000047CC((uint64_t)v25, (uint64_t)v28, &qword_100060A20);
      v110 = v206;
      v111 = &v28[*(int *)(v206 + 36)];
      *(_QWORD *)v111 = 0x3FF0000000000000;
      *((_WORD *)v111 + 4) = 0;
      sub_100004810((uint64_t)v25, &qword_100060A20);
      v112 = (uint64_t)v28;
      v113 = v193;
      sub_100004788(v112, v193, &qword_100061958);
      sub_1000047CC(v113, (uint64_t)v34, &qword_100061958);
      swift_storeEnumTagMultiPayload(v34, v32, 1);
      v114 = sub_100008DD8((unint64_t *)&qword_1000609C0, type metadata accessor for AppIcon, (uint64_t)&unk_10004E1B0);
      v115 = sub_10001DBA8();
      v116 = (uint64_t)v204;
      _ConditionalContent<>.init(storage:)(v34, v37, v110, v114, v115);
      v117 = v217;
      sub_1000047CC(v116, (uint64_t)v217, &qword_100061978);
      swift_storeEnumTagMultiPayload(v117, v215, 0);
      v118 = sub_100004380(&qword_1000619E8);
      v119 = sub_10001DB24();
      v120 = sub_10001DC14();
      v121 = v218;
      _ConditionalContent<>.init(storage:)(v117, v216, v118, v119, v120);
      sub_100004810(v116, &qword_100061978);
      v122 = v221;
      sub_1000047CC(v121, v221, &qword_100061980);
      swift_storeEnumTagMultiPayload(v122, v219, 0);
      v123 = sub_10001DB00();
      v124 = sub_10001DCB8();
      _ConditionalContent<>.init(storage:)(v122, v220, v222, v123, v124);
      sub_100004810(v121, &qword_100061980);
      v125 = v113;
      v126 = &qword_100061958;
      return (_QWORD *)sub_100004810(v125, v126);
    case 2:
      v127 = static Alignment.center.getter(v39);
      v129 = v128;
      sub_10001B044(a1, v226, a3, a4, a5);
      memcpy(v228, v226, 0x120uLL);
      *(_QWORD *)&v227 = v127;
      *((_QWORD *)&v227 + 1) = v129;
      sub_10001DD98((uint64_t)&v227);
      sub_100004788((uint64_t)&v227, (uint64_t)v224, &qword_100061A28);
      sub_10001DDA0((uint64_t)v226);
      v130 = sub_100004380(&qword_1000619F8);
      v131 = sub_100004380(&qword_100061A08);
      v132 = sub_10000B4D0(&qword_1000619F0, &qword_1000619F8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      v133 = sub_10000B4D0(&qword_100061A00, &qword_100061A08, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      _ConditionalContent<>.init(storage:)(v224, v130, v131, v132, v133);
      v134 = v217;
      memcpy(v217, v225, 0x1E1uLL);
      swift_storeEnumTagMultiPayload(v134, v215, 1);
      v135 = sub_100004380(&qword_1000619E8);
      v136 = sub_10001DB24();
      v137 = sub_10001DC14();
      v138 = v218;
      _ConditionalContent<>.init(storage:)(v134, v216, v135, v136, v137);
      v139 = v221;
      sub_1000047CC(v138, v221, &qword_100061980);
      swift_storeEnumTagMultiPayload(v139, v219, 0);
      v140 = sub_10001DB00();
      v141 = sub_10001DCB8();
      _ConditionalContent<>.init(storage:)(v139, v220, v222, v140, v141);
      sub_100004810(v138, &qword_100061980);
      return (_QWORD *)sub_10001DDD4((uint64_t)v226);
    case 3:
      v142 = static Alignment.center.getter(v39);
      v144 = v143;
      sub_10001B620(a1, v226, a3, a4, a5);
      memcpy(v228, v226, sizeof(v228));
      *(_QWORD *)&v227 = v142;
      *((_QWORD *)&v227 + 1) = v144;
      sub_10001DCFC((uint64_t)&v227);
      sub_100004788((uint64_t)&v227, (uint64_t)v224, &qword_100061A28);
      sub_10001DD08(v226);
      v145 = sub_100004380(&qword_1000619F8);
      v146 = sub_100004380(&qword_100061A08);
      v147 = sub_10000B4D0(&qword_1000619F0, &qword_1000619F8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      v148 = sub_10000B4D0(&qword_100061A00, &qword_100061A08, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      _ConditionalContent<>.init(storage:)(v224, v145, v146, v147, v148);
      v149 = v217;
      memcpy(v217, v225, 0x1E1uLL);
      swift_storeEnumTagMultiPayload(v149, v215, 1);
      v150 = sub_100004380(&qword_1000619E8);
      v151 = sub_10001DB24();
      v152 = sub_10001DC14();
      v153 = v218;
      _ConditionalContent<>.init(storage:)(v149, v216, v150, v151, v152);
      v154 = v221;
      sub_1000047CC(v153, v221, &qword_100061980);
      swift_storeEnumTagMultiPayload(v154, v219, 0);
      v155 = sub_10001DB00();
      v156 = sub_10001DCB8();
      _ConditionalContent<>.init(storage:)(v154, v220, v222, v155, v156);
      sub_100004810(v153, &qword_100061980);
      return sub_10001DD50(v226);
    case 4:
      v157 = a1;
      sub_100019D60(a1, v40, a4);
      v159 = a4 / (v158 + v158 + a5);
      v160 = sub_100004380(&qword_100061988);
      v161 = type metadata accessor for GridItem(0);
      v162 = swift_allocObject(v160, ((*(unsigned __int8 *)(*(_QWORD *)(v161 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v161 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v161 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v161 - 8) + 80) | 7);
      *(_OWORD *)(v162 + 16) = xmmword_10004E5E0;
      v218 = xmmword_10004ED50;
      *v18 = xmmword_10004ED50;
      v163 = enum case for GridItem.Size.flexible(_:);
      v164 = *(void (**)(__int128 *, uint64_t, uint64_t))(v205 + 104);
      v165 = v207;
      v164(v18, enum case for GridItem.Size.flexible(_:), v207);
      GridItem.init(_:spacing:alignment:)(v18, *(_QWORD *)&a5, 0, 0, 0, 1);
      *v18 = v218;
      v164(v18, v163, v165);
      v166 = GridItem.init(_:spacing:alignment:)(v18, *(_QWORD *)&a5, 0, 0, 0, 1);
      *(_QWORD *)&v218 = &v192;
      v167 = __chkstk_darwin(v166);
      *(&v192 - 6) = v157;
      *((double *)&v192 - 5) = a3;
      *((double *)&v192 - 4) = a4;
      *((double *)&v192 - 3) = a5;
      v168 = static HorizontalAlignment.center.getter(v167);
      LODWORD(v227) = 0;
      sub_100008DD8(&qword_100061990, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
      v169 = v209;
      dispatch thunk of OptionSet.init(rawValue:)(&v227);
      v170 = sub_100004380(&qword_100061A18);
      v171 = sub_10000B4D0(&qword_100061A20, &qword_100061A18, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v172 = v195;
      v173 = LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v162, v168, *(_QWORD *)&a5, 0, v169, sub_10001DCDC, &v192 - 8, v170, v171);
      v174 = sub_100019D60(v157, v173, a4);
      v175 = a5 * 0.5;
      v176 = v175 + v159 * v174 + v159 * v174;
      sub_100019D60(v157, v176, a4);
      v178 = v175 + v159 * v177 + v159 * v177;
      v180 = static Alignment.center.getter(v179);
      _FrameLayout.init(width:height:alignment:)(&v227, *(_QWORD *)&v176, 0, *(_QWORD *)&v178, 0, v180, v181);
      v183 = v196;
      v182 = v197;
      v184 = (uint64_t)v194;
      (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v194, v172, v197);
      v185 = v210;
      v186 = (_OWORD *)(v184 + *(int *)(v210 + 36));
      v187 = v228[0];
      *v186 = v227;
      v186[1] = v187;
      v186[2] = v228[1];
      (*(void (**)(char *, uint64_t))(v183 + 8))(v172, v182);
      v89 = &qword_100061950;
      v90 = v198;
      sub_100004788(v184, v198, &qword_100061950);
      v188 = v212;
      sub_1000047CC(v90, v212, &qword_100061950);
      swift_storeEnumTagMultiPayload(v188, v211, 0);
      v92 = sub_10001D9F8();
      v93 = sub_10001DA7C();
      v97 = v213;
      v94 = (uint64_t)v214;
      v95 = v188;
      v96 = v185;
      goto LABEL_8;
    default:
      v58 = a1;
      sub_100019D60(a1, v40, a4);
      v60 = a4 / (v59 + v59 + a5);
      v61 = sub_100004380(&qword_100061988);
      v62 = type metadata accessor for GridItem(0);
      v63 = swift_allocObject(v61, ((*(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v62 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80) | 7);
      *(_OWORD *)(v63 + 16) = xmmword_10004E5E0;
      v218 = xmmword_10004ED50;
      *v18 = xmmword_10004ED50;
      v64 = enum case for GridItem.Size.flexible(_:);
      v65 = *(void (**)(__int128 *, uint64_t, uint64_t))(v205 + 104);
      v66 = v207;
      v65(v18, enum case for GridItem.Size.flexible(_:), v207);
      GridItem.init(_:spacing:alignment:)(v18, *(_QWORD *)&a5, 0, 0, 0, 1);
      *v18 = v218;
      v65(v18, v64, v66);
      v67 = GridItem.init(_:spacing:alignment:)(v18, *(_QWORD *)&a5, 0, 0, 0, 1);
      *(_QWORD *)&v218 = &v192;
      v68 = __chkstk_darwin(v67);
      *(&v192 - 6) = v58;
      *((double *)&v192 - 5) = a3;
      *((double *)&v192 - 4) = a4;
      *((double *)&v192 - 3) = a5;
      v69 = static HorizontalAlignment.center.getter(v68);
      LODWORD(v227) = 0;
      sub_100008DD8(&qword_100061990, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
      v70 = v209;
      dispatch thunk of OptionSet.init(rawValue:)(&v227);
      v71 = sub_100004380(&qword_100061998);
      v72 = sub_10000B4D0(&qword_1000619A0, &qword_100061998, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v73 = v200;
      v74 = LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v63, v69, *(_QWORD *)&a5, 0, v70, sub_10001D9EC, &v192 - 8, v71, v72);
      v75 = sub_100019D60(v58, v74, a4);
      v76 = a5 * 0.5;
      v77 = v76 + v60 * v75 + v60 * v75;
      sub_100019D60(v58, v77, a4);
      v79 = v76 + v60 * v78 + v60 * v78;
      v81 = static Alignment.center.getter(v80);
      _FrameLayout.init(width:height:alignment:)(&v227, *(_QWORD *)&v77, 0, *(_QWORD *)&v79, 0, v81, v82);
      v84 = v201;
      v83 = v202;
      v85 = (uint64_t)v199;
      (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v199, v73, v202);
      v86 = v213;
      v87 = (_OWORD *)(v85 + *(int *)(v213 + 36));
      v88 = v228[0];
      *v87 = v227;
      v87[1] = v88;
      v87[2] = v228[1];
      (*(void (**)(char *, uint64_t))(v84 + 8))(v73, v83);
      v89 = &qword_100061930;
      v90 = v203;
      sub_100004788(v85, v203, &qword_100061930);
      v91 = v212;
      sub_1000047CC(v90, v212, &qword_100061930);
      swift_storeEnumTagMultiPayload(v91, v211, 1);
      v92 = sub_10001D9F8();
      v93 = sub_10001DA7C();
      v94 = (uint64_t)v214;
      v95 = v91;
      v96 = v210;
      v97 = v86;
LABEL_8:
      _ConditionalContent<>.init(storage:)(v95, v96, v97, v92, v93);
      v189 = v221;
      sub_1000047CC(v94, v221, &qword_100061940);
      swift_storeEnumTagMultiPayload(v189, v219, 1);
      v190 = sub_10001DB00();
      v191 = sub_10001DCB8();
      _ConditionalContent<>.init(storage:)(v189, v220, v222, v190, v191);
      sub_100004810(v94, &qword_100061940);
      v125 = v90;
      v126 = v89;
      return (_QWORD *)sub_100004810(v125, v126);
  }
}

uint64_t sub_10001B044@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  __int128 v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int128 v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  _BYTE v51[32];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[25];
  __int128 v57;
  __int128 v58;
  _BYTE v59[32];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD __src[18];
  _QWORD v66[2];
  char v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unsigned __int128 v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  char v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  __int128 v95;
  char v96;

  v8 = a1;
  v49 = static VerticalAlignment.center.getter(a1);
  sub_10001B400(v8, (uint64_t)__src, a3, a4, a5);
  v9 = __src[0];
  v41 = *((_QWORD *)&__src[0] + 1);
  v42 = *(_QWORD *)&__src[0];
  v10 = __src[1];
  v11 = *((_QWORD *)&__src[1] + 1);
  v12 = *(_QWORD *)&__src[2];
  v39 = *(_QWORD *)&__src[2];
  v40 = *((_QWORD *)&__src[1] + 1);
  v13 = __src[4];
  v45 = *((_QWORD *)&__src[2] + 1);
  v46 = *((_QWORD *)&__src[4] + 1);
  v14 = __src[5];
  v47 = *((_QWORD *)&__src[5] + 1);
  v48 = *((_QWORD *)&__src[3] + 1);
  v15 = __src[6];
  v16 = __src[7];
  v37 = __src[4];
  v38 = __src[1];
  v35 = __src[7];
  v36 = __src[5];
  v17 = __src[3];
  v43 = __src[3];
  v28 = static VerticalAlignment.center.getter(v18);
  sub_10001B510(v8, (uint64_t)__src, a3, a4, a5);
  LOBYTE(v8) = __src[3];
  v33 = *(_QWORD *)&__src[7];
  v34 = *((_QWORD *)&__src[6] + 1);
  v30 = BYTE8(__src[0]);
  v31 = __src[5];
  v32 = __src[6];
  v29 = __src[2];
  v50 = (unint64_t)v49;
  v51[0] = 1;
  *(_OWORD *)&v51[8] = v9;
  v51[24] = v10;
  *(_QWORD *)&v52 = v11;
  *((_QWORD *)&v52 + 1) = v12;
  *(_QWORD *)&v53 = v45;
  BYTE8(v53) = v17;
  *(_QWORD *)&v54 = v48;
  BYTE8(v54) = v13;
  *(_QWORD *)&v55 = v46;
  BYTE8(v55) = v14;
  *(_QWORD *)v56 = v47;
  *(_OWORD *)&v56[8] = v15;
  v56[24] = v16;
  v57 = (unint64_t)v28;
  LOBYTE(v58) = 1;
  *((_QWORD *)&v58 + 1) = *(_QWORD *)&__src[0];
  v19 = *(_QWORD *)&__src[0];
  v59[0] = BYTE8(__src[0]);
  *(_OWORD *)&v59[8] = __src[1];
  v20 = __src[1];
  v59[24] = __src[2];
  *(_QWORD *)&v60 = *((_QWORD *)&__src[2] + 1);
  v21 = *((_QWORD *)&__src[2] + 1);
  BYTE8(v60) = __src[3];
  v61 = *(_OWORD *)((char *)&__src[3] + 8);
  v22 = *((_QWORD *)&__src[3] + 1);
  *(_QWORD *)&v62 = *((_QWORD *)&__src[4] + 1);
  v25 = __src[4];
  v24 = v25 >> 64;
  v23 = v25;
  BYTE8(v62) = __src[5];
  *(_QWORD *)&v63 = *((_QWORD *)&__src[5] + 1);
  v26 = *((_QWORD *)&__src[5] + 1);
  BYTE8(v63) = __src[6];
  v64 = *(_OWORD *)((char *)&__src[6] + 8);
  *(_OWORD *)((char *)&__src[7] + 9) = *(_OWORD *)&v56[9];
  __src[6] = v55;
  __src[7] = *(_OWORD *)v56;
  __src[2] = *(_OWORD *)&v51[16];
  __src[3] = v52;
  __src[4] = v53;
  __src[5] = v54;
  __src[0] = (unint64_t)v49;
  __src[1] = *(_OWORD *)v51;
  __src[15] = v62;
  __src[16] = v63;
  __src[17] = v64;
  __src[11] = *(_OWORD *)v59;
  __src[12] = *(_OWORD *)&v59[16];
  __src[13] = v60;
  __src[14] = v61;
  __src[9] = (unint64_t)v28;
  __src[10] = v58;
  memcpy(a2, __src, 0x120uLL);
  v66[0] = v28;
  v66[1] = 0;
  v67 = 1;
  v68 = v19;
  v69 = v30;
  v70 = v20;
  v71 = v29;
  v72 = v21;
  v73 = v8;
  v74 = v22;
  v75 = __PAIR128__(v24, v23);
  v76 = v31;
  v77 = v26;
  v78 = v32;
  v79 = v34;
  v80 = v33;
  sub_10001DE08((uint64_t)&v50);
  sub_10001DE7C((uint64_t)&v57);
  sub_10001DEA4((uint64_t)v66);
  v81[0] = v49;
  v81[1] = 0;
  v82 = 1;
  v83 = v42;
  v84 = v41;
  v85 = v38;
  v86 = v40;
  v87 = v39;
  v88 = v45;
  v89 = v43;
  v90 = v48;
  v91 = v37;
  v92 = v46;
  v93 = v36;
  v94 = v47;
  v95 = v15;
  v96 = v35;
  return sub_10001DE30((uint64_t)v81);
}

double sub_10001B400@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v10 = static HorizontalAlignment.center.getter();
  v11 = swift_allocObject(&unk_10005E540, 48, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(double *)(v11 + 24) = a3;
  *(double *)(v11 + 32) = a4;
  *(double *)(v11 + 40) = a5;
  v12 = swift_bridgeObjectRetain(a1);
  v13 = static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(&v20, *(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, v13, v14);
  v15 = v20;
  v16 = v21;
  v17 = v22;
  v18 = v23;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = sub_10001DF90;
  *(_QWORD *)(a2 + 32) = v11;
  *(double *)(a2 + 40) = a4 * 0.34;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v15;
  *(_BYTE *)(a2 + 64) = v16;
  *(_QWORD *)(a2 + 72) = v17;
  *(_BYTE *)(a2 + 80) = v18;
  result = *(double *)&v24;
  *(_OWORD *)(a2 + 88) = v24;
  *(double *)(a2 + 104) = a4 * 0.34;
  *(_BYTE *)(a2 + 112) = 0;
  return result;
}

double sub_10001B510@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  double result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  v10 = a4 * 0.34;
  v11 = static HorizontalAlignment.center.getter();
  v12 = swift_allocObject(&unk_10005E518, 48, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(double *)(v12 + 24) = a3;
  *(double *)(v12 + 32) = a4;
  *(double *)(v12 + 40) = a5;
  v13 = swift_bridgeObjectRetain(a1);
  v14 = static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(&v21, *(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, v14, v15);
  v16 = v21;
  v17 = v22;
  v18 = v23;
  v19 = v24;
  *(double *)a2 = v10;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 1;
  *(double *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_10001DF8C;
  *(_QWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v16;
  *(_BYTE *)(a2 + 80) = v17;
  *(_QWORD *)(a2 + 88) = v18;
  *(_BYTE *)(a2 + 96) = v19;
  result = *(double *)&v25;
  *(_OWORD *)(a2 + 104) = v25;
  return result;
}

uint64_t sub_10001B620@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  char v9;
  __int128 v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[9];
  char v51;
  _BYTE v52[152];
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  _QWORD v60[2];
  _BYTE v61[32];
  _BYTE v62[32];
  __int128 v63;
  __int128 v64;
  _BYTE v65[25];
  _QWORD v66[2];
  _OWORD v67[10];
  _QWORD v68[2];
  __int128 v69;
  _BYTE v70[32];
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _OWORD __src[29];
  _QWORD v77[2];
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  char v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  _QWORD v106[2];
  char v107;
  __int128 v108;
  char v109;
  uint64_t v110;
  __int128 v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;

  v49 = static VerticalAlignment.center.getter(a1);
  sub_10001BBA8(a1, (uint64_t)__src, a3, a4, a5);
  v43 = __src[0];
  v9 = __src[1];
  v10 = __src[2];
  v42 = *((_QWORD *)&__src[1] + 1);
  v11 = __src[4];
  v45 = *((_QWORD *)&__src[3] + 1);
  v46 = *((_QWORD *)&__src[4] + 1);
  v12 = __src[5];
  v44 = *(_QWORD *)&__src[6];
  v47 = *((_QWORD *)&__src[5] + 1);
  v48 = *((_QWORD *)&__src[6] + 1);
  v13 = __src[7];
  v38 = __src[1];
  v39 = __src[4];
  v35 = __src[5];
  v36 = __src[7];
  v14 = __src[3];
  v37 = __src[3];
  v41 = static VerticalAlignment.center.getter(v15);
  sub_10001BE40(a1, (uint64_t)v50, a3, a4, a5);
  *(_OWORD *)&v52[103] = v50[6];
  *(_OWORD *)&v52[119] = v50[7];
  *(_OWORD *)&v52[135] = v50[8];
  *(_OWORD *)&v52[39] = v50[2];
  *(_OWORD *)&v52[55] = v50[3];
  *(_OWORD *)&v52[71] = v50[4];
  *(_OWORD *)&v52[87] = v50[5];
  *(_OWORD *)&v52[7] = v50[0];
  v53 = 1;
  v52[151] = v51;
  *(_OWORD *)&v52[23] = v50[1];
  v34 = static VerticalAlignment.center.getter(v16);
  sub_10001C1BC(a1, (uint64_t)__src, a3, a4, a5);
  v17 = BYTE8(__src[0]);
  v33 = *(_QWORD *)&__src[1];
  v28 = *((_QWORD *)&__src[3] + 1);
  v29 = *((_QWORD *)&__src[2] + 1);
  v26 = *((_QWORD *)&__src[4] + 1);
  v27 = *(_QWORD *)&__src[4];
  v30 = *((_QWORD *)&__src[5] + 1);
  v31 = *((_QWORD *)&__src[1] + 1);
  v57 = __src[2];
  v60[0] = v49;
  v60[1] = 0;
  v61[0] = 1;
  *(_OWORD *)&v61[8] = v43;
  v61[24] = v9;
  *(_QWORD *)v62 = v42;
  *(_OWORD *)&v62[8] = v10;
  v62[24] = v14;
  *(_QWORD *)&v63 = v45;
  BYTE8(v63) = v11;
  *(_QWORD *)&v64 = v46;
  BYTE8(v64) = v12;
  *(_QWORD *)v65 = v47;
  *(_QWORD *)&v65[8] = v44;
  *(_QWORD *)&v65[16] = v48;
  v65[24] = v13;
  *(_QWORD *)((char *)&v67[9] + 1) = *(_QWORD *)&v52[144];
  v32 = *((_QWORD *)&__src[6] + 1);
  v18 = *(_QWORD *)&__src[7];
  v66[0] = v41;
  v66[1] = 0;
  LOBYTE(v67[0]) = 1;
  *(_OWORD *)((char *)&v67[8] + 1) = *(_OWORD *)&v52[128];
  *(_OWORD *)((char *)&__src[18] + 9) = *(_OWORD *)((char *)&v67[8] + 9);
  v19 = __src[2];
  *(_OWORD *)((char *)&v67[6] + 1) = *(_OWORD *)&v52[96];
  *(_OWORD *)((char *)&v67[7] + 1) = *(_OWORD *)&v52[112];
  *(_OWORD *)((char *)&v67[2] + 1) = *(_OWORD *)&v52[32];
  *(_OWORD *)((char *)&v67[3] + 1) = *(_OWORD *)&v52[48];
  *(_OWORD *)((char *)&v67[4] + 1) = *(_OWORD *)&v52[64];
  *(_OWORD *)((char *)&v67[5] + 1) = *(_OWORD *)&v52[80];
  *(_OWORD *)((char *)v67 + 1) = *(_OWORD *)v52;
  *(_OWORD *)((char *)&v67[1] + 1) = *(_OWORD *)&v52[16];
  v68[0] = v34;
  v68[1] = 0;
  LOBYTE(v69) = 1;
  v20 = *(_QWORD *)&__src[0];
  *((_QWORD *)&v69 + 1) = *(_QWORD *)&__src[0];
  v70[0] = BYTE8(__src[0]);
  *(_OWORD *)&v70[8] = __src[1];
  v70[24] = __src[2];
  *(_QWORD *)&v71 = *((_QWORD *)&__src[2] + 1);
  v21 = __src[3];
  BYTE8(v71) = __src[3];
  v72 = *(_OWORD *)((char *)&__src[3] + 8);
  *(_QWORD *)&v73 = *((_QWORD *)&__src[4] + 1);
  v22 = __src[5];
  BYTE8(v73) = __src[5];
  *(_QWORD *)&v74 = *((_QWORD *)&__src[5] + 1);
  v23 = __src[6];
  BYTE8(v74) = __src[6];
  v75 = *(_OWORD *)((char *)&__src[6] + 8);
  *(_OWORD *)((char *)&__src[7] + 9) = *(_OWORD *)&v65[9];
  __src[6] = v64;
  __src[7] = *(_OWORD *)v65;
  __src[4] = *(_OWORD *)&v62[16];
  __src[5] = v63;
  __src[2] = *(_OWORD *)&v61[16];
  __src[3] = *(_OWORD *)v62;
  __src[0] = (unint64_t)v49;
  __src[1] = *(_OWORD *)v61;
  __src[17] = v67[7];
  __src[18] = v67[8];
  __src[13] = v67[3];
  __src[14] = v67[4];
  __src[15] = v67[5];
  __src[16] = v67[6];
  __src[9] = (unint64_t)v41;
  __src[10] = v67[0];
  __src[11] = v67[1];
  __src[12] = v67[2];
  __src[26] = v73;
  __src[27] = v74;
  __src[28] = v75;
  __src[22] = *(_OWORD *)v70;
  __src[23] = *(_OWORD *)&v70[16];
  __src[24] = v71;
  __src[25] = v72;
  __src[20] = (unint64_t)v34;
  __src[21] = v69;
  v59 = 1;
  v24 = v17;
  v58 = v17;
  v56 = BYTE8(v71);
  v55 = BYTE8(v73);
  v54 = BYTE8(v74);
  memcpy(a2, __src, 0x1D0uLL);
  v77[0] = v34;
  v77[1] = 0;
  v78 = 1;
  v79 = v20;
  v80 = v24;
  v81 = v33;
  v82 = v31;
  v83 = v19;
  v84 = v29;
  v85 = v21;
  v86 = v28;
  v87 = v27;
  v88 = v26;
  v89 = v22;
  v90 = v30;
  v91 = v23;
  v92 = v32;
  v93 = v18;
  sub_10001DE08((uint64_t)v60);
  sub_10001DE7C((uint64_t)v66);
  sub_10001DE7C((uint64_t)v68);
  sub_10001DEA4((uint64_t)v77);
  v102 = *(_OWORD *)&v52[96];
  v103 = *(_OWORD *)&v52[112];
  v104 = *(_OWORD *)&v52[128];
  v98 = *(_OWORD *)&v52[32];
  v99 = *(_OWORD *)&v52[48];
  v100 = *(_OWORD *)&v52[64];
  v101 = *(_OWORD *)&v52[80];
  v96 = *(_OWORD *)v52;
  v94[0] = v41;
  v94[1] = 0;
  v95 = 1;
  v105 = *(_QWORD *)&v52[144];
  v97 = *(_OWORD *)&v52[16];
  sub_10001DEA4((uint64_t)v94);
  v106[0] = v49;
  v106[1] = 0;
  v107 = 1;
  v108 = v43;
  v109 = v38;
  v110 = v42;
  v111 = v10;
  v112 = v37;
  v113 = v45;
  v114 = v39;
  v115 = v46;
  v116 = v35;
  v117 = v47;
  v118 = v44;
  v119 = v48;
  v120 = v36;
  return sub_10001DE30((uint64_t)v106);
}

double sub_10001BBA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v10 = static HorizontalAlignment.center.getter(a1);
  v11 = swift_allocObject(&unk_10005E5B8, 48, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(double *)(v11 + 24) = a3;
  *(double *)(v11 + 32) = a4;
  *(double *)(v11 + 40) = a5;
  v12 = swift_bridgeObjectRetain(a1);
  v13 = static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(&v20, *(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, v13, v14);
  v15 = v20;
  v16 = v21;
  v17 = v22;
  v18 = v23;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = sub_10001DEFC;
  *(_QWORD *)(a2 + 32) = v11;
  *(double *)(a2 + 40) = a4 * 0.5;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v15;
  *(_BYTE *)(a2 + 64) = v16;
  *(_QWORD *)(a2 + 72) = v17;
  *(_BYTE *)(a2 + 80) = v18;
  result = *(double *)&v24;
  *(_OWORD *)(a2 + 88) = v24;
  *(double *)(a2 + 104) = a4 * 0.5;
  *(_BYTE *)(a2 + 112) = 0;
  return result;
}

void sub_10001BCB4(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[3];

  v6 = sub_100004380(&qword_100060A20);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = GeometryProxy.size.getter(v7);
  v12 = v11;
  sub_100019D60(a1, v10, a3);
  if (*(_QWORD *)(a1 + 16))
  {
    v14 = v12 / v13;
    v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppIcon(0) - 8) + 80);
    v16 = a1 + ((v15 + 32) & ~v15);
    v18 = v14 * sub_100019D60(a1, v17, a3);
    sub_100019D60(a1, v18, a3);
    v20 = v14 * v19;
    v22 = static Alignment.center.getter(v21);
    _FrameLayout.init(width:height:alignment:)(v27, *(_QWORD *)&v18, 0, *(_QWORD *)&v20, 0, v22, v23);
    sub_1000043C0(v16, (uint64_t)v9, type metadata accessor for AppIcon);
    v24 = &v9[*(int *)(v6 + 36)];
    v25 = v27[1];
    *(_OWORD *)v24 = v27[0];
    *((_OWORD *)v24 + 1) = v25;
    *((_OWORD *)v24 + 2) = v27[2];
    sub_1000047CC((uint64_t)v9, a2, &qword_100060A20);
    v26 = a2 + *(int *)(sub_100004380(&qword_100061958) + 36);
    *(_QWORD *)v26 = 0x3FF0000000000000;
    *(_WORD *)(v26 + 8) = 0;
    sub_100004810((uint64_t)v9, &qword_100060A20);
  }
  else
  {
    __break(1u);
  }
}

double sub_10001BE40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  double result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  v10 = a4 * 0.5 * 0.5;
  v11 = static HorizontalAlignment.center.getter(a1);
  v12 = swift_allocObject(&unk_10005E590, 48, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(double *)(v12 + 24) = a3;
  *(double *)(v12 + 32) = a4;
  *(double *)(v12 + 40) = a5;
  v13 = swift_bridgeObjectRetain(a1);
  v14 = static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(&v21, *(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, v14, v15);
  v16 = v21;
  v17 = v22;
  v18 = v23;
  v19 = v24;
  *(double *)a2 = v10;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 1;
  *(double *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_10001DEDC;
  *(_QWORD *)(a2 + 64) = v12;
  *(double *)(a2 + 72) = v10;
  *(_BYTE *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = v16;
  *(_BYTE *)(a2 + 96) = v17;
  *(_QWORD *)(a2 + 104) = v18;
  *(_BYTE *)(a2 + 112) = v19;
  result = *(double *)&v25;
  *(_OWORD *)(a2 + 120) = v25;
  *(double *)(a2 + 136) = v10;
  *(_BYTE *)(a2 + 144) = 0;
  return result;
}

void sub_10001BF7C(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];

  v6 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061958);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = GeometryProxy.size.getter(v10);
  v15 = v14;
  sub_100019D60(a1, v13, a3);
  if (*(_QWORD *)(a1 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v17 = v15 / v16;
    v18 = type metadata accessor for AppIcon(0);
    v19 = a1
        + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80));
    v21 = v17 * sub_100019D60(a1, v20, a3);
    sub_100019D60(a1, v21, a3);
    v23 = v17 * v22;
    v25 = static Alignment.center.getter(v24);
    _FrameLayout.init(width:height:alignment:)(v35, *(_QWORD *)&v21, 0, *(_QWORD *)&v23, 0, v25, v26);
    sub_1000043C0(v19, (uint64_t)v8, type metadata accessor for AppIcon);
    v27 = &v8[*(int *)(v6 + 36)];
    v28 = v35[1];
    *(_OWORD *)v27 = v35[0];
    *((_OWORD *)v27 + 1) = v28;
    *((_OWORD *)v27 + 2) = v35[2];
    sub_1000047CC((uint64_t)v8, (uint64_t)v12, &qword_100060A20);
    v29 = &v12[*(int *)(v9 + 36)];
    *(_QWORD *)v29 = 0x3FF0000000000000;
    *((_WORD *)v29 + 4) = 0;
    v30 = sub_100004810((uint64_t)v8, &qword_100060A20);
    v31 = static Color.black.getter(v30);
    v32.n128_u64[0] = 0x3FB999999999999ALL;
    v33 = Color.opacity(_:)(v31, v32);
    swift_release(v31);
    sub_1000047CC((uint64_t)v12, a2, &qword_100061958);
    v34 = a2 + *(int *)(sub_100004380(&qword_100061A30) + 36);
    *(_QWORD *)v34 = v33;
    *(_OWORD *)(v34 + 8) = xmmword_10004ED60;
    *(_QWORD *)(v34 + 24) = 0xBFF0000000000000;
    sub_100004810((uint64_t)v12, &qword_100061958);
  }
}

double sub_10001C1BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  double result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  v10 = a4 * 0.5;
  v11 = static HorizontalAlignment.center.getter(a1);
  v12 = swift_allocObject(&unk_10005E568, 48, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(double *)(v12 + 24) = a3;
  *(double *)(v12 + 32) = a4;
  *(double *)(v12 + 40) = a5;
  v13 = swift_bridgeObjectRetain(a1);
  v14 = static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(&v21, *(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, v14, v15);
  v16 = v21;
  v17 = v22;
  v18 = v23;
  v19 = v24;
  *(double *)a2 = v10;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 1;
  *(double *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_10001DECC;
  *(_QWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v16;
  *(_BYTE *)(a2 + 80) = v17;
  *(_QWORD *)(a2 + 88) = v18;
  *(_BYTE *)(a2 + 96) = v19;
  result = *(double *)&v25;
  *(_OWORD *)(a2 + 104) = v25;
  return result;
}

void sub_10001C2C8(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];

  v6 = sub_100004380(&qword_100060A20);
  __chkstk_darwin(v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061958);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = GeometryProxy.size.getter(v10);
  v15 = v14;
  sub_100019D60(a1, v13, a3);
  if (*(_QWORD *)(a1 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v17 = v15 / v16;
    v18 = type metadata accessor for AppIcon(0);
    v19 = a1
        + ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))
        + 2 * *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72);
    v21 = v17 * sub_100019D60(a1, v20, a3);
    sub_100019D60(a1, v21, a3);
    v23 = v17 * v22;
    v25 = static Alignment.center.getter(v24);
    _FrameLayout.init(width:height:alignment:)(v35, *(_QWORD *)&v21, 0, *(_QWORD *)&v23, 0, v25, v26);
    sub_1000043C0(v19, (uint64_t)v8, type metadata accessor for AppIcon);
    v27 = &v8[*(int *)(v6 + 36)];
    v28 = v35[1];
    *(_OWORD *)v27 = v35[0];
    *((_OWORD *)v27 + 1) = v28;
    *((_OWORD *)v27 + 2) = v35[2];
    sub_1000047CC((uint64_t)v8, (uint64_t)v12, &qword_100060A20);
    v29 = &v12[*(int *)(v9 + 36)];
    *(_QWORD *)v29 = 0x3FF0000000000000;
    *((_WORD *)v29 + 4) = 0;
    v30 = sub_100004810((uint64_t)v8, &qword_100060A20);
    v31 = static Color.black.getter(v30);
    v32.n128_u64[0] = 0x3FB999999999999ALL;
    v33 = Color.opacity(_:)(v31, v32);
    swift_release(v31);
    sub_1000047CC((uint64_t)v12, a2, &qword_100061958);
    v34 = a2 + *(int *)(sub_100004380(&qword_100061A30) + 36);
    *(_QWORD *)v34 = v33;
    *(_OWORD *)(v34 + 8) = xmmword_10004ED60;
    *(_QWORD *)(v34 + 24) = 0xBFF0000000000000;
    sub_100004810((uint64_t)v12, &qword_100061958);
  }
}

uint64_t sub_10001C508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D1>, double a4@<D3>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  double v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  _OWORD v86[2];
  __int128 v87;
  _OWORD v88[2];
  __int128 v89;
  _OWORD v90[3];

  v8 = sub_100004380(&qword_100060A20);
  v9 = __chkstk_darwin(v8);
  v10 = __chkstk_darwin(v9);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v13 = __chkstk_darwin((char *)&v77 - v12);
  v15 = (char *)&v77 - v14;
  v16 = __chkstk_darwin(v13);
  v17 = __chkstk_darwin(v16);
  v83 = (uint64_t)&v77 - v18;
  result = __chkstk_darwin(v17);
  v25 = (char *)&v77 - v24;
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
  {
    __break(1u);
    goto LABEL_7;
  }
  v82 = v20;
  v77 = a2;
  v78 = result;
  v79 = v23;
  v80 = v22;
  v81 = v21;
  v27 = *(_QWORD *)(type metadata accessor for AppIcon(0) - 8);
  v28 = a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  v30 = sub_100019D60(a1, v29, a3) * a4;
  sub_100019D60(a1, v30, a3);
  v32 = v31 * a4;
  v34 = static Alignment.center.getter(v33);
  _FrameLayout.init(width:height:alignment:)(v84, *(_QWORD *)&v30, 0, *(_QWORD *)&v32, 0, v34, v35);
  result = sub_1000043C0(v28, (uint64_t)v25, type metadata accessor for AppIcon);
  v36 = &v25[*(int *)(v8 + 36)];
  v37 = v84[1];
  *(_OWORD *)v36 = v84[0];
  *((_OWORD *)v36 + 1) = v37;
  v38 = *(double *)&v85;
  *((_OWORD *)v36 + 2) = v85;
  if (v26 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v39 = *(_QWORD *)(v27 + 72);
  v40 = sub_100019D60(a1, v38, a3) * a4;
  sub_100019D60(a1, v40, a3);
  v42 = v41 * a4;
  v44 = static Alignment.center.getter(v43);
  _FrameLayout.init(width:height:alignment:)(v86, *(_QWORD *)&v40, 0, *(_QWORD *)&v42, 0, v44, v45);
  v46 = v83;
  result = sub_1000043C0(v28 + v39, v83, type metadata accessor for AppIcon);
  v47 = (_OWORD *)(v46 + *(int *)(v8 + 36));
  v48 = v86[1];
  *v47 = v86[0];
  v47[1] = v48;
  v49 = *(double *)&v87;
  v47[2] = v87;
  if (v26 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v50 = sub_100019D60(a1, v49, a3) * a4;
  sub_100019D60(a1, v50, a3);
  v52 = v51 * a4;
  v54 = static Alignment.center.getter(v53);
  _FrameLayout.init(width:height:alignment:)(v88, *(_QWORD *)&v50, 0, *(_QWORD *)&v52, 0, v54, v55);
  v56 = v82;
  result = sub_1000043C0(v28 + 2 * v39, v82, type metadata accessor for AppIcon);
  v57 = (_OWORD *)(v56 + *(int *)(v8 + 36));
  v58 = v88[1];
  *v57 = v88[0];
  v57[1] = v58;
  v59 = *(double *)&v89;
  v57[2] = v89;
  if (v26 != 3)
  {
    v60 = sub_100019D60(a1, v59, a3) * a4;
    sub_100019D60(a1, v60, a3);
    v62 = v61 * a4;
    v64 = static Alignment.center.getter(v63);
    _FrameLayout.init(width:height:alignment:)(v90, *(_QWORD *)&v60, 0, *(_QWORD *)&v62, 0, v64, v65);
    sub_1000043C0(v28 + 3 * v39, (uint64_t)v15, type metadata accessor for AppIcon);
    v66 = &v15[*(int *)(v8 + 36)];
    v67 = v90[1];
    *(_OWORD *)v66 = v90[0];
    *((_OWORD *)v66 + 1) = v67;
    *((_OWORD *)v66 + 2) = v90[2];
    v68 = (uint64_t)v25;
    v69 = v78;
    sub_1000047CC((uint64_t)v25, v78, &qword_100060A20);
    v70 = v83;
    v71 = v79;
    sub_1000047CC(v83, v79, &qword_100060A20);
    v72 = v56;
    v73 = v80;
    sub_1000047CC(v72, v80, &qword_100060A20);
    v74 = v81;
    sub_1000047CC((uint64_t)v15, v81, &qword_100060A20);
    v75 = v77;
    sub_1000047CC(v69, v77, &qword_100060A20);
    v76 = (int *)sub_100004380(&qword_100061A38);
    sub_1000047CC(v71, v75 + v76[12], &qword_100060A20);
    sub_1000047CC(v73, v75 + v76[16], &qword_100060A20);
    sub_1000047CC(v74, v75 + v76[20], &qword_100060A20);
    sub_100004810((uint64_t)v15, &qword_100060A20);
    sub_100004810(v82, &qword_100060A20);
    sub_100004810(v70, &qword_100060A20);
    sub_100004810(v68, &qword_100060A20);
    sub_100004810(v74, &qword_100060A20);
    sub_100004810(v73, &qword_100060A20);
    sub_100004810(v71, &qword_100060A20);
    return sub_100004810(v69, &qword_100060A20);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10001CA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D1>, double a4@<D3>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __int128 v63;
  double v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  __int128 v74;
  double v75;
  uint64_t v76;
  double v77;
  double v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  __int128 v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  char *v94;
  double v95;
  double v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  __int128 v103;
  char *v104;
  Swift::String v105;
  Swift::String v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t KeyPath;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  _OWORD v214[2];
  __int128 v215;
  _OWORD v216[2];
  __int128 v217;
  _OWORD v218[2];
  __int128 v219;
  _OWORD v220[3];

  v208 = a2;
  v7 = type metadata accessor for BlendMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for DynamicTypeFont(0);
  v11 = __chkstk_darwin(v190);
  v193 = (uint64_t *)((char *)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v201 = (uint64_t)&v178 - v13;
  v14 = sub_100004380(&qword_1000613F8);
  v15 = __chkstk_darwin(v14);
  v186 = (uint64_t)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v196 = (char *)&v178 - v17;
  v18 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v18);
  v184 = (char *)&v178 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_100004380(&qword_100061230);
  __chkstk_darwin(v185);
  v191 = (char *)&v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100004380(&qword_100061A40);
  __chkstk_darwin(v187);
  v195 = (uint64_t)&v178 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_100004380(&qword_100061A48);
  __chkstk_darwin(v188);
  v197 = (uint64_t)&v178 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100004380(&qword_100061A50);
  __chkstk_darwin(v189);
  v200 = (uint64_t)&v178 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_100004380(&qword_100061A58);
  __chkstk_darwin(v194);
  v202 = (uint64_t)&v178 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100004380(&qword_100061A60);
  __chkstk_darwin(v198);
  v204 = (uint64_t)&v178 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_100004380(&qword_100061A68);
  __chkstk_darwin(v199);
  v203 = (char *)&v178 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100004380(&qword_100061A70);
  __chkstk_darwin(v27);
  v205 = (uint64_t)&v178 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for AppIcon(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v178 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v178 - v34;
  v192 = sub_100004380(&qword_100061A78);
  v36 = __chkstk_darwin(v192);
  v207 = (char *)&v178 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v206 = (uint64_t)&v178 - v38;
  v39 = sub_100004380(&qword_100060A20);
  v40 = __chkstk_darwin(v39);
  v41 = __chkstk_darwin(v40);
  v42 = __chkstk_darwin(v41);
  __chkstk_darwin(v42);
  v44 = __chkstk_darwin((char *)&v178 - v43);
  v212 = (uint64_t)&v178 - v45;
  result = __chkstk_darwin(v44);
  v52 = (char *)&v178 - v51;
  v53 = *(_QWORD *)(a1 + 16);
  if (!v53)
  {
    __break(1u);
    goto LABEL_6;
  }
  v210 = result;
  v211 = v49;
  v179 = v48;
  v180 = v47;
  v181 = v10;
  v182 = v8;
  v183 = v7;
  v54 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v55 = sub_100019D60(a1, v50, a3) * a4;
  sub_100019D60(a1, v55, a3);
  v57 = v56 * a4;
  v59 = static Alignment.center.getter(v58);
  _FrameLayout.init(width:height:alignment:)(v214, *(_QWORD *)&v55, 0, *(_QWORD *)&v57, 0, v59, v60);
  result = sub_1000043C0(v54, (uint64_t)v52, type metadata accessor for AppIcon);
  v61 = *(int *)(v39 + 36);
  v209 = v52;
  v62 = &v52[v61];
  v63 = v214[1];
  *(_OWORD *)v62 = v214[0];
  *((_OWORD *)v62 + 1) = v63;
  v64 = *(double *)&v215;
  *((_OWORD *)v62 + 2) = v215;
  if (v53 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v65 = *(_QWORD *)(v30 + 72);
  v66 = sub_100019D60(a1, v64, a3) * a4;
  sub_100019D60(a1, v66, a3);
  v68 = v67 * a4;
  v70 = static Alignment.center.getter(v69);
  _FrameLayout.init(width:height:alignment:)(v216, *(_QWORD *)&v66, 0, *(_QWORD *)&v68, 0, v70, v71);
  v72 = v212;
  result = sub_1000043C0(v54 + v65, v212, type metadata accessor for AppIcon);
  v73 = (_OWORD *)(v72 + *(int *)(v39 + 36));
  v74 = v216[1];
  *v73 = v216[0];
  v73[1] = v74;
  v75 = *(double *)&v217;
  v73[2] = v217;
  if (v53 >= 3)
  {
    v76 = v54 + 2 * v65;
    v77 = sub_100019D60(a1, v75, a3) * a4;
    sub_100019D60(a1, v77, a3);
    v79 = v78 * a4;
    v81 = static Alignment.center.getter(v80);
    _FrameLayout.init(width:height:alignment:)(v218, *(_QWORD *)&v77, 0, *(_QWORD *)&v79, 0, v81, v82);
    v83 = v210;
    sub_1000043C0(v76, v210, type metadata accessor for AppIcon);
    v84 = (_OWORD *)(v83 + *(int *)(v39 + 36));
    v85 = v218[1];
    *v84 = v218[0];
    v84[1] = v85;
    v86 = *(double *)&v219;
    v84[2] = v219;
    v87 = sub_100019D60(a1, v86, a3);
    v89 = v88;
    sub_1000043C0(v76, (uint64_t)v33, type metadata accessor for AppIcon);
    v90 = (int *)type metadata accessor for AppIconConfiguration(0);
    LOBYTE(v83) = v33[v90[7]];
    v91 = sub_10000A7A8((uint64_t)v33, type metadata accessor for AppIconConfiguration);
    v92 = static WidgetAccentedRenderingMode.fullColor.getter(v91);
    v93 = UUID.init()(v92);
    *(_QWORD *)&v35[v90[5]] = 0;
    v94 = &v35[v90[6]];
    *(double *)v94 = v87;
    *((_QWORD *)v94 + 1) = v89;
    v94[16] = 0;
    v35[v90[7]] = v83;
    v35[v90[8]] = 1;
    v95 = sub_100019D60(a1, v93, a3) * a4;
    sub_100019D60(a1, v95, a3);
    v97 = v96 * a4;
    v99 = static Alignment.center.getter(v98);
    _FrameLayout.init(width:height:alignment:)(v220, *(_QWORD *)&v95, 0, *(_QWORD *)&v97, 0, v99, v100);
    v101 = v211;
    sub_1000043C0((uint64_t)v35, v211, type metadata accessor for AppIcon);
    v102 = (_OWORD *)(v101 + *(int *)(v39 + 36));
    v103 = v220[1];
    *v102 = v220[0];
    v102[1] = v103;
    v102[2] = v220[2];
    sub_10000A7A8((uint64_t)v35, type metadata accessor for AppIcon);
    v104 = v184;
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1);
    v105._countAndFlagsBits = 0x2073756C70;
    v105._object = (void *)0xE500000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v105);
    v213 = v53 - 3;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v213, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v106._countAndFlagsBits = 0;
    v106._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v106);
    v107 = LocalizedStringKey.init(stringInterpolation:)(v104);
    v111 = Text.init(_:tableName:bundle:comment:)(v107, v109, v108 & 1, v110, 0, 0, 0, "The number of other items in this story", 39, 2);
    v113 = v112;
    v115 = v114;
    v117 = v116 & 1;
    v118 = static Font.Weight.semibold.getter(v111);
    v178 = Text.fontWeight(_:)(*(_QWORD *)&v118, 0, v111, v113, v117, v115);
    v120 = v119;
    v184 = v121;
    v123 = v122 & 1;
    sub_1000127AC(v111, v113, v117);
    v124 = swift_bridgeObjectRelease(v115);
    v125 = static Font.caption.getter(v124);
    v126 = enum case for ContentSizeCategory.large(_:);
    v127 = type metadata accessor for ContentSizeCategory(0);
    v128 = *(_QWORD *)(v127 - 8);
    v129 = (uint64_t)v196;
    (*(void (**)(char *, uint64_t, uint64_t))(v128 + 104))(v196, v126, v127);
    v130 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56);
    v130(v129, 0, 1, v127);
    v131 = v186;
    sub_1000047CC(v129, v186, &qword_1000613F8);
    KeyPath = swift_getKeyPath(&unk_10004EE08);
    v133 = (uint64_t)v193;
    *v193 = KeyPath;
    v134 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v133, v134, 0);
    v135 = v190;
    v136 = (_QWORD *)(v133 + *(int *)(v190 + 20));
    *v136 = swift_getKeyPath(&unk_10004EE38);
    v137 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v136, v137, 0);
    v138 = v133 + *(int *)(v135 + 28);
    v130(v138, 1, 1, v127);
    *(_QWORD *)(v133 + *(int *)(v135 + 24)) = v125;
    swift_retain(v125);
    sub_1000152E0(v131, v138);
    v139 = v201;
    sub_100015328(v133, v201);
    v140 = (uint64_t)v191;
    sub_1000043C0(v139, (uint64_t)&v191[*(int *)(v185 + 36)], type metadata accessor for DynamicTypeFont);
    v141 = v178;
    *(_QWORD *)v140 = v178;
    *(_QWORD *)(v140 + 8) = v120;
    *(_BYTE *)(v140 + 16) = v123;
    v142 = v184;
    *(_QWORD *)(v140 + 24) = v184;
    sub_10001265C(v141, v120, v123);
    swift_bridgeObjectRetain(v142);
    sub_10000A7A8(v139, type metadata accessor for DynamicTypeFont);
    swift_release(v125);
    sub_100004810(v129, &qword_1000613F8);
    sub_1000127AC(v141, v120, v123);
    swift_bridgeObjectRelease(v142);
    v143 = v195;
    sub_1000047CC(v140, v195, &qword_100061230);
    *(_WORD *)(v143 + *(int *)(v187 + 36)) = 256;
    sub_100004810(v140, &qword_100061230);
    v144 = swift_getKeyPath(&unk_10004EE68);
    v145 = v197;
    sub_1000047CC(v143, v197, &qword_100061A40);
    v146 = v145 + *(int *)(v188 + 36);
    *(_QWORD *)v146 = v144;
    *(_QWORD *)(v146 + 8) = 1;
    *(_BYTE *)(v146 + 16) = 0;
    sub_100004810(v143, &qword_100061A40);
    v147 = swift_getKeyPath(&unk_10004EE98);
    v148 = v200;
    sub_1000047CC(v145, v200, &qword_100061A48);
    v149 = (uint64_t *)(v148 + *(int *)(v189 + 36));
    *v149 = v147;
    v149[1] = 0xC000000000000000;
    sub_100004810(v145, &qword_100061A48);
    v150 = swift_getKeyPath(&unk_10004EEC8);
    v151 = v202;
    sub_1000047CC(v148, v202, &qword_100061A50);
    v152 = v151 + *(int *)(v194 + 36);
    *(_QWORD *)v152 = v150;
    *(_BYTE *)(v152 + 8) = 1;
    v153 = sub_100004810(v148, &qword_100061A50);
    v154 = static Color.primary.getter(v153);
    v155 = swift_getKeyPath(&unk_10004EEF8);
    v156 = v204;
    sub_1000047CC(v151, v204, &qword_100061A58);
    v157 = (uint64_t *)(v156 + *(int *)(v198 + 36));
    *v157 = v155;
    v157[1] = v154;
    sub_100004810(v151, &qword_100061A58);
    v158 = v182;
    v159 = v181;
    v160 = v183;
    (*(void (**)(char *, _QWORD, uint64_t))(v182 + 104))(v181, enum case for BlendMode.plusLighter(_:), v183);
    v161 = (uint64_t)v203;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))(&v203[*(int *)(v199 + 36)], v159, v160);
    sub_1000047CC(v156, v161, &qword_100061A60);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v159, v160);
    sub_100004810(v156, &qword_100061A60);
    v162 = v205;
    sub_1000047CC(v161, v205, &qword_100061A68);
    v163 = sub_100004810(v161, &qword_100061A68);
    v164 = static Alignment.center.getter(v163);
    v166 = v165;
    v167 = (uint64_t)v207;
    v168 = (uint64_t)&v207[*(int *)(v192 + 36)];
    sub_1000047CC(v162, v168, &qword_100061A70);
    v169 = (uint64_t *)(v168 + *(int *)(sub_100004380(&qword_100061A80) + 36));
    *v169 = v164;
    v169[1] = v166;
    v170 = v211;
    sub_1000047CC(v211, v167, &qword_100060A20);
    sub_100004810(v162, &qword_100061A70);
    sub_100004810(v170, &qword_100060A20);
    v171 = v206;
    sub_100004788(v167, v206, &qword_100061A78);
    sub_1000047CC((uint64_t)v209, v170, &qword_100060A20);
    v172 = v212;
    v173 = v179;
    sub_1000047CC(v212, v179, &qword_100060A20);
    v174 = v210;
    v175 = v180;
    sub_1000047CC(v210, v180, &qword_100060A20);
    sub_1000047CC(v171, v167, &qword_100061A78);
    v176 = v208;
    sub_1000047CC(v170, v208, &qword_100060A20);
    v177 = (int *)sub_100004380(&qword_100061A88);
    sub_1000047CC(v173, v176 + v177[12], &qword_100060A20);
    sub_1000047CC(v175, v176 + v177[16], &qword_100060A20);
    sub_1000047CC(v167, v176 + v177[20], &qword_100061A78);
    sub_100004810(v171, &qword_100061A78);
    sub_100004810(v174, &qword_100060A20);
    sub_100004810(v172, &qword_100060A20);
    sub_100004810((uint64_t)v209, &qword_100060A20);
    sub_100004810(v167, &qword_100061A78);
    sub_100004810(v175, &qword_100060A20);
    sub_100004810(v173, &qword_100060A20);
    return sub_100004810(v170, &qword_100060A20);
  }
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *sub_10001D9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100019E04(*(_QWORD *)v1, a1, *(double *)(v1 + 8), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_10001D9EC()
{
  return sub_10001DCE8((uint64_t (*)(_QWORD, double, double, double, double))sub_10001CA48);
}

unint64_t sub_10001D9F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000619A8;
  if (!qword_1000619A8)
  {
    v1 = sub_1000044A8(&qword_100061950);
    sub_10000B4D0(&qword_1000619B0, &qword_100061948, (uint64_t)&protocol conformance descriptor for LazyVGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000619A8);
  }
  return result;
}

unint64_t sub_10001DA7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000619B8;
  if (!qword_1000619B8)
  {
    v1 = sub_1000044A8(&qword_100061930);
    sub_10000B4D0(&qword_1000619C0, &qword_100061928, (uint64_t)&protocol conformance descriptor for LazyVGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000619B8);
  }
  return result;
}

uint64_t sub_10001DB00()
{
  return sub_100004880(&qword_1000619C8, &qword_100061980, (void (*)(void))sub_10001DB24, (void (*)(void))sub_10001DC14);
}

unint64_t sub_10001DB24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000619D0;
  if (!qword_1000619D0)
  {
    v1 = sub_1000044A8(&qword_100061978);
    sub_100008DD8((unint64_t *)&qword_1000609C0, type metadata accessor for AppIcon, (uint64_t)&unk_10004E1B0);
    sub_10001DBA8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000619D0);
  }
  return result;
}

unint64_t sub_10001DBA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000619D8;
  if (!qword_1000619D8)
  {
    v1 = sub_1000044A8(&qword_100061958);
    sub_10000F0E0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000619D8);
  }
  return result;
}

unint64_t sub_10001DC14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000619E0;
  if (!qword_1000619E0)
  {
    v1 = sub_1000044A8(&qword_1000619E8);
    sub_10000B4D0(&qword_1000619F0, &qword_1000619F8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_10000B4D0(&qword_100061A00, &qword_100061A08, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000619E0);
  }
  return result;
}

uint64_t sub_10001DCB8()
{
  return sub_100004880(&qword_100061A10, &qword_100061940, (void (*)(void))sub_10001D9F8, (void (*)(void))sub_10001DA7C);
}

uint64_t sub_10001DCDC()
{
  return sub_10001DCE8((uint64_t (*)(_QWORD, double, double, double, double))sub_10001C508);
}

uint64_t sub_10001DCE8(uint64_t (*a1)(_QWORD, double, double, double, double))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_10001DCFC(uint64_t result)
{
  *(_BYTE *)(result + 480) = 1;
  return result;
}

_QWORD *sub_10001DD08(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[29];
  v3 = a1[51];
  swift_retain(a1[7]);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

_QWORD *sub_10001DD50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[7];
  v3 = a1[29];
  swift_release(a1[51]);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_10001DD98(uint64_t result)
{
  *(_BYTE *)(result + 480) = 0;
  return result;
}

uint64_t sub_10001DDA0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 232);
  swift_retain(*(_QWORD *)(a1 + 56));
  swift_retain(v2);
  return a1;
}

uint64_t sub_10001DDD4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  swift_release(*(_QWORD *)(a1 + 232));
  swift_release(v2);
  return a1;
}

uint64_t sub_10001DE08(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 56));
  return a1;
}

uint64_t sub_10001DE30(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 56));
  return a1;
}

uint64_t sub_10001DE58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10001DE7C(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 88));
  return a1;
}

uint64_t sub_10001DEA4(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 88));
  return a1;
}

void sub_10001DECC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10001C2C8(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 32));
}

void sub_10001DEDC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10001BF7C(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 32));
}

void sub_10001DEFC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10001BCB4(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 32));
}

uint64_t sub_10001DF48()
{
  return sub_100004880(&qword_100061A90, &qword_100061A98, (void (*)(void))sub_10001DB00, (void (*)(void))sub_10001DCB8);
}

NSString sub_10001DF94()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100061AA0 = (uint64_t)result;
  return result;
}

char *sub_10001DFC8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  _QWORD v9[5];

  v0 = sub_100004380(&qword_100061AA8);
  v1 = (char *)swift_allocObject(v0, 48, 7);
  *((_OWORD *)v1 + 1) = xmmword_10004DFA0;
  *((_QWORD *)v1 + 4) = 0xD00000000000001DLL;
  *((_QWORD *)v1 + 5) = 0x80000001000599D0;
  if ((ASKBagContract.isArcadeSupported.getter() & 1) != 0)
  {
    v1 = sub_100032EF4((char *)1, 2, 1, v1);
    *((_QWORD *)v1 + 2) = 2;
    *((_QWORD *)v1 + 6) = 0xD000000000000020;
    *((_QWORD *)v1 + 7) = 0x8000000100059A20;
  }
  v2 = type metadata accessor for Feature(0);
  v9[3] = v2;
  v9[4] = sub_10001E128();
  v3 = sub_100008464(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, enum case for Feature.store_personalization_onboarding(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v9);
  v4 = sub_100008444(v9);
  if ((v2 & 1) != 0 && (ASKBagContract.isStorePersonalizationOnboardingEnabled.getter(v4) & 1) != 0)
  {
    v6 = *((_QWORD *)v1 + 2);
    v5 = *((_QWORD *)v1 + 3);
    if (v6 >= v5 >> 1)
      v1 = sub_100032EF4((char *)(v5 > 1), v6 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v6 + 1;
    v7 = &v1[16 * v6];
    *((_QWORD *)v7 + 4) = 0xD000000000000029;
    *((_QWORD *)v7 + 5) = 0x80000001000599F0;
  }
  return v1;
}

unint64_t sub_10001E128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061AB0;
  if (!qword_100061AB0)
  {
    v1 = type metadata accessor for Feature(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature, v1);
    atomic_store(result, (unint64_t *)&qword_100061AB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeOnboardingStep()
{
  return &type metadata for WelcomeOnboardingStep;
}

uint64_t sub_10001E184()
{
  uint64_t v0;
  uint64_t v1;
  char v3;

  v0 = type metadata accessor for SingleLineTextObserver.State(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v3 = 1;
  Published.init(initialValue:)(&v3, &type metadata for Bool);
  return v1;
}

_QWORD *sub_10001E1E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = (void *)a2[1];
    a1[1] = v8;
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for CardDetailView.Heading(0);
    swift_bridgeObjectRetain(v4);
    v13 = v8;
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v14 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
      v15 = 1;
    }
    else
    {
      v16 = v11[1];
      *v10 = *v11;
      v10[1] = v16;
      swift_bridgeObjectRetain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v15);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (_QWORD *)((char *)v7 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)v7 + v18;
    v23 = *(_QWORD *)((char *)a2 + v18);
    v24 = *(_QWORD *)((char *)a2 + v18 + 8);
    v25 = *((_BYTE *)a2 + v18 + 16);
    swift_bridgeObjectRetain(v21);
    sub_10001E3C0(v23, v24);
    *(_QWORD *)v22 = v23;
    *((_QWORD *)v22 + 1) = v24;
    v22[16] = v25;
    v26 = a3[9];
    v27 = (char *)v7 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = *((_QWORD *)v28 + 1);
    v31 = v28[16];
    sub_10001E3C0(*(_QWORD *)v28, v30);
    *(_QWORD *)v27 = v29;
    *((_QWORD *)v27 + 1) = v30;
    v27[16] = v31;
    v32 = a3[10];
    v33 = (_QWORD *)((char *)v7 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v37 = v33;
      v38 = v35;
      v39 = 1;
    }
    else
    {
      v40 = *v34;
      *v33 = *v34;
      swift_retain(v40);
      v37 = v33;
      v38 = v35;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
  }
  return v7;
}

uint64_t sub_10001E3C0(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

double sub_10001E3C8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)a1);

  v4 = a1 + a2[6];
  v5 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  sub_10001E4D8(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  sub_10001E4D8(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8));
  v7 = (_QWORD *)(a1 + a2[10]);
  v8 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10001E4D8(uint64_t a1, uint64_t a2)
{
  return swift_release(a2);
}

_QWORD *sub_10001E4E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *a2;
  v7 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for CardDetailView.Heading(0);
  swift_bridgeObjectRetain(v6);
  v12 = v7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v13 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    v14 = 1;
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    swift_bridgeObjectRetain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v14);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (char *)a1 + v17;
  v22 = *(_QWORD *)((char *)a2 + v17);
  v23 = *(_QWORD *)((char *)a2 + v17 + 8);
  v24 = *((_BYTE *)a2 + v17 + 16);
  swift_bridgeObjectRetain(v20);
  sub_10001E3C0(v22, v23);
  *(_QWORD *)v21 = v22;
  *((_QWORD *)v21 + 1) = v23;
  v21[16] = v24;
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  v30 = v27[16];
  sub_10001E3C0(*(_QWORD *)v27, v29);
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  v26[16] = v30;
  v31 = a3[10];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
    v36 = 1;
  }
  else
  {
    v37 = *v33;
    *v32 = *v33;
    swift_retain(v37);
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v32, v34, v36);
  return a1;
}

uint64_t *sub_10001E684(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a1[1];
  v9 = (void *)a2[1];
  a1[1] = (uint64_t)v9;
  v10 = v9;

  if (a1 != a2)
  {
    v11 = a3[6];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    sub_10000A7A8((uint64_t)a1 + v11, type metadata accessor for CardDetailView.Heading);
    v14 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      v17 = v13[1];
      v12[1] = v17;
      swift_bridgeObjectRetain(v17);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
  }
  v18 = a3[7];
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *((_QWORD *)v25 + 1);
  v28 = v25[16];
  sub_10001E3C0(*(_QWORD *)v25, v27);
  v29 = *(_QWORD *)v24;
  v30 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v24 = v26;
  *((_QWORD *)v24 + 1) = v27;
  v24[16] = v28;
  sub_10001E4D8(v29, v30);
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)v33;
  v35 = *((_QWORD *)v33 + 1);
  v36 = v33[16];
  sub_10001E3C0(*(_QWORD *)v33, v35);
  v37 = *(_QWORD *)v32;
  v38 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = v34;
  *((_QWORD *)v32 + 1) = v35;
  v32[16] = v36;
  sub_10001E4D8(v37, v38);
  if (a1 != a2)
  {
    v39 = a3[10];
    v40 = (uint64_t *)((char *)a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    sub_100004810((uint64_t)a1 + v39, &qword_100061118);
    v42 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
    {
      v43 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
      v44 = 1;
    }
    else
    {
      v45 = *v41;
      *v40 = *v41;
      swift_retain(v45);
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v42, v44);
  }
  return a1;
}

_QWORD *sub_10001E8A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  v15 = a3[9];
  v16 = a3[10];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  v21 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_10001EA10(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = (void *)a1[1];
  a1[1] = a2[1];

  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_10000A7A8((uint64_t)a1 + v8, type metadata accessor for CardDetailView.Heading);
    v11 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[7];
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = v21[16];
  v23 = *(_QWORD *)v20;
  v24 = *((_QWORD *)v20 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v20[16] = v22;
  sub_10001E4D8(v23, v24);
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = v27[16];
  v29 = *(_QWORD *)v26;
  v30 = *((_QWORD *)v26 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v28;
  sub_10001E4D8(v29, v30);
  if (a1 != a2)
  {
    v31 = a3[10];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    sub_100004810((uint64_t)a1 + v31, &qword_100061118);
    v34 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
    {
      v35 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload(v32, v34, 1);
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10001EBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001EBFC);
}

uint64_t sub_10001EBFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CardDetailView.Heading(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100004380(&qword_100061128);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_10001ECA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001ECAC);
}

char *sub_10001ECAC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for CardDetailView.Heading(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100004380(&qword_100061128);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for IconFallbackTodayCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100061B10;
  if (!qword_100061B10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IconFallbackTodayCardView);
  return result;
}

void sub_10001ED88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = "\b";
  v2 = type metadata accessor for CardDetailView.Heading(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_10004F048;
    v6[4] = &unk_10004F060;
    v6[5] = &unk_10004F060;
    sub_10001EE38(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

void sub_10001EE38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000611A0)
  {
    v2 = type metadata accessor for WidgetFamily(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000611A0);
  }
}

uint64_t sub_10001EE8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050A9C, 1);
}

uint64_t sub_10001EE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *a3 = static Alignment.topLeading.getter();
  a3[1] = v6;
  v7 = sub_100004380(&qword_100061B60);
  return sub_10001EEF0(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_10001EEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD v83[3];

  v72 = a2;
  v81 = a3;
  v79 = type metadata accessor for TitleView(0);
  v4 = __chkstk_darwin(v79);
  v6 = (uint64_t *)((char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v80 = (uint64_t)&v70 - v7;
  v76 = sub_100004380(&qword_100061B68);
  __chkstk_darwin(v76);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100004380(&qword_100061B70);
  __chkstk_darwin(v73);
  v75 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004380(&qword_100061B78);
  __chkstk_darwin(v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100004380(&qword_100061B80);
  v14 = __chkstk_darwin(v74);
  v70 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v71 = (uint64_t)&v70 - v16;
  v17 = type metadata accessor for WidgetFamily(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v70 - v22;
  v24 = sub_100004380(&qword_100061B88);
  v25 = __chkstk_darwin(v24);
  v78 = (uint64_t)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v77 = (char *)&v70 - v27;
  type metadata accessor for IconFallbackTodayCardView(0);
  v28 = a1;
  sub_1000466B0((uint64_t)v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v21, enum case for WidgetFamily.systemSmall(_:), v17);
  v29 = sub_100008DD8((unint64_t *)&qword_1000614C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  dispatch thunk of RawRepresentable.rawValue.getter(v83, v17, v29);
  dispatch thunk of RawRepresentable.rawValue.getter(&v82, v17, v29);
  v31 = v82;
  v30 = *(_QWORD *)&v83[0];
  v32 = *(void (**)(char *, uint64_t))(v18 + 8);
  v32(v21, v17);
  v33 = ((uint64_t (*)(char *, uint64_t))v32)(v23, v17);
  if (v30 == v31)
  {
    *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v33);
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    v34 = sub_100004380(&qword_100061BB8);
    v35 = sub_10001F534(v28, &v13[*(int *)(v34 + 44)]);
    v36 = GeometryProxy.size.getter(v35);
    GeometryProxy.size.getter(v37);
    v39 = v38;
    v41 = static Alignment.center.getter(v40);
    _FrameLayout.init(width:height:alignment:)(v83, *(_QWORD *)&v36, 0, v39, 0, v41, v42);
    v43 = v70;
    sub_1000047CC((uint64_t)v13, v70, &qword_100061B78);
    v44 = v74;
    v45 = (_OWORD *)(v43 + *(int *)(v74 + 36));
    v46 = v83[1];
    *v45 = v83[0];
    v45[1] = v46;
    v45[2] = v83[2];
    sub_100004810((uint64_t)v13, &qword_100061B78);
    v47 = &qword_100061B80;
    v48 = v71;
    sub_100004788(v43, v71, &qword_100061B80);
    v49 = v75;
    sub_1000047CC(v48, v75, &qword_100061B80);
    swift_storeEnumTagMultiPayload(v49, v73, 0);
    v50 = sub_100020328();
    v51 = sub_10000B4D0(&qword_100061BA8, &qword_100061B68, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v52 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)(v49, v44, v76, v50, v51);
    v53 = v48;
  }
  else
  {
    *(_QWORD *)v9 = static VerticalAlignment.center.getter(v33);
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 1;
    v54 = sub_100004380(&qword_100061B90);
    sub_10001FB1C(v28, (uint64_t)&v9[*(int *)(v54 + 44)]);
    v47 = &qword_100061B68;
    v55 = v75;
    sub_1000047CC((uint64_t)v9, v75, &qword_100061B68);
    swift_storeEnumTagMultiPayload(v55, v73, 1);
    v56 = sub_100020328();
    v57 = sub_10000B4D0(&qword_100061BA8, &qword_100061B68, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v52 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)(v55, v74, v76, v56, v57);
    v53 = (uint64_t)v9;
  }
  sub_100004810(v53, v47);
  *v6 = swift_getKeyPath(&unk_10004F0C8);
  v58 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v6, v58, 0);
  v59 = (int *)v79;
  v60 = (_QWORD *)((char *)v6 + *(int *)(v79 + 20));
  *v60 = swift_getKeyPath(&unk_10004F0F8);
  v61 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v60, v61, 0);
  v62 = (_QWORD *)((char *)v6 + v59[6]);
  *v62 = swift_getKeyPath(&unk_10004F128);
  v63 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v62, v63, 0);
  v64 = (_OWORD *)((char *)v6 + v59[7]);
  *v64 = 0u;
  v64[1] = 0u;
  *((_BYTE *)v6 + v59[8]) = 0;
  v65 = v80;
  sub_10000B460((uint64_t)v6, v80, type metadata accessor for TitleView);
  v66 = v78;
  sub_1000047CC(v52, v78, &qword_100061B88);
  sub_1000043C0(v65, (uint64_t)v6, type metadata accessor for TitleView);
  v67 = v81;
  sub_1000047CC(v66, v81, &qword_100061B88);
  v68 = sub_100004380(&qword_100061BB0);
  sub_1000043C0((uint64_t)v6, v67 + *(int *)(v68 + 48), type metadata accessor for TitleView);
  sub_10000A7A8(v65, type metadata accessor for TitleView);
  sub_100004810(v52, &qword_100061B88);
  sub_10000A7A8((uint64_t)v6, type metadata accessor for TitleView);
  return sub_100004810(v66, &qword_100061B88);
}

uint64_t sub_10001F534@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int16 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  unsigned __int8 v100;

  v69 = a2;
  v3 = type metadata accessor for CardDetailView(0);
  __chkstk_darwin(v3);
  v75 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100004380(&qword_100061BC0);
  __chkstk_darwin(v73);
  v74 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100004380(&qword_100061BC8);
  v6 = __chkstk_darwin(v72);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v79 = (uint64_t)&v64 - v9;
  v10 = (int *)type metadata accessor for IconFallbackTodayCardView(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v15 = static VerticalAlignment.top.getter(v13);
    sub_1000043C0(a1, (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for IconFallbackTodayCardView);
    v16 = *(unsigned __int8 *)(v11 + 80);
    v17 = (v16 + 16) & ~v16;
    v18 = swift_allocObject(&unk_10005E6B0, v17 + v12, v16 | 7);
    v19 = sub_10000B460((uint64_t)v14, v18 + v17, type metadata accessor for IconFallbackTodayCardView);
    v20 = static Edge.Set.all.getter(v19);
    v83 = (unint64_t)v15;
    *(_QWORD *)&v84 = 0;
    *((_QWORD *)&v84 + 1) = sub_100020470;
    *(_QWORD *)&v85 = v18;
    *((_QWORD *)&v85 + 1) = v20;
    __asm { FMOV            V0.2D, #16.0 }
    v86 = _Q0;
    v87 = 0uLL;
    v88 = 0;
  }
  else
  {
    v83 = xmmword_10004EFD0;
    v84 = 0u;
    v85 = 0u;
    v86 = 0u;
    v87 = 0u;
    v88 = 256;
  }
  v26 = sub_100004380(&qword_100061BD0);
  v27 = sub_1000203C0();
  _ConditionalContent<>.init(storage:)(&v83, v26, &type metadata for Spacer, v27, &protocol witness table for Spacer);
  v78 = v89;
  v71 = v90;
  v70 = v91;
  v82 = v92;
  v81 = v93;
  v28 = v95;
  v77 = v94;
  v76 = v96;
  v80 = v97;
  v68 = v98;
  v67 = v99;
  v66 = v100;
  v29 = a1 + v10[6];
  v30 = a1 + v10[8];
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  v33 = *(unsigned __int8 *)(v30 + 16);
  v34 = type metadata accessor for SingleLineTextObserver.State(0);
  v35 = sub_100008DD8((unint64_t *)&qword_100061BF0, type metadata accessor for SingleLineTextObserver.State, (uint64_t)&unk_10004EBA8);
  v36 = StateObject.wrappedValue.getter(v31, v32, v33, v34, v35);
  v37 = (uint64_t *)(a1 + v10[7]);
  v38 = *v37;
  v39 = v37[1];
  v40 = StateObject.wrappedValue.getter(*(_QWORD *)(a1 + v10[9]), *(_QWORD *)(a1 + v10[9] + 8), *(unsigned __int8 *)(a1 + v10[9] + 16), v34, v35);
  v41 = v75;
  sub_10003B614(v29, v36, v38, v39, v40, 0x8000000000000000, v75, INFINITY);
  swift_release(v36);
  swift_release(v40);
  v42 = v74;
  sub_1000043C0(v41, v74, type metadata accessor for CardDetailView);
  *(_WORD *)(v42 + *(int *)(v73 + 36)) = 256;
  sub_10000A7A8(v41, type metadata accessor for CardDetailView);
  sub_1000047CC(v42, (uint64_t)v8, &qword_100061BC0);
  *(_QWORD *)&v8[*(int *)(v72 + 36)] = 0x3FF0000000000000;
  sub_100004810(v42, &qword_100061BC0);
  v43 = v79;
  sub_100004788((uint64_t)v8, v79, &qword_100061BC8);
  sub_1000047CC(v43, (uint64_t)v8, &qword_100061BC8);
  v44 = v69;
  v45 = v71;
  *v69 = v78;
  v44[1] = v45;
  v46 = v70;
  v47 = v82;
  v44[2] = v70;
  v44[3] = v47;
  v82 = v47;
  v48 = v81;
  v49 = v77;
  v44[4] = v81;
  v44[5] = v49;
  v65 = v28;
  v50 = v76;
  v44[6] = v28;
  v44[7] = v50;
  v51 = v80;
  v44[8] = v80;
  v52 = v51;
  v80 = v51;
  v53 = v68;
  v44[9] = v68;
  LOBYTE(v41) = v67;
  *((_BYTE *)v44 + 80) = v67;
  v54 = v66;
  *((_BYTE *)v44 + 81) = v66;
  v55 = sub_100004380(&qword_100061BF8);
  sub_1000047CC((uint64_t)v8, (uint64_t)v44 + *(int *)(v55 + 48), &qword_100061BC8);
  v63 = v52;
  v56 = v78;
  v57 = v47;
  v58 = v48;
  v59 = v77;
  v60 = v65;
  v61 = v76;
  sub_100020444(v78, v45, v46, v57, v58, v77, v65, v76, v63, v53, v41, v54);
  sub_100004810(v79, &qword_100061BC8);
  sub_100004810((uint64_t)v8, &qword_100061BC8);
  return sub_100020458(v56, v45, v46, v82, v81, v59, v60, v61, v80, v53, v41, v54);
}

uint64_t sub_10001FB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double (*v34)@<D0>(uint64_t@<X8>);
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a2;
  v3 = type metadata accessor for IconFallbackTodayCardView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100004380(&qword_100061C00);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061C08);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v38 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v38 - v17;
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v16);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v19 = sub_100004380(&qword_100061C10);
  v20 = sub_10001FE30(a1, &v8[*(int *)(v19 + 44)]);
  v21 = GeometryProxy.size.getter(v20) * 0.5;
  v23 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v40, *(_QWORD *)&v21, 0, 0, 1, v23, v24);
  sub_1000047CC((uint64_t)v8, (uint64_t)v15, &qword_100061C00);
  v25 = &v15[*(int *)(v9 + 36)];
  v26 = v40[1];
  *(_OWORD *)v25 = v40[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v40[2];
  sub_100004810((uint64_t)v8, &qword_100061C00);
  sub_100004788((uint64_t)v15, (uint64_t)v18, &qword_100061C08);
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    sub_1000043C0(a1, (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for IconFallbackTodayCardView);
    v27 = *(unsigned __int8 *)(v4 + 80);
    v28 = (v27 + 16) & ~v27;
    v29 = swift_allocObject(&unk_10005E6D8, v28 + v5, v27 | 7);
    v30 = sub_10000B460((uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28, type metadata accessor for IconFallbackTodayCardView);
    v31 = static Edge.Set.all.getter(v30);
    v32 = 0x4010000000000000;
    v33 = 0x4030000000000000;
    v34 = sub_100020644;
  }
  else
  {
    v34 = 0;
    v29 = 0;
    v31 = 0;
    v33 = 0;
    v32 = 0;
  }
  sub_1000047CC((uint64_t)v18, (uint64_t)v12, &qword_100061C08);
  v35 = v39;
  sub_1000047CC((uint64_t)v12, v39, &qword_100061C08);
  v36 = v35 + *(int *)(sub_100004380(&qword_100061C18) + 48);
  *(_QWORD *)v36 = v34;
  *(_QWORD *)(v36 + 8) = v29;
  *(_QWORD *)(v36 + 16) = v31;
  *(_QWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 32) = v33;
  *(_QWORD *)(v36 + 40) = v32;
  *(_QWORD *)(v36 + 48) = 0;
  *(_BYTE *)(v36 + 56) = 0;
  sub_1000204DC((uint64_t)v34, v29);
  sub_100004810((uint64_t)v18, &qword_100061C08);
  sub_1000204EC((uint64_t)v34, v29);
  return sub_100004810((uint64_t)v12, &qword_100061C08);
}

uint64_t sub_10001FE30@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[8];

  v4 = type metadata accessor for CardDetailView(0);
  __chkstk_darwin(v4);
  v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100004380(&qword_100061BC0);
  __chkstk_darwin(v39);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100004380(&qword_100061BC8);
  v8 = __chkstk_darwin(v38);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v37 = (uint64_t)&v35 - v12;
  v13 = static Alignment.center.getter(v11);
  sub_10000FD80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v40, 0.0, 1, INFINITY, 0, v13, v14, 0, 1);
  v15 = (int *)type metadata accessor for IconFallbackTodayCardView(0);
  v35 = a1 + v15[6];
  v16 = (uint64_t *)(a1 + v15[8]);
  v17 = *v16;
  v18 = v16[1];
  v19 = *((unsigned __int8 *)v16 + 16);
  v20 = type metadata accessor for SingleLineTextObserver.State(0);
  v21 = sub_100008DD8((unint64_t *)&qword_100061BF0, type metadata accessor for SingleLineTextObserver.State, (uint64_t)&unk_10004EBA8);
  v22 = StateObject.wrappedValue.getter(v17, v18, v19, v20, v21);
  v23 = (uint64_t *)(a1 + v15[7]);
  v24 = *v23;
  v25 = v23[1];
  v26 = StateObject.wrappedValue.getter(*(_QWORD *)(a1 + v15[9]), *(_QWORD *)(a1 + v15[9] + 8), *(unsigned __int8 *)(a1 + v15[9] + 16), v20, v21);
  v27 = v36;
  sub_10003B614(v35, v22, v24, v25, v26, 0x8000000000000000, v36, INFINITY);
  swift_release(v22);
  swift_release(v26);
  sub_1000043C0(v27, (uint64_t)v7, type metadata accessor for CardDetailView);
  *(_WORD *)&v7[*(int *)(v39 + 36)] = 256;
  sub_10000A7A8(v27, type metadata accessor for CardDetailView);
  sub_1000047CC((uint64_t)v7, (uint64_t)v10, &qword_100061BC0);
  *(_QWORD *)&v10[*(int *)(v38 + 36)] = 0x3FF0000000000000;
  sub_100004810((uint64_t)v7, &qword_100061BC0);
  v28 = v37;
  sub_100004788((uint64_t)v10, v37, &qword_100061BC8);
  sub_1000047CC(v28, (uint64_t)v10, &qword_100061BC8);
  v29 = v40[5];
  a2[4] = v40[4];
  a2[5] = v29;
  v30 = v40[7];
  a2[6] = v40[6];
  a2[7] = v30;
  v31 = v40[1];
  *a2 = v40[0];
  a2[1] = v31;
  v32 = v40[3];
  a2[2] = v40[2];
  a2[3] = v32;
  v33 = sub_100004380(&qword_100061C20);
  sub_1000047CC((uint64_t)v10, (uint64_t)a2 + *(int *)(v33 + 48), &qword_100061BC8);
  sub_100004810(v28, &qword_100061BC8);
  return sub_100004810((uint64_t)v10, &qword_100061BC8);
}

double sub_100020170@<D0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double result;

  v3 = *a1;
  v4 = swift_bridgeObjectRetain(*a1);
  v5 = GeometryProxy.size.getter(v4);
  v7 = v6;
  v9 = GeometryProxy.size.getter(v8);
  if (qword_1000608A8 != -1)
    swift_once(&qword_1000608A8, sub_100012420);
  v10 = v9 - *(double *)&qword_100063340 + -12.0;
  v11 = *(double *)&qword_100063340 + 10.0;
  *(_QWORD *)a2 = v3;
  *(double *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v7;
  *(double *)(a2 + 24) = v10;
  *(double *)(a2 + 32) = v11;
  result = 7.0;
  *(_OWORD *)(a2 + 40) = xmmword_10004EFE0;
  return result;
}

uint64_t sub_100020224@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_1000043C0(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for IconFallbackTodayCardView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_10005E688, v7 + v5, v6 | 7);
  result = sub_10000B460((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for IconFallbackTodayCardView);
  *a2 = sub_1000202DC;
  a2[1] = v8;
  return result;
}

uint64_t sub_1000202DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IconFallbackTodayCardView(0) - 8) + 80);
  return sub_10001EE9C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100020328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061B98;
  if (!qword_100061B98)
  {
    v1 = sub_1000044A8(&qword_100061B80);
    sub_10000B4D0(&qword_100061BA0, &qword_100061B78, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061B98);
  }
  return result;
}

unint64_t sub_1000203C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061BD8;
  if (!qword_100061BD8)
  {
    v1 = sub_1000044A8(&qword_100061BD0);
    sub_10000B4D0(&qword_100061BE0, &qword_100061BE8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061BD8);
  }
  return result;
}

uint64_t sub_100020444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  uint64_t result;

  if ((a12 & 1) == 0)
    return swift_retain(a5);
  return result;
}

uint64_t sub_100020458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  uint64_t result;

  if ((a12 & 1) == 0)
    return swift_release(a5);
  return result;
}

void sub_100020470(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IconFallbackTodayCardView(0) - 8) + 80);
  v4 = *(_QWORD *)(v1 + ((v3 + 16) & ~v3));
  v5 = swift_bridgeObjectRetain(v4);
  v6 = GeometryProxy.size.getter(v5);
  *(_QWORD *)a1 = v4;
  *(double *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = 0x4010000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
}

uint64_t sub_1000204DC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_1000204EC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_100020500()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for IconFallbackTodayCardView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));

  v7 = v0 + v4 + v1[6];
  v8 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[7] + 8));
  sub_10001E4D8(*(_QWORD *)(v6 + v1[8]), *(_QWORD *)(v6 + v1[8] + 8));
  sub_10001E4D8(*(_QWORD *)(v6 + v1[9]), *(_QWORD *)(v6 + v1[9] + 8));
  v10 = (_QWORD *)(v6 + v1[10]);
  v11 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_100020644@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IconFallbackTodayCardView(0) - 8) + 80);
  return sub_100020170((_QWORD *)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t sub_100020690()
{
  return sub_10000B4D0(&qword_100061C28, &qword_100061C30, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t *sub_1000206BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    v23 = a3[6];
    v24 = a3[7];
    v25 = *(uint64_t *)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v23) = v25;
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    v28 = type metadata accessor for ContentSizeCategory(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_retain(v25);
    if (v30(v27, 1, v28))
    {
      v31 = sub_100004380(&qword_1000613F8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_1000208A8(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + a2[5]);
  v7 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[6]));
  v9 = (char *)a1 + a2[7];
  v10 = type metadata accessor for ContentSizeCategory(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

uint64_t *sub_1000209C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *v14;
    *v13 = *v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  v21 = a3[6];
  v22 = a3[7];
  v23 = *(uint64_t *)((char *)a2 + v21);
  *(uint64_t *)((char *)a1 + v21) = v23;
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v26 = type metadata accessor for ContentSizeCategory(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_retain(v23);
  if (v28(v25, 1, v26))
  {
    v29 = sub_100004380(&qword_1000613F8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t *sub_100020B80(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = a3[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_100004810((uint64_t)a1 + v12, &qword_100061110);
    v15 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  v21 = a3[6];
  v22 = *(uint64_t *)((char *)a2 + v21);
  v23 = *(uint64_t *)((char *)a1 + v21);
  *(uint64_t *)((char *)a1 + v21) = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for ContentSizeCategory(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_14;
  }
  if (v31)
  {
LABEL_14:
    v32 = sub_100004380(&qword_1000613F8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

char *sub_100020DB8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ContentSizeCategory(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100004380(&qword_1000613F8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

char *sub_100020F60(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100004810((uint64_t)&a1[v8], &qword_100061110);
    v11 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[6];
  v14 = *(_QWORD *)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_release(v14);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for ContentSizeCategory(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    v23 = sub_100004380(&qword_1000613F8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_100021188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100021194);
}

uint64_t sub_100021194(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061120);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100004380(&qword_1000613F8);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[7];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10002126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100021278);
}

uint64_t sub_100021278(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_100004380(&qword_100061120);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
        return result;
      }
      v10 = sub_100004380(&qword_1000613F8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for DynamicTypeFont(uint64_t a1)
{
  uint64_t result;

  result = qword_100061C90;
  if (!qword_100061C90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicTypeFont);
  return result;
}

void sub_100021388(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_10002147C(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002147C(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v8[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      sub_10002147C(319, (unint64_t *)&unk_100061CA0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_10002147C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1000214D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050AEC, 1);
}

uint64_t sub_1000214E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  __n128 v28;
  uint64_t v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  char v33;
  __n128 v34;
  uint64_t v35;
  char v36;
  __n128 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  char v48;
  __n128 v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v4 = type metadata accessor for WidgetFamily(0);
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v74 - v8;
  v10 = sub_100004380(&qword_100061348);
  __chkstk_darwin(v10);
  v77 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_1000613F8);
  __chkstk_darwin(v12);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ContentSizeCategory(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v74 - v20;
  v22 = type metadata accessor for DynamicTypeFont(0);
  sub_100021A90(v2 + *(int *)(v22 + 28), (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100004810((uint64_t)v14, &qword_1000613F8);
LABEL_22:
    swift_retain(a1);
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  sub_10004647C((uint64_t)v19);
  v23 = sub_1000112E0((uint64_t)v19, (uint64_t)v21);
  v24 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v25 = v24(v19, v15);
  if (!v23)
    goto LABEL_21;
  v26 = static Font.largeTitle.getter(v25);
  v27 = static Font.== infix(_:_:)(v26, a1);
  v28 = swift_release(v26);
  if ((v27 & 1) != 0)
    goto LABEL_10;
  v29 = static Font.title.getter(v28);
  v30 = static Font.== infix(_:_:)(v29, a1);
  v31 = swift_release(v29);
  if ((v30 & 1) != 0)
    goto LABEL_10;
  v32 = static Font.title2.getter(v31);
  v33 = static Font.== infix(_:_:)(v32, a1);
  v34 = swift_release(v32);
  if ((v33 & 1) != 0)
    goto LABEL_10;
  v35 = static Font.title3.getter(v34);
  v36 = static Font.== infix(_:_:)(v35, a1);
  v37 = swift_release(v35);
  if ((v36 & 1) != 0)
    goto LABEL_10;
  v38 = static Font.headline.getter(v37);
  v39 = static Font.== infix(_:_:)(v38, a1);
  swift_release(v38);
  if ((v39 & 1) != 0)
    goto LABEL_10;
  v41 = static Font.subheadline.getter(v40);
  v42 = static Font.== infix(_:_:)(v41, a1);
  v43 = swift_release(v41);
  if ((v42 & 1) != 0)
    goto LABEL_10;
  v47 = static Font.body.getter(v43);
  v48 = static Font.== infix(_:_:)(v47, a1);
  v49 = swift_release(v47);
  if ((v48 & 1) != 0
    || (v50 = static Font.callout.getter(v49),
        v51 = static Font.== infix(_:_:)(v50, a1),
        swift_release(v50),
        (v51 & 1) != 0))
  {
    v53 = type metadata accessor for Font.Design(0);
    v45 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v77, 1, 1, v53);
    v46 = 26.0;
    goto LABEL_11;
  }
  v54 = static Font.footnote.getter(v52);
  v55 = static Font.== infix(_:_:)(v54, a1);
  swift_release(v54);
  if ((v55 & 1) != 0)
  {
LABEL_10:
    v44 = type metadata accessor for Font.Design(0);
    v45 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v77, 1, 1, v44);
    v46 = 23.0;
LABEL_11:
    a1 = static Font.system(size:weight:design:)(0, 1, v45, v46);
    sub_100004810(v45, &qword_100061348);
    v24(v21, v15);
    return a1;
  }
  v57 = static Font.caption.getter(v56);
  v58 = static Font.== infix(_:_:)(v57, a1);
  v59 = swift_release(v57);
  if ((v58 & 1) != 0)
  {
    v60 = type metadata accessor for Font.Design(0);
    v45 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v77, 1, 1, v60);
    v46 = 10.0;
    goto LABEL_11;
  }
  v61 = static Font.caption2.getter(v59);
  v62 = static Font.== infix(_:_:)(v61, a1);
  swift_release(v61);
  if ((v62 & 1) == 0)
  {
LABEL_21:
    v24(v21, v15);
    goto LABEL_22;
  }
  v63 = (void (*)(char *, uint64_t))v24;
  sub_1000466B0((uint64_t)v9);
  v64 = v75;
  v65 = v76;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v7, enum case for WidgetFamily.systemSmall(_:), v76);
  v66 = sub_100021AD8();
  dispatch thunk of RawRepresentable.rawValue.getter(&v79, v65, v66);
  dispatch thunk of RawRepresentable.rawValue.getter(&v78, v65, v66);
  v68 = v78;
  v67 = v79;
  v69 = *(void (**)(char *, uint64_t))(v64 + 8);
  v69(v7, v65);
  v69(v9, v65);
  v70 = type metadata accessor for Font.Design(0);
  v71 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v77, 1, 1, v70);
  if (v67 == v68)
    v72 = 14.0;
  else
    v72 = 15.0;
  a1 = static Font.system(size:weight:design:)(0, 1, v71, v72);
  sub_100004810(v71, &qword_100061348);
  v63(v21, v15);
  return a1;
}

uint64_t sub_100021A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;

  v6 = sub_1000214E4(*(_QWORD *)(v3 + *(int *)(a2 + 24)));
  KeyPath = swift_getKeyPath(&unk_10004F1E0);
  v8 = sub_100004380(&qword_100061CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a3, a1, v8);
  result = sub_100004380(&qword_100061CE0);
  v10 = (uint64_t *)(a3 + *(int *)(result + 36));
  *v10 = KeyPath;
  v10[1] = v6;
  return result;
}

uint64_t sub_100021A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_1000613F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100021AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000614C8;
  if (!qword_1000614C8)
  {
    v1 = type metadata accessor for WidgetFamily(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WidgetFamily, v1);
    atomic_store(result, (unint64_t *)&qword_1000614C8);
  }
  return result;
}

unint64_t sub_100021B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061CE8;
  if (!qword_100061CE8)
  {
    v1 = sub_1000044A8(&qword_100061CE0);
    sub_10000B4D0(&qword_100061CF0, &qword_100061CD8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10000B4D0(&qword_100061398, &qword_1000613A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061CE8);
  }
  return result;
}

id sub_100021BC0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  v4 = v2;
  result = objc_msgSend((id)objc_opt_self(UIImage), "_iconVariantForUIApplicationIconFormat:scale:", 2, &v4);
  dword_100061CF8 = (int)result;
  return result;
}

void sub_100021C78()
{
  uint64_t v0;

  if (qword_1000608C8 != -1)
    swift_once(&qword_1000608C8, sub_100021BC0);
  qword_100061D00 = LIIconOutputSizeForVariant(dword_100061CF8);
  qword_100061D08 = v0;
}

void sub_100021CC8()
{
  if (qword_1000608C8 != -1)
    swift_once(&qword_1000608C8, sub_100021BC0);
  qword_100061D10 = LIIconContinuousCornerRadiusForVariant(dword_100061CF8);
}

uint64_t *sub_100021D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *__dst;
  char *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  void *v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for WidgetTodayCard(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100004380(&qword_100061D20);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v42 = v18;
      v20 = v16[1];
      *v15 = *v16;
      v15[1] = v20;
      v21 = v16[3];
      v15[2] = v16[2];
      v15[3] = v21;
      v22 = v16[5];
      v15[4] = v16[4];
      v15[5] = v22;
      *((_BYTE *)v15 + 48) = *((_BYTE *)v16 + 48);
      v24 = (void *)v16[7];
      v23 = v16[8];
      v15[7] = v24;
      v15[8] = v23;
      v41 = (void *)v16[9];
      v15[9] = v41;
      v25 = *(int *)(v17 + 44);
      __dst = (char *)v15 + v25;
      v39 = (char *)v16 + v25;
      v26 = type metadata accessor for URL(0);
      v37 = *(_QWORD *)(v26 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v22);
      v27 = v24;
      swift_bridgeObjectRetain(v23);
      v28 = v41;
      if (v40(v39, 1, v26))
      {
        v29 = sub_100004380(&qword_100061D18);
        memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v39, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v26);
      }
      v30 = *(int *)(v17 + 48);
      v31 = (char *)v15 + v30;
      v32 = (char *)v16 + v30;
      v33 = type metadata accessor for Date(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100004380(&qword_100061780);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_100021FF8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for WidgetTodayCard(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 5));

    swift_bridgeObjectRelease(*((_QWORD *)v6 + 8));
    v9 = &v6[*(int *)(v7 + 44)];
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v12 = &v6[*(int *)(v7 + 48)];
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  }
  return result;
}

uint64_t *sub_100022160(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v40;
  uint64_t *v41;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = type metadata accessor for WidgetTodayCard(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100004380(&qword_100061D20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v40 = v16;
    v41 = a1;
    v18 = v14[1];
    *v13 = *v14;
    v13[1] = v18;
    v19 = v14[3];
    v13[2] = v14[2];
    v13[3] = v19;
    v20 = v14[5];
    v13[4] = v14[4];
    v13[5] = v20;
    *((_BYTE *)v13 + 48) = *((_BYTE *)v14 + 48);
    v22 = (void *)v14[7];
    v21 = v14[8];
    v13[7] = v22;
    v13[8] = v21;
    v23 = (void *)v14[9];
    v13[9] = v23;
    v24 = *(int *)(v15 + 44);
    __dst = (char *)v13 + v24;
    v37 = (char *)v14 + v24;
    v25 = type metadata accessor for URL(0);
    v36 = *(_QWORD *)(v25 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    v26 = v22;
    swift_bridgeObjectRetain(v21);
    v27 = v23;
    if (v38(v37, 1, v25))
    {
      v28 = sub_100004380(&qword_100061D18);
      memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v37, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v25);
    }
    v29 = *(int *)(v15 + 48);
    v30 = (char *)v13 + v29;
    v31 = (char *)v14 + v29;
    v32 = type metadata accessor for Date(0);
    v33 = *(_QWORD *)(v32 - 8);
    a1 = v41;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100004380(&qword_100061780);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_10002241C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  void *__dst;
  uint64_t v76;
  _QWORD *v77;

  v5 = (_QWORD *)a1;
  if ((uint64_t *)a1 != a2)
  {
    sub_100004810(a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, a2, v7);
      v8 = v5;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *v5 = *a2;
      swift_retain(v11);
      v8 = v5;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t)v5 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for WidgetTodayCard(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_10000A7A8(v13, type metadata accessor for WidgetTodayCard);
      goto LABEL_12;
    }
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v34 = *((_QWORD *)v14 + 1);
    v35 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v13 + 8) = v34;
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRelease(v35);
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    v36 = *((_QWORD *)v14 + 3);
    v37 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v13 + 24) = v36;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRelease(v37);
    *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
    v38 = *((_QWORD *)v14 + 5);
    v39 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v38;
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRelease(v39);
    *(_BYTE *)(v13 + 48) = v14[48];
    v40 = *(void **)(v13 + 56);
    v41 = (void *)*((_QWORD *)v14 + 7);
    *(_QWORD *)(v13 + 56) = v41;
    v42 = v41;

    v43 = *((_QWORD *)v14 + 8);
    v44 = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v13 + 64) = v43;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRelease(v44);
    v45 = *(void **)(v13 + 72);
    v46 = (void *)*((_QWORD *)v14 + 9);
    *(_QWORD *)(v13 + 72) = v46;
    v47 = v46;

    v48 = *(int *)(v15 + 44);
    v49 = (void *)(v13 + v48);
    v50 = &v14[v48];
    v51 = type metadata accessor for URL(0);
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
    v54 = v53(v49, 1, v51);
    v55 = v53(v50, 1, v51);
    if (v54)
    {
      if (!v55)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_26:
        v64 = *(int *)(v15 + 48);
        v65 = (void *)(v13 + v64);
        v66 = &v14[v64];
        v67 = type metadata accessor for Date(0);
        v68 = *(_QWORD *)(v67 - 8);
        v69 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
        v70 = v69(v65, 1, v67);
        v71 = v69(v66, 1, v67);
        if (v70)
        {
          if (!v71)
          {
            (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
            return v5;
          }
        }
        else
        {
          if (!v71)
          {
            (*(void (**)(void *, char *, uint64_t))(v68 + 24))(v65, v66, v67);
            return v5;
          }
          (*(void (**)(void *, uint64_t))(v68 + 8))(v65, v67);
        }
        v31 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
        v32 = v65;
        v33 = v66;
        goto LABEL_13;
      }
    }
    else
    {
      if (!v55)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 24))(v49, v50, v51);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
    }
    v63 = sub_100004380(&qword_100061D18);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_26;
  }
  if (v19)
  {
LABEL_12:
    v31 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061D20) - 8) + 64);
    v32 = (void *)v13;
    v33 = v14;
LABEL_13:
    memcpy(v32, v33, v31);
    return v5;
  }
  v76 = v16;
  v77 = v5;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v20 = *((_QWORD *)v14 + 1);
  *(_QWORD *)(v13 + 8) = v20;
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  v21 = *((_QWORD *)v14 + 3);
  *(_QWORD *)(v13 + 24) = v21;
  *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
  v22 = *((_QWORD *)v14 + 5);
  *(_QWORD *)(v13 + 40) = v22;
  *(_BYTE *)(v13 + 48) = v14[48];
  v23 = (void *)*((_QWORD *)v14 + 7);
  *(_QWORD *)(v13 + 56) = v23;
  v24 = *((_QWORD *)v14 + 8);
  *(_QWORD *)(v13 + 64) = v24;
  v25 = (void *)*((_QWORD *)v14 + 9);
  *(_QWORD *)(v13 + 72) = v25;
  v26 = *(int *)(v15 + 44);
  __dst = (void *)(v13 + v26);
  v73 = &v14[v26];
  v27 = type metadata accessor for URL(0);
  v72 = *(_QWORD *)(v27 - 8);
  v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  v28 = v23;
  swift_bridgeObjectRetain(v24);
  v29 = v25;
  if (v74(v73, 1, v27))
  {
    v30 = sub_100004380(&qword_100061D18);
    memcpy(__dst, v73, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v72 + 16))(__dst, v73, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v27);
  }
  v56 = *(int *)(v15 + 48);
  v57 = (void *)(v13 + v56);
  v58 = &v14[v56];
  v59 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v59 - 8);
  v5 = v77;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = sub_100004380(&qword_100061780);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v13, 0, 1, v15);
  return v5;
}

char *sub_10002296C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for WidgetTodayCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_100004380(&qword_100061D20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    v9[48] = v10[48];
    *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
    *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
    v15 = *(int *)(v11 + 44);
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100004380(&qword_100061D18);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = *(int *)(v11 + 48);
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = type metadata accessor for Date(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100004380(&qword_100061780);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

char *sub_100022BC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t)&a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for WidgetTodayCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10000A7A8(v9, type metadata accessor for WidgetTodayCard);
      goto LABEL_11;
    }
    v26 = *((_QWORD *)v10 + 1);
    v27 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v26;
    swift_bridgeObjectRelease(v27);
    v28 = *((_QWORD *)v10 + 3);
    v29 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
    *(_QWORD *)(v9 + 24) = v28;
    swift_bridgeObjectRelease(v29);
    v30 = *((_QWORD *)v10 + 5);
    v31 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
    *(_QWORD *)(v9 + 40) = v30;
    swift_bridgeObjectRelease(v31);
    *(_BYTE *)(v9 + 48) = v10[48];
    v32 = *(void **)(v9 + 56);
    *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);

    v33 = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v9 + 64) = *((_QWORD *)v10 + 8);
    swift_bridgeObjectRelease(v33);
    v34 = *(void **)(v9 + 72);
    *(_QWORD *)(v9 + 72) = *((_QWORD *)v10 + 9);

    v35 = *(int *)(v11 + 44);
    v36 = (void *)(v9 + v35);
    v37 = &v10[v35];
    v38 = type metadata accessor for URL(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
    v41 = v40(v36, 1, v38);
    v42 = v40(v37, 1, v38);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_25:
        v51 = *(int *)(v11 + 48);
        v52 = (void *)(v9 + v51);
        v53 = &v10[v51];
        v54 = type metadata accessor for Date(0);
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
        v57 = v56(v52, 1, v54);
        v58 = v56(v53, 1, v54);
        if (v57)
        {
          if (!v58)
          {
            (*(void (**)(void *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
            return a1;
          }
        }
        else
        {
          if (!v58)
          {
            (*(void (**)(void *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
        }
        v23 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
        v24 = v52;
        v25 = v53;
        goto LABEL_12;
      }
    }
    else
    {
      if (!v42)
      {
        (*(void (**)(void *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
        goto LABEL_25;
      }
      (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
    }
    v50 = sub_100004380(&qword_100061D18);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  if (v15)
  {
LABEL_11:
    v23 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061D20) - 8) + 64);
    v24 = (void *)v9;
    v25 = v10;
LABEL_12:
    memcpy(v24, v25, v23);
    return a1;
  }
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_BYTE *)(v9 + 48) = v10[48];
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 72) = *((_QWORD *)v10 + 9);
  v17 = *(int *)(v11 + 44);
  v18 = (void *)(v9 + v17);
  v19 = &v10[v17];
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100004380(&qword_100061D18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v43 = *(int *)(v11 + 48);
  v44 = (void *)(v9 + v43);
  v45 = &v10[v43];
  v46 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100004380(&qword_100061780);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_10002304C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023058);
}

uint64_t sub_100023058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100004380(&qword_100061D20);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1000230D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000230E0);
}

uint64_t sub_1000230E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100004380(&qword_100061D20);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TodayWidgetSmallMediumEntryView(uint64_t a1)
{
  uint64_t result;

  result = qword_100061D80;
  if (!qword_100061D80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetSmallMediumEntryView);
  return result;
}

void sub_1000231A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_10002147C(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002147C(319, (unint64_t *)&unk_100061D90, type metadata accessor for WidgetTodayCard, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_100023254(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050B3C, 1);
}

uint64_t sub_100023264@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v26;

  v3 = sub_100004380(&qword_100061D20);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v26 - v7;
  v9 = sub_100004380(&qword_100061780);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v1 + *(int *)(type metadata accessor for TodayWidgetSmallMediumEntryView(0) + 20);
  sub_1000047CC(v16, (uint64_t)v8, &qword_100061D20);
  v17 = type metadata accessor for WidgetTodayCard(0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  if (v18(v8, 1, v17) == 1)
  {
    sub_100004810((uint64_t)v8, &qword_100061D20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_1000047CC((uint64_t)&v8[*(int *)(v17 + 48)], (uint64_t)v11, &qword_100061780);
    sub_10000A7A8((uint64_t)v8, type metadata accessor for WidgetTodayCard);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v24(v15, v11, v12);
      v24(a1, v15, v12);
      v21 = type metadata accessor for CardDetailView.Heading(0);
      v22 = a1;
      v23 = 1;
      return swift_storeEnumTagMultiPayload(v22, v21, v23);
    }
  }
  sub_100004810((uint64_t)v11, &qword_100061780);
  sub_1000047CC(v16, (uint64_t)v6, &qword_100061D20);
  if (v18(v6, 1, v17) == 1)
  {
    sub_100004810((uint64_t)v6, &qword_100061D20);
    v19 = 0;
    v20 = 0;
  }
  else
  {
    v19 = *((_QWORD *)v6 + 2);
    v20 = *((_QWORD *)v6 + 3);
    swift_bridgeObjectRetain(v20);
    sub_10000A7A8((uint64_t)v6, type metadata accessor for WidgetTodayCard);
  }
  *(_QWORD *)a1 = v19;
  *((_QWORD *)a1 + 1) = v20;
  v21 = type metadata accessor for CardDetailView.Heading(0);
  v22 = a1;
  v23 = 0;
  return swift_storeEnumTagMultiPayload(v22, v21, v23);
}

void *sub_1000234F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;

  v1 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WidgetTodayCard(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  sub_1000047CC(v0 + *(int *)(v8 + 20), (uint64_t)v3, &qword_100061D20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100004810((uint64_t)v3, &qword_100061D20);
    return 0;
  }
  else
  {
    sub_10000B460((uint64_t)v3, (uint64_t)v7, type metadata accessor for WidgetTodayCard);
    if (*(_QWORD *)(*((_QWORD *)v7 + 8) + 16) == 1)
    {
      v9 = (void *)*((_QWORD *)v7 + 9);
      v10 = v9;
    }
    else
    {
      v9 = 0;
    }
    sub_10000A7A8((uint64_t)v7, type metadata accessor for WidgetTodayCard);
  }
  return v9;
}

uint64_t sub_10002362C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  Swift::String v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[32];

  v0 = type metadata accessor for Text.DateStyle(0);
  __chkstk_darwin(v0);
  v2 = &v42[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v3);
  v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v12 = &v42[-v11];
  v13 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v13);
  v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100023264(v15);
  if (swift_getEnumCaseMultiPayload(v15, v13) == 1)
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(v12, v15, v6);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v16);
    v17 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
    static Text.DateStyle.time.getter(v17);
    v18 = Text.init(_:style:)(v10, v2);
    v20 = v19;
    v22 = v21;
    v24 = v23 & 1;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    sub_1000127AC(v18, v20, v24);
    swift_bridgeObjectRelease(v22);
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
    v26 = LocalizedStringKey.init(stringInterpolation:)(v5);
    v30 = Text.init(_:tableName:bundle:comment:)(v26, v28, v27 & 1, v29, 0, 0, 0, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    v31 = *(_QWORD *)v15;
    if (*((_QWORD *)v15 + 1))
    {
      v32 = LocalizedStringKey.init(_:)(*(_QWORD *)v15);
      return Text.init(_:tableName:bundle:comment:)(v32, v34, v33 & 1, v35, 0, 0, 0, 0, 0, 256);
    }
    else
    {
      v37 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
      return Text.init(_:tableName:bundle:comment:)(v37, v39, v38 & 1, v40, v31, 0, 0, 0, 0, 256);
    }
  }
  return v30;
}

uint64_t sub_1000238F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  sub_1000047CC(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_100061D20);
  v5 = type metadata accessor for WidgetTodayCard(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_100004810((uint64_t)v3, &qword_100061D20);
LABEL_5:
    v8 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
    return Text.init(_:tableName:bundle:comment:)(v8, v9, v10 & 1, v11, 0, 0, 0, 0, 0, 256);
  }
  v6 = *((_QWORD *)v3 + 4);
  v7 = *((_QWORD *)v3 + 5);
  swift_bridgeObjectRetain(v7);
  sub_10000A7A8((uint64_t)v3, type metadata accessor for WidgetTodayCard);
  if (!v7)
    goto LABEL_5;
  v8 = LocalizedStringKey.init(_:)(v6);
  return Text.init(_:tableName:bundle:comment:)(v8, v9, v10 & 1, v11, 0, 0, 0, 0, 0, 256);
}

uint64_t sub_100023A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  Swift::String v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[32];

  v1 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v1);
  v3 = &v35[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v4);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  sub_1000047CC(v0 + *(int *)(v7 + 20), (uint64_t)v6, &qword_100061D20);
  v8 = type metadata accessor for WidgetTodayCard(0);
  v9 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8);
  sub_100004810((uint64_t)v6, &qword_100061D20);
  if (v9 == 1)
  {
    v10 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000013, 0x8000000100059A70);
    return Text.init(_:tableName:bundle:comment:)(v10, v12, v11 & 1, v13, 0x617A696C61636F4CLL, 0xEB00000000656C62, 0, 0, 0, 256);
  }
  else
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(2, 2);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v15);
    v16 = sub_10002362C();
    v18 = v17;
    v20 = v19;
    v22 = v21 & 1;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    sub_1000127AC(v16, v18, v22);
    swift_bridgeObjectRelease(v20);
    v23._countAndFlagsBits = 8236;
    v23._object = (void *)0xE200000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v23);
    v24 = sub_1000238F0();
    v26 = v25;
    v28 = v27;
    LOBYTE(v20) = v29 & 1;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    sub_1000127AC(v24, v26, v20);
    swift_bridgeObjectRelease(v28);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v30);
    v31 = LocalizedStringKey.init(stringInterpolation:)(v3);
    return Text.init(_:tableName:bundle:comment:)(v31, v33, v32 & 1, v34, 0, 0, 0, 0, 0, 256);
  }
}

uint64_t sub_100023C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[16];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v2 = v1;
  v64 = a1;
  v3 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v3);
  v54 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  __chkstk_darwin(v5);
  v61 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ContainerBackgroundPlacement(0);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061DC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100061DC8);
  v13 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  v56 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100004380(&qword_100061DD0);
  v59 = *(_QWORD *)(v16 - 8);
  v60 = v16;
  __chkstk_darwin(v16);
  v58 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100004380(&qword_100061DD8);
  __chkstk_darwin(v18);
  v57 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002409C(v1, (uint64_t)v11);
  v21 = static ContainerBackgroundPlacement.widget.getter(v20);
  v66 = v1;
  v22 = static Alignment.center.getter(v21);
  v24 = v23;
  v25 = sub_100004380(&qword_100061DE0);
  v26 = sub_10002574C();
  v27 = sub_100025B38(&qword_100061E70, &qword_100061DE0, (void (*)(void))sub_100025BBC);
  v52 = v15;
  v28 = v25;
  v53 = v9;
  View.containerBackground<A>(for:alignment:content:)(v8, v22, v24, sub_100025714, v65, v9, v25, v26, v27);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
  sub_100004810((uint64_t)v11, &qword_100061DC0);
  v29 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  v30 = v54;
  sub_1000047CC(v2 + *(int *)(v29 + 20), v54, &qword_100061D20);
  v31 = type metadata accessor for WidgetTodayCard(0);
  LODWORD(v25) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31);
  v32 = sub_100004810(v30, &qword_100061D20);
  v33 = v61;
  if ((_DWORD)v25 == 1)
    static AccessibilityChildBehavior.contain.getter(v32);
  else
    static AccessibilityChildBehavior.combine.getter(v32);
  v67 = v53;
  v68 = v28;
  v69 = v26;
  v70 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
  v35 = v58;
  v36 = v55;
  v37 = v52;
  View.accessibilityElement(children:)(v33, v55, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v63);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v36);
  v38 = sub_100023A18();
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  v67 = v36;
  v68 = OpaqueTypeConformance2;
  v45 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v46 = (uint64_t)v57;
  v47 = v60;
  View.accessibilityLabel(_:)(v38, v40, v44, v42, v60, v45);
  sub_1000127AC(v38, v40, v44);
  swift_bridgeObjectRelease(v42);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v47);
  return sub_100004788(v46, v64, &qword_100061DD8);
}

uint64_t sub_10002409C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v68;
  char *v69;
  void *v70;
  id v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t OpaqueTypeConformance2;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  void *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  _QWORD *v129;
  uint64_t *v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  unint64_t v203;

  v200 = a2;
  v201 = a1;
  v2 = type metadata accessor for AppIcon(0);
  v163 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v163 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for IconFallbackTodayCardView(0);
  __chkstk_darwin(v165);
  v170 = (char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100004380(&qword_100061E40);
  __chkstk_darwin(v166);
  v168 = (char *)&v163 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_100004380(&qword_100061E28);
  __chkstk_darwin(v192);
  v169 = (uint64_t)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100004380(&qword_100061EC8);
  v172 = *(_QWORD *)(v193 - 8);
  v8 = __chkstk_darwin(v193);
  v167 = (char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v171 = (char *)&v163 - v10;
  v190 = sub_100004380(&qword_100061ED0);
  __chkstk_darwin(v190);
  v191 = (char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100061ED8);
  __chkstk_darwin(v12);
  v177 = (uint64_t *)((char *)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100004380(&qword_100061120);
  __chkstk_darwin(v14);
  v175 = (uint64_t *)((char *)&v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_100004380(&qword_100061128);
  __chkstk_darwin(v16);
  v174 = (uint64_t *)((char *)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v18);
  v186 = (char *)&v163 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for BrandedTodayCardView(0);
  __chkstk_darwin(v176);
  v179 = (uint64_t)&v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100004380(&qword_100061E10);
  __chkstk_darwin(v187);
  v180 = (char *)&v163 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_100004380(&qword_100061EE0);
  v182 = *(_QWORD *)(v188 - 8);
  v22 = __chkstk_darwin(v188);
  v178 = (char *)&v163 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v181 = (char *)&v163 - v24;
  v199 = sub_100004380(&qword_100061E08);
  __chkstk_darwin(v199);
  v189 = (char *)&v163 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_100004380(&qword_100061EE8);
  __chkstk_darwin(v197);
  v198 = (uint64_t)&v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ColorScheme(0);
  v194 = *(_QWORD *)(v27 - 8);
  v195 = v27;
  v28 = __chkstk_darwin(v27);
  v164 = (char *)&v163 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v173 = (char *)&v163 - v31;
  __chkstk_darwin(v30);
  v184 = (char *)&v163 - v32;
  v33 = type metadata accessor for PlaceholderTodayCardView(0);
  v34 = __chkstk_darwin(v33);
  v36 = (uint64_t *)((char *)&v163 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v34);
  v38 = (char *)&v163 - v37;
  v196 = sub_100004380(&qword_100061E68);
  v39 = __chkstk_darwin(v196);
  v41 = (char *)&v163 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v183 = (uint64_t)&v163 - v42;
  v43 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v43);
  v45 = (char *)&v163 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for WidgetTodayCard(0);
  v47 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v49 = (char *)&v163 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  sub_1000047CC(v201 + *(int *)(v50 + 20), (uint64_t)v45, &qword_100061D20);
  v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v185 = v46;
  if (v51(v45, 1, v46) == 1)
  {
    sub_100004810((uint64_t)v45, &qword_100061D20);
    *v36 = swift_getKeyPath(&unk_10004F2D0);
    v52 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v36, v52, 0);
    v53 = (_QWORD *)((char *)v36 + *(int *)(v33 + 20));
    *v53 = swift_getKeyPath(&unk_10004F300);
    v54 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v53, v54, 0);
    v55 = (_OWORD *)((char *)v36 + *(int *)(v33 + 24));
    *v55 = 0u;
    v55[1] = 0u;
    sub_10000B460((uint64_t)v36, (uint64_t)v38, type metadata accessor for PlaceholderTodayCardView);
    v57 = v194;
    v56 = v195;
    v58 = v184;
    (*(void (**)(char *, _QWORD, uint64_t))(v194 + 104))(v184, enum case for ColorScheme.dark(_:), v195);
    KeyPath = swift_getKeyPath(&unk_10004F330);
    v60 = v196;
    v61 = (uint64_t *)&v41[*(int *)(v196 + 36)];
    v62 = sub_100004380(&qword_100061598);
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v61 + *(int *)(v62 + 28), v58, v56);
    *v61 = KeyPath;
    sub_1000043C0((uint64_t)v38, (uint64_t)v41, type metadata accessor for PlaceholderTodayCardView);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
    sub_10000A7A8((uint64_t)v38, type metadata accessor for PlaceholderTodayCardView);
    v63 = v183;
    sub_100004788((uint64_t)v41, v183, &qword_100061E68);
    v64 = v198;
    sub_1000047CC(v63, v198, &qword_100061E68);
    swift_storeEnumTagMultiPayload(v64, v197, 1);
    v65 = sub_10002581C();
    v66 = sub_100025A9C();
    _ConditionalContent<>.init(storage:)(v64, v199, v60, v65, v66);
    return sub_100004810(v63, &qword_100061E68);
  }
  else
  {
    sub_10000B460((uint64_t)v45, (uint64_t)v49, type metadata accessor for WidgetTodayCard);
    v68 = (void *)*((_QWORD *)v49 + 7);
    v69 = v49;
    if (v68)
    {
      v70 = (void *)*((_QWORD *)v49 + 9);
      v71 = v70;
      v72 = v68;
      v184 = v72;
      v73 = v186;
      sub_100023264(v186);
      v75 = *((_QWORD *)v49 + 4);
      v74 = *((_QWORD *)v49 + 5);
      v76 = swift_getKeyPath(&unk_10004F300);
      v77 = (uint64_t)v174;
      *v174 = v76;
      v78 = sub_100004380(&qword_100061118);
      swift_storeEnumTagMultiPayload(v77, v78, 0);
      v79 = swift_getKeyPath(&unk_10004F2D0);
      v80 = (uint64_t)v175;
      *v175 = v79;
      v81 = sub_100004380(&qword_100061110);
      swift_storeEnumTagMultiPayload(v80, v81, 0);
      v82 = swift_getKeyPath(&unk_10004F360);
      v83 = (uint64_t)v177;
      *v177 = v82;
      v84 = sub_100004380(&qword_100061210);
      swift_storeEnumTagMultiPayload(v83, v84, 0);
      v85 = v179;
      sub_100004788(v77, v179, &qword_100061128);
      v86 = (int *)v176;
      sub_100004788(v80, v85 + *(int *)(v176 + 20), &qword_100061120);
      v87 = (_QWORD *)(v85 + v86[6]);
      *v87 = swift_getKeyPath(&unk_10004F2A0);
      v88 = sub_100004380(&qword_100060A48);
      swift_storeEnumTagMultiPayload(v87, v88, 0);
      sub_100004788(v83, v85 + v86[7], &qword_100061ED8);
      *(_QWORD *)(v85 + v86[8]) = v72;
      *(_QWORD *)(v85 + v86[9]) = v70;
      sub_10000B460((uint64_t)v73, v85 + v86[10], type metadata accessor for CardDetailView.Heading);
      v89 = (_QWORD *)(v85 + v86[11]);
      *v89 = v75;
      v89[1] = v74;
      v90 = v85 + v86[12];
      *(_QWORD *)v90 = sub_10001E180;
      *(_QWORD *)(v90 + 8) = 0;
      *(_BYTE *)(v90 + 16) = 0;
      v91 = v85 + v86[13];
      *(_QWORD *)v91 = sub_10001E180;
      *(_QWORD *)(v91 + 8) = 0;
      *(_BYTE *)(v91 + 16) = 0;
      v93 = v194;
      v92 = v195;
      if (v69[48])
        v94 = (unsigned int *)&enum case for ColorScheme.dark(_:);
      else
        v94 = (unsigned int *)&enum case for ColorScheme.light(_:);
      v95 = v173;
      (*(void (**)(char *, _QWORD, uint64_t))(v194 + 104))(v173, *v94, v195);
      v96 = swift_getKeyPath(&unk_10004F330);
      v97 = (_QWORD *)v187;
      v98 = (uint64_t)v180;
      v99 = (uint64_t *)&v180[*(int *)(v187 + 36)];
      v100 = sub_100004380(&qword_100061598);
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))((char *)v99 + *(int *)(v100 + 28), v95, v92);
      *v99 = v96;
      sub_1000043C0(v85, v98, type metadata accessor for BrandedTodayCardView);
      v101 = *(void (**)(char *, uint64_t))(v93 + 8);
      swift_bridgeObjectRetain(v74);
      v101(v95, v92);
      sub_10000A7A8(v85, type metadata accessor for BrandedTodayCardView);
      v102 = &v69[*(int *)(v185 + 44)];
      v103 = sub_1000258E0();
      v104 = v178;
      View.widgetURL(_:)(v102, v97, v103);
      sub_100004810(v98, &qword_100061E10);
      v105 = v182;
      v106 = v181;
      v107 = v188;
      (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v181, v104, v188);
      v108 = v191;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v191, v106, v107);
      swift_storeEnumTagMultiPayload(v108, v190, 0);
      v202 = v97;
      v203 = v103;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v202, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
      v110 = sub_10002597C();
      v202 = (_QWORD *)v192;
      v203 = v110;
      v111 = swift_getOpaqueTypeConformance2(&v202, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
      v112 = (uint64_t)v189;
      _ConditionalContent<>.init(storage:)(v108, v107, v193, OpaqueTypeConformance2, v111);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
    }
    else
    {
      v113 = *((_QWORD *)v49 + 8);
      v114 = *(_QWORD *)(v113 + 16);
      v115 = _swiftEmptyArrayStorage;
      if (v114)
      {
        v184 = v49;
        v202 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v113);
        sub_10002D9C0(0, v114, 0);
        v115 = v202;
        v116 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
        v117 = *(unsigned __int8 *)(v116 + 80);
        v183 = v113;
        v118 = v113 + ((v117 + 32) & ~v117);
        v119 = *(_QWORD *)(v116 + 72);
        v120 = v163;
        do
        {
          sub_1000043C0(v118, (uint64_t)v4, type metadata accessor for AppIconConfiguration);
          v202 = v115;
          v122 = v115[2];
          v121 = v115[3];
          if (v122 >= v121 >> 1)
          {
            sub_10002D9C0(v121 > 1, v122 + 1, 1);
            v120 = v163;
            v115 = v202;
          }
          v115[2] = v122 + 1;
          sub_10000B460((uint64_t)v4, (uint64_t)v115+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(_QWORD *)(v120 + 72) * v122, type metadata accessor for AppIcon);
          v118 += v119;
          --v114;
        }
        while (v114);
        swift_bridgeObjectRelease(v183);
        v69 = v184;
      }
      v123 = sub_1000234F4();
      v124 = v186;
      sub_100023264(v186);
      v126 = *((_QWORD *)v69 + 4);
      v125 = *((_QWORD *)v69 + 5);
      v127 = swift_getKeyPath(&unk_10004F300);
      v128 = (int *)v165;
      v129 = v170;
      v130 = (uint64_t *)&v170[*(int *)(v165 + 40)];
      *v130 = v127;
      v131 = sub_100004380(&qword_100061118);
      swift_storeEnumTagMultiPayload(v130, v131, 0);
      *v129 = v115;
      v129[1] = v123;
      sub_10000B460((uint64_t)v124, (uint64_t)v129 + v128[6], type metadata accessor for CardDetailView.Heading);
      v132 = (_QWORD *)((char *)v129 + v128[7]);
      *v132 = v126;
      v132[1] = v125;
      v133 = (char *)v129 + v128[8];
      *(_QWORD *)v133 = sub_10001E180;
      *((_QWORD *)v133 + 1) = 0;
      v133[16] = 0;
      v134 = (char *)v129 + v128[9];
      *(_QWORD *)v134 = sub_10001E180;
      *((_QWORD *)v134 + 1) = 0;
      v134[16] = 0;
      v136 = v194;
      v135 = v195;
      if (v69[48])
        v137 = (unsigned int *)&enum case for ColorScheme.dark(_:);
      else
        v137 = (unsigned int *)&enum case for ColorScheme.light(_:);
      v138 = v164;
      (*(void (**)(char *, _QWORD, uint64_t))(v194 + 104))(v164, *v137, v195);
      v139 = swift_getKeyPath(&unk_10004F330);
      v140 = (uint64_t)v168;
      v141 = (uint64_t *)&v168[*(int *)(v166 + 36)];
      v142 = sub_100004380(&qword_100061598);
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))((char *)v141 + *(int *)(v142 + 28), v138, v135);
      *v141 = v139;
      sub_1000043C0((uint64_t)v129, v140, type metadata accessor for IconFallbackTodayCardView);
      v143 = *(void (**)(char *, uint64_t))(v136 + 8);
      swift_bridgeObjectRetain(v125);
      v143(v138, v135);
      sub_10000A7A8((uint64_t)v129, type metadata accessor for IconFallbackTodayCardView);
      v144 = v169;
      sub_1000047CC(v140, v169, &qword_100061E40);
      v145 = (_QWORD *)v192;
      *(_WORD *)(v144 + *(int *)(v192 + 36)) = 0;
      sub_100004810(v140, &qword_100061E40);
      v146 = &v69[*(int *)(v185 + 44)];
      v147 = sub_10002597C();
      v148 = v167;
      View.widgetURL(_:)(v146, v145, v147);
      sub_100004810(v144, &qword_100061E28);
      v149 = v172;
      v150 = v171;
      v151 = v148;
      v152 = v193;
      (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v171, v151, v193);
      v153 = v191;
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v191, v150, v152);
      swift_storeEnumTagMultiPayload(v153, v190, 1);
      v154 = sub_1000258E0();
      v202 = (_QWORD *)v187;
      v203 = v154;
      v155 = swift_getOpaqueTypeConformance2(&v202, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
      v202 = v145;
      v203 = v147;
      v156 = swift_getOpaqueTypeConformance2(&v202, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
      v112 = (uint64_t)v189;
      _ConditionalContent<>.init(storage:)(v153, v188, v152, v155, v156);
      (*(void (**)(char *, uint64_t))(v149 + 8))(v150, v152);
    }
    v157 = v199;
    v158 = v197;
    v159 = v198;
    v160 = v196;
    sub_1000047CC(v112, v198, &qword_100061E08);
    swift_storeEnumTagMultiPayload(v159, v158, 0);
    v161 = sub_10002581C();
    v162 = sub_100025A9C();
    _ConditionalContent<>.init(storage:)(v159, v157, v160, v161, v162);
    sub_100004810(v112, &qword_100061E08);
    return sub_10000A7A8((uint64_t)v69, type metadata accessor for WidgetTodayCard);
  }
}

uint64_t sub_100025064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;

  v78 = a2;
  v3 = sub_100004380(&qword_100061EB8);
  __chkstk_darwin(v3);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlatterView(0);
  v7 = __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v66 - v10;
  v12 = type metadata accessor for WidgetFamily(0);
  v73 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v72 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v71 = (uint64_t)&v66 - v15;
  v74 = sub_100004380(&qword_100061EC0);
  __chkstk_darwin(v74);
  v75 = (uint64_t *)((char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100004380(&qword_100061E80);
  v18 = __chkstk_darwin(v17);
  v70 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v77 = (uint64_t)&v66 - v20;
  v21 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v21);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000047CC(a1, (uint64_t)v23, &qword_100061D20);
  v24 = type metadata accessor for WidgetTodayCard(0);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24);
  sub_100004810((uint64_t)v23, &qword_100061D20);
  if ((_DWORD)a1 == 1)
  {
    *v9 = swift_getKeyPath(&unk_10004F2A0);
    v25 = sub_100004380(&qword_100060A48);
    swift_storeEnumTagMultiPayload(v9, v25, 0);
    *((_BYTE *)v9 + *(int *)(v6 + 20)) = 0;
    sub_10000B460((uint64_t)v9, (uint64_t)v11, type metadata accessor for PlatterView);
    sub_1000043C0((uint64_t)v11, (uint64_t)v5, type metadata accessor for PlatterView);
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v26 = sub_100025BBC();
    v27 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    _ConditionalContent<>.init(storage:)(v5, v17, v6, v26, v27);
    return sub_10000A7A8((uint64_t)v11, type metadata accessor for PlatterView);
  }
  v67 = v17;
  v68 = v3;
  v29 = v6;
  v69 = v5;
  v30 = sub_1000234F4();
  if (v30)
  {
    v31 = v30;
    v32 = Color.init(uiColor:)(v31);
    if (qword_1000608A0 != -1)
      swift_once(&qword_1000608A0, sub_10001233C);
    v33 = xmmword_100063318;
    v76 = *(__int128 *)((char *)&xmmword_100063318 + 8);
    v34 = qword_100063330;
    v35 = qword_100063338;
    v36 = swift_bridgeObjectRetain(xmmword_100063318);
    v37 = static Edge.Set.all.getter(v36);
    v38 = v74;
    v39 = v75;
    *v75 = v32;
    v39[1] = v33;
    *((_OWORD *)v39 + 1) = v76;
    v39[4] = v34;
    v39[5] = v35;
    *((_BYTE *)v39 + 48) = v37;
    swift_storeEnumTagMultiPayload(v39, v38, 0);
    swift_retain(v32);
    swift_bridgeObjectRetain(v33);
    v40 = sub_100004380(&qword_100061EA0);
    v41 = sub_100025C38();
    v42 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    v43 = v77;
    v44 = v39;
    v45 = v29;
    _ConditionalContent<>.init(storage:)(v44, v40, v29, v41, v42);
    swift_bridgeObjectRelease(v33);
    swift_release(v32);

    v46 = sub_100004380(&qword_100061E90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v43, 0, 1, v46);
    goto LABEL_10;
  }
  v47 = v71;
  sub_1000466B0(v71);
  v49 = v72;
  v48 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v72, enum case for WidgetFamily.systemLarge(_:), v12);
  v50 = sub_100008DD8(&qword_100061200, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v49, v12, v50);
  v52 = *(void (**)(char *, uint64_t))(v48 + 8);
  v52(v49, v12);
  v52((char *)v47, v12);
  if ((v51 & 1) == 0)
  {
    *v9 = swift_getKeyPath(&unk_10004F2A0);
    v55 = sub_100004380(&qword_100060A48);
    swift_storeEnumTagMultiPayload(v9, v55, 0);
    v45 = v29;
    *((_BYTE *)v9 + *(int *)(v29 + 20)) = 0;
    sub_10000B460((uint64_t)v9, (uint64_t)v11, type metadata accessor for PlatterView);
    v56 = v75;
    sub_1000043C0((uint64_t)v11, (uint64_t)v75, type metadata accessor for PlatterView);
    swift_storeEnumTagMultiPayload(v56, v74, 1);
    v57 = sub_100004380(&qword_100061EA0);
    v58 = sub_100025C38();
    v59 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    v60 = (uint64_t)v70;
    _ConditionalContent<>.init(storage:)(v56, v57, v45, v58, v59);
    sub_10000A7A8((uint64_t)v11, type metadata accessor for PlatterView);
    v61 = sub_100004380(&qword_100061E90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
    v43 = v77;
    sub_100004788(v60, v77, &qword_100061E80);
LABEL_10:
    v54 = (uint64_t)v69;
    goto LABEL_11;
  }
  v53 = sub_100004380(&qword_100061E90);
  v43 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v77, 1, 1, v53);
  v54 = (uint64_t)v69;
  v45 = v29;
LABEL_11:
  v63 = v67;
  v62 = v68;
  sub_1000047CC(v43, v54, &qword_100061E80);
  swift_storeEnumTagMultiPayload(v54, v62, 0);
  v64 = sub_100025BBC();
  v65 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
  _ConditionalContent<>.init(storage:)(v54, v63, v45, v64, v65);
  return sub_100004810(v43, &qword_100061E80);
}

uint64_t sub_100025714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  return sub_100025064(v3 + *(int *)(v4 + 20), a1);
}

unint64_t sub_10002574C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061DE8;
  if (!qword_100061DE8)
  {
    v1 = sub_1000044A8(&qword_100061DC0);
    sub_1000257B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100061DE8);
  }
  return result;
}

unint64_t sub_1000257B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061DF0;
  if (!qword_100061DF0)
  {
    v1 = sub_1000044A8(&qword_100061DF8);
    sub_10002581C();
    sub_100025A9C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061DF0);
  }
  return result;
}

unint64_t sub_10002581C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  result = qword_100061E00;
  if (!qword_100061E00)
  {
    v1 = sub_1000044A8(&qword_100061E08);
    v4 = sub_1000044A8(&qword_100061E10);
    v5 = sub_1000258E0();
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    v2 = sub_1000044A8(&qword_100061E28);
    v3 = sub_10002597C();
    v4 = v2;
    v5 = v3;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061E00);
  }
  return result;
}

unint64_t sub_1000258E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061E18;
  if (!qword_100061E18)
  {
    v1 = sub_1000044A8(&qword_100061E10);
    sub_100008DD8(&qword_100061E20, type metadata accessor for BrandedTodayCardView, (uint64_t)&unk_100050180);
    sub_10000B4D0(&qword_1000615E0, &qword_100061598, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061E18);
  }
  return result;
}

unint64_t sub_10002597C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061E30;
  if (!qword_100061E30)
  {
    v1 = sub_1000044A8(&qword_100061E28);
    sub_100025A00();
    sub_10000B4D0(&qword_100061E50, &qword_100061E58, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061E30);
  }
  return result;
}

unint64_t sub_100025A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061E38;
  if (!qword_100061E38)
  {
    v1 = sub_1000044A8(&qword_100061E40);
    sub_100008DD8(&qword_100061E48, type metadata accessor for IconFallbackTodayCardView, (uint64_t)&unk_10004F078);
    sub_10000B4D0(&qword_1000615E0, &qword_100061598, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061E38);
  }
  return result;
}

unint64_t sub_100025A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061E60;
  if (!qword_100061E60)
  {
    v1 = sub_1000044A8(&qword_100061E68);
    sub_100008DD8(&qword_1000615D8, type metadata accessor for PlaceholderTodayCardView, (uint64_t)&unk_10004E408);
    sub_10000B4D0(&qword_1000615E0, &qword_100061598, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061E60);
  }
  return result;
}

uint64_t sub_100025B38(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000044A8(a2);
    a3();
    sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100025BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061E78;
  if (!qword_100061E78)
  {
    v1 = sub_1000044A8(&qword_100061E80);
    sub_100025B38(&qword_100061E88, &qword_100061E90, (void (*)(void))sub_100025C38);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100061E78);
  }
  return result;
}

unint64_t sub_100025C38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061E98;
  if (!qword_100061E98)
  {
    v1 = sub_1000044A8(&qword_100061EA0);
    sub_10000B4D0(&qword_100061EA8, &qword_100061EB0, (uint64_t)&protocol conformance descriptor for _OverlayStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061E98);
  }
  return result;
}

uint64_t sub_100025CBC()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100025CDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for WidgetRenderingMode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.widgetRenderingMode.setter(v4);
}

uint64_t sub_100025D74()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

unint64_t sub_100025D9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  result = qword_100061EF0;
  if (!qword_100061EF0)
  {
    v1 = sub_1000044A8(&qword_100061DD8);
    v2 = sub_1000044A8(&qword_100061DC8);
    v4 = sub_1000044A8(&qword_100061DC0);
    v5 = sub_1000044A8(&qword_100061DE0);
    v6 = sub_10002574C();
    v7 = sub_100025B38(&qword_100061E70, &qword_100061DE0, (void (*)(void))sub_100025BBC);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100008DD8(&qword_100061EF8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100061EF0);
  }
  return result;
}

uint64_t sub_100025EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100025EF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetKind(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100025F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100025F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100025FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100025FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100026034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100026040);
}

uint64_t sub_100026040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10002607C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100026088);
}

uint64_t sub_100026088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetKind(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TodayWidgetTimelineProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_100061F88;
  if (!qword_100061F88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetTimelineProvider);
  return result;
}

uint64_t sub_100026104(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetKind(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10002616C()
{
  return sub_100008DD8(qword_100061FC0, type metadata accessor for TodayWidgetEntry, (uint64_t)&unk_10004EAA0);
}

void sub_100026198(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_1000261F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = type metadata accessor for TimelineReloadPolicy(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100004380(&qword_100061FF0);
  sub_100005660(v3, qword_100063348);
  sub_1000056A0(v3, (uint64_t)qword_100063348);
  v4 = sub_100004380(&qword_100061FF8);
  v5 = type metadata accessor for TodayWidgetEntry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(v4, v9 + v7, v8 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_10004DFA0;
  if (qword_1000608F0 != -1)
    swift_once(&qword_1000608F0, sub_10002D3F8);
  v11 = sub_1000056A0(v5, (uint64_t)qword_100061F18);
  v12 = sub_1000043C0(v11, v10 + v9, type metadata accessor for TodayWidgetEntry);
  static TimelineReloadPolicy.never.getter(v12);
  v13 = sub_100008DD8(qword_100061FC0, type metadata accessor for TodayWidgetEntry, (uint64_t)&unk_10004EAA0);
  return Timeline.init(entries:policy:)(v10, v2, v5, v13);
}

uint64_t sub_100026360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  _BYTE *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  void *v61;
  _QWORD *v62;
  uint64_t v63;
  Swift::String v64;
  uint64_t v65;
  char v66;
  Swift::String v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  uint64_t v73;
  char v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const char *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  const char *v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  const char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  _QWORD v151[3];
  void *v152;
  void *v153;

  v139 = a3;
  v148 = a2;
  v4 = type metadata accessor for TodayWidgetTimelineProvider(0);
  v137 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v147 = v5;
  v150 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for TimelineProviderContext(0);
  v138 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v136 = v6;
  v144 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for OSLogger(0);
  v142 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v133 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004380(&qword_100061FD8);
  __chkstk_darwin(v11);
  v13 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WidgetFamily(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v130 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v129 - v18;
  v129 = type metadata accessor for Trace(0);
  v131 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v135 = (uint64_t)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v129 - v22;
  v25 = TimelineProviderContext.isPreview.getter(v24);
  v26 = v25;
  v27 = v25 & 1;
  v143 = a1;
  TimelineProviderContext.family.getter(v25);
  v28 = &v13[*(int *)(v11 + 48)];
  *v13 = v27;
  (*(void (**)(_BYTE *, char *, uint64_t))(v15 + 32))(v28, v19, v14);
  v140 = (void *)v14;
  v141 = v15;
  v29 = (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 88))(v28, v14);
  v30 = v29;
  if ((v26 & 1) != 0)
  {
    if (v29 == enum case for WidgetFamily.systemSmall(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v31 = static SignpostAggregator.log.getter();
      v32 = OSSignpostID.init(log:)(v31);
      v33 = static os_signpost_type_t.begin.getter(v32);
      v34 = (void *)static SignpostAggregator.log.getter();
      v35 = "TodayWidget:getTimeline (small, preview)";
      v36 = 40;
      v37 = v33;
      v38 = v34;
      v39 = "TodayWidget:getTimeline (small, preview)";
      v40 = 40;
LABEL_10:
      os_signpost(_:dso:log:name:signpostID:)(v37, &_mh_execute_header, v38, v39, v40, 2);

      v50 = &v23[*(int *)(v129 + 20)];
      *(_QWORD *)v50 = v35;
      *((_QWORD *)v50 + 1) = v36;
      v50[16] = 2;
      goto LABEL_11;
    }
    if (v29 == enum case for WidgetFamily.systemMedium(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v44 = static SignpostAggregator.log.getter();
      v45 = OSSignpostID.init(log:)(v44);
      v46 = static os_signpost_type_t.begin.getter(v45);
      v34 = (void *)static SignpostAggregator.log.getter();
      v35 = "TodayWidget:getTimeline (medium, preview)";
      v36 = 41;
      v37 = v46;
      v38 = v34;
      v39 = "TodayWidget:getTimeline (medium, preview)";
      v40 = 41;
      goto LABEL_10;
    }
    v105 = v28;
    v106 = enum case for WidgetFamily.systemLarge(_:);
    type metadata accessor for SignpostAggregator(0);
    v107 = static SignpostAggregator.log.getter();
    v108 = OSSignpostID.init(log:)(v107);
    v109 = static os_signpost_type_t.begin.getter(v108);
    v110 = (void *)static SignpostAggregator.log.getter();
    if (v30 == v106)
    {
      v111 = "TodayWidget:getTimeline (large, preview)";
      v112 = 40;
      v113 = v109;
      v114 = v110;
      v115 = "TodayWidget:getTimeline (large, preview)";
      v116 = 40;
LABEL_18:
      os_signpost(_:dso:log:name:signpostID:)(v113, &_mh_execute_header, v114, v115, v116, 2);

      v121 = &v23[*(int *)(v129 + 20)];
      *(_QWORD *)v121 = v111;
      *((_QWORD *)v121 + 1) = v112;
      v121[16] = 2;
      goto LABEL_11;
    }
    v122 = "TodayWidget:getTimeline (unknown family, preview)";
    v123 = 49;
    v124 = v109;
    v125 = v110;
    v126 = "TodayWidget:getTimeline (unknown family, preview)";
    v127 = 49;
  }
  else
  {
    if (v29 == enum case for WidgetFamily.systemSmall(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v41 = static SignpostAggregator.log.getter();
      v42 = OSSignpostID.init(log:)(v41);
      v43 = static os_signpost_type_t.begin.getter(v42);
      v34 = (void *)static SignpostAggregator.log.getter();
      v35 = "TodayWidget:getTimeline (small)";
      v36 = 31;
      v37 = v43;
      v38 = v34;
      v39 = "TodayWidget:getTimeline (small)";
      v40 = 31;
      goto LABEL_10;
    }
    if (v29 == enum case for WidgetFamily.systemMedium(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v47 = static SignpostAggregator.log.getter();
      v48 = OSSignpostID.init(log:)(v47);
      v49 = static os_signpost_type_t.begin.getter(v48);
      v34 = (void *)static SignpostAggregator.log.getter();
      v35 = "TodayWidget:getTimeline (medium)";
      v36 = 32;
      v37 = v49;
      v38 = v34;
      v39 = "TodayWidget:getTimeline (medium)";
      v40 = 32;
      goto LABEL_10;
    }
    v105 = v28;
    v117 = enum case for WidgetFamily.systemLarge(_:);
    type metadata accessor for SignpostAggregator(0);
    v118 = static SignpostAggregator.log.getter();
    v119 = OSSignpostID.init(log:)(v118);
    v120 = static os_signpost_type_t.begin.getter(v119);
    v110 = (void *)static SignpostAggregator.log.getter();
    if (v30 == v117)
    {
      v111 = "TodayWidget:getTimeline (large)";
      v112 = 31;
      v113 = v120;
      v114 = v110;
      v115 = "TodayWidget:getTimeline (large)";
      v116 = 31;
      goto LABEL_18;
    }
    v122 = "TodayWidget:getTimeline (unknown family)";
    v123 = 40;
    v124 = v120;
    v125 = v110;
    v126 = "TodayWidget:getTimeline (unknown family)";
    v127 = 40;
  }
  os_signpost(_:dso:log:name:signpostID:)(v124, &_mh_execute_header, v125, v126, v127, 2);

  v128 = &v23[*(int *)(v129 + 20)];
  *(_QWORD *)v128 = v122;
  *((_QWORD *)v128 + 1) = v123;
  v128[16] = 2;
  (*(void (**)(_BYTE *, void *))(v141 + 8))(v105, v140);
LABEL_11:
  v149 = v23;
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v51 = v134;
  v52 = sub_1000056A0(v134, (uint64_t)qword_100063238);
  v53 = v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v133, v52, v51);
  v54 = sub_100004380(&qword_100060BA0);
  v55 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v56 = *(_QWORD *)(v55 + 72);
  v57 = *(unsigned __int8 *)(v55 + 80);
  v58 = (v57 + 32) & ~v57;
  v59 = swift_allocObject(v54, v58 + v56, v57 | 7);
  *(_OWORD *)(v59 + 16) = xmmword_10004DFA0;
  v129 = v59 + v58;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(69, 4);
  v60._countAndFlagsBits = 0x6C656D6954746567;
  v60._object = (void *)0xEC00000028656E69;
  LogMessage.StringInterpolation.appendLiteral(_:)(v60);
  v61 = v140;
  v152 = v140;
  v62 = sub_100008464(v151);
  v63 = v143;
  TimelineProviderContext.family.getter(v62);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v151);
  sub_100004810((uint64_t)v151, &qword_100060BA8);
  v64._countAndFlagsBits = 44;
  v64._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v64);
  v66 = TimelineProviderContext.isPreview.getter(v65);
  v152 = &type metadata for Bool;
  LOBYTE(v151[0]) = v66 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v151);
  sub_100004810((uint64_t)v151, &qword_100060BA8);
  v67._object = (void *)0x8000000100059AC0;
  v67._countAndFlagsBits = 0xD00000000000002BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v67);
  v68 = v130;
  v70 = TimelineProviderContext.family.getter(v69);
  v71 = WidgetFamily.rawValue.getter(v70);
  (*(void (**)(char *, void *))(v141 + 8))(v68, v61);
  v152 = &type metadata for Int;
  v151[0] = v71;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v151);
  sub_100004810((uint64_t)v151, &qword_100060BA8);
  v72._countAndFlagsBits = 0x766572507369202CLL;
  v72._object = (void *)0xED0000203A776569;
  LogMessage.StringInterpolation.appendLiteral(_:)(v72);
  v74 = TimelineProviderContext.isPreview.getter(v73);
  v152 = &type metadata for Bool;
  LOBYTE(v151[0]) = v74 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v151);
  sub_100004810((uint64_t)v151, &qword_100060BA8);
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v75);
  LogMessage.init(stringInterpolation:)(v9);
  Logger.info(_:)(v59, v51, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v59);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v53, v51);
  v76 = v145;
  v77 = sub_1000307D4(v63, 0, v145);
  v78 = v138;
  v141 = *(_QWORD *)(v138 + 16);
  v142 = v77;
  v79 = v144;
  ((void (*)(void))v141)();
  sub_1000043C0(v76, v150, type metadata accessor for TodayWidgetTimelineProvider);
  v80 = v135;
  sub_1000043C0((uint64_t)v149, v135, type metadata accessor for Trace);
  v81 = *(unsigned __int8 *)(v78 + 80);
  v82 = (v81 + 16) & ~v81;
  v140 = (void *)(v82 + v136);
  v134 = v82;
  v83 = *(unsigned __int8 *)(v137 + 80);
  v84 = (v82 + v136 + v83) & ~v83;
  v85 = *(unsigned __int8 *)(v131 + 80);
  v86 = (v147 + v85 + v84) & ~v85;
  v137 = v81 | v83 | v85 | 7;
  v136 = v132 + 7;
  v87 = (v132 + 7 + v86) & 0xFFFFFFFFFFFFFFF8;
  v88 = swift_allocObject(&unk_10005E7F0, v87 + 16, v137);
  v89 = v88 + v82;
  v138 = *(_QWORD *)(v78 + 32);
  v90 = v79;
  v91 = v146;
  ((void (*)(uint64_t, char *, uint64_t))v138)(v89, v79, v146);
  v92 = v150;
  sub_10000B460(v150, v88 + v84, type metadata accessor for TodayWidgetTimelineProvider);
  sub_10000B460(v80, v88 + v86, type metadata accessor for Trace);
  v93 = (_QWORD *)(v88 + v87);
  v94 = v139;
  *v93 = v148;
  v93[1] = v94;
  ((void (*)(char *, uint64_t, uint64_t))v141)(v90, v143, v91);
  sub_1000043C0((uint64_t)v149, v80, type metadata accessor for Trace);
  sub_1000043C0(v145, v92, type metadata accessor for TodayWidgetTimelineProvider);
  v95 = ((unint64_t)v140 + v85) & ~v85;
  v96 = (v136 + v95) & 0xFFFFFFFFFFFFFFF8;
  v97 = (v83 + v96 + 16) & ~v83;
  v98 = swift_allocObject(&unk_10005E818, v97 + v147, v137);
  ((void (*)(uint64_t, char *, uint64_t))v138)(v98 + v134, v144, v91);
  sub_10000B460(v80, v98 + v95, type metadata accessor for Trace);
  v99 = (_QWORD *)(v98 + v96);
  *v99 = v148;
  v99[1] = v94;
  sub_10000B460(v150, v98 + v97, type metadata accessor for TodayWidgetTimelineProvider);
  v100 = sub_100008218();
  v101 = swift_retain_n(v94, 2);
  v102 = static OS_dispatch_queue.main.getter(v101);
  v152 = (void *)v100;
  v153 = &protocol witness table for OS_dispatch_queue;
  v151[0] = v102;
  v103 = v142;
  Promise.then(perform:orCatchError:on:)(sub_10002D0C4, v88, sub_10002D28C, v98, v151);
  swift_release(v103);
  swift_release(v88);
  swift_release(v98);
  sub_100008444(v151);
  return sub_10000A7A8((uint64_t)v149, type metadata accessor for Trace);
}

uint64_t sub_100026E54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  Swift::String v63;
  _QWORD *v64;
  Swift::String v65;
  char v66;
  uint64_t v67;
  Swift::String v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  Swift::String v78;
  _QWORD *v79;
  Swift::String v80;
  char v81;
  Swift::String v82;
  _QWORD *v83;
  Swift::String v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  Swift::String v93;
  _QWORD *v94;
  Swift::String v95;
  char v96;
  Swift::String v97;
  int64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  Swift::String v114;
  _QWORD *v115;
  Swift::String v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  char *v126;
  Swift::String v127;
  _QWORD *v128;
  Swift::String v129;
  char v130;
  Swift::String v131;
  uint64_t v132;
  Swift::String v133;
  _QWORD *v134;
  Swift::String v135;
  char v136;
  Swift::String v137;
  _QWORD *v138;
  Swift::String v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char v146;
  void (*v147)(char *, uint64_t);
  char *v148;
  unint64_t v149;
  char *v150;
  char *v151;
  char v152;
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t, uint64_t);
  uint64_t v161;
  char *v162;
  Swift::String v163;
  _QWORD *v164;
  Swift::String v165;
  char v166;
  Swift::String v167;
  uint64_t v168;
  Swift::String v169;
  _QWORD *v170;
  Swift::String v171;
  char v172;
  Swift::String v173;
  _QWORD *v174;
  char *v175;
  Swift::String v176;
  void (*v177)(char *, uint64_t);
  id v178;
  Class isa;
  NSString v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  char *v184;
  uint64_t v186;
  char *v187;
  char *v188;
  _QWORD *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(char *);
  char *v201;
  void *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(char *, uint64_t, uint64_t);
  _QWORD *v217;
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, uint64_t);
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  void *v229;
  void (*v230)(char *, uint64_t);
  uint64_t v231;
  uint64_t v232;
  _QWORD v233[2];
  void *v234;

  v199 = a6;
  v200 = a5;
  v198 = a4;
  v192 = a3;
  v8 = type metadata accessor for TimelineReloadPolicy(0);
  __chkstk_darwin(v8);
  v193 = (char *)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetTodayCard(0);
  v203 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100004380(&qword_100061780);
  __chkstk_darwin(v13);
  v191 = (uint64_t)&v186 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v228 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v187 = (char *)&v186 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v188 = (char *)&v186 - v19;
  v20 = __chkstk_darwin(v18);
  v195 = (char *)&v186 - v21;
  v22 = __chkstk_darwin(v20);
  v190 = (char *)&v186 - v23;
  __chkstk_darwin(v22);
  v194 = (char *)&v186 - v24;
  v197 = sub_100004380(&qword_100061FF0);
  v196 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v201 = (char *)&v186 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for LogMessage.StringInterpolation(0);
  v27 = __chkstk_darwin(v26);
  v227 = (char *)&v186 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v204 = (char *)&v186 - v29;
  v232 = type metadata accessor for OSLogger(0);
  v214 = *(_QWORD *)(v232 - 8);
  v30 = __chkstk_darwin(v232);
  v226 = (char *)&v186 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v205 = (char *)&v186 - v32;
  v225 = type metadata accessor for TodayWidgetCardCollection(0);
  v33 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v35 = (char *)&v186 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TodayWidgetEntry(0);
  v230 = *(void (**)(char *, uint64_t))(v36 - 8);
  v231 = v36;
  v37 = __chkstk_darwin(v36);
  v207 = (char *)&v186 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v40 = (char *)&v186 - v39;
  v189 = a1;
  v41 = *a1;
  v42 = *(_QWORD *)(v41 + 16);
  v229 = (void *)v15;
  v206 = a2;
  if (v42)
  {
    v233[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v41);
    sub_10002DA50(0, v42, 0);
    v43 = v228;
    v44 = v41 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    v45 = *(void (**)(char *, uint64_t))(v33 + 72);
    v223 = v41;
    v224 = v45;
    do
    {
      sub_1000043C0(v44, (uint64_t)v35, type metadata accessor for TodayWidgetCardCollection);
      (*(void (**)(char *, char *, void *))(v43 + 16))(v40, &v35[*(int *)(v225 + 20)], v229);
      v46 = *(_QWORD *)v35;
      v47 = &v40[*(int *)(v231 + 20)];
      *((_QWORD *)v47 + 2) = 0;
      *((_QWORD *)v47 + 3) = 0;
      *(_QWORD *)v47 = v46;
      *((_QWORD *)v47 + 1) = 0;
      swift_bridgeObjectRetain(v46);
      sub_10000A7A8((uint64_t)v35, type metadata accessor for TodayWidgetCardCollection);
      v48 = (_QWORD *)v233[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v233[0]) & 1) == 0)
      {
        sub_10002DA50(0, v48[2] + 1, 1);
        v43 = v228;
        v48 = (_QWORD *)v233[0];
      }
      v50 = v48[2];
      v49 = v48[3];
      if (v50 >= v49 >> 1)
      {
        sub_10002DA50(v49 > 1, v50 + 1, 1);
        v43 = v228;
        v48 = (_QWORD *)v233[0];
      }
      v48[2] = v50 + 1;
      sub_10000B460((uint64_t)v40, (uint64_t)v48+ ((*((unsigned __int8 *)v230 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v230 + 80))+ *((_QWORD *)v230 + 9) * v50, type metadata accessor for TodayWidgetEntry);
      v44 += (uint64_t)v224;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease(v223);
    v15 = (uint64_t)v229;
  }
  else
  {
    v48 = _swiftEmptyArrayStorage;
  }
  v217 = v48;
  if (qword_100060850 != -1)
    goto LABEL_39;
  while (1)
  {
    v51 = v232;
    v52 = sub_1000056A0(v232, (uint64_t)qword_100063238);
    v53 = v214;
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v214 + 16);
    v55 = v205;
    v223 = v52;
    v216 = v54;
    ((void (*)(char *))v54)(v205);
    v56 = sub_100004380(&qword_100060BA0);
    v57 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v58 = *(_QWORD *)(v57 + 72);
    v59 = *(unsigned __int8 *)(v57 + 80);
    v60 = (v59 + 32) & ~v59;
    v222 = v56;
    v219 = v59 | 7;
    v220 = v60 + v58;
    v61 = swift_allocObject(v56, v60 + v58, v59 | 7);
    v218 = xmmword_10004DFA0;
    *(_OWORD *)(v61 + 16) = xmmword_10004DFA0;
    v215 = v60;
    v62 = v204;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2);
    v63._countAndFlagsBits = 0x6C656D6954746567;
    v63._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v63);
    v221 = type metadata accessor for WidgetFamily(0);
    v234 = (void *)v221;
    v64 = sub_100008464(v233);
    TimelineProviderContext.family.getter(v64);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v65._countAndFlagsBits = 44;
    v65._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v65);
    v66 = TimelineProviderContext.isPreview.getter();
    v234 = &type metadata for Bool;
    LOBYTE(v233[0]) = v66 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    v67 = v206;
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v68._countAndFlagsBits = 0xD000000000000017;
    v68._object = (void *)0x8000000100059E40;
    LogMessage.StringInterpolation.appendLiteral(_:)(v68);
    LogMessage.init(stringInterpolation:)(v62);
    Logger.info(_:)(v61, v51, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v61);
    v69 = v55;
    v70 = v67;
    v224 = *(void (**)(char *, uint64_t))(v53 + 8);
    v224(v69, v51);
    v71 = (uint64_t)v217;
    v214 = v217[2];
    if (!v214)
      break;
    v213 = (char *)v217
         + ((*((unsigned __int8 *)v230 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v230 + 80));
    swift_bridgeObjectRetain(v217);
    v72 = 0;
    v202 = (void *)0x8000000100059EF0;
    v73 = (uint64_t)v207;
    while (v72 < *(_QWORD *)(v71 + 16))
    {
      sub_1000043C0((uint64_t)&v213[*((_QWORD *)v230 + 9) * v72], v73, type metadata accessor for TodayWidgetEntry);
      v88 = (uint64_t *)(v73 + *(int *)(v231 + 20));
      v89 = v88[2];
      if (v89 < 0)
      {
        v74 = v205;
        v216(v205, v223, v232);
        v75 = swift_allocObject(v222, v220, v219);
        *(_OWORD *)(v75 + 16) = v218;
        v225 = v75 + v215;
        v76 = v70;
        v77 = v204;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(46, 3);
        v78._countAndFlagsBits = 0x6C656D6954746567;
        v78._object = (void *)0xEC00000028656E69;
        LogMessage.StringInterpolation.appendLiteral(_:)(v78);
        v234 = (void *)v221;
        v79 = sub_100008464(v233);
        TimelineProviderContext.family.getter(v79);
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v80._countAndFlagsBits = 44;
        v80._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v80);
        v81 = TimelineProviderContext.isPreview.getter();
        v234 = &type metadata for Bool;
        LOBYTE(v233[0]) = v81 & 1;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v82._countAndFlagsBits = 0xD000000000000021;
        v82._object = v202;
        LogMessage.StringInterpolation.appendLiteral(_:)(v82);
        v15 = (uint64_t)v229;
        v234 = v229;
        v83 = sub_100008464(v233);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v228 + 16))(v83, v73, v15);
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v84._countAndFlagsBits = 0;
        v84._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v84);
        v85 = v77;
        v70 = v76;
        v86 = v75;
        LogMessage.init(stringInterpolation:)(v85);
        Logger.info(_:)(v75, v232, &protocol witness table for OSLogger);
        v87 = v74;
      }
      else
      {
        v225 = v72;
        v91 = *v88;
        v90 = v88[1];
        v92 = v88[3];
        v216(v226, v223, v232);
        v86 = swift_allocObject(v222, v220, v219);
        *(_OWORD *)(v86 + 16) = v218;
        swift_bridgeObjectRetain(v91);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 4);
        v93._countAndFlagsBits = 0x6C656D6954746567;
        v93._object = (void *)0xEC00000028656E69;
        LogMessage.StringInterpolation.appendLiteral(_:)(v93);
        v234 = (void *)v221;
        v94 = sub_100008464(v233);
        TimelineProviderContext.family.getter(v94);
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v95._countAndFlagsBits = 44;
        v95._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v95);
        v96 = TimelineProviderContext.isPreview.getter();
        v234 = &type metadata for Bool;
        LOBYTE(v233[0]) = v96 & 1;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v97._countAndFlagsBits = 0x6F6853202D203A29;
        v97._object = (void *)0xED000020676E6977;
        LogMessage.StringInterpolation.appendLiteral(_:)(v97);
        v98 = *(_QWORD *)(v91 + 16);
        if (v98)
        {
          v208 = v90;
          v210 = v92;
          v211 = v89;
          v212 = v86;
          v233[0] = _swiftEmptyArrayStorage;
          sub_10002DA34(0, v98, 0);
          v99 = (*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80);
          v209 = v91;
          v100 = v91 + v99;
          v101 = *(_QWORD *)(v203 + 72);
          v102 = (_QWORD *)v233[0];
          do
          {
            sub_1000043C0(v100, (uint64_t)v12, type metadata accessor for WidgetTodayCard);
            v104 = *v12;
            v103 = v12[1];
            swift_bridgeObjectRetain(v103);
            sub_10000A7A8((uint64_t)v12, type metadata accessor for WidgetTodayCard);
            if ((swift_isUniquelyReferenced_nonNull_native(v102) & 1) == 0)
            {
              sub_10002DA34(0, v102[2] + 1, 1);
              v102 = (_QWORD *)v233[0];
            }
            v106 = v102[2];
            v105 = v102[3];
            if (v106 >= v105 >> 1)
            {
              sub_10002DA34((char *)(v105 > 1), v106 + 1, 1);
              v102 = (_QWORD *)v233[0];
            }
            v102[2] = v106 + 1;
            v107 = &v102[2 * v106];
            v107[4] = v104;
            v107[5] = v103;
            v100 += v101;
            --v98;
          }
          while (v98);
          sub_100017984(v209, v208, v211, v210);
          v15 = (uint64_t)v229;
          v70 = v206;
          v86 = v212;
        }
        else
        {
          sub_100017984(v91, v90, v89, v92);
          v102 = _swiftEmptyArrayStorage;
          v15 = (uint64_t)v229;
        }
        v233[0] = v102;
        v108 = sub_100004380(&qword_100062000);
        v109 = sub_10002DA7C();
        v110 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v108, v109);
        v112 = v111;
        swift_bridgeObjectRelease(v102);
        v234 = &type metadata for String;
        v233[0] = v110;
        v233[1] = v112;
        v113 = v227;
        LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v114._countAndFlagsBits = 544497952;
        v114._object = (void *)0xE400000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v114);
        v234 = (void *)v15;
        v115 = sub_100008464(v233);
        v73 = (uint64_t)v207;
        (*(void (**)(_QWORD *, char *, uint64_t))(v228 + 16))(v115, v207, v15);
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
        sub_100004810((uint64_t)v233, &qword_100060BA8);
        v116._countAndFlagsBits = 0;
        v116._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v116);
        LogMessage.init(stringInterpolation:)(v113);
        v87 = v226;
        Logger.info(_:)(v86, v232, &protocol witness table for OSLogger);
        v72 = v225;
      }
      ++v72;
      swift_bridgeObjectRelease(v86);
      v224(v87, v232);
      sub_10000A7A8(v73, type metadata accessor for TodayWidgetEntry);
      v71 = (uint64_t)v217;
      if (v72 == v214)
      {
        swift_bridgeObjectRelease(v217);
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_39:
    swift_once(&qword_100060850, sub_10000555C);
  }
LABEL_28:
  v117 = v71;
  v118 = v191;
  sub_1000284FC(v71, v70, v191);
  v119 = v228;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v228 + 48))(v118, 1, v15) == 1)
  {
    sub_100004810(v118, &qword_100061780);
    v230 = (void (*)(char *, uint64_t))((char *)v189
                                                + *(int *)(type metadata accessor for TodayWidgetContainer(0) + 20));
    v120 = v193;
    static TimelineReloadPolicy.after(_:)(v230);
    v121 = sub_100008DD8(qword_100061FC0, type metadata accessor for TodayWidgetEntry, (uint64_t)&unk_10004EAA0);
    Timeline.init(entries:policy:)(v117, v120, v231, v121);
    v122 = v205;
    v123 = v232;
    v124 = v216;
    v216(v205, v223, v232);
    v125 = swift_allocObject(v222, v220, v219);
    *(_OWORD *)(v125 + 16) = v218;
    v231 = v125 + v215;
    v126 = v204;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 2);
    v127._countAndFlagsBits = 0x6C656D6954746567;
    v127._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v127);
    v234 = (void *)v221;
    v128 = sub_100008464(v233);
    TimelineProviderContext.family.getter(v128);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v129._countAndFlagsBits = 44;
    v129._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v129);
    v130 = TimelineProviderContext.isPreview.getter();
    v234 = &type metadata for Bool;
    LOBYTE(v233[0]) = v130 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v131._countAndFlagsBits = 0xD00000000000001ELL;
    v131._object = (void *)0x8000000100059E60;
    LogMessage.StringInterpolation.appendLiteral(_:)(v131);
    LogMessage.init(stringInterpolation:)(v126);
    Logger.info(_:)(v125, v123, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v125);
    v224(v122, v123);
    v124(v122, v223, v123);
    v132 = swift_allocObject(v222, v220, v219);
    *(_OWORD *)(v132 + 16) = v218;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 3);
    v133._countAndFlagsBits = 0x6C656D6954746567;
    v133._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v133);
    v234 = (void *)v221;
    v134 = sub_100008464(v233);
    TimelineProviderContext.family.getter(v134);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v135._countAndFlagsBits = 44;
    v135._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v135);
    v136 = TimelineProviderContext.isPreview.getter();
    v234 = &type metadata for Bool;
    LOBYTE(v233[0]) = v136 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v137._countAndFlagsBits = 0x64696C6156203A29;
    v137._object = (void *)0xEF206C69746E7520;
    LogMessage.StringInterpolation.appendLiteral(_:)(v137);
    v234 = (void *)v15;
    v138 = sub_100008464(v233);
    (*(void (**)(_QWORD *, void (*)(char *, uint64_t), uint64_t))(v228 + 16))(v138, v230, v15);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v139._countAndFlagsBits = 46;
    v139._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v139);
    LogMessage.init(stringInterpolation:)(v126);
    Logger.info(_:)(v132, v123, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v132);
    v224(v122, v123);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v194, v118, v15);
    v140 = sub_10002DE70(0xDD4uLL);
    v141 = v195;
    v142 = v119;
    v143 = Date.addingTimeInterval(_:)(-(double)(uint64_t)(v140 + 60));
    v144 = v188;
    Date.init()(v143);
    v145 = sub_100008DD8(&qword_100062010, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v146 = dispatch thunk of static Comparable.< infix(_:_:)(v144, v141, v15, v145);
    v147 = *(void (**)(char *, uint64_t))(v142 + 8);
    v147(v144, v15);
    v230 = v147;
    if ((v146 & 1) != 0)
    {
      v148 = v190;
      v228 = *(_QWORD *)(v142 + 16);
      ((void (*)(char *, char *, uint64_t))v228)(v190, v141, v15);
    }
    else
    {
      v149 = sub_10002DE70(0xDD4uLL);
      v150 = v187;
      Date.addingTimeInterval(_:)((double)(uint64_t)(v149 + 60));
      v151 = (char *)v189 + *(int *)(type metadata accessor for TodayWidgetContainer(0) + 20);
      v152 = dispatch thunk of static Comparable.< infix(_:_:)(v151, v150, v15, v145);
      v153 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
      if ((v152 & 1) != 0)
        v154 = v151;
      else
        v154 = v150;
      v148 = v190;
      v228 = *(_QWORD *)(v142 + 16);
      v153(v190, v154, v15);
      v147(v150, v15);
    }
    v155 = v217;
    v156 = v193;
    static TimelineReloadPolicy.after(_:)(v148);
    v157 = sub_100008DD8(qword_100061FC0, type metadata accessor for TodayWidgetEntry, (uint64_t)&unk_10004EAA0);
    Timeline.init(entries:policy:)(v155, v156, v231, v157);
    v158 = v205;
    v159 = v232;
    v160 = v216;
    v216(v205, v223, v232);
    v161 = swift_allocObject(v222, v220, v219);
    *(_OWORD *)(v161 + 16) = v218;
    v231 = v161 + v215;
    v162 = v204;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(76, 2);
    v163._countAndFlagsBits = 0x6C656D6954746567;
    v163._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v163);
    v234 = (void *)v221;
    v164 = sub_100008464(v233);
    TimelineProviderContext.family.getter(v164);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v165._countAndFlagsBits = 44;
    v165._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v165);
    v166 = TimelineProviderContext.isPreview.getter();
    v234 = &type metadata for Bool;
    LOBYTE(v233[0]) = v166 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v167._countAndFlagsBits = 0xD00000000000003FLL;
    v167._object = (void *)0x8000000100059E80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v167);
    LogMessage.init(stringInterpolation:)(v162);
    Logger.warning(_:)(v161, v159, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v161);
    v224(v158, v159);
    v160(v158, v223, v159);
    v168 = swift_allocObject(v222, v220, v219);
    *(_OWORD *)(v168 + 16) = v218;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(51, 3);
    v169._countAndFlagsBits = 0x6C656D6954746567;
    v169._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v169);
    v234 = (void *)v221;
    v170 = sub_100008464(v233);
    TimelineProviderContext.family.getter(v170);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v171._countAndFlagsBits = 44;
    v171._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v171);
    v172 = TimelineProviderContext.isPreview.getter();
    v234 = &type metadata for Bool;
    LOBYTE(v233[0]) = v172 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v173._countAndFlagsBits = 0xD000000000000025;
    v173._object = (void *)0x8000000100059EC0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v173);
    v234 = (void *)v15;
    v174 = sub_100008464(v233);
    v175 = v190;
    ((void (*)(_QWORD *, char *, uint64_t))v228)(v174, v190, v15);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v233);
    sub_100004810((uint64_t)v233, &qword_100060BA8);
    v176._countAndFlagsBits = 46;
    v176._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v176);
    LogMessage.init(stringInterpolation:)(v162);
    Logger.warning(_:)(v168, v159, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v168);
    v224(v158, v159);
    v177 = v230;
    v230(v195, v15);
    v177(v175, v15);
    v177(v194, v15);
  }
  v178 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v180 = String._bridgeToObjectiveC()();
  objc_msgSend(v178, "setValue:forKey:", isa, v180);

  v181 = static os_signpost_type_t.end.getter();
  type metadata accessor for SignpostAggregator(0);
  v182 = (void *)static SignpostAggregator.log.getter();
  v183 = type metadata accessor for Trace(0);
  os_signpost(_:dso:log:name:signpostID:)(v181, &_mh_execute_header, v182, *(_QWORD *)(v198 + *(int *)(v183 + 20)), *(_QWORD *)(v198 + *(int *)(v183 + 20) + 8), *(unsigned __int8 *)(v198 + *(int *)(v183 + 20) + 16));

  v184 = v201;
  v200(v201);
  return (*(uint64_t (**)(char *, uint64_t))(v196 + 8))(v184, v197);
}

uint64_t sub_1000284FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  void *v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, _QWORD, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  void *v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  const char *v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  void (*v149)(char *, uint64_t);
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v152 = a2;
  v5 = type metadata accessor for AppIconConfiguration(0);
  v146 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v158 = (uint64_t)&v126 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v126 - v11;
  v13 = type metadata accessor for WidgetFamily(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v141 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v140 = (char *)&v126 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v126 - v20;
  __chkstk_darwin(v19);
  v153 = (char *)&v126 - v22;
  v23 = type metadata accessor for WidgetTodayCard(0);
  v143 = *(_QWORD *)(v23 - 8);
  v24 = __chkstk_darwin(v23);
  v145 = (uint64_t)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v139 = (uint64_t)&v126 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v126 - v28;
  v136 = type metadata accessor for TodayWidgetEntry(0);
  __chkstk_darwin(v136);
  v133 = *(_QWORD *)(a1 + 16);
  if (!v133)
    goto LABEL_82;
  v128 = a3;
  v135 = a1 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v134 = *(_QWORD *)(v31 + 72);
  v150 = enum case for WidgetFamily.systemSmall(_:);
  v32 = (char *)&v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = a1;
  swift_bridgeObjectRetain(a1);
  v33 = 0;
  v151 = v14;
  v138 = v21;
  v129 = v32;
  v147 = v13;
  v148 = v29;
  while (1)
  {
    v137 = v33;
    sub_1000043C0(v135 + v134 * v33, (uint64_t)v32, type metadata accessor for TodayWidgetEntry);
    v34 = (uint64_t *)&v32[*(int *)(v136 + 20)];
    v35 = v34[2];
    if ((v35 & 0x8000000000000000) == 0)
    {
      v36 = *v34;
      v156 = *(_QWORD *)(*v34 + 16);
      if (v156)
        break;
    }
LABEL_4:
    v33 = v137 + 1;
    sub_10000A7A8((uint64_t)v32, type metadata accessor for TodayWidgetEntry);
    if (v33 == v133)
    {
      swift_bridgeObjectRelease(v127);
      a3 = v128;
LABEL_82:
      v118 = type metadata accessor for Date(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(a3, 1, 1, v118);
    }
  }
  v132 = v35;
  v130 = v34[1];
  v131 = v34[3];
  v37 = v143;
  v155 = v36 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
  swift_bridgeObjectRetain(v36);
  v38 = 0;
  v142 = v36;
  while (1)
  {
    if (v38 >= *(_QWORD *)(v36 + 16))
    {
      __break(1u);
      goto LABEL_89;
    }
    v39 = sub_1000043C0(v155 + *(_QWORD *)(v37 + 72) * v38, (uint64_t)v29, type metadata accessor for WidgetTodayCard);
    if (*((_QWORD *)v29 + 7))
      goto LABEL_8;
    v154 = v38;
    v40 = *(_QWORD *)(*((_QWORD *)v29 + 8) + 16);
    v41 = v153;
    TimelineProviderContext.family.getter(v39);
    v42 = v151;
    v43 = v138;
    (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v138, v41, v13);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v43, v13);
    if (v44 == v150)
    {
      v45 = 3;
      if (v40 <= 4)
        v45 = 4;
      v157 = v45;
      v46 = *(void (**)(char *, uint64_t))(v42 + 8);
    }
    else
    {
      v47 = 6;
      if (!v154)
        v47 = 11;
      v157 = v47;
      v46 = *(void (**)(char *, uint64_t))(v42 + 8);
      v46(v43, v13);
    }
    v149 = v46;
    v46(v153, v13);
    v48 = *((_QWORD *)v29 + 8);
    v49 = (uint64_t)_swiftEmptyArrayStorage;
    v160 = (uint64_t)_swiftEmptyArrayStorage;
    v50 = *(_QWORD *)(v48 + 16);
    if (v50)
    {
      v51 = v146;
      v52 = v48 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
      v144 = v48;
      swift_bridgeObjectRetain_n(v48, 2);
      v53 = *(_QWORD *)(v51 + 72);
      do
      {
        sub_1000043C0(v52, (uint64_t)v12, type metadata accessor for AppIconConfiguration);
        v55 = *(void **)&v12[*(int *)(v5 + 20)];
        v56 = v55;
        v57 = sub_10000A7A8((uint64_t)v12, type metadata accessor for AppIconConfiguration);
        if (v55)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
          v59 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v58 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v59 >= v58 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
          v54.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v56);
          specialized Array._endMutation()(v54);
        }
        v52 += v53;
        --v50;
      }
      while (v50);
      v48 = v144;
      swift_bridgeObjectRelease(v144);
      v49 = v160;
    }
    else
    {
      swift_bridgeObjectRetain(v48);
    }
    v60 = v151;
    swift_bridgeObjectRelease(v48);
    if ((unint64_t)v49 >> 62)
    {
      if (v49 < 0)
        v106 = v49;
      else
        v106 = v49 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v49);
      v61 = _CocoaArrayWrapper.endIndex.getter(v106);
      swift_bridgeObjectRelease(v49);
    }
    else
    {
      v61 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v13 = v147;
    v29 = v148;
    v62 = swift_bridgeObjectRelease(v49);
    if (!v61)
    {
      swift_bridgeObjectRelease(v127);
      if (qword_100060850 == -1)
      {
LABEL_77:
        v109 = type metadata accessor for OSLogger(0);
        sub_1000056A0(v109, (uint64_t)qword_100063238);
        v110 = sub_100004380(&qword_100060BA0);
        v111 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
        v112 = swift_allocObject(v110, ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(_QWORD *)(v111 + 72), *(unsigned __int8 *)(v111 + 80) | 7);
        *(_OWORD *)(v112 + 16) = xmmword_10004DFA0;
        v113 = 0x800000010005A030;
        v114 = 0xD00000000000002DLL;
        goto LABEL_87;
      }
LABEL_89:
      swift_once(&qword_100060850, sub_10000555C);
      goto LABEL_77;
    }
    v63 = v140;
    TimelineProviderContext.family.getter(v62);
    v64 = *(void (**)(char *, _QWORD, uint64_t))(v60 + 104);
    v65 = v141;
    v64(v141, v150, v13);
    v66 = sub_100008DD8((unint64_t *)&qword_1000614C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
    dispatch thunk of RawRepresentable.rawValue.getter(&v160, v13, v66);
    dispatch thunk of RawRepresentable.rawValue.getter(&v159, v13, v66);
    v68 = v159;
    v67 = v160;
    v69 = v65;
    v70 = v149;
    v149(v69, v13);
    v70(v63, v13);
    v71 = v139;
    sub_1000043C0((uint64_t)v29, v139, type metadata accessor for WidgetTodayCard);
    if (v67 != v68)
    {
      sub_10000A7A8(v71, type metadata accessor for WidgetTodayCard);
      v73 = v145;
      sub_1000043C0((uint64_t)v29, v145, type metadata accessor for WidgetTodayCard);
LABEL_40:
      sub_10000A7A8(v73, type metadata accessor for WidgetTodayCard);
      goto LABEL_46;
    }
    v72 = *(_QWORD *)(*(_QWORD *)(v71 + 64) + 16);
    sub_10000A7A8(v71, type metadata accessor for WidgetTodayCard);
    v73 = v145;
    sub_1000043C0((uint64_t)v29, v145, type metadata accessor for WidgetTodayCard);
    if (v72 > 4)
      goto LABEL_40;
    v74 = *(void (**)(char *, uint64_t))(v73 + 64);
    v75 = (uint64_t)_swiftEmptyArrayStorage;
    v160 = (uint64_t)_swiftEmptyArrayStorage;
    v76 = *((_QWORD *)v74 + 2);
    if (v76)
    {
      v77 = v146;
      v78 = (uint64_t)v74
          + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
      v149 = v74;
      swift_bridgeObjectRetain_n(v74, 2);
      v79 = *(_QWORD *)(v77 + 72);
      do
      {
        v81 = v158;
        sub_1000043C0(v78, v158, type metadata accessor for AppIconConfiguration);
        v82 = *(void **)(v81 + *(int *)(v5 + 20));
        v83 = v82;
        v84 = sub_10000A7A8(v81, type metadata accessor for AppIconConfiguration);
        if (v82)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84);
          v86 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v85 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v86 >= v85 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v86 + 1, 1);
          v80.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v86, v83);
          specialized Array._endMutation()(v80);
        }
        v78 += v79;
        --v76;
      }
      while (v76);
      v74 = v149;
      swift_bridgeObjectRelease(v149);
      v75 = v160;
      v13 = v147;
      v29 = v148;
    }
    else
    {
      swift_bridgeObjectRetain(v74);
    }
    swift_bridgeObjectRelease(v74);
    v87 = v145;
    if ((unint64_t)v75 >> 62)
    {
      v108 = v75 < 0 ? v75 : v75 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v75);
      v88 = _CocoaArrayWrapper.endIndex.getter(v108);
      swift_bridgeObjectRelease(v75);
    }
    else
    {
      v88 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v75);
    v89 = *(_QWORD *)(*(_QWORD *)(v87 + 64) + 16);
    sub_10000A7A8(v87, type metadata accessor for WidgetTodayCard);
    if (v88 != v89)
      break;
LABEL_46:
    v90 = *((_QWORD *)v29 + 8);
    if (*(_QWORD *)(v90 + 16) >= v157)
      v91 = v157;
    else
      v91 = *(_QWORD *)(v90 + 16);
    v92 = (uint64_t)_swiftEmptyArrayStorage;
    v160 = (uint64_t)_swiftEmptyArrayStorage;
    if (v91)
    {
      v93 = v146;
      v94 = v90 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
      v149 = (void (*)(char *, uint64_t))v90;
      swift_bridgeObjectRetain_n(v90, 2);
      v95 = *(_QWORD *)(v93 + 72);
      do
      {
        sub_1000043C0(v94, (uint64_t)v8, type metadata accessor for AppIconConfiguration);
        v97 = *(void **)&v8[*(int *)(v5 + 20)];
        v98 = v97;
        v99 = sub_10000A7A8((uint64_t)v8, type metadata accessor for AppIconConfiguration);
        if (v97)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v99);
          v101 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v100 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v101 >= v100 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1);
          v96.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v98);
          specialized Array._endMutation()(v96);
        }
        v94 += v95;
        --v91;
      }
      while (v91);
      v102 = v149;
      swift_bridgeObjectRelease(v149);
      v92 = v160;
      v13 = v147;
      v29 = v148;
    }
    else
    {
      v102 = (void (*)(char *, uint64_t))v90;
      swift_bridgeObjectRetain(v90);
    }
    swift_bridgeObjectRelease(v102);
    if ((unint64_t)v92 >> 62)
    {
      if (v92 < 0)
        v107 = v92;
      else
        v107 = v92 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v92);
      v103 = _CocoaArrayWrapper.endIndex.getter(v107);
      swift_bridgeObjectRelease(v92);
    }
    else
    {
      v103 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v92);
    v104 = *(_QWORD *)(*((_QWORD *)v29 + 8) + 16);
    if (v104 >= v157)
      v104 = v157;
    v105 = v103 == v104;
    v36 = v142;
    v37 = v143;
    v38 = v154;
    if (!v105)
    {
      swift_bridgeObjectRelease(v127);
      if (qword_100060850 != -1)
        swift_once(&qword_100060850, sub_10000555C);
      v109 = type metadata accessor for OSLogger(0);
      sub_1000056A0(v109, (uint64_t)qword_100063238);
      v115 = sub_100004380(&qword_100060BA0);
      v116 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v112 = swift_allocObject(v115, ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v116 + 72), *(unsigned __int8 *)(v116 + 80) | 7);
      *(_OWORD *)(v112 + 16) = xmmword_10004DFA0;
      v114 = 0xD000000000000094;
      v117 = "Missing artwork: No editorial artwork, and either small with > 4 icons, or medium or large (either primary/"
             "secondary), with at least 1 icon missing.";
      goto LABEL_86;
    }
LABEL_8:
    ++v38;
    sub_10000A7A8((uint64_t)v29, type metadata accessor for WidgetTodayCard);
    if (v38 == v156)
    {
      sub_100017984(v36, v130, v132, v131);
      v32 = v129;
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease(v127);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v109 = type metadata accessor for OSLogger(0);
  sub_1000056A0(v109, (uint64_t)qword_100063238);
  v120 = sub_100004380(&qword_100060BA0);
  v121 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v112 = swift_allocObject(v120, ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(_QWORD *)(v121 + 72), *(unsigned __int8 *)(v121 + 80) | 7);
  *(_OWORD *)(v112 + 16) = xmmword_10004DFA0;
  v114 = 0xD00000000000006ALL;
  v117 = "Missing artwork: Small widget with no editorial artwork and at most 4 icons, with at least 1 icon missing.";
LABEL_86:
  v113 = (unint64_t)(v117 - 32) | 0x8000000000000000;
LABEL_87:
  LogMessage.init(stringLiteral:)(v114, v113);
  Logger.error(_:)(v112, v109, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v112);
  sub_100017984(v142, v130, v132, v131);
  sub_10000A7A8((uint64_t)v29, type metadata accessor for WidgetTodayCard);
  v122 = type metadata accessor for Date(0);
  v123 = *(_QWORD *)(v122 - 8);
  v124 = v128;
  v125 = (uint64_t)v129;
  (*(void (**)(uint64_t, char *, uint64_t))(v123 + 16))(v128, v129, v122);
  sub_10000A7A8(v125, type metadata accessor for TodayWidgetEntry);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56))(v124, 0, 1, v122);
}

double sub_1000291BC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  _QWORD *v32;
  Swift::String v33;
  char v34;
  Swift::String v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  Swift::String v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  Swift::String v46;
  _QWORD *v47;
  Swift::String v48;
  char v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  double result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  double v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t);
  uint64_t v107;
  _QWORD aBlock[3];
  void *v109;
  uint64_t (*v110)(int, uint64_t);
  uint64_t v111;
  id v112;
  uint64_t v113;
  _QWORD *v114;
  char v115[8];

  v96 = a6;
  v106 = a4;
  v107 = a5;
  v105 = a3;
  v103 = a1;
  v94 = type metadata accessor for Trace(0);
  __chkstk_darwin(v94);
  v101 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TodayWidgetTimelineProvider(0);
  __chkstk_darwin(v8);
  v99 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for TimelineProviderContext(0);
  v98 = *(_QWORD *)(v100 - 8);
  v10 = __chkstk_darwin(v100);
  v97 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v11;
  __chkstk_darwin(v10);
  v82 = (char *)&v82 - v12;
  v13 = sub_100004380(&qword_100061FE0);
  __chkstk_darwin(v13);
  v93 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for AsyncObjectGraphError(0);
  v102 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v84 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for OSLogger(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v23 = sub_1000056A0(v19, (uint64_t)qword_100063238);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v91 = v23;
  v92 = v24;
  ((void (*)(char *))v24)(v22);
  v25 = sub_100004380(&qword_100060BA0);
  v26 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 32) & ~v28;
  v90 = v25;
  v88 = v29 + v27;
  v87 = v28 | 7;
  v30 = swift_allocObject(v25, v29 + v27, v28 | 7);
  v86 = xmmword_10004DFA0;
  *(_OWORD *)(v30 + 16) = xmmword_10004DFA0;
  v89 = v29;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(60, 3);
  v31._countAndFlagsBits = 0x6C656D6954746567;
  v31._object = (void *)0xEC00000028656E69;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  v85 = type metadata accessor for WidgetFamily(0);
  v109 = (void *)v85;
  v32 = sub_100008464(aBlock);
  TimelineProviderContext.family.getter(v32);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock);
  sub_100004810((uint64_t)aBlock, &qword_100060BA8);
  v33._countAndFlagsBits = 44;
  v33._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  v104 = a2;
  v34 = TimelineProviderContext.isPreview.getter();
  v109 = &type metadata for Bool;
  LOBYTE(aBlock[0]) = v34 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock);
  sub_100004810((uint64_t)aBlock, &qword_100060BA8);
  v35._countAndFlagsBits = 0xD00000000000002FLL;
  v35._object = (void *)0x8000000100059C30;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  v36 = v103;
  swift_getErrorValue(v103, v115, &v113);
  v37 = v113;
  v38 = v114;
  v109 = v114;
  v39 = sub_100008464(aBlock);
  (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v38 - 1) + 16))(v39, v37, v38);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock);
  sub_100004810((uint64_t)aBlock, &qword_100060BA8);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v40);
  LogMessage.init(stringInterpolation:)(v18);
  Logger.error(_:)(v30, v19, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v30);
  v41 = *(void (**)(char *, uint64_t))(v20 + 8);
  v41(v22, v19);
  v112 = v36;
  swift_errorRetain(v36);
  v42 = sub_100004380(&qword_100061FE8);
  if (swift_dynamicCast(v42, &v112, v42, &type metadata for TodayWidgetPresenterUpdateError, 0))
  {
    v43 = static os_signpost_type_t.end.getter();
    type metadata accessor for SignpostAggregator(0);
    v44 = (void *)static SignpostAggregator.log.getter();
    os_signpost(_:dso:log:name:signpostID:)(v43, &_mh_execute_header, v44, *(_QWORD *)(v105 + *(int *)(v94 + 20)), *(_QWORD *)(v105 + *(int *)(v94 + 20) + 8), *(unsigned __int8 *)(v105 + *(int *)(v94 + 20) + 16));

    v92(v22, v91, v19);
    v45 = swift_allocObject(v90, v88, v87);
    *(_OWORD *)(v45 + 16) = v86;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2);
    v46._countAndFlagsBits = 0x6C656D6954746567;
    v46._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    v109 = (void *)v85;
    v47 = sub_100008464(aBlock);
    TimelineProviderContext.family.getter(v47);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock);
    sub_100004810((uint64_t)aBlock, &qword_100060BA8);
    v48._countAndFlagsBits = 44;
    v48._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    v49 = TimelineProviderContext.isPreview.getter();
    v109 = &type metadata for Bool;
    LOBYTE(aBlock[0]) = v49 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock);
    sub_100004810((uint64_t)aBlock, &qword_100060BA8);
    v50._object = (void *)0x8000000100059C80;
    v50._countAndFlagsBits = 0xD000000000000017;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)(v18);
    Logger.error(_:)(v45, v19, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v45);
    v41(v22, v19);
    if (qword_1000608E0 != -1)
      swift_once(&qword_1000608E0, sub_1000261F8);
    v51 = sub_100004380(&qword_100061FF0);
    v52 = sub_1000056A0(v51, (uint64_t)qword_100063348);
    v106(v52);
    swift_errorRelease(v112);
  }
  else
  {
    v54 = v104;
    swift_errorRelease(v112);
    aBlock[0] = v36;
    swift_errorRetain(v36);
    v55 = (uint64_t)v93;
    v56 = v95;
    v57 = swift_dynamicCast(v93, aBlock, v42, v95, 6);
    v58 = v102;
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
    if ((v57 & 1) != 0)
    {
      v59(v55, 0, 1, v56);
      v60 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v84, v55, v56);
      sub_100029BE4();
      v61 = v107;
      v63 = (uint64_t)v99;
      v62 = v100;
      v64 = v98;
      v65 = (uint64_t)v97;
      if ((v66 & 1) != 0)
      {
        v103 = objc_msgSend((id)objc_opt_self(ASDAppStoreService), "defaultService");
        v67 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v82, v54, v62);
        v68 = *(unsigned __int8 *)(v64 + 80);
        v69 = (v68 + 16) & ~v68;
        v70 = swift_allocObject(&unk_10005E840, v69 + v83, v68 | 7);
        (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v70 + v69, v67, v62);
        v110 = sub_10002D554;
        v111 = v70;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100026198;
        v109 = &unk_10005E858;
        v71 = _Block_copy(aBlock);
        *(_QWORD *)&v72 = swift_release(v111).n128_u64[0];
        v73 = v103;
        objc_msgSend(v103, "reloadWidgetOnConnectivityToEndpoint:parameters:replyHandler:", 0, 0, v71, v72);
        _Block_release(v71);

        (*(void (**)(char *, uint64_t))(v102 + 8))(v84, v56);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v56);
      }
    }
    else
    {
      v59(v55, 1, 1, v56);
      sub_100004810(v55, &qword_100061FE0);
      v61 = v107;
      v63 = (uint64_t)v99;
      v62 = v100;
      v64 = v98;
      v65 = (uint64_t)v97;
    }
    if (qword_1000608F8 != -1)
      swift_once(&qword_1000608F8, sub_100030FA0);
    v74 = qword_100063360;
    sub_1000043C0(v96, v63, type metadata accessor for TodayWidgetTimelineProvider);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v65, v54, v62);
    v75 = v101;
    sub_1000043C0(v105, v101, type metadata accessor for Trace);
    v76 = *(_QWORD *)(v74 + 16);
    swift_retain(v61);
    v77 = swift_retain(v76);
    v78 = Promise.isResolved.getter(v77);
    swift_release(v76);
    if ((v78 & 1) == 0 && *(_BYTE *)(v74 + 24) != 1)
    {
      *(_BYTE *)(v74 + 24) = 1;
      v79 = objc_autoreleasePoolPush();
      sub_100016E90(v74);
      objc_autoreleasePoolPop(v79);
    }
    v80 = *(_QWORD *)(v74 + 16);
    v81 = swift_retain(v80);
    sub_10002A258(v81, v63, v65, v75, (uint64_t)v106, v61);
    swift_release(v80);
    sub_10000A7A8(v63, type metadata accessor for TodayWidgetTimelineProvider);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v62);
    sub_10000A7A8(v75, type metadata accessor for Trace);
    *(_QWORD *)&result = swift_release(v61).n128_u64[0];
  }
  return result;
}

void sub_100029BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char IsEqual;
  void *v7;
  char v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  void *v18;
  id v19;
  char v20;

  v0 = AsyncObjectGraphError.errors.getter();
  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 32);
    swift_errorRetain(v3);
    v4 = (void *)_convertErrorToNSError(_:)(v3);
    v5 = (void *)AMSErrorDomain;
    IsEqual = AMSErrorIsEqual(v4, AMSErrorDomain, 203);

    if ((IsEqual & 1) != 0
      || (v7 = (void *)_convertErrorToNSError(_:)(v3),
          v8 = AMSErrorIsEqual(v7, v5, 205),
          v7,
          (v8 & 1) != 0))
    {
LABEL_4:
      swift_errorRelease(v3);
    }
    else
    {
      v9 = (void *)_convertErrorToNSError(_:)(v3);
      v10 = v5;
      v11 = AMSErrorIsEqual(v9, v10, 206);
      swift_errorRelease(v3);

      if ((v11 & 1) == 0)
      {
        v12 = 0;
        v13 = v2 - 1;
        while (v13 != v12)
        {
          if ((unint64_t)(v12 + 1) >= *(_QWORD *)(v1 + 16))
          {
            __break(1u);
            return;
          }
          v3 = *(_QWORD *)(v1 + 40 + 8 * v12);
          swift_errorRetain(v3);
          v14 = (void *)_convertErrorToNSError(_:)(v3);
          v15 = AMSErrorIsEqual(v14, v10, 203);

          if ((v15 & 1) != 0)
            goto LABEL_4;
          v16 = (void *)_convertErrorToNSError(_:)(v3);
          v17 = AMSErrorIsEqual(v16, v10, 205);

          if ((v17 & 1) != 0)
            goto LABEL_4;
          v18 = (void *)_convertErrorToNSError(_:)(v3);
          v19 = v10;
          v20 = AMSErrorIsEqual(v18, v19, 206);
          swift_errorRelease(v3);

          ++v12;
          if ((v20 & 1) != 0)
            break;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v1);
}

uint64_t sub_100029DAC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  _QWORD *v23;
  Swift::String v24;
  char v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  Swift::String v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  Swift::String v36;
  _QWORD *v37;
  Swift::String v38;
  char v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  _QWORD v54[3];
  char v55[8];
  uint64_t v56;
  unint64_t v57;
  void *v58;

  v53 = a2;
  v52 = a1;
  v2 = type metadata accessor for LogMessage.StringInterpolation(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v42 - v6;
  v8 = type metadata accessor for OSLogger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v50 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v42 - v12;
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v14 = sub_1000056A0(v8, (uint64_t)qword_100063238);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v48 = v14;
  v49 = v15;
  ((void (*)(char *))v15)(v13);
  v16 = sub_100004380(&qword_100060BA0);
  v17 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v46 = v20 + v18;
  v47 = v16;
  v45 = v19 | 7;
  v21 = swift_allocObject(v16, v20 + v18, v19 | 7);
  v44 = xmmword_10004DFA0;
  *(_OWORD *)(v21 + 16) = xmmword_10004DFA0;
  v51 = v21 + v20;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(85, 3);
  v22._countAndFlagsBits = 0x6C656D6954746567;
  v22._object = (void *)0xEC00000028656E69;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  v43 = type metadata accessor for WidgetFamily(0);
  v58 = (void *)v43;
  v23 = sub_100008464(&v56);
  TimelineProviderContext.family.getter(v23);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v56);
  sub_100004810((uint64_t)&v56, &qword_100060BA8);
  v24._countAndFlagsBits = 44;
  v24._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  v25 = TimelineProviderContext.isPreview.getter();
  v58 = &type metadata for Bool;
  LOBYTE(v56) = v25 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v56);
  sub_100004810((uint64_t)&v56, &qword_100060BA8);
  v26._countAndFlagsBits = 0xD000000000000047;
  v26._object = (void *)0x8000000100059CC0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  v27 = 0x64656C696146;
  if ((v52 & 1) != 0)
    v27 = 0x73736563637553;
  v28 = 0xE600000000000000;
  v58 = &type metadata for String;
  if ((v52 & 1) != 0)
    v28 = 0xE700000000000000;
  v56 = v27;
  v57 = v28;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v56);
  sub_100004810((uint64_t)&v56, &qword_100060BA8);
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  LogMessage.init(stringInterpolation:)(v7);
  Logger.info(_:)(v21, v8, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v21);
  v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v13, v8);
  result = v53;
  if (v53)
  {
    swift_getErrorValue(v53, v55, v54);
    v32 = Error.localizedDescription.getter(v54[1], v54[2]);
    v53 = v33;
    v34 = v50;
    v49(v50, v48, v8);
    v35 = swift_allocObject(v47, v46, v45);
    *(_OWORD *)(v35 + 16) = v44;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(84, 3);
    v36._countAndFlagsBits = 0x6C656D6954746567;
    v36._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    v58 = (void *)v43;
    v37 = sub_100008464(&v56);
    TimelineProviderContext.family.getter(v37);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v56);
    sub_100004810((uint64_t)&v56, &qword_100060BA8);
    v38._countAndFlagsBits = 44;
    v38._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    v39 = TimelineProviderContext.isPreview.getter();
    v58 = &type metadata for Bool;
    LOBYTE(v56) = v39 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v56);
    sub_100004810((uint64_t)&v56, &qword_100060BA8);
    v40._object = (void *)0x8000000100059D10;
    v40._countAndFlagsBits = 0xD000000000000046;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    v58 = &type metadata for String;
    v56 = v32;
    v57 = v53;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v56);
    sub_100004810((uint64_t)&v56, &qword_100060BA8);
    v41._countAndFlagsBits = 46;
    v41._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    LogMessage.init(stringInterpolation:)(v5);
    Logger.error(_:)(v35, v8, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v35);
    return ((uint64_t (*)(char *, uint64_t))v30)(v34, v8);
  }
  return result;
}

uint64_t sub_10002A258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[6];

  v59 = a6;
  v60 = a1;
  v62 = a4;
  v63 = a5;
  v55 = a3;
  v57 = a2;
  v8 = type metadata accessor for Trace(0);
  v58 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v58 + 64);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TimelineProviderContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  __chkstk_darwin(v10);
  v13 = v12;
  v53 = v12;
  v14 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v14;
  v15 = type metadata accessor for TodayWidgetTimelineProvider(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v56 = v17;
  v47 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(a2, v47, v18);
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v54(v14, a3, v10);
  sub_1000043C0(v62, (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Trace);
  v19 = *(unsigned __int8 *)(v16 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v17 + v21 + v20) & ~v21;
  v23 = *(unsigned __int8 *)(v58 + 80);
  v24 = (v13 + v23 + v22) & ~v23;
  v51 = v9 + 7;
  v52 = v19 | v21 | v23 | 7;
  v25 = (v9 + 7 + v24) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_10005E890, v25 + 16, v52);
  v27 = v26 + v20;
  v28 = v26;
  v29 = v47;
  sub_10000B460(v47, v27, type metadata accessor for TodayWidgetTimelineProvider);
  v50 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v31 = v48;
  v30 = v49;
  v50(v28 + v22, v49, v48);
  v58 = v28;
  v32 = v61;
  sub_10000B460(v61, v28 + v24, type metadata accessor for Trace);
  v33 = (_QWORD *)(v28 + v25);
  v34 = v59;
  *v33 = v63;
  v33[1] = v34;
  v54(v30, v55, v31);
  sub_1000043C0(v57, v29, type metadata accessor for TodayWidgetTimelineProvider);
  sub_1000043C0(v62, v32, type metadata accessor for Trace);
  v35 = (v21 + 16) & ~v21;
  v36 = (v53 + v19 + v35) & ~v19;
  v37 = (v56 + v23 + v36) & ~v23;
  v38 = (v51 + v37) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_10005E8B8, v38 + 16, v52);
  v50(v39 + v35, v30, v31);
  sub_10000B460(v29, v39 + v36, type metadata accessor for TodayWidgetTimelineProvider);
  sub_10000B460(v61, v39 + v37, type metadata accessor for Trace);
  v40 = (_QWORD *)(v39 + v38);
  *v40 = v63;
  v40[1] = v34;
  v41 = sub_100008218();
  v42 = swift_retain_n(v34, 2);
  v43 = static OS_dispatch_queue.main.getter(v42);
  v64[3] = v41;
  v64[4] = &protocol witness table for OS_dispatch_queue;
  v64[0] = v43;
  v44 = v58;
  Promise.then(perform:orCatchError:on:)(sub_10002D6D4, v58, sub_10002D8A0, v39, v64);
  swift_release(v44);
  swift_release(v39);
  return sub_100008444(v64);
}

uint64_t sub_10002A5AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *);
  uint64_t v44;

  v42 = a6;
  v43 = a5;
  v9 = type metadata accessor for TimelineReloadPolicy(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100061FF0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v19 = type metadata accessor for ASKBagContract(0);
  v20 = type metadata accessor for BaseObjectGraph(0);
  v21 = inject<A, B>(_:from:)(&v44, v19, v18, v19, v20);
  v22 = v44;
  v23 = ASKBagContract.todayWidgetInitialNetworkRetryTimeSeconds.getter(v21);
  v24 = ASKBagContract.todayWidgetMaximumNetworkRetryTimeSeconds.getter();
  sub_10002A864(v23, v24, a3, (uint64_t)v17);
  v25 = static os_signpost_type_t.end.getter();
  type metadata accessor for SignpostAggregator(0);
  v26 = (void *)static SignpostAggregator.log.getter();
  v27 = type metadata accessor for Trace(0);
  os_signpost(_:dso:log:name:signpostID:)(v25, &_mh_execute_header, v26, *(_QWORD *)(a4 + *(int *)(v27 + 20)), *(_QWORD *)(a4 + *(int *)(v27 + 20) + 8), *(unsigned __int8 *)(a4 + *(int *)(v27 + 20) + 16));

  v28 = sub_100004380(&qword_100061FF8);
  v29 = type metadata accessor for TodayWidgetEntry(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_QWORD *)(v30 + 72);
  v32 = *(unsigned __int8 *)(v30 + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = swift_allocObject(v28, v33 + v31, v32 | 7);
  *(_OWORD *)(v34 + 16) = xmmword_10004DFA0;
  if (qword_1000608E8 != -1)
    swift_once(&qword_1000608E8, sub_10002D334);
  v35 = sub_1000056A0(v29, (uint64_t)qword_100061F00);
  sub_1000043C0(v35, v34 + v33, type metadata accessor for TodayWidgetEntry);
  static TimelineReloadPolicy.after(_:)(v17);
  v36 = sub_100008DD8(qword_100061FC0, type metadata accessor for TodayWidgetEntry, (uint64_t)&unk_10004EAA0);
  Timeline.init(entries:policy:)(v34, v11, v29, v36);
  v43(v14);
  v37 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v14, v41, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v39);
}

void sub_10002A864(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  float v21;
  float v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  _QWORD *v32;
  Swift::String v33;
  char v34;
  Swift::String v35;
  _QWORD *v36;
  Swift::String v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  Swift::String v40;
  _QWORD *v41;
  Swift::String v42;
  char v43;
  Swift::String v44;
  id v45;
  Class isa;
  NSString v47;
  Swift::String v48;
  _QWORD *v49;
  Swift::String v50;
  char v51;
  Swift::String v52;
  _QWORD v53[2];
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  void *v65;

  v61 = a3;
  v8 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v8);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0);
  v63 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53[0] = v4;
  v18 = sub_10002CE1C();
  v20 = exp2f((float)v18) * (float)a1;
  v21 = (float)a2;
  if (v20 <= (float)a2)
    v22 = v20;
  else
    v22 = (float)a2;
  Date.init()(v19);
  v62 = a4;
  Date.addingTimeInterval(_:)(v22);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v23 = sub_1000056A0(v11, (uint64_t)qword_100063238);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  v59 = v23;
  v60 = v24;
  v24(v13, v23, v11);
  v25 = sub_100004380(&qword_100060BA0);
  v57 = v25;
  v26 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 32) & ~v28;
  v55 = v28 | 7;
  v56 = v29 + v27;
  v30 = swift_allocObject(v25, v29 + v27, v28 | 7);
  v54 = xmmword_10004DFA0;
  *(_OWORD *)(v30 + 16) = xmmword_10004DFA0;
  v53[1] = v30 + v29;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 3);
  v31._countAndFlagsBits = 0x6C656D6954746567;
  v31._object = (void *)0xEC00000028656E69;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  v58 = type metadata accessor for WidgetFamily(0);
  v65 = (void *)v58;
  v32 = sub_100008464(v64);
  TimelineProviderContext.family.getter(v32);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
  sub_100004810((uint64_t)v64, &qword_100060BA8);
  v33._countAndFlagsBits = 44;
  v33._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  v34 = TimelineProviderContext.isPreview.getter();
  v65 = &type metadata for Bool;
  LOBYTE(v64[0]) = v34 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
  sub_100004810((uint64_t)v64, &qword_100060BA8);
  v35._countAndFlagsBits = 0x207478654E203A29;
  v35._object = (void *)0xEF203A7972746572;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  v65 = (void *)v14;
  v36 = sub_100008464(v64);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(v36, v62, v14);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
  sub_100004810((uint64_t)v64, &qword_100060BA8);
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  LogMessage.init(stringInterpolation:)(v10);
  Logger.error(_:)(v30, v11, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v30);
  v38 = *(void (**)(char *, uint64_t))(v63 + 8);
  v38(v13, v11);
  v60(v13, v59, v11);
  v39 = swift_allocObject(v57, v56, v55);
  *(_OWORD *)(v39 + 16) = v54;
  if (v22 >= v21)
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(77, 2);
    v48._countAndFlagsBits = 0x6C656D6954746567;
    v48._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    v65 = (void *)v58;
    v49 = sub_100008464(v64);
    TimelineProviderContext.family.getter(v49);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
    sub_100004810((uint64_t)v64, &qword_100060BA8);
    v50._countAndFlagsBits = 44;
    v50._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    v51 = TimelineProviderContext.isPreview.getter();
    v65 = &type metadata for Bool;
    LOBYTE(v64[0]) = v51 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
    sub_100004810((uint64_t)v64, &qword_100060BA8);
    v52._countAndFlagsBits = 0xD000000000000040;
    v52._object = (void *)0x8000000100059DB0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v52);
    LogMessage.init(stringInterpolation:)(v10);
    Logger.error(_:)(v39, v11, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v39);
    v38(v13, v11);
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 2);
    v40._countAndFlagsBits = 0x6C656D6954746567;
    v40._object = (void *)0xEC00000028656E69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    v65 = (void *)v58;
    v41 = sub_100008464(v64);
    TimelineProviderContext.family.getter(v41);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
    sub_100004810((uint64_t)v64, &qword_100060BA8);
    v42._countAndFlagsBits = 44;
    v42._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    v43 = TimelineProviderContext.isPreview.getter();
    v65 = &type metadata for Bool;
    LOBYTE(v64[0]) = v43 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v64);
    sub_100004810((uint64_t)v64, &qword_100060BA8);
    v44._countAndFlagsBits = 0xD00000000000001ELL;
    v44._object = (void *)0x8000000100059E00;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    LogMessage.init(stringInterpolation:)(v10);
    Logger.error(_:)(v39, v11, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v39);
    v38(v13, v11);
    if (__OFADD__(sub_10002CE1C(), 1))
    {
      __break(1u);
    }
    else
    {
      v45 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      isa = Int._bridgeToObjectiveC()().super.super.isa;
      v47 = String._bridgeToObjectiveC()();
      objc_msgSend(v45, "setValue:forKey:", isa, v47);

    }
  }
}

uint64_t sub_10002AE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  _QWORD *v30;
  Swift::String v31;
  char v32;
  Swift::String v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *);
  __int128 v75;
  uint64_t v76;
  _QWORD *v77;
  char v78[8];
  _QWORD v79[3];
  void *v80;

  v73 = a6;
  v74 = a5;
  v65 = a4;
  v64 = a3;
  v8 = type metadata accessor for TimelineReloadPolicy(0);
  __chkstk_darwin(v8);
  v70 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004380(&qword_100061FF0);
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  __chkstk_darwin(v10);
  v69 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v67 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  __chkstk_darwin(v12);
  v66 = (uint64_t)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v14);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OSLogger(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v21 = sub_1000056A0(v17, (uint64_t)qword_100063238);
  v22 = *(void (**)(char *))(v18 + 16);
  v63 = v21;
  v22(v20);
  v23 = sub_100004380(&qword_100060BA0);
  v24 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 32) & ~v26;
  v62 = v23;
  v61 = v27 + v25;
  v59 = v26 | 7;
  v28 = swift_allocObject(v23, v27 + v25, v26 | 7);
  v75 = xmmword_10004DFA0;
  *(_OWORD *)(v28 + 16) = xmmword_10004DFA0;
  v58[1] = v28 + v27;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(57, 3);
  v29._countAndFlagsBits = 0x6C656D6954746567;
  v29._object = (void *)0xEC00000028656E69;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  v80 = (void *)type metadata accessor for WidgetFamily(0);
  v30 = sub_100008464(v79);
  TimelineProviderContext.family.getter(v30);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v79);
  sub_100004810((uint64_t)v79, &qword_100060BA8);
  v31._countAndFlagsBits = 44;
  v31._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  v60 = a2;
  v32 = TimelineProviderContext.isPreview.getter();
  v80 = &type metadata for Bool;
  LOBYTE(v79[0]) = v32 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v79);
  sub_100004810((uint64_t)v79, &qword_100060BA8);
  v33._countAndFlagsBits = 0xD00000000000002CLL;
  v33._object = (void *)0x8000000100059D60;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  swift_getErrorValue(a1, v78, &v76);
  v34 = v76;
  v35 = v77;
  v80 = v77;
  v36 = sub_100008464(v79);
  (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v35 - 1) + 16))(v36, v34, v35);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v79);
  sub_100004810((uint64_t)v79, &qword_100060BA8);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  LogMessage.init(stringInterpolation:)(v16);
  Logger.error(_:)(v28, v17, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v28);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (qword_1000608F8 != -1)
    swift_once(&qword_1000608F8, sub_100030FA0);
  v38 = qword_100063360;
  v39 = swift_allocObject(v62, v61, v59);
  *(_OWORD *)(v39 + 16) = v75;
  LogMessage.init(stringLiteral:)(0xD000000000000019, 0x8000000100059D90);
  Logger.info(_:)(v39, v17, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v39);
  sub_100004380(&qword_1000616E8);
  v40 = Promise.__allocating_init()();
  v41 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v38 + 16) = v40;
  swift_release(v41);
  v42 = v66;
  sub_10002A864(15, 3600, v60, v66);
  v43 = static os_signpost_type_t.end.getter();
  type metadata accessor for SignpostAggregator(0);
  v44 = (void *)static SignpostAggregator.log.getter();
  v45 = type metadata accessor for Trace(0);
  os_signpost(_:dso:log:name:signpostID:)(v43, &_mh_execute_header, v44, *(_QWORD *)(v65 + *(int *)(v45 + 20)), *(_QWORD *)(v65 + *(int *)(v45 + 20) + 8), *(unsigned __int8 *)(v65 + *(int *)(v45 + 20) + 16));

  v46 = sub_100004380(&qword_100061FF8);
  v47 = type metadata accessor for TodayWidgetEntry(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(_QWORD *)(v48 + 72);
  v50 = *(unsigned __int8 *)(v48 + 80);
  v51 = (v50 + 32) & ~v50;
  v52 = swift_allocObject(v46, v51 + v49, v50 | 7);
  *(_OWORD *)(v52 + 16) = v75;
  if (qword_1000608E8 != -1)
    swift_once(&qword_1000608E8, sub_10002D334);
  v53 = sub_1000056A0(v47, (uint64_t)qword_100061F00);
  sub_1000043C0(v53, v52 + v51, type metadata accessor for TodayWidgetEntry);
  v54 = v70;
  static TimelineReloadPolicy.after(_:)(v42);
  v55 = sub_100008DD8(qword_100061FC0, type metadata accessor for TodayWidgetEntry, (uint64_t)&unk_10004EAA0);
  v56 = v69;
  Timeline.init(entries:policy:)(v52, v54, v47, v55);
  v74(v56);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v56, v72);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v42, v68);
}

uint64_t sub_10002B484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  _BYTE *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  char v65;
  Swift::String v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;
  uint64_t v72;
  char v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, char *, uint64_t);
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const char *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD v141[3];
  void *v142;
  void *v143;

  v135 = a3;
  v139 = a2;
  v129 = type metadata accessor for TimelineProviderContext(0);
  v134 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v133 = v4;
  v128 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for OSLogger(0);
  v137 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v124 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100061FD8);
  __chkstk_darwin(v9);
  v11 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetFamily(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v125 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v123 - v16;
  v18 = type metadata accessor for Trace(0);
  v127 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v130 = v19;
  v131 = (uint64_t)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v140 = (uint64_t)&v123 - v21;
  v23 = TimelineProviderContext.isPreview.getter(v22);
  v24 = v23;
  v25 = v23 & 1;
  v138 = a1;
  TimelineProviderContext.family.getter(v23);
  v26 = &v11[*(int *)(v9 + 48)];
  *v11 = v25;
  (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 32))(v26, v17, v12);
  v136 = v13;
  v27 = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88))(v26, v12);
  v28 = v27;
  if ((v24 & 1) != 0)
  {
    if (v27 == enum case for WidgetFamily.systemSmall(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v29 = static SignpostAggregator.log.getter();
      v30 = v140;
      v31 = OSSignpostID.init(log:)(v29);
      v32 = static os_signpost_type_t.begin.getter(v31);
      v33 = (void *)static SignpostAggregator.log.getter();
      v34 = "TodayWidget:getSnapshot (small, preview)";
      v35 = 40;
      v36 = v32;
      v37 = v33;
      v38 = "TodayWidget:getSnapshot (small, preview)";
      v39 = 40;
LABEL_10:
      os_signpost(_:dso:log:name:signpostID:)(v36, &_mh_execute_header, v37, v38, v39, 2);

      v49 = v30 + *(int *)(v18 + 20);
      *(_QWORD *)v49 = v34;
      *(_QWORD *)(v49 + 8) = v35;
      *(_BYTE *)(v49 + 16) = 2;
      goto LABEL_11;
    }
    v30 = v140;
    if (v27 == enum case for WidgetFamily.systemMedium(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v43 = static SignpostAggregator.log.getter();
      v44 = OSSignpostID.init(log:)(v43);
      v45 = static os_signpost_type_t.begin.getter(v44);
      v33 = (void *)static SignpostAggregator.log.getter();
      v34 = "TodayWidget:getSnapshot (medium, preview)";
      v35 = 41;
      v36 = v45;
      v37 = v33;
      v38 = "TodayWidget:getSnapshot (medium, preview)";
      v39 = 41;
      goto LABEL_10;
    }
    v99 = enum case for WidgetFamily.systemLarge(_:);
    type metadata accessor for SignpostAggregator(0);
    v100 = static SignpostAggregator.log.getter();
    v101 = OSSignpostID.init(log:)(v100);
    v102 = v30;
    v103 = static os_signpost_type_t.begin.getter(v101);
    v104 = (void *)static SignpostAggregator.log.getter();
    if (v28 == v99)
    {
      v105 = "TodayWidget:getSnapshot (large, preview)";
      v106 = 40;
      v107 = v103;
      v108 = v104;
      v109 = "TodayWidget:getSnapshot (large, preview)";
      v110 = 40;
LABEL_18:
      os_signpost(_:dso:log:name:signpostID:)(v107, &_mh_execute_header, v108, v109, v110, 2);

      v115 = v102 + *(int *)(v18 + 20);
      *(_QWORD *)v115 = v105;
      *(_QWORD *)(v115 + 8) = v106;
      *(_BYTE *)(v115 + 16) = 2;
      goto LABEL_11;
    }
    v116 = "TodayWidget:getSnapshot (unknown family, preview)";
    v117 = 49;
    v118 = v103;
    v119 = v104;
    v120 = "TodayWidget:getSnapshot (unknown family, preview)";
    v121 = 49;
  }
  else
  {
    if (v27 == enum case for WidgetFamily.systemSmall(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v40 = static SignpostAggregator.log.getter();
      v30 = v140;
      v41 = OSSignpostID.init(log:)(v40);
      v42 = static os_signpost_type_t.begin.getter(v41);
      v33 = (void *)static SignpostAggregator.log.getter();
      v34 = "TodayWidget:getSnapshot (small)";
      v35 = 31;
      v36 = v42;
      v37 = v33;
      v38 = "TodayWidget:getSnapshot (small)";
      v39 = 31;
      goto LABEL_10;
    }
    v30 = v140;
    if (v27 == enum case for WidgetFamily.systemMedium(_:))
    {
      type metadata accessor for SignpostAggregator(0);
      v46 = static SignpostAggregator.log.getter();
      v47 = OSSignpostID.init(log:)(v46);
      v48 = static os_signpost_type_t.begin.getter(v47);
      v33 = (void *)static SignpostAggregator.log.getter();
      v34 = "TodayWidget:getSnapshot (medium)";
      v35 = 32;
      v36 = v48;
      v37 = v33;
      v38 = "TodayWidget:getSnapshot (medium)";
      v39 = 32;
      goto LABEL_10;
    }
    v111 = enum case for WidgetFamily.systemLarge(_:);
    type metadata accessor for SignpostAggregator(0);
    v112 = static SignpostAggregator.log.getter();
    v113 = OSSignpostID.init(log:)(v112);
    v102 = v30;
    v114 = static os_signpost_type_t.begin.getter(v113);
    v104 = (void *)static SignpostAggregator.log.getter();
    if (v28 == v111)
    {
      v105 = "TodayWidget:getSnapshot (large)";
      v106 = 31;
      v107 = v114;
      v108 = v104;
      v109 = "TodayWidget:getSnapshot (large)";
      v110 = 31;
      goto LABEL_18;
    }
    v116 = "TodayWidget:getSnapshot (unknown family)";
    v117 = 40;
    v118 = v114;
    v119 = v104;
    v120 = "TodayWidget:getSnapshot (unknown family)";
    v121 = 40;
  }
  os_signpost(_:dso:log:name:signpostID:)(v118, &_mh_execute_header, v119, v120, v121, 2);

  v122 = v102 + *(int *)(v18 + 20);
  *(_QWORD *)v122 = v116;
  *(_QWORD *)(v122 + 8) = v117;
  *(_BYTE *)(v122 + 16) = 2;
  (*(void (**)(_BYTE *, uint64_t))(v136 + 8))(v26, v12);
LABEL_11:
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v50 = v126;
  v51 = sub_1000056A0(v126, (uint64_t)qword_100063238);
  v52 = v124;
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v124, v51, v50);
  v53 = sub_100004380(&qword_100060BA0);
  v54 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v55 = *(_QWORD *)(v54 + 72);
  v56 = *(unsigned __int8 *)(v54 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = swift_allocObject(v53, v57 + v55, v56 | 7);
  *(_OWORD *)(v58 + 16) = xmmword_10004DFA0;
  v123 = v58 + v57;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(69, 4);
  v59._countAndFlagsBits = 0x7370616E53746567;
  v59._object = (void *)0xEC00000028746F68;
  LogMessage.StringInterpolation.appendLiteral(_:)(v59);
  v60 = v12;
  v142 = (void *)v12;
  v61 = sub_100008464(v141);
  v62 = v138;
  TimelineProviderContext.family.getter(v61);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
  sub_100004810((uint64_t)v141, &qword_100060BA8);
  v63._countAndFlagsBits = 44;
  v63._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  v65 = TimelineProviderContext.isPreview.getter(v64);
  v142 = &type metadata for Bool;
  LOBYTE(v141[0]) = v65 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
  sub_100004810((uint64_t)v141, &qword_100060BA8);
  v66._object = (void *)0x800000010005A090;
  v66._countAndFlagsBits = 0xD00000000000002BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v66);
  v67 = v125;
  v69 = TimelineProviderContext.family.getter(v68);
  v70 = WidgetFamily.rawValue.getter(v69);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v67, v60);
  v142 = &type metadata for Int;
  v141[0] = v70;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
  sub_100004810((uint64_t)v141, &qword_100060BA8);
  v71._countAndFlagsBits = 0x766572507369202CLL;
  v71._object = (void *)0xED0000203A776569;
  LogMessage.StringInterpolation.appendLiteral(_:)(v71);
  v73 = TimelineProviderContext.isPreview.getter(v72);
  v142 = &type metadata for Bool;
  LOBYTE(v141[0]) = v73 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
  sub_100004810((uint64_t)v141, &qword_100060BA8);
  v74._countAndFlagsBits = 0;
  v74._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v74);
  LogMessage.init(stringInterpolation:)(v7);
  Logger.info(_:)(v58, v50, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v58);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v52, v50);
  v75 = sub_1000307D4(v62, 1, v132);
  v76 = v134;
  v136 = *(_QWORD *)(v134 + 16);
  v137 = v75;
  v78 = v128;
  v77 = v129;
  ((void (*)(char *, uint64_t, uint64_t))v136)(v128, v62, v129);
  v79 = v131;
  sub_1000043C0(v140, v131, type metadata accessor for Trace);
  v80 = *(unsigned __int8 *)(v76 + 80);
  v81 = (v80 + 16) & ~v80;
  v133 += v81;
  v82 = (v133 + 7) & 0xFFFFFFFFFFFFFFF8;
  v83 = *(unsigned __int8 *)(v127 + 80);
  v84 = (v83 + v82 + 16) & ~v83;
  v85 = v130;
  v132 = v80 | v83 | 7;
  v86 = swift_allocObject(&unk_10005E8E0, v84 + v130, v132);
  v87 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 32);
  v87(v86 + v81, v78, v77);
  v88 = (_QWORD *)(v86 + v82);
  v89 = v135;
  *v88 = v139;
  v88[1] = v89;
  sub_10000B460(v79, v86 + v84, type metadata accessor for Trace);
  ((void (*)(char *, uint64_t, uint64_t))v136)(v78, v138, v77);
  sub_1000043C0(v140, v79, type metadata accessor for Trace);
  v90 = (v133 + v83) & ~v83;
  v91 = (v85 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_10005E908, v91 + 16, v132);
  v87(v92 + v81, v78, v77);
  sub_10000B460(v79, v92 + v90, type metadata accessor for Trace);
  v93 = (_QWORD *)(v92 + v91);
  *v93 = v139;
  v93[1] = v89;
  v94 = sub_100008218();
  v95 = swift_retain_n(v89, 2);
  v96 = static OS_dispatch_queue.main.getter(v95);
  v142 = (void *)v94;
  v143 = &protocol witness table for OS_dispatch_queue;
  v141[0] = v96;
  v97 = v137;
  Promise.then(perform:orCatchError:on:)(sub_10002DFCC, v86, sub_10002E118, v92, v141);
  swift_release(v97);
  swift_release(v86);
  swift_release(v92);
  sub_100008444(v141);
  return sub_10000A7A8(v140, type metadata accessor for Trace);
}

uint64_t sub_10002BE60(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  Swift::String v47;
  _QWORD *v48;
  Swift::String v49;
  uint64_t v50;
  char v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  Swift::String v66;
  uint64_t v67;
  _QWORD *v68;
  Swift::String v69;
  uint64_t v70;
  char v71;
  Swift::String v72;
  uint64_t v73;
  Swift::String v74;
  _QWORD *v75;
  Swift::String v76;
  uint64_t v77;
  char v78;
  Swift::String v79;
  uint64_t *v80;
  char *v81;
  int64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  Swift::String v100;
  char *v101;
  char *v102;
  void (*v103)(char *, char *, void *);
  Swift::String v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t);
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  char *v138;
  uint64_t *v139;
  uint64_t v140;
  _QWORD v141[3];
  void *v142;

  v132 = a3;
  v133 = a5;
  v131 = a4;
  v125 = a2;
  v6 = type metadata accessor for WidgetTodayCard(0);
  v121 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v139 = (uint64_t *)((char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v130 = type metadata accessor for TodayWidgetEntry(0);
  __chkstk_darwin(v130);
  v122 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v9);
  v127 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v123 = (char *)&v114 - v12;
  v13 = type metadata accessor for OSLogger(0);
  v135 = *(_QWORD *)(v13 - 8);
  v136 = v13;
  __chkstk_darwin(v13);
  v126 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v124 = (char *)&v114 - v16;
  v17 = type metadata accessor for TodayWidgetCardCollection(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v137 = (uint64_t *)((char *)&v114 - v22);
  v23 = sub_100004380(&qword_100062028);
  __chkstk_darwin(v23);
  v25 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v114 - v27;
  v29 = type metadata accessor for Date(0);
  v128 = *(_QWORD *)(v29 - 8);
  v129 = (void *)v29;
  __chkstk_darwin(v29);
  v138 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()(v31);
  v32 = *a1;
  v33 = *(_QWORD *)(*a1 + 16);
  v140 = v17;
  v134 = v28;
  if (v33)
  {
    v34 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v35 = *(_QWORD *)(v18 + 72);
    swift_bridgeObjectRetain(v32);
    v36 = v32 + v34 + v35 * (v33 - 1);
    v37 = -v35;
    v17 = v140;
    while (1)
    {
      sub_1000043C0(v36, (uint64_t)v20, type metadata accessor for TodayWidgetCardCollection);
      if (Date.compare(_:)(&v20[*(int *)(v17 + 20)]) != -1)
        break;
      --v33;
      sub_10000A7A8((uint64_t)v20, type metadata accessor for TodayWidgetCardCollection);
      v36 += v37;
      if (!v33)
      {
        v38 = 1;
        v28 = v134;
        goto LABEL_7;
      }
    }
    v28 = v134;
    sub_10000B460((uint64_t)v20, (uint64_t)v134, type metadata accessor for TodayWidgetCardCollection);
    v38 = 0;
  }
  else
  {
    swift_bridgeObjectRetain(v32);
    v38 = 1;
  }
LABEL_7:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v28, v38, 1, v17);
  swift_bridgeObjectRelease(v32);
  sub_10002E198((uint64_t)v28, (uint64_t)v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v25, 1, v17) == 1)
  {
    sub_100004810((uint64_t)v25, &qword_100062028);
    if (qword_100060850 != -1)
      swift_once(&qword_100060850, sub_10000555C);
    v39 = v136;
    v40 = sub_1000056A0(v136, (uint64_t)qword_100063238);
    v41 = v135;
    v42 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v124, v40, v39);
    v43 = sub_100004380(&qword_100060BA0);
    v44 = type metadata accessor for LogMessage(0);
    v45 = swift_allocObject(v43, ((*(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80) | 7);
    *(_OWORD *)(v45 + 16) = xmmword_10004DFA0;
    v46 = v123;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(94, 2);
    v47._countAndFlagsBits = 0x7370616E53746567;
    v47._object = (void *)0xEC00000028746F68;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    v142 = (void *)type metadata accessor for WidgetFamily(0);
    v48 = sub_100008464(v141);
    TimelineProviderContext.family.getter(v48);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v49._countAndFlagsBits = 44;
    v49._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    v51 = TimelineProviderContext.isPreview.getter(v50);
    v142 = &type metadata for Bool;
    LOBYTE(v141[0]) = v51 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v52._countAndFlagsBits = 0xD000000000000051;
    v52._object = (void *)0x800000010005A200;
    LogMessage.StringInterpolation.appendLiteral(_:)(v52);
    LogMessage.init(stringInterpolation:)(v46);
    Logger.info(_:)(v45, v39, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v45);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
    if (qword_1000608E8 != -1)
      swift_once(&qword_1000608E8, sub_10002D334);
    v53 = sub_1000056A0(v130, (uint64_t)qword_100061F00);
    v54 = v132(v53);
    v56 = v128;
    v55 = v129;
  }
  else
  {
    sub_10000B460((uint64_t)v25, (uint64_t)v137, type metadata accessor for TodayWidgetCardCollection);
    if (qword_100060850 != -1)
      swift_once(&qword_100060850, sub_10000555C);
    v57 = v136;
    v119 = sub_1000056A0(v136, (uint64_t)qword_100063238);
    v120 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
    v58 = v124;
    v120(v124, v119, v57);
    v59 = sub_100004380(&qword_100060BA0);
    v118 = v59;
    v60 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v61 = *(_QWORD *)(v60 + 72);
    v62 = *(unsigned __int8 *)(v60 + 80);
    v63 = (v62 + 32) & ~v62;
    v115 = v63 + v61;
    v117 = v62 | 7;
    v64 = swift_allocObject(v59, v63 + v61, v62 | 7);
    v116 = xmmword_10004DFA0;
    *(_OWORD *)(v64 + 16) = xmmword_10004DFA0;
    v114 = v64 + v63;
    v65 = v123;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(70, 2);
    v66._countAndFlagsBits = 0x7370616E53746567;
    v66._object = (void *)0xEC00000028746F68;
    LogMessage.StringInterpolation.appendLiteral(_:)(v66);
    v67 = type metadata accessor for WidgetFamily(0);
    v142 = (void *)v67;
    v68 = sub_100008464(v141);
    TimelineProviderContext.family.getter(v68);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v69._countAndFlagsBits = 44;
    v69._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v69);
    v71 = TimelineProviderContext.isPreview.getter(v70);
    v142 = &type metadata for Bool;
    LOBYTE(v141[0]) = v71 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v72._object = (void *)0x800000010005A260;
    v72._countAndFlagsBits = 0xD000000000000039;
    LogMessage.StringInterpolation.appendLiteral(_:)(v72);
    LogMessage.init(stringInterpolation:)(v65);
    Logger.info(_:)(v64, v57, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v64);
    v135 = *(_QWORD *)(v135 + 8);
    ((void (*)(char *, uint64_t))v135)(v58, v57);
    v120(v126, v119, v57);
    v73 = swift_allocObject(v118, v115, v117);
    *(_OWORD *)(v73 + 16) = v116;
    v124 = (char *)(v73 + v63);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 4);
    v74._countAndFlagsBits = 0x7370616E53746567;
    v74._object = (void *)0xEC00000028746F68;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    v142 = (void *)v67;
    v75 = sub_100008464(v141);
    TimelineProviderContext.family.getter(v75);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v76._countAndFlagsBits = 44;
    v76._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v76);
    v78 = TimelineProviderContext.isPreview.getter(v77);
    v142 = &type metadata for Bool;
    LOBYTE(v141[0]) = v78 & 1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v79._countAndFlagsBits = 0x69776F6853203A29;
    v79._object = (void *)0xEB0000000020676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v79);
    v80 = v137;
    v81 = (char *)*v137;
    v82 = *(_QWORD *)(*v137 + 16);
    v83 = _swiftEmptyArrayStorage;
    if (v82)
    {
      v125 = v73;
      v141[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v81);
      sub_10002DA34(0, v82, 0);
      v84 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      v123 = v81;
      v85 = (uint64_t)&v81[v84];
      v86 = *(_QWORD *)(v121 + 72);
      v83 = (_QWORD *)v141[0];
      do
      {
        v87 = v139;
        sub_1000043C0(v85, (uint64_t)v139, type metadata accessor for WidgetTodayCard);
        v89 = *v87;
        v88 = v87[1];
        swift_bridgeObjectRetain(v88);
        sub_10000A7A8((uint64_t)v87, type metadata accessor for WidgetTodayCard);
        if ((swift_isUniquelyReferenced_nonNull_native(v83) & 1) == 0)
        {
          sub_10002DA34(0, v83[2] + 1, 1);
          v83 = (_QWORD *)v141[0];
        }
        v91 = v83[2];
        v90 = v83[3];
        if (v91 >= v90 >> 1)
        {
          sub_10002DA34((char *)(v90 > 1), v91 + 1, 1);
          v83 = (_QWORD *)v141[0];
        }
        v83[2] = v91 + 1;
        v92 = &v83[2 * v91];
        v92[4] = v89;
        v92[5] = v88;
        v85 += v86;
        --v82;
        v93 = v140;
      }
      while (v82);
      swift_bridgeObjectRelease(v123);
      v28 = v134;
      v80 = v137;
      v73 = v125;
    }
    else
    {
      v93 = v140;
    }
    v141[0] = v83;
    v94 = sub_100004380(&qword_100062000);
    v95 = sub_10002DA7C();
    v96 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v94, v95);
    v98 = v97;
    swift_bridgeObjectRelease(v83);
    v142 = &type metadata for String;
    v141[0] = v96;
    v141[1] = v98;
    v99 = v127;
    LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v100._countAndFlagsBits = 544497952;
    v100._object = (void *)0xE400000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v100);
    v101 = (char *)v80 + *(int *)(v93 + 20);
    v55 = v129;
    v142 = v129;
    v102 = sub_100008464(v141);
    v56 = v128;
    v103 = *(void (**)(char *, char *, void *))(v128 + 16);
    v103((char *)v102, v101, v55);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v141);
    sub_100004810((uint64_t)v141, &qword_100060BA8);
    v104._countAndFlagsBits = 0;
    v104._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v104);
    LogMessage.init(stringInterpolation:)(v99);
    v105 = v136;
    v106 = v126;
    Logger.info(_:)(v73, v136, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v73);
    ((void (*)(char *, uint64_t))v135)(v106, v105);
    v107 = (uint64_t)v122;
    v103(v122, v101, v55);
    v108 = *v80;
    v109 = (_QWORD *)(v107 + *(int *)(v130 + 20));
    v109[2] = 0;
    v109[3] = 0;
    *v109 = v108;
    v109[1] = 0;
    swift_bridgeObjectRetain(v108);
    v132(v107);
    sub_10000A7A8(v107, type metadata accessor for TodayWidgetEntry);
    v54 = sub_10000A7A8((uint64_t)v80, type metadata accessor for TodayWidgetCardCollection);
  }
  v110 = static os_signpost_type_t.end.getter(v54);
  type metadata accessor for SignpostAggregator(0);
  v111 = (void *)static SignpostAggregator.log.getter();
  v112 = type metadata accessor for Trace(0);
  os_signpost(_:dso:log:name:signpostID:)(v110, &_mh_execute_header, v111, *(_QWORD *)(v133 + *(int *)(v112 + 20)), *(_QWORD *)(v133 + *(int *)(v112 + 20) + 8), *(unsigned __int8 *)(v133 + *(int *)(v112 + 20) + 16));

  sub_100004810((uint64_t)v28, &qword_100062028);
  return (*(uint64_t (**)(char *, void *))(v56 + 8))(v138, v55);
}

uint64_t sub_10002CA40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  _QWORD *v18;
  Swift::String v19;
  uint64_t v20;
  char v21;
  Swift::String v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  _QWORD *v42;
  char v43[8];
  _QWORD v44[3];
  void *v45;

  v39 = a5;
  v40 = a4;
  v38 = a3;
  v6 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v13 = sub_1000056A0(v9, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_100004380(&qword_100060BA0);
  v15 = type metadata accessor for LogMessage(0);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10004DFA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(60, 3);
  v17._countAndFlagsBits = 0x7370616E53746567;
  v17._object = (void *)0xEC00000028746F68;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  v45 = (void *)type metadata accessor for WidgetFamily(0);
  v18 = sub_100008464(v44);
  TimelineProviderContext.family.getter(v18);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
  sub_100004810((uint64_t)v44, &qword_100060BA8);
  v19._countAndFlagsBits = 44;
  v19._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v21 = TimelineProviderContext.isPreview.getter(v20);
  v45 = &type metadata for Bool;
  LOBYTE(v44[0]) = v21 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
  sub_100004810((uint64_t)v44, &qword_100060BA8);
  v22._object = (void *)0x8000000100059C30;
  v22._countAndFlagsBits = 0xD00000000000002FLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  swift_getErrorValue(a1, v43, &v41);
  v23 = v41;
  v24 = v42;
  v45 = v42;
  v25 = sub_100008464(v44);
  (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v24 - 1) + 16))(v25, v23, v24);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
  sub_100004810((uint64_t)v44, &qword_100060BA8);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.error(_:)(v16, v9, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v16);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v28 = static os_signpost_type_t.end.getter(v27);
  type metadata accessor for SignpostAggregator(0);
  v29 = (void *)static SignpostAggregator.log.getter();
  v30 = type metadata accessor for Trace(0);
  os_signpost(_:dso:log:name:signpostID:)(v28, &_mh_execute_header, v29, *(_QWORD *)(v38 + *(int *)(v30 + 20)), *(_QWORD *)(v38 + *(int *)(v30 + 20) + 8), *(unsigned __int8 *)(v38 + *(int *)(v30 + 20) + 16));

  v44[0] = a1;
  swift_errorRetain(a1);
  v31 = sub_100004380(&qword_100061FE8);
  if (swift_dynamicCast(v31, v44, v31, &type metadata for TodayWidgetPresenterUpdateError, 0))
  {
    if (qword_1000608F0 != -1)
      swift_once(&qword_1000608F0, sub_10002D3F8);
    v32 = type metadata accessor for TodayWidgetEntry(0);
    v33 = sub_1000056A0(v32, (uint64_t)qword_100061F18);
    v40(v33);
    return swift_errorRelease(v44[0]);
  }
  else
  {
    swift_errorRelease(v44[0]);
    if (qword_1000608E8 != -1)
      swift_once(&qword_1000608E8, sub_10002D334);
    v35 = type metadata accessor for TodayWidgetEntry(0);
    v36 = sub_1000056A0(v35, (uint64_t)qword_100061F00);
    return ((uint64_t (*)(uint64_t))v40)(v36);
  }
}

uint64_t sub_10002CE1C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10002D94C((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
      return v4;
  }
  else
  {
    sub_100004810((uint64_t)v6, &qword_100060BA8);
  }
  return 0;
}

uint64_t sub_10002CF2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000608E8 != -1)
    swift_once(&qword_1000608E8, sub_10002D334);
  v2 = type metadata accessor for TodayWidgetEntry(0);
  v3 = sub_1000056A0(v2, (uint64_t)qword_100061F00);
  return sub_1000043C0(v3, a1, type metadata accessor for TodayWidgetEntry);
}

uint64_t sub_10002CFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to TimelineProvider.relevances()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10002D00C;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10002D00C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10002D054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to TimelineProvider.relevance()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10002E1E0;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10002D0C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(type metadata accessor for TimelineProviderContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_100026E54(a1, v1 + v4, v1 + v7, v1 + v10, *(void (**)(char *))v11, *(_QWORD *)(v11 + 8));
}

uint64_t sub_10002D170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for TimelineProviderContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v5 + v7) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v9 + v11 + 16) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 64);
  v14 = v3 | v7 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v15 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v8, v15);
  swift_release(*(_QWORD *)(v0 + v9 + 8));
  v16 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v0 + v12, v16);
  return swift_deallocObject(v0, v13, v14);
}

double sub_10002D28C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(type metadata accessor for TimelineProviderContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8) + 80);
  return sub_1000291BC(a1, v1 + v4, v1 + v7, *(void (**)(uint64_t))(v1 + v8), *(_QWORD *)(v1 + v8 + 8), v1 + ((v8 + v9 + 16) & ~v9));
}

uint64_t sub_10002D334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TodayWidgetEntry(0);
  sub_100005660(v4, qword_100061F00);
  v5 = sub_1000056A0(v4, (uint64_t)qword_100061F00);
  static Date.distantPast.getter();
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  v7 = (_QWORD *)(v5 + *(int *)(v4 + 20));
  *v7 = _swiftEmptyArrayStorage;
  v7[1] = 0;
  v7[2] = 0;
  v7[3] = 0;
  return result;
}

uint64_t sub_10002D3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TodayWidgetEntry(0);
  sub_100005660(v4, qword_100061F18);
  v5 = sub_1000056A0(v4, (uint64_t)qword_100061F18);
  static Date.distantPast.getter();
  v6 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x8000000100059CA0);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1 | 0x8000000000000000;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  v14 = (uint64_t *)(v5 + *(int *)(v4 + 20));
  *v14 = v6;
  v14[1] = v8;
  v14[2] = v12;
  v14[3] = v10;
  return result;
}

uint64_t sub_10002D4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TimelineProviderContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10002D554(int a1, uint64_t a2)
{
  type metadata accessor for TimelineProviderContext(0);
  return sub_100029DAC(a1, a2);
}

uint64_t sub_10002D5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002D5B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002D5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for TimelineProviderContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v9 + v11) & ~v11;
  v13 = v2 | v7 | v11 | 7;
  v14 = (*(_QWORD *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v3, v15);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  v16 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v0 + v12, v16);
  swift_release(*(_QWORD *)(v0 + v14 + 8));
  return swift_deallocObject(v0, v14 + 16, v13);
}

uint64_t sub_10002D6D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for TimelineProviderContext(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10002A5AC(a1, v1 + v4, v1 + v7, v1 + v10, *(void (**)(char *))v11, *(_QWORD *)(v11 + 8));
}

uint64_t sub_10002D784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for TimelineProviderContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v5 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v9 + v11) & ~v11;
  v13 = v3 | v7 | v11 | 7;
  v14 = (*(_QWORD *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v15 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v8, v15);
  v16 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v0 + v12, v16);
  swift_release(*(_QWORD *)(v0 + v14 + 8));
  return swift_deallocObject(v0, v14 + 16, v13);
}

uint64_t sub_10002D8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(type metadata accessor for TimelineProviderContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for TodayWidgetTimelineProvider(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10002AE90(a1, v1 + v4, v1 + v7, v1 + v10, *(void (**)(char *))v11, *(_QWORD *)(v11 + 8));
}

uint64_t sub_10002D94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100060BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

size_t sub_10002D994(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_10002DCFC(a1, a2, a3, (_QWORD *)*v3, &qword_100062018, type metadata accessor for AppIconConfiguration);
  *v3 = result;
  return result;
}

size_t sub_10002D9C0(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_10002DCFC(a1, a2, a3, (_QWORD *)*v3, &qword_100062038, type metadata accessor for AppIcon);
  *v3 = result;
  return result;
}

_QWORD *sub_10002D9EC(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_10002DAC8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_10002DA08(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_10002DCFC(a1, a2, a3, (_QWORD *)*v3, &qword_100062030, type metadata accessor for WidgetTodayCard);
  *v3 = result;
  return result;
}

char *sub_10002DA34(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_10002DBFC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_10002DA50(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_10002DCFC(a1, a2, a3, (_QWORD *)*v3, &qword_100061FF8, type metadata accessor for TodayWidgetEntry);
  *v3 = result;
  return result;
}

unint64_t sub_10002DA7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062008;
  if (!qword_100062008)
  {
    v1 = sub_1000044A8(&qword_100062000);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100062008);
  }
  return result;
}

_QWORD *sub_10002DAC8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100004380(&qword_100062020);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    v14 = sub_100004380(&qword_100061258);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v14);
  }
  swift_release(a4);
  return v11;
}

char *sub_10002DBFC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100004380(&qword_100061AA8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
  }
  swift_release(a4);
  return v11;
}

size_t sub_10002DCFC(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100004380(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = a6(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v23, v24, v11, v20);
  }
  swift_release(a4);
  return (size_t)v18;
}

unint64_t sub_10002DE70(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    swift_stdlib_random(&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          swift_stdlib_random(&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002DEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for TimelineProviderContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 16) & ~v7;
  v9 = v8 + *(_QWORD *)(v6 + 64);
  v10 = v3 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  v11 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v8, v11);
  return swift_deallocObject(v0, v9, v10);
}

uint64_t sub_10002DFCC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for TimelineProviderContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Trace(0) - 8) + 80);
  return sub_10002BE60(a1, v1 + v4, *(uint64_t (**)(uint64_t))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), v1 + ((v5 + v6 + 16) & ~v6));
}

uint64_t sub_10002E048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for TimelineProviderContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v5 + v7) & ~v7;
  v9 = v3 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v11 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v9);
}

uint64_t sub_10002E118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(type metadata accessor for TimelineProviderContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for Trace(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10002CA40(a1, v1 + v4, v1 + v7, *(void (**)(uint64_t))v8, *(_QWORD *)(v8 + 8));
}

uint64_t sub_10002E198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100062028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10002E1E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *__dst;
  char *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for WidgetTodayCard(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100004380(&qword_100061D20);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v44 = v18;
      v20 = v16[1];
      *v15 = *v16;
      v15[1] = v20;
      v21 = v16[3];
      v15[2] = v16[2];
      v15[3] = v21;
      v22 = v16[5];
      v15[4] = v16[4];
      v15[5] = v22;
      *((_BYTE *)v15 + 48) = *((_BYTE *)v16 + 48);
      v41 = (void *)v16[7];
      v42 = v16[8];
      v15[7] = v41;
      v15[8] = v42;
      v43 = (void *)v16[9];
      v15[9] = v43;
      v23 = *(int *)(v17 + 44);
      __dst = (char *)v15 + v23;
      v39 = (char *)v16 + v23;
      v24 = type metadata accessor for URL(0);
      v37 = *(_QWORD *)(v24 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v22);
      v25 = v41;
      swift_bridgeObjectRetain(v42);
      v26 = v43;
      if (v40(v39, 1, v24))
      {
        v27 = sub_100004380(&qword_100061D18);
        memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v39, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v24);
      }
      v28 = *(int *)(v17 + 48);
      v29 = (char *)v15 + v28;
      v30 = (char *)v16 + v28;
      v31 = type metadata accessor for Date(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = sub_100004380(&qword_100061780);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v15, 0, 1, v17);
    }
    v34 = *(int *)(a3 + 24);
    v35 = *(uint64_t *)((char *)a2 + v34);
    *(uint64_t *)((char *)a1 + v34) = v35;
    swift_bridgeObjectRetain(v35);
  }
  return a1;
}

uint64_t sub_10002E4E0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for WidgetTodayCard(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)v6 + 5));

    swift_bridgeObjectRelease(*((_QWORD *)v6 + 8));
    v8 = &v6[*(int *)(v7 + 44)];
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = &v6[*(int *)(v7 + 48)];
    v12 = type metadata accessor for Date(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24)));
}

_QWORD *sub_10002E648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  void *v40;
  char *__dst;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v6 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for WidgetTodayCard(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100004380(&qword_100061D20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v42 = v16;
    v43 = a3;
    v44 = a2;
    v18 = v14[1];
    *v13 = *v14;
    v13[1] = v18;
    v19 = v14[3];
    v13[2] = v14[2];
    v13[3] = v19;
    v20 = v14[5];
    v13[4] = v14[4];
    v13[5] = v20;
    *((_BYTE *)v13 + 48) = *((_BYTE *)v14 + 48);
    v21 = (void *)v14[7];
    v22 = v14[8];
    v13[7] = v21;
    v13[8] = v22;
    v40 = (void *)v14[9];
    v13[9] = v40;
    v23 = *(int *)(v15 + 44);
    __dst = (char *)v13 + v23;
    v38 = (char *)v14 + v23;
    v24 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v24 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    v25 = v21;
    swift_bridgeObjectRetain(v22);
    v26 = v40;
    if (v39(v38, 1, v24))
    {
      v27 = sub_100004380(&qword_100061D18);
      memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v38, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v24);
    }
    v28 = *(int *)(v15 + 48);
    v29 = (char *)v13 + v28;
    v30 = (char *)v14 + v28;
    v31 = type metadata accessor for Date(0);
    v32 = *(_QWORD *)(v31 - 8);
    a2 = v44;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100004380(&qword_100061780);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    a3 = v43;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v13, 0, 1, v15);
  }
  v34 = *(int *)(a3 + 24);
  v35 = *(_QWORD *)((char *)a2 + v34);
  *(_QWORD *)((char *)a1 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  return a1;
}

_QWORD *sub_10002E920(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  void *v76;
  void *__dst;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;

  v4 = a2;
  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061110);
    v6 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v4, v6) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *v4;
      *a1 = *v4;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t)a1 + v12;
  v14 = (char *)v4 + v12;
  v15 = type metadata accessor for WidgetTodayCard(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_10000A7A8(v13, type metadata accessor for WidgetTodayCard);
      goto LABEL_12;
    }
    v80 = v4;
    v82 = a3;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v31 = *((_QWORD *)v14 + 1);
    v32 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v13 + 8) = v31;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRelease(v32);
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    v33 = *((_QWORD *)v14 + 3);
    v34 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v13 + 24) = v33;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRelease(v34);
    *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
    v35 = *((_QWORD *)v14 + 5);
    v36 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v35;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRelease(v36);
    *(_BYTE *)(v13 + 48) = v14[48];
    v37 = *(void **)(v13 + 56);
    v38 = (void *)*((_QWORD *)v14 + 7);
    *(_QWORD *)(v13 + 56) = v38;
    v39 = v38;

    v40 = *((_QWORD *)v14 + 8);
    v41 = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v13 + 64) = v40;
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRelease(v41);
    v42 = *(void **)(v13 + 72);
    v43 = (void *)*((_QWORD *)v14 + 9);
    *(_QWORD *)(v13 + 72) = v43;
    v44 = v43;

    v45 = *(int *)(v15 + 44);
    v46 = (void *)(v13 + v45);
    v47 = &v14[v45];
    v48 = type metadata accessor for URL(0);
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
    v51 = v50(v46, 1, v48);
    v52 = v50(v47, 1, v48);
    if (v51)
    {
      if (!v52)
      {
        (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v52)
      {
        (*(void (**)(void *, char *, uint64_t))(v49 + 24))(v46, v47, v48);
LABEL_24:
        v60 = *(int *)(v15 + 48);
        v61 = (void *)(v13 + v60);
        v62 = &v14[v60];
        v63 = type metadata accessor for Date(0);
        v64 = *(_QWORD *)(v63 - 8);
        v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
        v66 = v65(v61, 1, v63);
        v67 = v65(v62, 1, v63);
        a3 = v82;
        if (v66)
        {
          if (!v67)
          {
            (*(void (**)(void *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_30:
            v4 = v80;
            goto LABEL_31;
          }
        }
        else
        {
          if (!v67)
          {
            (*(void (**)(void *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
            goto LABEL_30;
          }
          (*(void (**)(void *, uint64_t))(v64 + 8))(v61, v63);
        }
        v68 = sub_100004380(&qword_100061780);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v49 + 8))(v46, v48);
    }
    v59 = sub_100004380(&qword_100061D18);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_24;
  }
  if (v19)
  {
LABEL_12:
    v30 = sub_100004380(&qword_100061D20);
    memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_31;
  }
  v78 = v16;
  v79 = v4;
  v81 = a3;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v20 = *((_QWORD *)v14 + 1);
  *(_QWORD *)(v13 + 8) = v20;
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  v21 = *((_QWORD *)v14 + 3);
  *(_QWORD *)(v13 + 24) = v21;
  *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
  v22 = *((_QWORD *)v14 + 5);
  *(_QWORD *)(v13 + 40) = v22;
  *(_BYTE *)(v13 + 48) = v14[48];
  v23 = (void *)*((_QWORD *)v14 + 7);
  *(_QWORD *)(v13 + 56) = v23;
  v24 = *((_QWORD *)v14 + 8);
  *(_QWORD *)(v13 + 64) = v24;
  v76 = (void *)*((_QWORD *)v14 + 9);
  *(_QWORD *)(v13 + 72) = v76;
  v25 = *(int *)(v15 + 44);
  __dst = (void *)(v13 + v25);
  v74 = &v14[v25];
  v26 = type metadata accessor for URL(0);
  v73 = *(_QWORD *)(v26 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  v27 = v23;
  swift_bridgeObjectRetain(v24);
  v28 = v76;
  if (v75(v74, 1, v26))
  {
    v29 = sub_100004380(&qword_100061D18);
    memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v73 + 16))(__dst, v74, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v26);
  }
  v53 = *(int *)(v15 + 48);
  v54 = (void *)(v13 + v53);
  v55 = &v14[v53];
  v56 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v56 - 8);
  v4 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    v58 = sub_100004380(&qword_100061780);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  a3 = v81;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v13, 0, 1, v15);
LABEL_31:
  v69 = *(int *)(a3 + 24);
  v70 = *(_QWORD *)((char *)v4 + v69);
  v71 = *(_QWORD *)((char *)a1 + v69);
  *(_QWORD *)((char *)a1 + v69) = v70;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease(v71);
  return a1;
}

char *sub_10002EEB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v6 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for WidgetTodayCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_100004380(&qword_100061D20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v28 = a3;
    v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    v9[48] = v10[48];
    *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
    *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
    v15 = *(int *)(v11 + 44);
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100004380(&qword_100061D18);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = *(int *)(v11 + 48);
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = type metadata accessor for Date(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100004380(&qword_100061780);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    a3 = v28;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10002F120(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  size_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v60;
  uint64_t v61;
  uint64_t v62;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061110);
    v6 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t)&a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for WidgetTodayCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10000A7A8(v9, type metadata accessor for WidgetTodayCard);
      goto LABEL_11;
    }
    v62 = a3;
    v24 = *((_QWORD *)v10 + 1);
    v25 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v24;
    swift_bridgeObjectRelease(v25);
    v26 = *((_QWORD *)v10 + 3);
    v27 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
    *(_QWORD *)(v9 + 24) = v26;
    swift_bridgeObjectRelease(v27);
    v28 = *((_QWORD *)v10 + 5);
    v29 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
    *(_QWORD *)(v9 + 40) = v28;
    swift_bridgeObjectRelease(v29);
    *(_BYTE *)(v9 + 48) = v10[48];
    v30 = *(void **)(v9 + 56);
    *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);

    v31 = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v9 + 64) = *((_QWORD *)v10 + 8);
    swift_bridgeObjectRelease(v31);
    v32 = *(void **)(v9 + 72);
    *(_QWORD *)(v9 + 72) = *((_QWORD *)v10 + 9);

    v33 = *(int *)(v11 + 44);
    v34 = (void *)(v9 + v33);
    v35 = &v10[v33];
    v36 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
    v60 = v34;
    LODWORD(v34) = v38(v34, 1, v36);
    v39 = v38(v35, 1, v36);
    if ((_DWORD)v34)
    {
      if (v39)
      {
        v40 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061D18) - 8) + 64);
        v41 = v60;
LABEL_22:
        memcpy(v41, v35, v40);
        goto LABEL_25;
      }
      (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v60, v35, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v60, 0, 1, v36);
    }
    else
    {
      if (v39)
      {
        (*(void (**)(void *, uint64_t))(v37 + 8))(v60, v36);
        v40 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061D18) - 8) + 64);
        v41 = v60;
        goto LABEL_22;
      }
      (*(void (**)(void *, char *, uint64_t))(v37 + 40))(v60, v35, v36);
    }
LABEL_25:
    v48 = *(int *)(v11 + 48);
    v49 = (void *)(v9 + v48);
    v50 = &v10[v48];
    v51 = type metadata accessor for Date(0);
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
    v54 = v53(v49, 1, v51);
    v55 = v53(v50, 1, v51);
    if (v54)
    {
      if (!v55)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_31:
        a3 = v62;
        goto LABEL_32;
      }
    }
    else
    {
      if (!v55)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 40))(v49, v50, v51);
        goto LABEL_31;
      }
      (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
    }
    v56 = sub_100004380(&qword_100061780);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_31;
  }
  if (v15)
  {
LABEL_11:
    v23 = sub_100004380(&qword_100061D20);
    memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_32;
  }
  v61 = a3;
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_BYTE *)(v9 + 48) = v10[48];
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 72) = *((_QWORD *)v10 + 9);
  v17 = *(int *)(v11 + 44);
  v18 = (void *)(v9 + v17);
  v19 = &v10[v17];
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100004380(&qword_100061D18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v42 = *(int *)(v11 + 48);
  v43 = (void *)(v9 + v42);
  v44 = &v10[v42];
  v45 = type metadata accessor for Date(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100004380(&qword_100061780);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  a3 = v61;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_32:
  v57 = *(int *)(a3 + 24);
  v58 = *(_QWORD *)&a1[v57];
  *(_QWORD *)&a1[v57] = *(_QWORD *)&a2[v57];
  swift_bridgeObjectRelease(v58);
  return a1;
}

uint64_t sub_10002F604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002F610);
}

uint64_t sub_10002F610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_100004380(&qword_100061120);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061D20);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10002F6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002F6CC);
}

uint64_t sub_10002F6CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100004380(&qword_100061120);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100004380(&qword_100061D20);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TodayWidgetLargeEntryView(uint64_t a1)
{
  uint64_t result;

  result = qword_100062098;
  if (!qword_100062098)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetLargeEntryView);
  return result;
}

void sub_10002F7B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_10002147C(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002147C(319, (unint64_t *)&unk_100061D90, type metadata accessor for WidgetTodayCard, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_10002F874(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050BB4, 1);
}

uint64_t sub_10002F884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);

  v1 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TodayCardListViewItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TodayWidgetLargeEntryView(0) + 24));
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
    v18 = sub_100004380(&qword_100061610);
    v19 = *(_QWORD *)(v5 + 72);
    v20 = *(unsigned __int8 *)(v5 + 80);
    v21 = (v20 + 32) & ~v20;
    v17 = swift_allocObject(v18, v21 + 2 * v19, v20 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_10004E5E0;
    v22 = v17 + v21;
    v23 = type metadata accessor for WidgetTodayCard(0);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v24(v22, 1, 1, v23);
    v24(v22 + v19, 1, 1, v23);
    return v17;
  }
  v10 = type metadata accessor for WidgetTodayCard(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  sub_1000043C0(v12, (uint64_t)v7, type metadata accessor for WidgetTodayCard);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
  v27(v7, 0, 1, v10);
  v13 = sub_100004380(&qword_100061610);
  v14 = *(_QWORD *)(v5 + 72);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  if (v9 == 1)
  {
    v17 = swift_allocObject(v13, v16 + v14, v15 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_10004DFA0;
    sub_10000B460((uint64_t)v7, v17 + v16, type metadata accessor for TodayCardListViewItem);
    return v17;
  }
  v17 = swift_allocObject(v13, v16 + 2 * v14, v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_10004E5E0;
  result = sub_1000043C0((uint64_t)v7, v17 + v16, type metadata accessor for TodayCardListViewItem);
  if (*(_QWORD *)(v8 + 16) >= 2uLL)
  {
    sub_1000043C0(v12 + *(_QWORD *)(v11 + 72), (uint64_t)v3, type metadata accessor for WidgetTodayCard);
    v27(v3, 0, 1, v10);
    sub_10000B460((uint64_t)v3, v17 + v16 + v14, type metadata accessor for TodayCardListViewItem.Content);
    sub_10000A7A8((uint64_t)v7, type metadata accessor for TodayCardListViewItem);
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002FB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v30[1] = a1;
  v3 = type metadata accessor for ContainerBackgroundPlacement(0);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004380(&qword_1000620D8);
  __chkstk_darwin(v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004380(&qword_1000620E0);
  __chkstk_darwin(v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter(v16);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v17 = sub_100004380(&qword_1000620E8);
  sub_10002FD88(v2, (uint64_t)&v12[*(int *)(v17 + 44)]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.dark(_:), v6);
  KeyPath = swift_getKeyPath(&unk_10004F4C0);
  v19 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  v20 = sub_100004380(&qword_100061598);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v19 + *(int *)(v20 + 28), v9, v6);
  *v19 = KeyPath;
  sub_1000047CC((uint64_t)v12, (uint64_t)v15, &qword_1000620D8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v21 = sub_100004810((uint64_t)v12, &qword_1000620D8);
  v22 = static ContainerBackgroundPlacement.widget.getter(v21);
  v23 = static Alignment.center.getter(v22);
  v25 = v24;
  v26 = type metadata accessor for PlatterView(0);
  v27 = sub_1000303B4();
  v28 = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
  View.containerBackground<A>(for:alignment:content:)(v5, v23, v25, sub_100030280, 0, v13, v26, v27, v28);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v32);
  return sub_100004810((uint64_t)v15, &qword_1000620E0);
}

uint64_t sub_10002FD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a2;
  v52 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  __chkstk_darwin(v52);
  v4 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = sub_100004380(&qword_100062100);
  __chkstk_darwin(v48);
  v51 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for PlaceholderTodayCardView(0);
  __chkstk_darwin(v50);
  v7 = (uint64_t *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  v11 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - v15;
  v17 = type metadata accessor for WidgetTodayCard(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100004380(&qword_100062108);
  __chkstk_darwin(v21);
  v49 = (uint64_t)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v47 - v24;
  v26 = *(int *)(type metadata accessor for TodayWidgetLargeEntryView(0) + 20);
  v53 = a1;
  sub_1000047CC(a1 + v26, (uint64_t)v16, &qword_100061D20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100004810((uint64_t)v16, &qword_100061D20);
    *v7 = swift_getKeyPath(&unk_10004F520);
    v27 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v7, v27, 0);
    v28 = v50;
    v29 = (_QWORD *)((char *)v7 + *(int *)(v50 + 20));
    *v29 = swift_getKeyPath(&unk_10004F550);
    v30 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    v31 = (_OWORD *)((char *)v7 + *(int *)(v28 + 24));
    *v31 = 0u;
    v31[1] = 0u;
    sub_10000B460((uint64_t)v7, (uint64_t)v10, type metadata accessor for PlaceholderTodayCardView);
    v32 = v51;
    sub_1000043C0((uint64_t)v10, v51, type metadata accessor for PlaceholderTodayCardView);
    swift_storeEnumTagMultiPayload(v32, v48, 1);
    v33 = sub_100008DD8(&qword_100062110, type metadata accessor for TodayWidgetSmallMediumEntryView, (uint64_t)&unk_10004F250);
    v34 = sub_100008DD8(&qword_1000615D8, type metadata accessor for PlaceholderTodayCardView, (uint64_t)&unk_10004E408);
    _ConditionalContent<>.init(storage:)(v32, v52, v28, v33, v34);
    v35 = (uint64_t)v10;
    v36 = type metadata accessor for PlaceholderTodayCardView;
  }
  else
  {
    sub_10000B460((uint64_t)v16, (uint64_t)v20, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)v20, (uint64_t)v13, type metadata accessor for WidgetTodayCard);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    *v4 = swift_getKeyPath(&unk_10004F550);
    v37 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v4, v37, 0);
    v38 = v52;
    sub_100030490((uint64_t)v13, (uint64_t)v4 + *(int *)(v52 + 20));
    v39 = v51;
    sub_1000043C0((uint64_t)v4, v51, type metadata accessor for TodayWidgetSmallMediumEntryView);
    swift_storeEnumTagMultiPayload(v39, v48, 0);
    v40 = sub_100008DD8(&qword_100062110, type metadata accessor for TodayWidgetSmallMediumEntryView, (uint64_t)&unk_10004F250);
    v41 = sub_100008DD8(&qword_1000615D8, type metadata accessor for PlaceholderTodayCardView, (uint64_t)&unk_10004E408);
    _ConditionalContent<>.init(storage:)(v39, v38, v50, v40, v41);
    sub_10000A7A8((uint64_t)v4, type metadata accessor for TodayWidgetSmallMediumEntryView);
    v35 = (uint64_t)v20;
    v36 = type metadata accessor for WidgetTodayCard;
  }
  sub_10000A7A8(v35, v36);
  v42 = sub_10002F884();
  v43 = v49;
  sub_1000047CC((uint64_t)v25, v49, &qword_100062108);
  v44 = v54;
  sub_1000047CC(v43, v54, &qword_100062108);
  v45 = (_QWORD *)(v44 + *(int *)(sub_100004380(&qword_100062118) + 48));
  *v45 = 0x4030000000000000;
  v45[1] = v42;
  v45[2] = 0x4024000000000000;
  swift_bridgeObjectRetain(v42);
  sub_100004810((uint64_t)v25, &qword_100062108);
  swift_bridgeObjectRelease(v42);
  return sub_100004810(v43, &qword_100062108);
}

uint64_t sub_100030280@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  *a1 = swift_getKeyPath(&unk_10004F4F0);
  v2 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(a1, v2, 0);
  result = type metadata accessor for PlatterView(0);
  *((_BYTE *)a1 + *(int *)(result + 20)) = 1;
  return result;
}

uint64_t sub_1000302E0()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100030304()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100030324(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

uint64_t sub_1000303A0(uint64_t a1)
{
  return sub_100030324(a1);
}

unint64_t sub_1000303B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000620F0;
  if (!qword_1000620F0)
  {
    v1 = sub_1000044A8(&qword_1000620E0);
    sub_10000B4D0(&qword_1000620F8, &qword_1000620D8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10000B4D0(&qword_1000615E0, &qword_100061598, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000620F0);
  }
  return result;
}

uint64_t sub_100030450()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100030470(uint64_t a1)
{
  return sub_100030324(a1);
}

uint64_t sub_100030490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100061D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000304D8()
{
  _QWORD v1[4];

  v1[0] = sub_1000044A8(&qword_1000620E0);
  v1[1] = type metadata accessor for PlatterView(255);
  v1[2] = sub_1000303B4();
  v1[3] = sub_100008DD8(&qword_1000615F0, type metadata accessor for PlatterView, (uint64_t)&unk_10004DE90);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
}

ValueMetadata *type metadata accessor for EmptyAppStateControllerFactory()
{
  return &type metadata for EmptyAppStateControllerFactory;
}

uint64_t sub_100030570()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  unint64_t v7;
  _QWORD v8[5];

  v5 = 0u;
  v6 = 0u;
  v7 = 0;
  v8[3] = type metadata accessor for ASDDeviceAppFetcher(0);
  v8[4] = &protocol witness table for ASDDeviceAppFetcher;
  sub_100008464(v8);
  ASDDeviceAppFetcher.init(regulatoryLogger:)(&v5);
  *((_QWORD *)&v6 + 1) = type metadata accessor for EmptyUpdateRegistry(0);
  v7 = sub_10003061C();
  v0 = sub_100008464(&v5);
  EmptyUpdateRegistry.init()(v0, v1, v2);
  v3 = makeModernAppStateController(deviceAppFetcher:updateRegistry:dataSources:)(v8, &v5, _swiftEmptyArrayStorage);
  sub_100008444(&v5);
  sub_100008444(v8);
  return v3;
}

unint64_t sub_10003061C()
{
  unint64_t result;
  uint64_t updated;

  result = qword_100062120;
  if (!qword_100062120)
  {
    updated = type metadata accessor for EmptyUpdateRegistry(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyUpdateRegistry, updated);
    atomic_store(result, (unint64_t *)&qword_100062120);
  }
  return result;
}

_QWORD *sub_100030664(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = &_swiftEmptyArrayStorage;
    if (!v7)
      break;
    v18 = &_swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v7);
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    v9 = 0;
    while (v7 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      }
      else
      {
        v10 = *(_QWORD *)(a3 + 8 * v9 + 32);
        swift_retain(v10);
      }
      v16 = v10;
      a1(&v17, &v16);
      v11 = swift_release(v10);
      if (v4)
        return (_QWORD *)swift_release(v18);
      ++v9;
      v12 = v17;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v18[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      if (v7 == v9)
        return v18;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_1000307D4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  Swift::String v33;
  void *object;
  Swift::String v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  Swift::String v42;
  uint64_t KeyPath;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  Swift::String v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  Swift::String v60;
  Swift::String v61;
  __n128 v62;
  _QWORD *v63;
  unint64_t v64;
  __n128 v65;
  char v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  void *v69;
  __n128 v70;
  uint64_t v71;
  uint64_t *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;

  v82 = a2;
  v80 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  __chkstk_darwin(v80);
  v79 = (uint64_t *)((char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v6);
  v88 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSLogger(0);
  v84 = *(_QWORD *)(v8 - 8);
  v85 = v8;
  v9 = __chkstk_darwin(v8);
  v83 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0, v9);
  v86 = *(_QWORD *)(v11 - 8);
  v87 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004380(&qword_1000613F8);
  __chkstk_darwin(v14);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ContentSizeCategory(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for WidgetFamily(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = a3;
  v89 = WidgetKind.rawValue.getter(v25);
  v90 = v26;
  v27._countAndFlagsBits = 45;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v29 = TimelineProviderContext.family.getter(v28);
  v30 = WidgetFamily.rawValue.getter(v29);
  v31 = v24;
  v32 = a1;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v21);
  v92 = (void *)v30;
  v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v33._object;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(object);
  v35._countAndFlagsBits = 45;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  v37 = TimelineProviderContext.isPreview.getter(v36);
  v38 = (v37 & 1) == 0;
  if ((v37 & 1) != 0)
    v39 = 1702195828;
  else
    v39 = 0x65736C6166;
  if (v38)
    v40 = 0xE500000000000000;
  else
    v40 = 0xE400000000000000;
  v41 = v40;
  String.append(_:)(*(Swift::String *)&v39);
  swift_bridgeObjectRelease(v40);
  v42._countAndFlagsBits = 45;
  v42._object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  TimelineProviderContext.environmentVariants.getter();
  KeyPath = swift_getKeyPath(&unk_10004F600);
  v44 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  v45 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v13, v87, v45);
  if (!v44)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    v48 = v84;
    v47 = v85;
    v49 = v83;
LABEL_13:
    (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for ContentSizeCategory.large(_:), v17);
    sub_100004810((uint64_t)v16, &qword_1000613F8);
    goto LABEL_15;
  }
  if (*(_QWORD *)(v44 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v16, v44 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v17);
    v46 = 0;
  }
  else
  {
    v46 = 1;
  }
  v48 = v84;
  v47 = v85;
  v49 = v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v46, 1, v17);
  swift_bridgeObjectRelease(v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    goto LABEL_13;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
LABEL_15:
  v50 = sub_100008DD8(&qword_100062140, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t)&protocol conformance descriptor for ContentSizeCategory);
  v51._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v17, v50);
  v52 = v51._object;
  String.append(_:)(v51);
  swift_bridgeObjectRelease(v52);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v53 = v89;
  v54 = v90;
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v55 = sub_1000056A0(v47, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v49, v55, v47);
  v56 = sub_100004380(&qword_100060BA0);
  v57 = type metadata accessor for LogMessage(0);
  v58 = swift_allocObject(v56, ((*(unsigned __int8 *)(*(_QWORD *)(v57 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v57 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v57 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v57 - 8) + 80) | 7);
  *(_OWORD *)(v58 + 16) = xmmword_10004DFA0;
  v59 = v88;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1);
  v60._object = (void *)0x800000010005A2A0;
  v60._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v60);
  v91 = &type metadata for String;
  v89 = v53;
  v90 = v54;
  swift_bridgeObjectRetain(v54);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
  sub_100004810((uint64_t)&v89, &qword_100060BA8);
  v61._countAndFlagsBits = 0;
  v61._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v61);
  LogMessage.init(stringInterpolation:)(v59);
  Logger.info(_:)(v58, v47, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v58);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
  if (qword_100060908 != -1)
    swift_once(&qword_100060908, sub_100031500);
  swift_beginAccess(&off_100062130, &v89, 32, 0);
  v63 = off_100062130;
  if (!*((_QWORD *)off_100062130 + 2))
    goto LABEL_23;
  swift_bridgeObjectRetain(v54);
  v64 = sub_100042A90(v53, v54);
  if ((v66 & 1) == 0)
  {
    swift_bridgeObjectRelease(v54);
LABEL_23:
    swift_endAccess(&v89, v62);
    sub_100004380(&qword_100062148);
    v67 = Promise.__allocating_init()();
    swift_beginAccess(&off_100062130, &v89, 33, 0);
    swift_bridgeObjectRetain(v54);
    swift_retain(v67);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_100062130);
    v92 = off_100062130;
    off_100062130 = (_UNKNOWN *)0x8000000000000000;
    sub_100043910(v67, v53, v54, isUniquelyReferenced_nonNull_native);
    v69 = off_100062130;
    off_100062130 = v92;
    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v69);
    swift_endAccess(&v89, v70);
    v72 = v79;
    v71 = v80;
    v73 = (char *)v79 + *(int *)(v80 + 20);
    v74 = type metadata accessor for TimelineProviderContext(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v73, v32, v74);
    v75 = (char *)v72 + *(int *)(v71 + 28);
    v76 = type metadata accessor for WidgetKind(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v75, v81, v76);
    *v72 = v53;
    v72[1] = v54;
    *((_BYTE *)v72 + *(int *)(v71 + 24)) = v82 & 1;
    sub_100031020(v72);
    sub_1000331F8((uint64_t)v72);
    return v67;
  }
  v67 = *(_QWORD *)(v63[7] + 8 * v64);
  swift_endAccess(&v89, v65);
  swift_retain(v67);
  swift_bridgeObjectRelease_n(v54, 2);
  return v67;
}

uint64_t sub_100030EE8()
{
  return 1;
}

Swift::Int sub_100030EF0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_100030F30()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_100030F54(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_100030FA0()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for Bootstrap();
  swift_allocObject(v0, 25, 7);
  result = sub_100016DB0();
  qword_100063360 = result;
  return result;
}

uint64_t type metadata accessor for AppStoreWidgetCacheDescriptor(uint64_t a1)
{
  uint64_t result;

  result = qword_100062200;
  if (!qword_100062200)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppStoreWidgetCacheDescriptor);
  return result;
}

unint64_t sub_100031020(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  unint64_t v13;
  __n128 v14;
  char v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSString v19;
  id v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[24];
  uint64_t v43;

  v2 = sub_100004380(&qword_100062150);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((byte_100062138 & 1) != 0)
  {
    if (qword_100060900 != -1)
      swift_once(&qword_100060900, sub_1000314EC);
    sub_1000043C0((uint64_t)a1, (uint64_t)v4, type metadata accessor for AppStoreWidgetCacheDescriptor);
    return sub_100032BD0(0, 0, (uint64_t)v4, &qword_100062158, type metadata accessor for AppStoreWidgetCacheDescriptor, &qword_100062150);
  }
  if (qword_100060908 != -1)
    swift_once(&qword_100060908, sub_100031500);
  v9 = *a1;
  v10 = a1[1];
  swift_beginAccess(&off_100062130, v42, 32, 0);
  v12 = off_100062130;
  if (!*((_QWORD *)off_100062130 + 2))
    return swift_endAccess(v42, v11);
  swift_bridgeObjectRetain(v10);
  v13 = sub_100042A90(v9, v10);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease(v10);
    return swift_endAccess(v42, v11);
  }
  v16 = *(_QWORD *)(v12[7] + 8 * v13);
  swift_endAccess(v42, v14);
  swift_retain(v16);
  swift_bridgeObjectRelease(v10);
  byte_100062138 = 1;
  v17 = (void *)objc_opt_self(NSUserDefaults);
  v18 = objc_msgSend(v17, "standardUserDefaults");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "valueForKey:", v19);

  if (v20)
  {
    _bridgeAnyObjectToAny(_:)(&v40, v20);
    swift_unknownObjectRelease(v20);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_10002D94C((uint64_t)&v40, (uint64_t)v42);
  if (v43)
  {
    v21 = swift_dynamicCast(&v38, v42, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v21)
      v22 = v38;
    else
      v22 = 0;
    if (v21)
      v23 = v39;
    else
      v23 = 0;
  }
  else
  {
    sub_100004810((uint64_t)v42, &qword_100060BA8);
    v22 = 0;
    v23 = 0;
  }
  v24 = objc_msgSend(v17, "standardUserDefaults");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "valueForKey:", v25);

  if (v26)
  {
    _bridgeAnyObjectToAny(_:)(&v40, v26);
    swift_unknownObjectRelease(v26);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_10002D94C((uint64_t)&v40, (uint64_t)v42);
  if (v43)
  {
    v27 = swift_dynamicCast(&v38, v42, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v27)
      v28 = v38;
    else
      v28 = 0;
    if (v27)
      v29 = v39;
    else
      v29 = 0;
  }
  else
  {
    sub_100004810((uint64_t)v42, &qword_100060BA8);
    v28 = 0;
    v29 = 0;
  }
  if (qword_1000608F8 != -1)
    swift_once(&qword_1000608F8, sub_100030FA0);
  v30 = qword_100063360;
  sub_1000043C0((uint64_t)a1, (uint64_t)v7, type metadata accessor for AppStoreWidgetCacheDescriptor);
  v31 = *(_QWORD *)(v30 + 16);
  swift_retain(v16);
  swift_retain(v31);
  v33 = Promise.isResolved.getter(v32);
  swift_release(v31);
  if ((v33 & 1) == 0 && *(_BYTE *)(v30 + 24) != 1)
  {
    *(_BYTE *)(v30 + 24) = 1;
    v34 = objc_autoreleasePoolPush();
    sub_100016E90(v30);
    objc_autoreleasePoolPop(v34);
  }
  v35 = *(_QWORD *)(v30 + 16);
  swift_retain(v35);
  sub_10003178C(v36, (uint64_t)v7, v28, v29, v22, v23, v16);
  swift_release(v16);
  swift_release(v35);
  sub_1000331F8((uint64_t)v7);
  swift_release(v16);
  swift_bridgeObjectRelease(v29);
  return swift_bridgeObjectRelease(v23);
}

void sub_1000314EC()
{
  qword_100062128 = (uint64_t)&_swiftEmptyArrayStorage;
}

void *sub_100031500()
{
  void *result;

  result = (void *)sub_100031524((uint64_t)_swiftEmptyArrayStorage);
  off_100062130 = result;
  return result;
}

unint64_t sub_100031524(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004380((uint64_t *)&unk_100062C50);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    result = sub_100042A90(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

size_t sub_10003163C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  size_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v15 - v9;
  v11 = (_QWORD *)*v1;
  if (!*(_QWORD *)(*v1 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(a1, 1, 1, v3, v8);
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((result & 1) != 0)
  {
    v13 = v11[2];
    if (v13)
    {
LABEL_4:
      v14 = v13 - 1;
      sub_100033318((uint64_t)v11+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * (v13 - 1), (uint64_t)v6);
      v11[2] = v14;
      *v1 = v11;
      sub_100033318((uint64_t)v6, (uint64_t)v10);
      sub_100033318((uint64_t)v10, a1);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  else
  {
    result = sub_1000331C4(v11);
    v11 = (_QWORD *)result;
    v13 = *(_QWORD *)(result + 16);
    if (v13)
      goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003178C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[3];
  unint64_t v55;
  void *v56;

  v52 = a7;
  v53 = a2;
  v47 = a6;
  v48 = a5;
  v49 = a3;
  v51 = a1;
  v11 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = v13;
  v50 = v13;
  v15 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(a2, (uint64_t)v15, v16);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_10005E9F0, v20 + 16, v17 | 7);
  sub_100033318((uint64_t)v15, v21 + v18);
  v22 = (_QWORD *)(v21 + v19);
  *v22 = a3;
  v22[1] = a4;
  v23 = (_QWORD *)(v21 + v20);
  v24 = v47;
  *v23 = a5;
  v23[1] = v24;
  v25 = type metadata accessor for SyncTaskScheduler(0);
  v55 = v25;
  v56 = &protocol witness table for SyncTaskScheduler;
  sub_100008464(v54);
  swift_bridgeObjectRetain(v24);
  v26 = swift_bridgeObjectRetain(a4);
  SyncTaskScheduler.init()(v26);
  v27 = sub_100004380(&qword_100062160);
  v28 = sub_1000336B0(&qword_100062168, &qword_100062160);
  v29 = Promise.flatMap<A>(on:_:)(v54, sub_10003335C, v21, v27, v28);
  swift_release(v21);
  sub_100008444(v54);
  sub_1000043C0(v53, (uint64_t)v15, type metadata accessor for AppStoreWidgetCacheDescriptor);
  v30 = (v17 + 48) & ~v17;
  v31 = v50;
  v32 = (_QWORD *)swift_allocObject(&unk_10005EA18, v30 + v50, v17 | 7);
  v32[2] = v48;
  v32[3] = v24;
  v32[4] = v49;
  v32[5] = a4;
  sub_100033318((uint64_t)v15, (uint64_t)v32 + v30);
  v33 = swift_allocObject(&unk_10005EA40, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_100033480;
  *(_QWORD *)(v33 + 24) = v32;
  v55 = v25;
  v56 = &protocol witness table for SyncTaskScheduler;
  sub_100008464(v54);
  swift_bridgeObjectRetain(a4);
  v34 = swift_bridgeObjectRetain(v24);
  SyncTaskScheduler.init()(v34);
  v35 = sub_100004380(&qword_100062148);
  v36 = sub_1000336B0(&qword_100062170, &qword_100062148);
  v37 = Promise.flatMap<A>(on:_:)(v54, sub_1000334F8, v33, v35, v36);
  swift_release(v29);
  swift_release(v33);
  sub_100008444(v54);
  v38 = v53;
  sub_1000043C0(v53, (uint64_t)v15, type metadata accessor for AppStoreWidgetCacheDescriptor);
  v39 = (v17 + 24) & ~v17;
  v17 |= 7uLL;
  v40 = swift_allocObject(&unk_10005EA68, v39 + v31, v17);
  v41 = v52;
  *(_QWORD *)(v40 + 16) = v52;
  sub_100033318((uint64_t)v15, v40 + v39);
  sub_1000043C0(v38, (uint64_t)v15, type metadata accessor for AppStoreWidgetCacheDescriptor);
  v42 = swift_allocObject(&unk_10005EA90, v39 + v31, v17);
  *(_QWORD *)(v42 + 16) = v41;
  sub_100033318((uint64_t)v15, v42 + v39);
  v43 = sub_100008218();
  v44 = swift_retain_n(v41, 2);
  v45 = static OS_dispatch_queue.main.getter(v44);
  v55 = v43;
  v56 = &protocol witness table for OS_dispatch_queue;
  v54[0] = v45;
  Promise.then(perform:orCatchError:on:)(sub_100033524, v40, sub_100033620, v42, v54);
  swift_release(v37);
  swift_release(v40);
  swift_release(v42);
  return sub_100008444(v54);
}

uint64_t sub_100031B34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a5;
  v57 = a6;
  v54 = a3;
  v55 = a4;
  v53 = a2;
  v7 = type metadata accessor for WidgetKind(0);
  v52 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetFamily(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WidgetIntent(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = type metadata accessor for ASKBagContract(0);
  v51 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v60, v17, v16, v17, v51);
  v18 = v60;
  v19 = sub_100011704(v60, 3);
  v20 = sub_100004380(&qword_100061258);
  v21 = Array.isNotEmpty.getter(v19, v20);
  swift_release(v18);
  swift_bridgeObjectRelease(v19);
  if ((v21 & 1) != 0)
  {
    sub_100004380(&qword_100062160);
    v22 = sub_1000336F0();
    v23 = swift_allocError(&type metadata for TodayWidgetPresenterUpdateError, v22, 0, 0);
    return Promise.__allocating_init(error:)(v23);
  }
  else
  {
    v25 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
    v49 = v7;
    v26 = v53;
    v27 = TimelineProviderContext.family.getter(v25);
    v28 = WidgetFamily.rawValue.getter(v27);
    v50 = v14;
    v29 = v28;
    v30 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v31 = *(unsigned __int8 *)(v26 + *(int *)(v25 + 24));
    v32 = TimelineProviderContext.isPreview.getter(v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v9, v26 + *(int *)(v25 + 28), v49);
    v33 = v57;
    swift_bridgeObjectRetain(v57);
    v34 = v55;
    swift_bridgeObjectRetain(v55);
    v35 = v58;
    WidgetIntent.init(family:isSnapshot:isPreview:originalResponseDate:originalResponseHash:widgetKind:)(v29, v31, v32 & 1, v54, v34, v56, v33, v9);
    v36 = type metadata accessor for JSIntentDispatcher(0);
    inject<A, B>(_:from:)(&v60, v36, v16, v36, v51);
    v37 = v60;
    type metadata accessor for IntentDispatchOptions(0);
    v38 = swift_retain(v16);
    v39 = BaseObjectGraph.__allocating_init(_:)(v38);
    v40 = IntentDispatchOptions.withGarbageCollection()();
    swift_release(v39);
    v41 = sub_100008DD8(&qword_100062190, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetIntent, (uint64_t)&protocol conformance descriptor for WidgetIntent);
    v42 = v50;
    v43 = dispatch thunk of JSIntentDispatcher.dispatch<A>(intent:with:fileID:)(v35, v40, "AppStoreWidgetsExtension/AppStoreWidgetPresenter.swift", 54, 2, v50, v41);
    v44 = sub_100004380(&qword_1000616E8);
    v60 = v16;
    swift_retain(v16);
    v45 = Promise.__allocating_init(value:)(&v60);
    v46 = sub_1000336B0(&qword_100062198, &qword_1000616E8);
    v24 = Promise.join<A>(with:)(v45, v44, v46);
    swift_release(v40);
    swift_release(v37);
    swift_release(v43);
    v47 = swift_release(v45);
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v35, v42, v47);
  }
  return v24;
}

uint64_t sub_100031EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;

  v78 = a7;
  v79 = a4;
  *(_QWORD *)&v75 = a5;
  *((_QWORD *)&v75 + 1) = a6;
  v76 = a3;
  v9 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v73 = (char *)&v72 - v13;
  v77 = type metadata accessor for OSLogger(0);
  v80 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v74 = (char *)&v72 - v17;
  v18 = (void *)objc_opt_self(NSUserDefaults);
  v19 = objc_msgSend(v18, "standardUserDefaults");
  TodayWidgetContainerTemplate.originalResponseHash.getter();
  if (v20)
  {
    v21 = v20;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = 0;
  }
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setObject:forKey:", v22, v23);

  swift_unknownObjectRelease(v22);
  v24 = objc_msgSend(v18, "standardUserDefaults");
  ((void (*)(void))TodayWidgetContainerTemplate.originalResponseDate.getter)();
  if (v25)
  {
    v26 = v25;
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v27 = 0;
  }
  v28 = v79;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setObject:forKey:", v27, v29);

  swift_unknownObjectRelease(v27);
  v30 = TodayWidgetContainerTemplate.originalResponseHash.getter();
  if (v31)
  {
    v32 = v31;
    if (!v28)
    {
      v34 = a2;
      v33 = v77;
      v35 = v78;
      goto LABEL_20;
    }
    v33 = v77;
    v34 = a2;
    if (v30 == v76 && v31 == v28)
    {
      v30 = swift_bridgeObjectRelease(v31);
      v35 = v78;
    }
    else
    {
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
      v30 = swift_bridgeObjectRelease(v32);
      v35 = v78;
      if ((v36 & 1) == 0)
        goto LABEL_22;
    }
  }
  else
  {
    v34 = a2;
    v33 = v77;
    v35 = v78;
    if (v28)
      goto LABEL_22;
  }
  v37 = TodayWidgetContainerTemplate.originalResponseDate.getter(v30);
  if (!v38)
  {
    if (!*((_QWORD *)&v75 + 1))
      goto LABEL_33;
    goto LABEL_22;
  }
  v32 = v38;
  if (!*((_QWORD *)&v75 + 1))
  {
LABEL_20:
    swift_bridgeObjectRelease(v32);
    goto LABEL_22;
  }
  if (__PAIR128__(v38, v37) == v75)
  {
    swift_bridgeObjectRelease(v38);
LABEL_33:
    if (qword_100060850 != -1)
      swift_once(&qword_100060850, sub_10000555C);
    v65 = sub_1000056A0(v33, (uint64_t)qword_100063238);
    v15 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v74, v65, v33);
    v66 = sub_100004380(&qword_100060BA0);
    v67 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v42 = swift_allocObject(v66, ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72), *(unsigned __int8 *)(v67 + 80) | 7);
    *(_OWORD *)(v42 + 16) = xmmword_10004DFA0;
    v68 = v73;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2);
    v69._countAndFlagsBits = 0xD000000000000012;
    v69._object = (void *)0x800000010005A360;
    LogMessage.StringInterpolation.appendLiteral(_:)(v69);
    if (v28)
    {
      *((_QWORD *)&v82 + 1) = &type metadata for String;
      *(_QWORD *)&v81 = v76;
      *((_QWORD *)&v81 + 1) = v28;
    }
    else
    {
      v81 = 0u;
      v82 = 0u;
    }
    swift_bridgeObjectRetain(v28);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v81);
    sub_100004810((uint64_t)&v81, &qword_100060BA8);
    v70._countAndFlagsBits = 0xD000000000000011;
    v70._object = (void *)0x800000010005A380;
    LogMessage.StringInterpolation.appendLiteral(_:)(v70);
    if (*((_QWORD *)&v75 + 1))
    {
      *((_QWORD *)&v82 + 1) = &type metadata for String;
      v81 = v75;
    }
    else
    {
      v81 = 0u;
      v82 = 0u;
    }
    swift_bridgeObjectRetain(*((_QWORD *)&v75 + 1));
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v81);
    sub_100004810((uint64_t)&v81, &qword_100060BA8);
    v71._countAndFlagsBits = 46;
    v71._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v71);
    v51 = v68;
    goto LABEL_31;
  }
  v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease(v32);
  if ((v64 & 1) != 0)
    goto LABEL_33;
LABEL_22:
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v39 = sub_1000056A0(v33, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v15, v39, v33);
  v40 = sub_100004380(&qword_100060BA0);
  v41 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v42 = swift_allocObject(v40, ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72), *(unsigned __int8 *)(v41 + 80) | 7);
  *(_OWORD *)(v42 + 16) = xmmword_10004DFA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(60, 2);
  v43._countAndFlagsBits = 0xD000000000000035;
  v43._object = (void *)0x800000010005A320;
  LogMessage.StringInterpolation.appendLiteral(_:)(v43);
  v44 = TodayWidgetContainerTemplate.originalResponseHash.getter();
  if (v45)
  {
    *((_QWORD *)&v82 + 1) = &type metadata for String;
    *(_QWORD *)&v81 = v44;
    *((_QWORD *)&v81 + 1) = v45;
  }
  else
  {
    v81 = 0u;
    v82 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v81);
  sub_100004810((uint64_t)&v81, &qword_100060BA8);
  v46._countAndFlagsBits = 0x206D6F726620;
  v46._object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  v48 = TodayWidgetContainerTemplate.originalResponseDate.getter(v47);
  if (v49)
  {
    *((_QWORD *)&v82 + 1) = &type metadata for String;
    *(_QWORD *)&v81 = v48;
    *((_QWORD *)&v81 + 1) = v49;
  }
  else
  {
    v81 = 0u;
    v82 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v81);
  sub_100004810((uint64_t)&v81, &qword_100060BA8);
  v50._countAndFlagsBits = 46;
  v50._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v50);
  v51 = v11;
LABEL_31:
  LogMessage.init(stringInterpolation:)(v51);
  Logger.info(_:)(v42, v33, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v42);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v15, v33);
  v52 = v35 + *(int *)(type metadata accessor for AppStoreWidgetCacheDescriptor(0) + 20);
  v53 = type metadata accessor for WidgetArtworkLoader();
  v54 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v81, v53, v34, v53, v54);
  v55 = (void *)v81;
  sub_100004380(&qword_100062148);
  v56 = Promise.__allocating_init()();
  v57 = TodayWidgetContainerTemplate.collections.getter();
  __chkstk_darwin(v57);
  *(&v72 - 2) = v52;
  *(&v72 - 1) = (uint64_t)v55;
  v58 = sub_100030664((void (*)(uint64_t *__return_ptr, uint64_t *))sub_100033660, (uint64_t)(&v72 - 4), v57);
  swift_bridgeObjectRelease(v57);
  v59 = swift_allocObject(&unk_10005EAB8, 32, 7);
  *(_QWORD *)(v59 + 16) = v56;
  *(_QWORD *)(v59 + 24) = a1;
  sub_100008218();
  swift_retain(v56);
  swift_retain(a1);
  v61 = (void *)static OS_dispatch_queue.main.getter(v60);
  v62 = type metadata accessor for TodayWidgetCardCollection(0);
  resolveAll<A>(futures:publisherQueue:andThen:)(v58, v61, sub_1000336A8, v59, v62);

  swift_bridgeObjectRelease(v58);
  swift_release(v59);

  return v56;
}

uint64_t sub_100032650(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v18[24];

  v5 = sub_100004380(&qword_100062178);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Promise.resolve(_:)(a1);
  if (qword_100060908 != -1)
    swift_once(&qword_100060908, sub_100031500);
  v12 = *a3;
  v13 = a3[1];
  swift_beginAccess(&off_100062130, v18, 33, 0);
  swift_bridgeObjectRetain(v13);
  v14 = sub_100042BCC(v12, v13);
  swift_endAccess(v18, v15);
  swift_bridgeObjectRelease(v13);
  swift_release(v14);
  byte_100062138 = 0;
  if (qword_100060900 != -1)
    swift_once(&qword_100060900, sub_1000314EC);
  sub_10003163C((uint64_t)v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_100004810((uint64_t)v7, &qword_100062178);
  sub_100033318((uint64_t)v7, (uint64_t)v11);
  sub_100031020(v11);
  return sub_1000331F8((uint64_t)v11);
}

uint64_t sub_100032814(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[8];
  _QWORD v41[4];

  v34 = a2;
  v35 = a3;
  v4 = sub_100004380(&qword_100062178);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  __chkstk_darwin(v7);
  v33 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100060850 != -1)
    swift_once(&qword_100060850, sub_10000555C);
  v16 = sub_1000056A0(v12, (uint64_t)qword_100063238);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_100004380(&qword_100060BA0);
  v18 = type metadata accessor for LogMessage(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_10004DFA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1);
  v20._object = (void *)0x800000010005A300;
  v20._countAndFlagsBits = 0xD000000000000016;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  swift_getErrorValue(a1, v40, &v38);
  v22 = v38;
  v21 = v39;
  v41[3] = v39;
  v23 = sub_100008464(v41);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v23, v22, v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
  sub_100004810((uint64_t)v41, &qword_100060BA8);
  v24._countAndFlagsBits = 46;
  v24._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v11);
  Logger.error(_:)(v19, v12, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  Promise.reject(_:)(a1);
  if (qword_100060908 != -1)
    swift_once(&qword_100060908, sub_100031500);
  v25 = *v35;
  v26 = v35[1];
  swift_beginAccess(&off_100062130, v41, 33, 0);
  swift_bridgeObjectRetain(v26);
  v27 = sub_100042BCC(v25, v26);
  swift_endAccess(v41, v28);
  swift_bridgeObjectRelease(v26);
  swift_release(v27);
  byte_100062138 = 0;
  if (qword_100060900 != -1)
    swift_once(&qword_100060900, sub_1000314EC);
  sub_10003163C((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v6, 1, v37) == 1)
    return sub_100004810((uint64_t)v6, &qword_100062178);
  v30 = (uint64_t)v6;
  v31 = v33;
  sub_100033318(v30, v33);
  sub_100031020(v31);
  return sub_1000331F8(v31);
}

unint64_t sub_100032BB4(unint64_t a1, int64_t a2, uint64_t a3)
{
  return sub_100032BD0(a1, a2, a3, &qword_100062018, type metadata accessor for AppIconConfiguration, &qword_100060F48);
}

unint64_t sub_100032BD0(unint64_t result, int64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v6;
  _QWORD *v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  size_t isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  v8 = *(_QWORD **)v6;
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v9 < a2)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = result;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
  *(_QWORD *)v6 = v8;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    v8 = (_QWORD *)sub_10003301C(isUniquelyReferenced_nonNull_native, v17, 1, v8, a4, a5);
    *(_QWORD *)v6 = v8;
  }
  v18 = a5(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (char *)v8 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v21 = *(_QWORD *)(v19 + 72);
  v22 = (uint64_t)&v20[v21 * v10];
  result = swift_arrayDestroy(v22, v11, v18);
  if (!v12)
    goto LABEL_24;
  v23 = v8[2];
  v24 = v23 - a2;
  if (__OFSUB__(v23, a2))
    goto LABEL_32;
  result = v22 + v21;
  v25 = (unint64_t)&v20[v21 * a2];
  if (v22 + v21 < v25 || result >= v25 + v24 * v21)
  {
    result = swift_arrayInitWithTakeFrontToBack(result, v25, v24, v18);
  }
  else if (result != v25)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  v27 = v8[2];
  v28 = __OFADD__(v27, v12);
  v29 = v27 + v12;
  if (v28)
    goto LABEL_33;
  v8[2] = v29;
LABEL_24:
  if (v21 >= 1)
    sub_1000043C0(a3, v22, a5);
  return sub_100004810(a3, a6);
}

size_t sub_100032D64(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003301C(a1, a2, a3, a4, &qword_100062018, type metadata accessor for AppIconConfiguration);
}

size_t sub_100032D78(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100004380(&qword_100062188);
  v11 = *(_QWORD *)(sub_100004380(&qword_100060BC8) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = sub_100004380(&qword_100060BC8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20, v21, v8, v17);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

char *sub_100032EF4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100004380(&qword_100061AA8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_100032FF4(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003301C(a1, a2, a3, a4, &qword_100062180, type metadata accessor for TodayWidgetCardCollection);
}

size_t sub_100033008(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003301C(a1, a2, a3, a4, &qword_100062030, type metadata accessor for WidgetTodayCard);
}

size_t sub_10003301C(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100004380(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = a6(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v23, v24, v11, v20);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v18;
}

size_t sub_100033190(_QWORD *a1)
{
  return sub_10003301C(0, a1[2], 0, a1, &qword_100062038, type metadata accessor for AppIcon);
}

size_t sub_1000331C4(_QWORD *a1)
{
  return sub_10003301C(0, a1[2], 0, a1, &qword_100062158, type metadata accessor for AppStoreWidgetCacheDescriptor);
}

uint64_t sub_1000331F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100033234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v9 = v8 + *(int *)(v1 + 20);
  v10 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v8 + *(int *)(v1 + 28);
  v12 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_100033318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003335C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for AppStoreWidgetCacheDescriptor(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100031B34(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000333C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v8 = v0 + v4 + *(int *)(v1 + 20);
  v9 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v7 + *(int *)(v1 + 28);
  v11 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100033480(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppStoreWidgetCacheDescriptor(0) - 8) + 80);
  return sub_100031EC8(a1, a2, v2[2], v2[3], v2[4], v2[5], (uint64_t)v2 + ((v5 + 48) & ~v5));
}

uint64_t sub_1000334D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000334F8(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_100033524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppStoreWidgetCacheDescriptor(0) - 8) + 80);
  return sub_100032650(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t sub_100033568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for AppStoreWidgetCacheDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v8 = v0 + v4 + *(int *)(v1 + 20);
  v9 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v7 + *(int *)(v1 + 28);
  v11 = type metadata accessor for WidgetKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100033620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppStoreWidgetCacheDescriptor(0) - 8) + 80);
  return sub_100032814(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + ((v3 + 24) & ~v3)));
}

void sub_100033660(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1000445D8(a1, a2);
}

uint64_t sub_10003367C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000336A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000446F4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1000336B0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1000044A8(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for Promise<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000336F0()
{
  unint64_t result;

  result = qword_1000621A0;
  if (!qword_1000621A0)
  {
    result = swift_getWitnessTable(&unk_10004F728, &type metadata for TodayWidgetPresenterUpdateError);
    atomic_store(result, (unint64_t *)&qword_1000621A0);
  }
  return result;
}

_QWORD *sub_100033734(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TimelineProviderContext(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for WidgetKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_100033814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for WidgetKind(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_100033888(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TimelineProviderContext(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for WidgetKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_10003393C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for WidgetKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_1000339F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for WidgetKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_100033A98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TimelineProviderContext(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for WidgetKind(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_100033B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100033B4C);
}

uint64_t sub_100033B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TimelineProviderContext(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for WidgetKind(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100033BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100033BF8);
}

uint64_t sub_100033BF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for TimelineProviderContext(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for WidgetKind(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100033C94(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = &unk_10004F670;
  result = type metadata accessor for TimelineProviderContext(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = &unk_10004F688;
    result = type metadata accessor for WidgetKind(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TodayWidgetPresenterUpdateError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for TodayWidgetPresenterUpdateError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100033DC0 + 4 * byte_10004F5F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100033DE0 + 4 * byte_10004F5F5[v4]))();
}

_BYTE *sub_100033DC0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100033DE0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100033DE8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100033DF0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100033DF8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100033E00(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_100033E0C()
{
  return 0;
}

ValueMetadata *type metadata accessor for TodayWidgetPresenterUpdateError()
{
  return &type metadata for TodayWidgetPresenterUpdateError;
}

unint64_t sub_100033E28()
{
  unint64_t result;

  result = qword_100062240;
  if (!qword_100062240)
  {
    result = swift_getWitnessTable(&unk_10004F700, &type metadata for TodayWidgetPresenterUpdateError);
    atomic_store(result, (unint64_t *)&qword_100062240);
  }
  return result;
}

void sub_100033E6C()
{
  qword_100063368 = 0x4067C00000000000;
}

uint64_t type metadata accessor for TodayCardListViewItem.Content(uint64_t a1)
{
  return sub_10000A508(a1, (uint64_t *)&unk_100062360, (uint64_t)&nominal type descriptor for TodayCardListViewItem.Content);
}

uint64_t sub_100033EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100033EB8);
}

uint64_t sub_100033EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100033EC8);
}

uint64_t type metadata accessor for TodayCardListViewItem(uint64_t a1)
{
  return sub_10000A508(a1, qword_1000622B8, (uint64_t)&nominal type descriptor for TodayCardListViewItem);
}

uint64_t *sub_100033EE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *__dst;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for WidgetTodayCard(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v32 = v8;
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      v13 = (void *)a2[7];
      v14 = a2[8];
      a1[7] = (uint64_t)v13;
      a1[8] = v14;
      v15 = (void *)a2[9];
      a1[9] = (uint64_t)v15;
      v16 = *(int *)(v7 + 44);
      __dst = (char *)a1 + v16;
      v30 = (char *)a2 + v16;
      v17 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v17 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
      v18 = v13;
      swift_bridgeObjectRetain(v14);
      v19 = v15;
      if (v31(v30, 1, v17))
      {
        v20 = sub_100004380(&qword_100061D18);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v30, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v17);
      }
      v21 = *(int *)(v7 + 48);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for Date(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100004380(&qword_100061780);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v32 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100034130(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for WidgetTodayCard(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
    v4 = a1 + *(int *)(v2 + 44);
    v5 = type metadata accessor for URL(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = a1 + *(int *)(v2 + 48);
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

_QWORD *sub_100034244(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v30;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v30 = v7;
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
    v11 = (void *)a2[7];
    v12 = a2[8];
    a1[7] = v11;
    a1[8] = v12;
    v13 = (void *)a2[9];
    a1[9] = v13;
    v14 = *(int *)(v6 + 44);
    __dst = (char *)a1 + v14;
    v27 = (char *)a2 + v14;
    v15 = type metadata accessor for URL(0);
    v26 = *(_QWORD *)(v15 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v16 = v11;
    swift_bridgeObjectRetain(v12);
    v17 = v13;
    if (v28(v27, 1, v15))
    {
      v18 = sub_100004380(&qword_100061D18);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v27, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v15);
    }
    v19 = *(int *)(v6 + 48);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for Date(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100004380(&qword_100061780);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_100034474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  size_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  const void *v62;
  unsigned int (*v63)(const void *, uint64_t, uint64_t);
  void *__dst;
  uint64_t v65;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000A7A8(a1, type metadata accessor for WidgetTodayCard);
      goto LABEL_7;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v24 = *(_QWORD *)(a2 + 8);
    v25 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease(v25);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v26 = *(_QWORD *)(a2 + 24);
    v27 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v26;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v27);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v28 = *(_QWORD *)(a2 + 40);
    v29 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v28;
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRelease(v29);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v30 = *(void **)(a1 + 56);
    v31 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v31;
    v32 = v31;

    v33 = *(_QWORD *)(a2 + 64);
    v34 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = v33;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRelease(v34);
    v35 = *(void **)(a1 + 72);
    v36 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v36;
    v37 = v36;

    v38 = *(int *)(v6 + 44);
    v39 = (void *)(a1 + v38);
    v40 = (void *)(a2 + v38);
    v41 = type metadata accessor for URL(0);
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
    v44 = v43(v39, 1, v41);
    v45 = v43(v40, 1, v41);
    if (v44)
    {
      if (!v45)
      {
        (*(void (**)(void *, void *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_21:
        v54 = *(int *)(v6 + 48);
        v55 = (void *)(a1 + v54);
        a2 += v54;
        v56 = type metadata accessor for Date(0);
        v57 = *(_QWORD *)(v56 - 8);
        v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
        v59 = v58(v55, 1, v56);
        v60 = v58((void *)a2, 1, v56);
        if (v59)
        {
          if (!v60)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v57 + 16))(v55, a2, v56);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, v56);
            return a1;
          }
        }
        else
        {
          if (!v60)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v57 + 24))(v55, a2, v56);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v57 + 8))(v55, v56);
        }
        v22 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
        v23 = v55;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v45)
      {
        (*(void (**)(void *, void *, uint64_t))(v42 + 24))(v39, v40, v41);
        goto LABEL_21;
      }
      (*(void (**)(void *, uint64_t))(v42 + 8))(v39, v41);
    }
    v53 = sub_100004380(&qword_100061D18);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v23 = (void *)a1;
LABEL_8:
    memcpy(v23, (const void *)a2, v22);
    return a1;
  }
  v65 = v7;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v14 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v14;
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v15;
  v16 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v16;
  v17 = *(int *)(v6 + 44);
  __dst = (void *)(a1 + v17);
  v62 = (const void *)(a2 + v17);
  v18 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v18 - 8);
  v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  v19 = v14;
  swift_bridgeObjectRetain(v15);
  v20 = v16;
  if (v63(v62, 1, v18))
  {
    v21 = sub_100004380(&qword_100061D18);
    memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v61 + 16))(__dst, v62, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v18);
  }
  v46 = *(int *)(v6 + 48);
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = type metadata accessor for Date(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100004380(&qword_100061780);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 16))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(a1, 0, 1, v6);
  return a1;
}

_OWORD *sub_100034920(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    v9 = *(int *)(v6 + 44);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100004380(&qword_100061D18);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = *(int *)(v6 + 48);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Date(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100004380(&qword_100061780);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_100034AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000A7A8(a1, type metadata accessor for WidgetTodayCard);
      goto LABEL_7;
    }
    v20 = *(_QWORD *)(a2 + 8);
    v21 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v20;
    swift_bridgeObjectRelease(v21);
    v22 = *(_QWORD *)(a2 + 24);
    v23 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v22;
    swift_bridgeObjectRelease(v23);
    v24 = *(_QWORD *)(a2 + 40);
    v25 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v24;
    swift_bridgeObjectRelease(v25);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v26 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

    v27 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRelease(v27);
    v28 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

    v29 = *(int *)(v6 + 44);
    v30 = (void *)(a1 + v29);
    v31 = (void *)(a2 + v29);
    v32 = type metadata accessor for URL(0);
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
    v35 = v34(v30, 1, v32);
    v36 = v34(v31, 1, v32);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_21:
        v45 = *(int *)(v6 + 48);
        v46 = (void *)(a1 + v45);
        a2 += v45;
        v47 = type metadata accessor for Date(0);
        v48 = *(_QWORD *)(v47 - 8);
        v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
        v50 = v49(v46, 1, v47);
        v51 = v49((void *)a2, 1, v47);
        if (v50)
        {
          if (!v51)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v48 + 32))(v46, a2, v47);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v47);
            return a1;
          }
        }
        else
        {
          if (!v51)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v48 + 40))(v46, a2, v47);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v48 + 8))(v46, v47);
        }
        v18 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
        v19 = v46;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
        goto LABEL_21;
      }
      (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    }
    v44 = sub_100004380(&qword_100061D18);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v19 = (void *)a1;
LABEL_8:
    memcpy(v19, (const void *)a2, v18);
    return a1;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v12 = *(int *)(v6 + 44);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100004380(&qword_100061D18);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v37 = *(int *)(v6 + 48);
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for Date(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100004380(&qword_100061780);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_100034ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100034EE0);
}

uint64_t sub_100034EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for WidgetTodayCard(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_100034F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100034F38);
}

uint64_t sub_100034F38(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for WidgetTodayCard(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100034F88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetTodayCard(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_100034FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetTodayCard(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_100035000(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for WidgetTodayCard(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t destroy for TodayCardListView(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *_s24AppStoreWidgetsExtension17TodayCardListViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for TodayCardListView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for TodayCardListView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for TodayCardListView()
{
  return &type metadata for TodayCardListView;
}

uint64_t sub_10003513C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050D00, 1);
}

uint64_t sub_10003514C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _OWORD v45[3];

  v8 = type metadata accessor for PlatterView(0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100004380(&qword_100062388);
  __chkstk_darwin(v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004380(&qword_100062390);
  __chkstk_darwin(v14);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100004380(&qword_100062398);
  __chkstk_darwin(v17);
  v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter(v20);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v21 = sub_100004380(&qword_1000623A0);
  v22 = sub_100035444(a1, (uint64_t)&v13[*(int *)(v21 + 44)], a3, a4);
  LOBYTE(a1) = static Edge.Set.all.getter(v22);
  v23 = EdgeInsets.init(_all:)(16.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_1000047CC((uint64_t)v13, (uint64_t)v16, &qword_100062388);
  v30 = &v16[*(int *)(v14 + 36)];
  *v30 = a1;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  v31 = sub_100004810((uint64_t)v13, &qword_100062388);
  if (qword_100060910 != -1)
    v31 = swift_once(&qword_100060910, sub_100033E6C);
  v32 = qword_100063368;
  v33 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(v45, 0, 1, v32, 0, v33, v34);
  sub_1000047CC((uint64_t)v16, (uint64_t)v19, &qword_100062390);
  v35 = &v19[*(int *)(v17 + 36)];
  v36 = v45[1];
  *(_OWORD *)v35 = v45[0];
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v45[2];
  v37 = sub_100004810((uint64_t)v16, &qword_100062390);
  v38 = static Alignment.center.getter(v37);
  v40 = v39;
  v41 = a2 + *(int *)(sub_100004380(&qword_1000623A8) + 36);
  *v10 = swift_getKeyPath(&unk_10004F878);
  v42 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v10, v42, 0);
  *((_BYTE *)v10 + *(int *)(v8 + 20)) = 0;
  sub_10000B460((uint64_t)v10, v41, type metadata accessor for PlatterView);
  v43 = (uint64_t *)(v41 + *(int *)(sub_100004380(&qword_1000623B0) + 36));
  *v43 = v38;
  v43[1] = v40;
  return sub_100004788((uint64_t)v19, a2, &qword_100062398);
}

uint64_t sub_100035444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[3];
  __int128 v85;
  __int128 v86;
  __int128 v87;

  v80 = sub_100004380(&qword_1000623B8);
  __chkstk_darwin(v80);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100004380(&qword_1000623C0);
  __chkstk_darwin(v82);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100004380(&qword_1000623C8);
  __chkstk_darwin(v77);
  v79 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100004380(&qword_1000623D0);
  __chkstk_darwin(v83);
  v81 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100004380(&qword_1000623D8);
  __chkstk_darwin(v78);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v73 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v73 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v73 - v23;
  v25 = sub_100004380(&qword_1000623E0);
  __chkstk_darwin(v25);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v73 - v29;
  v31 = *(_QWORD *)(a1 + 16);
  if (v31 == 2)
  {
    v74 = v27;
    v75 = v11;
    v76 = a2;
    v47 = type metadata accessor for TodayCardListViewItem(0);
    v48 = *(_QWORD *)(v47 - 8);
    v49 = a1 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    if (qword_100060910 != -1)
      v47 = swift_once(&qword_100060910, sub_100033E6C);
    v50 = (*(double *)&qword_100063368 - (a3 + a3) - a4) * 0.5;
    v51 = static Alignment.center.getter(v47);
    _FrameLayout.init(width:height:alignment:)(v84, 0, 1, *(_QWORD *)&v50, 0, v51, v52);
    v53 = sub_1000043C0(v49, (uint64_t)v24, type metadata accessor for TodayCardListViewItem);
    v54 = v78;
    v55 = &v24[*(int *)(v78 + 36)];
    v56 = v84[1];
    *(_OWORD *)v55 = v84[0];
    *((_OWORD *)v55 + 1) = v56;
    *((_OWORD *)v55 + 2) = v84[2];
    v57 = v49 + *(_QWORD *)(v48 + 72);
    v58 = static Alignment.center.getter(v53);
    _FrameLayout.init(width:height:alignment:)(&v85, 0, 1, *(_QWORD *)&v50, 0, v58, v59);
    sub_1000043C0(v57, (uint64_t)v21, type metadata accessor for TodayCardListViewItem);
    v60 = &v21[*(int *)(v54 + 36)];
    v61 = v86;
    *(_OWORD *)v60 = v85;
    *((_OWORD *)v60 + 1) = v61;
    *((_OWORD *)v60 + 2) = v87;
    sub_1000047CC((uint64_t)v24, (uint64_t)v18, &qword_1000623D8);
    sub_1000047CC((uint64_t)v21, (uint64_t)v15, &qword_1000623D8);
    sub_1000047CC((uint64_t)v18, (uint64_t)v9, &qword_1000623D8);
    v62 = sub_100004380(&qword_100062410);
    v63 = &v9[*(int *)(v62 + 48)];
    *(double *)v63 = a4;
    v63[8] = 0;
    sub_1000047CC((uint64_t)v15, (uint64_t)&v9[*(int *)(v62 + 64)], &qword_1000623D8);
    sub_100004810((uint64_t)v15, &qword_1000623D8);
    sub_100004810((uint64_t)v18, &qword_1000623D8);
    v64 = v79;
    sub_1000047CC((uint64_t)v9, v79, &qword_1000623B8);
    swift_storeEnumTagMultiPayload(v64, v77, 1);
    v65 = sub_1000382A8();
    v66 = sub_10000B4D0(&qword_100062400, &qword_1000623B8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v67 = (uint64_t)v81;
    _ConditionalContent<>.init(storage:)(v64, v54, v80, v65, v66);
    sub_100004810((uint64_t)v9, &qword_1000623B8);
    v68 = (uint64_t)v75;
    sub_1000047CC(v67, (uint64_t)v75, &qword_1000623D0);
    swift_storeEnumTagMultiPayload(v68, v82, 0);
    v69 = sub_100038224();
    _ConditionalContent<>.init(storage:)(v68, v83, &type metadata for EmptyView, v69, &protocol witness table for EmptyView);
    sub_100004810(v67, &qword_1000623D0);
    sub_100004810((uint64_t)v21, &qword_1000623D8);
    sub_100004810((uint64_t)v24, &qword_1000623D8);
    a2 = v76;
    v27 = v74;
  }
  else if (v31 == 1)
  {
    v32 = (uint64_t)v11;
    v33 = type metadata accessor for TodayCardListViewItem(0);
    v34 = *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80);
    v35 = a1 + ((v34 + 32) & ~v34);
    if (qword_100060910 != -1)
      v33 = swift_once(&qword_100060910, sub_100033E6C);
    v36 = (*(double *)&qword_100063368 - (a3 + a3) - a4) * 0.5;
    v37 = static Alignment.center.getter(v33);
    _FrameLayout.init(width:height:alignment:)(&v85, 0, 1, *(_QWORD *)&v36, 0, v37, v38);
    sub_1000043C0(v35, (uint64_t)v24, type metadata accessor for TodayCardListViewItem);
    v40 = v78;
    v39 = v79;
    v41 = &v24[*(int *)(v78 + 36)];
    v42 = v86;
    *(_OWORD *)v41 = v85;
    *((_OWORD *)v41 + 1) = v42;
    *((_OWORD *)v41 + 2) = v87;
    sub_1000047CC((uint64_t)v24, v39, &qword_1000623D8);
    swift_storeEnumTagMultiPayload(v39, v77, 0);
    v43 = sub_1000382A8();
    v44 = sub_10000B4D0(&qword_100062400, &qword_1000623B8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v45 = (uint64_t)v81;
    _ConditionalContent<>.init(storage:)(v39, v40, v80, v43, v44);
    sub_1000047CC(v45, v32, &qword_1000623D0);
    swift_storeEnumTagMultiPayload(v32, v82, 0);
    v46 = sub_100038224();
    _ConditionalContent<>.init(storage:)(v32, v83, &type metadata for EmptyView, v46, &protocol witness table for EmptyView);
    sub_100004810(v45, &qword_1000623D0);
    sub_100004810((uint64_t)v24, &qword_1000623D8);
  }
  else
  {
    swift_storeEnumTagMultiPayload(v11, v82, 1);
    v70 = sub_100038224();
    _ConditionalContent<>.init(storage:)(v11, v83, &type metadata for EmptyView, v70, &protocol witness table for EmptyView);
  }
  sub_1000047CC((uint64_t)v30, (uint64_t)v27, &qword_1000623E0);
  sub_1000047CC((uint64_t)v27, a2, &qword_1000623E0);
  v71 = a2 + *(int *)(sub_100004380(&qword_100062408) + 48);
  *(_QWORD *)v71 = 0;
  *(_BYTE *)(v71 + 8) = 0;
  sub_100004810((uint64_t)v30, &qword_1000623E0);
  return sub_100004810((uint64_t)v27, &qword_1000623E0);
}

uint64_t sub_100035B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10003514C(*(_QWORD *)(v1 + 8), a1, *(double *)v1, *(double *)(v1 + 16));
}

uint64_t sub_100035B7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050CD8, 1);
}

double sub_100035B8C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __int16 v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  unint64_t v42;
  __int16 v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  double result;
  __int128 v49;
  __int128 v50;
  int v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  unsigned __int8 v57;
  char v58;
  _BYTE v59[51];
  char v60;
  _BYTE v61[50];
  unsigned __int8 v62;
  char v63;

  v3 = type metadata accessor for WidgetRenderingMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - v8;
  v10 = type metadata accessor for WidgetTodayCard(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(v1, (uint64_t)v16, v17);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  if ((_DWORD)v18 != 1)
  {
    sub_10000B460((uint64_t)v16, (uint64_t)v13, type metadata accessor for WidgetTodayCard);
    if (*(_QWORD *)(*((_QWORD *)v13 + 8) + 16) <= 1uLL)
    {
      v31 = (void *)*((_QWORD *)v13 + 9);
      if (v31)
      {
        v32 = (id)*((_QWORD *)v13 + 9);
      }
      else
      {
        v32 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
        v31 = 0;
      }
      v35 = v31;
      v25 = Color.init(uiColor:)(v32);
      if (qword_1000608A0 != -1)
        swift_once(&qword_1000608A0, sub_10001233C);
      v36 = xmmword_100063318;
      v53 = *(__int128 *)((char *)&xmmword_100063318 + 8);
      v37 = qword_100063330;
      v38 = qword_100063338;
      v39 = swift_bridgeObjectRetain(xmmword_100063318);
      v40 = static Edge.Set.all.getter(v39);
      *(_QWORD *)v61 = v25;
      *(_QWORD *)&v61[8] = v36;
      *(_OWORD *)&v61[16] = v53;
      *(_QWORD *)&v61[32] = v37;
      *(_QWORD *)&v61[40] = v38;
      *(_WORD *)&v61[48] = v40;
      swift_retain(v25);
      swift_bridgeObjectRetain(v36);
      v41 = sub_100004380(&qword_100061EA0);
      v42 = sub_100025C38();
      _ConditionalContent<>.init(storage:)(v61, v41, &type metadata for Color, v42, &protocol witness table for Color);
      if (v58)
        v43 = 256;
      else
        v43 = 0;
      *(_OWORD *)v59 = v54;
      *(_OWORD *)&v59[16] = v55;
      *(_OWORD *)&v59[32] = v56;
      *(_WORD *)&v59[48] = v43 | v57;
      v59[50] = 0;
      v44 = sub_100004380(&qword_100062768);
      v45 = sub_10003B100();
      _ConditionalContent<>.init(storage:)(v59, v44, &type metadata for Color, v45, &protocol witness table for Color);
      swift_bridgeObjectRelease(v36);
    }
    else
    {
      type metadata accessor for ThumbnailBackgroundColor(0);
      v21 = sub_1000466E0((uint64_t)v9);
      static WidgetRenderingMode.accented.getter(v21);
      v22 = static WidgetRenderingMode.== infix(_:_:)(v9, v6);
      v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v6, v3);
      v24 = ((uint64_t (*)(char *, uint64_t))v23)(v9, v3);
      if ((v22 & 1) == 0)
      {
        *(_QWORD *)v59 = static Color.white.getter(v24);
        memset(&v59[8], 0, 42);
        v59[50] = 1;
        v33 = sub_100004380(&qword_100062768);
        v34 = sub_10003B100();
        _ConditionalContent<>.init(storage:)(v59, v33, &type metadata for Color, v34, &protocol witness table for Color);
LABEL_20:
        *(_OWORD *)v59 = *(_OWORD *)v61;
        *(_OWORD *)&v59[16] = *(_OWORD *)&v61[16];
        *(_OWORD *)&v59[32] = *(_OWORD *)&v61[32];
        *(_WORD *)&v59[48] = *(_WORD *)&v61[48];
        v59[50] = v62 != 0;
        v60 = 0;
        v46 = sub_100004380(&qword_100062750);
        v47 = sub_10003B094();
        _ConditionalContent<>.init(storage:)(v59, v46, &type metadata for Color, v47, &protocol witness table for Color);
        sub_10000A7A8((uint64_t)v13, type metadata accessor for WidgetTodayCard);
        goto LABEL_21;
      }
      v25 = static Color.clear.getter(v24);
      *(_QWORD *)v61 = v25;
      memset(&v61[8], 0, 41);
      v61[49] = 1;
      swift_retain(v25);
      v26 = sub_100004380(&qword_100061EA0);
      v27 = sub_100025C38();
      _ConditionalContent<>.init(storage:)(v61, v26, &type metadata for Color, v27, &protocol witness table for Color);
      if (v58)
        v28 = 256;
      else
        v28 = 0;
      *(_OWORD *)v59 = v54;
      *(_OWORD *)&v59[16] = v55;
      *(_OWORD *)&v59[32] = v56;
      *(_WORD *)&v59[48] = v28 | v57;
      v59[50] = 0;
      v29 = sub_100004380(&qword_100062768);
      v30 = sub_10003B100();
      _ConditionalContent<>.init(storage:)(v59, v29, &type metadata for Color, v30, &protocol witness table for Color);
    }
    swift_release(v25);
    goto LABEL_20;
  }
  *(_QWORD *)v59 = static Color.white.getter(v18);
  memset(&v59[8], 0, 43);
  v60 = 1;
  v19 = sub_100004380(&qword_100062750);
  v20 = sub_10003B094();
  _ConditionalContent<>.init(storage:)(v59, v19, &type metadata for Color, v20, &protocol witness table for Color);
LABEL_21:
  result = *(double *)v61;
  v49 = *(_OWORD *)&v61[16];
  v50 = *(_OWORD *)&v61[32];
  v51 = *(unsigned __int16 *)&v61[48] | (v62 << 16);
  v52 = v63;
  *(_OWORD *)a1 = *(_OWORD *)v61;
  *(_OWORD *)(a1 + 16) = v49;
  *(_OWORD *)(a1 + 32) = v50;
  *(_WORD *)(a1 + 48) = v51;
  *(_BYTE *)(a1 + 50) = BYTE2(v51);
  *(_BYTE *)(a1 + 51) = v52;
  return result;
}

uint64_t sub_100036100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t (*v40)(_QWORD);
  UIColor v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  __n128 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  __int128 v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  __int16 v209;
  char v210;
  int v211;
  __int16 v212;
  int v213;
  __int16 v214;
  _BYTE v215[7];
  char v216;
  _BYTE v217[7];
  char v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;

  v200 = a1;
  v198 = sub_100004380(&qword_1000625B0);
  __chkstk_darwin(v198);
  v199 = (uint64_t *)((char *)&v168 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v207 = type metadata accessor for WidgetAccentedRenderingMode(0);
  v206 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v205 = (char *)&v168 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for AppIconConfiguration(0);
  v170 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v4 = (char *)&v168 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v168 - v6;
  v8 = type metadata accessor for AppIcon(0);
  v203 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v202 = (char *)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_100004380(&qword_1000625B8);
  __chkstk_darwin(v174);
  v177 = (uint64_t)&v168 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for ThumbnailBackgroundColor(0);
  __chkstk_darwin(v171);
  v175 = (uint64_t)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100004380(&qword_1000625C0);
  __chkstk_darwin(v172);
  v176 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_100004380(&qword_1000625C8);
  __chkstk_darwin(v173);
  v179 = (uint64_t)&v168 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_100004380(&qword_1000625D0);
  __chkstk_darwin(v196);
  v178 = (uint64_t)&v168 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v180 = (uint64_t)&v168 - v16;
  v194 = sub_100004380(&qword_1000625D8);
  __chkstk_darwin(v194);
  v195 = (uint64_t)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100004380(&qword_100060F00);
  __chkstk_darwin(v18);
  v20 = (char *)&v168 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for Image.ResizingMode(0);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v22 = (char *)&v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_100004380(&qword_100060F08);
  v184 = *(_QWORD *)(v185 - 8);
  __chkstk_darwin(v185);
  v24 = (char *)&v168 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100004380(&qword_100060F10);
  __chkstk_darwin(v183);
  v188 = (char *)&v168 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = sub_100004380(&qword_1000625E0);
  __chkstk_darwin(v186);
  v27 = (char *)&v168 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100004380(&qword_1000625E8);
  __chkstk_darwin(v187);
  v190 = (uint64_t)&v168 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_100004380(&qword_1000625F0);
  __chkstk_darwin(v192);
  v189 = (uint64_t)&v168 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v191 = (uint64_t)&v168 - v31;
  v197 = sub_100004380(&qword_1000625F8);
  __chkstk_darwin(v197);
  v193 = (char *)&v168 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for WidgetTodayCard(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v168 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v37);
  v39 = (char *)&v168 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(v201, (uint64_t)v39, v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v39, 1, v33) == 1)
  {
    sub_1000123E4();
    v41.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.1).super.isa;
    v42 = Color.init(uiColor:)(v41.super.isa);
    v207 = v42;
    if (qword_100060830 != -1)
      v42 = swift_once(&qword_100060830, sub_1000025F4);
    v43 = xmmword_1000631F0;
    v44 = static Alignment.center.getter(v42);
    v46 = _FrameLayout.init(width:height:alignment:)(&v219, v43, 0, *((_QWORD *)&v43 + 1), 0, v44, v45);
    v47 = v219;
    v48 = BYTE8(v219);
    v49 = v220;
    v50 = BYTE8(v220);
    v51 = v221;
    v52 = static Color.black.getter(v46);
    v53.n128_u64[0] = 0x3FB999999999999ALL;
    v206 = Color.opacity(_:)(v52, v53);
    swift_release(v52);
    v54 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v222, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
    v55 = v222;
    v56 = v224;
    v57 = v225;
    v58 = v226;
    v59 = static Alignment.center.getter(v54);
    v61 = v60;
    v62 = static Alignment.center.getter(v59);
    v218 = v48;
    v216 = v50;
    v210 = 0;
    v63 = v199;
    *v199 = v207;
    v63[1] = v47;
    *((_BYTE *)v63 + 16) = v48;
    *(_DWORD *)((char *)v63 + 17) = *(_DWORD *)v217;
    *((_DWORD *)v63 + 5) = *(_DWORD *)&v217[3];
    v63[3] = v49;
    *((_BYTE *)v63 + 32) = v50;
    *(_DWORD *)((char *)v63 + 33) = *(_DWORD *)v215;
    *((_DWORD *)v63 + 9) = *(_DWORD *)&v215[3];
    *(_OWORD *)(v63 + 5) = v51;
    *((_WORD *)v63 + 28) = 256;
    *(_DWORD *)((char *)v63 + 58) = v213;
    *((_WORD *)v63 + 31) = v214;
    v64 = v223;
    v63[8] = v55;
    v63[9] = v64;
    v63[10] = v56;
    v63[11] = v57;
    v63[12] = v58;
    v63[13] = v206;
    *((_WORD *)v63 + 56) = 256;
    *(_DWORD *)((char *)v63 + 114) = v211;
    *((_WORD *)v63 + 59) = v212;
    v63[15] = v59;
    v63[16] = v61;
    v63[17] = 0x3FE999999999999ALL;
    *((_BYTE *)v63 + 144) = v210;
    *((_BYTE *)v63 + 145) = 0;
    *((_WORD *)v63 + 75) = v209;
    *(_DWORD *)((char *)v63 + 146) = v208;
    v63[19] = v62;
    v63[20] = v65;
    swift_storeEnumTagMultiPayload(v63, v198, 1);
    v66 = sub_100004380(&qword_100062600);
    v67 = sub_100039638();
    v68 = sub_1000399D0();
    return _ConditionalContent<>.init(storage:)(v63, v197, v66, v67, v68);
  }
  else
  {
    sub_10000B460((uint64_t)v39, (uint64_t)v36, type metadata accessor for WidgetTodayCard);
    v70 = (void *)*((_QWORD *)v36 + 7);
    v169 = v36;
    if (v70)
    {
      v205 = v70;
      v71 = Image.init(uiImage:)();
      v72 = v181;
      v73 = v182;
      (*(void (**)(char *, _QWORD, uint64_t))(v181 + 104))(v22, enum case for Image.ResizingMode.stretch(_:), v182);
      v74 = Image.resizable(capInsets:resizingMode:)(v22, v71, 0.0, 0.0, 0.0, 0.0);
      v75 = swift_release(v71);
      v76 = (*(uint64_t (**)(char *, uint64_t, __n128))(v72 + 8))(v22, v73, v75);
      static WidgetAccentedRenderingMode.desaturated.getter(v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v20, 0, 1, v207);
      Image.widgetAccentedRenderingMode(_:)(v20, v74);
      swift_release(v74);
      sub_100004810((uint64_t)v20, &qword_100060F00);
      v77 = v184;
      v78 = (uint64_t)v188;
      v79 = v185;
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v188, v24, v185);
      v80 = v78 + *(int *)(v183 + 36);
      *(_QWORD *)v80 = 0;
      *(_WORD *)(v80 + 8) = 257;
      v81 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v24, v79);
      if (qword_100060830 != -1)
        v81 = swift_once(&qword_100060830, sub_1000025F4);
      v83 = *((_QWORD *)&xmmword_1000631F0 + 1);
      v82 = xmmword_1000631F0;
      v84 = static Alignment.center.getter(v81);
      _FrameLayout.init(width:height:alignment:)(&v219, v82, 0, v83, 0, v84, v85);
      sub_1000047CC(v78, (uint64_t)v27, &qword_100060F10);
      v86 = &v27[*(int *)(v186 + 36)];
      v87 = v220;
      *(_OWORD *)v86 = v219;
      *((_OWORD *)v86 + 1) = v87;
      *((_OWORD *)v86 + 2) = v221;
      sub_100004810(v78, &qword_100060F10);
      v88 = v190;
      sub_1000047CC((uint64_t)v27, v190, &qword_1000625E0);
      *(_WORD *)(v88 + *(int *)(v187 + 36)) = 256;
      v89 = sub_100004810((uint64_t)v27, &qword_1000625E0);
      v90 = static Color.black.getter(v89);
      v91.n128_u64[0] = 0x3FB999999999999ALL;
      v92 = Color.opacity(_:)(v90, v91);
      swift_release(v90);
      v93 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v222, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
      v94 = v222;
      v95 = v224;
      v96 = v225;
      v97 = v226;
      v98 = static Alignment.center.getter(v93);
      v100 = v99;
      v101 = static Alignment.center.getter(v98);
      v103 = v102;
      v104 = v189;
      sub_1000047CC(v88, v189, &qword_1000625E8);
      v105 = v192;
      v106 = v104 + *(int *)(v192 + 36);
      v107 = v223;
      *(_QWORD *)v106 = v94;
      *(_QWORD *)(v106 + 8) = v107;
      *(_QWORD *)(v106 + 16) = v95;
      *(_QWORD *)(v106 + 24) = v96;
      *(_QWORD *)(v106 + 32) = v97;
      *(_QWORD *)(v106 + 40) = v92;
      *(_WORD *)(v106 + 48) = 256;
      *(_QWORD *)(v106 + 56) = v98;
      *(_QWORD *)(v106 + 64) = v100;
      *(_QWORD *)(v106 + 72) = 0x3FE999999999999ALL;
      *(_WORD *)(v106 + 80) = 0;
      *(_QWORD *)(v106 + 88) = v101;
      *(_QWORD *)(v106 + 96) = v103;
      sub_100004810(v88, &qword_1000625E8);
      v108 = &qword_1000625F0;
      v109 = v191;
      sub_100004788(v104, v191, &qword_1000625F0);
      v110 = v195;
      sub_1000047CC(v109, v195, &qword_1000625F0);
      swift_storeEnumTagMultiPayload(v110, v194, 0);
      v111 = sub_10003965C();
      v112 = sub_1000397E8();
      v113 = (uint64_t)v193;
      _ConditionalContent<>.init(storage:)(v110, v105, v196, v111, v112);

    }
    else
    {
      v114 = *((_QWORD *)v36 + 8);
      if (*(_QWORD *)(v114 + 16) >= 6uLL)
        v115 = 6;
      else
        v115 = *(_QWORD *)(v114 + 16);
      v116 = _swiftEmptyArrayStorage;
      if (v115)
      {
        *(_QWORD *)&v219 = _swiftEmptyArrayStorage;
        v117 = v170;
        v118 = v114 + ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80));
        v191 = v114;
        swift_bridgeObjectRetain(v114);
        sub_10002D9C0(0, v115, 0);
        v119 = *(_QWORD *)(v117 + 72);
        v120 = (uint64_t)v202;
        do
        {
          sub_1000043C0(v118, (uint64_t)v7, type metadata accessor for AppIconConfiguration);
          v121 = sub_1000043C0((uint64_t)v7, (uint64_t)v4, type metadata accessor for AppIconConfiguration);
          v122 = v205;
          static WidgetAccentedRenderingMode.desaturated.getter(v121);
          (*(void (**)(char *, char *, uint64_t))(v206 + 40))(&v4[*(int *)(v204 + 36)], v122, v207);
          sub_10000B460((uint64_t)v4, v120, type metadata accessor for AppIconConfiguration);
          sub_10000A7A8((uint64_t)v7, type metadata accessor for AppIconConfiguration);
          v116 = (_QWORD *)v219;
          if ((swift_isUniquelyReferenced_nonNull_native(v219) & 1) == 0)
          {
            sub_10002D9C0(0, v116[2] + 1, 1);
            v120 = (uint64_t)v202;
            v116 = (_QWORD *)v219;
          }
          v124 = v116[2];
          v123 = v116[3];
          if (v124 >= v123 >> 1)
          {
            sub_10002D9C0(v123 > 1, v124 + 1, 1);
            v120 = (uint64_t)v202;
            v116 = (_QWORD *)v219;
          }
          v116[2] = v124 + 1;
          sub_10000B460(v120, (uint64_t)v116+ ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80))+ *(_QWORD *)(v203 + 72) * v124, type metadata accessor for AppIcon);
          v118 += v119;
          --v115;
        }
        while (v115);
        v114 = swift_bridgeObjectRelease(v191);
      }
      if (qword_100060830 != -1)
        v114 = swift_once(&qword_100060830, sub_1000025F4);
      v125 = xmmword_1000631F0;
      v126 = static Alignment.center.getter(v114);
      _FrameLayout.init(width:height:alignment:)(&v219, v125, 0, *((_QWORD *)&v125 + 1), 0, v126, v127);
      v207 = v219;
      LODWORD(v206) = BYTE8(v219);
      v128 = v220;
      v129 = BYTE8(v220);
      v130 = v221;
      v131 = v175;
      sub_1000043C0(v201, v175, type metadata accessor for TodayCardListViewItem.Content);
      v132 = (_QWORD *)(v131 + *(int *)(v171 + 20));
      *v132 = swift_getKeyPath(&unk_10004F978);
      v133 = sub_100004380(&qword_100061210);
      v134 = swift_storeEnumTagMultiPayload(v132, v133, 0);
      v135 = static Alignment.center.getter(v134);
      v137 = v136;
      v138 = v177;
      sub_1000043C0(v131, v177, type metadata accessor for ThumbnailBackgroundColor);
      v139 = (uint64_t *)(v138 + *(int *)(v174 + 36));
      *v139 = v135;
      v139[1] = v137;
      v140 = (uint64_t)v176;
      sub_1000047CC(v138, (uint64_t)&v176[*(int *)(v172 + 36)], &qword_1000625B8);
      *(_QWORD *)v140 = v116;
      *(_QWORD *)(v140 + 8) = 0x4018000000000000;
      *(_QWORD *)(v140 + 16) = v207;
      *(_BYTE *)(v140 + 24) = v206;
      *(_QWORD *)(v140 + 32) = v128;
      *(_BYTE *)(v140 + 40) = v129;
      *(_OWORD *)(v140 + 48) = v130;
      swift_bridgeObjectRetain(v116);
      sub_100004810(v138, &qword_1000625B8);
      sub_10000A7A8(v131, type metadata accessor for ThumbnailBackgroundColor);
      swift_bridgeObjectRelease(v116);
      v141 = v179;
      sub_1000047CC(v140, v179, &qword_1000625C0);
      *(_WORD *)(v141 + *(int *)(v173 + 36)) = 256;
      v142 = sub_100004810(v140, &qword_1000625C0);
      v143 = static Color.black.getter(v142);
      v144.n128_u64[0] = 0x3FB999999999999ALL;
      v145 = Color.opacity(_:)(v143, v144);
      swift_release(v143);
      v146 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v222, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
      v147 = v222;
      v148 = v224;
      v149 = v225;
      v150 = v226;
      v151 = static Alignment.center.getter(v146);
      v153 = v152;
      v154 = static Alignment.center.getter(v151);
      v156 = v155;
      v157 = v178;
      sub_1000047CC(v141, v178, &qword_1000625C8);
      v158 = v196;
      v159 = v157 + *(int *)(v196 + 36);
      v160 = v223;
      *(_QWORD *)v159 = v147;
      *(_QWORD *)(v159 + 8) = v160;
      *(_QWORD *)(v159 + 16) = v148;
      *(_QWORD *)(v159 + 24) = v149;
      *(_QWORD *)(v159 + 32) = v150;
      *(_QWORD *)(v159 + 40) = v145;
      *(_WORD *)(v159 + 48) = 256;
      *(_QWORD *)(v159 + 56) = v151;
      *(_QWORD *)(v159 + 64) = v153;
      *(_QWORD *)(v159 + 72) = 0x3FE999999999999ALL;
      *(_WORD *)(v159 + 80) = 0;
      *(_QWORD *)(v159 + 88) = v154;
      *(_QWORD *)(v159 + 96) = v156;
      sub_100004810(v141, &qword_1000625C8);
      v108 = &qword_1000625D0;
      v109 = v180;
      sub_100004788(v157, v180, &qword_1000625D0);
      v161 = v195;
      sub_1000047CC(v109, v195, &qword_1000625D0);
      swift_storeEnumTagMultiPayload(v161, v194, 1);
      v162 = sub_10003965C();
      v163 = sub_1000397E8();
      v113 = (uint64_t)v193;
      _ConditionalContent<>.init(storage:)(v161, v192, v158, v162, v163);
    }
    sub_100004810(v109, v108);
    v164 = v199;
    sub_1000047CC(v113, (uint64_t)v199, &qword_1000625F8);
    swift_storeEnumTagMultiPayload(v164, v198, 0);
    v165 = sub_100004380(&qword_100062600);
    v166 = sub_100039638();
    v167 = sub_1000399D0();
    _ConditionalContent<>.init(storage:)(v164, v197, v165, v166, v167);
    sub_100004810(v113, &qword_1000625F8);
    return sub_10000A7A8((uint64_t)v169, type metadata accessor for WidgetTodayCard);
  }
}

uint64_t sub_1000372A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = sub_100004380(&qword_100061D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  sub_100005660(v3, qword_100062248);
  v4 = sub_1000056A0(v3, (uint64_t)qword_100062248);
  URL.init(string:)(0xD000000000000019, 0x800000010005A410);
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_100037380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_100004380(&qword_100061D18);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WidgetTodayCard(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(v2, (uint64_t)v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    if (qword_100060918 != -1)
      swift_once(&qword_100060918, sub_1000372A0);
    v15 = type metadata accessor for URL(0);
    v16 = sub_1000056A0(v15, (uint64_t)qword_100062248);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, v16, v15);
  }
  else
  {
    sub_10000B460((uint64_t)v13, (uint64_t)v10, type metadata accessor for WidgetTodayCard);
    sub_1000047CC((uint64_t)&v10[*(int *)(v7 + 44)], (uint64_t)v6, &qword_100061D18);
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
    {
      if (qword_100060918 != -1)
        swift_once(&qword_100060918, sub_1000372A0);
      v20 = sub_1000056A0(v18, (uint64_t)qword_100062248);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a1, v20, v18);
      sub_10000A7A8((uint64_t)v10, type metadata accessor for WidgetTodayCard);
      return sub_100004810((uint64_t)v6, &qword_100061D18);
    }
    else
    {
      sub_10000A7A8((uint64_t)v10, type metadata accessor for WidgetTodayCard);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v6, v18);
    }
  }
}

uint64_t sub_1000375D4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, char *, uint64_t);
  char *v24;
  _QWORD v25[2];

  v2 = sub_100004380(&qword_100061780);
  __chkstk_darwin(v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v25[0] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for WidgetTodayCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(v25[1], (uint64_t)v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
  {
    *a1 = xmmword_10004F770;
    return swift_storeEnumTagMultiPayload(a1, v8, 0);
  }
  else
  {
    sub_10000B460((uint64_t)v17, (uint64_t)v14, type metadata accessor for WidgetTodayCard);
    sub_1000047CC((uint64_t)&v14[*(int *)(v11 + 48)], (uint64_t)v4, &qword_100061780);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100004810((uint64_t)v4, &qword_100061780);
      v20 = *((_QWORD *)v14 + 2);
      v21 = *((_QWORD *)v14 + 3);
      swift_bridgeObjectRetain(v21);
      sub_10000A7A8((uint64_t)v14, type metadata accessor for WidgetTodayCard);
      v22 = 0;
      *v10 = v20;
      v10[1] = v21;
    }
    else
    {
      sub_10000A7A8((uint64_t)v14, type metadata accessor for WidgetTodayCard);
      v23 = *(void (**)(_QWORD *, char *, uint64_t))(v6 + 32);
      v24 = (char *)v25[0];
      v23((_QWORD *)v25[0], v4, v5);
      v23(v10, v24, v5);
      v22 = 1;
    }
    swift_storeEnumTagMultiPayload(v10, v8, v22);
    return sub_10000B460((uint64_t)v10, (uint64_t)a1, type metadata accessor for CardDetailView.Heading);
  }
}

uint64_t sub_100037860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_100004380(&qword_1000624F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v7);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v8 = sub_100004380(&qword_100062500);
  sub_100037920(a1, (uint64_t)&v6[*(int *)(v8 + 44)]);
  sub_1000047CC((uint64_t)v6, a2, &qword_1000624F8);
  *(_WORD *)(a2 + *(int *)(sub_100004380(&qword_1000624E0) + 36)) = 0;
  return sub_100004810((uint64_t)v6, &qword_1000624F8);
}

uint64_t sub_100037920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  _OWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a2;
  v3 = sub_100004380(&qword_100061120);
  __chkstk_darwin(v3);
  v54 = (uint64_t *)((char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100004380(&qword_100061128);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for WidgetTodayCard(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v15);
  v17 = (_OWORD *)((char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (int *)type metadata accessor for CardDetailView(0);
  __chkstk_darwin(v18);
  v58 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - v21;
  __chkstk_darwin(v23);
  v57 = (uint64_t)&v52 - v24;
  v25 = type metadata accessor for ThumbnailArtworkView(0);
  __chkstk_darwin(v25);
  v56 = (uint64_t)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v53 = (uint64_t)&v52 - v28;
  sub_1000043C0(a1, (uint64_t)&v52 - v28, type metadata accessor for TodayCardListViewItem.Content);
  v55 = v17;
  sub_1000375D4(v17);
  sub_1000043C0(a1, (uint64_t)v14, type metadata accessor for TodayCardListViewItem.Content);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    v29 = 0x800000010005A3E0;
    v30 = 0xD00000000000002ALL;
  }
  else
  {
    sub_10000B460((uint64_t)v14, (uint64_t)v11, type metadata accessor for WidgetTodayCard);
    v30 = *((_QWORD *)v11 + 4);
    v29 = *((_QWORD *)v11 + 5);
    swift_bridgeObjectRetain(v29);
    sub_10000A7A8((uint64_t)v11, type metadata accessor for WidgetTodayCard);
  }
  *v7 = swift_getKeyPath(&unk_10004F918);
  v31 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v7, v31, 0);
  KeyPath = swift_getKeyPath(&unk_10004F948);
  v33 = (uint64_t)v54;
  *v54 = KeyPath;
  v34 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v33, v34, 0);
  v35 = swift_getKeyPath(&unk_10004F878);
  v36 = (uint64_t *)&v22[v18[6]];
  *v36 = v35;
  v37 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  sub_100004788((uint64_t)v7, (uint64_t)v22, &qword_100061128);
  sub_100004788(v33, (uint64_t)&v22[v18[5]], &qword_100061120);
  v38 = &v22[v18[7]];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_10004F978);
  v39 = sub_100004380(&qword_100061210);
  swift_storeEnumTagMultiPayload(v38, v39, 0);
  sub_10000B460((uint64_t)v55, (uint64_t)&v22[v18[8]], type metadata accessor for CardDetailView.Heading);
  v40 = &v22[v18[9]];
  *(_QWORD *)v40 = sub_10001E180;
  *((_QWORD *)v40 + 1) = 0;
  v40[16] = 0;
  v41 = (unint64_t *)&v22[v18[10]];
  *v41 = v30;
  v41[1] = v29;
  v42 = &v22[v18[11]];
  *(_QWORD *)v42 = sub_10001E180;
  *((_QWORD *)v42 + 1) = 0;
  v42[16] = 0;
  *(_QWORD *)&v22[v18[12]] = 0x8000000000000000;
  *(_QWORD *)&v22[v18[13]] = 0x7FF0000000000000;
  v43 = &v22[v18[14]];
  *(_OWORD *)v43 = 0u;
  *((_OWORD *)v43 + 1) = 0u;
  v44 = v57;
  sub_10000B460((uint64_t)v22, v57, type metadata accessor for CardDetailView);
  v45 = v53;
  v46 = v56;
  sub_1000043C0(v53, v56, type metadata accessor for ThumbnailArtworkView);
  v47 = v58;
  sub_1000043C0(v44, v58, type metadata accessor for CardDetailView);
  v48 = v59;
  sub_1000043C0(v46, v59, type metadata accessor for ThumbnailArtworkView);
  v49 = sub_100004380(&qword_100062508);
  v50 = v48 + *(int *)(v49 + 48);
  *(_QWORD *)v50 = 0x4028000000000000;
  *(_BYTE *)(v50 + 8) = 0;
  sub_1000043C0(v47, v48 + *(int *)(v49 + 64), type metadata accessor for CardDetailView);
  sub_10000A7A8(v44, type metadata accessor for CardDetailView);
  sub_10000A7A8(v45, type metadata accessor for ThumbnailArtworkView);
  sub_10000A7A8(v47, type metadata accessor for CardDetailView);
  return sub_10000A7A8(v46, type metadata accessor for ThumbnailArtworkView);
}

uint64_t sub_100037E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[16];
  uint64_t v8;

  v1 = type metadata accessor for URL(0);
  __chkstk_darwin(v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100037380((uint64_t)v3);
  v8 = v0;
  v4 = sub_100004380(&qword_1000624E0);
  v5 = sub_100038C64();
  return Link.init(destination:label:)(v3, sub_100038C5C, v7, v4, v5);
}

uint64_t sub_100037EB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v34 = a1;
  v3 = type metadata accessor for RedactionReasons(0);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100004380(&qword_100062370);
  v31 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  v32 = sub_100004380(&qword_100062378);
  __chkstk_darwin(v32);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ThumbnailContentView(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TodayCardListViewItem.Content(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(v2, (uint64_t)v18, type metadata accessor for TodayCardListViewItem.Content);
  v19 = type metadata accessor for WidgetTodayCard(0);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19);
  v21 = sub_1000043C0(v2, (uint64_t)v15, type metadata accessor for TodayCardListViewItem.Content);
  if (v20 == 1)
  {
    static RedactionReasons.placeholder.getter(v21);
    v22 = sub_100008DD8(&qword_100062380, type metadata accessor for ThumbnailContentView, (uint64_t)&unk_10004F8C8);
    View.redacted(reason:)(v5, v13, v22);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
    sub_10000A7A8((uint64_t)v15, type metadata accessor for ThumbnailContentView);
    v23 = v31;
    v24 = v33;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v10, v7, v33);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v12, v10, v24);
    swift_storeEnumTagMultiPayload(v12, v32, 1);
    v35 = v13;
    v36 = v22;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v35, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v12, v13, v24, v22, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v24);
  }
  else
  {
    sub_1000043C0((uint64_t)v15, (uint64_t)v12, type metadata accessor for ThumbnailContentView);
    swift_storeEnumTagMultiPayload(v12, v32, 0);
    v27 = sub_100008DD8(&qword_100062380, type metadata accessor for ThumbnailContentView, (uint64_t)&unk_10004F8C8);
    v35 = v13;
    v36 = v27;
    v28 = swift_getOpaqueTypeConformance2(&v35, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v12, v13, v33, v27, v28);
    sub_10000A7A8((uint64_t)v15, type metadata accessor for ThumbnailContentView);
    return sub_10000A7A8((uint64_t)v18, type metadata accessor for TodayCardListViewItem.Content);
  }
}

uint64_t type metadata accessor for ThumbnailContentView(uint64_t a1)
{
  return sub_10000A508(a1, qword_100062470, (uint64_t)&nominal type descriptor for ThumbnailContentView);
}

unint64_t sub_100038224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000623E8;
  if (!qword_1000623E8)
  {
    v1 = sub_1000044A8(&qword_1000623D0);
    sub_1000382A8();
    sub_10000B4D0(&qword_100062400, &qword_1000623B8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000623E8);
  }
  return result;
}

unint64_t sub_1000382A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000623F0;
  if (!qword_1000623F0)
  {
    v1 = sub_1000044A8(&qword_1000623D8);
    sub_100008DD8(&qword_1000623F8, type metadata accessor for TodayCardListViewItem, (uint64_t)&unk_10004F824);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000623F0);
  }
  return result;
}

uint64_t *sub_10003832C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *__dst;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;

  v4 = *(_QWORD *)(type metadata accessor for TodayCardListViewItem.Content(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v6 = type metadata accessor for WidgetTodayCard(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v31 = v7;
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      v12 = (void *)a2[7];
      v13 = a2[8];
      a1[7] = (uint64_t)v12;
      a1[8] = v13;
      v14 = (void *)a2[9];
      a1[9] = (uint64_t)v14;
      v15 = *(int *)(v6 + 44);
      __dst = (char *)a1 + v15;
      v29 = (char *)a2 + v15;
      v16 = type metadata accessor for URL(0);
      v27 = *(_QWORD *)(v16 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      v17 = v12;
      swift_bridgeObjectRetain(v13);
      v18 = v14;
      if (v30(v29, 1, v16))
      {
        v19 = sub_100004380(&qword_100061D18);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v29, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v16);
      }
      v20 = *(int *)(v6 + 48);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for Date(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100004380(&qword_100061780);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

_QWORD *sub_100038580(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v29;

  v4 = type metadata accessor for WidgetTodayCard(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for TodayCardListViewItem.Content(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v29 = v5;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
    v10 = (void *)a2[7];
    v11 = a2[8];
    a1[7] = v10;
    a1[8] = v11;
    v12 = (void *)a2[9];
    a1[9] = v12;
    v13 = *(int *)(v4 + 44);
    __dst = (char *)a1 + v13;
    v26 = (char *)a2 + v13;
    v14 = type metadata accessor for URL(0);
    v25 = *(_QWORD *)(v14 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v15 = v10;
    swift_bridgeObjectRetain(v11);
    v16 = v12;
    if (v27(v26, 1, v14))
    {
      v17 = sub_100004380(&qword_100061D18);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v26, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v14);
    }
    v18 = *(int *)(v4 + 48);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Date(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_100004380(&qword_100061780);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

_OWORD *sub_1000387B4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for WidgetTodayCard(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for TodayCardListViewItem.Content(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    v8 = *(int *)(v4 + 44);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100004380(&qword_100061D18);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = *(int *)(v4 + 48);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Date(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100004380(&qword_100061780);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_100038980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003898C);
}

uint64_t sub_100038990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayCardListViewItem.Content(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000389CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000389D8);
}

uint64_t sub_1000389DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayCardListViewItem.Content(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100038A1C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TodayCardListViewItem.Content(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_100038A88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1000624A8;
  if (!qword_1000624A8)
  {
    v1 = sub_1000044A8(&qword_1000624B0);
    v2 = sub_100008DD8(&qword_100062380, type metadata accessor for ThumbnailContentView, (uint64_t)&unk_10004F8C8);
    v3[0] = type metadata accessor for ThumbnailContentView(255);
    v3[1] = v2;
    swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000624A8);
  }
  return result;
}

unint64_t sub_100038B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000624B8;
  if (!qword_1000624B8)
  {
    v1 = sub_1000044A8(&qword_1000623A8);
    sub_10003977C(&qword_1000624C0, &qword_100062398, (void (*)(void))sub_100038BC8);
    sub_10000B4D0(&qword_1000624D8, &qword_1000623B0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000624B8);
  }
  return result;
}

unint64_t sub_100038BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000624C8;
  if (!qword_1000624C8)
  {
    v1 = sub_1000044A8(&qword_100062390);
    sub_10000B4D0(&qword_1000624D0, &qword_100062388, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000624C8);
  }
  return result;
}

uint64_t sub_100038C4C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050D50, 1);
}

uint64_t sub_100038C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100037860(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100038C64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000624E8;
  if (!qword_1000624E8)
  {
    v1 = sub_1000044A8(&qword_1000624E0);
    sub_10000B4D0(&qword_1000624F0, &qword_1000624F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10000B4D0(&qword_100061E50, &qword_100061E58, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000624E8);
  }
  return result;
}

uint64_t type metadata accessor for ThumbnailArtworkView(uint64_t a1)
{
  return sub_10000A508(a1, qword_100062568, (uint64_t)&nominal type descriptor for ThumbnailArtworkView);
}

uint64_t sub_100038D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  const void *v60;
  unsigned int (*v61)(const void *, uint64_t, uint64_t);
  void *__dst;
  uint64_t v63;

  v4 = type metadata accessor for WidgetTodayCard(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_10000A7A8(a1, type metadata accessor for WidgetTodayCard);
      goto LABEL_7;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v22 = *(_QWORD *)(a2 + 8);
    v23 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v22;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v24 = *(_QWORD *)(a2 + 24);
    v25 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease(v25);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v26 = *(_QWORD *)(a2 + 40);
    v27 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v26;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v27);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v28 = *(void **)(a1 + 56);
    v29 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v29;
    v30 = v29;

    v31 = *(_QWORD *)(a2 + 64);
    v32 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = v31;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRelease(v32);
    v33 = *(void **)(a1 + 72);
    v34 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v34;
    v35 = v34;

    v36 = *(int *)(v4 + 44);
    v37 = (void *)(a1 + v36);
    v38 = (void *)(a2 + v36);
    v39 = type metadata accessor for URL(0);
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
    v42 = v41(v37, 1, v39);
    v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 16))(v37, v38, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_21:
        v52 = *(int *)(v4 + 48);
        v53 = (void *)(a1 + v52);
        a2 += v52;
        v54 = type metadata accessor for Date(0);
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
        v57 = v56(v53, 1, v54);
        v58 = v56((void *)a2, 1, v54);
        if (v57)
        {
          if (!v58)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v55 + 16))(v53, a2, v54);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v53, 0, 1, v54);
            return a1;
          }
        }
        else
        {
          if (!v58)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v55 + 24))(v53, a2, v54);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v55 + 8))(v53, v54);
        }
        v20 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
        v21 = v53;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 24))(v37, v38, v39);
        goto LABEL_21;
      }
      (*(void (**)(void *, uint64_t))(v40 + 8))(v37, v39);
    }
    v51 = sub_100004380(&qword_100061D18);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TodayCardListViewItem.Content(0) - 8) + 64);
    v21 = (void *)a1;
LABEL_8:
    memcpy(v21, (const void *)a2, v20);
    return a1;
  }
  v63 = v5;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v13;
  v14 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v14;
  v15 = *(int *)(v4 + 44);
  __dst = (void *)(a1 + v15);
  v60 = (const void *)(a2 + v15);
  v16 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v16 - 8);
  v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  v17 = v12;
  swift_bridgeObjectRetain(v13);
  v18 = v14;
  if (v61(v60, 1, v16))
  {
    v19 = sub_100004380(&qword_100061D18);
    memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(__dst, v60, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v16);
  }
  v44 = *(int *)(v4 + 48);
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  v47 = type metadata accessor for Date(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100004380(&qword_100061780);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1000391D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;

  v4 = type metadata accessor for WidgetTodayCard(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_10000A7A8(a1, type metadata accessor for WidgetTodayCard);
      goto LABEL_7;
    }
    v18 = *(_QWORD *)(a2 + 8);
    v19 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v18;
    swift_bridgeObjectRelease(v19);
    v20 = *(_QWORD *)(a2 + 24);
    v21 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v20;
    swift_bridgeObjectRelease(v21);
    v22 = *(_QWORD *)(a2 + 40);
    v23 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v22;
    swift_bridgeObjectRelease(v23);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v24 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

    v25 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRelease(v25);
    v26 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

    v27 = *(int *)(v4 + 44);
    v28 = (void *)(a1 + v27);
    v29 = (void *)(a2 + v27);
    v30 = type metadata accessor for URL(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_21:
        v43 = *(int *)(v4 + 48);
        v44 = (void *)(a1 + v43);
        a2 += v43;
        v45 = type metadata accessor for Date(0);
        v46 = *(_QWORD *)(v45 - 8);
        v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
        v48 = v47(v44, 1, v45);
        v49 = v47((void *)a2, 1, v45);
        if (v48)
        {
          if (!v49)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v46 + 32))(v44, a2, v45);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v45);
            return a1;
          }
        }
        else
        {
          if (!v49)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v46 + 40))(v44, a2, v45);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v46 + 8))(v44, v45);
        }
        v16 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
        v17 = v44;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
        goto LABEL_21;
      }
      (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    }
    v42 = sub_100004380(&qword_100061D18);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TodayCardListViewItem.Content(0) - 8) + 64);
    v17 = (void *)a1;
LABEL_8:
    memcpy(v17, (const void *)a2, v16);
    return a1;
  }
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v10 = *(int *)(v4 + 44);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100004380(&qword_100061D18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v35 = *(int *)(v4 + 48);
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = type metadata accessor for Date(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = sub_100004380(&qword_100061780);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1000395C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000395D4);
}

uint64_t sub_1000395D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000395E4);
}

uint64_t sub_1000395E8()
{
  return sub_10000B4D0(&qword_1000625A0, &qword_1000625A8, (uint64_t)&protocol conformance descriptor for Link<A>);
}

uint64_t sub_100039614(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050DA0, 1);
}

uint64_t type metadata accessor for ThumbnailBackgroundColor(uint64_t a1)
{
  return sub_10000A508(a1, (uint64_t *)&unk_100062700, (uint64_t)&nominal type descriptor for ThumbnailBackgroundColor);
}

uint64_t sub_100039638()
{
  return sub_100004880(&qword_100062608, &qword_1000625F8, (void (*)(void))sub_10003965C, (void (*)(void))sub_1000397E8);
}

unint64_t sub_10003965C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062610;
  if (!qword_100062610)
  {
    v1 = sub_1000044A8(&qword_1000625F0);
    sub_1000396E0();
    sub_10000B4D0(&qword_100062638, &qword_100062640, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062610);
  }
  return result;
}

unint64_t sub_1000396E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062618;
  if (!qword_100062618)
  {
    v1 = sub_1000044A8(&qword_1000625E8);
    sub_10003977C(&qword_100062620, &qword_1000625E0, (void (*)(void))sub_10000AF68);
    sub_10000B4D0(&qword_100062628, &qword_100062630, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062618);
  }
  return result;
}

uint64_t sub_10003977C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000044A8(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000397E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062648;
  if (!qword_100062648)
  {
    v1 = sub_1000044A8(&qword_1000625D0);
    sub_10003986C();
    sub_10000B4D0(&qword_100062638, &qword_100062640, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062648);
  }
  return result;
}

unint64_t sub_10003986C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062650;
  if (!qword_100062650)
  {
    v1 = sub_1000044A8(&qword_1000625C8);
    sub_1000398F0();
    sub_10000B4D0(&qword_100062628, &qword_100062630, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062650);
  }
  return result;
}

unint64_t sub_1000398F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062658;
  if (!qword_100062658)
  {
    v1 = sub_1000044A8(&qword_1000625C0);
    sub_10003977C(&qword_100062660, &qword_100062668, (void (*)(void))sub_10003998C);
    sub_10000B4D0(&qword_100062678, &qword_1000625B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062658);
  }
  return result;
}

unint64_t sub_10003998C()
{
  unint64_t result;

  result = qword_100062670;
  if (!qword_100062670)
  {
    result = swift_getWitnessTable(&unk_10004DDE8, &type metadata for ThumbnailFallbackView);
    atomic_store(result, (unint64_t *)&qword_100062670);
  }
  return result;
}

unint64_t sub_1000399D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062680;
  if (!qword_100062680)
  {
    v1 = sub_1000044A8(&qword_100062600);
    sub_100039A54();
    sub_10000B4D0(&qword_100062638, &qword_100062640, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062680);
  }
  return result;
}

unint64_t sub_100039A54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062688;
  if (!qword_100062688)
  {
    v1 = sub_1000044A8(&qword_100062690);
    sub_100039AD8();
    sub_10000B4D0(&qword_100062628, &qword_100062630, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062688);
  }
  return result;
}

unint64_t sub_100039AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062698;
  if (!qword_100062698)
  {
    v1 = sub_1000044A8(&qword_1000626A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062698);
  }
  return result;
}

uint64_t *sub_100039B3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *__dst;
  char *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  void *v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for WidgetTodayCard(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for TodayCardListViewItem.Content(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v42 = v8;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      v15 = (void *)a2[7];
      v14 = a2[8];
      a1[7] = (uint64_t)v15;
      a1[8] = v14;
      v41 = (void *)a2[9];
      a1[9] = (uint64_t)v41;
      v16 = *(int *)(v7 + 44);
      __dst = (char *)a1 + v16;
      v39 = (char *)a2 + v16;
      v17 = type metadata accessor for URL(0);
      v37 = *(_QWORD *)(v17 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v13);
      v18 = v15;
      swift_bridgeObjectRetain(v14);
      v19 = v41;
      if (v40(v39, 1, v17))
      {
        v20 = sub_100004380(&qword_100061D18);
        memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v39, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v17);
      }
      v21 = *(int *)(v7 + 48);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for Date(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100004380(&qword_100061780);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v7);
    }
    v27 = *(int *)(a3 + 20);
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = v28;
      v33 = v30;
      v34 = 1;
    }
    else
    {
      v35 = *v29;
      *v28 = *v29;
      swift_retain(v35);
      v32 = v28;
      v33 = v30;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

double sub_100039E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v4 = type metadata accessor for WidgetTodayCard(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
    v5 = a1 + *(int *)(v4 + 44);
    v6 = type metadata accessor for URL(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v8 = a1 + *(int *)(v4 + 48);
    v9 = type metadata accessor for Date(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  v11 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v12 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v11).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100039F7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *__dst;
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for TodayCardListViewItem.Content(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v40 = v7;
    v41 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
    v13 = (void *)a2[7];
    v12 = a2[8];
    a1[7] = v13;
    a1[8] = v12;
    v14 = (void *)a2[9];
    a1[9] = v14;
    v15 = *(int *)(v6 + 44);
    v38 = (char *)a2 + v15;
    __dst = (char *)a1 + v15;
    v16 = type metadata accessor for URL(0);
    v36 = *(_QWORD *)(v16 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    v17 = v13;
    swift_bridgeObjectRetain(v12);
    v18 = v14;
    if (v37(v38, 1, v16))
    {
      v19 = sub_100004380(&qword_100061D18);
      memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v38, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v16);
    }
    v20 = *(int *)(v6 + 48);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for Date(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100004380(&qword_100061780);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    a3 = v41;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v6);
  }
  v26 = *(int *)(a3 + 20);
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
    v31 = v27;
    v32 = v29;
    v33 = 1;
  }
  else
  {
    v34 = *v28;
    *v27 = *v28;
    swift_retain(v34);
    v31 = v27;
    v32 = v29;
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(v31, v32, v33);
  return a1;
}

uint64_t sub_10003A228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  size_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  unsigned int (*v73)(const void *, uint64_t, uint64_t);
  const void *v74;
  void *__dst;
  uint64_t v76;
  uint64_t v77;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v76 = v7;
      v77 = a3;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v11;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v12;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v13 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v13;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      v14 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v14;
      v15 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v15;
      v16 = *(void **)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v16;
      v17 = *(int *)(v6 + 44);
      v74 = (const void *)(a2 + v17);
      __dst = (void *)(a1 + v17);
      v18 = type metadata accessor for URL(0);
      v72 = *(_QWORD *)(v18 - 8);
      v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v72 + 48);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v13);
      v19 = v14;
      swift_bridgeObjectRetain(v15);
      v20 = v16;
      if (v73(v74, 1, v18))
      {
        v21 = sub_100004380(&qword_100061D18);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v72 + 16))(__dst, v74, v18);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v18);
      }
      v47 = *(int *)(v6 + 48);
      v48 = (void *)(a1 + v47);
      v49 = (const void *)(a2 + v47);
      v50 = type metadata accessor for Date(0);
      v51 = *(_QWORD *)(v50 - 8);
      a3 = v77;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100004380(&qword_100061780);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v6);
LABEL_18:
      if (a1 == a2)
        return a1;
      goto LABEL_19;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10000A7A8(a1, type metadata accessor for WidgetTodayCard);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TodayCardListViewItem.Content(0) - 8) + 64);
    v23 = (void *)a1;
    v24 = (const void *)a2;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v25 = *(_QWORD *)(a2 + 8);
  v26 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v27 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v29 = *(_QWORD *)(a2 + 40);
  v30 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v31 = *(void **)(a1 + 56);
  v32 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v32;
  v33 = v32;

  v34 = *(_QWORD *)(a2 + 64);
  v35 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  v36 = *(void **)(a1 + 72);
  v37 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v37;
  v38 = v37;

  v39 = *(int *)(v6 + 44);
  v40 = (void *)(a1 + v39);
  v41 = (void *)(a2 + v39);
  v42 = type metadata accessor for URL(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
LABEL_26:
    v63 = sub_100004380(&qword_100061D18);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, void *, uint64_t))(v43 + 24))(v40, v41, v42);
LABEL_27:
  v64 = *(int *)(v6 + 48);
  v65 = (void *)(a1 + v64);
  v66 = (void *)(a2 + v64);
  v67 = type metadata accessor for Date(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69(v66, 1, v67);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v65, v66, v67);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      goto LABEL_18;
    }
    goto LABEL_32;
  }
  if (v71)
  {
    (*(void (**)(void *, uint64_t))(v68 + 8))(v65, v67);
LABEL_32:
    v22 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
    v23 = v65;
    v24 = v66;
LABEL_8:
    memcpy(v23, v24, v22);
    if (a1 == a2)
      return a1;
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v68 + 24))(v65, v66, v67);
  if (a1 == a2)
    return a1;
LABEL_19:
  v53 = *(int *)(a3 + 20);
  v54 = (uint64_t *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  sub_100004810(a1 + v53, &qword_100061210);
  v56 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
  {
    v57 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v54, v55, v57);
    v58 = v54;
    v59 = v56;
    v60 = 1;
  }
  else
  {
    v61 = *v55;
    *v54 = *v55;
    swift_retain(v61);
    v58 = v54;
    v59 = v56;
    v60 = 0;
  }
  swift_storeEnumTagMultiPayload(v58, v59, v60);
  return a1;
}

_OWORD *sub_10003A780(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for TodayCardListViewItem.Content(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    v10 = *(int *)(v6 + 44);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100004380(&qword_100061D18);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v16 = *(int *)(v6 + 48);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100004380(&qword_100061780);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload(v23, v25, 1);
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10003A9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;

  v6 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v12 = *(int *)(v6 + 44);
      v13 = (void *)(a1 + v12);
      v14 = (const void *)(a2 + v12);
      v15 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100004380(&qword_100061D18);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v38 = *(int *)(v6 + 48);
      v39 = (void *)(a1 + v38);
      v40 = (const void *)(a2 + v38);
      v41 = type metadata accessor for Date(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100004380(&qword_100061780);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
      if (a1 == a2)
        return a1;
      goto LABEL_19;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10000A7A8(a1, type metadata accessor for WidgetTodayCard);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TodayCardListViewItem.Content(0) - 8) + 64);
    v19 = (void *)a1;
    v20 = (const void *)a2;
    goto LABEL_8;
  }
  v21 = *(_QWORD *)(a2 + 8);
  v22 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v21;
  swift_bridgeObjectRelease(v22);
  v23 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v23;
  swift_bridgeObjectRelease(v24);
  v25 = *(_QWORD *)(a2 + 40);
  v26 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v25;
  swift_bridgeObjectRelease(v26);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v27 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v28 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(v28);
  v29 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v30 = *(int *)(v6 + 44);
  v31 = (void *)(a1 + v30);
  v32 = (void *)(a2 + v30);
  v33 = type metadata accessor for URL(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
LABEL_25:
    v50 = sub_100004380(&qword_100061D18);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v31, v32, v33);
LABEL_26:
  v51 = *(int *)(v6 + 48);
  v52 = (void *)(a1 + v51);
  v53 = (void *)(a2 + v51);
  v54 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_18;
    }
    goto LABEL_31;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
LABEL_31:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100004380(&qword_100061780) - 8) + 64);
    v19 = v52;
    v20 = v53;
LABEL_8:
    memcpy(v19, v20, v18);
    if (a1 == a2)
      return a1;
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 40))(v52, v53, v54);
  if (a1 == a2)
    return a1;
LABEL_19:
  v44 = *(int *)(a3 + 20);
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  sub_100004810(a1 + v44, &qword_100061210);
  v47 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
  {
    v48 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v45, v46, v48);
    swift_storeEnumTagMultiPayload(v45, v47, 1);
  }
  else
  {
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10003AE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AE74);
}

uint64_t sub_10003AE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for TodayCardListViewItem.Content(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100004380(&qword_100061ED8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10003AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003AEF8);
}

uint64_t sub_10003AEF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for TodayCardListViewItem.Content(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100004380(&qword_100061ED8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10003AF78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for TodayCardListViewItem.Content(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10003AFFC(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

void sub_10003AFFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100062710)
  {
    v2 = type metadata accessor for WidgetRenderingMode(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100062710);
  }
}

uint64_t sub_10003B050()
{
  return sub_100004880(&qword_100062740, &qword_100062748, (void (*)(void))sub_100039638, (void (*)(void))sub_1000399D0);
}

uint64_t sub_10003B084(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050DC8, 1);
}

unint64_t sub_10003B094()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062758;
  if (!qword_100062758)
  {
    v1 = sub_1000044A8(&qword_100062750);
    sub_10003B100();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062758);
  }
  return result;
}

unint64_t sub_10003B100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062760;
  if (!qword_100062760)
  {
    v1 = sub_1000044A8(&qword_100062768);
    sub_100025C38();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062760);
  }
  return result;
}

unint64_t sub_10003B170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062770;
  if (!qword_100062770)
  {
    v1 = sub_1000044A8(&qword_100062778);
    sub_10003B094();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062770);
  }
  return result;
}

uint64_t *sub_10003B1DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10003B298(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_10003B2E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_10003B378(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10000A7A8((uint64_t)a1, type metadata accessor for CardDetailView.Heading);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t type metadata accessor for CardDetailView.Heading(uint64_t a1)
{
  return sub_10000A508(a1, qword_100062810, (uint64_t)&nominal type descriptor for CardDetailView.Heading);
}

void *sub_10003B43C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10003B4C8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10000A7A8((uint64_t)a1, type metadata accessor for CardDetailView.Heading);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003B56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_10003B578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_10003B588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10003B598(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10004FAB8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void *sub_10003B608()
{
  return &protocol witness table for String;
}

uint64_t sub_10003B614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  int *v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v38;
  uint64_t v39;

  v38 = a3;
  v39 = a5;
  v14 = sub_100004380(&qword_100061120);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100004380(&qword_100061128);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000043C0(a1, (uint64_t)v22, v23);
  *v19 = swift_getKeyPath(&unk_10004FBB0);
  v24 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v19, v24, 0);
  *v16 = swift_getKeyPath(&unk_10004FBE0);
  v25 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v16, v25, 0);
  KeyPath = swift_getKeyPath(&unk_10004FC10);
  v27 = (int *)type metadata accessor for CardDetailView(0);
  v28 = (uint64_t *)(a7 + v27[6]);
  *v28 = KeyPath;
  v29 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  sub_100004788((uint64_t)v19, a7, &qword_100061128);
  sub_100004788((uint64_t)v16, a7 + v27[5], &qword_100061120);
  v30 = (_QWORD *)(a7 + v27[7]);
  *v30 = swift_getKeyPath(&unk_10004FC40);
  v31 = sub_100004380(&qword_100061210);
  swift_storeEnumTagMultiPayload(v30, v31, 0);
  sub_10000B460((uint64_t)v22, a7 + v27[8], type metadata accessor for CardDetailView.Heading);
  v32 = a7 + v27[9];
  *(_QWORD *)v32 = sub_10003D270;
  *(_QWORD *)(v32 + 8) = a2;
  *(_BYTE *)(v32 + 16) = 0;
  v33 = (_QWORD *)(a7 + v27[10]);
  v34 = v39;
  *v33 = v38;
  v33[1] = a4;
  v35 = a7 + v27[11];
  *(_QWORD *)v35 = sub_10003D270;
  *(_QWORD *)(v35 + 8) = v34;
  *(_BYTE *)(v35 + 16) = 0;
  *(_QWORD *)(a7 + v27[12]) = a6;
  *(double *)(a7 + v27[13]) = a8;
  v36 = (_OWORD *)(a7 + v27[14]);
  *v36 = xmmword_10004E390;
  v36[1] = xmmword_10004E3A0;
  swift_retain(a6 & 0x3FFFFFFFFFFFFFFFLL);
  swift_retain(a2);
  swift_bridgeObjectRetain(a4);
  return swift_retain(v34);
}

uint64_t sub_10003B8D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  return swift_storeEnumTagMultiPayload(a3, a2, 0);
}

uint64_t sub_10003B8E8()
{
  return sub_100008DD8(&qword_100062848, type metadata accessor for CardDetailView.Heading, (uint64_t)&unk_10004FAF8);
}

void *sub_10003B914()
{
  return &protocol witness table for String;
}

uint64_t sub_10003B920()
{
  return sub_100008DD8(&qword_100062850, type metadata accessor for CardDetailView.Heading, (uint64_t)&unk_10004FB30);
}

void *sub_10003B94C()
{
  return &protocol witness table for String;
}

uint64_t sub_10003B958(uint64_t a1)
{
  return sub_10003B980(a1, qword_100063370, (unsigned int *)&enum case for ContentSizeCategory.extraExtraExtraLarge(_:));
}

uint64_t sub_10003B96C(uint64_t a1)
{
  return sub_10003B980(a1, qword_100063388, (unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:));
}

uint64_t sub_10003B980(uint64_t a1, uint64_t *a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for ContentSizeCategory(0);
  sub_100005660(v5, a2);
  v6 = sub_1000056A0(v5, (uint64_t)a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v6, *a3, v5);
}

__n128 sub_10003B9D8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(char *, uint64_t, uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, unsigned __int8 a13, unint64_t a14)
{
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_QWORD, __n128);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  double v94;
  double v95;
  uint64_t v96;
  unint64_t v97;
  __n128 v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __n128 result;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  unsigned int v113;
  void (*v114)(char *, _QWORD, uint64_t);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int16 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  char v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int16 v163;
  _OWORD v164[8];
  __int16 v165;
  _OWORD v166[7];
  _BYTE v167[19];
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int16 v176;
  __int128 v177;
  __n128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  double v184[6];

  v130 = a6;
  v131 = a8;
  v129 = a5;
  v125 = a3;
  v126 = a1;
  v133 = a9;
  v18 = type metadata accessor for ContentSizeCategory(0);
  v134 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v127 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = v19;
  __chkstk_darwin(v20);
  v128 = (char *)&v110 - v21;
  v22 = type metadata accessor for WidgetFamily(0);
  v23 = *(_QWORD *)(v22 - 8);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = a14;
  if (a14 >> 62)
  {
    if (a14 >> 62 == 1)
    {
      v118 = a7;
      v123 = v18;
      LODWORD(v120) = a13;
      v28 = v132 & 0x3FFFFFFFFFFFFFFFLL;
      v29 = *(void (**)(_QWORD, __n128))(v23 + 104);
      v30 = v27;
      v113 = enum case for WidgetFamily.systemSmall(_:);
      v114 = (void (*)(char *, _QWORD, uint64_t))v29;
      v29(v27, v25);
      v31 = sub_100008DD8((unint64_t *)&qword_1000614C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
      v122 = v28;
      swift_retain(v28);
      v115 = a11;
      dispatch thunk of RawRepresentable.rawValue.getter(&v177, v22, v31);
      v112 = v31;
      v32 = v31;
      v33 = v22;
      dispatch thunk of RawRepresentable.rawValue.getter(&v168, v22, v32);
      v34 = v177;
      v119 = v168;
      v35 = *(void (**)(char *, uint64_t))(v23 + 8);
      v116 = v30;
      v111 = v35;
      v36 = ((uint64_t (*)(char *, uint64_t))v35)(v30, v22);
      v37 = 0x3FC999999999999ALL;
      if ((a12 & 1) != 0)
        v38 = 0.2;
      else
        v38 = 0.1;
      if ((a12 & 1) != 0)
        v39 = static Color.black.getter(v36);
      else
        v39 = static Color.white.getter(v36);
      v121 = v39;
      v47 = v130;
      v48 = v131;
      v49 = v125;
      if ((v120 & 1) != 0)
      {
        v50 = static Color.white.getter(v39);
      }
      else
      {
        swift_retain(v122);
        v37 = 0x3FEE666666666666;
      }
      v125 = v50;
      v51 = v129;
      if (a2)
      {
        v117 = v34;
        v52 = v126;
        sub_100041578(v126, a2, v49, a4);
        sub_100041578(v52, a2, v49, a4);
        sub_100041578(v52, a2, v49, a4);
        swift_bridgeObjectRetain(a2);
        swift_bridgeObjectRetain(a4);
        v131 = v49 & 1;
        v53 = static LocalizedStringKey.== infix(_:_:)(v52, a2, v131, a4, v52, a2, v131, a4);
        swift_bridgeObjectRelease_n(a4, 2);
        swift_bridgeObjectRelease_n(a2, 2);
        sub_1000409D8(v52, a2, v49, a4);
        if ((v53 & 1) != 0)
        {
          if (qword_100060920 != -1)
            swift_once(&qword_100060920, sub_10003B958);
          v54 = v123;
          v55 = sub_1000056A0(v123, (uint64_t)qword_100063370);
          v118 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 16);
          v118(v128, v55, v54);
          v56 = v49 & 1;
          v120 = v56;
          v48 = a4;
          v47 = a2;
          v51 = v52;
          goto LABEL_27;
        }
        v120 = v49 & 1;
        v48 = a4;
        v47 = a2;
        v51 = v52;
      }
      else
      {
        if (!v47)
        {
          *(_QWORD *)&v177 = static Color.clear.getter(v50);
          sub_1000412F0((uint64_t)&v177);
          sub_100004788((uint64_t)&v177, (uint64_t)&v168, &qword_100062A58);
          v108 = sub_100004380(&qword_100062A08);
          v109 = sub_100041168();
          _ConditionalContent<>.init(storage:)(&v168, v108, &type metadata for Color, v109, &protocol witness table for Color);
          v82 = v121;
          v81 = v122;
          v83 = v125;
LABEL_43:
          v161 = v152;
          v162 = v153;
          LOBYTE(v163) = v154;
          v157 = v148;
          v158 = v149;
          v159 = v150;
          v160 = v151;
          v155 = v146;
          v156 = v147;
          sub_1000412FC((uint64_t)&v155);
          sub_100004788((uint64_t)&v155, (uint64_t)&v177, &qword_100062A50);
          sub_100041304((uint64_t)&v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100040A84);
          v99 = sub_100004380(&qword_1000629F8);
          v100 = sub_1000410FC();
          _ConditionalContent<>.init(storage:)(&v177, v99, &type metadata for Color, v100, &protocol witness table for Color);
          v164[6] = v143;
          v164[7] = v144;
          v164[2] = v139;
          v164[3] = v140;
          v164[4] = v141;
          v164[5] = v142;
          v164[0] = v137;
          v164[1] = v138;
          v173 = v142;
          v174 = v143;
          v175 = v144;
          v169 = v138;
          v170 = v139;
          v171 = v140;
          v172 = v141;
          v165 = v145;
          v176 = v145;
          v168 = v137;
          sub_1000412E8((uint64_t)&v168);
          sub_100004788((uint64_t)&v168, (uint64_t)&v177, &qword_1000629D8);
          sub_100041368((uint64_t)v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100040A48);
          v101 = sub_100004380(&qword_1000629E0);
          v102 = sub_100041090();
          _ConditionalContent<>.init(storage:)(&v177, v101, &type metadata for Color, v102, &protocol witness table for Color);
          swift_release(v81);
          swift_release(v82);
          swift_release(v83);
          sub_100041304((uint64_t)&v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100040BA8);
          sub_100041368((uint64_t)v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100040B6C);
          v183 = v166[6];
          *(_OWORD *)v184 = *(_OWORD *)v167;
          *(_DWORD *)((char *)&v184[1] + 7) = *(_DWORD *)&v167[15];
          v179 = v166[2];
          v180 = v166[3];
          v181 = v166[4];
          v182 = v166[5];
          v177 = v166[0];
          v178 = (__n128)v166[1];
          goto LABEL_44;
        }
        v117 = v34;
        v57 = (uint64_t)v118;
        swift_bridgeObjectRetain_n(v47, 2);
        swift_bridgeObjectRetain_n(v48, 2);
        sub_1000409D8(v126, 0, v49, a4);
        sub_1000409D8(v51, v47, v57, v48);
        v131 = v57 & 1;
        v120 = v131;
      }
      v58 = v123;
      if (qword_100060928 != -1)
        swift_once(&qword_100060928, sub_10003B96C);
      v59 = sub_1000056A0(v58, (uint64_t)qword_100063388);
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 16);
      v60(v128, v59, v58);
      v118 = v60;
      if (!a2)
      {
        swift_bridgeObjectRetain(v47);
        swift_bridgeObjectRetain(v48);
        sub_1000409D8(v126, 0, v49, a4);
        v129 = v51;
        sub_1000409D8(v51, v47, v120, v48);
        goto LABEL_32;
      }
      v56 = v49 & 1;
      v52 = v126;
LABEL_27:
      sub_100041578(v52, a2, v49, a4);
      sub_100041578(v52, a2, v49, a4);
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRetain(v48);
      v61 = static LocalizedStringKey.== infix(_:_:)(v52, a2, v56, a4, v51, v47, v131, v48);
      swift_bridgeObjectRelease(a4);
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v47);
      sub_1000409D8(v52, a2, v49, a4);
      v129 = v51;
      if ((v61 & 1) != 0)
      {
        v130 = v47;
        v131 = v48;
        if (qword_100060930 != -1)
          swift_once(&qword_100060930, sub_10003D278);
        v62 = &qword_100062780;
        v63 = v123;
        v64 = v124;
LABEL_39:
        v69 = *v62;
        swift_retain(*v62);
        v126 = static HorizontalAlignment.center.getter(v70);
        v118(v127, (uint64_t)v128, v63);
        v71 = *(unsigned __int8 *)(v134 + 80);
        v72 = (v71 + 56) & ~v71;
        v124 = (v64 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
        v73 = (v124 + 15) & 0xFFFFFFFFFFFFFFF8;
        v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
        v75 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
        v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
        v77 = (v76 + 15) & 0xFFFFFFFFFFFFFFF8;
        v78 = swift_allocObject(&unk_10005ED68, v77 + 8, v71 | 7);
        v79 = v130;
        *(_QWORD *)(v78 + 16) = v129;
        *(_QWORD *)(v78 + 24) = v79;
        *(_BYTE *)(v78 + 32) = v120;
        *(_QWORD *)(v78 + 40) = v131;
        *(_QWORD *)(v78 + 48) = v69;
        (*(void (**)(uint64_t, char *, uint64_t))(v134 + 32))(v78 + v72, v127, v63);
        *(_QWORD *)(v78 + v124) = v132;
        v80 = v125;
        *(_QWORD *)(v78 + v73) = v125;
        *(_QWORD *)(v78 + v74) = v37;
        *(_QWORD *)(v78 + v75) = 0x4045000000000000;
        v82 = v121;
        v81 = v122;
        *(_QWORD *)(v78 + v76) = v121;
        *(double *)(v78 + v77) = v38;
        v83 = v80;
        swift_retain(v81);
        swift_retain(v69);
        swift_retain(v83);
        swift_retain(v82);
        v85 = static Edge.Set.top.getter(v84);
        v86 = EdgeInsets.init(_all:)(a10);
        v88 = v87;
        v90 = v89;
        v92 = v91;
        if (v117 == v119)
          v93 = 0.0;
        else
          v93 = 0.13962634;
        v94 = static UnitPoint.topLeading.getter();
        v136 = 0;
        v135 = 0;
        v177 = v126;
        v178.n128_u8[0] = 0;
        *(unsigned __int32 *)((char *)v178.n128_u32 + 1) = v164[0];
        v178.n128_u32[1] = *(_DWORD *)((char *)v164 + 3);
        v178.n128_u64[1] = (unint64_t)sub_1000414B8;
        *(_QWORD *)&v179 = v78;
        *((_QWORD *)&v179 + 1) = 0x746E656964617267;
        *(_QWORD *)&v180 = 0xE800000000000000;
        BYTE8(v180) = v85;
        HIDWORD(v180) = *(_DWORD *)((char *)&v155 + 3);
        *(_DWORD *)((char *)&v180 + 9) = v155;
        *(double *)&v181 = v86;
        *((_QWORD *)&v181 + 1) = v88;
        *(_QWORD *)&v182 = v90;
        *((_QWORD *)&v182 + 1) = v92;
        LOBYTE(v183) = 0;
        DWORD1(v183) = *(_DWORD *)((char *)&v137 + 3);
        *(_DWORD *)((char *)&v183 + 1) = v137;
        *((double *)&v183 + 1) = v93;
        v184[0] = v94;
        v184[1] = v95;
        sub_100041570((uint64_t)&v177);
        sub_100004788((uint64_t)&v177, (uint64_t)v166, &qword_100062A58);
        swift_retain(v78);
        v96 = sub_100004380(&qword_100062A08);
        v97 = sub_100041168();
        _ConditionalContent<>.init(storage:)(v166, v96, &type metadata for Color, v97, &protocol witness table for Color);
        swift_release(v78);
        v98 = swift_release(v69);
        (*(void (**)(char *, uint64_t, __n128))(v134 + 8))(v128, v123, v98);
        v152 = v174;
        v153 = v175;
        v154 = v176;
        v148 = v170;
        v149 = v171;
        v150 = v172;
        v151 = v173;
        v146 = v168;
        v147 = v169;
        goto LABEL_43;
      }
LABEL_32:
      v65 = v116;
      v114(v116, v113, v33);
      v66 = v112;
      dispatch thunk of RawRepresentable.rawValue.getter(&v177, v33, v112);
      dispatch thunk of RawRepresentable.rawValue.getter(&v168, v33, v66);
      v67 = v177;
      v68 = v168;
      v111(v65, v33);
      v130 = v47;
      v131 = v48;
      if (v67 == v68)
      {
        v63 = v123;
        v64 = v124;
        if (qword_100060938 != -1)
          swift_once(&qword_100060938, sub_10003D294);
        v62 = &qword_100062788;
      }
      else
      {
        v63 = v123;
        v64 = v124;
        if (qword_100060940 != -1)
          swift_once(&qword_100060940, sub_10003D2B0);
        v62 = &qword_100062790;
      }
      goto LABEL_39;
    }
    *(_QWORD *)&v168 = static Color.clear.getter(v24);
    sub_100041084((uint64_t)&v168);
    sub_100004788((uint64_t)&v168, (uint64_t)v166, &qword_1000629D8);
    v46 = sub_100004380(&qword_1000629E0);
    v44 = sub_100041090();
    v45 = v46;
  }
  else
  {
    v40 = v132;
    *(_QWORD *)&v164[0] = v132;
    sub_1000412DC((uint64_t)v164);
    sub_100004788((uint64_t)v164, (uint64_t)&v177, &qword_100062A50);
    swift_retain(v40);
    v41 = sub_100004380(&qword_1000629F8);
    v42 = sub_1000410FC();
    _ConditionalContent<>.init(storage:)(&v177, v41, &type metadata for Color, v42, &protocol witness table for Color);
    v173 = v160;
    v174 = v161;
    v175 = v162;
    v169 = v156;
    v170 = v157;
    v171 = v158;
    v172 = v159;
    v176 = v163;
    v168 = v155;
    sub_1000412E8((uint64_t)&v168);
    sub_100004788((uint64_t)&v168, (uint64_t)v166, &qword_1000629D8);
    v43 = sub_100004380(&qword_1000629E0);
    v44 = sub_100041090();
    v45 = v43;
  }
  _ConditionalContent<>.init(storage:)(v166, v45, &type metadata for Color, v44, &protocol witness table for Color);
LABEL_44:
  v103 = v133;
  v104 = *(_OWORD *)v184;
  *(_OWORD *)(v133 + 96) = v183;
  *(_OWORD *)(v103 + 112) = v104;
  *(_DWORD *)(v103 + 127) = *(_DWORD *)((char *)&v184[1] + 7);
  v105 = v180;
  *(_OWORD *)(v103 + 32) = v179;
  *(_OWORD *)(v103 + 48) = v105;
  v106 = v182;
  *(_OWORD *)(v103 + 64) = v181;
  *(_OWORD *)(v103 + 80) = v106;
  result = v178;
  *(_OWORD *)v103 = v177;
  *(__n128 *)(v103 + 16) = result;
  return result;
}

uint64_t sub_10003C6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, uint64_t a13, uint64_t a14)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double (*v88)@<D0>(uint64_t@<X8>);
  double (*v89)@<D0>(uint64_t@<X8>);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double (**v103)@<D0>(uint64_t@<X8>);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  double (*v122)@<D0>(uint64_t@<X8>);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v121 = a6;
  v124 = a1;
  v128 = a9;
  v130 = a8;
  v131 = a14;
  v129 = a13;
  v22 = type metadata accessor for GeometryProxy(0);
  v126 = *(_QWORD *)(v22 - 8);
  v127 = v22;
  __chkstk_darwin(v22);
  v123 = v23;
  v125 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for DynamicTypeFont(0);
  __chkstk_darwin(v109);
  v25 = (uint64_t *)((char *)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  v119 = (uint64_t)&v105 - v27;
  v28 = sub_100004380(&qword_1000613F8);
  __chkstk_darwin(v28);
  v30 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v111 = (char *)&v105 - v32;
  v108 = sub_100004380(&qword_100061230);
  __chkstk_darwin(v108);
  v34 = (char *)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100004380(&qword_100062A60);
  __chkstk_darwin(v110);
  v118 = (uint64_t)&v105 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100004380(&qword_100062A68);
  __chkstk_darwin(v114);
  v116 = (uint64_t)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100004380(&qword_100062A70);
  __chkstk_darwin(v112);
  v117 = (uint64_t)&v105 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100004380(&qword_100062A78);
  __chkstk_darwin(v113);
  v120 = (uint64_t)&v105 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100004380(&qword_100061240);
  __chkstk_darwin(v115);
  v122 = (double (*)@<D0>(uint64_t@<X8>))((char *)&v105 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_100004380(&qword_100061248);
  __chkstk_darwin(v40);
  v132 = (uint64_t)&v105 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a5);
  v42 = Text.init(_:tableName:bundle:comment:)(a2, a3, a4, a5, 0, 0, 0, 0, 0, 256);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  if (qword_100060948 != -1)
    swift_once(&qword_100060948, sub_10003D2CC);
  v49 = v46 & 1;
  v50 = Text.fontWeight(_:)(qword_100062798, 0, v42, v44, v46 & 1, v48);
  v106 = v51;
  v107 = v52;
  v54 = v53 & 1;
  sub_1000127AC(v42, v44, v49);
  swift_bridgeObjectRelease(v48);
  v55 = type metadata accessor for ContentSizeCategory(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = (uint64_t)v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v111, a7, v55);
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
  v58(v57, 0, 1, v55);
  sub_1000047CC(v57, (uint64_t)v30, &qword_1000613F8);
  *v25 = swift_getKeyPath(&unk_10004FBB0);
  v59 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v25, v59, 0);
  v60 = (uint64_t)v30;
  v61 = v109;
  v62 = (_QWORD *)((char *)v25 + *(int *)(v109 + 20));
  *v62 = swift_getKeyPath(&unk_10004FBE0);
  v63 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v62, v63, 0);
  v64 = (uint64_t)v25 + *(int *)(v61 + 28);
  v58(v64, 1, 1, v55);
  v65 = v121;
  *(_QWORD *)((char *)v25 + *(int *)(v61 + 24)) = v121;
  swift_retain(v65);
  sub_1000152E0(v60, v64);
  v66 = v119;
  sub_10000B460((uint64_t)v25, v119, type metadata accessor for DynamicTypeFont);
  sub_1000043C0(v66, (uint64_t)&v34[*(int *)(v108 + 36)], type metadata accessor for DynamicTypeFont);
  v67 = v106;
  *(_QWORD *)v34 = v50;
  *((_QWORD *)v34 + 1) = v67;
  v34[16] = v54;
  v68 = v107;
  *((_QWORD *)v34 + 3) = v107;
  sub_10001265C(v50, v67, v54);
  swift_bridgeObjectRetain(v68);
  sub_10000A7A8(v66, type metadata accessor for DynamicTypeFont);
  sub_100004810(v57, &qword_1000613F8);
  sub_1000127AC(v50, v67, v54);
  swift_bridgeObjectRelease(v68);
  KeyPath = swift_getKeyPath(&unk_10004FDC0);
  v70 = v118;
  sub_1000047CC((uint64_t)v34, v118, &qword_100061230);
  v71 = v70 + *(int *)(v110 + 36);
  *(_QWORD *)v71 = KeyPath;
  *(_QWORD *)(v71 + 8) = 1;
  *(_BYTE *)(v71 + 16) = 0;
  sub_100004810((uint64_t)v34, &qword_100061230);
  v72 = swift_getKeyPath(&unk_10004FDF0);
  v73 = v116;
  sub_1000047CC(v70, v116, &qword_100062A60);
  v74 = v73 + *(int *)(v114 + 36);
  *(_QWORD *)v74 = v72;
  *(_BYTE *)(v74 + 8) = 0;
  sub_100004810(v70, &qword_100062A60);
  v75 = v117;
  sub_1000047CC(v73, v117, &qword_100062A68);
  *(_WORD *)(v75 + *(int *)(v112 + 36)) = 256;
  sub_100004810(v73, &qword_100062A68);
  v76 = swift_getKeyPath(&unk_10004FD60);
  v77 = v120;
  sub_1000047CC(v75, v120, &qword_100062A70);
  v78 = (uint64_t *)(v77 + *(int *)(v113 + 36));
  *v78 = v76;
  v78[1] = 0xC000000000000000;
  v79 = sub_100004810(v75, &qword_100062A70);
  v80 = static Color.clear.getter(v79);
  v81 = swift_getKeyPath(&unk_10004FD90);
  v82 = (uint64_t)v122;
  sub_1000047CC(v77, (uint64_t)v122, &qword_100062A78);
  v83 = (uint64_t *)(v82 + *(int *)(v115 + 36));
  *v83 = v81;
  v83[1] = v80;
  v84 = sub_100004810(v77, &qword_100062A78);
  v85 = static Alignment.center.getter(v84);
  sub_10000FF28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v132, 0.0, 1, 0.0, 1, v85, v86);
  v87 = sub_100004810(v82, &qword_100061240);
  v122 = (double (*)@<D0>(uint64_t@<X8>))static Alignment.center.getter(v87);
  v89 = v88;
  v90 = v125;
  v91 = v126;
  v92 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v124, v127);
  v93 = *(unsigned __int8 *)(v91 + 80);
  v94 = (v93 + 48) & ~v93;
  v95 = (v123 + v94 + 7) & 0xFFFFFFFFFFFFFFF8;
  v96 = (v95 + 15) & 0xFFFFFFFFFFFFFFF8;
  v97 = swift_allocObject(&unk_10005ED90, v96 + 8, v93 | 7);
  v99 = v129;
  v98 = v130;
  *(_QWORD *)(v97 + 16) = v130;
  *(_QWORD *)(v97 + 24) = v99;
  *(double *)(v97 + 32) = a10;
  *(double *)(v97 + 40) = a11;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v97 + v94, v90, v92);
  v101 = v131;
  v100 = v132;
  *(_QWORD *)(v97 + v95) = v131;
  *(double *)(v97 + v96) = a12;
  v102 = v128;
  sub_1000047CC(v100, v128, &qword_100061248);
  v103 = (double (**)@<D0>(uint64_t@<X8>))(v102 + *(int *)(sub_100004380(&qword_100062A80) + 36));
  *v103 = sub_1000416A0;
  v103[1] = (double (*)@<D0>(uint64_t@<X8>))v97;
  v103[2] = v122;
  v103[3] = v89;
  swift_retain(v98 & 0x3FFFFFFFFFFFFFFFLL);
  swift_retain(v99);
  swift_retain(v101);
  return sub_100004810(v100, &qword_100061248);
}

double sub_10003CF9C@<D0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  _BYTE v59[7];
  _BYTE v60[7];

  *(_QWORD *)&v43 = a2;
  v11 = type metadata accessor for CoordinateSpace(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = 0x746E656964617267;
  v55 = 0xE800000000000000;
  AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String, v13);
  v16 = enum case for CoordinateSpace.named(_:);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v17(v15, enum case for CoordinateSpace.named(_:), v11);
  sub_100041714(a1, (uint64_t)v15, (uint64_t)&v46, a4, a5);
  v45 = v46;
  v44 = v47;
  v18 = v48;
  v19 = v49;
  v20 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  v21 = v20(v15, v11);
  v42 = static Alignment.center.getter(v21);
  v23 = v22;
  v54 = 0x746E656964617267;
  v55 = 0xE800000000000000;
  AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String, v24);
  v17(v15, v16, v11);
  sub_100041714(v43, (uint64_t)v15, (uint64_t)&v50, a6, a5);
  v25 = v50;
  v43 = v51;
  v26 = v52;
  v27 = v53;
  v28 = v20(v15, v11);
  v29 = GeometryProxy.size.getter(v28) + a5;
  GeometryProxy.size.getter(v30);
  v32 = v31 + a5;
  v34 = static Alignment.center.getter(v33);
  _FrameLayout.init(width:height:alignment:)(&v54, *(_QWORD *)&v29, 0, *(_QWORD *)&v32, 0, v34, v35);
  v36 = v54;
  v37 = v55;
  v38 = v56;
  v39 = v57;
  result = -a5;
  *(_DWORD *)(a3 + 105) = *(_DWORD *)v60;
  *(_DWORD *)(a3 + 108) = *(_DWORD *)&v60[3];
  *(_DWORD *)(a3 + 121) = *(_DWORD *)v59;
  *(_DWORD *)(a3 + 124) = *(_DWORD *)&v59[3];
  *(_QWORD *)a3 = v45;
  *(_OWORD *)(a3 + 8) = v44;
  *(_QWORD *)(a3 + 24) = v18;
  *(_QWORD *)(a3 + 32) = v19;
  *(_QWORD *)(a3 + 40) = v25;
  *(_OWORD *)(a3 + 48) = v43;
  *(_QWORD *)(a3 + 64) = v26;
  *(_QWORD *)(a3 + 72) = v27;
  *(_QWORD *)(a3 + 80) = v42;
  *(_QWORD *)(a3 + 88) = v23;
  *(_QWORD *)(a3 + 96) = v36;
  *(_BYTE *)(a3 + 104) = v37;
  *(_QWORD *)(a3 + 112) = v38;
  *(_BYTE *)(a3 + 120) = v39;
  *(_OWORD *)(a3 + 128) = v58;
  *(double *)(a3 + 144) = a5 * -0.5;
  *(double *)(a3 + 152) = -a5;
  return result;
}

uint64_t sub_10003D270()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_10003D278()
{
  uint64_t result;

  result = static Font.caption2.getter();
  qword_100062780 = result;
  return result;
}

uint64_t sub_10003D294()
{
  uint64_t result;

  result = static Font.footnote.getter();
  qword_100062788 = result;
  return result;
}

uint64_t sub_10003D2B0()
{
  uint64_t result;

  result = static Font.callout.getter();
  qword_100062790 = result;
  return result;
}

void sub_10003D2CC()
{
  qword_100062798 = static Font.Weight.semibold.getter();
}

uint64_t sub_10003D2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  Swift::String v28;
  uint64_t v29;
  _BYTE v31[16];

  v1 = v0;
  v2 = type metadata accessor for Text.DateStyle(0);
  __chkstk_darwin(v2);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v31[-v13];
  v15 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v15);
  v17 = &v31[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for CardDetailView(0);
  sub_1000043C0(v1 + *(int *)(v18 + 32), (uint64_t)v17, type metadata accessor for CardDetailView.Heading);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v9 + 32))(v14, v17, v8);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
    v20 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v8);
    static Text.DateStyle.time.getter(v20);
    v21 = Text.init(_:style:)(v11, v4);
    v23 = v22;
    v25 = v24;
    v27 = v26 & 1;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    sub_1000127AC(v21, v23, v27);
    swift_bridgeObjectRelease(v25);
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v28);
    v29 = LocalizedStringKey.init(stringInterpolation:)(v7);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
  else if (v17[1])
  {
    return LocalizedStringKey.init(_:)(*v17);
  }
  else
  {
    return 0;
  }
  return v29;
}

uint64_t sub_10003D55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  double v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v82;
  char v83;
  int v84;
  unsigned __int8 v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[7];
  _OWORD v113[2];
  _OWORD v114[7];
  _BYTE v115[19];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _BYTE v123[19];
  _OWORD v124[8];

  v111 = a2;
  v3 = sub_100004380(&qword_100062928);
  __chkstk_darwin(v3);
  v107 = (uint64_t *)((char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v104 = sub_100004380(&qword_100062930);
  __chkstk_darwin(v104);
  v108 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100004380(&qword_100062938);
  __chkstk_darwin(v106);
  v110 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v105 = (uint64_t)&v86 - v8;
  __chkstk_darwin(v9);
  v109 = (uint64_t)&v86 - v10;
  v11 = type metadata accessor for WidgetRenderingMode(0);
  v102 = *(_QWORD *)(v11 - 8);
  v103 = v11;
  __chkstk_darwin(v11);
  v100 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v97 = (uint64_t)&v86 - v14;
  v15 = type metadata accessor for ColorScheme(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v86 - v20;
  v101 = type metadata accessor for WidgetFamily(0);
  v99 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)type metadata accessor for CardDetailView(0);
  v92 = *(_QWORD *)(a1 + v24[12]);
  v25 = sub_10003D2E8();
  v95 = v26;
  v96 = v25;
  v93 = v28;
  v94 = v27;
  v29 = a1;
  v30 = (uint64_t *)(a1 + v24[10]);
  if (v30[1])
  {
    v31 = *v30;
    swift_bridgeObjectRetain(v30[1]);
    v32 = LocalizedStringKey.init(_:)(v31);
    v90 = v33;
    v91 = v32;
    v88 = (void (*)(char *, uint64_t, uint64_t))(v34 & 1);
    v89 = v35;
  }
  else
  {
    v90 = 0;
    v91 = 0;
    v88 = 0;
    v89 = 0;
  }
  v87 = v23;
  sub_1000466B0((uint64_t)v23);
  v98 = (double *)(a1 + v24[14]);
  v36 = *v98;
  sub_10004644C((uint64_t)v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for ColorScheme.dark(_:), v15);
  v37 = static ColorScheme.== infix(_:_:)(v21, v18);
  v38 = *(void (**)(char *, uint64_t))(v16 + 8);
  v38(v18, v15);
  v38(v21, v15);
  v39 = v97;
  v40 = sub_1000466E0(v97);
  v41 = v100;
  static WidgetRenderingMode.accented.getter(v40);
  LOBYTE(v38) = static WidgetRenderingMode.== infix(_:_:)(v39, v41);
  v42 = *(void (**)(char *, uint64_t))(v102 + 8);
  v43 = v41;
  v44 = v103;
  v42(v43, v103);
  v42((char *)v39, v44);
  v85 = v38 & 1;
  v83 = v37 & 1;
  v82 = (uint64_t)v23;
  v46 = v95;
  v45 = v96;
  v48 = v93;
  v47 = v94;
  v50 = v90;
  v49 = v91;
  v51 = v88;
  v52 = v89;
  sub_10003B9D8(v96, v95, v94, v93, v91, v90, v88, v89, (uint64_t)&v116, v36, v82, v83, v85, v92);
  sub_1000409D8(v49, v50, (uint64_t)v51, v52);
  sub_1000409D8(v45, v46, v47, v48);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v87, v101);
  v54 = static HorizontalAlignment.leading.getter(v53);
  v55 = (uint64_t)v107;
  *v107 = v54;
  *(_QWORD *)(v55 + 8) = 0x4000000000000000;
  *(_BYTE *)(v55 + 16) = 0;
  v56 = sub_100004380(&qword_100062940);
  v57 = sub_10003DBB0(v29, (_QWORD *)(v55 + *(int *)(v56 + 44)));
  v58 = static Alignment.center.getter(v57);
  LOBYTE(v84) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v124, 0, 1, 0, 1, 0, 1, 0x4043800000000000, 0, 0, 1, 0, v84, v58, v59);
  v60 = v108;
  sub_1000047CC(v55, v108, &qword_100062928);
  v61 = (_OWORD *)(v60 + *(int *)(v104 + 36));
  v62 = v124[5];
  v61[4] = v124[4];
  v61[5] = v62;
  v61[6] = v124[6];
  v63 = v124[1];
  *v61 = v124[0];
  v61[1] = v63;
  v64 = v124[3];
  v61[2] = v124[2];
  v61[3] = v64;
  v65 = sub_100004810(v55, &qword_100062928);
  v66 = *v98;
  v67 = *((_QWORD *)v98 + 1);
  v68 = *((_QWORD *)v98 + 3);
  LOBYTE(v45) = static Edge.Set.all.getter(v65);
  v69 = v105;
  sub_1000047CC(v60, v105, &qword_100062930);
  v70 = v69 + *(int *)(v106 + 36);
  *(_BYTE *)v70 = v45;
  *(double *)(v70 + 8) = v66;
  *(_QWORD *)(v70 + 16) = v67;
  *(_QWORD *)(v70 + 24) = 0;
  *(_QWORD *)(v70 + 32) = v68;
  *(_BYTE *)(v70 + 40) = 0;
  sub_100004810(v60, &qword_100062930);
  v71 = v109;
  sub_100004788(v69, v109, &qword_100062938);
  v72 = v110;
  sub_1000047CC(v71, v110, &qword_100062938);
  v112[6] = v122;
  v113[0] = *(_OWORD *)v123;
  v73 = v117;
  v74 = v118;
  v112[2] = v118;
  v112[3] = v119;
  v75 = v119;
  v112[4] = v120;
  v112[5] = v121;
  v76 = v116;
  v112[0] = v116;
  v112[1] = v117;
  v77 = *(_OWORD *)v123;
  v78 = v111;
  *(_OWORD *)(v111 + 96) = v122;
  *(_OWORD *)(v78 + 112) = v77;
  *(_OWORD *)(v78 + 32) = v74;
  *(_OWORD *)(v78 + 48) = v75;
  v79 = v121;
  *(_OWORD *)(v78 + 64) = v120;
  *(_OWORD *)(v78 + 80) = v79;
  *(_DWORD *)((char *)v113 + 15) = *(_DWORD *)&v123[15];
  *(_DWORD *)(v78 + 127) = *(_DWORD *)&v123[15];
  *(_OWORD *)v78 = v76;
  *(_OWORD *)(v78 + 16) = v73;
  v80 = sub_100004380(&qword_100062948);
  sub_1000047CC(v72, v78 + *(int *)(v80 + 48), &qword_100062938);
  sub_100040AC0((uint64_t)v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_100040A08);
  sub_100004810(v71, &qword_100062938);
  sub_100004810(v72, &qword_100062938);
  v114[6] = v122;
  *(_OWORD *)v115 = *(_OWORD *)v123;
  *(_DWORD *)&v115[15] = *(_DWORD *)&v123[15];
  v114[2] = v118;
  v114[3] = v119;
  v114[4] = v120;
  v114[5] = v121;
  v114[0] = v116;
  v114[1] = v117;
  return sub_100040AC0((uint64_t)v114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_100040B2C);
}

uint64_t sub_10003DBB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t *v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  void (*v116)(_BYTE *, uint64_t);
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t *v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  _BYTE *v145;
  void (*v146)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v147;
  void (*v148)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(_BYTE *, uint64_t);
  uint64_t *v174;
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _BYTE *v191;
  uint64_t v192;
  char v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __n128 v205;
  double v206;
  uint64_t v207;
  _BYTE *v208;
  uint64_t v209;
  uint64_t v210;
  _BYTE *v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _BYTE *v216;
  uint64_t *v217;
  uint64_t v218;
  __n128 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE *v223;
  uint64_t *v224;
  _BYTE *v225;
  uint64_t v226;
  _BYTE *v227;
  _BYTE *v228;
  _QWORD *v229;
  int *v230;
  char *v231;
  int v233;
  _BYTE v234[4];
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t *v239;
  uint64_t v240;
  uint64_t v241;
  _BYTE *v242;
  _BYTE *v243;
  _BYTE *v244;
  _BYTE *v245;
  _BYTE *v246;
  _BYTE *v247;
  _BYTE *v248;
  uint64_t v249;
  _BYTE *v250;
  _BYTE *v251;
  uint64_t v252;
  _BYTE *v253;
  _BYTE *v254;
  _BYTE *v255;
  _BYTE *v256;
  _BYTE *v257;
  _BYTE *v258;
  _BYTE *v259;
  _BYTE *v260;
  uint64_t v261;
  _BYTE *v262;
  uint64_t v263;
  _BYTE *v264;
  _BYTE *v265;
  _QWORD *v266;
  _BYTE *v267;
  _BYTE *v268;
  uint64_t v269;
  _BYTE *v270;
  uint64_t v271;
  uint64_t *v272;
  _BYTE *v273;
  _BYTE *v274;
  uint64_t v275;
  uint64_t v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;

  v266 = a2;
  v3 = type metadata accessor for WidgetFamily(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v254 = &v234[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v253 = &v234[-v7];
  v8 = sub_100004380(&qword_100062950);
  __chkstk_darwin(v8);
  v265 = &v234[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v264 = &v234[-v11];
  v12 = type metadata accessor for ColorSchemeAwarePlusBlend(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)&v234[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for WidgetRenderingMode(0);
  v252 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v251 = &v234[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v250 = &v234[-v18];
  v271 = type metadata accessor for DynamicTypeFont(0);
  __chkstk_darwin(v271);
  v272 = (uint64_t *)&v234[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v274 = &v234[-v21];
  v22 = sub_100004380(&qword_1000613F8);
  __chkstk_darwin(v22);
  v270 = &v234[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v273 = &v234[-v25];
  v269 = sub_100004380(&qword_100061230);
  __chkstk_darwin(v269);
  v257 = &v234[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v267 = &v234[-v28];
  v29 = sub_100004380(&qword_100061238);
  __chkstk_darwin(v29);
  v255 = &v234[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31);
  v242 = &v234[-v32];
  v275 = sub_100004380(&qword_100062958);
  __chkstk_darwin(v275);
  v256 = &v234[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v34);
  v268 = &v234[-v35];
  v276 = sub_100004380(&qword_100062960);
  __chkstk_darwin(v276);
  v260 = &v234[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v37);
  v248 = &v234[-v38];
  v39 = sub_100004380(&qword_100062968);
  v263 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v259 = &v234[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v41);
  v258 = &v234[-v42];
  __chkstk_darwin(v43);
  v243 = &v234[-v44];
  v45 = sub_100004380(&qword_100062970);
  __chkstk_darwin(v45);
  v246 = &v234[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v249 = sub_100004380(&qword_100062978);
  __chkstk_darwin(v249);
  v247 = &v234[-((v47 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v48 = sub_100004380(&qword_100062980);
  v261 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v245 = &v234[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v50);
  v244 = &v234[-v51];
  v52 = sub_100004380(&qword_100062988);
  __chkstk_darwin(v52);
  v262 = &v234[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v54);
  v56 = &v234[-v55];
  v57 = sub_10003D2E8();
  v278 = v39;
  v279 = a1;
  v277 = v56;
  if (v58)
  {
    v238 = v15;
    v239 = v14;
    v241 = v3;
    v61 = Text.init(_:tableName:bundle:comment:)(v57, v58, v59 & 1, v60, 0, 0, 0, 0, 0, 256);
    v63 = v62;
    v65 = v64;
    v67 = v66;
    if (qword_100060948 != -1)
      swift_once(&qword_100060948, sub_10003D2CC);
    v68 = Text.fontWeight(_:)(qword_100062798, 0, v61, v63, v65 & 1, v67);
    v70 = v69;
    v235 = v71;
    v236 = v72;
    sub_1000127AC(v61, v63, v65 & 1);
    swift_bridgeObjectRelease(v67);
    if (qword_100060930 != -1)
      swift_once(&qword_100060930, sub_10003D278);
    v237 = v48;
    v240 = v4;
    v73 = qword_100062780;
    if (qword_100060920 != -1)
      swift_once(&qword_100060920, sub_10003B958);
    v74 = type metadata accessor for ContentSizeCategory(0);
    v75 = sub_1000056A0(v74, (uint64_t)qword_100063370);
    v76 = *(_QWORD *)(v74 - 8);
    v77 = (uint64_t)v273;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v76 + 16))(v273, v75, v74);
    v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
    v78(v77, 0, 1, v74);
    v79 = v270;
    sub_1000047CC(v77, (uint64_t)v270, &qword_1000613F8);
    KeyPath = swift_getKeyPath(&unk_10004FBB0);
    v81 = (uint64_t)v272;
    *v272 = KeyPath;
    v82 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v81, v82, 0);
    v83 = v271;
    v84 = (_QWORD *)(v81 + *(int *)(v271 + 20));
    *v84 = swift_getKeyPath(&unk_10004FBE0);
    v85 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v84, v85, 0);
    v86 = v81 + *(int *)(v83 + 28);
    v78(v86, 1, 1, v74);
    *(_QWORD *)(v81 + *(int *)(v83 + 24)) = v73;
    swift_retain(v73);
    sub_1000152E0((uint64_t)v79, v86);
    v87 = v274;
    sub_10000B460(v81, (uint64_t)v274, type metadata accessor for DynamicTypeFont);
    v88 = v267;
    sub_1000043C0((uint64_t)v87, (uint64_t)&v267[*(int *)(v269 + 36)], type metadata accessor for DynamicTypeFont);
    *(_QWORD *)v88 = v68;
    *((_QWORD *)v88 + 1) = v70;
    LOBYTE(v86) = v235 & 1;
    v88[16] = v235 & 1;
    v89 = v236;
    *((_QWORD *)v88 + 3) = v236;
    sub_10001265C(v68, v70, v86);
    swift_bridgeObjectRetain(v89);
    sub_10000A7A8((uint64_t)v87, type metadata accessor for DynamicTypeFont);
    sub_100004810(v77, &qword_1000613F8);
    sub_1000127AC(v68, v70, v86);
    swift_bridgeObjectRelease(v89);
    v90 = (int *)type metadata accessor for CardDetailView(0);
    v91 = v279;
    v92 = (uint64_t *)(v279 + v90[11]);
    v93 = *v92;
    v94 = v92[1];
    v95 = *((unsigned __int8 *)v92 + 16);
    v96 = type metadata accessor for SingleLineTextObserver.State(0);
    v97 = sub_100008DD8((unint64_t *)&qword_100061BF0, type metadata accessor for SingleLineTextObserver.State, (uint64_t)&unk_10004EBA8);
    v236 = v96;
    v98 = StateObject.wrappedValue.getter(v93, v94, v95, v96, v97);
    v99 = swift_getKeyPath(&unk_10004FD18);
    v100 = swift_getKeyPath(&unk_10004FD40);
    static Published.subscript.getter(&v281, v98, v99, v100);
    swift_release(v98);
    swift_release(v99);
    v101 = swift_release(v100);
    if ((v281 & 1) != 0)
      v102 = 0x7FF0000000000000;
    else
      v102 = *(_QWORD *)(v91 + v90[13]);
    v48 = v237;
    v105 = static Alignment.leading.getter(v101);
    v106 = v242;
    v107 = *(double *)&v102;
    v108 = (uint64_t)v267;
    sub_10000FF80(0.0, 1, 0.0, 1, v107, 0, 0.0, 1, (uint64_t)v242, 0.0, 1, 0.0, 1, v105, v109);
    sub_100004810(v108, &qword_100061230);
    v110 = swift_getKeyPath(&unk_10004FD60);
    v111 = v268;
    sub_1000047CC((uint64_t)v106, (uint64_t)v268, &qword_100061238);
    v112 = (uint64_t *)&v111[*(int *)(v275 + 36)];
    *v112 = v110;
    v112[1] = 0xC000000000000000;
    sub_100004810((uint64_t)v106, &qword_100061238);
    v113 = v250;
    v114 = sub_1000466E0((uint64_t)v250);
    v115 = v251;
    static WidgetRenderingMode.accented.getter(v114);
    LOBYTE(v110) = static WidgetRenderingMode.== infix(_:_:)(v113, v115);
    v116 = *(void (**)(_BYTE *, uint64_t))(v252 + 8);
    v117 = v115;
    v118 = v238;
    v116(v117, v238);
    v119 = ((uint64_t (*)(_BYTE *, uint64_t))v116)(v113, v118);
    if ((v110 & 1) != 0)
      v120 = static Color.primary.getter(v119);
    else
      v120 = static Color.secondary.getter(v119);
    v121 = v120;
    v122 = swift_getKeyPath(&unk_10004FD90);
    v123 = v268;
    v124 = v248;
    sub_1000047CC((uint64_t)v268, (uint64_t)v248, &qword_100062958);
    v125 = (uint64_t *)&v124[*(int *)(v276 + 36)];
    *v125 = v122;
    v125[1] = v121;
    sub_100004810((uint64_t)v123, &qword_100062958);
    v126 = v236;
    v127 = StateObject.wrappedValue.getter(*(_QWORD *)(v91 + v90[9]), *(_QWORD *)(v91 + v90[9] + 8), *(unsigned __int8 *)(v91 + v90[9] + 16), v236, v97);
    v128 = StateObject.wrappedValue.getter(*v92, v92[1], *((unsigned __int8 *)v92 + 16), v126, v97);
    v129 = swift_getKeyPath(&unk_10004FD18);
    v130 = swift_getKeyPath(&unk_10004FD40);
    static Published.subscript.getter(&v281, v128, v129, v130);
    swift_release(v128);
    swift_release(v129);
    swift_release(v130);
    if ((_BYTE)v281)
      v131 = 2;
    else
      v131 = 1;
    v132 = swift_retain(v127);
    v133 = ObservedObject.init(wrappedValue:)(v132);
    v135 = v134;
    v136 = v243;
    sub_1000047CC((uint64_t)v124, (uint64_t)v243, &qword_100062960);
    swift_release(v127);
    v39 = v278;
    v137 = (uint64_t *)&v136[*(int *)(v278 + 36)];
    *v137 = v133;
    v137[1] = v135;
    v137[2] = v131;
    a1 = v279;
    sub_100004810((uint64_t)v124, &qword_100062960);
    v138 = v246;
    sub_1000047CC((uint64_t)v136, (uint64_t)v246, &qword_100062968);
    sub_100004810((uint64_t)v136, &qword_100062968);
    v139 = swift_getKeyPath(&unk_10004FC10);
    v140 = (uint64_t)v239;
    *v239 = v139;
    v141 = sub_100004380(&qword_100060A48);
    swift_storeEnumTagMultiPayload(v140, v141, 0);
    v142 = v249;
    v143 = (uint64_t)v247;
    sub_10000B460(v140, (uint64_t)&v247[*(int *)(v249 + 36)], type metadata accessor for ColorSchemeAwarePlusBlend);
    sub_100004788((uint64_t)v138, v143, &qword_100062970);
    v144 = sub_100040D70();
    v145 = v245;
    View.widgetAccentable(_:)(1, v142, v144);
    sub_100004810(v143, &qword_100062978);
    v104 = v261;
    v146 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v261 + 32);
    v147 = v244;
    v146(v244, v145, v48);
    v56 = v277;
    v146(v277, v147, v48);
    v103 = 0;
    v3 = v241;
    v4 = v240;
  }
  else
  {
    v103 = 1;
    v104 = v261;
  }
  v148 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v104 + 56);
  v149 = 1;
  v148(v56, v103, 1, v48);
  v268 = (_BYTE *)type metadata accessor for CardDetailView(0);
  v150 = (uint64_t *)(a1 + *((int *)v268 + 10));
  if (v150[1])
  {
    v151 = *v150;
    swift_bridgeObjectRetain(v150[1]);
    v152 = LocalizedStringKey.init(_:)(v151);
    LOWORD(v233) = 256;
    v156 = Text.init(_:tableName:bundle:comment:)(v152, v154, v153 & 1, v155, 0, 0, 0, 0, 0, v233);
    v158 = v157;
    v160 = v159;
    v162 = v161;
    if (qword_100060948 != -1)
      swift_once(&qword_100060948, sub_10003D2CC);
    v163 = Text.fontWeight(_:)(qword_100062798, 0, v156, v158, v160 & 1, v162);
    v165 = v164;
    LODWORD(v261) = v166;
    v267 = v167;
    sub_1000127AC(v156, v158, v160 & 1);
    swift_bridgeObjectRelease(v162);
    v168 = v253;
    sub_1000466B0((uint64_t)v253);
    v169 = v254;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v254, enum case for WidgetFamily.systemSmall(_:), v3);
    v170 = sub_100008DD8((unint64_t *)&qword_1000614C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
    dispatch thunk of RawRepresentable.rawValue.getter(&v281, v3, v170);
    dispatch thunk of RawRepresentable.rawValue.getter(&v280, v3, v170);
    v172 = v280;
    v171 = v281;
    v173 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
    v173(v169, v3);
    v173(v168, v3);
    if (v171 == v172)
    {
      if (qword_100060938 != -1)
        swift_once(&qword_100060938, sub_10003D294);
      v174 = &qword_100062788;
    }
    else
    {
      if (qword_100060940 != -1)
        swift_once(&qword_100060940, sub_10003D2B0);
      v174 = &qword_100062790;
    }
    v177 = *v174;
    swift_retain(*v174);
    if (qword_100060928 != -1)
      swift_once(&qword_100060928, sub_10003B96C);
    v178 = type metadata accessor for ContentSizeCategory(0);
    v179 = sub_1000056A0(v178, (uint64_t)qword_100063388);
    v180 = *(_QWORD *)(v178 - 8);
    v181 = (uint64_t)v273;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v180 + 16))(v273, v179, v178);
    v182 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v180 + 56);
    v182(v181, 0, 1, v178);
    v183 = v270;
    sub_1000047CC(v181, (uint64_t)v270, &qword_1000613F8);
    v184 = swift_getKeyPath(&unk_10004FBB0);
    v185 = (uint64_t)v272;
    *v272 = v184;
    v186 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v185, v186, 0);
    v187 = v271;
    v188 = (_QWORD *)(v185 + *(int *)(v271 + 20));
    *v188 = swift_getKeyPath(&unk_10004FBE0);
    v189 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v188, v189, 0);
    v190 = v185 + *(int *)(v187 + 28);
    v182(v190, 1, 1, v178);
    *(_QWORD *)(v185 + *(int *)(v187 + 24)) = v177;
    swift_retain(v177);
    sub_1000152E0((uint64_t)v183, v190);
    v191 = v274;
    sub_10000B460(v185, (uint64_t)v274, type metadata accessor for DynamicTypeFont);
    v192 = (uint64_t)v257;
    sub_1000043C0((uint64_t)v191, (uint64_t)&v257[*(int *)(v269 + 36)], type metadata accessor for DynamicTypeFont);
    *(_QWORD *)v192 = v163;
    *(_QWORD *)(v192 + 8) = v165;
    v193 = v261;
    LOBYTE(v182) = v261 & 1;
    *(_BYTE *)(v192 + 16) = v261 & 1;
    v194 = v267;
    *(_QWORD *)(v192 + 24) = v267;
    sub_10001265C(v163, v165, v193 & 1);
    swift_bridgeObjectRetain(v194);
    sub_10000A7A8((uint64_t)v191, type metadata accessor for DynamicTypeFont);
    swift_release(v177);
    sub_100004810(v181, &qword_1000613F8);
    sub_1000127AC(v163, v165, (char)v182);
    swift_bridgeObjectRelease(v194);
    v176 = v268;
    v195 = v279;
    v196 = (uint64_t *)(v279 + *((int *)v268 + 11));
    v197 = *v196;
    v198 = v196[1];
    v199 = *((unsigned __int8 *)v196 + 16);
    v200 = type metadata accessor for SingleLineTextObserver.State(0);
    v201 = sub_100008DD8((unint64_t *)&qword_100061BF0, type metadata accessor for SingleLineTextObserver.State, (uint64_t)&unk_10004EBA8);
    v202 = StateObject.wrappedValue.getter(v197, v198, v199, v200, v201);
    v203 = swift_getKeyPath(&unk_10004FD18);
    v204 = swift_getKeyPath(&unk_10004FD40);
    static Published.subscript.getter(&v281, v202, v203, v204);
    swift_release(v202);
    swift_release(v203);
    v205 = swift_release(v204);
    if ((v281 & 1) != 0)
      v206 = INFINITY;
    else
      v206 = *(double *)(v195 + *((int *)v176 + 13));
    v175 = (uint64_t)v264;
    v207 = static Alignment.leading.getter(v205);
    v208 = v255;
    sub_10000FF80(0.0, 1, 0.0, 1, v206, 0, 0.0, 1, (uint64_t)v255, 0.0, 1, 0.0, 1, v207, v209);
    sub_100004810(v192, &qword_100061230);
    v210 = swift_getKeyPath(&unk_10004FD60);
    v211 = v256;
    sub_1000047CC((uint64_t)v208, (uint64_t)v256, &qword_100061238);
    v212 = (uint64_t *)&v211[*(int *)(v275 + 36)];
    *v212 = v210;
    v212[1] = 0xC000000000000000;
    v213 = sub_100004810((uint64_t)v208, &qword_100061238);
    v214 = static Color.primary.getter(v213);
    v215 = swift_getKeyPath(&unk_10004FD90);
    v216 = v260;
    sub_1000047CC((uint64_t)v211, (uint64_t)v260, &qword_100062958);
    v217 = (uint64_t *)&v216[*(int *)(v276 + 36)];
    *v217 = v215;
    v217[1] = v214;
    sub_100004810((uint64_t)v211, &qword_100062958);
    v218 = StateObject.wrappedValue.getter(*v196, v196[1], *((unsigned __int8 *)v196 + 16), v200, v201);
    v219 = swift_retain(v218);
    v220 = ObservedObject.init(wrappedValue:)(v219);
    v222 = v221;
    v223 = v259;
    sub_1000047CC((uint64_t)v216, (uint64_t)v259, &qword_100062960);
    swift_release(v218);
    v39 = v278;
    v224 = (uint64_t *)&v223[*(int *)(v278 + 36)];
    *v224 = v220;
    v224[1] = v222;
    v224[2] = 2;
    sub_100004810((uint64_t)v216, &qword_100062960);
    v225 = v258;
    sub_100004788((uint64_t)v223, (uint64_t)v258, &qword_100062968);
    sub_100004788((uint64_t)v225, v175, &qword_100062968);
    v149 = 0;
    a1 = v279;
    v56 = v277;
  }
  else
  {
    v175 = (uint64_t)v264;
    v176 = v268;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 56))(v175, v149, 1, v39);
  v226 = *(_QWORD *)(a1 + *((int *)v176 + 14) + 16);
  v227 = v262;
  sub_1000047CC((uint64_t)v56, (uint64_t)v262, &qword_100062988);
  v228 = v265;
  sub_1000047CC(v175, (uint64_t)v265, &qword_100062950);
  v229 = v266;
  *v266 = 0;
  *((_BYTE *)v229 + 8) = 0;
  v230 = (int *)sub_100004380(&qword_100062990);
  sub_1000047CC((uint64_t)v227, (uint64_t)v229 + v230[12], &qword_100062988);
  sub_1000047CC((uint64_t)v228, (uint64_t)v229 + v230[16], &qword_100062950);
  v231 = (char *)v229 + v230[20];
  *(_QWORD *)v231 = v226;
  v231[8] = 0;
  sub_100004810(v175, &qword_100062950);
  sub_100004810((uint64_t)v56, &qword_100062988);
  sub_100004810((uint64_t)v228, &qword_100062950);
  return sub_100004810((uint64_t)v227, &qword_100062988);
}

uint64_t sub_10003F074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_100004380(&qword_100062910);
  v4 = __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = static Alignment.topLeading.getter(v4);
  v6[1] = v7;
  v8 = sub_100004380(&qword_100062918);
  sub_10003D55C(v1, (uint64_t)v6 + *(int *)(v8 + 44));
  sub_1000047CC((uint64_t)v6, a1, &qword_100062910);
  *(_WORD *)(a1 + *(int *)(sub_100004380(&qword_100062920) + 36)) = 256;
  return sub_100004810((uint64_t)v6, &qword_100062910);
}

uint64_t type metadata accessor for CardDetailView(uint64_t a1)
{
  return sub_10000A508(a1, qword_1000628B0, (uint64_t)&nominal type descriptor for CardDetailView);
}

_QWORD *initializeBufferWithCopyOfBuffer for CardDetailView.Background(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2 & 0x3FFFFFFFFFFFFFFFLL;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for CardDetailView.Background(_QWORD *a1)
{
  return swift_release(*a1 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t *assignWithCopy for CardDetailView.Background(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2 & 0x3FFFFFFFFFFFFFFFLL;
  v4 = *a1;
  *a1 = *a2;
  v5 = v4 & 0x3FFFFFFFFFFFFFFFLL;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

_QWORD *initializeWithTake for CardDetailView.Background(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *assignWithTake for CardDetailView.Background(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardDetailView.Background(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CardDetailView.Background(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10003F2C8(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_10003F2E4(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_10003F2F4(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for CardDetailView.Background()
{
  return &type metadata for CardDetailView.Background;
}

uint64_t *sub_10003F330(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  __int128 v71;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    v23 = a3[6];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = v24;
      v29 = v26;
      v30 = 1;
    }
    else
    {
      v31 = *v25;
      *v24 = *v25;
      swift_retain(v31);
      v28 = v24;
      v29 = v26;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    v32 = a3[7];
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v37 = v33;
      v38 = v35;
      v39 = 1;
    }
    else
    {
      v40 = *v34;
      *v33 = *v34;
      swift_retain(v40);
      v37 = v33;
      v38 = v35;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
    v41 = a3[8];
    v42 = (uint64_t *)((char *)a1 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
    {
      v45 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
      v46 = v42;
      v47 = v44;
      v48 = 1;
    }
    else
    {
      v49 = v43[1];
      *v42 = *v43;
      v42[1] = v49;
      swift_bridgeObjectRetain(v49);
      v46 = v42;
      v47 = v44;
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v46, v47, v48);
    v50 = a3[9];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    v53 = *(_QWORD *)v52;
    v54 = *((_QWORD *)v52 + 1);
    v55 = v52[16];
    sub_10001E3C0(*(_QWORD *)v52, v54);
    *(_QWORD *)v51 = v53;
    *((_QWORD *)v51 + 1) = v54;
    v51[16] = v55;
    v56 = a3[10];
    v57 = a3[11];
    v58 = (uint64_t *)((char *)a1 + v56);
    v59 = (uint64_t *)((char *)a2 + v56);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = (char *)a1 + v57;
    v62 = *(uint64_t *)((char *)a2 + v57);
    v63 = *(uint64_t *)((char *)a2 + v57 + 8);
    v64 = *((_BYTE *)a2 + v57 + 16);
    swift_bridgeObjectRetain(v60);
    sub_10001E3C0(v62, v63);
    *(_QWORD *)v61 = v62;
    *((_QWORD *)v61 + 1) = v63;
    v61[16] = v64;
    v65 = a3[12];
    v66 = a3[13];
    v67 = *(uint64_t *)((char *)a2 + v65);
    *(uint64_t *)((char *)a1 + v65) = v67;
    v12 = v67 & 0x3FFFFFFFFFFFFFFFLL;
    *(uint64_t *)((char *)a1 + v66) = *(uint64_t *)((char *)a2 + v66);
    v68 = a3[14];
    v69 = (_OWORD *)((char *)a1 + v68);
    v70 = (_OWORD *)((char *)a2 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
  }
  swift_retain(v12);
  return a1;
}

double sub_10003F690(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double result;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + a2[5]);
  v7 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)((char *)a1 + a2[6]);
  v10 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)((char *)a1 + a2[7]);
  v13 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (char *)a1 + a2[8];
  v16 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_bridgeObjectRelease(*((_QWORD *)v15 + 1));
  }
  sub_10001E4D8(*(_QWORD *)((char *)a1 + a2[9]), *(_QWORD *)((char *)a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10] + 8));
  sub_10001E4D8(*(_QWORD *)((char *)a1 + a2[11]), *(_QWORD *)((char *)a1 + a2[11] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[12]) & 0x3FFFFFFFFFFFFFFFLL).n128_u64[0];
  return result;
}

_QWORD *sub_10003F880(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  _OWORD *v68;
  __int128 v69;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *v14;
    *v13 = *v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  v21 = a3[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = v22;
    v27 = v24;
    v28 = 1;
  }
  else
  {
    v29 = *v23;
    *v22 = *v23;
    swift_retain(v29);
    v26 = v22;
    v27 = v24;
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v27, v28);
  v30 = a3[7];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
    v35 = v31;
    v36 = v33;
    v37 = 1;
  }
  else
  {
    v38 = *v32;
    *v31 = *v32;
    swift_retain(v38);
    v35 = v31;
    v36 = v33;
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(v35, v36, v37);
  v39 = a3[8];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
  {
    v43 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
    v44 = v40;
    v45 = v42;
    v46 = 1;
  }
  else
  {
    v47 = v41[1];
    *v40 = *v41;
    v40[1] = v47;
    swift_bridgeObjectRetain(v47);
    v44 = v40;
    v45 = v42;
    v46 = 0;
  }
  swift_storeEnumTagMultiPayload(v44, v45, v46);
  v48 = a3[9];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = *(_QWORD *)v50;
  v52 = *((_QWORD *)v50 + 1);
  v53 = v50[16];
  sub_10001E3C0(*(_QWORD *)v50, v52);
  *(_QWORD *)v49 = v51;
  *((_QWORD *)v49 + 1) = v52;
  v49[16] = v53;
  v54 = a3[10];
  v55 = a3[11];
  v56 = (_QWORD *)((char *)a1 + v54);
  v57 = (_QWORD *)((char *)a2 + v54);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = (char *)a1 + v55;
  v60 = *(_QWORD *)((char *)a2 + v55);
  v61 = *(_QWORD *)((char *)a2 + v55 + 8);
  v62 = *((_BYTE *)a2 + v55 + 16);
  swift_bridgeObjectRetain(v58);
  sub_10001E3C0(v60, v61);
  *(_QWORD *)v59 = v60;
  *((_QWORD *)v59 + 1) = v61;
  v59[16] = v62;
  v63 = a3[12];
  v64 = a3[13];
  v65 = *(_QWORD *)((char *)a2 + v63);
  *(_QWORD *)((char *)a1 + v63) = v65;
  *(_QWORD *)((char *)a1 + v64) = *(_QWORD *)((char *)a2 + v64);
  v66 = a3[14];
  v67 = (_OWORD *)((char *)a1 + v66);
  v68 = (_OWORD *)((char *)a2 + v66);
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  swift_retain(v65 & 0x3FFFFFFFFFFFFFFFLL);
  return a1;
}

uint64_t *sub_10003FBB8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = a3[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_100004810((uint64_t)a1 + v12, &qword_100061110);
    v15 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
    v21 = a3[6];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    sub_100004810((uint64_t)a1 + v21, &qword_100060A48);
    v24 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = v22;
      v27 = v24;
      v28 = 1;
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v26 = v22;
      v27 = v24;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
    v30 = a3[7];
    v31 = (uint64_t *)((char *)a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    sub_100004810((uint64_t)a1 + v30, &qword_100061210);
    v33 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v31;
      v36 = v33;
      v37 = 1;
    }
    else
    {
      v38 = *v32;
      *v31 = *v32;
      swift_retain(v38);
      v35 = v31;
      v36 = v33;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
    v39 = a3[8];
    v40 = (uint64_t *)((char *)a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    sub_10000A7A8((uint64_t)a1 + v39, type metadata accessor for CardDetailView.Heading);
    v42 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
    {
      v43 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
      v44 = v40;
      v45 = v42;
      v46 = 1;
    }
    else
    {
      *v40 = *v41;
      v47 = v41[1];
      v40[1] = v47;
      swift_bridgeObjectRetain(v47);
      v44 = v40;
      v45 = v42;
      v46 = 0;
    }
    swift_storeEnumTagMultiPayload(v44, v45, v46);
  }
  v48 = a3[9];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = *(_QWORD *)v50;
  v52 = *((_QWORD *)v50 + 1);
  v53 = v50[16];
  sub_10001E3C0(*(_QWORD *)v50, v52);
  v54 = *(_QWORD *)v49;
  v55 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v49 = v51;
  *((_QWORD *)v49 + 1) = v52;
  v49[16] = v53;
  sub_10001E4D8(v54, v55);
  v56 = a3[10];
  v57 = (uint64_t *)((char *)a1 + v56);
  v58 = (uint64_t *)((char *)a2 + v56);
  *v57 = *v58;
  v59 = v58[1];
  v60 = v57[1];
  v57[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v60);
  v61 = a3[11];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = *(_QWORD *)v63;
  v65 = *((_QWORD *)v63 + 1);
  v66 = v63[16];
  sub_10001E3C0(*(_QWORD *)v63, v65);
  v67 = *(_QWORD *)v62;
  v68 = *((_QWORD *)v62 + 1);
  *(_QWORD *)v62 = v64;
  *((_QWORD *)v62 + 1) = v65;
  v62[16] = v66;
  sub_10001E4D8(v67, v68);
  v69 = a3[12];
  v70 = *(uint64_t *)((char *)a2 + v69);
  v71 = *(uint64_t *)((char *)a1 + v69);
  *(uint64_t *)((char *)a1 + v69) = v70;
  v72 = v71 & 0x3FFFFFFFFFFFFFFFLL;
  swift_retain(v70 & 0x3FFFFFFFFFFFFFFFLL);
  swift_release(v72);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  v73 = a3[14];
  v74 = (uint64_t *)((char *)a1 + v73);
  v75 = (uint64_t *)((char *)a2 + v73);
  *v74 = *v75;
  v74[1] = v75[1];
  v74[2] = v75[2];
  v74[3] = v75[3];
  return a1;
}

char *sub_10003FFAC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload(v24, v26, 1);
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = a3[9];
  v29 = a3[10];
  v30 = &a1[v28];
  v31 = &a2[v28];
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[16] = v31[16];
  *(_OWORD *)&a1[v29] = *(_OWORD *)&a2[v29];
  v32 = a3[11];
  v33 = a3[12];
  v34 = &a1[v32];
  v35 = &a2[v32];
  v36 = *(_OWORD *)v35;
  v34[16] = v35[16];
  *(_OWORD *)v34 = v36;
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];
  v37 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v40;
  return a1;
}

char *sub_100040290(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100004810((uint64_t)&a1[v8], &qword_100061110);
    v11 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    sub_100004810((uint64_t)&a1[v13], &qword_100060A48);
    v16 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    sub_100004810((uint64_t)&a1[v18], &qword_100061210);
    v21 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v23 = a3[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    sub_10000A7A8((uint64_t)&a1[v23], type metadata accessor for CardDetailView.Heading);
    v26 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload(v24, v26, 1);
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v30[16];
  v32 = *(_QWORD *)v29;
  v33 = *((_QWORD *)v29 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[16] = v31;
  sub_10001E4D8(v32, v33);
  v34 = a3[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  v39 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease(v39);
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = v42[16];
  v44 = *(_QWORD *)v41;
  v45 = *((_QWORD *)v41 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  v41[16] = v43;
  sub_10001E4D8(v44, v45);
  v46 = a3[12];
  v47 = *(_QWORD *)&a1[v46];
  *(_QWORD *)&a1[v46] = *(_QWORD *)&a2[v46];
  swift_release(v47 & 0x3FFFFFFFFFFFFFFFLL);
  v48 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = *((_OWORD *)v50 + 1);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v51;
  return a1;
}

uint64_t sub_100040608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100040614);
}

uint64_t sub_100040614(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  int v19;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061120);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_11:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_100004380(&qword_100060A50);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_11;
  }
  v15 = sub_100004380(&qword_100061ED8);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_11;
  }
  v16 = type metadata accessor for CardDetailView.Heading(0);
  v12 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v16;
    v13 = a3[8];
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(a1 + a3[10] + 8);
  if (v18 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  v19 = v18 - 1;
  if (v19 < 0)
    v19 = -1;
  return (v19 + 1);
}

uint64_t sub_100040748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100040754);
}

uint64_t sub_100040754(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v8 = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_100004380(&qword_100061120);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_11:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_100004380(&qword_100060A50);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_11;
  }
  v17 = sub_100004380(&qword_100061ED8);
  v14 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v17;
    v15 = a4[7];
    goto LABEL_11;
  }
  result = type metadata accessor for CardDetailView.Heading(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_11;
  }
  *(_QWORD *)(a1 + a4[10] + 8) = a2;
  return result;
}

void sub_100040878(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[11];

  sub_10000FD24(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000FD24(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10000FD24(319, (unint64_t *)&qword_100060AC0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10000FD24(319, (unint64_t *)&qword_100062710, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
        if (v9 <= 0x3F)
        {
          v12[3] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for CardDetailView.Heading(319);
          if (v11 <= 0x3F)
          {
            v12[4] = *(_QWORD *)(v10 - 8) + 64;
            v12[5] = &unk_10004FC80;
            v12[6] = &unk_10004FAB8;
            v12[7] = &unk_10004FC80;
            v12[8] = &unk_10004FC98;
            v12[9] = (char *)&value witness table for Builtin.Int64 + 64;
            v12[10] = &unk_10004FCB0;
            swift_initStructMetadata(a1, 256, 11, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_1000409C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050E5C, 1);
}

uint64_t sub_1000409D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_100040A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19)
{
  if ((a19 & 1) != 0)
    swift_retain(a1);
  else
    sub_100040A48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
}

void sub_100040A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if ((a18 & 1) != 0)
    swift_retain(a1);
  else
    sub_100040A84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
}

uint64_t sub_100040A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0)
    return swift_retain(a1);
  swift_retain(a5);
  return swift_bridgeObjectRetain(a7);
}

uint64_t sub_100040AC0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  int v4;

  BYTE2(v4) = *(_BYTE *)(a1 + 130);
  LOWORD(v4) = *(_WORD *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

void sub_100040B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19)
{
  if ((a19 & 1) != 0)
    swift_release(a1);
  else
    sub_100040B6C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
}

void sub_100040B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if ((a18 & 1) != 0)
    swift_release(a1);
  else
    sub_100040BA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
}

uint64_t sub_100040BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0)
    return swift_release(a1);
  swift_release(a5);
  return swift_bridgeObjectRelease(a7);
}

uint64_t sub_100040BEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100040C14(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_100040C3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100040C64(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

void sub_100040C88(double *a1@<X8>)
{
  *a1 = EnvironmentValues.lineSpacing.getter();
}

void sub_100040CB0(double *a1@<X8>)
{
  *a1 = EnvironmentValues.lineSpacing.getter();
}

uint64_t sub_100040CD8(double *a1)
{
  return EnvironmentValues.lineSpacing.setter(*a1);
}

uint64_t sub_100040CFC(double *a1)
{
  return EnvironmentValues.lineSpacing.setter(*a1);
}

uint64_t sub_100040D20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100040D48(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_100040D70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062998;
  if (!qword_100062998)
  {
    v1 = sub_1000044A8(&qword_100062978);
    sub_100040DF4();
    sub_100008DD8(&qword_1000629D0, type metadata accessor for ColorSchemeAwarePlusBlend, (uint64_t)&unk_10005029C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062998);
  }
  return result;
}

unint64_t sub_100040DF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629A0;
  if (!qword_1000629A0)
  {
    v1 = sub_1000044A8(&qword_100062970);
    sub_100040E60();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629A0);
  }
  return result;
}

unint64_t sub_100040E60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629A8;
  if (!qword_1000629A8)
  {
    v1 = sub_1000044A8(&qword_100062968);
    sub_100040ECC();
    sub_100041040();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629A8);
  }
  return result;
}

unint64_t sub_100040ECC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629B0;
  if (!qword_1000629B0)
  {
    v1 = sub_1000044A8(&qword_100062960);
    sub_100040F50();
    sub_10000B4D0(&qword_1000613A8, &qword_1000613B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629B0);
  }
  return result;
}

unint64_t sub_100040F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629B8;
  if (!qword_1000629B8)
  {
    v1 = sub_1000044A8(&qword_100062958);
    sub_100040FD4();
    sub_10000B4D0(&qword_1000614B8, &qword_1000614C0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629B8);
  }
  return result;
}

unint64_t sub_100040FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629C0;
  if (!qword_1000629C0)
  {
    v1 = sub_1000044A8(&qword_100061238);
    sub_100014E34();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629C0);
  }
  return result;
}

unint64_t sub_100041040()
{
  unint64_t result;

  result = qword_1000629C8;
  if (!qword_1000629C8)
  {
    result = swift_getWitnessTable(&unk_10004EC28, &type metadata for SingleLineTextObserver);
    atomic_store(result, (unint64_t *)&qword_1000629C8);
  }
  return result;
}

uint64_t sub_100041084(uint64_t result)
{
  *(_BYTE *)(result + 130) = 1;
  return result;
}

unint64_t sub_100041090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629E8;
  if (!qword_1000629E8)
  {
    v1 = sub_1000044A8(&qword_1000629E0);
    sub_1000410FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629E8);
  }
  return result;
}

unint64_t sub_1000410FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000629F0;
  if (!qword_1000629F0)
  {
    v1 = sub_1000044A8(&qword_1000629F8);
    sub_100041168();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000629F0);
  }
  return result;
}

unint64_t sub_100041168()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062A00;
  if (!qword_100062A00)
  {
    v1 = sub_1000044A8(&qword_100062A08);
    sub_1000411D4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062A00);
  }
  return result;
}

unint64_t sub_1000411D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062A10;
  if (!qword_100062A10)
  {
    v1 = sub_1000044A8(&qword_100062A18);
    sub_100041240();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062A10);
  }
  return result;
}

unint64_t sub_100041240()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062A20;
  if (!qword_100062A20)
  {
    v1 = sub_1000044A8(&qword_100062A28);
    sub_10000B4D0(&qword_100062A30, &qword_100062A38, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10000B4D0(&qword_100062A40, &qword_100062A48, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062A20);
  }
  return result;
}

uint64_t sub_1000412DC(uint64_t result)
{
  *(_BYTE *)(result + 129) = 1;
  return result;
}

uint64_t sub_1000412E8(uint64_t result)
{
  *(_BYTE *)(result + 130) = 0;
  return result;
}

uint64_t sub_1000412F0(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_1000412FC(uint64_t result)
{
  *(_BYTE *)(result + 129) = 0;
  return result;
}

uint64_t sub_100041304(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_100041368(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_WORD *)(a1 + 128));
  return a1;
}

uint64_t sub_1000413D4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for ContentSizeCategory(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 3));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 5));
  swift_release(*((_QWORD *)v0 + 6));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_release(*(_QWORD *)&v0[v6] & 0x3FFFFFFFFFFFFFFFLL);
  swift_release(*(_QWORD *)&v0[v7]);
  swift_release(*(_QWORD *)&v0[v8]);
  return swift_deallocObject(v0, ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1000414B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(type metadata accessor for ContentSizeCategory(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_10003C6F4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), v2 + v6, *(_QWORD *)(v2 + v7), a2, *(double *)(v2 + v9), *(double *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v2+ ((((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100041570(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_100041578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_1000415B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000415D8(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1000415FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16) & 0x3FFFFFFFFFFFFFFFLL);
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

double sub_1000416A0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for GeometryProxy(0);
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10003CF9C(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + v4), a1, *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFF8)));
}

double sub_100041714@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  double result;
  __int128 v47;
  _OWORD v48[2];
  uint64_t v49;

  v10 = sub_100004380(&qword_100062A88);
  v11 = swift_allocObject(v10, 96, 7);
  v12.n128_u64[1] = 8;
  *(_OWORD *)(v11 + 16) = xmmword_10004FA90;
  v12.n128_u64[0] = 0;
  v13 = Color.opacity(_:)(a1, v12);
  GeometryProxy.size.getter(v13);
  v15 = v14;
  GeometryProxy.size.getter(v16);
  *(_QWORD *)(v11 + 32) = Gradient.Stop.init(color:location:)(v13, v15 / (v17 + a5));
  *(_QWORD *)(v11 + 40) = v18;
  v19.n128_f64[0] = a4;
  v20 = Color.opacity(_:)(a1, v19);
  v21 = GeometryProxy.frame(in:)(a2);
  v23 = v22;
  GeometryProxy.size.getter(v21);
  v25 = v23 + v24 + a5;
  GeometryProxy.size.getter(v26);
  *(_QWORD *)(v11 + 48) = Gradient.Stop.init(color:location:)(v20, v25 / (v27 + a5));
  *(_QWORD *)(v11 + 56) = v28;
  v29.n128_f64[0] = a4;
  v30 = Color.opacity(_:)(a1, v29);
  v31 = GeometryProxy.frame(in:)(a2);
  v33 = v32;
  GeometryProxy.size.getter(v31);
  v35 = v33 + v34 + a5;
  GeometryProxy.size.getter(v36);
  *(_QWORD *)(v11 + 64) = Gradient.Stop.init(color:location:)(v30, v35 / (v37 + a5));
  *(_QWORD *)(v11 + 72) = v38;
  v39.n128_f64[0] = a4;
  v40 = Color.opacity(_:)(a1, v39);
  *(_QWORD *)(v11 + 80) = Gradient.Stop.init(color:location:)(v40, 1.0);
  *(_QWORD *)(v11 + 88) = v41;
  v42 = static UnitPoint.zero.getter();
  v44 = v43;
  v45 = Gradient.init(stops:)(v11);
  LinearGradient.init(gradient:startPoint:endPoint:)(v48, v45, v42, v44, 0.0, 1.0);
  result = *(double *)v48;
  v47 = v48[1];
  *(_OWORD *)a3 = v48[0];
  *(_OWORD *)(a3 + 16) = v47;
  *(_QWORD *)(a3 + 32) = v49;
  return result;
}

unint64_t sub_1000418D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062A90;
  if (!qword_100062A90)
  {
    v1 = sub_1000044A8(&qword_100062920);
    sub_10000B4D0(&qword_100062A98, &qword_100062910, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062A90);
  }
  return result;
}

id sub_10004195C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC24AppStoreWidgetsExtension19WidgetArtworkLoader____lazy_storage___session;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC24AppStoreWidgetsExtension19WidgetArtworkLoader____lazy_storage___session);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC24AppStoreWidgetsExtension19WidgetArtworkLoader____lazy_storage___session);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "defaultSessionConfiguration");
    objc_msgSend(v4, "setTimeoutIntervalForResource:", 5.0);
    v5 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_100041A1C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSURL *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  id v39;
  void *v40;
  id v41;
  void *v43;
  id v44;
  uint64_t (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v7 = sub_100004380(&qword_100061D18);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v10);
  v14 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v43 - v15;
  v17 = Artwork.config(using:)(a2, a3);
  dispatch thunk of ArtworkLoaderConfig.url.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100004810((uint64_t)v9, &qword_100061D18);
    sub_100004380(&qword_100062BC0);
    v18 = Promise.__allocating_init()();
    v19 = sub_1000427E0();
    v20 = swift_allocError(&type metadata for WidgetArtworkLoader.ArtworkFetchError, v19, 0, 0);
    Promise.reject(_:)(v20);
    swift_errorRelease(v20);
    v21 = v17;
  }
  else
  {
    v46 = a1;
    v47 = v17;
    v45 = *(uint64_t (**)(char *, char *, uint64_t))(v11 + 32);
    v22 = v45(v16, v9, v10);
    v23 = *(void **)(v3 + OBJC_IVAR____TtC24AppStoreWidgetsExtension19WidgetArtworkLoader_cache);
    __chkstk_darwin(v22);
    *(&v43 - 2) = v23;
    *(&v43 - 1) = v16;
    v24 = sub_100004380((uint64_t *)&unk_100062BD0);
    OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_1000440FC, &v43 - 4, v24);
    v18 = aBlock[0];
    if (!aBlock[0])
    {
      sub_100004380(&qword_100062BC0);
      v18 = Promise.__allocating_init()();
      v25 = swift_retain(v18);
      sub_100042350(v25, (uint64_t)v16);
      swift_release(v18);
      v44 = sub_10004195C();
      URL._bridgeToObjectiveC()(v26);
      v43 = v27;
      v28 = swift_allocObject(&unk_10005EF60, 24, 7);
      swift_unknownObjectWeakInit(v28 + 16, v3);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
      v29 = *(unsigned __int8 *)(v11 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = (v12 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
      v33 = swift_allocObject(&unk_10005EF88, v32 + 8, v29 | 7);
      *(_QWORD *)(v33 + 16) = v47;
      *(_QWORD *)(v33 + 24) = v28;
      v45((char *)(v33 + v30), v14, v10);
      *(_QWORD *)(v33 + v31) = v18;
      v34 = v46;
      *(_QWORD *)(v33 + v32) = v46;
      aBlock[4] = sub_1000441F4;
      v49 = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000420A4;
      aBlock[3] = &unk_10005EFA0;
      v35 = _Block_copy(aBlock);
      v36 = v49;
      swift_retain(v18);
      v37 = v47;
      swift_retain(v47);
      swift_retain(v34);
      *(_QWORD *)&v38 = swift_release(v36).n128_u64[0];
      v40 = v43;
      v39 = v44;
      v41 = objc_msgSend(v44, "dataTaskWithURL:completionHandler:", v43, v35, v38);
      _Block_release(v35);

      objc_msgSend(v41, "resume");
      swift_release(v37);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      return v18;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v21 = v47;
  }
  swift_release(v21);
  return v18;
}

void sub_100041DF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  id v21;
  Class isa;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t Strong;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v37 = a7;
  v38 = a8;
  v36 = sub_100004380(&qword_100060BC8);
  __chkstk_darwin(v36);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Style(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a6 + 16;
  if (a2 >> 60 != 15)
  {
    v19 = sub_1000442FC(a1, a2);
    v20 = ArtworkLoaderConfig.scale.getter(v19);
    v21 = objc_allocWithZone((Class)UIImage);
    v35 = a1;
    isa = Data._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v21, "initWithData:scale:", isa, v20);

    if (v23)
    {
      if (!a4)
      {
        Artwork.style.getter();
        v29 = *(int *)(v36 + 48);
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v17, v14);
        *(_QWORD *)&v13[v29] = v23;
        v30 = v23;
        Promise.resolve(_:)(v13);
        sub_100004810((uint64_t)v13, &qword_100060BC8);
        swift_beginAccess(v18, v39, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v18);
        if (Strong)
        {
          v32 = (void *)Strong;
          v33 = *(_QWORD *)(Strong + OBJC_IVAR____TtC24AppStoreWidgetsExtension19WidgetArtworkLoader_cache);
          swift_retain(v33);

          sub_100042350(0, v37);
          sub_1000442A4(v35, a2);
          swift_release(v33);
        }
        else
        {
          sub_1000442A4(v35, a2);
        }

        return;
      }

    }
    sub_1000442A4(v35, a2);
  }
  swift_beginAccess(v18, v39, 0, 0);
  v24 = swift_unknownObjectWeakLoadStrong(v18);
  if (v24)
  {
    v25 = (void *)v24;
    v26 = *(_QWORD *)(v24 + OBJC_IVAR____TtC24AppStoreWidgetsExtension19WidgetArtworkLoader_cache);
    swift_retain(v26);

    sub_100042350(0, v37);
    swift_release(v26);
  }
  if (a4)
  {
    v27 = a4;
  }
  else
  {
    v28 = sub_1000427E0();
    v27 = swift_allocError(&type metadata for WidgetArtworkLoader.ArtworkFetchError, v28, 0, 0);
  }
  swift_errorRetain(a4);
  Promise.reject(_:)(v27);
  swift_errorRelease(v27);
}

double sub_1000420A4(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  uint64_t v7;
  void (*v8)(void *, unint64_t, void *, void *);
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  double result;

  v6 = a2;
  v8 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v7);
    v9 = v6;
    v6 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v11 = v10;

  }
  else
  {
    swift_retain(v7);
    v11 = 0xF000000000000000;
  }
  v12 = a3;
  v13 = a4;
  v8(v6, v11, a3, a4);

  sub_1000442A4((uint64_t)v6, v11);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

id sub_1000421DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetArtworkLoader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WidgetArtworkLoader()
{
  return objc_opt_self(_TtC24AppStoreWidgetsExtension19WidgetArtworkLoader);
}

uint64_t sub_100042268(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 104);
}

uint64_t sub_1000422B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE v9[24];

  swift_beginAccess(a1 + 24, v9, 0, 0);
  v4 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  swift_bridgeObjectRetain(v4);
  v5 = sub_100042A24(a2);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_retain(v7);
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease(v4);
  return v7;
}

double sub_100042350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double result;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;
  uint64_t v39;

  v31 = a2;
  v32 = a1;
  v3 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  __chkstk_darwin(v3);
  v34 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v2 + 16);
  v13 = sub_100004380((uint64_t *)&unk_100062BE0);
  v14 = swift_allocObject(v13, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_10004DFA0;
  static DispatchWorkItemFlags.barrier.getter();
  aBlock[0] = v14;
  v15 = sub_100008DD8((unint64_t *)&qword_100060BB8, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100004380((uint64_t *)&unk_100062BF0);
  v17 = sub_100044480((unint64_t *)&qword_100060BC0, (uint64_t *)&unk_100062BF0);
  v30 = v9;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v9, v15);
  v18 = swift_allocObject(&unk_10005EFD8, 24, 7);
  swift_weakInit(v18 + 16, v29[1]);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v31, v5);
  v19 = v32;
  v39 = v32;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + 24) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_10005F000, v22 + 8, v20 | 7);
  *(_QWORD *)(v23 + 16) = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v23 + v21, v8, v5);
  sub_1000443F4((uint64_t)&v39, v23 + v22);
  aBlock[4] = sub_10004443C;
  v38 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100007D48;
  aBlock[3] = &unk_10005F018;
  v24 = _Block_copy(aBlock);
  swift_retain(v19);
  v25 = swift_retain(v18);
  v26 = v34;
  static DispatchQoS.unspecified.getter(v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v26, v12, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  v27 = v38;
  swift_release(v18);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

double sub_100042644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v21, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v12 = Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    v13 = (_QWORD *)(v12 + 24);
    swift_beginAccess(v12 + 24, v20, 33, 0);
    if (a3)
    {
      swift_retain(a3);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v13);
      v19 = *v13;
      *v13 = 0x8000000000000000;
      sub_10004379C(a3, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
      v15 = *v13;
      *v13 = v19;
      swift_bridgeObjectRelease(v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      v17 = sub_100042AF4((uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v16 = swift_release(v17);
    }
    swift_endAccess(v20, v16);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000427A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for WidgetArtworkCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000444C0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetArtworkCache);
}

unint64_t sub_1000427E0()
{
  unint64_t result;

  result = qword_100062BC8;
  if (!qword_100062BC8)
  {
    result = swift_getWitnessTable(&unk_10004FF3C, &type metadata for WidgetArtworkLoader.ArtworkFetchError);
    atomic_store(result, (unint64_t *)&qword_100062BC8);
  }
  return result;
}

uint64_t sub_100042824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008218();
  static DispatchQoS.userInitiated.getter(v20);
  v14 = sub_100004380(&qword_100062C28);
  v15 = swift_allocObject(v14, ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72), *(unsigned __int8 *)(v8 + 80) | 7);
  *(_OWORD *)(v15 + 16) = xmmword_10004DFA0;
  static OS_dispatch_queue.Attributes.concurrent.getter();
  v21 = v15;
  v16 = sub_100008DD8(&qword_100062C30, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = sub_100004380(&qword_100062C38);
  v18 = sub_100044480(&qword_100062C40, &qword_100062C38);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v17, v18, v7, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ELL, 0x800000010005A4E0, v13, v10, v6, 0);
  *(_QWORD *)(v1 + 24) = &_swiftEmptyDictionarySingleton;
  return v1;
}

unint64_t sub_100042A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for URL(0);
  v6 = sub_100008DD8(&qword_100062C08, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_100043B04(a1, v7);
}

unint64_t sub_100042A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100043C44(a1, a2, v5);
}

uint64_t sub_100042AF4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100042A24(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100043D24();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for URL(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, v10);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_100043328(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100042BCC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100042A90(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100043F48();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_1000435C8(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

void sub_100042C98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t i;
  int v45;

  v3 = v2;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100004380(&qword_100062C00);
  v45 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v43 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v41 = v2;
  v42 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  swift_retain(v10);
  v18 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_43;
    if (v18 >= v42)
      break;
    v23 = v43;
    v24 = v43[v18];
    if (!v24)
    {
      v25 = v18 + 1;
      if (v18 + 1 >= v42)
      {
LABEL_34:
        swift_release(v10);
        v3 = v41;
        if ((v45 & 1) == 0)
          goto LABEL_41;
        goto LABEL_37;
      }
      v24 = v43[v25];
      if (!v24)
      {
        while (1)
        {
          v18 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v18 >= v42)
            goto LABEL_34;
          v24 = v43[v18];
          ++v25;
          if (v24)
            goto LABEL_21;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      ++v18;
    }
LABEL_21:
    v16 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v7 + 72);
    v27 = *(_QWORD *)(v10 + 48) + v26 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v9, v27, v6);
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v27, v6);
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21);
      swift_retain(v28);
    }
    v29 = *(_QWORD *)(v12 + 40);
    v30 = sub_100008DD8(&qword_100062C08, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v6, v30);
    v32 = -1 << *(_BYTE *)(v12 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v26 * v19, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v41;
  v23 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v10 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  swift_release(v10);
  *v3 = v12;
}

void sub_100043014(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100004380((uint64_t *)&unk_100062C50);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_retain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

unint64_t sub_100043328(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v37 = (result + 1) & v11;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v36(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100008DD8(&qword_100062C08, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            result = v24 + v15 * a1;
            v25 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v25 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v25, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_QWORD *)(v26 + 8 * a1);
            v28 = (_QWORD *)(v26 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v27 >= v28 + 1))
            {
              *v27 = *v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000435C8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10004379C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100042A24(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = *(_QWORD *)(v21 + 8 * v14);
        *(_QWORD *)(v21 + 8 * v14) = a1;
        swift_release(v22);
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_100043D24();
      goto LABEL_7;
    }
    sub_100042C98(v17, a3 & 1);
    v23 = sub_100042A24(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      sub_100043A6C(v14, (uint64_t)v11, a1, v20);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
}

void sub_100043910(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100042A90(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100043F48();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_release(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100043014(v15, a4 & 1);
  v20 = sub_100042A90(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_100043A6C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_100043B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = a1;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_100008DD8(&qword_100062C10, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v18, v5, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v15 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_100043C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

void sub_100043D24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004380(&qword_100062C00);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_26:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_28;
    if (v12 >= v27)
    {
LABEL_24:
      swift_release(v6);
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v12);
    if (!v22)
      break;
LABEL_23:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    swift_retain(v20);
  }
  v23 = v12 + 1;
  if (v12 + 1 >= v27)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_100043F48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100004380((uint64_t *)&unk_100062C50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_retain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1000440FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1000422B8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_100044128()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004414C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1000441F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_100041DF0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10004428C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004429C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000442A4(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000442B8(result, a2);
  return result;
}

uint64_t sub_1000442B8(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000442FC(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100044340()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100044364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1000443F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380((uint64_t *)&unk_100062BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_10004443C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100042644(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100044480(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1000044A8(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000444C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t storeEnumTagSinglePayload for WidgetArtworkLoader.ArtworkFetchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10004452C + 4 * byte_10004FE20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10004454C + 4 * byte_10004FE25[v4]))();
}

_BYTE *sub_10004452C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10004454C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100044554(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10004455C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100044564(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10004456C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetArtworkLoader.ArtworkFetchError()
{
  return &type metadata for WidgetArtworkLoader.ArtworkFetchError;
}

unint64_t sub_10004458C()
{
  unint64_t result;

  result = qword_100062C48;
  if (!qword_100062C48)
  {
    result = swift_getWitnessTable(&unk_10004FF14, &type metadata for WidgetArtworkLoader.ArtworkFetchError);
    atomic_store(result, (unint64_t *)&qword_100062C48);
  }
  return result;
}

void sub_1000445D8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = *a1;
  sub_100004380(&qword_100062CC8);
  v4 = Promise.__allocating_init()();
  v5 = TodayWidgetCardCollectionTemplate.cards.getter();
  v6 = sub_100044D7C(v5, (uint64_t (*)(unint64_t, uint64_t))sub_100044D74);
  swift_bridgeObjectRelease(v5);
  v7 = swift_allocObject(&unk_10005F140, 32, 7);
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  sub_100008218();
  swift_retain(v4);
  swift_retain(v3);
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  v10 = type metadata accessor for WidgetTodayCard(0);
  resolveAll<A>(futures:publisherQueue:andThen:)(v6, v9, sub_100044F08, v7, v10);
  swift_bridgeObjectRelease(v6);
  swift_release(v7);

  *a2 = v4;
}

uint64_t sub_1000446F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  char v63[8];
  _QWORD v64[5];

  v53 = a4;
  v61 = type metadata accessor for TodayWidgetCardCollection(0);
  v7 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v54 = (uint64_t)&v47 - v10;
  v11 = sub_100004380(&qword_100062028);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v59 = (uint64_t)&v47 - v16;
  v51 = type metadata accessor for TodayWidgetContainer(0);
  __chkstk_darwin(v51);
  v52 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for OSLogger(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a2 + 16);
  v55 = v7;
  v58 = v23;
  if (v23)
  {
    v47 = v12;
    v48 = v14;
    v49 = a1;
    v50 = a3;
    swift_bridgeObjectRetain(a2);
    v24 = 0;
    v57 = xmmword_10004E5E0;
    v56 = 0x800000010005A500;
    do
    {
      v25 = *(_QWORD *)(a2 + 8 * v24 + 32);
      swift_errorRetain(v25);
      if (qword_100060850 != -1)
        swift_once(&qword_100060850, sub_10000555C);
      ++v24;
      v26 = sub_1000056A0(v18, (uint64_t)qword_100063238);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v26, v18);
      v27 = sub_100004380(&qword_100060BA0);
      v28 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ 2 * *(_QWORD *)(v28 + 72), *(unsigned __int8 *)(v28 + 80) | 7);
      *(_OWORD *)(v29 + 16) = v57;
      LogMessage.init(stringLiteral:)(0xD000000000000023, v56);
      swift_getErrorValue(v25, v63, v62);
      v30 = Error.localizedDescription.getter(v62[1], v62[2]);
      v64[3] = &type metadata for String;
      v64[0] = v30;
      v64[1] = v31;
      static LogMessage.safe(_:)(v64);
      sub_100004810((uint64_t)v64, &qword_100060BA8);
      Logger.error(_:)(v29, v18, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(v25);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    }
    while (v58 != v24);
    swift_bridgeObjectRelease(a2);
    v32 = v49;
    v33 = *(_QWORD *)(v49 + 16);
    v7 = v55;
    v14 = v48;
    v12 = v47;
    if (!v33)
    {
      v34 = type metadata accessor for ResolveAllError(0);
      v35 = sub_100044D2C();
      v36 = swift_allocError(v34, v35, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v37, enum case for ResolveAllError.noValuesAndErrors(_:), v34);
      Promise.reject(_:)(v36);
      return swift_errorRelease(v36);
    }
    goto LABEL_9;
  }
  v33 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  if (v33)
  {
LABEL_9:
    v39 = v32 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v40 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain(v32);
    v41 = _swiftEmptyArrayStorage;
    do
    {
      v42 = v59;
      sub_10002E198(v39, v59);
      sub_100044C64(v42, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v61) == 1)
      {
        sub_100004810((uint64_t)v14, &qword_100062028);
      }
      else
      {
        v43 = v54;
        sub_100044CE8((uint64_t)v14, v54);
        sub_100044CE8(v43, v60);
        if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
          v41 = (_QWORD *)sub_100032FF4(0, v41[2] + 1, 1, v41);
        v45 = v41[2];
        v44 = v41[3];
        if (v45 >= v44 >> 1)
          v41 = (_QWORD *)sub_100032FF4(v44 > 1, v45 + 1, 1, v41);
        v41[2] = v45 + 1;
        v7 = v55;
        sub_100044CE8(v60, (uint64_t)v41+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v55 + 72) * v45);
      }
      v39 += v40;
      --v33;
    }
    while (v33);
    v20 = swift_bridgeObjectRelease(v32);
    goto LABEL_19;
  }
  v41 = _swiftEmptyArrayStorage;
LABEL_19:
  v46 = v52;
  TodayWidgetContainerTemplate.refreshDate.getter(v20);
  *v46 = v41;
  Promise.resolve(_:)(v46);
  return sub_100044CAC((uint64_t)v46);
}

uint64_t type metadata accessor for TodayWidgetContainer(uint64_t a1)
{
  uint64_t result;

  result = qword_100062D28;
  if (!qword_100062D28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetContainer);
  return result;
}

uint64_t sub_100044C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100062028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100044CAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TodayWidgetContainer(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100044CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TodayWidgetCardCollection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100044D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062CC0;
  if (!qword_100062CC0)
  {
    v1 = type metadata accessor for ResolveAllError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ResolveAllError, v1);
    atomic_store(result, (unint64_t *)&qword_100062CC0);
  }
  return result;
}

uint64_t sub_100044D74(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_100046F18(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

_QWORD *sub_100044D7C(uint64_t a1, uint64_t (*a2)(unint64_t, uint64_t))
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  specialized ContiguousArray.reserveCapacity(_:)(0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    v4 = 0;
    while ((a1 & 0xC000000000000001) != 0)
    {
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      v6 = v4 + 1;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_7:
      v7 = a2(v4, v5);
      v8 = swift_release(v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
      ++v4;
      if (v6 == v3)
        goto LABEL_17;
    }
    if (v4 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
    v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
    swift_retain(v5);
    v6 = v4 + 1;
    if (!__OFADD__(v4, 1))
      goto LABEL_7;
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v11);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100044EDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100044F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100046F2C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t *sub_100044F10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Date(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100044FA8(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100044FF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_100045060(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *sub_1000450D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100045130(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10004519C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000451A8);
}

uint64_t sub_1000451A8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100045224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100045230);
}

char *sub_100045230(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000452A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_10004531C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    sub_100017908(*v16, v18, v19, v20);
    *v15 = v17;
    v15[1] = v18;
    v15[2] = v19;
    v15[3] = v20;
  }
  return a1;
}

uint64_t sub_100045420(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  return sub_100017984(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *(_QWORD *)((char *)a1 + *(int *)(a2 + 20) + 8), *(_QWORD *)((char *)a1 + *(int *)(a2 + 20) + 16), *(_QWORD *)((char *)a1 + *(int *)(a2 + 20) + 24));
}

uint64_t *sub_100045498(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  v17 = v14[2];
  v18 = v14[3];
  sub_100017908(*v14, v16, v17, v18);
  *v13 = v15;
  v13[1] = v16;
  v13[2] = v17;
  v13[3] = v18;
  return a1;
}

uint64_t *sub_100045570(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  v17 = v14[2];
  v18 = v14[3];
  sub_100017908(*v14, v16, v17, v18);
  v19 = *v13;
  v20 = v13[1];
  v21 = v13[2];
  v22 = v13[3];
  *v13 = v15;
  v13[1] = v16;
  v13[2] = v17;
  v13[3] = v18;
  sub_100017984(v19, v20, v21, v22);
  return a1;
}

char *sub_10004566C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  return a1;
}

char *sub_10004571C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)&a1[v8];
  v10 = &a2[v8];
  v11 = *v9;
  v12 = v9[1];
  v13 = v9[2];
  v14 = v9[3];
  v15 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v15;
  sub_100017984(v11, v12, v13, v14);
  return a1;
}

uint64_t sub_1000457F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000457FC);
}

uint64_t sub_1000457FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((*(_QWORD *)(a1 + *(int *)(a3 + 20) + 16) >> 1) > 0x80000000)
    return -(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 16) >> 1);
  return 0;
}

uint64_t sub_100045880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004588C);
}

uint64_t sub_10004588C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = 0;
  v10[2] = 2 * -(int)a2;
  v10[3] = 0;
  return result;
}

uint64_t type metadata accessor for TodayWidgetEntryView(uint64_t a1)
{
  uint64_t result;

  result = qword_100062DB8;
  if (!qword_100062DB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetEntryView);
  return result;
}

void sub_100045950(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_10001EE38(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = " ";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1000459C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100050FE8, 1);
}

uint64_t sub_1000459D0()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_1000459F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentSizeCategory(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.sizeCategory.setter(v4);
}

uint64_t sub_100045A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v115 = a1;
  v2 = sub_100004380(&qword_100061128);
  __chkstk_darwin(v2);
  v106 = (uint64_t *)((char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v113 = type metadata accessor for TodayWidgetFallbackEntryView(0);
  __chkstk_darwin(v113);
  v107 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100004380(&qword_100062DF0);
  __chkstk_darwin(v116);
  v114 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for TodayWidgetSmallMediumEntryView(0);
  __chkstk_darwin(v112);
  v101 = (uint64_t *)((char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v102 = (uint64_t)&v98 - v8;
  v108 = sub_100004380(&qword_100062DF8);
  __chkstk_darwin(v108);
  v111 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004380(&qword_100061D20);
  __chkstk_darwin(v10);
  v100 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v104 = (uint64_t)&v98 - v13;
  v109 = type metadata accessor for TodayWidgetLargeEntryView(0);
  __chkstk_darwin(v109);
  v103 = (uint64_t *)((char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v105 = (uint64_t)&v98 - v16;
  v17 = type metadata accessor for WidgetFamily(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v98 - v22;
  v24 = sub_100004380(&qword_100062E00);
  __chkstk_darwin(v24);
  v110 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TodayWidgetEntryView(0) + 20));
  v28 = *v26;
  v27 = v26[1];
  v29 = v26[2];
  v30 = v26[3];
  if (v29 < 0)
  {
    KeyPath = swift_getKeyPath(&unk_100050060);
    v55 = v106;
    *v106 = KeyPath;
    v56 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v55, v56, 0);
    v57 = swift_getKeyPath(&unk_100050090);
    v58 = v113;
    v59 = v107;
    v60 = (uint64_t *)(v107 + *(int *)(v113 + 20));
    *v60 = v57;
    v61 = sub_100004380(&qword_100061110);
    swift_storeEnumTagMultiPayload(v60, v61, 0);
    sub_100004788((uint64_t)v55, v59, &qword_100061128);
    v62 = v59 + *(int *)(v58 + 24);
    *(_QWORD *)v62 = v28;
    *(_QWORD *)(v62 + 8) = v27;
    *(_BYTE *)(v62 + 16) = v29 & 1;
    *(_QWORD *)(v62 + 24) = v30;
    v63 = v114;
    sub_1000043C0(v59, v114, type metadata accessor for TodayWidgetFallbackEntryView);
    swift_storeEnumTagMultiPayload(v63, v116, 1);
    v64 = sub_100046734();
    v65 = sub_100008DD8(&qword_100062E18, type metadata accessor for TodayWidgetFallbackEntryView, (uint64_t)&unk_10004E8E8);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v30);
    _ConditionalContent<>.init(storage:)(v63, v24, v58, v64, v65);
    return sub_10000A7A8(v59, type metadata accessor for TodayWidgetFallbackEntryView);
  }
  v106 = (uint64_t *)v26[3];
  v107 = v29;
  v99 = v27;
  v31 = v24;
  v32 = v116;
  swift_bridgeObjectRetain(v28);
  sub_1000464A8(&qword_100061118, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, (char *)0x6146746567646957, (char *)0xEC000000796C696DLL, (uint64_t)v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for WidgetFamily.systemLarge(_:), v17);
  v33 = sub_100008DD8((unint64_t *)&qword_1000614C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  dispatch thunk of RawRepresentable.rawValue.getter(&v118, v17, v33);
  dispatch thunk of RawRepresentable.rawValue.getter(&v117, v17, v33);
  v35 = v117;
  v34 = v118;
  v36 = *(void (**)(char *, uint64_t))(v18 + 8);
  v36(v20, v17);
  v36(v23, v17);
  v37 = *(_QWORD *)(v28 + 16);
  v38 = v28;
  if (v34 != v35)
  {
    v67 = v28;
    v68 = type metadata accessor for WidgetTodayCard(0);
    v69 = *(_QWORD *)(v68 - 8);
    v39 = v32;
    v70 = v31;
    v40 = (uint64_t)v110;
    v71 = v106;
    v72 = v99;
    if (v37)
    {
      v73 = v67;
      v74 = v100;
      sub_1000043C0(v67 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80)), v100, type metadata accessor for WidgetTodayCard);
      v75 = 0;
    }
    else
    {
      v75 = 1;
      v73 = v67;
      v74 = v100;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v74, v75, 1, v68);
    sub_100017984(v73, v72, v107, (uint64_t)v71);
    v76 = swift_getKeyPath(&unk_100050060);
    v77 = (uint64_t)v101;
    *v101 = v76;
    v78 = sub_100004380(&qword_100061118);
    swift_storeEnumTagMultiPayload(v77, v78, 0);
    v79 = v112;
    sub_100004788(v74, v77 + *(int *)(v112 + 20), &qword_100061D20);
    v80 = v102;
    sub_10000B460(v77, v102, type metadata accessor for TodayWidgetSmallMediumEntryView);
    v81 = v111;
    sub_1000043C0(v80, v111, type metadata accessor for TodayWidgetSmallMediumEntryView);
    swift_storeEnumTagMultiPayload(v81, v108, 1);
    v82 = sub_100008DD8(&qword_100062E10, type metadata accessor for TodayWidgetLargeEntryView, (uint64_t)&unk_10004F46C);
    v83 = sub_100008DD8(&qword_100062110, type metadata accessor for TodayWidgetSmallMediumEntryView, (uint64_t)&unk_10004F250);
    _ConditionalContent<>.init(storage:)(v81, v109, v79, v82, v83);
    sub_10000A7A8(v80, type metadata accessor for TodayWidgetSmallMediumEntryView);
    v47 = v114;
    goto LABEL_20;
  }
  v39 = v32;
  v40 = (uint64_t)v110;
  v41 = v106;
  v42 = v99;
  v98 = v31;
  if (!v37)
  {
    v48 = _swiftEmptyArrayStorage;
    v47 = v114;
    v49 = v107;
    goto LABEL_18;
  }
  sub_100017908(v28, v99, v107, (uint64_t)v106);
  v43 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v44 = swift_unknownObjectRetain_n(v28, 2);
  v45 = (_QWORD *)swift_dynamicCastClass(v44, v43);
  if (!v45)
  {
    sub_100017984(v28, v42, v107, (uint64_t)v41);
    v45 = _swiftEmptyArrayStorage;
  }
  v46 = v45[2];
  swift_release(v45);
  v47 = v114;
  if (v46 != v37 - 1)
  {
    v49 = v107;
    sub_100017984(v38, v42, v107, (uint64_t)v41);
    v96 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetTodayCard(0) - 8) + 80);
    sub_100046D34(v38, v38 + ((v96 + 32) & ~v96), 1, (2 * v37) | 1);
    v48 = v97;
LABEL_17:
    sub_100017984(v38, v42, v49, (uint64_t)v41);
    if (*(_QWORD *)(v38 + 16))
      goto LABEL_9;
LABEL_18:
    v84 = type metadata accessor for WidgetTodayCard(0);
    v52 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v104, 1, 1, v84);
    goto LABEL_19;
  }
  v48 = (_QWORD *)swift_dynamicCastClass(v28, v43);
  v49 = v107;
  sub_100017984(v38, v42, v107, (uint64_t)v41);
  if (!v48)
  {
    v48 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  if (!*(_QWORD *)(v38 + 16))
    goto LABEL_18;
LABEL_9:
  v50 = type metadata accessor for WidgetTodayCard(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = v104;
  sub_1000043C0(v38 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80)), v104, type metadata accessor for WidgetTodayCard);
  v53 = v50;
  v39 = v116;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v53);
LABEL_19:
  sub_100017984(v38, v42, v49, (uint64_t)v41);
  v85 = swift_getKeyPath(&unk_100050090);
  v86 = (uint64_t)v103;
  *v103 = v85;
  v87 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v86, v87, 0);
  v88 = v109;
  sub_100004788(v52, v86 + *(int *)(v109 + 20), &qword_100061D20);
  *(_QWORD *)(v86 + *(int *)(v88 + 24)) = v48;
  v89 = v105;
  sub_10000B460(v86, v105, type metadata accessor for TodayWidgetLargeEntryView);
  v90 = v111;
  sub_1000043C0(v89, v111, type metadata accessor for TodayWidgetLargeEntryView);
  swift_storeEnumTagMultiPayload(v90, v108, 0);
  v91 = sub_100008DD8(&qword_100062E10, type metadata accessor for TodayWidgetLargeEntryView, (uint64_t)&unk_10004F46C);
  v92 = sub_100008DD8(&qword_100062110, type metadata accessor for TodayWidgetSmallMediumEntryView, (uint64_t)&unk_10004F250);
  _ConditionalContent<>.init(storage:)(v90, v88, v112, v91, v92);
  sub_10000A7A8(v89, type metadata accessor for TodayWidgetLargeEntryView);
  v70 = v98;
LABEL_20:
  v93 = v113;
  sub_1000047CC(v40, v47, &qword_100062E00);
  swift_storeEnumTagMultiPayload(v47, v39, 0);
  v94 = sub_100046734();
  v95 = sub_100008DD8(&qword_100062E18, type metadata accessor for TodayWidgetFallbackEntryView, (uint64_t)&unk_10004E8E8);
  _ConditionalContent<>.init(storage:)(v47, v70, v93, v94, v95);
  return sub_100004810(v40, &qword_100062E00);
}

uint64_t sub_10004644C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000464A8(&qword_100060A48, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (char *)0x686353726F6C6F43, (char *)0xEB00000000656D65, a1);
}

uint64_t sub_10004647C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000464A8(&qword_100061110, (uint64_t (*)(_QWORD))&type metadata accessor for ContentSizeCategory, (char *)0xD000000000000013, (char *)0x800000010005A530, a1);
}

uint64_t sub_1000464A8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v25 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100004380(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000047CC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v23 = swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v26 = v24;
      *(_DWORD *)v23 = 136315138;
      *(_QWORD *)(v23 + 4) = sub_1000467D0(a3, v25, &v26);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1000466B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000464A8(&qword_100061118, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, (char *)0x6146746567646957, (char *)0xEC000000796C696DLL, a1);
}

uint64_t sub_1000466E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000464A8(&qword_100061210, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, (char *)0xD000000000000013, (char *)0x800000010005A550, a1);
}

uint64_t sub_100046710()
{
  return EnvironmentValues.sizeCategory.getter();
}

unint64_t sub_100046734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062E08;
  if (!qword_100062E08)
  {
    v1 = sub_1000044A8(&qword_100062E00);
    sub_100008DD8(&qword_100062E10, type metadata accessor for TodayWidgetLargeEntryView, (uint64_t)&unk_10004F46C);
    sub_100008DD8(&qword_100062110, type metadata accessor for TodayWidgetSmallMediumEntryView, (uint64_t)&unk_10004F250);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062E08);
  }
  return result;
}

char *sub_1000467D0(char *a1, char *a2, uint64_t *a3)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v12[3];
  void *ObjectType;

  v6 = sub_1000468A0(v12, 0, 0, 1, (uint64_t)a1, (unint64_t)a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_100046E54((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_100046E54((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100008444(v12);
  return v7;
}

char *sub_1000468A0(char **a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  char *result;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          result = 0;
          *((_BYTE *)__dst + v10) = 0;
          *a1 = (char *)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_10004699C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    result = (char *)((a6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    result = (char *)_StringObject.sharedUTF8.getter(a5, a6);
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (char *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
}

char *sub_10004699C(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (char *)sub_100046A30(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100046B2C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_100046B2C((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

_QWORD *sub_100046A30(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *result;
  char v7;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100046AC8(v4, 0);
      result = (_QWORD *)_StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v7 & 1) != 0)
        break;
      if (result == (_QWORD *)v4)
        return v5;
      __break(1u);
LABEL_9:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100046AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100004380(&qword_100062E20);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

char *sub_100046B2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100004380(&qword_100062E20);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

void sub_100046C14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_14;
  if (v5)
  {
    if (v5 <= 0)
    {
      v13 = _swiftEmptyArrayStorage;
      if (v4 != a3)
        goto LABEL_10;
    }
    else
    {
      v8 = sub_100004380(&qword_100062018);
      v9 = *(_QWORD *)(type metadata accessor for AppIconConfiguration(0) - 8);
      v10 = *(_QWORD *)(v9 + 72);
      v11 = *(unsigned __int8 *)(v9 + 80);
      v12 = (v11 + 32) & ~v11;
      v13 = (_QWORD *)swift_allocObject(v8, v12 + v10 * v5, v11 | 7);
      v14 = j__malloc_size(v13);
      if (!v10)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
      if (v14 - v12 == 0x8000000000000000 && v10 == -1)
        goto LABEL_16;
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(v14 - v12) / v10);
      if (v4 != a3)
      {
LABEL_10:
        v16 = type metadata accessor for AppIconConfiguration(0);
        swift_arrayInitWithCopy((char *)v13+ ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80)), a2 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * a3, v5, v16);
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

void sub_100046D34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_14;
  if (v5)
  {
    if (v5 <= 0)
    {
      v13 = _swiftEmptyArrayStorage;
      if (v4 != a3)
        goto LABEL_10;
    }
    else
    {
      v8 = sub_100004380(&qword_100062030);
      v9 = *(_QWORD *)(type metadata accessor for WidgetTodayCard(0) - 8);
      v10 = *(_QWORD *)(v9 + 72);
      v11 = *(unsigned __int8 *)(v9 + 80);
      v12 = (v11 + 32) & ~v11;
      v13 = (_QWORD *)swift_allocObject(v8, v12 + v10 * v5, v11 | 7);
      v14 = j__malloc_size(v13);
      if (!v10)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
      if (v14 - v12 == 0x8000000000000000 && v10 == -1)
        goto LABEL_16;
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(v14 - v12) / v10);
      if (v4 != a3)
      {
LABEL_10:
        v16 = type metadata accessor for WidgetTodayCard(0);
        swift_arrayInitWithCopy((char *)v13+ ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80)), a2 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * a3, v5, v16);
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_100046E54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100046E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062E28;
  if (!qword_100062E28)
  {
    v1 = sub_1000044A8(&qword_100062E30);
    sub_100046734();
    sub_100008DD8(&qword_100062E18, type metadata accessor for TodayWidgetFallbackEntryView, (uint64_t)&unk_10004E8E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100062E28);
  }
  return result;
}

uint64_t sub_100046F18(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  return sub_100005A7C(a2, a1 == 0, a3, a4);
}

uint64_t sub_100046F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  char v63[8];
  _QWORD v64[5];

  v53 = a4;
  v61 = type metadata accessor for WidgetTodayCard(0);
  v7 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v54 = (uint64_t)&v47 - v10;
  v11 = sub_100004380(&qword_100061D20);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v59 = (uint64_t)&v47 - v16;
  v51 = type metadata accessor for TodayWidgetCardCollection(0);
  __chkstk_darwin(v51);
  v52 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for OSLogger(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a2 + 16);
  v55 = v7;
  v58 = v23;
  if (v23)
  {
    v47 = v12;
    v48 = v14;
    v49 = a1;
    v50 = a3;
    swift_bridgeObjectRetain(a2);
    v24 = 0;
    v57 = xmmword_10004E5E0;
    v56 = 0x800000010005A570;
    do
    {
      v25 = *(_QWORD *)(a2 + 8 * v24 + 32);
      swift_errorRetain(v25);
      if (qword_100060850 != -1)
        swift_once(&qword_100060850, sub_10000555C);
      ++v24;
      v26 = sub_1000056A0(v18, (uint64_t)qword_100063238);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v26, v18);
      v27 = sub_100004380(&qword_100060BA0);
      v28 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ 2 * *(_QWORD *)(v28 + 72), *(unsigned __int8 *)(v28 + 80) | 7);
      *(_OWORD *)(v29 + 16) = v57;
      LogMessage.init(stringLiteral:)(0xD000000000000028, v56);
      swift_getErrorValue(v25, v63, v62);
      v30 = Error.localizedDescription.getter(v62[1], v62[2]);
      v64[3] = &type metadata for String;
      v64[0] = v30;
      v64[1] = v31;
      static LogMessage.safe(_:)(v64);
      sub_100004810((uint64_t)v64, &qword_100060BA8);
      Logger.error(_:)(v29, v18, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(v25);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    }
    while (v58 != v24);
    swift_bridgeObjectRelease(a2);
    v32 = v49;
    v33 = *(_QWORD *)(v49 + 16);
    v7 = v55;
    v14 = v48;
    v12 = v47;
    if (!v33)
    {
      v34 = type metadata accessor for ResolveAllError(0);
      v35 = sub_100044D2C();
      v36 = swift_allocError(v34, v35, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v37, enum case for ResolveAllError.noValuesAndErrors(_:), v34);
      Promise.reject(_:)(v36);
      return swift_errorRelease(v36);
    }
    goto LABEL_9;
  }
  v33 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  if (v33)
  {
LABEL_9:
    v39 = v32 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v40 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain(v32);
    v41 = _swiftEmptyArrayStorage;
    do
    {
      v42 = v59;
      sub_10004749C(v39, v59);
      sub_100030490(v42, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v61) == 1)
      {
        sub_100004810((uint64_t)v14, &qword_100061D20);
      }
      else
      {
        v43 = v54;
        sub_100018134((uint64_t)v14, v54);
        sub_100018134(v43, v60);
        if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
          v41 = (_QWORD *)sub_100033008(0, v41[2] + 1, 1, v41);
        v45 = v41[2];
        v44 = v41[3];
        if (v45 >= v44 >> 1)
          v41 = (_QWORD *)sub_100033008(v44 > 1, v45 + 1, 1, v41);
        v41[2] = v45 + 1;
        v7 = v55;
        sub_100018134(v60, (uint64_t)v41+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v55 + 72) * v45);
      }
      v39 += v40;
      --v33;
    }
    while (v33);
    v20 = swift_bridgeObjectRelease(v32);
    goto LABEL_19;
  }
  v41 = _swiftEmptyArrayStorage;
LABEL_19:
  v46 = v52;
  TodayWidgetCardCollectionTemplate.displayDate.getter(v20);
  *v46 = v41;
  Promise.resolve(_:)(v46);
  return sub_1000474E4((uint64_t)v46);
}

uint64_t type metadata accessor for TodayWidgetCardCollection(uint64_t a1)
{
  uint64_t result;

  result = qword_100062E90;
  if (!qword_100062E90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayWidgetCardCollection);
  return result;
}

uint64_t sub_10004749C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100061D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000474E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TodayWidgetCardCollection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100047520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004752C);
}

uint64_t sub_10004752C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1000475A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000475B4);
}

char *sub_1000475B4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

_QWORD *sub_100047628(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    v23 = a3[6];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = v24;
      v29 = v26;
      v30 = 1;
    }
    else
    {
      v31 = *v25;
      *v24 = *v25;
      swift_retain(v31);
      v28 = v24;
      v29 = v26;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    v32 = a3[7];
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v37 = v33;
      v38 = v35;
      v39 = 1;
    }
    else
    {
      v40 = *v34;
      *v33 = *v34;
      swift_retain(v40);
      v37 = v33;
      v38 = v35;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
    v41 = a3[8];
    v42 = a3[9];
    v43 = *(void **)((char *)a2 + v41);
    *(_QWORD *)((char *)a1 + v41) = v43;
    v44 = *(void **)((char *)a2 + v42);
    *(_QWORD *)((char *)a1 + v42) = v44;
    v45 = a3[10];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v48 = type metadata accessor for CardDetailView.Heading(0);
    v49 = v43;
    v50 = v44;
    if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
    {
      v51 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v46, v47, v51);
      v52 = 1;
    }
    else
    {
      v53 = v47[1];
      *v46 = *v47;
      v46[1] = v53;
      swift_bridgeObjectRetain(v53);
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v46, v48, v52);
    v54 = a3[11];
    v55 = a3[12];
    v56 = (_QWORD *)((char *)a1 + v54);
    v57 = (_QWORD *)((char *)a2 + v54);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = (char *)a1 + v55;
    v60 = *(_QWORD *)((char *)a2 + v55);
    v61 = *(_QWORD *)((char *)a2 + v55 + 8);
    v62 = *((_BYTE *)a2 + v55 + 16);
    swift_bridgeObjectRetain(v58);
    sub_10001E3C0(v60, v61);
    *(_QWORD *)v59 = v60;
    *((_QWORD *)v59 + 1) = v61;
    v59[16] = v62;
    v63 = a3[13];
    v64 = (char *)a1 + v63;
    v65 = (char *)a2 + v63;
    v66 = *(_QWORD *)v65;
    v67 = *((_QWORD *)v65 + 1);
    LOBYTE(v60) = v65[16];
    sub_10001E3C0(*(_QWORD *)v65, v67);
    *(_QWORD *)v64 = v66;
    *((_QWORD *)v64 + 1) = v67;
    v64[16] = v60;
  }
  return a1;
}

uint64_t sub_100047970(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + a2[5]);
  v7 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)((char *)a1 + a2[6]);
  v10 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)((char *)a1 + a2[7]);
  v13 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }

  v15 = (char *)a1 + a2[10];
  v16 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_bridgeObjectRelease(*((_QWORD *)v15 + 1));
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
  sub_10001E4D8(*(_QWORD *)((char *)a1 + a2[12]), *(_QWORD *)((char *)a1 + a2[12] + 8));
  return sub_10001E4D8(*(_QWORD *)((char *)a1 + a2[13]), *(_QWORD *)((char *)a1 + a2[13] + 8));
}

_QWORD *sub_100047B68(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *v14;
    *v13 = *v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  v21 = a3[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = v22;
    v27 = v24;
    v28 = 1;
  }
  else
  {
    v29 = *v23;
    *v22 = *v23;
    swift_retain(v29);
    v26 = v22;
    v27 = v24;
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v27, v28);
  v30 = a3[7];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
    v35 = v31;
    v36 = v33;
    v37 = 1;
  }
  else
  {
    v38 = *v32;
    *v31 = *v32;
    swift_retain(v38);
    v35 = v31;
    v36 = v33;
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(v35, v36, v37);
  v39 = a3[8];
  v40 = a3[9];
  v41 = *(void **)((char *)a2 + v39);
  *(_QWORD *)((char *)a1 + v39) = v41;
  v42 = *(void **)((char *)a2 + v40);
  *(_QWORD *)((char *)a1 + v40) = v42;
  v43 = a3[10];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  v46 = type metadata accessor for CardDetailView.Heading(0);
  v47 = v41;
  v48 = v42;
  if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
  {
    v49 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
    v50 = 1;
  }
  else
  {
    v51 = v45[1];
    *v44 = *v45;
    v44[1] = v51;
    swift_bridgeObjectRetain(v51);
    v50 = 0;
  }
  swift_storeEnumTagMultiPayload(v44, v46, v50);
  v52 = a3[11];
  v53 = a3[12];
  v54 = (_QWORD *)((char *)a1 + v52);
  v55 = (_QWORD *)((char *)a2 + v52);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = (char *)a1 + v53;
  v58 = *(_QWORD *)((char *)a2 + v53);
  v59 = *(_QWORD *)((char *)a2 + v53 + 8);
  v60 = *((_BYTE *)a2 + v53 + 16);
  swift_bridgeObjectRetain(v56);
  sub_10001E3C0(v58, v59);
  *(_QWORD *)v57 = v58;
  *((_QWORD *)v57 + 1) = v59;
  v57[16] = v60;
  v61 = a3[13];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = *(_QWORD *)v63;
  v65 = *((_QWORD *)v63 + 1);
  LOBYTE(v58) = v63[16];
  sub_10001E3C0(*(_QWORD *)v63, v65);
  *(_QWORD *)v62 = v64;
  *((_QWORD *)v62 + 1) = v65;
  v62[16] = v58;
  return a1;
}

uint64_t *sub_100047E84(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = a3[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_100004810((uint64_t)a1 + v12, &qword_100061110);
    v15 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
    v21 = a3[6];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    sub_100004810((uint64_t)a1 + v21, &qword_100060A48);
    v24 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = v22;
      v27 = v24;
      v28 = 1;
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v26 = v22;
      v27 = v24;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
    v30 = a3[7];
    v31 = (uint64_t *)((char *)a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    sub_100004810((uint64_t)a1 + v30, &qword_100061210);
    v33 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v31;
      v36 = v33;
      v37 = 1;
    }
    else
    {
      v38 = *v32;
      *v31 = *v32;
      swift_retain(v38);
      v35 = v31;
      v36 = v33;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  v39 = a3[8];
  v40 = *(void **)((char *)a2 + v39);
  v41 = *(void **)((char *)a1 + v39);
  *(uint64_t *)((char *)a1 + v39) = (uint64_t)v40;
  v42 = v40;

  v43 = a3[9];
  v44 = *(void **)((char *)a1 + v43);
  v45 = *(void **)((char *)a2 + v43);
  *(uint64_t *)((char *)a1 + v43) = (uint64_t)v45;
  v46 = v45;

  if (a1 != a2)
  {
    v47 = a3[10];
    v48 = (uint64_t *)((char *)a1 + v47);
    v49 = (uint64_t *)((char *)a2 + v47);
    sub_10000A7A8((uint64_t)a1 + v47, type metadata accessor for CardDetailView.Heading);
    v50 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      v52 = 1;
    }
    else
    {
      *v48 = *v49;
      v53 = v49[1];
      v48[1] = v53;
      swift_bridgeObjectRetain(v53);
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v50, v52);
  }
  v54 = a3[11];
  v55 = (uint64_t *)((char *)a1 + v54);
  v56 = (uint64_t *)((char *)a2 + v54);
  *v55 = *v56;
  v57 = v56[1];
  v58 = v55[1];
  v55[1] = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v58);
  v59 = a3[12];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = *(_QWORD *)v61;
  v63 = *((_QWORD *)v61 + 1);
  v64 = v61[16];
  sub_10001E3C0(*(_QWORD *)v61, v63);
  v65 = *(_QWORD *)v60;
  v66 = *((_QWORD *)v60 + 1);
  *(_QWORD *)v60 = v62;
  *((_QWORD *)v60 + 1) = v63;
  v60[16] = v64;
  sub_10001E4D8(v65, v66);
  v67 = a3[13];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  v70 = *(_QWORD *)v69;
  v71 = *((_QWORD *)v69 + 1);
  LOBYTE(v62) = v69[16];
  sub_10001E3C0(*(_QWORD *)v69, v71);
  v72 = *(_QWORD *)v68;
  v73 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v68 = v70;
  *((_QWORD *)v68 + 1) = v71;
  v68[16] = v62;
  sub_10001E4D8(v72, v73);
  return a1;
}

char *sub_10004824C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  v24 = a3[10];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload(v25, v27, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v29 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[16] = v31[16];
  v32 = a3[13];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

char *sub_100048520(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  if (a1 != a2)
  {
    sub_100004810((uint64_t)a1, &qword_100061118);
    v6 = sub_100004380(&qword_100061118);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100004810((uint64_t)&a1[v8], &qword_100061110);
    v11 = sub_100004380(&qword_100061110);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    sub_100004810((uint64_t)&a1[v13], &qword_100060A48);
    v16 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    sub_100004810((uint64_t)&a1[v18], &qword_100061210);
    v21 = sub_100004380(&qword_100061210);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  v23 = a3[8];
  v24 = *(void **)&a1[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];

  v25 = a3[9];
  v26 = *(void **)&a1[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];

  if (a1 != a2)
  {
    v27 = a3[10];
    v28 = &a1[v27];
    v29 = &a2[v27];
    sub_10000A7A8((uint64_t)&a1[v27], type metadata accessor for CardDetailView.Heading);
    v30 = type metadata accessor for CardDetailView.Heading(0);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload(v28, v30, 1);
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
  }
  v32 = a3[11];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v36 = *(_QWORD *)v34;
  v35 = *((_QWORD *)v34 + 1);
  v37 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease(v37);
  v38 = a3[12];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = v40[16];
  v42 = *(_QWORD *)v39;
  v43 = *((_QWORD *)v39 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v39[16] = v41;
  sub_10001E4D8(v42, v43);
  v44 = a3[13];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = v46[16];
  v48 = *(_QWORD *)v45;
  v49 = *((_QWORD *)v45 + 1);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  v45[16] = v47;
  sub_10001E4D8(v48, v49);
  return a1;
}

uint64_t sub_100048894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000488A0);
}

uint64_t sub_1000488A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_100004380(&qword_100061128);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004380(&qword_100061120);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_100004380(&qword_100060A50);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_14;
  }
  v15 = sub_100004380(&qword_100061ED8);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_14;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for CardDetailView.Heading(0);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[10];
    goto LABEL_14;
  }
  v16 = *(_QWORD *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_1000489C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000489D0);
}

uint64_t sub_1000489D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_100004380(&qword_100061128);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100004380(&qword_100061120);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_100004380(&qword_100060A50);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        result = sub_100004380(&qword_100061ED8);
        v14 = *(_QWORD *)(result - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = result;
          v15 = a4[7];
        }
        else
        {
          if (a3 == 0x7FFFFFFF)
          {
            *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
            return result;
          }
          v10 = type metadata accessor for CardDetailView.Heading(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[10];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BrandedTodayCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100062F20;
  if (!qword_100062F20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrandedTodayCardView);
  return result;
}

void sub_100048B2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[10];

  sub_10000FD24(319, (unint64_t *)&qword_1000611A0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000FD24(319, &qword_100061198, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10000FD24(319, (unint64_t *)&qword_100060AC0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10000FD24(319, (unint64_t *)&qword_100062710, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
        if (v9 <= 0x3F)
        {
          v12[3] = *(_QWORD *)(v8 - 8) + 64;
          v12[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
          v12[5] = "\b";
          v10 = type metadata accessor for CardDetailView.Heading(319);
          if (v11 <= 0x3F)
          {
            v12[6] = *(_QWORD *)(v10 - 8) + 64;
            v12[7] = &unk_100050150;
            v12[8] = &unk_100050168;
            v12[9] = &unk_100050168;
            swift_initStructMetadata(a1, 256, 10, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_100048C70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100051060, 1);
}

uint64_t sub_100048C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _OWORD v37[3];

  v6 = sub_100004380(&qword_100062F78);
  __chkstk_darwin(v6);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004380(&qword_100062F80);
  __chkstk_darwin(v9);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004380(&qword_100062F88);
  __chkstk_darwin(v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v15);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v16 = sub_100004380(&qword_100062F90);
  v17 = sub_100048EB8(a2, (uint64_t)&v8[*(int *)(v16 + 44)]);
  v18 = GeometryProxy.size.getter(v17);
  GeometryProxy.size.getter(v19);
  v21 = v20;
  v23 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v37, *(_QWORD *)&v18, 0, v21, 0, v23, v24);
  sub_1000047CC((uint64_t)v8, (uint64_t)v11, &qword_100062F78);
  v25 = &v11[*(int *)(v9 + 36)];
  v26 = v37[1];
  *(_OWORD *)v25 = v37[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v37[2];
  sub_100004810((uint64_t)v8, &qword_100062F78);
  sub_1000047CC((uint64_t)v11, (uint64_t)v14, &qword_100062F80);
  *(_WORD *)&v14[*(int *)(v12 + 36)] = 0;
  v27 = sub_100004810((uint64_t)v11, &qword_100062F80);
  v28 = static Alignment.center.getter(v27);
  v30 = v29;
  v31 = sub_100004380(&qword_100062F98);
  v32 = (_QWORD *)(a3 + *(int *)(v31 + 36));
  *v32 = static Alignment.center.getter(v31);
  v32[1] = v33;
  v34 = sub_100004380(&qword_100062FA0);
  sub_10004933C(a2, a1, (_QWORD *)((char *)v32 + *(int *)(v34 + 44)));
  v35 = (_QWORD *)((char *)v32 + *(int *)(sub_100004380(&qword_100062FA8) + 36));
  *v35 = v28;
  v35[1] = v30;
  return sub_100004788((uint64_t)v14, a3, &qword_100062F88);
}

uint64_t sub_100048EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[8];

  v59 = a2;
  v3 = type metadata accessor for CardDetailView.Heading(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CardDetailView(0);
  __chkstk_darwin(v6);
  v58 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v55 = (uint64_t)&v55 - v9;
  __chkstk_darwin(v10);
  v57 = (uint64_t)&v55 - v11;
  v12 = (int *)type metadata accessor for TitleView(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  *v14 = swift_getKeyPath(&unk_1000501D0);
  v18 = sub_100004380(&qword_100061118);
  swift_storeEnumTagMultiPayload(v14, v18, 0);
  v19 = (_QWORD *)((char *)v14 + v12[5]);
  *v19 = swift_getKeyPath(&unk_100050200);
  v20 = sub_100004380(&qword_100061110);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  v21 = (_QWORD *)((char *)v14 + v12[6]);
  *v21 = swift_getKeyPath(&unk_100050230);
  v22 = sub_100004380(&qword_100060A48);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v23 = (_OWORD *)((char *)v14 + v12[7]);
  *v23 = 0u;
  v23[1] = 0u;
  *((_BYTE *)v14 + v12[8]) = 0;
  v56 = v17;
  v24 = sub_10000B460((uint64_t)v14, (uint64_t)v17, type metadata accessor for TitleView);
  v25 = static Alignment.center.getter(v24);
  sub_10000FD80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v60, 0.0, 1, INFINITY, 0, v25, v26, 0, 1);
  v27 = (int *)type metadata accessor for BrandedTodayCardView(0);
  sub_1000043C0(a1 + v27[10], (uint64_t)v5, type metadata accessor for CardDetailView.Heading);
  v28 = (uint64_t *)(a1 + v27[12]);
  v29 = *v28;
  v30 = v28[1];
  v31 = *((unsigned __int8 *)v28 + 16);
  v32 = type metadata accessor for SingleLineTextObserver.State(0);
  v33 = sub_100049CFC();
  v34 = StateObject.wrappedValue.getter(v29, v30, v31, v32, v33);
  v35 = (uint64_t *)(a1 + v27[11]);
  v37 = *v35;
  v36 = v35[1];
  v38 = StateObject.wrappedValue.getter(*(_QWORD *)(a1 + v27[13]), *(_QWORD *)(a1 + v27[13] + 8), *(unsigned __int8 *)(a1 + v27[13] + 16), v32, v33);
  v39 = *(void **)(a1 + v27[9]);
  if (v39)
  {
    v40 = *(id *)(a1 + v27[9]);
  }
  else
  {
    v40 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v39 = 0;
  }
  v41 = v39;
  v42 = Color.init(uiColor:)(v40);
  v43 = v55;
  sub_10003B614((uint64_t)v5, v34, v37, v36, v38, v42 | 0x4000000000000000, v55, INFINITY);
  swift_release(v34);
  swift_release(v38);
  swift_release(v42);
  sub_10000A7A8((uint64_t)v5, type metadata accessor for CardDetailView.Heading);
  v44 = v57;
  sub_10000B460(v43, v57, type metadata accessor for CardDetailView);
  v45 = (uint64_t)v56;
  sub_1000043C0((uint64_t)v56, (uint64_t)v14, type metadata accessor for TitleView);
  v46 = v58;
  sub_1000043C0(v44, v58, type metadata accessor for CardDetailView);
  v47 = v59;
  sub_1000043C0((uint64_t)v14, v59, type metadata accessor for TitleView);
  v48 = sub_100004380(&qword_100062FC0);
  v49 = (_OWORD *)(v47 + *(int *)(v48 + 48));
  v50 = v60[5];
  v49[4] = v60[4];
  v49[5] = v50;
  v51 = v60[7];
  v49[6] = v60[6];
  v49[7] = v51;
  v52 = v60[1];
  *v49 = v60[0];
  v49[1] = v52;
  v53 = v60[3];
  v49[2] = v60[2];
  v49[3] = v53;
  sub_1000043C0(v46, v47 + *(int *)(v48 + 64), type metadata accessor for CardDetailView);
  sub_10000A7A8(v44, type metadata accessor for CardDetailView);
  sub_10000A7A8(v45, type metadata accessor for TitleView);
  sub_10000A7A8(v46, type metadata accessor for CardDetailView);
  return sub_10000A7A8((uint64_t)v14, type metadata accessor for TitleView);
}

void sub_10004933C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  _OWORD v105[3];

  v98 = a2;
  v5 = sub_100004380(&qword_100060F00);
  __chkstk_darwin(v5);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Image.ResizingMode(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100004380(&qword_100060F08);
  v91 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v90 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100004380(&qword_100060F10);
  __chkstk_darwin(v89);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100004380(&qword_1000625E0);
  __chkstk_darwin(v92);
  v85 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100004380(&qword_100062FB0);
  __chkstk_darwin(v95);
  v97 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v94 = (uint64_t)&v76 - v16;
  __chkstk_darwin(v17);
  v96 = (uint64_t)&v76 - v18;
  v19 = type metadata accessor for ContentSizeCategory(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for BrandedTodayCardView(0);
  v84 = a1 + v23[5];
  v24 = sub_10004647C((uint64_t)v22);
  v25 = ContentSizeCategory.isAccessibilityCategory.getter(v24);
  v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v88 = v19;
  v83 = v26;
  v26(v22, v19);
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  if ((v25 & 1) != 0)
  {
    v34 = *(void **)(a1 + v23[9]);
    if (v34)
    {
      v35 = *(id *)(a1 + v23[9]);
    }
    else
    {
      v35 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      v34 = 0;
    }
    v36 = v34;
    v27 = Color.init(uiColor:)(v35);
    v37 = GeometryProxy.size.getter(v27);
    GeometryProxy.size.getter(v38);
    v40 = v39;
    v42 = static Alignment.center.getter(v41);
    _FrameLayout.init(width:height:alignment:)(&v99, *(_QWORD *)&v37, 0, v40, 0, v42, v43);
    v28 = v99;
    v29 = v100;
    v30 = v101;
    v31 = v102;
    v32 = v103;
    v33 = v104;
  }
  v77 = v29;
  v78 = v30;
  v79 = v31;
  v80 = v32;
  v81 = v33;
  v82 = v28;
  v44 = Image.init(uiImage:)(*(id *)(a1 + v23[8]));
  v45 = v27;
  v46 = v86;
  v47 = v87;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v87);
  v48 = Image.resizable(capInsets:resizingMode:)(v9, v44, 0.0, 0.0, 0.0, 0.0);
  v49 = swift_release(v44);
  v50 = (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v9, v47, v49);
  static WidgetAccentedRenderingMode.desaturated.getter(v50);
  v51 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v7, 0, 1, v51);
  v52 = v90;
  Image.widgetAccentedRenderingMode(_:)(v7, v48);
  swift_release(v48);
  sub_100004810((uint64_t)v7, &qword_100060F00);
  v53 = v91;
  v54 = v93;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v12, v52, v93);
  v55 = &v12[*(int *)(v89 + 36)];
  *(_QWORD *)v55 = 0;
  *((_WORD *)v55 + 4) = 257;
  v56 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v52, v54);
  v57 = GeometryProxy.size.getter(v56);
  GeometryProxy.size.getter(v58);
  v60 = v59;
  v62 = static Alignment.center.getter(v61);
  _FrameLayout.init(width:height:alignment:)(v105, *(_QWORD *)&v57, 0, v60, 0, v62, v63);
  v64 = v85;
  sub_1000047CC((uint64_t)v12, v85, &qword_100060F10);
  v65 = (_OWORD *)(v64 + *(int *)(v92 + 36));
  v66 = v105[1];
  *v65 = v105[0];
  v65[1] = v66;
  v65[2] = v105[2];
  sub_100004810((uint64_t)v12, &qword_100060F10);
  v67 = sub_10004647C((uint64_t)v22);
  LOBYTE(v60) = ContentSizeCategory.isAccessibilityCategory.getter(v67);
  v83(v22, v88);
  if ((v60 & 1) != 0)
    v68 = 0.6;
  else
    v68 = 1.0;
  v69 = v94;
  sub_1000047CC(v64, v94, &qword_1000625E0);
  *(double *)(v69 + *(int *)(v95 + 36)) = v68;
  sub_100004810(v64, &qword_1000625E0);
  v70 = v96;
  sub_100004788(v69, v96, &qword_100062FB0);
  v71 = v97;
  sub_1000047CC(v70, v97, &qword_100062FB0);
  v72 = v82;
  *a3 = v45;
  a3[1] = v72;
  v73 = v78;
  a3[2] = v77;
  a3[3] = v73;
  v74 = v80;
  a3[4] = v79;
  a3[5] = v74;
  a3[6] = v81;
  v75 = sub_100004380(&qword_100062FB8);
  sub_1000047CC(v71, (uint64_t)a3 + *(int *)(v75 + 48), &qword_100062FB0);
  swift_retain(v45);
  sub_100004810(v70, &qword_100062FB0);
  sub_100004810(v71, &qword_100062FB0);
  swift_release(v45);
}

uint64_t sub_1000499AC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_1000043C0(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BrandedTodayCardView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_10005F1B0, v7 + v5, v6 | 7);
  result = sub_10000B460((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for BrandedTodayCardView);
  *a2 = sub_100049C9C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_100049A60()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (int *)type metadata accessor for BrandedTodayCardView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100004380(&qword_100061118);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)((char *)v6 + v1[5]);
  v10 = sub_100004380(&qword_100061110);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)((char *)v6 + v1[6]);
  v13 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (_QWORD *)((char *)v6 + v1[7]);
  v16 = sub_100004380(&qword_100061210);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }

  v18 = (char *)v6 + v1[10];
  v19 = type metadata accessor for CardDetailView.Heading(0);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
  }
  else
  {
    swift_bridgeObjectRelease(*((_QWORD *)v18 + 1));
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[11] + 8));
  sub_10001E4D8(*(_QWORD *)((char *)v6 + v1[12]), *(_QWORD *)((char *)v6 + v1[12] + 8));
  sub_10001E4D8(*(_QWORD *)((char *)v6 + v1[13]), *(_QWORD *)((char *)v6 + v1[13] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100049C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BrandedTodayCardView(0) - 8) + 80);
  return sub_100048C80(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100049CFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100061BF0;
  if (!qword_100061BF0)
  {
    v1 = type metadata accessor for SingleLineTextObserver.State(255);
    result = swift_getWitnessTable(&unk_10004EBA8, v1);
    atomic_store(result, (unint64_t *)&qword_100061BF0);
  }
  return result;
}

unint64_t sub_100049D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100062FC8;
  if (!qword_100062FC8)
  {
    v1 = sub_1000044A8(&qword_100062FD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100062FC8);
  }
  return result;
}

uint64_t *sub_100049D94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_100004380(&qword_100060A48);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t *sub_100049E5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_100049EF8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_100004BA0((uint64_t)a1);
    v4 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_100049FA4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100004380(&qword_100060A48);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_10004A03C(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_100004BA0((uint64_t)a1);
    v4 = sub_100004380(&qword_100060A48);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004A0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004A0F0);
}

uint64_t sub_10004A0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100060A50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10004A130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004A13C);
}

uint64_t sub_10004A13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100060A50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ColorSchemeAwarePlusBlend(uint64_t a1)
{
  uint64_t result;

  result = qword_100063030;
  if (!qword_100063030)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ColorSchemeAwarePlusBlend);
  return result;
}

void sub_10004A1BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100004EFC(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

uint64_t sub_10004A224(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000510B0, 1);
}

uint64_t sub_10004A234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  unsigned int *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = a2;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004380(&qword_100063068);
  __chkstk_darwin(v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004644C((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
  v16 = static ColorScheme.== infix(_:_:)(v8, v5);
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  v17(v8, v2);
  v18 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  if ((v16 & 1) == 0)
    v18 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *v18, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v15[*(int *)(v13 + 36)], v12, v9);
  v19 = sub_100004380(&qword_100063070);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v21, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_10004A418((uint64_t)v15, v22);
}

uint64_t sub_10004A418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100063068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10004A464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100063078;
  if (!qword_100063078)
  {
    v1 = sub_1000044A8(&qword_100063068);
    sub_10004A4D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100063078);
  }
  return result;
}

unint64_t sub_10004A4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100063080;
  if (!qword_100063080)
  {
    v1 = sub_1000044A8(&qword_100063070);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100063080);
  }
  return result;
}

_QWORD *sub_10004A51C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v10 = (void *)a2[7];
    v11 = a2[8];
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    v12 = (void *)a2[9];
    v13 = *(int *)(a3 + 44);
    __dst = (void *)(a1 + v13);
    v27 = (char *)a2 + v13;
    *(_QWORD *)(a1 + 72) = v12;
    v14 = type metadata accessor for URL(0);
    v26 = *(_QWORD *)(v14 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v15 = v10;
    swift_bridgeObjectRetain(v11);
    v16 = v12;
    if (v28(v27, 1, v14))
    {
      v17 = sub_100004380(&qword_100061D18);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(__dst, v27, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v14);
    }
    v19 = *(int *)(a3 + 48);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for Date(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100004380(&qword_100061780);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return v4;
}

uint64_t sub_10004A718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  v4 = a1 + *(int *)(a2 + 44);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 48);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t sub_10004A808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  const void *v25;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(void **)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(void **)(a2 + 72);
  v11 = *(int *)(a3 + 44);
  __dst = (void *)(a1 + v11);
  v25 = (const void *)(a2 + v11);
  *(_QWORD *)(a1 + 72) = v10;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v14 = v8;
  swift_bridgeObjectRetain(v9);
  v15 = v10;
  if (v24(v25, 1, v12))
  {
    v16 = sub_100004380(&qword_100061D18);
    memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v25, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v17 = *(int *)(a3 + 48);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100004380(&qword_100061780);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_10004A9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(void **)(a1 + 56);
  v13 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v13;
  v14 = v13;

  v15 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = *(void **)(a1 + 72);
  v18 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  v19 = v18;

  v20 = *(int *)(a3 + 44);
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_6:
    v28 = sub_100004380(&qword_100061D18);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_7:
  v29 = *(int *)(a3 + 48);
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    v37 = sub_100004380(&qword_100061780);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_10004AC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 44);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_100004380(&qword_100061D18);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = *(int *)(a3 + 48);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100004380(&qword_100061780);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_10004ADBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(v13);
  v14 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v15 = *(int *)(a3 + 44);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    v23 = sub_100004380(&qword_100061D18);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  v24 = *(int *)(a3 + 48);
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = type metadata accessor for Date(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    v32 = sub_100004380(&qword_100061780);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t sub_10004AFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004B008);
}

uint64_t sub_10004B008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100004380(&qword_100061D18);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 44);
    }
    else
    {
      v10 = sub_100004380(&qword_100061780);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10004B0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004B0BC);
}

uint64_t sub_10004B0BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100004380(&qword_100061D18);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 44);
    }
    else
    {
      v10 = sub_100004380(&qword_100061780);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for WidgetTodayCard(uint64_t a1)
{
  uint64_t result;

  result = qword_1000630E0;
  if (!qword_1000630E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WidgetTodayCard);
  return result;
}

void sub_10004B19C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_100050320;
  v6[1] = &unk_100050338;
  v6[2] = &unk_100050338;
  v6[3] = &unk_100050350;
  v6[4] = &unk_100050368;
  v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[6] = &unk_100050368;
  sub_10004B27C(319, &qword_1000630F0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v6[7] = *(_QWORD *)(v2 - 8) + 64;
    sub_10004B27C(319, (unint64_t *)&unk_1000630F8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

void sub_10004B27C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_10004B2C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[3];
  if (v6)
  {
    v7 = v2[2];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(a1, v7, v6);
    swift_bridgeObjectRelease(v6);
    v8 = v2[5];
    if (v8)
    {
LABEL_3:
      v9 = v2[4];
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v8);
      String.hash(into:)(a1, v9, v8);
      swift_bridgeObjectRelease(v8);
      return;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    v8 = v2[5];
    if (v8)
      goto LABEL_3;
  }
  Hasher._combine(_:)(0);
}

uint64_t sub_10004B3A0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  double *v25;
  char v26;
  char *v27;
  char v29;
  BOOL v31;
  uint64_t v33;
  uint64_t v34;

  v4 = (int *)type metadata accessor for AppIconConfiguration(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_30:
    v29 = 0;
    return v29 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v34 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    v14 = type metadata accessor for AppIconConfiguration;
    v33 = a1;
    while (1)
    {
      sub_1000043C0(a1 + v12, (uint64_t)v10, v14);
      v15 = a2;
      v16 = a2 + v12;
      v17 = v14;
      sub_1000043C0(v16, (uint64_t)v6, v14);
      if ((static UUID.== infix(_:_:)(v10, v6) & 1) == 0)
        break;
      v18 = v4[5];
      v19 = *(void **)&v10[v18];
      v20 = *(void **)&v6[v18];
      if (v19)
      {
        if (!v20)
          break;
        sub_10000B04C(0, &qword_100060C98, UIImage_ptr);
        v21 = v20;
        v22 = v19;
        v23 = static NSObject.== infix(_:_:)();

        if ((v23 & 1) == 0)
          break;
      }
      else if (v20)
      {
        break;
      }
      v24 = v4[6];
      v25 = (double *)&v10[v24];
      v26 = v10[v24 + 16];
      v27 = &v6[v24];
      if ((v26 & 1) != 0)
      {
        if (!v27[16])
          break;
      }
      else
      {
        if ((v27[16] & 1) != 0)
          break;
        if (*v25 != *(double *)v27 || v25[1] != *((double *)v27 + 1))
          break;
      }
      if (v10[v4[7]] != v6[v4[7]] || v10[v4[8]] != v6[v4[8]])
        break;
      v29 = static WidgetAccentedRenderingMode.== infix(_:_:)(&v10[v4[9]], &v6[v4[9]]);
      v14 = v17;
      sub_10000A7A8((uint64_t)v6, v17);
      sub_10000A7A8((uint64_t)v10, v17);
      v31 = v13-- != 0;
      if ((v29 & 1) != 0)
      {
        v12 += v34;
        a2 = v15;
        a1 = v33;
        if (v31)
          continue;
      }
      return v29 & 1;
    }
    sub_10000A7A8((uint64_t)v6, type metadata accessor for AppIconConfiguration);
    sub_10000A7A8((uint64_t)v10, type metadata accessor for AppIconConfiguration);
    goto LABEL_30;
  }
  v29 = 1;
  return v29 & 1;
}

uint64_t sub_10004B5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  void *object;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  _QWORD v45[2];

  v1 = v0;
  v2 = 6369134;
  v3 = sub_100004380(&qword_100061D18);
  __chkstk_darwin(v3);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(94);
  v6._countAndFlagsBits = 540689481;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  v7 = *(_QWORD *)v0;
  v8 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10._countAndFlagsBits = 0x644979726F74730ALL;
  v10._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v10);
  swift_bridgeObjectRetain(v8);
  v11._countAndFlagsBits = v7;
  v11._object = v8;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v8);
  v12._countAndFlagsBits = 0x676E69646165680ALL;
  v12._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v12);
  v13 = *(_QWORD *)(v0 + 24);
  if (v13)
  {
    v14 = *(_QWORD *)(v0 + 16);
    v15 = *(void **)(v0 + 24);
  }
  else
  {
    v15 = (void *)0xE300000000000000;
    v14 = 6369134;
  }
  swift_bridgeObjectRetain(v13);
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  v17._countAndFlagsBits = 0x203A656C7469740ALL;
  v17._object = (void *)0xE800000000000000;
  String.append(_:)(v17);
  v18 = *(_QWORD *)(v0 + 40);
  if (v18)
  {
    v19 = *(_QWORD *)(v0 + 32);
    v20 = *(void **)(v0 + 40);
  }
  else
  {
    v20 = (void *)0xE300000000000000;
    v19 = 6369134;
  }
  swift_bridgeObjectRetain(v18);
  v21._countAndFlagsBits = v19;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x3A6B72614473690ALL;
  v22._object = (void *)0xE900000000000020;
  String.append(_:)(v22);
  if (*(_BYTE *)(v0 + 48))
    v23 = 1702195828;
  else
    v23 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 48))
    v24 = 0xE400000000000000;
  else
    v24 = 0xE500000000000000;
  v25 = v24;
  String.append(_:)(*(Swift::String *)&v23);
  swift_bridgeObjectRelease(v24);
  v26._object = (void *)0x800000010005A5A0;
  v26._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v26);
  v27 = *(_QWORD *)(v0 + 56);
  if (v27)
    v28 = 1702195828;
  else
    v28 = 0x65736C6166;
  if (v27)
    v29 = 0xE400000000000000;
  else
    v29 = 0xE500000000000000;
  v30 = v29;
  String.append(_:)(*(Swift::String *)&v28);
  swift_bridgeObjectRelease(v29);
  v31._countAndFlagsBits = 0x203A736E6F63690ALL;
  v31._object = (void *)0xE800000000000000;
  String.append(_:)(v31);
  v32 = *(_QWORD *)(v0 + 64);
  v33 = type metadata accessor for AppIconConfiguration(0);
  v34 = swift_bridgeObjectRetain(v32);
  v35._countAndFlagsBits = Array.description.getter(v34, v33);
  object = v35._object;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(object);
  v37._countAndFlagsBits = 0x203A6C72750ALL;
  v37._object = (void *)0xE600000000000000;
  String.append(_:)(v37);
  v38 = type metadata accessor for WidgetTodayCard(0);
  sub_10004B9FC(v1 + *(int *)(v38 + 44), (uint64_t)v5);
  v39 = type metadata accessor for URL(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v5, 1, v39) == 1)
  {
    sub_100004810((uint64_t)v5, &qword_100061D18);
    v41 = (void *)0xE300000000000000;
  }
  else
  {
    v2 = URL.absoluteString.getter();
    v41 = v42;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v39);
  }
  v43._countAndFlagsBits = v2;
  v43._object = v41;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v41);
  return v45[0];
}

uint64_t sub_10004B938@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_10004B944()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10004B2C8((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10004B984(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10004B2C8((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_10004B9C4()
{
  return sub_100008DD8(&qword_100063148, type metadata accessor for WidgetTodayCard, (uint64_t)&unk_100050380);
}

void *sub_10004B9F0()
{
  return &protocol witness table for String;
}

uint64_t sub_10004B9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004380(&qword_100061D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004BA44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  char v63;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  int v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  char v75;
  _BYTE *v76;
  id v77;
  id v78;
  char v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  char v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  void (*v96)(_BYTE *, uint64_t);
  _BYTE v97[12];
  int v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;

  v105 = type metadata accessor for URL(0);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v5 = &v97[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100004380(&qword_100061D18);
  __chkstk_darwin(v6);
  v100 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100004380(&qword_100063150);
  __chkstk_darwin(v8);
  v104 = &v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for WidgetTodayCard(0);
  __chkstk_darwin(v10);
  v110 = &v97[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v97[-v13];
  __chkstk_darwin(v15);
  v108 = &v97[-v16];
  __chkstk_darwin(v17);
  v109 = &v97[-v18];
  __chkstk_darwin(v19);
  v106 = &v97[-v20];
  __chkstk_darwin(v21);
  v113 = &v97[-v22];
  __chkstk_darwin(v23);
  v112 = &v97[-v24];
  __chkstk_darwin(v25);
  v107 = &v97[-v26];
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  v30 = &v97[-v29];
  __chkstk_darwin(v31);
  v33 = &v97[-v32];
  __chkstk_darwin(v34);
  v36 = &v97[-v35];
  __chkstk_darwin(v37);
  v39 = &v97[-v38];
  v42 = __chkstk_darwin(v40);
  v43 = &v97[-v41];
  v44 = a1[1];
  v45 = a2[1];
  v46 = *a1 == *a2;
  v99 = v5;
  v101 = v47;
  v102 = v8;
  v114 = v14;
  v111 = v48;
  if (v46 && v44 == v45)
  {
    sub_1000043C0((uint64_t)a1, (uint64_t)&v97[-v41], type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a2, (uint64_t)v39, type metadata accessor for WidgetTodayCard);
  }
  else
  {
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v42);
    sub_1000043C0((uint64_t)a1, (uint64_t)v43, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a2, (uint64_t)v39, type metadata accessor for WidgetTodayCard);
    if ((v50 & 1) == 0)
    {
      sub_10000A7A8((uint64_t)v39, type metadata accessor for WidgetTodayCard);
      sub_10000A7A8((uint64_t)v43, type metadata accessor for WidgetTodayCard);
LABEL_17:
      v56 = v113;
      v55 = (uint64_t)v107;
      sub_1000043C0((uint64_t)a1, (uint64_t)v36, type metadata accessor for WidgetTodayCard);
      sub_1000043C0((uint64_t)a2, (uint64_t)v33, type metadata accessor for WidgetTodayCard);
      goto LABEL_18;
    }
  }
  v51 = *((_QWORD *)v43 + 3);
  v52 = *((_QWORD *)v39 + 3);
  if (!v51)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v39 + 3));
    sub_10000A7A8((uint64_t)v39, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v43, type metadata accessor for WidgetTodayCard);
    if (!v52)
      goto LABEL_13;
    v53 = v52;
    goto LABEL_16;
  }
  if (!v52)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v43 + 3));
    sub_10000A7A8((uint64_t)v39, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v43, type metadata accessor for WidgetTodayCard);
    v53 = v51;
LABEL_16:
    swift_bridgeObjectRelease(v53);
    goto LABEL_17;
  }
  if (*((_QWORD *)v43 + 2) == *((_QWORD *)v39 + 2) && v51 == v52)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v43 + 3));
    sub_10000A7A8((uint64_t)v39, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v43, type metadata accessor for WidgetTodayCard);
    swift_bridgeObjectRelease(v51);
LABEL_13:
    sub_1000043C0((uint64_t)a1, (uint64_t)v36, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a2, (uint64_t)v33, type metadata accessor for WidgetTodayCard);
    v55 = (uint64_t)v107;
    goto LABEL_30;
  }
  v98 = _stringCompareWithSmolCheck(_:_:expecting:)(v49);
  swift_bridgeObjectRetain(v51);
  sub_10000A7A8((uint64_t)v39, type metadata accessor for WidgetTodayCard);
  sub_10000A7A8((uint64_t)v43, type metadata accessor for WidgetTodayCard);
  swift_bridgeObjectRelease(v51);
  sub_1000043C0((uint64_t)a1, (uint64_t)v36, type metadata accessor for WidgetTodayCard);
  sub_1000043C0((uint64_t)a2, (uint64_t)v33, type metadata accessor for WidgetTodayCard);
  v56 = v113;
  v55 = (uint64_t)v107;
  if ((v98 & 1) == 0)
  {
LABEL_18:
    sub_10000A7A8((uint64_t)v33, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v36, type metadata accessor for WidgetTodayCard);
    v57 = (uint64_t)v109;
    v58 = (uint64_t)v110;
    v59 = (uint64_t)v108;
LABEL_19:
    sub_1000043C0((uint64_t)a1, (uint64_t)v30, type metadata accessor for WidgetTodayCard);
    v60 = v111;
    sub_1000043C0((uint64_t)a2, v111, type metadata accessor for WidgetTodayCard);
    goto LABEL_20;
  }
LABEL_30:
  v65 = *((_QWORD *)v36 + 5);
  v66 = *((_QWORD *)v33 + 5);
  if (!v65)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v33 + 5));
    sub_10000A7A8((uint64_t)v33, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v36, type metadata accessor for WidgetTodayCard);
    v57 = (uint64_t)v109;
    v58 = (uint64_t)v110;
    v59 = (uint64_t)v108;
    v56 = v113;
    if (!v66)
      goto LABEL_37;
    swift_bridgeObjectRelease(v66);
    goto LABEL_19;
  }
  if (!v66)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v36 + 5));
    sub_10000A7A8((uint64_t)v33, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v36, type metadata accessor for WidgetTodayCard);
    swift_bridgeObjectRelease(v65);
    v57 = (uint64_t)v109;
    v58 = (uint64_t)v110;
    v59 = (uint64_t)v108;
    v56 = v113;
    goto LABEL_19;
  }
  if (*((_QWORD *)v36 + 4) == *((_QWORD *)v33 + 4) && v65 == v66)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v36 + 5));
    sub_10000A7A8((uint64_t)v33, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v36, type metadata accessor for WidgetTodayCard);
    swift_bridgeObjectRelease(v65);
    v57 = (uint64_t)v109;
    v58 = (uint64_t)v110;
    v59 = (uint64_t)v108;
LABEL_37:
    sub_1000043C0((uint64_t)a1, (uint64_t)v30, type metadata accessor for WidgetTodayCard);
    v60 = v111;
    sub_1000043C0((uint64_t)a2, v111, type metadata accessor for WidgetTodayCard);
    goto LABEL_40;
  }
  v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v54);
  swift_bridgeObjectRetain(v65);
  sub_10000A7A8((uint64_t)v33, type metadata accessor for WidgetTodayCard);
  sub_10000A7A8((uint64_t)v36, type metadata accessor for WidgetTodayCard);
  swift_bridgeObjectRelease(v65);
  sub_1000043C0((uint64_t)a1, (uint64_t)v30, type metadata accessor for WidgetTodayCard);
  v60 = v111;
  sub_1000043C0((uint64_t)a2, v111, type metadata accessor for WidgetTodayCard);
  v57 = (uint64_t)v109;
  v58 = (uint64_t)v110;
  v59 = (uint64_t)v108;
  v56 = v113;
  if ((v67 & 1) == 0)
  {
LABEL_20:
    sub_10000A7A8(v60, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v30, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a1, v55, type metadata accessor for WidgetTodayCard);
    v61 = v112;
    sub_1000043C0((uint64_t)a2, (uint64_t)v112, type metadata accessor for WidgetTodayCard);
LABEL_21:
    sub_10000A7A8((uint64_t)v61, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8(v55, type metadata accessor for WidgetTodayCard);
    v62 = v106;
LABEL_22:
    sub_1000043C0((uint64_t)a1, (uint64_t)v56, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a2, (uint64_t)v62, type metadata accessor for WidgetTodayCard);
LABEL_23:
    sub_10000A7A8((uint64_t)v56, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v62, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a1, v57, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a2, v59, type metadata accessor for WidgetTodayCard);
LABEL_24:
    sub_10000A7A8(v59, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8(v57, type metadata accessor for WidgetTodayCard);
LABEL_25:
    sub_1000043C0((uint64_t)a1, (uint64_t)v114, type metadata accessor for WidgetTodayCard);
    sub_1000043C0((uint64_t)a2, v58, type metadata accessor for WidgetTodayCard);
LABEL_26:
    sub_10000A7A8(v58, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v114, type metadata accessor for WidgetTodayCard);
    goto LABEL_27;
  }
LABEL_40:
  LODWORD(v110) = v30[48];
  sub_10000A7A8((uint64_t)v30, type metadata accessor for WidgetTodayCard);
  v68 = v58;
  v69 = *(unsigned __int8 *)(v60 + 48);
  sub_10000A7A8(v60, type metadata accessor for WidgetTodayCard);
  sub_1000043C0((uint64_t)a1, v55, type metadata accessor for WidgetTodayCard);
  v61 = v112;
  sub_1000043C0((uint64_t)a2, (uint64_t)v112, type metadata accessor for WidgetTodayCard);
  v46 = (_DWORD)v110 == v69;
  v58 = v68;
  v56 = v113;
  if (!v46)
    goto LABEL_21;
  v70 = *(void **)(v55 + 56);
  v71 = (void *)*((_QWORD *)v61 + 7);
  if (!v70)
  {
    v77 = v71;
    sub_10000A7A8((uint64_t)v61, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8(v55, type metadata accessor for WidgetTodayCard);
    if (!v71)
    {
      v56 = v113;
      sub_1000043C0((uint64_t)a1, (uint64_t)v113, type metadata accessor for WidgetTodayCard);
      v62 = v106;
      sub_1000043C0((uint64_t)a2, (uint64_t)v106, type metadata accessor for WidgetTodayCard);
      goto LABEL_51;
    }

LABEL_49:
    v62 = v106;
    v56 = v113;
    goto LABEL_22;
  }
  if (!v71)
  {
    v78 = v70;
    sub_10000A7A8((uint64_t)v112, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8(v55, type metadata accessor for WidgetTodayCard);

    goto LABEL_49;
  }
  sub_10000B04C(0, &qword_100060C98, UIImage_ptr);
  v72 = v55;
  v73 = v71;
  v74 = v70;
  v75 = static NSObject.== infix(_:_:)();
  sub_10000A7A8((uint64_t)v112, type metadata accessor for WidgetTodayCard);
  sub_10000A7A8(v72, type metadata accessor for WidgetTodayCard);

  v76 = v113;
  sub_1000043C0((uint64_t)a1, (uint64_t)v113, type metadata accessor for WidgetTodayCard);
  v62 = v106;
  v56 = v76;
  sub_1000043C0((uint64_t)a2, (uint64_t)v106, type metadata accessor for WidgetTodayCard);
  if ((v75 & 1) == 0)
    goto LABEL_23;
LABEL_51:
  v79 = sub_10004B3A0(*((_QWORD *)v56 + 8), *((_QWORD *)v62 + 8));
  sub_10000A7A8((uint64_t)v56, type metadata accessor for WidgetTodayCard);
  sub_10000A7A8((uint64_t)v62, type metadata accessor for WidgetTodayCard);
  sub_1000043C0((uint64_t)a1, v57, type metadata accessor for WidgetTodayCard);
  sub_1000043C0((uint64_t)a2, v59, type metadata accessor for WidgetTodayCard);
  if ((v79 & 1) == 0)
    goto LABEL_24;
  v80 = *(void **)(v57 + 72);
  v81 = *(void **)(v59 + 72);
  if (!v80)
  {
    v85 = v81;
    sub_10000A7A8(v59, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8(v57, type metadata accessor for WidgetTodayCard);
    if (!v81)
    {
      sub_1000043C0((uint64_t)a1, (uint64_t)v114, type metadata accessor for WidgetTodayCard);
      sub_1000043C0((uint64_t)a2, v58, type metadata accessor for WidgetTodayCard);
      goto LABEL_58;
    }
LABEL_62:

    goto LABEL_25;
  }
  if (!v81)
  {
    v85 = v80;
    sub_10000A7A8(v59, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8(v57, type metadata accessor for WidgetTodayCard);
    goto LABEL_62;
  }
  sub_10000B04C(0, (unint64_t *)&qword_100060F40, UIColor_ptr);
  v82 = v81;
  v83 = v80;
  v84 = static NSObject.== infix(_:_:)();
  sub_10000A7A8(v59, type metadata accessor for WidgetTodayCard);
  sub_10000A7A8(v57, type metadata accessor for WidgetTodayCard);

  sub_1000043C0((uint64_t)a1, (uint64_t)v114, type metadata accessor for WidgetTodayCard);
  sub_1000043C0((uint64_t)a2, v58, type metadata accessor for WidgetTodayCard);
  if ((v84 & 1) == 0)
    goto LABEL_26;
LABEL_58:
  v86 = *(int *)(v101 + 44);
  v87 = v58 + v86;
  v88 = v104;
  v89 = (uint64_t)&v104[*(int *)(v102 + 48)];
  sub_10004B9FC((uint64_t)&v114[v86], (uint64_t)v104);
  sub_10004B9FC(v87, v89);
  v90 = v103;
  v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
  v92 = v105;
  if (v91((uint64_t)v88, 1, v105) == 1)
  {
    sub_10000A7A8(v58, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v114, type metadata accessor for WidgetTodayCard);
    if (v91(v89, 1, v92) == 1)
    {
      sub_100004810((uint64_t)v88, &qword_100061D18);
      v63 = 1;
      return v63 & 1;
    }
  }
  else
  {
    v93 = v100;
    sub_10004B9FC((uint64_t)v88, (uint64_t)v100);
    if (v91(v89, 1, v92) != 1)
    {
      v94 = v99;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v90 + 32))(v99, v89, v92);
      v95 = sub_100008DD8(&qword_100062C10, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v63 = dispatch thunk of static Equatable.== infix(_:_:)(v93, v94, v92, v95);
      v96 = *(void (**)(_BYTE *, uint64_t))(v90 + 8);
      v96(v94, v92);
      sub_10000A7A8(v58, type metadata accessor for WidgetTodayCard);
      sub_10000A7A8((uint64_t)v114, type metadata accessor for WidgetTodayCard);
      v96(v93, v92);
      sub_100004810((uint64_t)v88, &qword_100061D18);
      return v63 & 1;
    }
    sub_10000A7A8(v58, type metadata accessor for WidgetTodayCard);
    sub_10000A7A8((uint64_t)v114, type metadata accessor for WidgetTodayCard);
    (*(void (**)(_BYTE *, uint64_t))(v90 + 8))(v93, v92);
  }
  sub_100004810((uint64_t)v88, &qword_100063150);
LABEL_27:
  v63 = 0;
  return v63 & 1;
}

uint64_t sub_10004C728()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC24AppStoreWidgetsExtensionP33_BD44AD855294289791083CA1AB87AEF219ResourceBundleClass);
}
